

Microchip Technology PIC18 LITE Macro Assembler V1.34 build -361300703 
                                                                                               Tue Jun 07 19:27:26 2016

Microchip Technology Omniscient Code Generator (Lite mode) build 201502162209
     1                           	processor	18F4685
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	idataBANK0,global,class=CODE,delta=1
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bitbssCOMRAM,global,bit,class=COMRAM,space=1,delta=1
    10                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
    11                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    12                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    14                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    15                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    16                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    17                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    18                           	psect	text0,global,reloc=2,class=CODE,delta=1
    19                           	psect	text1,global,reloc=2,class=CODE,delta=1
    20                           	psect	text2,global,reloc=2,class=CODE,delta=1
    21                           	psect	text3,global,reloc=2,class=CODE,delta=1
    22                           	psect	text4,global,reloc=2,class=CODE,delta=1
    23                           	psect	text5,global,reloc=2,class=CODE,delta=1
    24                           	psect	text6,global,reloc=2,class=CODE,delta=1
    25                           	psect	text7,global,reloc=2,class=CODE,delta=1
    26                           	psect	text8,global,reloc=2,class=CODE,delta=1
    27                           	psect	text9,global,reloc=2,class=CODE,delta=1
    28                           	psect	text10,global,reloc=2,class=CODE,delta=1
    29                           	psect	text11,global,reloc=2,class=CODE,delta=1
    30                           	psect	text12,global,reloc=2,class=CODE,delta=1
    31                           	psect	text13,global,reloc=2,class=CODE,delta=1
    32                           	psect	text14,global,reloc=2,class=CODE,delta=1
    33                           	psect	text15,global,reloc=2,class=CODE,delta=1
    34                           	psect	text16,global,reloc=2,class=CODE,delta=1
    35                           	psect	text17,global,reloc=2,class=CODE,delta=1
    36                           	psect	text18,global,reloc=2,class=CODE,delta=1
    37                           	psect	text19,global,reloc=2,class=CODE,delta=1
    38                           	psect	text20,global,reloc=2,class=CODE,delta=1
    39                           	psect	text21,global,reloc=2,class=CODE,delta=1
    40                           	psect	text22,global,reloc=2,class=CODE,delta=1
    41                           	psect	text23,global,reloc=2,class=CODE,delta=1
    42                           	psect	text24,global,reloc=2,class=CODE,delta=1
    43                           	psect	text25,global,reloc=2,class=CODE,delta=1
    44                           	psect	text26,global,reloc=2,class=CODE,delta=1
    45                           	psect	text27,global,reloc=2,class=CODE,delta=1
    46                           	psect	text28,global,reloc=2,class=CODE,delta=1
    47                           	psect	text29,global,reloc=2,class=CODE,delta=1
    48                           	psect	text30,global,reloc=2,class=CODE,delta=1
    49                           	psect	text31,global,reloc=2,class=CODE,delta=1
    50                           	psect	text32,global,reloc=2,class=CODE,delta=1
    51                           	psect	text33,global,reloc=2,class=CODE,delta=1
    52                           	psect	text34,global,reloc=2,class=CODE,delta=1
    53                           	psect	text35,global,reloc=2,class=CODE,delta=1
    54                           	psect	text36,global,reloc=2,class=CODE,delta=1
    55                           	psect	text37,global,reloc=2,class=CODE,delta=1
    56                           	psect	text38,global,reloc=2,class=CODE,delta=1
    57                           	psect	text39,global,reloc=2,class=CODE,delta=1
    58                           	psect	text40,global,reloc=2,class=CODE,delta=1
    59                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    60                           	psect	text42,global,reloc=2,class=CODE,delta=1
    61                           	psect	text43,global,reloc=2,class=CODE,delta=1
    62                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    63                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    64  0000                     
    65                           	psect	idataCOMRAM
    66  004EF6                     __pidataCOMRAM:
    67                           	opt stack 0
    68                           
    69                           ;initializer for _delay_quartz_frequency_value
    70  004EF6  10                 	db	16
    71                           
    72                           	psect	idataBANK0
    73  004EF4                     __pidataBANK0:
    74                           	opt stack 0
    75                           
    76                           ;initializer for _dir
    77  004EF4  0001               	dw	1
    78                           
    79                           	psect	smallconst
    80  000D00                     __psmallconst:
    81                           	opt stack 0
    82  000D00  00                 	db	0
    83  000D01                     exp@coeff:
    84                           	opt stack 0
    85  000D01  0000               	dw	0
    86  000D03  3F80               	dw	16256
    87  000D05  7218               	dw	29208
    88  000D07  3F31               	dw	16177
    89  000D09  FDF0               	dw	65008
    90  000D0B  3E75               	dw	15989
    91  000D0D  5847               	dw	22599
    92  000D0F  3D63               	dw	15715
    93  000D11  9558               	dw	38232
    94  000D13  3C1D               	dw	15389
    95  000D15  C482               	dw	50306
    96  000D17  3AAE               	dw	15022
    97  000D19  78A8               	dw	30888
    98  000D1B  3921               	dw	14625
    99  000D1D  93EF               	dw	37871
   100  000D1F  3780               	dw	14208
   101  000D21  92A0               	dw	37536
   102  000D23  35A7               	dw	13735
   103  000D25  5646               	dw	22086
   104  000D27  3415               	dw	13333
   105  000D29                     __end_ofexp@coeff:
   106                           	opt stack 0
   107  000D29                     log@coeff:
   108                           	opt stack 0
   109  000D29  0000               	dw	0
   110  000D2B  0000               	dw	0
   111  000D2D  FFC4               	dw	65476
   112  000D2F  3F7F               	dw	16255
   113  000D31  EF80               	dw	61312
   114  000D33  BEFF               	dw	48895
   115  000D35  E190               	dw	57744
   116  000D37  3EA9               	dw	16041
   117  000D39  82EC               	dw	33516
   118  000D3B  BE76               	dw	48758
   119  000D3D  AD82               	dw	44418
   120  000D3F  3E2B               	dw	15915
   121  000D41  3C0E               	dw	15374
   122  000D43  BDC3               	dw	48579
   123  000D45  D187               	dw	53639
   124  000D47  3D13               	dw	15635
   125  000D49  7841               	dw	30785
   126  000D4B  BBD3               	dw	48083
   127  000D4D                     __end_oflog@coeff:
   128                           	opt stack 0
   129  0000                     _RXB1CON	set	3920
   130  0000                     _RXB1CONbits	set	3920
   131  0000                     _RXB1D0	set	3926
   132  0000                     _RXB1D1	set	3927
   133  0000                     _RXB1D2	set	3928
   134  0000                     _RXB1D3	set	3929
   135  0000                     _RXB1D4	set	3930
   136  0000                     _RXB1D5	set	3931
   137  0000                     _RXB1D6	set	3932
   138  0000                     _RXB1D7	set	3933
   139  0000                     _RXB1DLC	set	3925
   140  0000                     _RXB1DLCbits	set	3925
   141  0000                     _RXB1EIDH	set	3923
   142  0000                     _RXB1EIDL	set	3924
   143  0000                     _RXB1SIDH	set	3921
   144  0000                     _RXB1SIDL	set	3922
   145  0000                     _RXB1SIDLbits	set	3922
   146  0000                     _RXF0EIDH	set	3842
   147  0000                     _RXF0EIDL	set	3843
   148  0000                     _RXF0SIDH	set	3840
   149  0000                     _RXF0SIDL	set	3841
   150  0000                     _RXF0SIDLbits	set	3841
   151  0000                     _RXF1EIDH	set	3846
   152  0000                     _RXF1EIDL	set	3847
   153  0000                     _RXF1SIDH	set	3844
   154  0000                     _RXF1SIDL	set	3845
   155  0000                     _RXF1SIDLbits	set	3845
   156  0000                     _RXF2EIDH	set	3850
   157  0000                     _RXF2EIDL	set	3851
   158  0000                     _RXF2SIDH	set	3848
   159  0000                     _RXF2SIDL	set	3849
   160  0000                     _RXF2SIDLbits	set	3849
   161  0000                     _RXF3EIDH	set	3854
   162  0000                     _RXF3EIDL	set	3855
   163  0000                     _RXF3SIDH	set	3852
   164  0000                     _RXF3SIDL	set	3853
   165  0000                     _RXF3SIDLbits	set	3853
   166  0000                     _RXF4EIDH	set	3858
   167  0000                     _RXF4EIDL	set	3859
   168  0000                     _RXF4SIDH	set	3856
   169  0000                     _RXF4SIDL	set	3857
   170  0000                     _RXF4SIDLbits	set	3857
   171  0000                     _RXF5EIDH	set	3862
   172  0000                     _RXF5EIDL	set	3863
   173  0000                     _RXF5SIDH	set	3860
   174  0000                     _RXF5SIDL	set	3861
   175  0000                     _RXF5SIDLbits	set	3861
   176  0000                     _RXM0EIDH	set	3866
   177  0000                     _RXM0EIDL	set	3867
   178  0000                     _RXM0SIDH	set	3864
   179  0000                     _RXM0SIDL	set	3865
   180  0000                     _RXM0SIDLbits	set	3865
   181  0000                     _RXM1EIDH	set	3870
   182  0000                     _RXM1EIDL	set	3871
   183  0000                     _RXM1SIDH	set	3868
   184  0000                     _RXM1SIDL	set	3869
   185  0000                     _RXM1SIDLbits	set	3869
   186  0000                     _TXB0CONbits	set	3904
   187  0000                     _TXB0D0	set	3910
   188  0000                     _TXB0D1	set	3911
   189  0000                     _TXB0D2	set	3912
   190  0000                     _TXB0D3	set	3913
   191  0000                     _TXB0D4	set	3914
   192  0000                     _TXB0D5	set	3915
   193  0000                     _TXB0D6	set	3916
   194  0000                     _TXB0D7	set	3917
   195  0000                     _TXB0DLC	set	3909
   196  0000                     _TXB0DLCbits	set	3909
   197  0000                     _TXB0EIDH	set	3907
   198  0000                     _TXB0EIDL	set	3908
   199  0000                     _TXB0SIDH	set	3905
   200  0000                     _TXB0SIDL	set	3906
   201  0000                     _TXB0SIDLbits	set	3906
   202  0000                     _TXB1CONbits	set	3888
   203  0000                     _TXB1D0	set	3894
   204  0000                     _TXB1D1	set	3895
   205  0000                     _TXB1D2	set	3896
   206  0000                     _TXB1D3	set	3897
   207  0000                     _TXB1D4	set	3898
   208  0000                     _TXB1D5	set	3899
   209  0000                     _TXB1D6	set	3900
   210  0000                     _TXB1D7	set	3901
   211  0000                     _TXB1DLC	set	3893
   212  0000                     _TXB1DLCbits	set	3893
   213  0000                     _TXB1EIDH	set	3891
   214  0000                     _TXB1EIDL	set	3892
   215  0000                     _TXB1SIDH	set	3889
   216  0000                     _TXB1SIDL	set	3890
   217  0000                     _TXB1SIDLbits	set	3890
   218  0000                     _TXB2CONbits	set	3872
   219  0000                     _TXB2D0	set	3878
   220  0000                     _TXB2D1	set	3879
   221  0000                     _TXB2D2	set	3880
   222  0000                     _TXB2D3	set	3881
   223  0000                     _TXB2D4	set	3882
   224  0000                     _TXB2D5	set	3883
   225  0000                     _TXB2D6	set	3884
   226  0000                     _TXB2D7	set	3885
   227  0000                     _TXB2DLC	set	3877
   228  0000                     _TXB2DLCbits	set	3877
   229  0000                     _TXB2EIDH	set	3875
   230  0000                     _TXB2EIDL	set	3876
   231  0000                     _TXB2SIDH	set	3873
   232  0000                     _TXB2SIDL	set	3874
   233  0000                     _TXB2SIDLbits	set	3874
   234  0000                     _ADCON0bits	set	4034
   235  0000                     _ADCON1bits	set	4033
   236  0000                     _ADCON2bits	set	4032
   237  0000                     _ADRESH	set	4036
   238  0000                     _BRGCON1	set	3952
   239  0000                     _BRGCON2	set	3953
   240  0000                     _BRGCON2bits	set	3953
   241  0000                     _BRGCON3	set	3954
   242  0000                     _BRGCON3bits	set	3954
   243  0000                     _CANCON	set	3951
   244  0000                     _CANCONbits	set	3951
   245  0000                     _CANSTAT	set	3950
   246  0000                     _COMSTATbits	set	3956
   247  0000                     _ECCP1CON	set	4026
   248  0000                     _ECCPR1L	set	4027
   249  0000                     _INTCONbits	set	4082
   250  0000                     _IPR2bits	set	4002
   251  0000                     _IPR3bits	set	4005
   252  0000                     _LATA	set	3977
   253  0000                     _LATB	set	3978
   254  0000                     _LATC	set	3979
   255  0000                     _LATD	set	3980
   256  0000                     _LATE	set	3981
   257  0000                     _PIE1bits	set	3997
   258  0000                     _PIE2bits	set	4000
   259  0000                     _PIE3bits	set	4003
   260  0000                     _PIR1bits	set	3998
   261  0000                     _PIR2bits	set	4001
   262  0000                     _PIR3bits	set	4004
   263  0000                     _PORTAbits	set	3968
   264  0000                     _PORTCbits	set	3970
   265  0000                     _PR2	set	4043
   266  0000                     _RCONbits	set	4048
   267  0000                     _RXB0CON	set	3936
   268  0000                     _RXB0CONbits	set	3936
   269  0000                     _RXB0D0	set	3942
   270  0000                     _RXB0D1	set	3943
   271  0000                     _RXB0D2	set	3944
   272  0000                     _RXB0D3	set	3945
   273  0000                     _RXB0D4	set	3946
   274  0000                     _RXB0D5	set	3947
   275  0000                     _RXB0D6	set	3948
   276  0000                     _RXB0D7	set	3949
   277  0000                     _RXB0DLC	set	3941
   278  0000                     _RXB0DLCbits	set	3941
   279  0000                     _RXB0EIDH	set	3939
   280  0000                     _RXB0EIDL	set	3940
   281  0000                     _RXB0SIDH	set	3937
   282  0000                     _RXB0SIDL	set	3938
   283  0000                     _RXB0SIDLbits	set	3938
   284  0000                     _RXERRCNT	set	3957
   285  0000                     _T2CON	set	4042
   286  0000                     _T2CONbits	set	4042
   287  0000                     _T3CON	set	4017
   288  0000                     _TMR2	set	4044
   289  0000                     _TMR3H	set	4019
   290  0000                     _TMR3L	set	4018
   291  0000                     _TRISA	set	3986
   292  0000                     _TRISB	set	3987
   293  0000                     _TRISC	set	3988
   294  0000                     _TRISD	set	3989
   295  0000                     _TRISDbits	set	3989
   296  0000                     _TRISE	set	3990
   297  0000                     _TXERRCNT	set	3958
   298                           
   299                           ; #config settings
   300  000D4D  00                 	db	0	; dummy byte at the end
   301  0000                     
   302                           	psect	cinit
   303  004B4A                     __pcinit:
   304                           	opt stack 0
   305  004B4A                     start_initialization:
   306                           	opt stack 0
   307  004B4A                     __initialization:
   308                           	opt stack 0
   309                           
   310                           ; Clear objects allocated to BANK1 (16 bytes)
   311  004B4A  EE01  F019         	lfsr	0,__pbssBANK1
   312  004B4E  0E10               	movlw	16
   313  004B50                     clear_0:
   314  004B50  6AEE               	clrf	postinc0,c
   315  004B52  06E8               	decf	wreg,f,c
   316  004B54  E1FD               	bnz	clear_0
   317                           
   318                           ; Clear objects allocated to BANK0 (62 bytes)
   319  004B56  EE00  F0BF         	lfsr	0,__pbssBANK0
   320  004B5A  0E3E               	movlw	62
   321  004B5C                     clear_1:
   322  004B5C  6AEE               	clrf	postinc0,c
   323  004B5E  06E8               	decf	wreg,f,c
   324  004B60  E1FD               	bnz	clear_1
   325                           
   326                           ; Clear objects allocated to BITCOMRAM (2 bytes)
   327  004B62  6A40               	clrf	((__pbitbssCOMRAM/(0+8)+1))& (0+255),c
   328  004B64  6A3F               	clrf	(__pbitbssCOMRAM/(0+8))& (0+255),c
   329                           
   330                           ; Clear objects allocated to COMRAM (28 bytes)
   331  004B66  EE00  F023         	lfsr	0,__pbssCOMRAM
   332  004B6A  0E1C               	movlw	28
   333  004B6C                     clear_2:
   334  004B6C  6AEE               	clrf	postinc0,c
   335  004B6E  06E8               	decf	wreg,f,c
   336  004B70  E1FD               	bnz	clear_2
   337                           
   338                           ; Initialize objects allocated to BANK0 (2 bytes)
   339                           ; load TBLPTR registers with __pidataBANK0
   340  004B72  0EF4               	movlw	low __pidataBANK0
   341  004B74  6EF6               	movwf	tblptrl,c
   342  004B76  0E4E               	movlw	high __pidataBANK0
   343  004B78  6EF7               	movwf	tblptrh,c
   344  004B7A  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   345  004B7C  6EF8               	movwf	tblptru,c
   346  004B7E  0009               	tblrd		*+	;fetch initializer
   347  004B80  CFF5 F0FD          	movff	tablat,__pdataBANK0
   348  004B84  0009               	tblrd		*+	;fetch initializer
   349  004B86  CFF5 F0FE          	movff	tablat,__pdataBANK0+1
   350                           
   351                           ; Initialize objects allocated to COMRAM (1 bytes)
   352                           ; load TBLPTR registers with __pidataCOMRAM
   353  004B8A  0EF6               	movlw	low __pidataCOMRAM
   354  004B8C  6EF6               	movwf	tblptrl,c
   355  004B8E  0E4E               	movlw	high __pidataCOMRAM
   356  004B90  6EF7               	movwf	tblptrh,c
   357  004B92  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   358  004B94  6EF8               	movwf	tblptru,c
   359  004B96  0009               	tblrd		*+	;fetch initializer
   360  004B98  CFF5 F041          	movff	tablat,__pdataCOMRAM
   361  004B9C                     end_of_initialization:
   362                           	opt stack 0
   363  004B9C                     __end_of__initialization:
   364                           	opt stack 0
   365  004B9C  0100               	movlb	0
   366  004B9E  EF58  F017         	goto	_main	;jump to C main() function
   367                           tblptru	equ	0xFF8
   368                           tblptrh	equ	0xFF7
   369                           tblptrl	equ	0xFF6
   370                           tablat	equ	0xFF5
   371                           postinc0	equ	0xFEE
   372                           wreg	equ	0xFE8
   373                           
   374                           	psect	bitbssCOMRAM
   375  0001F8                     __pbitbssCOMRAM:
   376                           	opt stack 0
   377  0001F8                     _ECU_error:
   378                           	opt stack 0
   379  0001F8                     	ds	1
   380  0001F9                     _can_retry:
   381                           	opt stack 0
   382  0001F9                     	ds	1
   383  0001FA                     _centralina_abs:
   384                           	opt stack 0
   385  0001FA                     	ds	1
   386  0001FB                     _centralina_comando:
   387                           	opt stack 0
   388  0001FB                     	ds	1
   389  0001FC                     _centralina_sterzo:
   390                           	opt stack 0
   391  0001FC                     	ds	1
   392  0001FD                     _message_sent:
   393                           	opt stack 0
   394  0001FD                     	ds	1
   395  0001FE                     _new_message:
   396                           	opt stack 0
   397  0001FE                     	ds	1
   398  0001FF                     _remote_frame:
   399                           	opt stack 0
   400  0001FF                     	ds	1
   401  000200                     _remote_frame1:
   402                           	opt stack 0
   403  000200                     	ds	1
   404  000201                     _request_sent:
   405                           	opt stack 0
   406  000201                     	ds	1
   407  000202                     _speed_fetched:
   408                           	opt stack 0
   409  000202                     	ds	1
   410                           tblptru	equ	0xFF8
   411                           tblptrh	equ	0xFF7
   412                           tblptrl	equ	0xFF6
   413                           tablat	equ	0xFF5
   414                           postinc0	equ	0xFEE
   415                           wreg	equ	0xFE8
   416                           
   417                           	psect	bssCOMRAM
   418  000023                     __pbssCOMRAM:
   419                           	opt stack 0
   420  000023                     _id:
   421                           	opt stack 0
   422  000023                     	ds	4
   423  000027                     _previousTimeCounter3:
   424                           	opt stack 0
   425  000027                     	ds	4
   426  00002B                     _requestSpeed:
   427                           	opt stack 0
   428  00002B                     	ds	4
   429  00002F                     _clock_counter_reference:
   430                           	opt stack 0
   431  00002F                     	ds	2
   432  000031                     _duty_cycle:
   433                           	opt stack 0
   434  000031                     	ds	2
   435  000033                     _vBatt:
   436                           	opt stack 0
   437  000033                     	ds	2
   438  000035                     _current:
   439                           	opt stack 0
   440  000035                     	ds	1
   441  000036                     _scrittura:
   442                           	opt stack 0
   443  000036                     	ds	1
   444  000037                     _data_array:
   445                           	opt stack 0
   446  000037                     	ds	8
   447                           tblptru	equ	0xFF8
   448                           tblptrh	equ	0xFF7
   449                           tblptrl	equ	0xFF6
   450                           tablat	equ	0xFF5
   451                           postinc0	equ	0xFEE
   452                           wreg	equ	0xFE8
   453                           
   454                           	psect	dataCOMRAM
   455  000041                     __pdataCOMRAM:
   456                           	opt stack 0
   457  000041                     _delay_quartz_frequency_value:
   458                           	opt stack 0
   459  000041                     	ds	1
   460                           tblptru	equ	0xFF8
   461                           tblptrh	equ	0xFF7
   462                           tblptrl	equ	0xFF6
   463                           tablat	equ	0xFF5
   464                           postinc0	equ	0xFEE
   465                           wreg	equ	0xFE8
   466                           
   467                           	psect	bssBANK0
   468  0000BF                     __pbssBANK0:
   469                           	opt stack 0
   470  0000BF                     _correzione:
   471                           	opt stack 0
   472  0000BF                     	ds	4
   473  0000C3                     _currentSpeed:
   474                           	opt stack 0
   475  0000C3                     	ds	4
   476  0000C7                     _duty_set:
   477                           	opt stack 0
   478  0000C7                     	ds	4
   479  0000CB                     _previousTimeCounter:
   480                           	opt stack 0
   481  0000CB                     	ds	4
   482  0000CF                     _previousTimeCounter1:
   483                           	opt stack 0
   484  0000CF                     	ds	4
   485  0000D3                     _previousTimeCounter2:
   486                           	opt stack 0
   487  0000D3                     	ds	4
   488  0000D7                     _timeCounter:
   489                           	opt stack 0
   490  0000D7                     	ds	4
   491  0000DB                     _errno:
   492                           	opt stack 0
   493  0000DB                     	ds	2
   494  0000DD                     _errore:
   495                           	opt stack 0
   496  0000DD                     	ds	2
   497  0000DF                     _left_speed:
   498                           	opt stack 0
   499  0000DF                     	ds	2
   500  0000E1                     _previousPwm:
   501                           	opt stack 0
   502  0000E1                     	ds	2
   503  0000E3                     _right_speed:
   504                           	opt stack 0
   505  0000E3                     	ds	2
   506  0000E5                     _ecu_cycle:
   507                           	opt stack 0
   508  0000E5                     	ds	1
   509  0000E6                     _msg:
   510                           	opt stack 0
   511  0000E6                     	ds	15
   512  0000F5                     _data_array_debug:
   513                           	opt stack 0
   514  0000F5                     	ds	8
   515                           tblptru	equ	0xFF8
   516                           tblptrh	equ	0xFF7
   517                           tblptrl	equ	0xFF6
   518                           tablat	equ	0xFF5
   519                           postinc0	equ	0xFEE
   520                           wreg	equ	0xFE8
   521                           
   522                           	psect	dataBANK0
   523  0000FD                     __pdataBANK0:
   524                           	opt stack 0
   525  0000FD                     _dir:
   526                           	opt stack 0
   527  0000FD                     	ds	2
   528                           tblptru	equ	0xFF8
   529                           tblptrh	equ	0xFF7
   530                           tblptrl	equ	0xFF6
   531                           tablat	equ	0xFF5
   532                           postinc0	equ	0xFEE
   533                           wreg	equ	0xFE8
   534                           
   535                           	psect	bssBANK1
   536  000119                     __pbssBANK1:
   537                           	opt stack 0
   538  000119                     _counter_array:
   539                           	opt stack 0
   540  000119                     	ds	8
   541  000121                     _currentSpeed_array:
   542                           	opt stack 0
   543  000121                     	ds	8
   544                           tblptru	equ	0xFF8
   545                           tblptrh	equ	0xFF7
   546                           tblptrl	equ	0xFF6
   547                           tablat	equ	0xFF5
   548                           postinc0	equ	0xFEE
   549                           wreg	equ	0xFE8
   550                           
   551                           	psect	cstackBANK1
   552  000100                     __pcstackBANK1:
   553                           	opt stack 0
   554  000100                     _pow$4019:
   555                           	opt stack 0
   556                           
   557                           ; 4 bytes @ 0x0
   558  000100                     	ds	4
   559  000104                     _pow$4020:
   560                           	opt stack 0
   561                           
   562                           ; 4 bytes @ 0x4
   563  000104                     	ds	4
   564  000108                     pow@sign:
   565                           	opt stack 0
   566                           
   567                           ; 1 bytes @ 0x8
   568  000108                     	ds	1
   569  000109                     pow@yi:
   570                           	opt stack 0
   571                           
   572                           ; 4 bytes @ 0x9
   573  000109                     	ds	4
   574  00010D                     _rampe$4018:
   575                           	opt stack 0
   576                           
   577                           ; 4 bytes @ 0xD
   578  00010D                     	ds	4
   579  000111                     ??_main:
   580                           
   581                           ; 0 bytes @ 0x11
   582  000111                     	ds	8
   583                           tblptru	equ	0xFF8
   584                           tblptrh	equ	0xFF7
   585                           tblptrl	equ	0xFF6
   586                           tablat	equ	0xFF5
   587                           postinc0	equ	0xFEE
   588                           wreg	equ	0xFE8
   589                           
   590                           	psect	cstackBANK0
   591  000060                     __pcstackBANK0:
   592                           	opt stack 0
   593  000060                     ??_can_interpreter:
   594  000060                     ?_abs:
   595                           	opt stack 0
   596  000060                     ?___wmul:
   597                           	opt stack 0
   598  000060                     ?___lwdiv:
   599                           	opt stack 0
   600  000060                     ?___flpack:
   601                           	opt stack 0
   602  000060                     ?_frexp:
   603                           	opt stack 0
   604  000060                     ?___aldiv:
   605                           	opt stack 0
   606  000060                     ?___flneg:
   607                           	opt stack 0
   608  000060                     CANOperationMode@mode:
   609                           	opt stack 0
   610  000060                     _CANisTxReady$3005:
   611                           	opt stack 0
   612  000060                     OpenEPWM1@period:
   613                           	opt stack 0
   614  000060                     SetOutputEPWM1@outputmode:
   615                           	opt stack 0
   616  000060                     OpenTimer2@config:
   617                           	opt stack 0
   618  000060                     SetDCEPWM1@dutycycle:
   619                           	opt stack 0
   620  000060                     ___wmul@multiplier:
   621                           	opt stack 0
   622  000060                     abs@a:
   623                           	opt stack 0
   624  000060                     ___lwdiv@dividend:
   625                           	opt stack 0
   626  000060                     CANsendMessage@identifier:
   627                           	opt stack 0
   628  000060                     CANSetMask@mask:
   629                           	opt stack 0
   630  000060                     CANSetFilter@filter:
   631                           	opt stack 0
   632  000060                     ___aldiv@dividend:
   633                           	opt stack 0
   634  000060                     ___flpack@arg:
   635                           	opt stack 0
   636  000060                     ___flge@ff1:
   637                           	opt stack 0
   638  000060                     ___flneg@f1:
   639                           	opt stack 0
   640  000060                     frexp@value:
   641                           	opt stack 0
   642                           
   643                           ; 4 bytes @ 0x0
   644  000060                     	ds	1
   645  000061                     SetOutputEPWM1@outputconfig:
   646                           	opt stack 0
   647                           
   648                           ; 1 bytes @ 0x1
   649  000061                     	ds	1
   650  000062                     ??_SetDCEPWM1:
   651  000062                     ??_abs:
   652  000062                     ___wmul@multiplicand:
   653                           	opt stack 0
   654  000062                     ___lwdiv@divisor:
   655                           	opt stack 0
   656                           
   657                           ; 2 bytes @ 0x2
   658  000062                     	ds	2
   659  000064                     CANSetMask@type:
   660                           	opt stack 0
   661  000064                     CANSetFilter@type:
   662                           	opt stack 0
   663  000064                     ___flpack@exp:
   664                           	opt stack 0
   665  000064                     ___lwdiv@counter:
   666                           	opt stack 0
   667  000064                     CANsendMessage@data:
   668                           	opt stack 0
   669  000064                     SetDCEPWM1@DCycle:
   670                           	opt stack 0
   671  000064                     ___wmul@product:
   672                           	opt stack 0
   673  000064                     frexp@eptr:
   674                           	opt stack 0
   675  000064                     ___aldiv@divisor:
   676                           	opt stack 0
   677  000064                     ___flge@ff2:
   678                           	opt stack 0
   679                           
   680                           ; 4 bytes @ 0x4
   681  000064                     	ds	1
   682  000065                     ??_CANSetMask:
   683  000065                     ??_CANSetFilter:
   684  000065                     ___flpack@sign:
   685                           	opt stack 0
   686  000065                     ___lwdiv@quotient:
   687                           	opt stack 0
   688                           
   689                           ; 2 bytes @ 0x5
   690  000065                     	ds	1
   691  000066                     ??___flpack:
   692  000066                     ??_frexp:
   693  000066                     ?___awdiv:
   694                           	opt stack 0
   695  000066                     CANsendMessage@dataLength:
   696                           	opt stack 0
   697  000066                     delay_ms@value_ms:
   698                           	opt stack 0
   699  000066                     ___awdiv@dividend:
   700                           	opt stack 0
   701                           
   702                           ; 2 bytes @ 0x6
   703  000066                     	ds	1
   704  000067                     CANsendMessage@flags:
   705                           	opt stack 0
   706                           
   707                           ; 1 bytes @ 0x7
   708  000067                     	ds	1
   709  000068                     ??_CANsendMessage:
   710  000068                     ??___flge:
   711  000068                     ___aldiv@counter:
   712                           	opt stack 0
   713  000068                     ___awdiv@divisor:
   714                           	opt stack 0
   715                           
   716                           ; 2 bytes @ 0x8
   717  000068                     	ds	1
   718  000069                     CANSetMask@numBuffer:
   719                           	opt stack 0
   720  000069                     CANSetFilter@numBuffer:
   721                           	opt stack 0
   722  000069                     ___aldiv@sign:
   723                           	opt stack 0
   724                           
   725                           ; 1 bytes @ 0x9
   726  000069                     	ds	1
   727  00006A                     ?___fldiv:
   728                           	opt stack 0
   729  00006A                     ?___awtofl:
   730                           	opt stack 0
   731  00006A                     ?___lltofl:
   732                           	opt stack 0
   733  00006A                     ?___lwtofl:
   734                           	opt stack 0
   735  00006A                     ___awdiv@counter:
   736                           	opt stack 0
   737  00006A                     ___awtofl@c:
   738                           	opt stack 0
   739  00006A                     ___lwtofl@c:
   740                           	opt stack 0
   741  00006A                     CANSetMask@tamp:
   742                           	opt stack 0
   743  00006A                     CANSetFilter@tamp:
   744                           	opt stack 0
   745  00006A                     ___aldiv@quotient:
   746                           	opt stack 0
   747  00006A                     ___fldiv@f1:
   748                           	opt stack 0
   749  00006A                     ___lltofl@c:
   750                           	opt stack 0
   751                           
   752                           ; 4 bytes @ 0xA
   753  00006A                     	ds	1
   754  00006B                     ___awdiv@sign:
   755                           	opt stack 0
   756                           
   757                           ; 1 bytes @ 0xB
   758  00006B                     	ds	1
   759  00006C                     ___awdiv@quotient:
   760                           	opt stack 0
   761  00006C                     CANsendMessage@tamp:
   762                           	opt stack 0
   763                           
   764                           ; 4 bytes @ 0xC
   765  00006C                     	ds	2
   766  00006E                     CANInitialize@phaseSeg1:
   767                           	opt stack 0
   768  00006E                     ___awtofl@sign:
   769                           	opt stack 0
   770  00006E                     ___fldiv@f2:
   771                           	opt stack 0
   772                           
   773                           ; 4 bytes @ 0xE
   774  00006E                     	ds	1
   775  00006F                     ?___flmul:
   776                           	opt stack 0
   777  00006F                     CANInitialize@phaseSeg2:
   778                           	opt stack 0
   779  00006F                     ___flmul@f1:
   780                           	opt stack 0
   781                           
   782                           ; 4 bytes @ 0xF
   783  00006F                     	ds	1
   784  000070                     CANInitialize@SJW:
   785                           	opt stack 0
   786                           
   787                           ; 1 bytes @ 0x10
   788  000070                     	ds	1
   789  000071                     CANInitialize@BRP:
   790                           	opt stack 0
   791                           
   792                           ; 1 bytes @ 0x11
   793  000071                     	ds	1
   794  000072                     CANInitialize@flags:
   795                           	opt stack 0
   796  000072                     ___fldiv@f3:
   797                           	opt stack 0
   798                           
   799                           ; 4 bytes @ 0x12
   800  000072                     	ds	1
   801  000073                     ??_CANInitialize:
   802  000073                     ___flmul@f2:
   803                           	opt stack 0
   804                           
   805                           ; 4 bytes @ 0x13
   806  000073                     	ds	3
   807  000076                     ___fldiv@cntr:
   808                           	opt stack 0
   809                           
   810                           ; 1 bytes @ 0x16
   811  000076                     	ds	1
   812  000077                     CANInitialize@propSeg:
   813                           	opt stack 0
   814  000077                     ___fldiv@exp:
   815                           	opt stack 0
   816  000077                     ___flmul@exp:
   817                           	opt stack 0
   818                           
   819                           ; 1 bytes @ 0x17
   820  000077                     	ds	1
   821  000078                     CANInitialize@FilterConfig1:
   822                           	opt stack 0
   823  000078                     ___fldiv@sign:
   824                           	opt stack 0
   825  000078                     ___flmul@f3_as_product:
   826                           	opt stack 0
   827                           
   828                           ; 4 bytes @ 0x18
   829  000078                     	ds	1
   830  000079                     CANInitialize@FilterConfig2:
   831                           	opt stack 0
   832                           
   833                           ; 1 bytes @ 0x19
   834  000079                     	ds	1
   835  00007A                     
   836                           ; 0 bytes @ 0x1A
   837  00007A                     	ds	2
   838  00007C                     ___flmul@cntr:
   839                           	opt stack 0
   840                           
   841                           ; 1 bytes @ 0x1C
   842  00007C                     	ds	1
   843  00007D                     ___flmul@sign:
   844                           	opt stack 0
   845                           
   846                           ; 1 bytes @ 0x1D
   847  00007D                     	ds	1
   848  00007E                     ?___fladd:
   849                           	opt stack 0
   850  00007E                     ___fladd@f1:
   851                           	opt stack 0
   852                           
   853                           ; 4 bytes @ 0x1E
   854  00007E                     	ds	4
   855  000082                     ___fladd@f2:
   856                           	opt stack 0
   857                           
   858                           ; 4 bytes @ 0x22
   859  000082                     	ds	4
   860  000086                     ??___fladd:
   861                           
   862                           ; 0 bytes @ 0x26
   863  000086                     	ds	1
   864  000087                     ___fladd@sign:
   865                           	opt stack 0
   866                           
   867                           ; 1 bytes @ 0x27
   868  000087                     	ds	1
   869  000088                     ___fladd@exp2:
   870                           	opt stack 0
   871                           
   872                           ; 1 bytes @ 0x28
   873  000088                     	ds	1
   874  000089                     ___fladd@exp1:
   875                           	opt stack 0
   876                           
   877                           ; 1 bytes @ 0x29
   878  000089                     	ds	1
   879  00008A                     ?___flsub:
   880                           	opt stack 0
   881  00008A                     ?_eval_poly:
   882                           	opt stack 0
   883  00008A                     ?___fltol:
   884                           	opt stack 0
   885  00008A                     ___flsub@f1:
   886                           	opt stack 0
   887  00008A                     ___fltol@f1:
   888                           	opt stack 0
   889  00008A                     eval_poly@x:
   890                           	opt stack 0
   891                           
   892                           ; 4 bytes @ 0x2A
   893  00008A                     	ds	4
   894  00008E                     ??___fltol:
   895  00008E                     eval_poly@d:
   896                           	opt stack 0
   897  00008E                     ___flsub@f2:
   898                           	opt stack 0
   899                           
   900                           ; 4 bytes @ 0x2E
   901  00008E                     	ds	2
   902  000090                     eval_poly@n:
   903                           	opt stack 0
   904                           
   905                           ; 2 bytes @ 0x30
   906  000090                     	ds	2
   907  000092                     ??_eval_poly:
   908  000092                     ___fltol@sign1:
   909                           	opt stack 0
   910                           
   911                           ; 1 bytes @ 0x32
   912  000092                     	ds	1
   913  000093                     ___fltol@exp1:
   914                           	opt stack 0
   915                           
   916                           ; 1 bytes @ 0x33
   917  000093                     	ds	1
   918  000094                     ?___altofl:
   919                           	opt stack 0
   920  000094                     ___altofl@c:
   921                           	opt stack 0
   922                           
   923                           ; 4 bytes @ 0x34
   924  000094                     	ds	2
   925  000096                     eval_poly@res:
   926                           	opt stack 0
   927                           
   928                           ; 4 bytes @ 0x36
   929  000096                     	ds	2
   930  000098                     ___altofl@sign:
   931                           	opt stack 0
   932                           
   933                           ; 1 bytes @ 0x38
   934  000098                     	ds	1
   935  000099                     ?_floor:
   936                           	opt stack 0
   937  000099                     floor@x:
   938                           	opt stack 0
   939                           
   940                           ; 4 bytes @ 0x39
   941  000099                     	ds	1
   942  00009A                     ?_log:
   943                           	opt stack 0
   944  00009A                     ?_ldexp:
   945                           	opt stack 0
   946  00009A                     ldexp@value:
   947                           	opt stack 0
   948  00009A                     log@x:
   949                           	opt stack 0
   950                           
   951                           ; 4 bytes @ 0x3A
   952  00009A                     	ds	3
   953  00009D                     floor@i:
   954                           	opt stack 0
   955                           
   956                           ; 4 bytes @ 0x3D
   957  00009D                     	ds	1
   958  00009E                     ldexp@newexp:
   959                           	opt stack 0
   960  00009E                     log@exponent:
   961                           	opt stack 0
   962                           
   963                           ; 2 bytes @ 0x3E
   964  00009E                     	ds	2
   965  0000A0                     ??_ldexp:
   966                           
   967                           ; 0 bytes @ 0x40
   968  0000A0                     	ds	1
   969  0000A1                     floor@expon:
   970                           	opt stack 0
   971                           
   972                           ; 2 bytes @ 0x41
   973  0000A1                     	ds	2
   974  0000A3                     ?_exp:
   975                           	opt stack 0
   976  0000A3                     exp@x:
   977                           	opt stack 0
   978                           
   979                           ; 4 bytes @ 0x43
   980  0000A3                     	ds	4
   981  0000A7                     _exp$4021:
   982                           	opt stack 0
   983                           
   984                           ; 4 bytes @ 0x47
   985  0000A7                     	ds	4
   986  0000AB                     exp@exponent:
   987                           	opt stack 0
   988                           
   989                           ; 2 bytes @ 0x4B
   990  0000AB                     	ds	2
   991  0000AD                     exp@sign:
   992                           	opt stack 0
   993                           
   994                           ; 1 bytes @ 0x4D
   995  0000AD                     	ds	1
   996  0000AE                     ?_pow:
   997                           	opt stack 0
   998  0000AE                     pow@x:
   999                           	opt stack 0
  1000                           
  1001                           ; 4 bytes @ 0x4E
  1002  0000AE                     	ds	4
  1003  0000B2                     pow@y:
  1004                           	opt stack 0
  1005                           
  1006                           ; 4 bytes @ 0x52
  1007  0000B2                     	ds	4
  1008  0000B6                     ??_rampe:
  1009  0000B6                     
  1010                           ; 0 bytes @ 0x56
  1011  0000B6                     	ds	8
  1012  0000BE                     main@period:
  1013                           	opt stack 0
  1014                           
  1015                           ; 1 bytes @ 0x5E
  1016  0000BE                     	ds	1
  1017                           tblptru	equ	0xFF8
  1018                           tblptrh	equ	0xFF7
  1019                           tblptrl	equ	0xFF6
  1020                           tablat	equ	0xFF5
  1021                           postinc0	equ	0xFEE
  1022                           wreg	equ	0xFE8
  1023                           
  1024                           	psect	cstackCOMRAM
  1025  000001                     __pcstackCOMRAM:
  1026                           	opt stack 0
  1027  000001                     _CANisRxReady$3007:
  1028                           	opt stack 0
  1029  000001                     CANreceiveMessage@msg:
  1030                           	opt stack 0
  1031                           
  1032                           ; 2 bytes @ 0x0
  1033  000001                     	ds	2
  1034  000003                     ??_CANreceiveMessage:
  1035                           
  1036                           ; 0 bytes @ 0x2
  1037  000003                     	ds	8
  1038  00000B                     CANreceiveMessage@error:
  1039                           	opt stack 0
  1040                           
  1041                           ; 1 bytes @ 0xA
  1042  00000B                     	ds	1
  1043  00000C                     CANreceiveMessage@tamp:
  1044                           	opt stack 0
  1045                           
  1046                           ; 1 bytes @ 0xB
  1047  00000C                     	ds	1
  1048  00000D                     ??_ISR_bassa:
  1049                           
  1050                           ; 0 bytes @ 0xC
  1051  00000D                     	ds	21
  1052  000022                     ISR_bassa@i:
  1053                           	opt stack 0
  1054                           
  1055                           ; 1 bytes @ 0x21
  1056  000022                     	ds	1
  1057                           tblptru	equ	0xFF8
  1058                           tblptrh	equ	0xFF7
  1059                           tblptrl	equ	0xFF6
  1060                           tablat	equ	0xFF5
  1061                           postinc0	equ	0xFEE
  1062                           wreg	equ	0xFE8
  1063                           
  1064 ;;
  1065 ;;Main: autosize = 0, tempsize = 8, incstack = 0, save=0
  1066 ;;
  1067 ;; *************** function _main *****************
  1068 ;; Defined at:
  1069 ;;		line 127 in file "motore.c"
  1070 ;; Parameters:    Size  Location     Type
  1071 ;;		None
  1072 ;; Auto vars:     Size  Location     Type
  1073 ;;  period          1   94[BANK0 ] unsigned char 
  1074 ;; Return value:  Size  Location     Type
  1075 ;;                  2  673[None  ] int 
  1076 ;; Registers used:
  1077 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1078 ;; Tracked objects:
  1079 ;;		On entry : 0/0
  1080 ;;		On exit  : 0/0
  1081 ;;		Unchanged: 0/0
  1082 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1083 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1084 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1085 ;;      Temps:          0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
  1086 ;;      Totals:         0       1       8       0       0       0       0       0       0       0       0       0       
      +0       0
  1087 ;;Total ram usage:        9 bytes
  1088 ;; Hardware stack levels required when called:    8
  1089 ;; This function calls:
  1090 ;;		_CANisTxReady
  1091 ;;		_CANsendMessage
  1092 ;;		_OpenEPWM1
  1093 ;;		_OpenTimer2
  1094 ;;		_SetDCEPWM1
  1095 ;;		_SetOutputEPWM1
  1096 ;;		_battery_measure
  1097 ;;		_can_interpreter
  1098 ;;		_configurazione_iniziale
  1099 ;;		_delay_ms
  1100 ;;		_rampe
  1101 ;;		_send_data
  1102 ;; This function is called by:
  1103 ;;		Startup code after reset
  1104 ;; This function uses a non-reentrant model
  1105 ;;
  1106                           
  1107                           	psect	text0
  1108  002EB0                     __ptext0:
  1109                           	opt stack 0
  1110  002EB0                     _main:
  1111                           	opt stack 23
  1112                           
  1113                           ;motore.c: 128: unsigned char period;
  1114                           ;motore.c: 129: configurazione_iniziale();
  1115                           
  1116                           ;incstack = 0
  1117  002EB0  EC43  F024         	call	_configurazione_iniziale	;wreg free
  1118                           
  1119                           ;motore.c: 130: PORTAbits.RA1 = 1;
  1120  002EB4  8280               	bsf	3968,1,c	;volatile
  1121                           
  1122                           ;motore.c: 131: PORTCbits.RC1 = 1;
  1123  002EB6  8282               	bsf	3970,1,c	;volatile
  1124                           
  1125                           ;motore.c: 132: delay_ms(500);
  1126  002EB8  0E01               	movlw	1
  1127  002EBA  0100               	movlb	0	; () banked
  1128  002EBC  6F67               	movwf	(delay_ms@value_ms+1)& (0+255),b
  1129  002EBE  0EF4               	movlw	244
  1130  002EC0  6F66               	movwf	delay_ms@value_ms& (0+255),b
  1131  002EC2  ECEC  F026         	call	_delay_ms	;wreg free
  1132                           
  1133                           ;motore.c: 133: PORTAbits.RA1 = 0;
  1134  002EC6  9280               	bcf	3968,1,c	;volatile
  1135                           
  1136                           ;motore.c: 134: PORTCbits.RC1 = 0;
  1137  002EC8  9282               	bcf	3970,1,c	;volatile
  1138                           
  1139                           ;motore.c: 135: OpenTimer2(0b01111111 & 0b11111110 & 0b11111111);
  1140  002ECA  0E7E               	movlw	126
  1141  002ECC  EC48  F027         	call	_OpenTimer2
  1142                           
  1143                           ;motore.c: 136: period = 0xFA;
  1144  002ED0  0EFA               	movlw	250
  1145  002ED2  0100               	movlb	0	; () banked
  1146  002ED4  6FBE               	movwf	main@period& (0+255),b
  1147                           
  1148                           ; BSR set to: 0
  1149                           ;motore.c: 137: OpenEPWM1(period);
  1150  002ED6  0100               	movlb	0	; () banked
  1151  002ED8  51BE               	movf	main@period& (0+255),w,b
  1152  002EDA  EC71  F027         	call	_OpenEPWM1
  1153                           
  1154                           ;motore.c: 138: speed_fetched = 1;
  1155  002EDE  8440               	bsf	_speed_fetched/(0+8),_speed_fetched& (0+7),c	;volatile
  1156                           
  1157                           ;motore.c: 139: SetOutputEPWM1(0b01111111, 0b11111100);
  1158  002EE0  0EFC               	movlw	252
  1159  002EE2  0100               	movlb	0	; () banked
  1160  002EE4  6F60               	movwf	SetOutputEPWM1@outputmode& (0+255),b
  1161  002EE6  0E7F               	movlw	127
  1162  002EE8  ECFD  F025         	call	_SetOutputEPWM1
  1163  002EEC  D000               	goto	l6921
  1164  002EEE                     l6921:
  1165                           
  1166                           ;motore.c: 141: can_interpreter();
  1167  002EEE  EC9B  F024         	call	_can_interpreter	;wreg free
  1168                           
  1169                           ;motore.c: 142: if (PORTAbits.RA1 == 0) {
  1170  002EF2  B280               	btfsc	3968,1,c	;volatile
  1171  002EF4  D039               	goto	l6929
  1172                           
  1173                           ;motore.c: 144: if ((timeCounter - previousTimeCounter1 >= 20)) {
  1174  002EF6  C0CF  F111         	movff	_previousTimeCounter1,??_main
  1175  002EFA  C0D0  F112         	movff	_previousTimeCounter1+1,??_main+1
  1176  002EFE  C0D1  F113         	movff	_previousTimeCounter1+2,??_main+2
  1177  002F02  C0D2  F114         	movff	_previousTimeCounter1+3,??_main+3
  1178  002F06  0101               	movlb	1	; () banked
  1179  002F08  1F11               	comf	??_main& (0+255),f,b
  1180  002F0A  1F12               	comf	(??_main+1)& (0+255),f,b
  1181  002F0C  1F13               	comf	(??_main+2)& (0+255),f,b
  1182  002F0E  1F14               	comf	(??_main+3)& (0+255),f,b
  1183  002F10  2B11               	incf	??_main& (0+255),f,b
  1184  002F12  0E00               	movlw	0
  1185  002F14  2312               	addwfc	(??_main+1)& (0+255),f,b
  1186  002F16  2313               	addwfc	(??_main+2)& (0+255),f,b
  1187  002F18  2314               	addwfc	(??_main+3)& (0+255),f,b
  1188  002F1A  0100               	movlb	0	; () banked
  1189  002F1C  51D7               	movf	_timeCounter& (0+255),w,b	;volatile
  1190  002F1E  0101               	movlb	1	; () banked
  1191  002F20  2511               	addwf	??_main& (0+255),w,b
  1192  002F22  0101               	movlb	1	; () banked
  1193  002F24  6F15               	movwf	(??_main+4)& (0+255),b
  1194  002F26  0100               	movlb	0	; () banked
  1195  002F28  51D8               	movf	(_timeCounter+1)& (0+255),w,b	;volatile
  1196  002F2A  0101               	movlb	1	; () banked
  1197  002F2C  2112               	addwfc	(??_main+1)& (0+255),w,b
  1198  002F2E  0101               	movlb	1	; () banked
  1199  002F30  6F16               	movwf	(??_main+5)& (0+255),b
  1200  002F32  0100               	movlb	0	; () banked
  1201  002F34  51D9               	movf	(_timeCounter+2)& (0+255),w,b	;volatile
  1202  002F36  0101               	movlb	1	; () banked
  1203  002F38  2113               	addwfc	(??_main+2)& (0+255),w,b
  1204  002F3A  0101               	movlb	1	; () banked
  1205  002F3C  6F17               	movwf	(??_main+6)& (0+255),b
  1206  002F3E  0100               	movlb	0	; () banked
  1207  002F40  51DA               	movf	(_timeCounter+3)& (0+255),w,b	;volatile
  1208  002F42  0101               	movlb	1	; () banked
  1209  002F44  2114               	addwfc	(??_main+3)& (0+255),w,b
  1210  002F46  0101               	movlb	1	; () banked
  1211  002F48  6F18               	movwf	(??_main+7)& (0+255),b
  1212  002F4A  0101               	movlb	1	; () banked
  1213  002F4C  5118               	movf	(??_main+7)& (0+255),w,b
  1214  002F4E  0101               	movlb	1	; () banked
  1215  002F50  1117               	iorwf	(??_main+6)& (0+255),w,b
  1216  002F52  0101               	movlb	1	; () banked
  1217  002F54  1116               	iorwf	(??_main+5)& (0+255),w,b
  1218  002F56  E105               	bnz	u9160
  1219  002F58  0E14               	movlw	20
  1220  002F5A  0101               	movlb	1	; () banked
  1221  002F5C  5D15               	subwf	(??_main+4)& (0+255),w,b
  1222  002F5E  A0D8               	btfss	status,0,c
  1223  002F60  D00B               	goto	l6931
  1224  002F62                     u9160:
  1225                           
  1226                           ; BSR set to: 1
  1227                           ;motore.c: 145: rampe();
  1228  002F62  EC0C  F010         	call	_rampe	;wreg free
  1229                           
  1230                           ;motore.c: 146: }
  1231                           ;motore.c: 147: } else {
  1232  002F66  D008               	goto	l6931
  1233  002F68                     l6929:
  1234                           
  1235                           ;motore.c: 148: SetDCEPWM1(0);
  1236  002F68  0E00               	movlw	0
  1237  002F6A  0100               	movlb	0	; () banked
  1238  002F6C  6F61               	movwf	(SetDCEPWM1@dutycycle+1)& (0+255),b
  1239  002F6E  0E00               	movlw	0
  1240  002F70  6F60               	movwf	SetDCEPWM1@dutycycle& (0+255),b
  1241  002F72  EC76  F026         	call	_SetDCEPWM1	;wreg free
  1242  002F76  D000               	goto	l6931
  1243  002F78                     l6931:
  1244                           
  1245                           ;motore.c: 149: }
  1246                           ;motore.c: 150: if ((can_retry == 1) && (remote_frame)) {
  1247  002F78  B23F               	btfsc	_can_retry/(0+8),_can_retry& (0+7),c	;volatile
  1248  002F7A  AE3F               	btfss	_remote_frame/(0+8),_remote_frame& (0+7),c	;volatile
  1249  002F7C  D003               	goto	l6937
  1250                           
  1251                           ;motore.c: 151: send_data();
  1252  002F7E  EC27  F026         	call	_send_data	;wreg free
  1253  002F82  D000               	goto	l6937
  1254  002F84                     l6937:
  1255                           
  1256                           ;motore.c: 152: }
  1257                           ;motore.c: 155: if (((timeCounter - previousTimeCounter) > 20) || ((PORTAbits.RA1 == 1) 
      +                          && ((timeCounter - previousTimeCounter) > 5))) {
  1258  002F84  C0CB  F111         	movff	_previousTimeCounter,??_main
  1259  002F88  C0CC  F112         	movff	_previousTimeCounter+1,??_main+1
  1260  002F8C  C0CD  F113         	movff	_previousTimeCounter+2,??_main+2
  1261  002F90  C0CE  F114         	movff	_previousTimeCounter+3,??_main+3
  1262  002F94  0101               	movlb	1	; () banked
  1263  002F96  1F11               	comf	??_main& (0+255),f,b
  1264  002F98  1F12               	comf	(??_main+1)& (0+255),f,b
  1265  002F9A  1F13               	comf	(??_main+2)& (0+255),f,b
  1266  002F9C  1F14               	comf	(??_main+3)& (0+255),f,b
  1267  002F9E  2B11               	incf	??_main& (0+255),f,b
  1268  002FA0  0E00               	movlw	0
  1269  002FA2  2312               	addwfc	(??_main+1)& (0+255),f,b
  1270  002FA4  2313               	addwfc	(??_main+2)& (0+255),f,b
  1271  002FA6  2314               	addwfc	(??_main+3)& (0+255),f,b
  1272  002FA8  0100               	movlb	0	; () banked
  1273  002FAA  51D7               	movf	_timeCounter& (0+255),w,b	;volatile
  1274  002FAC  0101               	movlb	1	; () banked
  1275  002FAE  2511               	addwf	??_main& (0+255),w,b
  1276  002FB0  0101               	movlb	1	; () banked
  1277  002FB2  6F15               	movwf	(??_main+4)& (0+255),b
  1278  002FB4  0100               	movlb	0	; () banked
  1279  002FB6  51D8               	movf	(_timeCounter+1)& (0+255),w,b	;volatile
  1280  002FB8  0101               	movlb	1	; () banked
  1281  002FBA  2112               	addwfc	(??_main+1)& (0+255),w,b
  1282  002FBC  0101               	movlb	1	; () banked
  1283  002FBE  6F16               	movwf	(??_main+5)& (0+255),b
  1284  002FC0  0100               	movlb	0	; () banked
  1285  002FC2  51D9               	movf	(_timeCounter+2)& (0+255),w,b	;volatile
  1286  002FC4  0101               	movlb	1	; () banked
  1287  002FC6  2113               	addwfc	(??_main+2)& (0+255),w,b
  1288  002FC8  0101               	movlb	1	; () banked
  1289  002FCA  6F17               	movwf	(??_main+6)& (0+255),b
  1290  002FCC  0100               	movlb	0	; () banked
  1291  002FCE  51DA               	movf	(_timeCounter+3)& (0+255),w,b	;volatile
  1292  002FD0  0101               	movlb	1	; () banked
  1293  002FD2  2114               	addwfc	(??_main+3)& (0+255),w,b
  1294  002FD4  0101               	movlb	1	; () banked
  1295  002FD6  6F18               	movwf	(??_main+7)& (0+255),b
  1296  002FD8  0101               	movlb	1	; () banked
  1297  002FDA  5118               	movf	(??_main+7)& (0+255),w,b
  1298  002FDC  0101               	movlb	1	; () banked
  1299  002FDE  1117               	iorwf	(??_main+6)& (0+255),w,b
  1300  002FE0  0101               	movlb	1	; () banked
  1301  002FE2  1116               	iorwf	(??_main+5)& (0+255),w,b
  1302  002FE4  E13F               	bnz	l6943
  1303  002FE6  0E15               	movlw	21
  1304  002FE8  0101               	movlb	1	; () banked
  1305  002FEA  5D15               	subwf	(??_main+4)& (0+255),w,b
  1306  002FEC  B0D8               	btfsc	status,0,c
  1307  002FEE  D03A               	goto	l6943
  1308                           
  1309                           ; BSR set to: 1
  1310  002FF0  A280               	btfss	3968,1,c	;volatile
  1311  002FF2  D0BE               	goto	l6977
  1312                           
  1313                           ; BSR set to: 1
  1314  002FF4  C0CB  F111         	movff	_previousTimeCounter,??_main
  1315  002FF8  C0CC  F112         	movff	_previousTimeCounter+1,??_main+1
  1316  002FFC  C0CD  F113         	movff	_previousTimeCounter+2,??_main+2
  1317  003000  C0CE  F114         	movff	_previousTimeCounter+3,??_main+3
  1318  003004  0101               	movlb	1	; () banked
  1319  003006  1F11               	comf	??_main& (0+255),f,b
  1320  003008  1F12               	comf	(??_main+1)& (0+255),f,b
  1321  00300A  1F13               	comf	(??_main+2)& (0+255),f,b
  1322  00300C  1F14               	comf	(??_main+3)& (0+255),f,b
  1323  00300E  2B11               	incf	??_main& (0+255),f,b
  1324  003010  0E00               	movlw	0
  1325  003012  2312               	addwfc	(??_main+1)& (0+255),f,b
  1326  003014  2313               	addwfc	(??_main+2)& (0+255),f,b
  1327  003016  2314               	addwfc	(??_main+3)& (0+255),f,b
  1328  003018  0100               	movlb	0	; () banked
  1329  00301A  51D7               	movf	_timeCounter& (0+255),w,b	;volatile
  1330  00301C  0101               	movlb	1	; () banked
  1331  00301E  2511               	addwf	??_main& (0+255),w,b
  1332  003020  0101               	movlb	1	; () banked
  1333  003022  6F15               	movwf	(??_main+4)& (0+255),b
  1334  003024  0100               	movlb	0	; () banked
  1335  003026  51D8               	movf	(_timeCounter+1)& (0+255),w,b	;volatile
  1336  003028  0101               	movlb	1	; () banked
  1337  00302A  2112               	addwfc	(??_main+1)& (0+255),w,b
  1338  00302C  0101               	movlb	1	; () banked
  1339  00302E  6F16               	movwf	(??_main+5)& (0+255),b
  1340  003030  0100               	movlb	0	; () banked
  1341  003032  51D9               	movf	(_timeCounter+2)& (0+255),w,b	;volatile
  1342  003034  0101               	movlb	1	; () banked
  1343  003036  2113               	addwfc	(??_main+2)& (0+255),w,b
  1344  003038  0101               	movlb	1	; () banked
  1345  00303A  6F17               	movwf	(??_main+6)& (0+255),b
  1346  00303C  0100               	movlb	0	; () banked
  1347  00303E  51DA               	movf	(_timeCounter+3)& (0+255),w,b	;volatile
  1348  003040  0101               	movlb	1	; () banked
  1349  003042  2114               	addwfc	(??_main+3)& (0+255),w,b
  1350  003044  0101               	movlb	1	; () banked
  1351  003046  6F18               	movwf	(??_main+7)& (0+255),b
  1352  003048  0101               	movlb	1	; () banked
  1353  00304A  5118               	movf	(??_main+7)& (0+255),w,b
  1354  00304C  0101               	movlb	1	; () banked
  1355  00304E  1117               	iorwf	(??_main+6)& (0+255),w,b
  1356  003050  0101               	movlb	1	; () banked
  1357  003052  1116               	iorwf	(??_main+5)& (0+255),w,b
  1358  003054  E107               	bnz	l6943
  1359  003056  0E06               	movlw	6
  1360  003058  0101               	movlb	1	; () banked
  1361  00305A  5D15               	subwf	(??_main+4)& (0+255),w,b
  1362  00305C  B0D8               	btfsc	status,0,c
  1363  00305E  D002               	goto	l6943
  1364  003060  D087               	goto	l6977
  1365  003062  D000               	goto	l6943
  1366  003064                     l6943:
  1367                           
  1368                           ; BSR set to: 1
  1369                           ;motore.c: 156: ecu_cycle++;
  1370  003064  0100               	movlb	0	; () banked
  1371  003066  2BE5               	incf	_ecu_cycle& (0+255),f,b	;volatile
  1372                           
  1373                           ; BSR set to: 0
  1374                           ;motore.c: 157: if (ecu_cycle > 2) {
  1375  003068  0E02               	movlw	2
  1376  00306A  0100               	movlb	0	; () banked
  1377  00306C  65E5               	cpfsgt	_ecu_cycle& (0+255),b	;volatile
  1378  00306E  D004               	goto	l6949
  1379                           
  1380                           ; BSR set to: 0
  1381                           ;motore.c: 158: ecu_cycle = 0;
  1382  003070  0E00               	movlw	0
  1383  003072  0100               	movlb	0	; () banked
  1384  003074  6FE5               	movwf	_ecu_cycle& (0+255),b	;volatile
  1385  003076  D000               	goto	l6949
  1386  003078                     l6949:
  1387                           
  1388                           ; BSR set to: 0
  1389                           ;motore.c: 159: }
  1390                           ;motore.c: 160: if (ECU_error == 1) {
  1391  003078  A03F               	btfss	_ECU_error/(0+8),_ECU_error& (0+7),c	;volatile
  1392  00307A  D002               	goto	l683
  1393                           
  1394                           ; BSR set to: 0
  1395                           ;motore.c: 161: PORTAbits.RA1 = 1;
  1396  00307C  8280               	bsf	3968,1,c	;volatile
  1397                           
  1398                           ;motore.c: 162: } else {
  1399  00307E  D002               	goto	l6953
  1400  003080                     l683:
  1401                           
  1402                           ; BSR set to: 0
  1403                           ;motore.c: 163: PORTAbits.RA1 = 0;
  1404  003080  9280               	bcf	3968,1,c	;volatile
  1405                           
  1406                           ; BSR set to: 0
  1407                           
  1408                           ; BSR set to: 0
  1409                           ;motore.c: 164: }
  1410                           ;motore.c: 165: while (CANisTxReady() != 1) {
  1411  003082  D000               	goto	l6953
  1412  003084                     l6953:
  1413  003084  EC35  F027         	call	_CANisTxReady	;wreg free
  1414  003088  06E8               	decf	wreg,f,c
  1415  00308A  B4D8               	btfsc	status,2,c
  1416  00308C  D05D               	goto	l6975
  1417  00308E  D7FA               	goto	l6953
  1418                           
  1419                           ;motore.c: 166: }
  1420                           ;motore.c: 167: switch (ecu_cycle) {
  1421  003090  D05B               	goto	l6975
  1422                           
  1423                           ;motore.c: 169: while (CANisTxReady() != 1);
  1424                           
  1425                           ;motore.c: 168: case 0:
  1426  003092  D000               	goto	l6955
  1427  003094                     l6955:
  1428  003094  EC35  F027         	call	_CANisTxReady	;wreg free
  1429  003098  06E8               	decf	wreg,f,c
  1430  00309A  A4D8               	btfss	status,2,c
  1431  00309C  D7FB               	goto	l6955
  1432                           
  1433                           ;motore.c: 170: CANsendMessage(0b00000000011, data_array_debug, 8, CAN_CONFIG_STD_MSG & 
      +                          CAN_REMOTE_TX_FRAME & CAN_TX_PRIORITY_0);
  1434  00309E  0E03               	movlw	3
  1435  0030A0  0100               	movlb	0	; () banked
  1436  0030A2  6F60               	movwf	CANsendMessage@identifier& (0+255),b
  1437  0030A4  0E00               	movlw	0
  1438  0030A6  6F61               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  1439  0030A8  0E00               	movlw	0
  1440  0030AA  6F62               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  1441  0030AC  0E00               	movlw	0
  1442  0030AE  6F63               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  1443  0030B0  0EF5               	movlw	low _data_array_debug
  1444  0030B2  0100               	movlb	0	; () banked
  1445  0030B4  6F64               	movwf	CANsendMessage@data& (0+255),b
  1446  0030B6  0E00               	movlw	high _data_array_debug
  1447  0030B8  0100               	movlb	0	; () banked
  1448  0030BA  6F65               	movwf	(CANsendMessage@data+1)& (0+255),b
  1449  0030BC  0E08               	movlw	8
  1450  0030BE  0100               	movlb	0	; () banked
  1451  0030C0  6F66               	movwf	CANsendMessage@dataLength& (0+255),b
  1452  0030C2  0EFC               	movlw	252
  1453  0030C4  0100               	movlb	0	; () banked
  1454  0030C6  6F67               	movwf	CANsendMessage@flags& (0+255),b
  1455  0030C8  EC3C  F00C         	call	_CANsendMessage	;wreg free
  1456  0030CC  D03B               	goto	l6971
  1457                           
  1458                           ;motore.c: 174: while (CANisTxReady() != 1);
  1459                           
  1460                           ;motore.c: 173: case 1:
  1461                           
  1462                           ;motore.c: 172: break;
  1463                           
  1464                           ;motore.c: 171: ECU_error = 1;
  1465  0030CE  D000               	goto	l6961
  1466  0030D0                     l6961:
  1467  0030D0  EC35  F027         	call	_CANisTxReady	;wreg free
  1468  0030D4  06E8               	decf	wreg,f,c
  1469  0030D6  A4D8               	btfss	status,2,c
  1470  0030D8  D7FB               	goto	l6961
  1471                           
  1472                           ;motore.c: 175: CANsendMessage(0b00000000010, data_array_debug, 8, CAN_CONFIG_STD_MSG & 
      +                          CAN_REMOTE_TX_FRAME & CAN_TX_PRIORITY_0);
  1473  0030DA  0E02               	movlw	2
  1474  0030DC  0100               	movlb	0	; () banked
  1475  0030DE  6F60               	movwf	CANsendMessage@identifier& (0+255),b
  1476  0030E0  0E00               	movlw	0
  1477  0030E2  6F61               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  1478  0030E4  0E00               	movlw	0
  1479  0030E6  6F62               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  1480  0030E8  0E00               	movlw	0
  1481  0030EA  6F63               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  1482  0030EC  0EF5               	movlw	low _data_array_debug
  1483  0030EE  0100               	movlb	0	; () banked
  1484  0030F0  6F64               	movwf	CANsendMessage@data& (0+255),b
  1485  0030F2  0E00               	movlw	high _data_array_debug
  1486  0030F4  0100               	movlb	0	; () banked
  1487  0030F6  6F65               	movwf	(CANsendMessage@data+1)& (0+255),b
  1488  0030F8  0E08               	movlw	8
  1489  0030FA  0100               	movlb	0	; () banked
  1490  0030FC  6F66               	movwf	CANsendMessage@dataLength& (0+255),b
  1491  0030FE  0EFC               	movlw	252
  1492  003100  0100               	movlb	0	; () banked
  1493  003102  6F67               	movwf	CANsendMessage@flags& (0+255),b
  1494  003104  EC3C  F00C         	call	_CANsendMessage	;wreg free
  1495  003108  D01D               	goto	l6971
  1496                           
  1497                           ;motore.c: 179: while (CANisTxReady() != 1);
  1498                           
  1499                           ;motore.c: 178: case 2:
  1500                           
  1501                           ;motore.c: 177: break;
  1502                           
  1503                           ;motore.c: 176: ECU_error = 1;
  1504  00310A  D000               	goto	l6967
  1505  00310C                     l6967:
  1506  00310C  EC35  F027         	call	_CANisTxReady	;wreg free
  1507  003110  06E8               	decf	wreg,f,c
  1508  003112  A4D8               	btfss	status,2,c
  1509  003114  D7FB               	goto	l6967
  1510                           
  1511                           ;motore.c: 180: CANsendMessage(0b00000000100, data_array_debug, 8, CAN_CONFIG_STD_MSG & 
      +                          CAN_REMOTE_TX_FRAME & CAN_TX_PRIORITY_0);
  1512  003116  0E04               	movlw	4
  1513  003118  0100               	movlb	0	; () banked
  1514  00311A  6F60               	movwf	CANsendMessage@identifier& (0+255),b
  1515  00311C  0E00               	movlw	0
  1516  00311E  6F61               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  1517  003120  0E00               	movlw	0
  1518  003122  6F62               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  1519  003124  0E00               	movlw	0
  1520  003126  6F63               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  1521  003128  0EF5               	movlw	low _data_array_debug
  1522  00312A  0100               	movlb	0	; () banked
  1523  00312C  6F64               	movwf	CANsendMessage@data& (0+255),b
  1524  00312E  0E00               	movlw	high _data_array_debug
  1525  003130  0100               	movlb	0	; () banked
  1526  003132  6F65               	movwf	(CANsendMessage@data+1)& (0+255),b
  1527  003134  0E08               	movlw	8
  1528  003136  0100               	movlb	0	; () banked
  1529  003138  6F66               	movwf	CANsendMessage@dataLength& (0+255),b
  1530  00313A  0EFC               	movlw	252
  1531  00313C  0100               	movlb	0	; () banked
  1532  00313E  6F67               	movwf	CANsendMessage@flags& (0+255),b
  1533  003140  EC3C  F00C         	call	_CANsendMessage	;wreg free
  1534  003144                     l6971:
  1535                           
  1536                           ;motore.c: 181: ECU_error = 1;
  1537  003144  803F               	bsf	_ECU_error/(0+8),_ECU_error& (0+7),c	;volatile
  1538                           
  1539                           ;motore.c: 183: }
  1540                           
  1541                           ;motore.c: 182: break;
  1542  003146  D00B               	goto	l693
  1543  003148                     l6975:
  1544  003148  0100               	movlb	0	; () banked
  1545  00314A  51E5               	movf	_ecu_cycle& (0+255),w,b	;volatile
  1546                           
  1547                           ; Switch size 1, requested type "space"
  1548                           ; Number of cases is 3, Range of values is 0 to 2
  1549                           ; switch strategies available:
  1550                           ; Name         Instructions Cycles
  1551                           ; simple_byte           10     6 (average)
  1552                           ;	Chosen strategy is simple_byte
  1553  00314C  0A00               	xorlw	0	; case 0
  1554  00314E  B4D8               	btfsc	status,2,c
  1555  003150  D7A1               	goto	l6955
  1556  003152  0A01               	xorlw	1	; case 1
  1557  003154  B4D8               	btfsc	status,2,c
  1558  003156  D7BC               	goto	l6961
  1559  003158  0A03               	xorlw	3	; case 2
  1560  00315A  B4D8               	btfsc	status,2,c
  1561  00315C  D7D7               	goto	l6967
  1562  00315E                     l693:
  1563                           
  1564                           ;motore.c: 184: previousTimeCounter = timeCounter;
  1565  00315E  C0D7  F0CB         	movff	_timeCounter,_previousTimeCounter	;volatile
  1566  003162  C0D8  F0CC         	movff	_timeCounter+1,_previousTimeCounter+1	;volatile
  1567  003166  C0D9  F0CD         	movff	_timeCounter+2,_previousTimeCounter+2	;volatile
  1568  00316A  C0DA  F0CE         	movff	_timeCounter+3,_previousTimeCounter+3	;volatile
  1569  00316E  D000               	goto	l6977
  1570  003170                     l6977:
  1571                           
  1572                           ;motore.c: 185: }
  1573                           ;motore.c: 187: if ((timeCounter - previousTimeCounter2 > 100)) {
  1574  003170  C0D3  F111         	movff	_previousTimeCounter2,??_main
  1575  003174  C0D4  F112         	movff	_previousTimeCounter2+1,??_main+1
  1576  003178  C0D5  F113         	movff	_previousTimeCounter2+2,??_main+2
  1577  00317C  C0D6  F114         	movff	_previousTimeCounter2+3,??_main+3
  1578  003180  0101               	movlb	1	; () banked
  1579  003182  1F11               	comf	??_main& (0+255),f,b
  1580  003184  1F12               	comf	(??_main+1)& (0+255),f,b
  1581  003186  1F13               	comf	(??_main+2)& (0+255),f,b
  1582  003188  1F14               	comf	(??_main+3)& (0+255),f,b
  1583  00318A  2B11               	incf	??_main& (0+255),f,b
  1584  00318C  0E00               	movlw	0
  1585  00318E  2312               	addwfc	(??_main+1)& (0+255),f,b
  1586  003190  2313               	addwfc	(??_main+2)& (0+255),f,b
  1587  003192  2314               	addwfc	(??_main+3)& (0+255),f,b
  1588  003194  0100               	movlb	0	; () banked
  1589  003196  51D7               	movf	_timeCounter& (0+255),w,b	;volatile
  1590  003198  0101               	movlb	1	; () banked
  1591  00319A  2511               	addwf	??_main& (0+255),w,b
  1592  00319C  0101               	movlb	1	; () banked
  1593  00319E  6F15               	movwf	(??_main+4)& (0+255),b
  1594  0031A0  0100               	movlb	0	; () banked
  1595  0031A2  51D8               	movf	(_timeCounter+1)& (0+255),w,b	;volatile
  1596  0031A4  0101               	movlb	1	; () banked
  1597  0031A6  2112               	addwfc	(??_main+1)& (0+255),w,b
  1598  0031A8  0101               	movlb	1	; () banked
  1599  0031AA  6F16               	movwf	(??_main+5)& (0+255),b
  1600  0031AC  0100               	movlb	0	; () banked
  1601  0031AE  51D9               	movf	(_timeCounter+2)& (0+255),w,b	;volatile
  1602  0031B0  0101               	movlb	1	; () banked
  1603  0031B2  2113               	addwfc	(??_main+2)& (0+255),w,b
  1604  0031B4  0101               	movlb	1	; () banked
  1605  0031B6  6F17               	movwf	(??_main+6)& (0+255),b
  1606  0031B8  0100               	movlb	0	; () banked
  1607  0031BA  51DA               	movf	(_timeCounter+3)& (0+255),w,b	;volatile
  1608  0031BC  0101               	movlb	1	; () banked
  1609  0031BE  2114               	addwfc	(??_main+3)& (0+255),w,b
  1610  0031C0  0101               	movlb	1	; () banked
  1611  0031C2  6F18               	movwf	(??_main+7)& (0+255),b
  1612  0031C4  0101               	movlb	1	; () banked
  1613  0031C6  5118               	movf	(??_main+7)& (0+255),w,b
  1614  0031C8  0101               	movlb	1	; () banked
  1615  0031CA  1117               	iorwf	(??_main+6)& (0+255),w,b
  1616  0031CC  0101               	movlb	1	; () banked
  1617  0031CE  1116               	iorwf	(??_main+5)& (0+255),w,b
  1618  0031D0  E105               	bnz	u9280
  1619  0031D2  0E65               	movlw	101
  1620  0031D4  0101               	movlb	1	; () banked
  1621  0031D6  5D15               	subwf	(??_main+4)& (0+255),w,b
  1622  0031D8  A0D8               	btfss	status,0,c
  1623  0031DA  D689               	goto	l6921
  1624  0031DC                     u9280:
  1625                           
  1626                           ; BSR set to: 1
  1627                           ;motore.c: 188: battery_measure();
  1628  0031DC  ECE9  F024         	call	_battery_measure	;wreg free
  1629                           
  1630                           ;motore.c: 189: previousTimeCounter2 = timeCounter;
  1631  0031E0  C0D7  F0D3         	movff	_timeCounter,_previousTimeCounter2	;volatile
  1632  0031E4  C0D8  F0D4         	movff	_timeCounter+1,_previousTimeCounter2+1	;volatile
  1633  0031E8  C0D9  F0D5         	movff	_timeCounter+2,_previousTimeCounter2+2	;volatile
  1634  0031EC  C0DA  F0D6         	movff	_timeCounter+3,_previousTimeCounter2+3	;volatile
  1635  0031F0  D67E               	goto	l6921
  1636  0031F2  EFC1  F000         	goto	start
  1637  0031F6                     __end_of_main:
  1638                           	opt stack 0
  1639                           tblptru	equ	0xFF8
  1640                           tblptrh	equ	0xFF7
  1641                           tblptrl	equ	0xFF6
  1642                           tablat	equ	0xFF5
  1643                           postinc0	equ	0xFEE
  1644                           wreg	equ	0xFE8
  1645                           status	equ	0xFD8
  1646                           
  1647 ;; *************** function _send_data *****************
  1648 ;; Defined at:
  1649 ;;		line 248 in file "motore.c"
  1650 ;; Parameters:    Size  Location     Type
  1651 ;;		None
  1652 ;; Auto vars:     Size  Location     Type
  1653 ;;		None
  1654 ;; Return value:  Size  Location     Type
  1655 ;;		None               void
  1656 ;; Registers used:
  1657 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1658 ;; Tracked objects:
  1659 ;;		On entry : 0/0
  1660 ;;		On exit  : 0/0
  1661 ;;		Unchanged: 0/0
  1662 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1663 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1664 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1665 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1666 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1667 ;;Total ram usage:        0 bytes
  1668 ;; Hardware stack levels used:    1
  1669 ;; Hardware stack levels required when called:    3
  1670 ;; This function calls:
  1671 ;;		_CANisTxReady
  1672 ;;		_CANsendMessage
  1673 ;; This function is called by:
  1674 ;;		_main
  1675 ;; This function uses a non-reentrant model
  1676 ;;
  1677                           
  1678                           	psect	text1
  1679  004C4E                     __ptext1:
  1680                           	opt stack 0
  1681  004C4E                     _send_data:
  1682                           	opt stack 27
  1683                           
  1684                           ;motore.c: 249: if (CANisTxReady()) {
  1685                           
  1686                           ;incstack = 0
  1687  004C4E  EC35  F027         	call	_CANisTxReady	;wreg free
  1688  004C52  0900               	iorlw	0
  1689  004C54  A4D8               	btfss	status,2,c
  1690                           
  1691                           ;motore.c: 250: if (remote_frame == 1) {
  1692  004C56  AE3F               	btfss	_remote_frame/(0+8),_remote_frame& (0+7),c	;volatile
  1693  004C58  D018               	goto	l6875
  1694                           
  1695                           ;motore.c: 251: CANsendMessage(id, data_array, 8, CAN_CONFIG_STD_MSG & CAN_NORMAL_TX_FRA
      +                          ME & CAN_TX_PRIORITY_0);
  1696  004C5A  C023  F060         	movff	_id,CANsendMessage@identifier	;volatile
  1697  004C5E  C024  F061         	movff	_id+1,CANsendMessage@identifier+1	;volatile
  1698  004C62  C025  F062         	movff	_id+2,CANsendMessage@identifier+2	;volatile
  1699  004C66  C026  F063         	movff	_id+3,CANsendMessage@identifier+3	;volatile
  1700  004C6A  0E37               	movlw	low _data_array
  1701  004C6C  0100               	movlb	0	; () banked
  1702  004C6E  6F64               	movwf	CANsendMessage@data& (0+255),b
  1703  004C70  0E00               	movlw	high _data_array
  1704  004C72  0100               	movlb	0	; () banked
  1705  004C74  6F65               	movwf	(CANsendMessage@data+1)& (0+255),b
  1706  004C76  0E08               	movlw	8
  1707  004C78  0100               	movlb	0	; () banked
  1708  004C7A  6F66               	movwf	CANsendMessage@dataLength& (0+255),b
  1709  004C7C  0EBC               	movlw	188
  1710  004C7E  0100               	movlb	0	; () banked
  1711  004C80  6F67               	movwf	CANsendMessage@flags& (0+255),b
  1712  004C82  EC3C  F00C         	call	_CANsendMessage	;wreg free
  1713                           
  1714                           ;motore.c: 252: remote_frame = 0;
  1715  004C86  9E3F               	bcf	_remote_frame/(0+8),_remote_frame& (0+7),c	;volatile
  1716  004C88  D000               	goto	l6875
  1717  004C8A                     l6875:
  1718                           
  1719                           ;motore.c: 253: }
  1720                           ;motore.c: 254: }
  1721                           ;motore.c: 255: if ((TXB0CONbits.TXABT == 1) || (TXB1CONbits.TXABT == 1)) {
  1722  004C8A  010F               	movlb	15	; () banked
  1723  004C8C  BD40               	btfsc	64,6,b	;volatile
  1724  004C8E  D003               	goto	l736
  1725                           
  1726                           ; BSR set to: 15
  1727  004C90  010F               	movlb	15	; () banked
  1728  004C92  AD30               	btfss	48,6,b	;volatile
  1729  004C94  D002               	goto	l734
  1730  004C96                     l736:
  1731                           
  1732                           ; BSR set to: 15
  1733                           ;motore.c: 256: can_retry = 1;
  1734  004C96  823F               	bsf	_can_retry/(0+8),_can_retry& (0+7),c	;volatile
  1735                           
  1736                           ;motore.c: 257: } else {
  1737  004C98  0012               	return	
  1738  004C9A                     l734:
  1739                           
  1740                           ; BSR set to: 15
  1741                           ;motore.c: 258: can_retry = 0;
  1742  004C9A  923F               	bcf	_can_retry/(0+8),_can_retry& (0+7),c	;volatile
  1743  004C9C  0012               	return	
  1744                           
  1745                           ; BSR set to: 15
  1746                           
  1747                           ; BSR set to: 15
  1748  004C9E  0012               	return		;funcret
  1749  004CA0                     __end_of_send_data:
  1750                           	opt stack 0
  1751                           tblptru	equ	0xFF8
  1752                           tblptrh	equ	0xFF7
  1753                           tblptrl	equ	0xFF6
  1754                           tablat	equ	0xFF5
  1755                           postinc0	equ	0xFEE
  1756                           wreg	equ	0xFE8
  1757                           status	equ	0xFD8
  1758                           
  1759 ;; *************** function _rampe *****************
  1760 ;; Defined at:
  1761 ;;		line 194 in file "motore.c"
  1762 ;; Parameters:    Size  Location     Type
  1763 ;;		None
  1764 ;; Auto vars:     Size  Location     Type
  1765 ;;		None
  1766 ;; Return value:  Size  Location     Type
  1767 ;;		None               void
  1768 ;; Registers used:
  1769 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1770 ;; Tracked objects:
  1771 ;;		On entry : 0/0
  1772 ;;		On exit  : 0/0
  1773 ;;		Unchanged: 0/0
  1774 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1775 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1776 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  1777 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1778 ;;      Totals:         0       8       4       0       0       0       0       0       0       0       0       0       
      +0       0
  1779 ;;Total ram usage:       12 bytes
  1780 ;; Hardware stack levels used:    1
  1781 ;; Hardware stack levels required when called:    7
  1782 ;; This function calls:
  1783 ;;		_CANisTxReady
  1784 ;;		_CANsendMessage
  1785 ;;		_SetDCEPWM1
  1786 ;;		_SetOutputEPWM1
  1787 ;;		___aldiv
  1788 ;;		___fladd
  1789 ;;		___fltol
  1790 ;;		___lwdiv
  1791 ;;		___lwtofl
  1792 ;;		_abs
  1793 ;;		_pow
  1794 ;; This function is called by:
  1795 ;;		_main
  1796 ;; This function uses a non-reentrant model
  1797 ;;
  1798                           
  1799                           	psect	text2
  1800  002018                     __ptext2:
  1801                           	opt stack 0
  1802  002018                     _rampe:
  1803                           	opt stack 23
  1804                           
  1805                           ;motore.c: 195: if (requestSpeed > 1) {
  1806                           
  1807                           ; BSR set to: 15
  1808                           ;incstack = 0
  1809  002018  BE2E               	btfsc	_requestSpeed+3,7,c	;volatile
  1810  00201A  D2D5               	goto	l6865
  1811  00201C  502E               	movf	_requestSpeed+3,w,c	;volatile
  1812  00201E  102D               	iorwf	_requestSpeed+2,w,c	;volatile
  1813  002020  102C               	iorwf	_requestSpeed+1,w,c	;volatile
  1814  002022  E106               	bnz	l6787
  1815  002024  0E02               	movlw	2
  1816  002026  5C2B               	subwf	_requestSpeed,w,c	;volatile
  1817  002028  B0D8               	btfsc	status,0,c
  1818  00202A  D002               	goto	l6787
  1819  00202C  D2CC               	goto	l6865
  1820                           
  1821                           ;motore.c: 196: while (CANisTxReady() != 1);
  1822  00202E  D000               	goto	l6787
  1823  002030                     l6787:
  1824  002030  EC35  F027         	call	_CANisTxReady	;wreg free
  1825  002034  06E8               	decf	wreg,f,c
  1826  002036  A4D8               	btfss	status,2,c
  1827  002038  D7FB               	goto	l6787
  1828                           
  1829                           ;motore.c: 197: CANsendMessage(0b00000001000, data_array_debug, 8, CAN_CONFIG_STD_MSG & 
      +                          CAN_REMOTE_TX_FRAME & CAN_TX_PRIORITY_0);
  1830  00203A  0E08               	movlw	8
  1831  00203C  0100               	movlb	0	; () banked
  1832  00203E  6F60               	movwf	CANsendMessage@identifier& (0+255),b
  1833  002040  0E00               	movlw	0
  1834  002042  6F61               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  1835  002044  0E00               	movlw	0
  1836  002046  6F62               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  1837  002048  0E00               	movlw	0
  1838  00204A  6F63               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  1839  00204C  0EF5               	movlw	low _data_array_debug
  1840  00204E  0100               	movlb	0	; () banked
  1841  002050  6F64               	movwf	CANsendMessage@data& (0+255),b
  1842  002052  0E00               	movlw	high _data_array_debug
  1843  002054  0100               	movlb	0	; () banked
  1844  002056  6F65               	movwf	(CANsendMessage@data+1)& (0+255),b
  1845  002058  0E08               	movlw	8
  1846  00205A  0100               	movlb	0	; () banked
  1847  00205C  6F66               	movwf	CANsendMessage@dataLength& (0+255),b
  1848  00205E  0EFC               	movlw	252
  1849  002060  0100               	movlb	0	; () banked
  1850  002062  6F67               	movwf	CANsendMessage@flags& (0+255),b
  1851  002064  EC3C  F00C         	call	_CANsendMessage	;wreg free
  1852                           
  1853                           ;motore.c: 198: if (speed_fetched == 1) {
  1854  002068  A440               	btfss	_speed_fetched/(0+8),_speed_fetched& (0+7),c	;volatile
  1855  00206A  D29A               	goto	l6859
  1856                           
  1857                           ;motore.c: 199: if (dir == 1) {
  1858  00206C  0100               	movlb	0	; () banked
  1859  00206E  05FD               	decf	_dir& (0+255),w,b	;volatile
  1860  002070  0100               	movlb	0	; () banked
  1861  002072  11FE               	iorwf	(_dir+1)& (0+255),w,b	;volatile
  1862  002074  A4D8               	btfss	status,2,c
  1863  002076  D007               	goto	l6797
  1864                           
  1865                           ; BSR set to: 0
  1866                           ;motore.c: 200: SetOutputEPWM1(0b01111111, 0b11111100);
  1867  002078  0EFC               	movlw	252
  1868  00207A  0100               	movlb	0	; () banked
  1869  00207C  6F60               	movwf	SetOutputEPWM1@outputmode& (0+255),b
  1870  00207E  0E7F               	movlw	127
  1871  002080  ECFD  F025         	call	_SetOutputEPWM1
  1872  002084  D000               	goto	l6797
  1873  002086                     l6797:
  1874                           
  1875                           ;motore.c: 201: }
  1876                           ;motore.c: 202: if (dir == 0) {
  1877  002086  0100               	movlb	0	; () banked
  1878  002088  51FD               	movf	_dir& (0+255),w,b	;volatile
  1879  00208A  0100               	movlb	0	; () banked
  1880  00208C  11FE               	iorwf	(_dir+1)& (0+255),w,b	;volatile
  1881  00208E  A4D8               	btfss	status,2,c
  1882  002090  D007               	goto	l6801
  1883                           
  1884                           ; BSR set to: 0
  1885                           ;motore.c: 203: SetOutputEPWM1(0b11111111, 0b11111100);
  1886  002092  0EFC               	movlw	252
  1887  002094  0100               	movlb	0	; () banked
  1888  002096  6F60               	movwf	SetOutputEPWM1@outputmode& (0+255),b
  1889  002098  0EFF               	movlw	255
  1890  00209A  ECFD  F025         	call	_SetOutputEPWM1
  1891  00209E  D000               	goto	l6801
  1892  0020A0                     l6801:
  1893                           
  1894                           ;motore.c: 204: }
  1895                           ;motore.c: 205: speed_fetched = 0;
  1896  0020A0  9440               	bcf	_speed_fetched/(0+8),_speed_fetched& (0+7),c	;volatile
  1897                           
  1898                           ;motore.c: 206: currentSpeed = ((left_speed + right_speed) / 2);
  1899  0020A2  0100               	movlb	0	; () banked
  1900  0020A4  51E3               	movf	_right_speed& (0+255),w,b	;volatile
  1901  0020A6  0100               	movlb	0	; () banked
  1902  0020A8  25DF               	addwf	_left_speed& (0+255),w,b	;volatile
  1903  0020AA  0100               	movlb	0	; () banked
  1904  0020AC  6FB6               	movwf	??_rampe& (0+255),b
  1905  0020AE  0100               	movlb	0	; () banked
  1906  0020B0  51E4               	movf	(_right_speed+1)& (0+255),w,b	;volatile
  1907  0020B2  0100               	movlb	0	; () banked
  1908  0020B4  21E0               	addwfc	(_left_speed+1)& (0+255),w,b	;volatile
  1909  0020B6  0100               	movlb	0	; () banked
  1910  0020B8  6FB7               	movwf	(??_rampe+1)& (0+255),b
  1911  0020BA  90D8               	bcf	status,0,c
  1912  0020BC  0100               	movlb	0	; () banked
  1913  0020BE  31B7               	rrcf	(??_rampe+1)& (0+255),w,b
  1914  0020C0  0100               	movlb	0	; () banked
  1915  0020C2  6FB9               	movwf	(??_rampe+3)& (0+255),b
  1916  0020C4  0100               	movlb	0	; () banked
  1917  0020C6  31B6               	rrcf	??_rampe& (0+255),w,b
  1918  0020C8  0100               	movlb	0	; () banked
  1919  0020CA  6FB8               	movwf	(??_rampe+2)& (0+255),b
  1920  0020CC  C0B8  F0C3         	movff	??_rampe+2,_currentSpeed	;volatile
  1921  0020D0  C0B9  F0C4         	movff	??_rampe+3,_currentSpeed+1	;volatile
  1922  0020D4  0100               	movlb	0	; () banked
  1923  0020D6  6BC5               	clrf	(_currentSpeed+2)& (0+255),b	;volatile
  1924  0020D8  6BC6               	clrf	(_currentSpeed+3)& (0+255),b	;volatile
  1925                           
  1926                           ; BSR set to: 0
  1927                           ;motore.c: 207: if ((currentSpeed == 0)&&(requestSpeed > 1000)) {
  1928  0020DA  0100               	movlb	0	; () banked
  1929  0020DC  51C3               	movf	_currentSpeed& (0+255),w,b	;volatile
  1930  0020DE  0100               	movlb	0	; () banked
  1931  0020E0  11C4               	iorwf	(_currentSpeed+1)& (0+255),w,b	;volatile
  1932  0020E2  0100               	movlb	0	; () banked
  1933  0020E4  11C5               	iorwf	(_currentSpeed+2)& (0+255),w,b	;volatile
  1934  0020E6  0100               	movlb	0	; () banked
  1935  0020E8  11C6               	iorwf	(_currentSpeed+3)& (0+255),w,b	;volatile
  1936  0020EA  B4D8               	btfsc	status,2,c
  1937                           
  1938                           ; BSR set to: 0
  1939  0020EC  BE2E               	btfsc	_requestSpeed+3,7,c	;volatile
  1940  0020EE  D016               	goto	l6813
  1941  0020F0  502E               	movf	_requestSpeed+3,w,c	;volatile
  1942  0020F2  102D               	iorwf	_requestSpeed+2,w,c	;volatile
  1943  0020F4  E106               	bnz	u8970
  1944  0020F6  0EE9               	movlw	233
  1945  0020F8  5C2B               	subwf	_requestSpeed,w,c	;volatile
  1946  0020FA  0E03               	movlw	3
  1947  0020FC  582C               	subwfb	_requestSpeed+1,w,c	;volatile
  1948  0020FE  A0D8               	btfss	status,0,c
  1949  002100  D00D               	goto	l6813
  1950  002102                     u8970:
  1951                           
  1952                           ; BSR set to: 0
  1953                           ;motore.c: 208: SetDCEPWM1(1000);
  1954  002102  0E03               	movlw	3
  1955  002104  0100               	movlb	0	; () banked
  1956  002106  6F61               	movwf	(SetDCEPWM1@dutycycle+1)& (0+255),b
  1957  002108  0EE8               	movlw	232
  1958  00210A  6F60               	movwf	SetDCEPWM1@dutycycle& (0+255),b
  1959  00210C  EC76  F026         	call	_SetDCEPWM1	;wreg free
  1960                           
  1961                           ;motore.c: 209: previousPwm = 1000;
  1962  002110  0E03               	movlw	3
  1963  002112  0100               	movlb	0	; () banked
  1964  002114  6FE2               	movwf	(_previousPwm+1)& (0+255),b
  1965  002116  0EE8               	movlw	232
  1966  002118  6FE1               	movwf	_previousPwm& (0+255),b
  1967  00211A  D000               	goto	l6813
  1968  00211C                     l6813:
  1969                           
  1970                           ; BSR set to: 0
  1971                           ;motore.c: 210: }
  1972                           ;motore.c: 211: if ((currentSpeed == 0)&&(requestSpeed < 1000)) {
  1973  00211C  0100               	movlb	0	; () banked
  1974  00211E  51C3               	movf	_currentSpeed& (0+255),w,b	;volatile
  1975  002120  0100               	movlb	0	; () banked
  1976  002122  11C4               	iorwf	(_currentSpeed+1)& (0+255),w,b	;volatile
  1977  002124  0100               	movlb	0	; () banked
  1978  002126  11C5               	iorwf	(_currentSpeed+2)& (0+255),w,b	;volatile
  1979  002128  0100               	movlb	0	; () banked
  1980  00212A  11C6               	iorwf	(_currentSpeed+3)& (0+255),w,b	;volatile
  1981  00212C  A4D8               	btfss	status,2,c
  1982  00212E  D018               	goto	l6821
  1983                           
  1984                           ; BSR set to: 0
  1985  002130  BE2E               	btfsc	_requestSpeed+3,7,c	;volatile
  1986  002132  D009               	goto	l6817
  1987  002134  502E               	movf	_requestSpeed+3,w,c	;volatile
  1988  002136  102D               	iorwf	_requestSpeed+2,w,c	;volatile
  1989  002138  E113               	bnz	l6821
  1990  00213A  0EE8               	movlw	232
  1991  00213C  5C2B               	subwf	_requestSpeed,w,c	;volatile
  1992  00213E  0E03               	movlw	3
  1993  002140  582C               	subwfb	_requestSpeed+1,w,c	;volatile
  1994  002142  B0D8               	btfsc	status,0,c
  1995  002144  D00D               	goto	l6821
  1996  002146                     l6817:
  1997                           
  1998                           ; BSR set to: 0
  1999                           ;motore.c: 212: SetDCEPWM1(600);
  2000  002146  0E02               	movlw	2
  2001  002148  0100               	movlb	0	; () banked
  2002  00214A  6F61               	movwf	(SetDCEPWM1@dutycycle+1)& (0+255),b
  2003  00214C  0E58               	movlw	88
  2004  00214E  6F60               	movwf	SetDCEPWM1@dutycycle& (0+255),b
  2005  002150  EC76  F026         	call	_SetDCEPWM1	;wreg free
  2006                           
  2007                           ;motore.c: 213: previousPwm = 600;
  2008  002154  0E02               	movlw	2
  2009  002156  0100               	movlb	0	; () banked
  2010  002158  6FE2               	movwf	(_previousPwm+1)& (0+255),b
  2011  00215A  0E58               	movlw	88
  2012  00215C  6FE1               	movwf	_previousPwm& (0+255),b
  2013  00215E  D000               	goto	l6821
  2014  002160                     l6821:
  2015                           
  2016                           ; BSR set to: 0
  2017                           ;motore.c: 214: }
  2018                           ;motore.c: 215: errore = abs((currentSpeed - requestSpeed));
  2019  002160  C02B  F0B6         	movff	_requestSpeed,??_rampe	;volatile
  2020  002164  C02C  F0B7         	movff	_requestSpeed+1,??_rampe+1	;volatile
  2021  002168  0100               	movlb	0	; () banked
  2022  00216A  1FB6               	comf	??_rampe& (0+255),f,b
  2023  00216C  1FB7               	comf	(??_rampe+1)& (0+255),f,b
  2024  00216E  4BB6               	infsnz	??_rampe& (0+255),f,b
  2025  002170  2BB7               	incf	(??_rampe+1)& (0+255),f,b
  2026  002172  0100               	movlb	0	; () banked
  2027  002174  51C3               	movf	_currentSpeed& (0+255),w,b	;volatile
  2028  002176  0100               	movlb	0	; () banked
  2029  002178  25B6               	addwf	??_rampe& (0+255),w,b
  2030  00217A  0100               	movlb	0	; () banked
  2031  00217C  6F60               	movwf	abs@a& (0+255),b
  2032  00217E  0100               	movlb	0	; () banked
  2033  002180  51C4               	movf	(_currentSpeed+1)& (0+255),w,b	;volatile
  2034  002182  0100               	movlb	0	; () banked
  2035  002184  21B7               	addwfc	(??_rampe+1)& (0+255),w,b
  2036  002186  0100               	movlb	0	; () banked
  2037  002188  6F61               	movwf	(abs@a+1)& (0+255),b
  2038  00218A  EC1F  F027         	call	_abs	;wreg free
  2039  00218E  C060  F0DD         	movff	?_abs,_errore
  2040  002192  C061  F0DE         	movff	?_abs+1,_errore+1
  2041                           
  2042                           ;motore.c: 217: if (errore > 3000) {
  2043  002196  0EB9               	movlw	185
  2044  002198  0100               	movlb	0	; () banked
  2045  00219A  5DDD               	subwf	_errore& (0+255),w,b
  2046  00219C  0E0B               	movlw	11
  2047  00219E  0100               	movlb	0	; () banked
  2048  0021A0  59DE               	subwfb	(_errore+1)& (0+255),w,b
  2049  0021A2  A0D8               	btfss	status,0,c
  2050  0021A4  D04A               	goto	l6829
  2051                           
  2052                           ; BSR set to: 0
  2053                           ;motore.c: 218: correzione = pow(2, (errore / 800)) - 1;
  2054  0021A6  0E03               	movlw	3
  2055  0021A8  0100               	movlb	0	; () banked
  2056  0021AA  6F63               	movwf	(___lwdiv@divisor+1)& (0+255),b
  2057  0021AC  0E20               	movlw	32
  2058  0021AE  6F62               	movwf	___lwdiv@divisor& (0+255),b
  2059  0021B0  C0DD  F060         	movff	_errore,___lwdiv@dividend
  2060  0021B4  C0DE  F061         	movff	_errore+1,___lwdiv@dividend+1
  2061  0021B8  EC34  F025         	call	___lwdiv	;wreg free
  2062  0021BC  C060  F06A         	movff	?___lwdiv,___lwtofl@c
  2063  0021C0  C061  F06B         	movff	?___lwdiv+1,___lwtofl@c+1
  2064  0021C4  EC06  F027         	call	___lwtofl	;wreg free
  2065  0021C8  C06A  F0B2         	movff	?___lwtofl,pow@y
  2066  0021CC  C06B  F0B3         	movff	?___lwtofl+1,pow@y+1
  2067  0021D0  C06C  F0B4         	movff	?___lwtofl+2,pow@y+2
  2068  0021D4  C06D  F0B5         	movff	?___lwtofl+3,pow@y+3
  2069  0021D8  0E00               	movlw	0
  2070  0021DA  0100               	movlb	0	; () banked
  2071  0021DC  6FAE               	movwf	pow@x& (0+255),b
  2072  0021DE  0E00               	movlw	0
  2073  0021E0  6FAF               	movwf	(pow@x+1)& (0+255),b
  2074  0021E2  0E00               	movlw	0
  2075  0021E4  6FB0               	movwf	(pow@x+2)& (0+255),b
  2076  0021E6  0E40               	movlw	64
  2077  0021E8  6FB1               	movwf	(pow@x+3)& (0+255),b
  2078  0021EA  EC77  F01B         	call	_pow	;wreg free
  2079  0021EE  C0AE  F10D         	movff	?_pow,_rampe$4018
  2080  0021F2  C0AF  F10E         	movff	?_pow+1,_rampe$4018+1
  2081  0021F6  C0B0  F10F         	movff	?_pow+2,_rampe$4018+2
  2082  0021FA  C0B1  F110         	movff	?_pow+3,_rampe$4018+3
  2083                           
  2084                           ;motore.c: 218: correzione = pow(2, (errore / 800)) - 1;
  2085  0021FE  0E00               	movlw	0
  2086  002200  0100               	movlb	0	; () banked
  2087  002202  6F82               	movwf	___fladd@f2& (0+255),b
  2088  002204  0E00               	movlw	0
  2089  002206  6F83               	movwf	(___fladd@f2+1)& (0+255),b
  2090  002208  0E80               	movlw	128
  2091  00220A  6F84               	movwf	(___fladd@f2+2)& (0+255),b
  2092  00220C  0EBF               	movlw	191
  2093  00220E  6F85               	movwf	(___fladd@f2+3)& (0+255),b
  2094  002210  C10D  F07E         	movff	_rampe$4018,___fladd@f1
  2095  002214  C10E  F07F         	movff	_rampe$4018+1,___fladd@f1+1
  2096  002218  C10F  F080         	movff	_rampe$4018+2,___fladd@f1+2
  2097  00221C  C110  F081         	movff	_rampe$4018+3,___fladd@f1+3
  2098  002220  EC41  F01A         	call	___fladd	;wreg free
  2099  002224  C07E  F08A         	movff	?___fladd,___fltol@f1
  2100  002228  C07F  F08B         	movff	?___fladd+1,___fltol@f1+1
  2101  00222C  C080  F08C         	movff	?___fladd+2,___fltol@f1+2
  2102  002230  C081  F08D         	movff	?___fladd+3,___fltol@f1+3
  2103  002234  ECEA  F021         	call	___fltol	;wreg free
  2104  002238  D0F5               	goto	L3
  2105  00223A                     l6829:
  2106  00223A  0ED1               	movlw	209
  2107  00223C  0100               	movlb	0	; () banked
  2108  00223E  5DDD               	subwf	_errore& (0+255),w,b
  2109  002240  0E07               	movlw	7
  2110  002242  0100               	movlb	0	; () banked
  2111  002244  59DE               	subwfb	(_errore+1)& (0+255),w,b
  2112  002246  A0D8               	btfss	status,0,c
  2113  002248  D04A               	goto	l6835
  2114                           
  2115                           ; BSR set to: 0
  2116                           ;motore.c: 220: correzione = pow(2, (errore / 400)) - 1;
  2117  00224A  0E01               	movlw	1
  2118  00224C  0100               	movlb	0	; () banked
  2119  00224E  6F63               	movwf	(___lwdiv@divisor+1)& (0+255),b
  2120  002250  0E90               	movlw	144
  2121  002252  6F62               	movwf	___lwdiv@divisor& (0+255),b
  2122  002254  C0DD  F060         	movff	_errore,___lwdiv@dividend
  2123  002258  C0DE  F061         	movff	_errore+1,___lwdiv@dividend+1
  2124  00225C  EC34  F025         	call	___lwdiv	;wreg free
  2125  002260  C060  F06A         	movff	?___lwdiv,___lwtofl@c
  2126  002264  C061  F06B         	movff	?___lwdiv+1,___lwtofl@c+1
  2127  002268  EC06  F027         	call	___lwtofl	;wreg free
  2128  00226C  C06A  F0B2         	movff	?___lwtofl,pow@y
  2129  002270  C06B  F0B3         	movff	?___lwtofl+1,pow@y+1
  2130  002274  C06C  F0B4         	movff	?___lwtofl+2,pow@y+2
  2131  002278  C06D  F0B5         	movff	?___lwtofl+3,pow@y+3
  2132  00227C  0E00               	movlw	0
  2133  00227E  0100               	movlb	0	; () banked
  2134  002280  6FAE               	movwf	pow@x& (0+255),b
  2135  002282  0E00               	movlw	0
  2136  002284  6FAF               	movwf	(pow@x+1)& (0+255),b
  2137  002286  0E00               	movlw	0
  2138  002288  6FB0               	movwf	(pow@x+2)& (0+255),b
  2139  00228A  0E40               	movlw	64
  2140  00228C  6FB1               	movwf	(pow@x+3)& (0+255),b
  2141  00228E  EC77  F01B         	call	_pow	;wreg free
  2142  002292  C0AE  F10D         	movff	?_pow,_rampe$4018
  2143  002296  C0AF  F10E         	movff	?_pow+1,_rampe$4018+1
  2144  00229A  C0B0  F10F         	movff	?_pow+2,_rampe$4018+2
  2145  00229E  C0B1  F110         	movff	?_pow+3,_rampe$4018+3
  2146                           
  2147                           ;motore.c: 220: correzione = pow(2, (errore / 400)) - 1;
  2148  0022A2  0E00               	movlw	0
  2149  0022A4  0100               	movlb	0	; () banked
  2150  0022A6  6F82               	movwf	___fladd@f2& (0+255),b
  2151  0022A8  0E00               	movlw	0
  2152  0022AA  6F83               	movwf	(___fladd@f2+1)& (0+255),b
  2153  0022AC  0E80               	movlw	128
  2154  0022AE  6F84               	movwf	(___fladd@f2+2)& (0+255),b
  2155  0022B0  0EBF               	movlw	191
  2156  0022B2  6F85               	movwf	(___fladd@f2+3)& (0+255),b
  2157  0022B4  C10D  F07E         	movff	_rampe$4018,___fladd@f1
  2158  0022B8  C10E  F07F         	movff	_rampe$4018+1,___fladd@f1+1
  2159  0022BC  C10F  F080         	movff	_rampe$4018+2,___fladd@f1+2
  2160  0022C0  C110  F081         	movff	_rampe$4018+3,___fladd@f1+3
  2161  0022C4  EC41  F01A         	call	___fladd	;wreg free
  2162  0022C8  C07E  F08A         	movff	?___fladd,___fltol@f1
  2163  0022CC  C07F  F08B         	movff	?___fladd+1,___fltol@f1+1
  2164  0022D0  C080  F08C         	movff	?___fladd+2,___fltol@f1+2
  2165  0022D4  C081  F08D         	movff	?___fladd+3,___fltol@f1+3
  2166  0022D8  ECEA  F021         	call	___fltol	;wreg free
  2167  0022DC  D0A3               	goto	L3
  2168  0022DE                     l6835:
  2169  0022DE  0EE9               	movlw	233
  2170  0022E0  0100               	movlb	0	; () banked
  2171  0022E2  5DDD               	subwf	_errore& (0+255),w,b
  2172  0022E4  0E03               	movlw	3
  2173  0022E6  0100               	movlb	0	; () banked
  2174  0022E8  59DE               	subwfb	(_errore+1)& (0+255),w,b
  2175  0022EA  A0D8               	btfss	status,0,c
  2176  0022EC  D04A               	goto	l6841
  2177                           
  2178                           ; BSR set to: 0
  2179                           ;motore.c: 222: correzione = pow(2, (errore / 200)) - 1;
  2180  0022EE  0E00               	movlw	0
  2181  0022F0  0100               	movlb	0	; () banked
  2182  0022F2  6F63               	movwf	(___lwdiv@divisor+1)& (0+255),b
  2183  0022F4  0EC8               	movlw	200
  2184  0022F6  6F62               	movwf	___lwdiv@divisor& (0+255),b
  2185  0022F8  C0DD  F060         	movff	_errore,___lwdiv@dividend
  2186  0022FC  C0DE  F061         	movff	_errore+1,___lwdiv@dividend+1
  2187  002300  EC34  F025         	call	___lwdiv	;wreg free
  2188  002304  C060  F06A         	movff	?___lwdiv,___lwtofl@c
  2189  002308  C061  F06B         	movff	?___lwdiv+1,___lwtofl@c+1
  2190  00230C  EC06  F027         	call	___lwtofl	;wreg free
  2191  002310  C06A  F0B2         	movff	?___lwtofl,pow@y
  2192  002314  C06B  F0B3         	movff	?___lwtofl+1,pow@y+1
  2193  002318  C06C  F0B4         	movff	?___lwtofl+2,pow@y+2
  2194  00231C  C06D  F0B5         	movff	?___lwtofl+3,pow@y+3
  2195  002320  0E00               	movlw	0
  2196  002322  0100               	movlb	0	; () banked
  2197  002324  6FAE               	movwf	pow@x& (0+255),b
  2198  002326  0E00               	movlw	0
  2199  002328  6FAF               	movwf	(pow@x+1)& (0+255),b
  2200  00232A  0E00               	movlw	0
  2201  00232C  6FB0               	movwf	(pow@x+2)& (0+255),b
  2202  00232E  0E40               	movlw	64
  2203  002330  6FB1               	movwf	(pow@x+3)& (0+255),b
  2204  002332  EC77  F01B         	call	_pow	;wreg free
  2205  002336  C0AE  F10D         	movff	?_pow,_rampe$4018
  2206  00233A  C0AF  F10E         	movff	?_pow+1,_rampe$4018+1
  2207  00233E  C0B0  F10F         	movff	?_pow+2,_rampe$4018+2
  2208  002342  C0B1  F110         	movff	?_pow+3,_rampe$4018+3
  2209                           
  2210                           ;motore.c: 222: correzione = pow(2, (errore / 200)) - 1;
  2211  002346  0E00               	movlw	0
  2212  002348  0100               	movlb	0	; () banked
  2213  00234A  6F82               	movwf	___fladd@f2& (0+255),b
  2214  00234C  0E00               	movlw	0
  2215  00234E  6F83               	movwf	(___fladd@f2+1)& (0+255),b
  2216  002350  0E80               	movlw	128
  2217  002352  6F84               	movwf	(___fladd@f2+2)& (0+255),b
  2218  002354  0EBF               	movlw	191
  2219  002356  6F85               	movwf	(___fladd@f2+3)& (0+255),b
  2220  002358  C10D  F07E         	movff	_rampe$4018,___fladd@f1
  2221  00235C  C10E  F07F         	movff	_rampe$4018+1,___fladd@f1+1
  2222  002360  C10F  F080         	movff	_rampe$4018+2,___fladd@f1+2
  2223  002364  C110  F081         	movff	_rampe$4018+3,___fladd@f1+3
  2224  002368  EC41  F01A         	call	___fladd	;wreg free
  2225  00236C  C07E  F08A         	movff	?___fladd,___fltol@f1
  2226  002370  C07F  F08B         	movff	?___fladd+1,___fltol@f1+1
  2227  002374  C080  F08C         	movff	?___fladd+2,___fltol@f1+2
  2228  002378  C081  F08D         	movff	?___fladd+3,___fltol@f1+3
  2229  00237C  ECEA  F021         	call	___fltol	;wreg free
  2230  002380  D051               	goto	L3
  2231  002382                     l6841:
  2232  002382  0EE8               	movlw	232
  2233  002384  0100               	movlb	0	; () banked
  2234  002386  5DDD               	subwf	_errore& (0+255),w,b
  2235  002388  0E03               	movlw	3
  2236  00238A  0100               	movlb	0	; () banked
  2237  00238C  59DE               	subwfb	(_errore+1)& (0+255),w,b
  2238  00238E  B0D8               	btfsc	status,0,c
  2239  002390  D052               	goto	l6847
  2240                           
  2241                           ; BSR set to: 0
  2242                           ;motore.c: 226: correzione = pow(2, (errore / 200)) - 1;
  2243  002392  0E00               	movlw	0
  2244  002394  0100               	movlb	0	; () banked
  2245  002396  6F63               	movwf	(___lwdiv@divisor+1)& (0+255),b
  2246  002398  0EC8               	movlw	200
  2247  00239A  6F62               	movwf	___lwdiv@divisor& (0+255),b
  2248  00239C  C0DD  F060         	movff	_errore,___lwdiv@dividend
  2249  0023A0  C0DE  F061         	movff	_errore+1,___lwdiv@dividend+1
  2250  0023A4  EC34  F025         	call	___lwdiv	;wreg free
  2251  0023A8  C060  F06A         	movff	?___lwdiv,___lwtofl@c
  2252  0023AC  C061  F06B         	movff	?___lwdiv+1,___lwtofl@c+1
  2253  0023B0  EC06  F027         	call	___lwtofl	;wreg free
  2254  0023B4  C06A  F0B2         	movff	?___lwtofl,pow@y
  2255  0023B8  C06B  F0B3         	movff	?___lwtofl+1,pow@y+1
  2256  0023BC  C06C  F0B4         	movff	?___lwtofl+2,pow@y+2
  2257  0023C0  C06D  F0B5         	movff	?___lwtofl+3,pow@y+3
  2258  0023C4  0E00               	movlw	0
  2259  0023C6  0100               	movlb	0	; () banked
  2260  0023C8  6FAE               	movwf	pow@x& (0+255),b
  2261  0023CA  0E00               	movlw	0
  2262  0023CC  6FAF               	movwf	(pow@x+1)& (0+255),b
  2263  0023CE  0E00               	movlw	0
  2264  0023D0  6FB0               	movwf	(pow@x+2)& (0+255),b
  2265  0023D2  0E40               	movlw	64
  2266  0023D4  6FB1               	movwf	(pow@x+3)& (0+255),b
  2267  0023D6  EC77  F01B         	call	_pow	;wreg free
  2268  0023DA  C0AE  F10D         	movff	?_pow,_rampe$4018
  2269  0023DE  C0AF  F10E         	movff	?_pow+1,_rampe$4018+1
  2270  0023E2  C0B0  F10F         	movff	?_pow+2,_rampe$4018+2
  2271  0023E6  C0B1  F110         	movff	?_pow+3,_rampe$4018+3
  2272                           
  2273                           ;motore.c: 226: correzione = pow(2, (errore / 200)) - 1;
  2274  0023EA  0E00               	movlw	0
  2275  0023EC  0100               	movlb	0	; () banked
  2276  0023EE  6F82               	movwf	___fladd@f2& (0+255),b
  2277  0023F0  0E00               	movlw	0
  2278  0023F2  6F83               	movwf	(___fladd@f2+1)& (0+255),b
  2279  0023F4  0E80               	movlw	128
  2280  0023F6  6F84               	movwf	(___fladd@f2+2)& (0+255),b
  2281  0023F8  0EBF               	movlw	191
  2282  0023FA  6F85               	movwf	(___fladd@f2+3)& (0+255),b
  2283  0023FC  C10D  F07E         	movff	_rampe$4018,___fladd@f1
  2284  002400  C10E  F07F         	movff	_rampe$4018+1,___fladd@f1+1
  2285  002404  C10F  F080         	movff	_rampe$4018+2,___fladd@f1+2
  2286  002408  C110  F081         	movff	_rampe$4018+3,___fladd@f1+3
  2287  00240C  EC41  F01A         	call	___fladd	;wreg free
  2288  002410  C07E  F08A         	movff	?___fladd,___fltol@f1
  2289  002414  C07F  F08B         	movff	?___fladd+1,___fltol@f1+1
  2290  002418  C080  F08C         	movff	?___fladd+2,___fltol@f1+2
  2291  00241C  C081  F08D         	movff	?___fladd+3,___fltol@f1+3
  2292  002420  ECEA  F021         	call	___fltol	;wreg free
  2293  002424                     L3:
  2294  002424  C08A  F0BF         	movff	?___fltol,_correzione
  2295  002428  C08B  F0C0         	movff	?___fltol+1,_correzione+1
  2296  00242C  C08C  F0C1         	movff	?___fltol+2,_correzione+2
  2297  002430  C08D  F0C2         	movff	?___fltol+3,_correzione+3
  2298  002434  D000               	goto	l6847
  2299  002436                     l6847:
  2300                           
  2301                           ;motore.c: 227: }
  2302                           ;motore.c: 228: if (currentSpeed - requestSpeed > 0) {
  2303  002436  C02B  F0B6         	movff	_requestSpeed,??_rampe	;volatile
  2304  00243A  C02C  F0B7         	movff	_requestSpeed+1,??_rampe+1	;volatile
  2305  00243E  C02D  F0B8         	movff	_requestSpeed+2,??_rampe+2	;volatile
  2306  002442  C02E  F0B9         	movff	_requestSpeed+3,??_rampe+3	;volatile
  2307  002446  0100               	movlb	0	; () banked
  2308  002448  1FB6               	comf	??_rampe& (0+255),f,b
  2309  00244A  1FB7               	comf	(??_rampe+1)& (0+255),f,b
  2310  00244C  1FB8               	comf	(??_rampe+2)& (0+255),f,b
  2311  00244E  1FB9               	comf	(??_rampe+3)& (0+255),f,b
  2312  002450  2BB6               	incf	??_rampe& (0+255),f,b
  2313  002452  0E00               	movlw	0
  2314  002454  23B7               	addwfc	(??_rampe+1)& (0+255),f,b
  2315  002456  23B8               	addwfc	(??_rampe+2)& (0+255),f,b
  2316  002458  23B9               	addwfc	(??_rampe+3)& (0+255),f,b
  2317  00245A  0100               	movlb	0	; () banked
  2318  00245C  51C3               	movf	_currentSpeed& (0+255),w,b	;volatile
  2319  00245E  0100               	movlb	0	; () banked
  2320  002460  25B6               	addwf	??_rampe& (0+255),w,b
  2321  002462  0100               	movlb	0	; () banked
  2322  002464  6FBA               	movwf	(??_rampe+4)& (0+255),b
  2323  002466  0100               	movlb	0	; () banked
  2324  002468  51C4               	movf	(_currentSpeed+1)& (0+255),w,b	;volatile
  2325  00246A  0100               	movlb	0	; () banked
  2326  00246C  21B7               	addwfc	(??_rampe+1)& (0+255),w,b
  2327  00246E  0100               	movlb	0	; () banked
  2328  002470  6FBB               	movwf	(??_rampe+5)& (0+255),b
  2329  002472  0100               	movlb	0	; () banked
  2330  002474  51C5               	movf	(_currentSpeed+2)& (0+255),w,b	;volatile
  2331  002476  0100               	movlb	0	; () banked
  2332  002478  21B8               	addwfc	(??_rampe+2)& (0+255),w,b
  2333  00247A  0100               	movlb	0	; () banked
  2334  00247C  6FBC               	movwf	(??_rampe+6)& (0+255),b
  2335  00247E  0100               	movlb	0	; () banked
  2336  002480  51C6               	movf	(_currentSpeed+3)& (0+255),w,b	;volatile
  2337  002482  0100               	movlb	0	; () banked
  2338  002484  21B9               	addwfc	(??_rampe+3)& (0+255),w,b
  2339  002486  0100               	movlb	0	; () banked
  2340  002488  6FBD               	movwf	(??_rampe+7)& (0+255),b
  2341  00248A  0100               	movlb	0	; () banked
  2342  00248C  BFBD               	btfsc	(??_rampe+7)& (0+255),7,b
  2343  00248E  D059               	goto	l6855
  2344  002490  0100               	movlb	0	; () banked
  2345  002492  51BD               	movf	(??_rampe+7)& (0+255),w,b
  2346  002494  0100               	movlb	0	; () banked
  2347  002496  11BC               	iorwf	(??_rampe+6)& (0+255),w,b
  2348  002498  0100               	movlb	0	; () banked
  2349  00249A  11BB               	iorwf	(??_rampe+5)& (0+255),w,b
  2350  00249C  E104               	bnz	u9040
  2351  00249E  0100               	movlb	0	; () banked
  2352  0024A0  05BA               	decf	(??_rampe+4)& (0+255),w,b
  2353  0024A2  A0D8               	btfss	status,0,c
  2354  0024A4  D04E               	goto	l6855
  2355  0024A6                     u9040:
  2356                           
  2357                           ; BSR set to: 0
  2358                           ;motore.c: 229: duty_set = previousPwm - (correzione / 10);
  2359  0024A6  C0BF  F060         	movff	_correzione,___aldiv@dividend
  2360  0024AA  C0C0  F061         	movff	_correzione+1,___aldiv@dividend+1
  2361  0024AE  C0C1  F062         	movff	_correzione+2,___aldiv@dividend+2
  2362  0024B2  C0C2  F063         	movff	_correzione+3,___aldiv@dividend+3
  2363  0024B6  0E0A               	movlw	10
  2364  0024B8  0100               	movlb	0	; () banked
  2365  0024BA  6F64               	movwf	___aldiv@divisor& (0+255),b
  2366  0024BC  0E00               	movlw	0
  2367  0024BE  6F65               	movwf	(___aldiv@divisor+1)& (0+255),b
  2368  0024C0  0E00               	movlw	0
  2369  0024C2  6F66               	movwf	(___aldiv@divisor+2)& (0+255),b
  2370  0024C4  0E00               	movlw	0
  2371  0024C6  6F67               	movwf	(___aldiv@divisor+3)& (0+255),b
  2372  0024C8  ECC3  F020         	call	___aldiv	;wreg free
  2373  0024CC  0100               	movlb	0	; () banked
  2374  0024CE  1F60               	comf	?___aldiv& (0+255),f,b
  2375  0024D0  0100               	movlb	0	; () banked
  2376  0024D2  1F61               	comf	(?___aldiv+1)& (0+255),f,b
  2377  0024D4  0100               	movlb	0	; () banked
  2378  0024D6  1F62               	comf	(?___aldiv+2)& (0+255),f,b
  2379  0024D8  0100               	movlb	0	; () banked
  2380  0024DA  1F63               	comf	(?___aldiv+3)& (0+255),f,b
  2381  0024DC  0100               	movlb	0	; () banked
  2382  0024DE  2B60               	incf	?___aldiv& (0+255),f,b
  2383  0024E0  0E00               	movlw	0
  2384  0024E2  0100               	movlb	0	; () banked
  2385  0024E4  2361               	addwfc	(?___aldiv+1)& (0+255),f,b
  2386  0024E6  0100               	movlb	0	; () banked
  2387  0024E8  2362               	addwfc	(?___aldiv+2)& (0+255),f,b
  2388  0024EA  0100               	movlb	0	; () banked
  2389  0024EC  2363               	addwfc	(?___aldiv+3)& (0+255),f,b
  2390  0024EE  0100               	movlb	0	; () banked
  2391  0024F0  51E1               	movf	_previousPwm& (0+255),w,b
  2392  0024F2  0100               	movlb	0	; () banked
  2393  0024F4  2560               	addwf	?___aldiv& (0+255),w,b
  2394  0024F6  0100               	movlb	0	; () banked
  2395  0024F8  6FC7               	movwf	_duty_set& (0+255),b
  2396  0024FA  0100               	movlb	0	; () banked
  2397  0024FC  51E2               	movf	(_previousPwm+1)& (0+255),w,b
  2398  0024FE  0100               	movlb	0	; () banked
  2399  002500  2161               	addwfc	(?___aldiv+1)& (0+255),w,b
  2400  002502  0100               	movlb	0	; () banked
  2401  002504  6FC8               	movwf	(_duty_set+1)& (0+255),b
  2402  002506  0E00               	movlw	0
  2403  002508  0100               	movlb	0	; () banked
  2404  00250A  2162               	addwfc	(?___aldiv+2)& (0+255),w,b
  2405  00250C  0100               	movlb	0	; () banked
  2406  00250E  6FC9               	movwf	(_duty_set+2)& (0+255),b
  2407  002510  0E00               	movlw	0
  2408  002512  0100               	movlb	0	; () banked
  2409  002514  2163               	addwfc	(?___aldiv+3)& (0+255),w,b
  2410  002516  0100               	movlb	0	; () banked
  2411  002518  6FCA               	movwf	(_duty_set+3)& (0+255),b
  2412                           
  2413                           ; BSR set to: 0
  2414                           ;motore.c: 230: if (duty_set < 1) {
  2415  00251A  0100               	movlb	0	; () banked
  2416  00251C  BFCA               	btfsc	(_duty_set+3)& (0+255),7,b
  2417  00251E  D00B               	goto	l6853
  2418  002520  0100               	movlb	0	; () banked
  2419  002522  51CA               	movf	(_duty_set+3)& (0+255),w,b
  2420  002524  0100               	movlb	0	; () banked
  2421  002526  11C9               	iorwf	(_duty_set+2)& (0+255),w,b
  2422  002528  0100               	movlb	0	; () banked
  2423  00252A  11C8               	iorwf	(_duty_set+1)& (0+255),w,b
  2424  00252C  E139               	bnz	l6859
  2425  00252E  0100               	movlb	0	; () banked
  2426  002530  05C7               	decf	_duty_set& (0+255),w,b
  2427  002532  B0D8               	btfsc	status,0,c
  2428  002534  D035               	goto	l6859
  2429  002536                     l6853:
  2430                           
  2431                           ; BSR set to: 0
  2432                           ;motore.c: 231: duty_set = 0;
  2433  002536  0E00               	movlw	0
  2434  002538  0100               	movlb	0	; () banked
  2435  00253A  6FC7               	movwf	_duty_set& (0+255),b
  2436  00253C  0E00               	movlw	0
  2437  00253E  D02A               	goto	L4
  2438                           
  2439                           ; BSR set to: 0
  2440                           ;motore.c: 232: }
  2441                           ;motore.c: 233: } else {
  2442  002540  D02F               	goto	l6859
  2443  002542                     l6855:
  2444                           
  2445                           ; BSR set to: 0
  2446                           ;motore.c: 234: duty_set = previousPwm + correzione;
  2447  002542  0100               	movlb	0	; () banked
  2448  002544  51E1               	movf	_previousPwm& (0+255),w,b
  2449  002546  0100               	movlb	0	; () banked
  2450  002548  25BF               	addwf	_correzione& (0+255),w,b
  2451  00254A  0100               	movlb	0	; () banked
  2452  00254C  6FC7               	movwf	_duty_set& (0+255),b
  2453  00254E  0100               	movlb	0	; () banked
  2454  002550  51E2               	movf	(_previousPwm+1)& (0+255),w,b
  2455  002552  0100               	movlb	0	; () banked
  2456  002554  21C0               	addwfc	(_correzione+1)& (0+255),w,b
  2457  002556  0100               	movlb	0	; () banked
  2458  002558  6FC8               	movwf	(_duty_set+1)& (0+255),b
  2459  00255A  0E00               	movlw	0
  2460  00255C  0100               	movlb	0	; () banked
  2461  00255E  21C1               	addwfc	(_correzione+2)& (0+255),w,b
  2462  002560  0100               	movlb	0	; () banked
  2463  002562  6FC9               	movwf	(_duty_set+2)& (0+255),b
  2464  002564  0E00               	movlw	0
  2465  002566  0100               	movlb	0	; () banked
  2466  002568  21C2               	addwfc	(_correzione+3)& (0+255),w,b
  2467  00256A  0100               	movlb	0	; () banked
  2468  00256C  6FCA               	movwf	(_duty_set+3)& (0+255),b
  2469                           
  2470                           ;motore.c: 235: if (duty_set > 1022) {
  2471  00256E  0100               	movlb	0	; () banked
  2472  002570  BFCA               	btfsc	(_duty_set+3)& (0+255),7,b
  2473  002572  D016               	goto	l6859
  2474  002574  0100               	movlb	0	; () banked
  2475  002576  51CA               	movf	(_duty_set+3)& (0+255),w,b
  2476  002578  0100               	movlb	0	; () banked
  2477  00257A  11C9               	iorwf	(_duty_set+2)& (0+255),w,b
  2478  00257C  E107               	bnz	u9060
  2479  00257E  0100               	movlb	0	; () banked
  2480  002580  29C7               	incf	_duty_set& (0+255),w,b
  2481  002582  0E03               	movlw	3
  2482  002584  0100               	movlb	0	; () banked
  2483  002586  59C8               	subwfb	(_duty_set+1)& (0+255),w,b
  2484  002588  A0D8               	btfss	status,0,c
  2485  00258A  D00A               	goto	l6859
  2486  00258C                     u9060:
  2487                           
  2488                           ; BSR set to: 0
  2489                           ;motore.c: 236: duty_set = 1023;
  2490  00258C  0EFF               	movlw	255
  2491  00258E  0100               	movlb	0	; () banked
  2492  002590  6FC7               	movwf	_duty_set& (0+255),b
  2493  002592  0E03               	movlw	3
  2494  002594                     L4:
  2495  002594  6FC8               	movwf	(_duty_set+1)& (0+255),b
  2496  002596  0E00               	movlw	0
  2497  002598  6FC9               	movwf	(_duty_set+2)& (0+255),b
  2498  00259A  0E00               	movlw	0
  2499  00259C  6FCA               	movwf	(_duty_set+3)& (0+255),b
  2500                           
  2501                           ; BSR set to: 0
  2502                           
  2503                           ; BSR set to: 0
  2504  00259E  D000               	goto	l6859
  2505  0025A0                     l6859:
  2506                           
  2507                           ;motore.c: 237: }
  2508                           ;motore.c: 238: }
  2509                           ;motore.c: 239: }
  2510                           ;motore.c: 240: previousPwm = duty_set;
  2511  0025A0  C0C7  F0E1         	movff	_duty_set,_previousPwm
  2512  0025A4  C0C8  F0E2         	movff	_duty_set+1,_previousPwm+1
  2513                           
  2514                           ;motore.c: 241: previousTimeCounter1 = timeCounter;
  2515  0025A8  C0D7  F0CF         	movff	_timeCounter,_previousTimeCounter1	;volatile
  2516  0025AC  C0D8  F0D0         	movff	_timeCounter+1,_previousTimeCounter1+1	;volatile
  2517  0025B0  C0D9  F0D1         	movff	_timeCounter+2,_previousTimeCounter1+2	;volatile
  2518  0025B4  C0DA  F0D2         	movff	_timeCounter+3,_previousTimeCounter1+3	;volatile
  2519                           
  2520                           ;motore.c: 242: SetDCEPWM1(duty_set);
  2521  0025B8  C0C7  F060         	movff	_duty_set,SetDCEPWM1@dutycycle
  2522  0025BC  C0C8  F061         	movff	_duty_set+1,SetDCEPWM1@dutycycle+1
  2523  0025C0  EC76  F026         	call	_SetDCEPWM1	;wreg free
  2524                           
  2525                           ;motore.c: 243: } else {
  2526  0025C4  0012               	return	
  2527  0025C6                     l6865:
  2528                           
  2529                           ;motore.c: 244: SetDCEPWM1(0);
  2530  0025C6  0E00               	movlw	0
  2531  0025C8  0100               	movlb	0	; () banked
  2532  0025CA  6F61               	movwf	(SetDCEPWM1@dutycycle+1)& (0+255),b
  2533  0025CC  0E00               	movlw	0
  2534  0025CE  6F60               	movwf	SetDCEPWM1@dutycycle& (0+255),b
  2535  0025D0  EC76  F026         	call	_SetDCEPWM1	;wreg free
  2536  0025D4  0012               	return	
  2537  0025D6  0012               	return		;funcret
  2538  0025D8                     __end_of_rampe:
  2539                           	opt stack 0
  2540                           tblptru	equ	0xFF8
  2541                           tblptrh	equ	0xFF7
  2542                           tblptrl	equ	0xFF6
  2543                           tablat	equ	0xFF5
  2544                           postinc0	equ	0xFEE
  2545                           wreg	equ	0xFE8
  2546                           status	equ	0xFD8
  2547                           
  2548 ;; *************** function _pow *****************
  2549 ;; Defined at:
  2550 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\pow.c"
  2551 ;; Parameters:    Size  Location     Type
  2552 ;;  x               4   78[BANK0 ] int 
  2553 ;;  y               4   82[BANK0 ] int 
  2554 ;; Auto vars:     Size  Location     Type
  2555 ;;  yi              4    9[BANK1 ] unsigned long 
  2556 ;;  sign            1    8[BANK1 ] unsigned char 
  2557 ;; Return value:  Size  Location     Type
  2558 ;;                  4   78[BANK0 ] unsigned char 
  2559 ;; Registers used:
  2560 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2561 ;; Tracked objects:
  2562 ;;		On entry : 0/0
  2563 ;;		On exit  : 0/0
  2564 ;;		Unchanged: 0/0
  2565 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2566 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2567 ;;      Locals:         0       0      13       0       0       0       0       0       0       0       0       0       
      +0       0
  2568 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2569 ;;      Totals:         0       8      13       0       0       0       0       0       0       0       0       0       
      +0       0
  2570 ;;Total ram usage:       21 bytes
  2571 ;; Hardware stack levels used:    1
  2572 ;; Hardware stack levels required when called:    6
  2573 ;; This function calls:
  2574 ;;		___flge
  2575 ;;		___flmul
  2576 ;;		___flneg
  2577 ;;		___fltol
  2578 ;;		___lltofl
  2579 ;;		_exp
  2580 ;;		_log
  2581 ;; This function is called by:
  2582 ;;		_rampe
  2583 ;; This function uses a non-reentrant model
  2584 ;;
  2585                           
  2586                           	psect	text3
  2587  0036EE                     __ptext3:
  2588                           	opt stack 0
  2589  0036EE                     _pow:
  2590                           	opt stack 23
  2591                           
  2592                           ;incstack = 0
  2593  0036EE  0E00               	movlw	0
  2594  0036F0  0101               	movlb	1	; () banked
  2595  0036F2  6F08               	movwf	pow@sign& (0+255),b
  2596                           
  2597                           ; BSR set to: 1
  2598  0036F4  0100               	movlb	0	; () banked
  2599  0036F6  51AE               	movf	pow@x& (0+255),w,b
  2600  0036F8  0100               	movlb	0	; () banked
  2601  0036FA  11AF               	iorwf	(pow@x+1)& (0+255),w,b
  2602  0036FC  0100               	movlb	0	; () banked
  2603  0036FE  11B0               	iorwf	(pow@x+2)& (0+255),w,b
  2604  003700  0100               	movlb	0	; () banked
  2605  003702  11B1               	iorwf	(pow@x+3)& (0+255),w,b
  2606  003704  A4D8               	btfss	status,2,c
  2607  003706  D025               	goto	l6503
  2608                           
  2609                           ; BSR set to: 0
  2610  003708  0E00               	movlw	0
  2611  00370A  0100               	movlb	0	; () banked
  2612  00370C  6F60               	movwf	___flge@ff1& (0+255),b
  2613  00370E  0E00               	movlw	0
  2614  003710  6F61               	movwf	(___flge@ff1+1)& (0+255),b
  2615  003712  0E00               	movlw	0
  2616  003714  6F62               	movwf	(___flge@ff1+2)& (0+255),b
  2617  003716  0E00               	movlw	0
  2618  003718  6F63               	movwf	(___flge@ff1+3)& (0+255),b
  2619  00371A  C0B2  F064         	movff	pow@y,___flge@ff2
  2620  00371E  C0B3  F065         	movff	pow@y+1,___flge@ff2+1
  2621  003722  C0B4  F066         	movff	pow@y+2,___flge@ff2+2
  2622  003726  C0B5  F067         	movff	pow@y+3,___flge@ff2+3
  2623  00372A  EC04  F023         	call	___flge	;wreg free
  2624  00372E  0100               	movlb	0	; () banked
  2625  003730  A0D8               	btfss	status,0,c
  2626  003732  D005               	goto	l1368
  2627                           
  2628                           ; BSR set to: 0
  2629  003734  0E00               	movlw	0
  2630  003736  0100               	movlb	0	; () banked
  2631  003738  6FDC               	movwf	(_errno+1)& (0+255),b
  2632  00373A  0E21               	movlw	33
  2633  00373C  6FDB               	movwf	_errno& (0+255),b
  2634  00373E                     l1368:
  2635                           
  2636                           ; BSR set to: 0
  2637  00373E  0E00               	movlw	0
  2638  003740  0100               	movlb	0	; () banked
  2639  003742  6FAE               	movwf	?_pow& (0+255),b
  2640  003744  0E00               	movlw	0
  2641  003746  6FAF               	movwf	(?_pow+1)& (0+255),b
  2642  003748  0E00               	movlw	0
  2643  00374A  6FB0               	movwf	(?_pow+2)& (0+255),b
  2644  00374C  0E00               	movlw	0
  2645  00374E  6FB1               	movwf	(?_pow+3)& (0+255),b
  2646                           
  2647                           ; BSR set to: 0
  2648  003750  0012               	return	
  2649  003752                     l6503:
  2650                           
  2651                           ; BSR set to: 0
  2652  003752  0100               	movlb	0	; () banked
  2653  003754  51B2               	movf	pow@y& (0+255),w,b
  2654  003756  0100               	movlb	0	; () banked
  2655  003758  11B3               	iorwf	(pow@y+1)& (0+255),w,b
  2656  00375A  0100               	movlb	0	; () banked
  2657  00375C  11B4               	iorwf	(pow@y+2)& (0+255),w,b
  2658  00375E  0100               	movlb	0	; () banked
  2659  003760  11B5               	iorwf	(pow@y+3)& (0+255),w,b
  2660  003762  A4D8               	btfss	status,2,c
  2661  003764  D00A               	goto	l6509
  2662                           
  2663                           ; BSR set to: 0
  2664  003766  0E00               	movlw	0
  2665  003768  0100               	movlb	0	; () banked
  2666  00376A  6FAE               	movwf	?_pow& (0+255),b
  2667  00376C  0E00               	movlw	0
  2668  00376E  6FAF               	movwf	(?_pow+1)& (0+255),b
  2669  003770  0E80               	movlw	128
  2670  003772  6FB0               	movwf	(?_pow+2)& (0+255),b
  2671  003774  0E3F               	movlw	63
  2672  003776  6FB1               	movwf	(?_pow+3)& (0+255),b
  2673                           
  2674                           ; BSR set to: 0
  2675  003778  0012               	return	
  2676  00377A                     l6509:
  2677                           
  2678                           ; BSR set to: 0
  2679  00377A  0100               	movlb	0	; () banked
  2680  00377C  AFB1               	btfss	(pow@x+3)& (0+255),7,b
  2681  00377E  D058               	goto	l6521
  2682                           
  2683                           ; BSR set to: 0
  2684  003780  C0B2  F08A         	movff	pow@y,___fltol@f1
  2685  003784  C0B3  F08B         	movff	pow@y+1,___fltol@f1+1
  2686  003788  C0B4  F08C         	movff	pow@y+2,___fltol@f1+2
  2687  00378C  C0B5  F08D         	movff	pow@y+3,___fltol@f1+3
  2688  003790  ECEA  F021         	call	___fltol	;wreg free
  2689  003794  C08A  F109         	movff	?___fltol,pow@yi
  2690  003798  C08B  F10A         	movff	?___fltol+1,pow@yi+1
  2691  00379C  C08C  F10B         	movff	?___fltol+2,pow@yi+2
  2692  0037A0  C08D  F10C         	movff	?___fltol+3,pow@yi+3
  2693  0037A4  C109  F06A         	movff	pow@yi,___lltofl@c
  2694  0037A8  C10A  F06B         	movff	pow@yi+1,___lltofl@c+1
  2695  0037AC  C10B  F06C         	movff	pow@yi+2,___lltofl@c+2
  2696  0037B0  C10C  F06D         	movff	pow@yi+3,___lltofl@c+3
  2697  0037B4  ECD2  F026         	call	___lltofl	;wreg free
  2698  0037B8  0100               	movlb	0	; () banked
  2699  0037BA  51B2               	movf	pow@y& (0+255),w,b
  2700  0037BC  0100               	movlb	0	; () banked
  2701  0037BE  196A               	xorwf	?___lltofl& (0+255),w,b
  2702  0037C0  E110               	bnz	u8670
  2703  0037C2  0100               	movlb	0	; () banked
  2704  0037C4  51B3               	movf	(pow@y+1)& (0+255),w,b
  2705  0037C6  0100               	movlb	0	; () banked
  2706  0037C8  196B               	xorwf	(?___lltofl+1)& (0+255),w,b
  2707  0037CA  E10B               	bnz	u8670
  2708  0037CC  0100               	movlb	0	; () banked
  2709  0037CE  51B4               	movf	(pow@y+2)& (0+255),w,b
  2710  0037D0  0100               	movlb	0	; () banked
  2711  0037D2  196C               	xorwf	(?___lltofl+2)& (0+255),w,b
  2712  0037D4  E106               	bnz	u8670
  2713  0037D6  0100               	movlb	0	; () banked
  2714  0037D8  51B5               	movf	(pow@y+3)& (0+255),w,b
  2715  0037DA  0100               	movlb	0	; () banked
  2716  0037DC  196D               	xorwf	(?___lltofl+3)& (0+255),w,b
  2717  0037DE  B4D8               	btfsc	status,2,c
  2718  0037E0  D00F               	goto	l6517
  2719  0037E2                     u8670:
  2720                           
  2721                           ; BSR set to: 0
  2722  0037E2  0E00               	movlw	0
  2723  0037E4  0100               	movlb	0	; () banked
  2724  0037E6  6FDC               	movwf	(_errno+1)& (0+255),b
  2725  0037E8  0E21               	movlw	33
  2726  0037EA  6FDB               	movwf	_errno& (0+255),b
  2727  0037EC  0E00               	movlw	0
  2728  0037EE  0100               	movlb	0	; () banked
  2729  0037F0  6FAE               	movwf	?_pow& (0+255),b
  2730  0037F2  0E00               	movlw	0
  2731  0037F4  6FAF               	movwf	(?_pow+1)& (0+255),b
  2732  0037F6  0E00               	movlw	0
  2733  0037F8  6FB0               	movwf	(?_pow+2)& (0+255),b
  2734  0037FA  0E00               	movlw	0
  2735  0037FC  6FB1               	movwf	(?_pow+3)& (0+255),b
  2736                           
  2737                           ; BSR set to: 0
  2738  0037FE  0012               	return	
  2739  003800                     l6517:
  2740                           
  2741                           ; BSR set to: 0
  2742  003800  0101               	movlb	1	; () banked
  2743  003802  5109               	movf	pow@yi& (0+255),w,b
  2744  003804  0B01               	andlw	1
  2745  003806  0101               	movlb	1	; () banked
  2746  003808  6F08               	movwf	pow@sign& (0+255),b
  2747                           
  2748                           ; BSR set to: 1
  2749  00380A  C0AE  F060         	movff	pow@x,___flneg@f1
  2750  00380E  C0AF  F061         	movff	pow@x+1,___flneg@f1+1
  2751  003812  C0B0  F062         	movff	pow@x+2,___flneg@f1+2
  2752  003816  C0B1  F063         	movff	pow@x+3,___flneg@f1+3
  2753  00381A  EC98  F026         	call	___flneg	;wreg free
  2754  00381E  C060  F0AE         	movff	?___flneg,pow@x
  2755  003822  C061  F0AF         	movff	?___flneg+1,pow@x+1
  2756  003826  C062  F0B0         	movff	?___flneg+2,pow@x+2
  2757  00382A  C063  F0B1         	movff	?___flneg+3,pow@x+3
  2758  00382E  D000               	goto	l6521
  2759  003830                     l6521:
  2760  003830  C0AE  F09A         	movff	pow@x,log@x
  2761  003834  C0AF  F09B         	movff	pow@x+1,log@x+1
  2762  003838  C0B0  F09C         	movff	pow@x+2,log@x+2
  2763  00383C  C0B1  F09D         	movff	pow@x+3,log@x+3
  2764  003840  EC1E  F01E         	call	_log	;wreg free
  2765  003844  C09A  F100         	movff	?_log,_pow$4019
  2766  003848  C09B  F101         	movff	?_log+1,_pow$4019+1
  2767  00384C  C09C  F102         	movff	?_log+2,_pow$4019+2
  2768  003850  C09D  F103         	movff	?_log+3,_pow$4019+3
  2769  003854  C100  F06F         	movff	_pow$4019,___flmul@f1
  2770  003858  C101  F070         	movff	_pow$4019+1,___flmul@f1+1
  2771  00385C  C102  F071         	movff	_pow$4019+2,___flmul@f1+2
  2772  003860  C103  F072         	movff	_pow$4019+3,___flmul@f1+3
  2773  003864  C0B2  F073         	movff	pow@y,___flmul@f2
  2774  003868  C0B3  F074         	movff	pow@y+1,___flmul@f2+1
  2775  00386C  C0B4  F075         	movff	pow@y+2,___flmul@f2+2
  2776  003870  C0B5  F076         	movff	pow@y+3,___flmul@f2+3
  2777  003874  ECDD  F01E         	call	___flmul	;wreg free
  2778  003878  C06F  F104         	movff	?___flmul,_pow$4020
  2779  00387C  C070  F105         	movff	?___flmul+1,_pow$4020+1
  2780  003880  C071  F106         	movff	?___flmul+2,_pow$4020+2
  2781  003884  C072  F107         	movff	?___flmul+3,_pow$4020+3
  2782  003888  C104  F0A3         	movff	_pow$4020,exp@x
  2783  00388C  C105  F0A4         	movff	_pow$4020+1,exp@x+1
  2784  003890  C106  F0A5         	movff	_pow$4020+2,exp@x+2
  2785  003894  C107  F0A6         	movff	_pow$4020+3,exp@x+3
  2786  003898  ECFB  F018         	call	_exp	;wreg free
  2787  00389C  C0A3  F0AE         	movff	?_exp,pow@x
  2788  0038A0  C0A4  F0AF         	movff	?_exp+1,pow@x+1
  2789  0038A4  C0A5  F0B0         	movff	?_exp+2,pow@x+2
  2790  0038A8  C0A6  F0B1         	movff	?_exp+3,pow@x+3
  2791  0038AC  0101               	movlb	1	; () banked
  2792  0038AE  5108               	movf	pow@sign& (0+255),w,b
  2793  0038B0  0101               	movlb	1	; () banked
  2794  0038B2  B4D8               	btfsc	status,2,c
  2795  0038B4  D013               	goto	l1373
  2796                           
  2797                           ; BSR set to: 1
  2798  0038B6  C0AE  F060         	movff	pow@x,___flneg@f1
  2799  0038BA  C0AF  F061         	movff	pow@x+1,___flneg@f1+1
  2800  0038BE  C0B0  F062         	movff	pow@x+2,___flneg@f1+2
  2801  0038C2  C0B1  F063         	movff	pow@x+3,___flneg@f1+3
  2802  0038C6  EC98  F026         	call	___flneg	;wreg free
  2803  0038CA  C060  F0AE         	movff	?___flneg,?_pow
  2804  0038CE  C061  F0AF         	movff	?___flneg+1,?_pow+1
  2805  0038D2  C062  F0B0         	movff	?___flneg+2,?_pow+2
  2806  0038D6  C063  F0B1         	movff	?___flneg+3,?_pow+3
  2807  0038DA  0012               	return	
  2808  0038DC                     l1373:
  2809                           
  2810                           ; BSR set to: 1
  2811  0038DC  C0AE  F0AE         	movff	pow@x,?_pow
  2812  0038E0  C0AF  F0AF         	movff	pow@x+1,?_pow+1
  2813  0038E4  C0B0  F0B0         	movff	pow@x+2,?_pow+2
  2814  0038E8  C0B1  F0B1         	movff	pow@x+3,?_pow+3
  2815  0038EC  0012               	return		;funcret
  2816  0038EE                     __end_of_pow:
  2817                           	opt stack 0
  2818                           tblptru	equ	0xFF8
  2819                           tblptrh	equ	0xFF7
  2820                           tblptrl	equ	0xFF6
  2821                           tablat	equ	0xFF5
  2822                           postinc0	equ	0xFEE
  2823                           wreg	equ	0xFE8
  2824                           status	equ	0xFD8
  2825                           
  2826 ;; *************** function _log *****************
  2827 ;; Defined at:
  2828 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\log.c"
  2829 ;; Parameters:    Size  Location     Type
  2830 ;;  x               4   58[BANK0 ] unsigned char 
  2831 ;; Auto vars:     Size  Location     Type
  2832 ;;  exponent        2   62[BANK0 ] int 
  2833 ;; Return value:  Size  Location     Type
  2834 ;;                  4   58[BANK0 ] int 
  2835 ;; Registers used:
  2836 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2837 ;; Tracked objects:
  2838 ;;		On entry : 0/0
  2839 ;;		On exit  : 0/0
  2840 ;;		Unchanged: 0/0
  2841 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2842 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2843 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2844 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2845 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2846 ;;Total ram usage:        6 bytes
  2847 ;; Hardware stack levels used:    1
  2848 ;; Hardware stack levels required when called:    5
  2849 ;; This function calls:
  2850 ;;		___awtofl
  2851 ;;		___fladd
  2852 ;;		___flmul
  2853 ;;		_eval_poly
  2854 ;;		_frexp
  2855 ;; This function is called by:
  2856 ;;		_pow
  2857 ;; This function uses a non-reentrant model
  2858 ;;
  2859                           
  2860                           	psect	text4
  2861  003C3C                     __ptext4:
  2862                           	opt stack 0
  2863  003C3C                     _log:
  2864                           	opt stack 23
  2865                           
  2866                           ;incstack = 0
  2867  003C3C  0100               	movlb	0	; () banked
  2868  003C3E  AF9D               	btfss	(log@x+3)& (0+255),7,b
  2869  003C40  D00F               	goto	l6113
  2870                           
  2871                           ; BSR set to: 0
  2872  003C42  0E00               	movlw	0
  2873  003C44  0100               	movlb	0	; () banked
  2874  003C46  6FDC               	movwf	(_errno+1)& (0+255),b
  2875  003C48  0E21               	movlw	33
  2876  003C4A  6FDB               	movwf	_errno& (0+255),b
  2877  003C4C  0E00               	movlw	0
  2878  003C4E  0100               	movlb	0	; () banked
  2879  003C50  6F9A               	movwf	?_log& (0+255),b
  2880  003C52  0E00               	movlw	0
  2881  003C54  6F9B               	movwf	(?_log+1)& (0+255),b
  2882  003C56  0E00               	movlw	0
  2883  003C58  6F9C               	movwf	(?_log+2)& (0+255),b
  2884  003C5A  0E00               	movlw	0
  2885  003C5C  6F9D               	movwf	(?_log+3)& (0+255),b
  2886                           
  2887                           ; BSR set to: 0
  2888  003C5E  0012               	return	
  2889  003C60                     l6113:
  2890                           
  2891                           ; BSR set to: 0
  2892  003C60  0100               	movlb	0	; () banked
  2893  003C62  519A               	movf	log@x& (0+255),w,b
  2894  003C64  0100               	movlb	0	; () banked
  2895  003C66  119B               	iorwf	(log@x+1)& (0+255),w,b
  2896  003C68  0100               	movlb	0	; () banked
  2897  003C6A  119C               	iorwf	(log@x+2)& (0+255),w,b
  2898  003C6C  0100               	movlb	0	; () banked
  2899  003C6E  119D               	iorwf	(log@x+3)& (0+255),w,b
  2900  003C70  A4D8               	btfss	status,2,c
  2901  003C72  D00F               	goto	l6119
  2902                           
  2903                           ; BSR set to: 0
  2904  003C74  0E00               	movlw	0
  2905  003C76  0100               	movlb	0	; () banked
  2906  003C78  6FDC               	movwf	(_errno+1)& (0+255),b
  2907  003C7A  0E22               	movlw	34
  2908  003C7C  6FDB               	movwf	_errno& (0+255),b
  2909  003C7E  0E00               	movlw	0
  2910  003C80  0100               	movlb	0	; () banked
  2911  003C82  6F9A               	movwf	?_log& (0+255),b
  2912  003C84  0E00               	movlw	0
  2913  003C86  6F9B               	movwf	(?_log+1)& (0+255),b
  2914  003C88  0E00               	movlw	0
  2915  003C8A  6F9C               	movwf	(?_log+2)& (0+255),b
  2916  003C8C  0E00               	movlw	0
  2917  003C8E  6F9D               	movwf	(?_log+3)& (0+255),b
  2918                           
  2919                           ; BSR set to: 0
  2920  003C90  0012               	return	
  2921  003C92                     l6119:
  2922                           
  2923                           ; BSR set to: 0
  2924  003C92  0E00               	movlw	0
  2925  003C94  0100               	movlb	0	; () banked
  2926  003C96  6F73               	movwf	___flmul@f2& (0+255),b
  2927  003C98  0E00               	movlw	0
  2928  003C9A  6F74               	movwf	(___flmul@f2+1)& (0+255),b
  2929  003C9C  0E00               	movlw	0
  2930  003C9E  6F75               	movwf	(___flmul@f2+2)& (0+255),b
  2931  003CA0  0E40               	movlw	64
  2932  003CA2  6F76               	movwf	(___flmul@f2+3)& (0+255),b
  2933  003CA4  0E9E               	movlw	low log@exponent
  2934  003CA6  0100               	movlb	0	; () banked
  2935  003CA8  6F64               	movwf	frexp@eptr& (0+255),b
  2936  003CAA  0E00               	movlw	high log@exponent
  2937  003CAC  0100               	movlb	0	; () banked
  2938  003CAE  6F65               	movwf	(frexp@eptr+1)& (0+255),b
  2939  003CB0  C09A  F060         	movff	log@x,frexp@value
  2940  003CB4  C09B  F061         	movff	log@x+1,frexp@value+1
  2941  003CB8  C09C  F062         	movff	log@x+2,frexp@value+2
  2942  003CBC  C09D  F063         	movff	log@x+3,frexp@value+3
  2943  003CC0  ECE8  F023         	call	_frexp	;wreg free
  2944  003CC4  C060  F06F         	movff	?_frexp,___flmul@f1
  2945  003CC8  C061  F070         	movff	?_frexp+1,___flmul@f1+1
  2946  003CCC  C062  F071         	movff	?_frexp+2,___flmul@f1+2
  2947  003CD0  C063  F072         	movff	?_frexp+3,___flmul@f1+3
  2948  003CD4  ECDD  F01E         	call	___flmul	;wreg free
  2949  003CD8  C06F  F07E         	movff	?___flmul,___fladd@f1
  2950  003CDC  C070  F07F         	movff	?___flmul+1,___fladd@f1+1
  2951  003CE0  C071  F080         	movff	?___flmul+2,___fladd@f1+2
  2952  003CE4  C072  F081         	movff	?___flmul+3,___fladd@f1+3
  2953  003CE8  0E00               	movlw	0
  2954  003CEA  0100               	movlb	0	; () banked
  2955  003CEC  6F82               	movwf	___fladd@f2& (0+255),b
  2956  003CEE  0E00               	movlw	0
  2957  003CF0  6F83               	movwf	(___fladd@f2+1)& (0+255),b
  2958  003CF2  0E80               	movlw	128
  2959  003CF4  6F84               	movwf	(___fladd@f2+2)& (0+255),b
  2960  003CF6  0EBF               	movlw	191
  2961  003CF8  6F85               	movwf	(___fladd@f2+3)& (0+255),b
  2962  003CFA  EC41  F01A         	call	___fladd	;wreg free
  2963  003CFE  C07E  F09A         	movff	?___fladd,log@x
  2964  003D02  C07F  F09B         	movff	?___fladd+1,log@x+1
  2965  003D06  C080  F09C         	movff	?___fladd+2,log@x+2
  2966  003D0A  C081  F09D         	movff	?___fladd+3,log@x+3
  2967  003D0E  0100               	movlb	0	; () banked
  2968  003D10  079E               	decf	log@exponent& (0+255),f,b
  2969  003D12  A0D8               	btfss	status,0,c
  2970  003D14  079F               	decf	(log@exponent+1)& (0+255),f,b
  2971                           
  2972                           ; BSR set to: 0
  2973  003D16  C09A  F08A         	movff	log@x,eval_poly@x
  2974  003D1A  C09B  F08B         	movff	log@x+1,eval_poly@x+1
  2975  003D1E  C09C  F08C         	movff	log@x+2,eval_poly@x+2
  2976  003D22  C09D  F08D         	movff	log@x+3,eval_poly@x+3
  2977  003D26  0E29               	movlw	low log@coeff
  2978  003D28  0100               	movlb	0	; () banked
  2979  003D2A  6F8E               	movwf	eval_poly@d& (0+255),b
  2980  003D2C  0E0D               	movlw	high log@coeff
  2981  003D2E  0100               	movlb	0	; () banked
  2982  003D30  6F8F               	movwf	(eval_poly@d+1)& (0+255),b
  2983  003D32  0E00               	movlw	0
  2984  003D34  0100               	movlb	0	; () banked
  2985  003D36  6F91               	movwf	(eval_poly@n+1)& (0+255),b
  2986  003D38  0E08               	movlw	8
  2987  003D3A  6F90               	movwf	eval_poly@n& (0+255),b
  2988  003D3C  EC77  F022         	call	_eval_poly	;wreg free
  2989  003D40  C08A  F09A         	movff	?_eval_poly,log@x
  2990  003D44  C08B  F09B         	movff	?_eval_poly+1,log@x+1
  2991  003D48  C08C  F09C         	movff	?_eval_poly+2,log@x+2
  2992  003D4C  C08D  F09D         	movff	?_eval_poly+3,log@x+3
  2993  003D50  0E18               	movlw	24
  2994  003D52  0100               	movlb	0	; () banked
  2995  003D54  6F73               	movwf	___flmul@f2& (0+255),b
  2996  003D56  0E72               	movlw	114
  2997  003D58  6F74               	movwf	(___flmul@f2+1)& (0+255),b
  2998  003D5A  0E31               	movlw	49
  2999  003D5C  6F75               	movwf	(___flmul@f2+2)& (0+255),b
  3000  003D5E  0E3F               	movlw	63
  3001  003D60  6F76               	movwf	(___flmul@f2+3)& (0+255),b
  3002  003D62  C09E  F06A         	movff	log@exponent,___awtofl@c
  3003  003D66  C09F  F06B         	movff	log@exponent+1,___awtofl@c+1
  3004  003D6A  EC50  F026         	call	___awtofl	;wreg free
  3005  003D6E  C06A  F06F         	movff	?___awtofl,___flmul@f1
  3006  003D72  C06B  F070         	movff	?___awtofl+1,___flmul@f1+1
  3007  003D76  C06C  F071         	movff	?___awtofl+2,___flmul@f1+2
  3008  003D7A  C06D  F072         	movff	?___awtofl+3,___flmul@f1+3
  3009  003D7E  ECDD  F01E         	call	___flmul	;wreg free
  3010  003D82  C06F  F07E         	movff	?___flmul,___fladd@f1
  3011  003D86  C070  F07F         	movff	?___flmul+1,___fladd@f1+1
  3012  003D8A  C071  F080         	movff	?___flmul+2,___fladd@f1+2
  3013  003D8E  C072  F081         	movff	?___flmul+3,___fladd@f1+3
  3014  003D92  C09A  F082         	movff	log@x,___fladd@f2
  3015  003D96  C09B  F083         	movff	log@x+1,___fladd@f2+1
  3016  003D9A  C09C  F084         	movff	log@x+2,___fladd@f2+2
  3017  003D9E  C09D  F085         	movff	log@x+3,___fladd@f2+3
  3018  003DA2  EC41  F01A         	call	___fladd	;wreg free
  3019  003DA6  C07E  F09A         	movff	?___fladd,?_log
  3020  003DAA  C07F  F09B         	movff	?___fladd+1,?_log+1
  3021  003DAE  C080  F09C         	movff	?___fladd+2,?_log+2
  3022  003DB2  C081  F09D         	movff	?___fladd+3,?_log+3
  3023  003DB6  0012               	return	
  3024  003DB8  0012               	return		;funcret
  3025  003DBA                     __end_of_log:
  3026                           	opt stack 0
  3027                           tblptru	equ	0xFF8
  3028                           tblptrh	equ	0xFF7
  3029                           tblptrl	equ	0xFF6
  3030                           tablat	equ	0xFF5
  3031                           postinc0	equ	0xFEE
  3032                           wreg	equ	0xFE8
  3033                           status	equ	0xFD8
  3034                           
  3035 ;; *************** function _exp *****************
  3036 ;; Defined at:
  3037 ;;		line 12 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\exp.c"
  3038 ;; Parameters:    Size  Location     Type
  3039 ;;  x               4   67[BANK0 ] int 
  3040 ;; Auto vars:     Size  Location     Type
  3041 ;;  exponent        2   75[BANK0 ] int 
  3042 ;;  sign            1   77[BANK0 ] unsigned char 
  3043 ;; Return value:  Size  Location     Type
  3044 ;;                  4   67[BANK0 ] unsigned char 
  3045 ;; Registers used:
  3046 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3047 ;; Tracked objects:
  3048 ;;		On entry : 0/0
  3049 ;;		On exit  : 0/0
  3050 ;;		Unchanged: 0/0
  3051 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3052 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3053 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3054 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3055 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3056 ;;Total ram usage:       11 bytes
  3057 ;; Hardware stack levels used:    1
  3058 ;; Hardware stack levels required when called:    5
  3059 ;; This function calls:
  3060 ;;		___awtofl
  3061 ;;		___fldiv
  3062 ;;		___flge
  3063 ;;		___flmul
  3064 ;;		___flneg
  3065 ;;		___flsub
  3066 ;;		___fltol
  3067 ;;		_eval_poly
  3068 ;;		_floor
  3069 ;;		_ldexp
  3070 ;; This function is called by:
  3071 ;;		_pow
  3072 ;; This function uses a non-reentrant model
  3073 ;;
  3074                           
  3075                           	psect	text5
  3076  0031F6                     __ptext5:
  3077                           	opt stack 0
  3078  0031F6                     _exp:
  3079                           	opt stack 23
  3080                           
  3081                           ;incstack = 0
  3082  0031F6  0100               	movlb	0	; () banked
  3083  0031F8  51A3               	movf	exp@x& (0+255),w,b
  3084  0031FA  0100               	movlb	0	; () banked
  3085  0031FC  11A4               	iorwf	(exp@x+1)& (0+255),w,b
  3086  0031FE  0100               	movlb	0	; () banked
  3087  003200  11A5               	iorwf	(exp@x+2)& (0+255),w,b
  3088  003202  0100               	movlb	0	; () banked
  3089  003204  11A6               	iorwf	(exp@x+3)& (0+255),w,b
  3090  003206  A4D8               	btfss	status,2,c
  3091  003208  D00A               	goto	l6135
  3092                           
  3093                           ; BSR set to: 0
  3094  00320A  0E00               	movlw	0
  3095  00320C  0100               	movlb	0	; () banked
  3096  00320E  6FA3               	movwf	?_exp& (0+255),b
  3097  003210  0E00               	movlw	0
  3098  003212  6FA4               	movwf	(?_exp+1)& (0+255),b
  3099  003214  0E80               	movlw	128
  3100  003216  6FA5               	movwf	(?_exp+2)& (0+255),b
  3101  003218  0E3F               	movlw	63
  3102  00321A  6FA6               	movwf	(?_exp+3)& (0+255),b
  3103                           
  3104                           ; BSR set to: 0
  3105  00321C  0012               	return	
  3106  00321E                     l6135:
  3107                           
  3108                           ; BSR set to: 0
  3109  00321E  0E18               	movlw	24
  3110  003220  0100               	movlb	0	; () banked
  3111  003222  6F60               	movwf	___flge@ff1& (0+255),b
  3112  003224  0E72               	movlw	114
  3113  003226  6F61               	movwf	(___flge@ff1+1)& (0+255),b
  3114  003228  0E31               	movlw	49
  3115  00322A  6F62               	movwf	(___flge@ff1+2)& (0+255),b
  3116  00322C  0E44               	movlw	68
  3117  00322E  6F63               	movwf	(___flge@ff1+3)& (0+255),b
  3118  003230  C0A3  F064         	movff	exp@x,___flge@ff2
  3119  003234  C0A4  F065         	movff	exp@x+1,___flge@ff2+1
  3120  003238  C0A5  F066         	movff	exp@x+2,___flge@ff2+2
  3121  00323C  C0A6  F067         	movff	exp@x+3,___flge@ff2+3
  3122  003240  EC04  F023         	call	___flge	;wreg free
  3123  003244  0100               	movlb	0	; () banked
  3124  003246  B0D8               	btfsc	status,0,c
  3125  003248  D00F               	goto	l6141
  3126                           
  3127                           ; BSR set to: 0
  3128  00324A  0E00               	movlw	0
  3129  00324C  0100               	movlb	0	; () banked
  3130  00324E  6FDC               	movwf	(_errno+1)& (0+255),b
  3131  003250  0E22               	movlw	34
  3132  003252  6FDB               	movwf	_errno& (0+255),b
  3133  003254  0EFF               	movlw	255
  3134  003256  0100               	movlb	0	; () banked
  3135  003258  6FA3               	movwf	?_exp& (0+255),b
  3136  00325A  0EFF               	movlw	255
  3137  00325C  6FA4               	movwf	(?_exp+1)& (0+255),b
  3138  00325E  0E7F               	movlw	127
  3139  003260  6FA5               	movwf	(?_exp+2)& (0+255),b
  3140  003262  0E7F               	movlw	127
  3141  003264  6FA6               	movwf	(?_exp+3)& (0+255),b
  3142                           
  3143                           ; BSR set to: 0
  3144  003266  0012               	return	
  3145  003268                     l6141:
  3146                           
  3147                           ; BSR set to: 0
  3148  003268  C0A3  F060         	movff	exp@x,___flge@ff1
  3149  00326C  C0A4  F061         	movff	exp@x+1,___flge@ff1+1
  3150  003270  C0A5  F062         	movff	exp@x+2,___flge@ff1+2
  3151  003274  C0A6  F063         	movff	exp@x+3,___flge@ff1+3
  3152  003278  0E87               	movlw	135
  3153  00327A  0100               	movlb	0	; () banked
  3154  00327C  6F64               	movwf	___flge@ff2& (0+255),b
  3155  00327E  0E48               	movlw	72
  3156  003280  6F65               	movwf	(___flge@ff2+1)& (0+255),b
  3157  003282  0E3A               	movlw	58
  3158  003284  6F66               	movwf	(___flge@ff2+2)& (0+255),b
  3159  003286  0EC4               	movlw	196
  3160  003288  6F67               	movwf	(___flge@ff2+3)& (0+255),b
  3161  00328A  EC04  F023         	call	___flge	;wreg free
  3162  00328E  0100               	movlb	0	; () banked
  3163  003290  B0D8               	btfsc	status,0,c
  3164  003292  D00F               	goto	l6147
  3165                           
  3166                           ; BSR set to: 0
  3167  003294  0E00               	movlw	0
  3168  003296  0100               	movlb	0	; () banked
  3169  003298  6FDC               	movwf	(_errno+1)& (0+255),b
  3170  00329A  0E22               	movlw	34
  3171  00329C  6FDB               	movwf	_errno& (0+255),b
  3172  00329E  0E00               	movlw	0
  3173  0032A0  0100               	movlb	0	; () banked
  3174  0032A2  6FA3               	movwf	?_exp& (0+255),b
  3175  0032A4  0E00               	movlw	0
  3176  0032A6  6FA4               	movwf	(?_exp+1)& (0+255),b
  3177  0032A8  0E00               	movlw	0
  3178  0032AA  6FA5               	movwf	(?_exp+2)& (0+255),b
  3179  0032AC  0E00               	movlw	0
  3180  0032AE  6FA6               	movwf	(?_exp+3)& (0+255),b
  3181                           
  3182                           ; BSR set to: 0
  3183  0032B0  0012               	return	
  3184  0032B2                     l6147:
  3185                           
  3186                           ; BSR set to: 0
  3187  0032B2  0100               	movlb	0	; () banked
  3188  0032B4  AFA6               	btfss	(exp@x+3)& (0+255),7,b
  3189  0032B6  D002               	goto	u8050
  3190  0032B8  0E01               	movlw	1
  3191  0032BA  D001               	goto	u8060
  3192  0032BC                     u8050:
  3193  0032BC  0E00               	movlw	0
  3194  0032BE                     u8060:
  3195  0032BE  0100               	movlb	0	; () banked
  3196  0032C0  6FAD               	movwf	exp@sign& (0+255),b
  3197                           
  3198                           ; BSR set to: 0
  3199  0032C2  0100               	movlb	0	; () banked
  3200  0032C4  51AD               	movf	exp@sign& (0+255),w,b
  3201  0032C6  0100               	movlb	0	; () banked
  3202  0032C8  B4D8               	btfsc	status,2,c
  3203  0032CA  D012               	goto	l1392
  3204                           
  3205                           ; BSR set to: 0
  3206  0032CC  C0A3  F060         	movff	exp@x,___flneg@f1
  3207  0032D0  C0A4  F061         	movff	exp@x+1,___flneg@f1+1
  3208  0032D4  C0A5  F062         	movff	exp@x+2,___flneg@f1+2
  3209  0032D8  C0A6  F063         	movff	exp@x+3,___flneg@f1+3
  3210  0032DC  EC98  F026         	call	___flneg	;wreg free
  3211  0032E0  C060  F0A3         	movff	?___flneg,exp@x
  3212  0032E4  C061  F0A4         	movff	?___flneg+1,exp@x+1
  3213  0032E8  C062  F0A5         	movff	?___flneg+2,exp@x+2
  3214  0032EC  C063  F0A6         	movff	?___flneg+3,exp@x+3
  3215  0032F0                     l1392:
  3216  0032F0  C0A3  F06F         	movff	exp@x,___flmul@f1
  3217  0032F4  C0A4  F070         	movff	exp@x+1,___flmul@f1+1
  3218  0032F8  C0A5  F071         	movff	exp@x+2,___flmul@f1+2
  3219  0032FC  C0A6  F072         	movff	exp@x+3,___flmul@f1+3
  3220  003300  0E3B               	movlw	59
  3221  003302  0100               	movlb	0	; () banked
  3222  003304  6F73               	movwf	___flmul@f2& (0+255),b
  3223  003306  0EAA               	movlw	170
  3224  003308  6F74               	movwf	(___flmul@f2+1)& (0+255),b
  3225  00330A  0EB8               	movlw	184
  3226  00330C  6F75               	movwf	(___flmul@f2+2)& (0+255),b
  3227  00330E  0E3F               	movlw	63
  3228  003310  6F76               	movwf	(___flmul@f2+3)& (0+255),b
  3229  003312  ECDD  F01E         	call	___flmul	;wreg free
  3230  003316  C06F  F0A3         	movff	?___flmul,exp@x
  3231  00331A  C070  F0A4         	movff	?___flmul+1,exp@x+1
  3232  00331E  C071  F0A5         	movff	?___flmul+2,exp@x+2
  3233  003322  C072  F0A6         	movff	?___flmul+3,exp@x+3
  3234  003326  C0A3  F099         	movff	exp@x,floor@x
  3235  00332A  C0A4  F09A         	movff	exp@x+1,floor@x+1
  3236  00332E  C0A5  F09B         	movff	exp@x+2,floor@x+2
  3237  003332  C0A6  F09C         	movff	exp@x+3,floor@x+3
  3238  003336  EC59  F021         	call	_floor	;wreg free
  3239  00333A  C099  F0A7         	movff	?_floor,_exp$4021
  3240  00333E  C09A  F0A8         	movff	?_floor+1,_exp$4021+1
  3241  003342  C09B  F0A9         	movff	?_floor+2,_exp$4021+2
  3242  003346  C09C  F0AA         	movff	?_floor+3,_exp$4021+3
  3243  00334A  C0A7  F08A         	movff	_exp$4021,___fltol@f1
  3244  00334E  C0A8  F08B         	movff	_exp$4021+1,___fltol@f1+1
  3245  003352  C0A9  F08C         	movff	_exp$4021+2,___fltol@f1+2
  3246  003356  C0AA  F08D         	movff	_exp$4021+3,___fltol@f1+3
  3247  00335A  ECEA  F021         	call	___fltol	;wreg free
  3248  00335E  C08A  F0AB         	movff	?___fltol,exp@exponent
  3249  003362  C08B  F0AC         	movff	?___fltol+1,exp@exponent+1
  3250  003366  C0A3  F08A         	movff	exp@x,___flsub@f1
  3251  00336A  C0A4  F08B         	movff	exp@x+1,___flsub@f1+1
  3252  00336E  C0A5  F08C         	movff	exp@x+2,___flsub@f1+2
  3253  003372  C0A6  F08D         	movff	exp@x+3,___flsub@f1+3
  3254  003376  C0AB  F06A         	movff	exp@exponent,___awtofl@c
  3255  00337A  C0AC  F06B         	movff	exp@exponent+1,___awtofl@c+1
  3256  00337E  EC50  F026         	call	___awtofl	;wreg free
  3257  003382  C06A  F08E         	movff	?___awtofl,___flsub@f2
  3258  003386  C06B  F08F         	movff	?___awtofl+1,___flsub@f2+1
  3259  00338A  C06C  F090         	movff	?___awtofl+2,___flsub@f2+2
  3260  00338E  C06D  F091         	movff	?___awtofl+3,___flsub@f2+3
  3261  003392  EC75  F025         	call	___flsub	;wreg free
  3262  003396  C08A  F0A3         	movff	?___flsub,exp@x
  3263  00339A  C08B  F0A4         	movff	?___flsub+1,exp@x+1
  3264  00339E  C08C  F0A5         	movff	?___flsub+2,exp@x+2
  3265  0033A2  C08D  F0A6         	movff	?___flsub+3,exp@x+3
  3266  0033A6  C0A3  F08A         	movff	exp@x,eval_poly@x
  3267  0033AA  C0A4  F08B         	movff	exp@x+1,eval_poly@x+1
  3268  0033AE  C0A5  F08C         	movff	exp@x+2,eval_poly@x+2
  3269  0033B2  C0A6  F08D         	movff	exp@x+3,eval_poly@x+3
  3270  0033B6  0E01               	movlw	low exp@coeff
  3271  0033B8  0100               	movlb	0	; () banked
  3272  0033BA  6F8E               	movwf	eval_poly@d& (0+255),b
  3273  0033BC  0E0D               	movlw	high exp@coeff
  3274  0033BE  0100               	movlb	0	; () banked
  3275  0033C0  6F8F               	movwf	(eval_poly@d+1)& (0+255),b
  3276  0033C2  0E00               	movlw	0
  3277  0033C4  0100               	movlb	0	; () banked
  3278  0033C6  6F91               	movwf	(eval_poly@n+1)& (0+255),b
  3279  0033C8  0E09               	movlw	9
  3280  0033CA  6F90               	movwf	eval_poly@n& (0+255),b
  3281  0033CC  EC77  F022         	call	_eval_poly	;wreg free
  3282  0033D0  C08A  F09A         	movff	?_eval_poly,ldexp@value
  3283  0033D4  C08B  F09B         	movff	?_eval_poly+1,ldexp@value+1
  3284  0033D8  C08C  F09C         	movff	?_eval_poly+2,ldexp@value+2
  3285  0033DC  C08D  F09D         	movff	?_eval_poly+3,ldexp@value+3
  3286  0033E0  C0AB  F09E         	movff	exp@exponent,ldexp@newexp
  3287  0033E4  C0AC  F09F         	movff	exp@exponent+1,ldexp@newexp+1
  3288  0033E8  EC2A  F020         	call	_ldexp	;wreg free
  3289  0033EC  C09A  F0A3         	movff	?_ldexp,exp@x
  3290  0033F0  C09B  F0A4         	movff	?_ldexp+1,exp@x+1
  3291  0033F4  C09C  F0A5         	movff	?_ldexp+2,exp@x+2
  3292  0033F8  C09D  F0A6         	movff	?_ldexp+3,exp@x+3
  3293  0033FC  0100               	movlb	0	; () banked
  3294  0033FE  51AD               	movf	exp@sign& (0+255),w,b
  3295  003400  0100               	movlb	0	; () banked
  3296  003402  B4D8               	btfsc	status,2,c
  3297  003404  D035               	goto	l1393
  3298                           
  3299                           ; BSR set to: 0
  3300  003406  0100               	movlb	0	; () banked
  3301  003408  29A3               	incf	exp@x& (0+255),w,b
  3302  00340A  E116               	bnz	l6169
  3303  00340C  0100               	movlb	0	; () banked
  3304  00340E  29A4               	incf	(exp@x+1)& (0+255),w,b
  3305  003410  E113               	bnz	l6169
  3306  003412  0E7F               	movlw	127
  3307  003414  0100               	movlb	0	; () banked
  3308  003416  19A5               	xorwf	(exp@x+2)& (0+255),w,b
  3309  003418  E10F               	bnz	l6169
  3310  00341A  0E7F               	movlw	127
  3311  00341C  0100               	movlb	0	; () banked
  3312  00341E  19A6               	xorwf	(exp@x+3)& (0+255),w,b
  3313  003420  A4D8               	btfss	status,2,c
  3314  003422  D00A               	goto	l6169
  3315                           
  3316                           ; BSR set to: 0
  3317  003424  0E00               	movlw	0
  3318  003426  0100               	movlb	0	; () banked
  3319  003428  6FA3               	movwf	?_exp& (0+255),b
  3320  00342A  0E00               	movlw	0
  3321  00342C  6FA4               	movwf	(?_exp+1)& (0+255),b
  3322  00342E  0E00               	movlw	0
  3323  003430  6FA5               	movwf	(?_exp+2)& (0+255),b
  3324  003432  0E00               	movlw	0
  3325  003434  6FA6               	movwf	(?_exp+3)& (0+255),b
  3326                           
  3327                           ; BSR set to: 0
  3328  003436  0012               	return	
  3329  003438                     l6169:
  3330                           
  3331                           ; BSR set to: 0
  3332  003438  0E00               	movlw	0
  3333  00343A  0100               	movlb	0	; () banked
  3334  00343C  6F6A               	movwf	___fldiv@f1& (0+255),b
  3335  00343E  0E00               	movlw	0
  3336  003440  6F6B               	movwf	(___fldiv@f1+1)& (0+255),b
  3337  003442  0E80               	movlw	128
  3338  003444  6F6C               	movwf	(___fldiv@f1+2)& (0+255),b
  3339  003446  0E3F               	movlw	63
  3340  003448  6F6D               	movwf	(___fldiv@f1+3)& (0+255),b
  3341  00344A  C0A3  F06E         	movff	exp@x,___fldiv@f2
  3342  00344E  C0A4  F06F         	movff	exp@x+1,___fldiv@f2+1
  3343  003452  C0A5  F070         	movff	exp@x+2,___fldiv@f2+2
  3344  003456  C0A6  F071         	movff	exp@x+3,___fldiv@f2+3
  3345  00345A  EC8F  F01F         	call	___fldiv	;wreg free
  3346  00345E  C06A  F0A3         	movff	?___fldiv,?_exp
  3347  003462  C06B  F0A4         	movff	?___fldiv+1,?_exp+1
  3348  003466  C06C  F0A5         	movff	?___fldiv+2,?_exp+2
  3349  00346A  C06D  F0A6         	movff	?___fldiv+3,?_exp+3
  3350  00346E  0012               	return	
  3351  003470                     l1393:
  3352                           
  3353                           ; BSR set to: 0
  3354  003470  C0A3  F0A3         	movff	exp@x,?_exp
  3355  003474  C0A4  F0A4         	movff	exp@x+1,?_exp+1
  3356  003478  C0A5  F0A5         	movff	exp@x+2,?_exp+2
  3357  00347C  C0A6  F0A6         	movff	exp@x+3,?_exp+3
  3358  003480  0012               	return		;funcret
  3359  003482                     __end_of_exp:
  3360                           	opt stack 0
  3361                           tblptru	equ	0xFF8
  3362                           tblptrh	equ	0xFF7
  3363                           tblptrl	equ	0xFF6
  3364                           tablat	equ	0xFF5
  3365                           postinc0	equ	0xFEE
  3366                           wreg	equ	0xFE8
  3367                           status	equ	0xFD8
  3368                           
  3369 ;; *************** function _ldexp *****************
  3370 ;; Defined at:
  3371 ;;		line 277 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\frexp.c"
  3372 ;; Parameters:    Size  Location     Type
  3373 ;;  value           4   58[BANK0 ] unsigned char 
  3374 ;;  newexp          2   62[BANK0 ] int 
  3375 ;; Auto vars:     Size  Location     Type
  3376 ;;		None
  3377 ;; Return value:  Size  Location     Type
  3378 ;;                  4   58[BANK0 ] int 
  3379 ;; Registers used:
  3380 ;;		wreg, status,2, status,0
  3381 ;; Tracked objects:
  3382 ;;		On entry : 0/0
  3383 ;;		On exit  : 0/0
  3384 ;;		Unchanged: 0/0
  3385 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3386 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3387 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3388 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3389 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3390 ;;Total ram usage:        8 bytes
  3391 ;; Hardware stack levels used:    1
  3392 ;; Hardware stack levels required when called:    2
  3393 ;; This function calls:
  3394 ;;		Nothing
  3395 ;; This function is called by:
  3396 ;;		_exp
  3397 ;; This function uses a non-reentrant model
  3398 ;;
  3399                           
  3400                           	psect	text6
  3401  004054                     __ptext6:
  3402                           	opt stack 0
  3403  004054                     _ldexp:
  3404                           	opt stack 25
  3405                           
  3406                           ;incstack = 0
  3407  004054  0100               	movlb	0	; () banked
  3408  004056  519A               	movf	ldexp@value& (0+255),w,b
  3409  004058  0100               	movlb	0	; () banked
  3410  00405A  119B               	iorwf	(ldexp@value+1)& (0+255),w,b
  3411  00405C  0100               	movlb	0	; () banked
  3412  00405E  119C               	iorwf	(ldexp@value+2)& (0+255),w,b
  3413  004060  0100               	movlb	0	; () banked
  3414  004062  119D               	iorwf	(ldexp@value+3)& (0+255),w,b
  3415  004064  A4D8               	btfss	status,2,c
  3416  004066  D00A               	goto	l5655
  3417                           
  3418                           ; BSR set to: 0
  3419  004068  0E00               	movlw	0
  3420  00406A  0100               	movlb	0	; () banked
  3421  00406C  6F9A               	movwf	?_ldexp& (0+255),b
  3422  00406E  0E00               	movlw	0
  3423  004070  6F9B               	movwf	(?_ldexp+1)& (0+255),b
  3424  004072  0E00               	movlw	0
  3425  004074  6F9C               	movwf	(?_ldexp+2)& (0+255),b
  3426  004076  0E00               	movlw	0
  3427  004078  6F9D               	movwf	(?_ldexp+3)& (0+255),b
  3428                           
  3429                           ; BSR set to: 0
  3430  00407A  0012               	return	
  3431  00407C                     l5655:
  3432                           
  3433                           ; BSR set to: 0
  3434  00407C  0100               	movlb	0	; () banked
  3435  00407E  519D               	movf	(ldexp@value+3)& (0+255),w,b
  3436  004080  0B7F               	andlw	127
  3437  004082  0100               	movlb	0	; () banked
  3438  004084  6FA0               	movwf	??_ldexp& (0+255),b
  3439  004086  6BA1               	clrf	(??_ldexp+1)& (0+255),b
  3440  004088  90D8               	bcf	status,0,c
  3441  00408A  0100               	movlb	0	; () banked
  3442  00408C  37A0               	rlcf	??_ldexp& (0+255),f,b
  3443  00408E  37A1               	rlcf	(??_ldexp+1)& (0+255),f,b
  3444  004090  0100               	movlb	0	; () banked
  3445  004092  51A0               	movf	??_ldexp& (0+255),w,b
  3446  004094  0100               	movlb	0	; () banked
  3447  004096  279E               	addwf	ldexp@newexp& (0+255),f,b
  3448  004098  0100               	movlb	0	; () banked
  3449  00409A  51A1               	movf	(??_ldexp+1)& (0+255),w,b
  3450  00409C  0100               	movlb	0	; () banked
  3451  00409E  239F               	addwfc	(ldexp@newexp+1)& (0+255),f,b
  3452  0040A0  0100               	movlb	0	; () banked
  3453  0040A2  AF9C               	btfss	(ldexp@value+2)& (0+255),7,b
  3454  0040A4  D004               	goto	u6990
  3455  0040A6  0100               	movlb	0	; () banked
  3456  0040A8  6BA0               	clrf	??_ldexp& (0+255),b
  3457  0040AA  2BA0               	incf	??_ldexp& (0+255),f,b
  3458  0040AC  D002               	goto	u6998
  3459  0040AE                     u6990:
  3460  0040AE  0100               	movlb	0	; () banked
  3461  0040B0  6BA0               	clrf	??_ldexp& (0+255),b
  3462  0040B2                     u6998:
  3463  0040B2  0100               	movlb	0	; () banked
  3464  0040B4  51A0               	movf	??_ldexp& (0+255),w,b
  3465  0040B6  0100               	movlb	0	; () banked
  3466  0040B8  279E               	addwf	ldexp@newexp& (0+255),f,b
  3467  0040BA  0E00               	movlw	0
  3468  0040BC  239F               	addwfc	(ldexp@newexp+1)& (0+255),f,b
  3469  0040BE  0100               	movlb	0	; () banked
  3470  0040C0  AF9F               	btfss	(ldexp@newexp+1)& (0+255),7,b
  3471  0040C2  D010               	goto	l5663
  3472                           
  3473                           ; BSR set to: 0
  3474  0040C4  0E00               	movlw	0
  3475  0040C6  0100               	movlb	0	; () banked
  3476  0040C8  6FDC               	movwf	(_errno+1)& (0+255),b
  3477  0040CA  0E22               	movlw	34
  3478  0040CC  6FDB               	movwf	_errno& (0+255),b
  3479  0040CE  0E00               	movlw	0
  3480  0040D0  0100               	movlb	0	; () banked
  3481  0040D2  6F9A               	movwf	?_ldexp& (0+255),b
  3482  0040D4  0E00               	movlw	0
  3483  0040D6  6F9B               	movwf	(?_ldexp+1)& (0+255),b
  3484  0040D8  0E00               	movlw	0
  3485  0040DA  6F9C               	movwf	(?_ldexp+2)& (0+255),b
  3486  0040DC  0E00               	movlw	0
  3487  0040DE                     L5:
  3488  0040DE  6F9D               	movwf	(?_ldexp+3)& (0+255),b
  3489                           
  3490                           ; BSR set to: 0
  3491  0040E0  0012               	return	
  3492                           
  3493                           ; BSR set to: 0
  3494  0040E2  D047               	goto	l5681
  3495  0040E4                     l5663:
  3496                           
  3497                           ; BSR set to: 0
  3498  0040E4  0100               	movlb	0	; () banked
  3499  0040E6  BF9F               	btfsc	(ldexp@newexp+1)& (0+255),7,b
  3500  0040E8  D022               	goto	l5679
  3501  0040EA  0100               	movlb	0	; () banked
  3502  0040EC  059F               	decf	(ldexp@newexp+1)& (0+255),w,b
  3503  0040EE  A0D8               	btfss	status,0,c
  3504  0040F0  D01E               	goto	l5679
  3505                           
  3506                           ; BSR set to: 0
  3507  0040F2  0E00               	movlw	0
  3508  0040F4  0100               	movlb	0	; () banked
  3509  0040F6  6FDC               	movwf	(_errno+1)& (0+255),b
  3510  0040F8  0E22               	movlw	34
  3511  0040FA  6FDB               	movwf	_errno& (0+255),b
  3512                           
  3513                           ; BSR set to: 0
  3514  0040FC  0100               	movlb	0	; () banked
  3515  0040FE  AF9D               	btfss	(ldexp@value+3)& (0+255),7,b
  3516  004100  D00B               	goto	l5675
  3517                           
  3518                           ; BSR set to: 0
  3519  004102  0EFF               	movlw	255
  3520  004104  0100               	movlb	0	; () banked
  3521  004106  6F9A               	movwf	?_ldexp& (0+255),b
  3522  004108  0EFF               	movlw	255
  3523  00410A  6F9B               	movwf	(?_ldexp+1)& (0+255),b
  3524  00410C  0E7F               	movlw	127
  3525  00410E  6F9C               	movwf	(?_ldexp+2)& (0+255),b
  3526  004110  0EFF               	movlw	255
  3527  004112  D7E5               	goto	L5
  3528                           
  3529                           ; BSR set to: 0
  3530  004114  0012               	return	
  3531                           
  3532                           ; BSR set to: 0
  3533  004116  D02D               	goto	l5681
  3534  004118                     l5675:
  3535                           
  3536                           ; BSR set to: 0
  3537  004118  0EFF               	movlw	255
  3538  00411A  0100               	movlb	0	; () banked
  3539  00411C  6F9A               	movwf	?_ldexp& (0+255),b
  3540  00411E  0EFF               	movlw	255
  3541  004120  6F9B               	movwf	(?_ldexp+1)& (0+255),b
  3542  004122  0E7F               	movlw	127
  3543  004124  6F9C               	movwf	(?_ldexp+2)& (0+255),b
  3544  004126  0E7F               	movlw	127
  3545  004128  D7DA               	goto	L5
  3546                           
  3547                           ; BSR set to: 0
  3548  00412A  0012               	return	
  3549                           
  3550                           ; BSR set to: 0
  3551  00412C  D022               	goto	l5681
  3552  00412E                     l5679:
  3553                           
  3554                           ; BSR set to: 0
  3555  00412E  0100               	movlb	0	; () banked
  3556  004130  359F               	rlcf	(ldexp@newexp+1)& (0+255),w,b
  3557  004132  319F               	rrcf	(ldexp@newexp+1)& (0+255),w,b
  3558  004134  0100               	movlb	0	; () banked
  3559  004136  6FA1               	movwf	(??_ldexp+1)& (0+255),b
  3560  004138  0100               	movlb	0	; () banked
  3561  00413A  319E               	rrcf	ldexp@newexp& (0+255),w,b
  3562  00413C  0100               	movlb	0	; () banked
  3563  00413E  6FA0               	movwf	??_ldexp& (0+255),b
  3564  004140  0100               	movlb	0	; () banked
  3565  004142  519D               	movf	(ldexp@value+3)& (0+255),w,b
  3566  004144  0100               	movlb	0	; () banked
  3567  004146  19A0               	xorwf	??_ldexp& (0+255),w,b
  3568  004148  0B80               	andlw	-128
  3569  00414A  19A0               	xorwf	??_ldexp& (0+255),w,b
  3570  00414C  0100               	movlb	0	; () banked
  3571  00414E  6F9D               	movwf	(ldexp@value+3)& (0+255),b
  3572  004150  C09E  F0A0         	movff	ldexp@newexp,??_ldexp
  3573  004154  0E01               	movlw	1
  3574  004156  0100               	movlb	0	; () banked
  3575  004158  17A0               	andwf	??_ldexp& (0+255),f,b
  3576  00415A  0100               	movlb	0	; () banked
  3577  00415C  33A0               	rrcf	??_ldexp& (0+255),f,b
  3578  00415E  33A0               	rrcf	??_ldexp& (0+255),f,b
  3579  004160  0100               	movlb	0	; () banked
  3580  004162  519C               	movf	(ldexp@value+2)& (0+255),w,b
  3581  004164  0100               	movlb	0	; () banked
  3582  004166  19A0               	xorwf	??_ldexp& (0+255),w,b
  3583  004168  0B7F               	andlw	-129
  3584  00416A  19A0               	xorwf	??_ldexp& (0+255),w,b
  3585  00416C  0100               	movlb	0	; () banked
  3586  00416E  6F9C               	movwf	(ldexp@value+2)& (0+255),b
  3587                           
  3588                           ; BSR set to: 0
  3589  004170  D000               	goto	l5681
  3590  004172                     l5681:
  3591                           
  3592                           ; BSR set to: 0
  3593  004172  C09A  F09A         	movff	ldexp@value,?_ldexp
  3594  004176  C09B  F09B         	movff	ldexp@value+1,?_ldexp+1
  3595  00417A  C09C  F09C         	movff	ldexp@value+2,?_ldexp+2
  3596  00417E  C09D  F09D         	movff	ldexp@value+3,?_ldexp+3
  3597  004182  0012               	return	
  3598                           
  3599                           ; BSR set to: 0
  3600                           
  3601                           ; BSR set to: 0
  3602  004184  0012               	return		;funcret
  3603  004186                     __end_of_ldexp:
  3604                           	opt stack 0
  3605                           tblptru	equ	0xFF8
  3606                           tblptrh	equ	0xFF7
  3607                           tblptrl	equ	0xFF6
  3608                           tablat	equ	0xFF5
  3609                           postinc0	equ	0xFEE
  3610                           wreg	equ	0xFE8
  3611                           status	equ	0xFD8
  3612                           
  3613 ;; *************** function _floor *****************
  3614 ;; Defined at:
  3615 ;;		line 13 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\floor.c"
  3616 ;; Parameters:    Size  Location     Type
  3617 ;;  x               4   57[BANK0 ] int 
  3618 ;; Auto vars:     Size  Location     Type
  3619 ;;  i               4   61[BANK0 ] int 
  3620 ;;  expon           2   65[BANK0 ] int 
  3621 ;; Return value:  Size  Location     Type
  3622 ;;                  4   57[BANK0 ] int 
  3623 ;; Registers used:
  3624 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3625 ;; Tracked objects:
  3626 ;;		On entry : 0/0
  3627 ;;		On exit  : 0/0
  3628 ;;		Unchanged: 0/0
  3629 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3630 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3631 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3632 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3633 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3634 ;;Total ram usage:       10 bytes
  3635 ;; Hardware stack levels used:    1
  3636 ;; Hardware stack levels required when called:    4
  3637 ;; This function calls:
  3638 ;;		___altofl
  3639 ;;		___fladd
  3640 ;;		___flge
  3641 ;;		___fltol
  3642 ;;		_frexp
  3643 ;; This function is called by:
  3644 ;;		_exp
  3645 ;; This function uses a non-reentrant model
  3646 ;;
  3647                           
  3648                           	psect	text7
  3649  0042B2                     __ptext7:
  3650                           	opt stack 0
  3651  0042B2                     _floor:
  3652                           	opt stack 23
  3653                           
  3654                           ; BSR set to: 0
  3655                           ;incstack = 0
  3656  0042B2  C099  F060         	movff	floor@x,frexp@value
  3657  0042B6  C09A  F061         	movff	floor@x+1,frexp@value+1
  3658  0042BA  C09B  F062         	movff	floor@x+2,frexp@value+2
  3659  0042BE  C09C  F063         	movff	floor@x+3,frexp@value+3
  3660  0042C2  0EA1               	movlw	low floor@expon
  3661  0042C4  0100               	movlb	0	; () banked
  3662  0042C6  6F64               	movwf	frexp@eptr& (0+255),b
  3663  0042C8  0E00               	movlw	high floor@expon
  3664  0042CA  0100               	movlb	0	; () banked
  3665  0042CC  6F65               	movwf	(frexp@eptr+1)& (0+255),b
  3666  0042CE  ECE8  F023         	call	_frexp	;wreg free
  3667  0042D2  0100               	movlb	0	; () banked
  3668  0042D4  AFA2               	btfss	(floor@expon+1)& (0+255),7,b
  3669  0042D6  D017               	goto	l5633
  3670                           
  3671                           ; BSR set to: 0
  3672  0042D8  0100               	movlb	0	; () banked
  3673  0042DA  AF9C               	btfss	(floor@x+3)& (0+255),7,b
  3674  0042DC  D00A               	goto	l5629
  3675                           
  3676                           ; BSR set to: 0
  3677  0042DE  0E00               	movlw	0
  3678  0042E0  0100               	movlb	0	; () banked
  3679  0042E2  6F99               	movwf	?_floor& (0+255),b
  3680  0042E4  0E00               	movlw	0
  3681  0042E6  6F9A               	movwf	(?_floor+1)& (0+255),b
  3682  0042E8  0E80               	movlw	128
  3683  0042EA  6F9B               	movwf	(?_floor+2)& (0+255),b
  3684  0042EC  0EBF               	movlw	191
  3685  0042EE  6F9C               	movwf	(?_floor+3)& (0+255),b
  3686                           
  3687                           ; BSR set to: 0
  3688  0042F0  0012               	return	
  3689  0042F2                     l5629:
  3690                           
  3691                           ; BSR set to: 0
  3692  0042F2  0E00               	movlw	0
  3693  0042F4  0100               	movlb	0	; () banked
  3694  0042F6  6F99               	movwf	?_floor& (0+255),b
  3695  0042F8  0E00               	movlw	0
  3696  0042FA  6F9A               	movwf	(?_floor+1)& (0+255),b
  3697  0042FC  0E00               	movlw	0
  3698  0042FE  6F9B               	movwf	(?_floor+2)& (0+255),b
  3699  004300  0E00               	movlw	0
  3700  004302  6F9C               	movwf	(?_floor+3)& (0+255),b
  3701                           
  3702                           ; BSR set to: 0
  3703  004304  0012               	return	
  3704  004306                     l5633:
  3705                           
  3706                           ; BSR set to: 0
  3707  004306  0100               	movlb	0	; () banked
  3708  004308  51A2               	movf	(floor@expon+1)& (0+255),w,b
  3709  00430A  E105               	bnz	u6950
  3710  00430C  0E1D               	movlw	29
  3711  00430E  0100               	movlb	0	; () banked
  3712  004310  5DA1               	subwf	floor@expon& (0+255),w,b
  3713  004312  A0D8               	btfss	status,0,c
  3714  004314  D009               	goto	l5637
  3715  004316                     u6950:
  3716                           
  3717                           ; BSR set to: 0
  3718  004316  C099  F099         	movff	floor@x,?_floor
  3719  00431A  C09A  F09A         	movff	floor@x+1,?_floor+1
  3720  00431E  C09B  F09B         	movff	floor@x+2,?_floor+2
  3721  004322  C09C  F09C         	movff	floor@x+3,?_floor+3
  3722  004326  0012               	return	
  3723  004328                     l5637:
  3724                           
  3725                           ; BSR set to: 0
  3726  004328  C099  F08A         	movff	floor@x,___fltol@f1
  3727  00432C  C09A  F08B         	movff	floor@x+1,___fltol@f1+1
  3728  004330  C09B  F08C         	movff	floor@x+2,___fltol@f1+2
  3729  004334  C09C  F08D         	movff	floor@x+3,___fltol@f1+3
  3730  004338  ECEA  F021         	call	___fltol	;wreg free
  3731  00433C  C08A  F094         	movff	?___fltol,___altofl@c
  3732  004340  C08B  F095         	movff	?___fltol+1,___altofl@c+1
  3733  004344  C08C  F096         	movff	?___fltol+2,___altofl@c+2
  3734  004348  C08D  F097         	movff	?___fltol+3,___altofl@c+3
  3735  00434C  ECD1  F025         	call	___altofl	;wreg free
  3736  004350  C094  F09D         	movff	?___altofl,floor@i
  3737  004354  C095  F09E         	movff	?___altofl+1,floor@i+1
  3738  004358  C096  F09F         	movff	?___altofl+2,floor@i+2
  3739  00435C  C097  F0A0         	movff	?___altofl+3,floor@i+3
  3740  004360  C099  F060         	movff	floor@x,___flge@ff1
  3741  004364  C09A  F061         	movff	floor@x+1,___flge@ff1+1
  3742  004368  C09B  F062         	movff	floor@x+2,___flge@ff1+2
  3743  00436C  C09C  F063         	movff	floor@x+3,___flge@ff1+3
  3744  004370  C09D  F064         	movff	floor@i,___flge@ff2
  3745  004374  C09E  F065         	movff	floor@i+1,___flge@ff2+1
  3746  004378  C09F  F066         	movff	floor@i+2,___flge@ff2+2
  3747  00437C  C0A0  F067         	movff	floor@i+3,___flge@ff2+3
  3748  004380  EC04  F023         	call	___flge	;wreg free
  3749  004384  0100               	movlb	0	; () banked
  3750  004386  B0D8               	btfsc	status,0,c
  3751  004388  D01C               	goto	l1403
  3752                           
  3753                           ; BSR set to: 0
  3754  00438A  C09D  F07E         	movff	floor@i,___fladd@f1
  3755  00438E  C09E  F07F         	movff	floor@i+1,___fladd@f1+1
  3756  004392  C09F  F080         	movff	floor@i+2,___fladd@f1+2
  3757  004396  C0A0  F081         	movff	floor@i+3,___fladd@f1+3
  3758  00439A  0E00               	movlw	0
  3759  00439C  0100               	movlb	0	; () banked
  3760  00439E  6F82               	movwf	___fladd@f2& (0+255),b
  3761  0043A0  0E00               	movlw	0
  3762  0043A2  6F83               	movwf	(___fladd@f2+1)& (0+255),b
  3763  0043A4  0E80               	movlw	128
  3764  0043A6  6F84               	movwf	(___fladd@f2+2)& (0+255),b
  3765  0043A8  0EBF               	movlw	191
  3766  0043AA  6F85               	movwf	(___fladd@f2+3)& (0+255),b
  3767  0043AC  EC41  F01A         	call	___fladd	;wreg free
  3768  0043B0  C07E  F099         	movff	?___fladd,?_floor
  3769  0043B4  C07F  F09A         	movff	?___fladd+1,?_floor+1
  3770  0043B8  C080  F09B         	movff	?___fladd+2,?_floor+2
  3771  0043BC  C081  F09C         	movff	?___fladd+3,?_floor+3
  3772  0043C0  0012               	return	
  3773  0043C2                     l1403:
  3774                           
  3775                           ; BSR set to: 0
  3776  0043C2  C09D  F099         	movff	floor@i,?_floor
  3777  0043C6  C09E  F09A         	movff	floor@i+1,?_floor+1
  3778  0043CA  C09F  F09B         	movff	floor@i+2,?_floor+2
  3779  0043CE  C0A0  F09C         	movff	floor@i+3,?_floor+3
  3780  0043D2  0012               	return		;funcret
  3781  0043D4                     __end_of_floor:
  3782                           	opt stack 0
  3783                           tblptru	equ	0xFF8
  3784                           tblptrh	equ	0xFF7
  3785                           tblptrl	equ	0xFF6
  3786                           tablat	equ	0xFF5
  3787                           postinc0	equ	0xFEE
  3788                           wreg	equ	0xFE8
  3789                           status	equ	0xFD8
  3790                           
  3791 ;; *************** function _frexp *****************
  3792 ;; Defined at:
  3793 ;;		line 254 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\frexp.c"
  3794 ;; Parameters:    Size  Location     Type
  3795 ;;  value           4    0[BANK0 ] int 
  3796 ;;  eptr            2    4[BANK0 ] PTR int 
  3797 ;;		 -> log@exponent(2), floor@expon(2), 
  3798 ;; Auto vars:     Size  Location     Type
  3799 ;;		None
  3800 ;; Return value:  Size  Location     Type
  3801 ;;                  4    0[BANK0 ] PTR int 
  3802 ;; Registers used:
  3803 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3804 ;; Tracked objects:
  3805 ;;		On entry : 0/0
  3806 ;;		On exit  : 0/0
  3807 ;;		Unchanged: 0/0
  3808 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3809 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3810 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3811 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3812 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3813 ;;Total ram usage:        8 bytes
  3814 ;; Hardware stack levels used:    1
  3815 ;; Hardware stack levels required when called:    2
  3816 ;; This function calls:
  3817 ;;		Nothing
  3818 ;; This function is called by:
  3819 ;;		_floor
  3820 ;;		_log
  3821 ;; This function uses a non-reentrant model
  3822 ;;
  3823                           
  3824                           	psect	text8
  3825  0047D0                     __ptext8:
  3826                           	opt stack 0
  3827  0047D0                     _frexp:
  3828                           	opt stack 25
  3829                           
  3830                           ;incstack = 0
  3831  0047D0  0100               	movlb	0	; () banked
  3832  0047D2  5160               	movf	frexp@value& (0+255),w,b
  3833  0047D4  0100               	movlb	0	; () banked
  3834  0047D6  1161               	iorwf	(frexp@value+1)& (0+255),w,b
  3835  0047D8  0100               	movlb	0	; () banked
  3836  0047DA  1162               	iorwf	(frexp@value+2)& (0+255),w,b
  3837  0047DC  0100               	movlb	0	; () banked
  3838  0047DE  1163               	iorwf	(frexp@value+3)& (0+255),w,b
  3839  0047E0  A4D8               	btfss	status,2,c
  3840  0047E2  D012               	goto	l5541
  3841                           
  3842                           ; BSR set to: 0
  3843  0047E4  C064  FFD9         	movff	frexp@eptr,fsr2l
  3844  0047E8  C065  FFDA         	movff	frexp@eptr+1,fsr2h
  3845  0047EC  0E00               	movlw	0
  3846  0047EE  6EDE               	movwf	postinc2,c
  3847  0047F0  0E00               	movlw	0
  3848  0047F2  6EDD               	movwf	postdec2,c
  3849                           
  3850                           ; BSR set to: 0
  3851  0047F4  0E00               	movlw	0
  3852  0047F6  0100               	movlb	0	; () banked
  3853  0047F8  6F60               	movwf	?_frexp& (0+255),b
  3854  0047FA  0E00               	movlw	0
  3855  0047FC  6F61               	movwf	(?_frexp+1)& (0+255),b
  3856  0047FE  0E00               	movlw	0
  3857  004800  6F62               	movwf	(?_frexp+2)& (0+255),b
  3858  004802  0E00               	movlw	0
  3859  004804  6F63               	movwf	(?_frexp+3)& (0+255),b
  3860                           
  3861                           ; BSR set to: 0
  3862  004806  0012               	return	
  3863  004808                     l5541:
  3864                           
  3865                           ; BSR set to: 0
  3866  004808  0100               	movlb	0	; () banked
  3867  00480A  5163               	movf	(frexp@value+3)& (0+255),w,b
  3868  00480C  0B7F               	andlw	127
  3869  00480E  0100               	movlb	0	; () banked
  3870  004810  6F66               	movwf	??_frexp& (0+255),b
  3871  004812  6B67               	clrf	(??_frexp+1)& (0+255),b
  3872  004814  90D8               	bcf	status,0,c
  3873  004816  0100               	movlb	0	; () banked
  3874  004818  3766               	rlcf	??_frexp& (0+255),f,b
  3875  00481A  3767               	rlcf	(??_frexp+1)& (0+255),f,b
  3876  00481C  C064  FFD9         	movff	frexp@eptr,fsr2l
  3877  004820  C065  FFDA         	movff	frexp@eptr+1,fsr2h
  3878  004824  C066  FFDE         	movff	??_frexp,postinc2
  3879  004828  C067  FFDD         	movff	??_frexp+1,postdec2
  3880  00482C  0100               	movlb	0	; () banked
  3881  00482E  AF62               	btfss	(frexp@value+2)& (0+255),7,b
  3882  004830  D004               	goto	u6860
  3883  004832  0100               	movlb	0	; () banked
  3884  004834  6B66               	clrf	??_frexp& (0+255),b
  3885  004836  2B66               	incf	??_frexp& (0+255),f,b
  3886  004838  D002               	goto	u6868
  3887  00483A                     u6860:
  3888  00483A  0100               	movlb	0	; () banked
  3889  00483C  6B66               	clrf	??_frexp& (0+255),b
  3890  00483E                     u6868:
  3891  00483E  0100               	movlb	0	; () banked
  3892  004840  5166               	movf	??_frexp& (0+255),w,b
  3893  004842  C064  FFD9         	movff	frexp@eptr,fsr2l
  3894  004846  C065  FFDA         	movff	frexp@eptr+1,fsr2h
  3895  00484A  12DE               	iorwf	postinc2,f,c
  3896  00484C  0E00               	movlw	0
  3897  00484E  12DD               	iorwf	postdec2,f,c
  3898                           
  3899                           ; BSR set to: 0
  3900  004850  C064  FFD9         	movff	frexp@eptr,fsr2l
  3901  004854  C065  FFDA         	movff	frexp@eptr+1,fsr2h
  3902  004858  0E82               	movlw	130
  3903  00485A  26DE               	addwf	postinc2,f,c
  3904  00485C  0EFF               	movlw	255
  3905  00485E  22DD               	addwfc	postdec2,f,c
  3906                           
  3907                           ; BSR set to: 0
  3908  004860  8163               	bsf	(frexp@value+3)& (0+255),0,b
  3909  004862  8363               	bsf	(frexp@value+3)& (0+255),1,b
  3910  004864  8563               	bsf	(frexp@value+3)& (0+255),2,b
  3911  004866  8763               	bsf	(frexp@value+3)& (0+255),3,b
  3912  004868  8963               	bsf	(frexp@value+3)& (0+255),4,b
  3913  00486A  8B63               	bsf	(frexp@value+3)& (0+255),5,b
  3914  00486C  9D63               	bcf	(frexp@value+3)& (0+255),6,b
  3915                           
  3916                           ; BSR set to: 0
  3917  00486E  0100               	movlb	0	; () banked
  3918  004870  9F62               	bcf	(frexp@value+2)& (0+255),7,b
  3919                           
  3920                           ; BSR set to: 0
  3921  004872  C060  F060         	movff	frexp@value,?_frexp
  3922  004876  C061  F061         	movff	frexp@value+1,?_frexp+1
  3923  00487A  C062  F062         	movff	frexp@value+2,?_frexp+2
  3924  00487E  C063  F063         	movff	frexp@value+3,?_frexp+3
  3925  004882  0012               	return	
  3926                           
  3927                           ; BSR set to: 0
  3928                           
  3929                           ; BSR set to: 0
  3930  004884  0012               	return		;funcret
  3931  004886                     __end_of_frexp:
  3932                           	opt stack 0
  3933                           tblptru	equ	0xFF8
  3934                           tblptrh	equ	0xFF7
  3935                           tblptrl	equ	0xFF6
  3936                           tablat	equ	0xFF5
  3937                           postinc0	equ	0xFEE
  3938                           wreg	equ	0xFE8
  3939                           postinc2	equ	0xFDE
  3940                           postdec2	equ	0xFDD
  3941                           fsr2h	equ	0xFDA
  3942                           fsr2l	equ	0xFD9
  3943                           status	equ	0xFD8
  3944                           
  3945 ;; *************** function ___fltol *****************
  3946 ;; Defined at:
  3947 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\fltol.c"
  3948 ;; Parameters:    Size  Location     Type
  3949 ;;  f1              4   42[BANK0 ] PTR int 
  3950 ;; Auto vars:     Size  Location     Type
  3951 ;;  exp1            1   51[BANK0 ] unsigned char 
  3952 ;;  sign1           1   50[BANK0 ] unsigned char 
  3953 ;; Return value:  Size  Location     Type
  3954 ;;                  4   42[BANK0 ] long 
  3955 ;; Registers used:
  3956 ;;		wreg, status,2, status,0
  3957 ;; Tracked objects:
  3958 ;;		On entry : 0/0
  3959 ;;		On exit  : 0/0
  3960 ;;		Unchanged: 0/0
  3961 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3962 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3963 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3964 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3965 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3966 ;;Total ram usage:       10 bytes
  3967 ;; Hardware stack levels used:    1
  3968 ;; Hardware stack levels required when called:    2
  3969 ;; This function calls:
  3970 ;;		Nothing
  3971 ;; This function is called by:
  3972 ;;		_rampe
  3973 ;;		_pow
  3974 ;;		_exp
  3975 ;;		_floor
  3976 ;; This function uses a non-reentrant model
  3977 ;;
  3978                           
  3979                           	psect	text9
  3980  0043D4                     __ptext9:
  3981                           	opt stack 0
  3982  0043D4                     ___fltol:
  3983                           	opt stack 24
  3984                           
  3985                           ; BSR set to: 0
  3986                           ;incstack = 0
  3987  0043D4  0100               	movlb	0	; () banked
  3988  0043D6  358C               	rlcf	(___fltol@f1+2)& (0+255),w,b
  3989  0043D8  358D               	rlcf	(___fltol@f1+3)& (0+255),w,b
  3990  0043DA  0100               	movlb	0	; () banked
  3991  0043DC  6F93               	movwf	___fltol@exp1& (0+255),b
  3992  0043DE  0100               	movlb	0	; () banked
  3993  0043E0  5193               	movf	___fltol@exp1& (0+255),w,b
  3994  0043E2  A4D8               	btfss	status,2,c
  3995  0043E4  D00A               	goto	l5495
  3996                           
  3997                           ; BSR set to: 0
  3998  0043E6  0E00               	movlw	0
  3999  0043E8  0100               	movlb	0	; () banked
  4000  0043EA  6F8A               	movwf	?___fltol& (0+255),b
  4001  0043EC  0E00               	movlw	0
  4002  0043EE  6F8B               	movwf	(?___fltol+1)& (0+255),b
  4003  0043F0  0E00               	movlw	0
  4004  0043F2  6F8C               	movwf	(?___fltol+2)& (0+255),b
  4005  0043F4  0E00               	movlw	0
  4006  0043F6  6F8D               	movwf	(?___fltol+3)& (0+255),b
  4007                           
  4008                           ; BSR set to: 0
  4009  0043F8  0012               	return	
  4010  0043FA                     l5495:
  4011                           
  4012                           ; BSR set to: 0
  4013  0043FA  C08A  F08E         	movff	___fltol@f1,??___fltol
  4014  0043FE  C08B  F08F         	movff	___fltol@f1+1,??___fltol+1
  4015  004402  C08C  F090         	movff	___fltol@f1+2,??___fltol+2
  4016  004406  C08D  F091         	movff	___fltol@f1+3,??___fltol+3
  4017  00440A  0E20               	movlw	32
  4018  00440C  D006               	goto	u6790
  4019  00440E                     u6795:
  4020  00440E  0100               	movlb	0	; () banked
  4021  004410  90D8               	bcf	status,0,c
  4022  004412  3391               	rrcf	(??___fltol+3)& (0+255),f,b
  4023  004414  3390               	rrcf	(??___fltol+2)& (0+255),f,b
  4024  004416  338F               	rrcf	(??___fltol+1)& (0+255),f,b
  4025  004418  338E               	rrcf	??___fltol& (0+255),f,b
  4026  00441A                     u6790:
  4027  00441A  2EE8               	decfsz	wreg,f,c
  4028  00441C  D7F8               	goto	u6795
  4029  00441E  0100               	movlb	0	; () banked
  4030  004420  518E               	movf	??___fltol& (0+255),w,b
  4031  004422  0100               	movlb	0	; () banked
  4032  004424  6F92               	movwf	___fltol@sign1& (0+255),b
  4033                           
  4034                           ; BSR set to: 0
  4035  004426  0100               	movlb	0	; () banked
  4036  004428  8F8C               	bsf	(___fltol@f1+2)& (0+255),7,b
  4037                           
  4038                           ; BSR set to: 0
  4039  00442A  0EFF               	movlw	255
  4040  00442C  0100               	movlb	0	; () banked
  4041  00442E  178A               	andwf	___fltol@f1& (0+255),f,b
  4042  004430  0EFF               	movlw	255
  4043  004432  178B               	andwf	(___fltol@f1+1)& (0+255),f,b
  4044  004434  0EFF               	movlw	255
  4045  004436  178C               	andwf	(___fltol@f1+2)& (0+255),f,b
  4046  004438  0E00               	movlw	0
  4047  00443A  178D               	andwf	(___fltol@f1+3)& (0+255),f,b
  4048                           
  4049                           ; BSR set to: 0
  4050  00443C  0E96               	movlw	150
  4051  00443E  0100               	movlb	0	; () banked
  4052  004440  5F93               	subwf	___fltol@exp1& (0+255),f,b
  4053                           
  4054                           ; BSR set to: 0
  4055  004442  0100               	movlb	0	; () banked
  4056  004444  AF93               	btfss	___fltol@exp1& (0+255),7,b
  4057  004446  D01B               	goto	l5515
  4058                           
  4059                           ; BSR set to: 0
  4060  004448  0100               	movlb	0	; () banked
  4061  00444A  5193               	movf	___fltol@exp1& (0+255),w,b
  4062  00444C  0A80               	xorlw	128
  4063  00444E  0F97               	addlw	151
  4064  004450  B0D8               	btfsc	status,0,c
  4065  004452  D00B               	goto	l5511
  4066                           
  4067                           ; BSR set to: 0
  4068  004454  0E00               	movlw	0
  4069  004456  0100               	movlb	0	; () banked
  4070  004458  6F8A               	movwf	?___fltol& (0+255),b
  4071  00445A  0E00               	movlw	0
  4072  00445C  6F8B               	movwf	(?___fltol+1)& (0+255),b
  4073  00445E  0E00               	movlw	0
  4074  004460  6F8C               	movwf	(?___fltol+2)& (0+255),b
  4075  004462  0E00               	movlw	0
  4076  004464  6F8D               	movwf	(?___fltol+3)& (0+255),b
  4077                           
  4078                           ; BSR set to: 0
  4079  004466  0012               	return	
  4080                           
  4081                           ; BSR set to: 0
  4082  004468  D000               	goto	l5511
  4083  00446A                     l5511:
  4084                           
  4085                           ; BSR set to: 0
  4086  00446A  0100               	movlb	0	; () banked
  4087  00446C  90D8               	bcf	status,0,c
  4088  00446E  338D               	rrcf	(___fltol@f1+3)& (0+255),f,b
  4089  004470  338C               	rrcf	(___fltol@f1+2)& (0+255),f,b
  4090  004472  338B               	rrcf	(___fltol@f1+1)& (0+255),f,b
  4091  004474  338A               	rrcf	___fltol@f1& (0+255),f,b
  4092                           
  4093                           ; BSR set to: 0
  4094  004476  0100               	movlb	0	; () banked
  4095  004478  3F93               	incfsz	___fltol@exp1& (0+255),f,b
  4096  00447A  D7F7               	goto	l5511
  4097                           
  4098                           ; BSR set to: 0
  4099  00447C  D01F               	goto	l5525
  4100  00447E                     l5515:
  4101                           
  4102                           ; BSR set to: 0
  4103  00447E  0E1F               	movlw	31
  4104  004480  0100               	movlb	0	; () banked
  4105  004482  6593               	cpfsgt	___fltol@exp1& (0+255),b
  4106  004484  D014               	goto	l5523
  4107                           
  4108                           ; BSR set to: 0
  4109  004486  0E00               	movlw	0
  4110  004488  0100               	movlb	0	; () banked
  4111  00448A  6F8A               	movwf	?___fltol& (0+255),b
  4112  00448C  0E00               	movlw	0
  4113  00448E  6F8B               	movwf	(?___fltol+1)& (0+255),b
  4114  004490  0E00               	movlw	0
  4115  004492  6F8C               	movwf	(?___fltol+2)& (0+255),b
  4116  004494  0E00               	movlw	0
  4117  004496  6F8D               	movwf	(?___fltol+3)& (0+255),b
  4118                           
  4119                           ; BSR set to: 0
  4120  004498  0012               	return	
  4121                           
  4122                           ; BSR set to: 0
  4123  00449A  D009               	goto	l5523
  4124  00449C                     l5521:
  4125                           
  4126                           ; BSR set to: 0
  4127  00449C  0100               	movlb	0	; () banked
  4128  00449E  90D8               	bcf	status,0,c
  4129  0044A0  378A               	rlcf	___fltol@f1& (0+255),f,b
  4130  0044A2  378B               	rlcf	(___fltol@f1+1)& (0+255),f,b
  4131  0044A4  378C               	rlcf	(___fltol@f1+2)& (0+255),f,b
  4132  0044A6  378D               	rlcf	(___fltol@f1+3)& (0+255),f,b
  4133  0044A8  0100               	movlb	0	; () banked
  4134  0044AA  0793               	decf	___fltol@exp1& (0+255),f,b
  4135  0044AC  D000               	goto	l5523
  4136  0044AE                     l5523:
  4137                           
  4138                           ; BSR set to: 0
  4139  0044AE  0100               	movlb	0	; () banked
  4140  0044B0  5193               	movf	___fltol@exp1& (0+255),w,b
  4141  0044B2  0100               	movlb	0	; () banked
  4142  0044B4  B4D8               	btfsc	status,2,c
  4143  0044B6  D002               	goto	l5525
  4144  0044B8  D7F1               	goto	l5521
  4145                           
  4146                           ; BSR set to: 0
  4147  0044BA  D000               	goto	l5525
  4148  0044BC                     l5525:
  4149                           
  4150                           ; BSR set to: 0
  4151  0044BC  0100               	movlb	0	; () banked
  4152  0044BE  5192               	movf	___fltol@sign1& (0+255),w,b
  4153  0044C0  0100               	movlb	0	; () banked
  4154  0044C2  B4D8               	btfsc	status,2,c
  4155  0044C4  D00A               	goto	l5529
  4156                           
  4157                           ; BSR set to: 0
  4158  0044C6  0100               	movlb	0	; () banked
  4159  0044C8  1F8D               	comf	(___fltol@f1+3)& (0+255),f,b
  4160  0044CA  1F8C               	comf	(___fltol@f1+2)& (0+255),f,b
  4161  0044CC  1F8B               	comf	(___fltol@f1+1)& (0+255),f,b
  4162  0044CE  6D8A               	negf	___fltol@f1& (0+255),b
  4163  0044D0  0E00               	movlw	0
  4164  0044D2  238B               	addwfc	(___fltol@f1+1)& (0+255),f,b
  4165  0044D4  238C               	addwfc	(___fltol@f1+2)& (0+255),f,b
  4166  0044D6  238D               	addwfc	(___fltol@f1+3)& (0+255),f,b
  4167  0044D8  D000               	goto	l5529
  4168  0044DA                     l5529:
  4169                           
  4170                           ; BSR set to: 0
  4171  0044DA  C08A  F08A         	movff	___fltol@f1,?___fltol
  4172  0044DE  C08B  F08B         	movff	___fltol@f1+1,?___fltol+1
  4173  0044E2  C08C  F08C         	movff	___fltol@f1+2,?___fltol+2
  4174  0044E6  C08D  F08D         	movff	___fltol@f1+3,?___fltol+3
  4175  0044EA  0012               	return	
  4176                           
  4177                           ; BSR set to: 0
  4178                           
  4179                           ; BSR set to: 0
  4180  0044EC  0012               	return		;funcret
  4181  0044EE                     __end_of___fltol:
  4182                           	opt stack 0
  4183                           tblptru	equ	0xFF8
  4184                           tblptrh	equ	0xFF7
  4185                           tblptrl	equ	0xFF6
  4186                           tablat	equ	0xFF5
  4187                           postinc0	equ	0xFEE
  4188                           wreg	equ	0xFE8
  4189                           postinc2	equ	0xFDE
  4190                           postdec2	equ	0xFDD
  4191                           fsr2h	equ	0xFDA
  4192                           fsr2l	equ	0xFD9
  4193                           status	equ	0xFD8
  4194                           
  4195 ;; *************** function ___flge *****************
  4196 ;; Defined at:
  4197 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\flge.c"
  4198 ;; Parameters:    Size  Location     Type
  4199 ;;  ff1             4    0[BANK0 ] long 
  4200 ;;  ff2             4    4[BANK0 ] long 
  4201 ;; Auto vars:     Size  Location     Type
  4202 ;;		None
  4203 ;; Return value:  Size  Location     Type
  4204 ;;		None               void
  4205 ;; Registers used:
  4206 ;;		wreg, status,2, status,0
  4207 ;; Tracked objects:
  4208 ;;		On entry : 0/0
  4209 ;;		On exit  : 0/0
  4210 ;;		Unchanged: 0/0
  4211 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4212 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4213 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4214 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4215 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4216 ;;Total ram usage:       12 bytes
  4217 ;; Hardware stack levels used:    1
  4218 ;; Hardware stack levels required when called:    2
  4219 ;; This function calls:
  4220 ;;		Nothing
  4221 ;; This function is called by:
  4222 ;;		_pow
  4223 ;;		_exp
  4224 ;;		_floor
  4225 ;; This function uses a non-reentrant model
  4226 ;;
  4227                           
  4228                           	psect	text10
  4229  004608                     __ptext10:
  4230                           	opt stack 0
  4231  004608                     ___flge:
  4232                           	opt stack 24
  4233                           
  4234                           ; BSR set to: 0
  4235                           ;incstack = 0
  4236  004608  0100               	movlb	0	; () banked
  4237  00460A  AF63               	btfss	(___flge@ff1+3)& (0+255),7,b
  4238  00460C  D027               	goto	l5479
  4239                           
  4240                           ; BSR set to: 0
  4241  00460E  C060  F068         	movff	___flge@ff1,??___flge
  4242  004612  C061  F069         	movff	___flge@ff1+1,??___flge+1
  4243  004616  C062  F06A         	movff	___flge@ff1+2,??___flge+2
  4244  00461A  C063  F06B         	movff	___flge@ff1+3,??___flge+3
  4245  00461E  0100               	movlb	0	; () banked
  4246  004620  1F68               	comf	??___flge& (0+255),f,b
  4247  004622  1F69               	comf	(??___flge+1)& (0+255),f,b
  4248  004624  1F6A               	comf	(??___flge+2)& (0+255),f,b
  4249  004626  1F6B               	comf	(??___flge+3)& (0+255),f,b
  4250  004628  2B68               	incf	??___flge& (0+255),f,b
  4251  00462A  0E00               	movlw	0
  4252  00462C  2369               	addwfc	(??___flge+1)& (0+255),f,b
  4253  00462E  236A               	addwfc	(??___flge+2)& (0+255),f,b
  4254  004630  236B               	addwfc	(??___flge+3)& (0+255),f,b
  4255  004632  0E00               	movlw	0
  4256  004634  0100               	movlb	0	; () banked
  4257  004636  2568               	addwf	??___flge& (0+255),w,b
  4258  004638  0100               	movlb	0	; () banked
  4259  00463A  6F60               	movwf	___flge@ff1& (0+255),b
  4260  00463C  0E00               	movlw	0
  4261  00463E  0100               	movlb	0	; () banked
  4262  004640  2169               	addwfc	(??___flge+1)& (0+255),w,b
  4263  004642  0100               	movlb	0	; () banked
  4264  004644  6F61               	movwf	(___flge@ff1+1)& (0+255),b
  4265  004646  0E00               	movlw	0
  4266  004648  0100               	movlb	0	; () banked
  4267  00464A  216A               	addwfc	(??___flge+2)& (0+255),w,b
  4268  00464C  0100               	movlb	0	; () banked
  4269  00464E  6F62               	movwf	(___flge@ff1+2)& (0+255),b
  4270  004650  0E80               	movlw	128
  4271  004652  0100               	movlb	0	; () banked
  4272  004654  216B               	addwfc	(??___flge+3)& (0+255),w,b
  4273  004656  0100               	movlb	0	; () banked
  4274  004658  6F63               	movwf	(___flge@ff1+3)& (0+255),b
  4275  00465A  D000               	goto	l5479
  4276  00465C                     l5479:
  4277                           
  4278                           ; BSR set to: 0
  4279  00465C  0100               	movlb	0	; () banked
  4280  00465E  AF67               	btfss	(___flge@ff2+3)& (0+255),7,b
  4281  004660  D026               	goto	l1097
  4282                           
  4283                           ; BSR set to: 0
  4284  004662  C064  F068         	movff	___flge@ff2,??___flge
  4285  004666  C065  F069         	movff	___flge@ff2+1,??___flge+1
  4286  00466A  C066  F06A         	movff	___flge@ff2+2,??___flge+2
  4287  00466E  C067  F06B         	movff	___flge@ff2+3,??___flge+3
  4288  004672  0100               	movlb	0	; () banked
  4289  004674  1F68               	comf	??___flge& (0+255),f,b
  4290  004676  1F69               	comf	(??___flge+1)& (0+255),f,b
  4291  004678  1F6A               	comf	(??___flge+2)& (0+255),f,b
  4292  00467A  1F6B               	comf	(??___flge+3)& (0+255),f,b
  4293  00467C  2B68               	incf	??___flge& (0+255),f,b
  4294  00467E  0E00               	movlw	0
  4295  004680  2369               	addwfc	(??___flge+1)& (0+255),f,b
  4296  004682  236A               	addwfc	(??___flge+2)& (0+255),f,b
  4297  004684  236B               	addwfc	(??___flge+3)& (0+255),f,b
  4298  004686  0E00               	movlw	0
  4299  004688  0100               	movlb	0	; () banked
  4300  00468A  2568               	addwf	??___flge& (0+255),w,b
  4301  00468C  0100               	movlb	0	; () banked
  4302  00468E  6F64               	movwf	___flge@ff2& (0+255),b
  4303  004690  0E00               	movlw	0
  4304  004692  0100               	movlb	0	; () banked
  4305  004694  2169               	addwfc	(??___flge+1)& (0+255),w,b
  4306  004696  0100               	movlb	0	; () banked
  4307  004698  6F65               	movwf	(___flge@ff2+1)& (0+255),b
  4308  00469A  0E00               	movlw	0
  4309  00469C  0100               	movlb	0	; () banked
  4310  00469E  216A               	addwfc	(??___flge+2)& (0+255),w,b
  4311  0046A0  0100               	movlb	0	; () banked
  4312  0046A2  6F66               	movwf	(___flge@ff2+2)& (0+255),b
  4313  0046A4  0E80               	movlw	128
  4314  0046A6  0100               	movlb	0	; () banked
  4315  0046A8  216B               	addwfc	(??___flge+3)& (0+255),w,b
  4316  0046AA  0100               	movlb	0	; () banked
  4317  0046AC  6F67               	movwf	(___flge@ff2+3)& (0+255),b
  4318  0046AE                     l1097:
  4319                           
  4320                           ; BSR set to: 0
  4321  0046AE  0E00               	movlw	0
  4322  0046B0  0100               	movlb	0	; () banked
  4323  0046B2  1B60               	xorwf	___flge@ff1& (0+255),f,b
  4324  0046B4  0E00               	movlw	0
  4325  0046B6  1B61               	xorwf	(___flge@ff1+1)& (0+255),f,b
  4326  0046B8  0E00               	movlw	0
  4327  0046BA  1B62               	xorwf	(___flge@ff1+2)& (0+255),f,b
  4328  0046BC  0E80               	movlw	128
  4329  0046BE  1B63               	xorwf	(___flge@ff1+3)& (0+255),f,b
  4330  0046C0  0E00               	movlw	0
  4331  0046C2  0100               	movlb	0	; () banked
  4332  0046C4  1B64               	xorwf	___flge@ff2& (0+255),f,b
  4333  0046C6  0E00               	movlw	0
  4334  0046C8  1B65               	xorwf	(___flge@ff2+1)& (0+255),f,b
  4335  0046CA  0E00               	movlw	0
  4336  0046CC  1B66               	xorwf	(___flge@ff2+2)& (0+255),f,b
  4337  0046CE  0E80               	movlw	128
  4338  0046D0  1B67               	xorwf	(___flge@ff2+3)& (0+255),f,b
  4339  0046D2  0100               	movlb	0	; () banked
  4340  0046D4  5164               	movf	___flge@ff2& (0+255),w,b
  4341  0046D6  0100               	movlb	0	; () banked
  4342  0046D8  5D60               	subwf	___flge@ff1& (0+255),w,b
  4343  0046DA  0100               	movlb	0	; () banked
  4344  0046DC  5165               	movf	(___flge@ff2+1)& (0+255),w,b
  4345  0046DE  0100               	movlb	0	; () banked
  4346  0046E0  5961               	subwfb	(___flge@ff1+1)& (0+255),w,b
  4347  0046E2  0100               	movlb	0	; () banked
  4348  0046E4  5166               	movf	(___flge@ff2+2)& (0+255),w,b
  4349  0046E6  0100               	movlb	0	; () banked
  4350  0046E8  5962               	subwfb	(___flge@ff1+2)& (0+255),w,b
  4351  0046EA  0100               	movlb	0	; () banked
  4352  0046EC  5167               	movf	(___flge@ff2+3)& (0+255),w,b
  4353  0046EE  0100               	movlb	0	; () banked
  4354  0046F0  5963               	subwfb	(___flge@ff1+3)& (0+255),w,b
  4355  0046F2  B0D8               	btfsc	status,0,c
  4356  0046F4  D002               	goto	l5485
  4357                           
  4358                           ; BSR set to: 0
  4359  0046F6  90D8               	bcf	status,0,c
  4360  0046F8  0012               	return	
  4361  0046FA                     l5485:
  4362                           
  4363                           ; BSR set to: 0
  4364  0046FA  80D8               	bsf	status,0,c
  4365                           
  4366                           ; BSR set to: 0
  4367  0046FC  0012               	return	
  4368                           
  4369                           ; BSR set to: 0
  4370                           
  4371                           ; BSR set to: 0
  4372  0046FE  0012               	return		;funcret
  4373  004700                     __end_of___flge:
  4374                           	opt stack 0
  4375                           tblptru	equ	0xFF8
  4376                           tblptrh	equ	0xFF7
  4377                           tblptrl	equ	0xFF6
  4378                           tablat	equ	0xFF5
  4379                           postinc0	equ	0xFEE
  4380                           wreg	equ	0xFE8
  4381                           postinc2	equ	0xFDE
  4382                           postdec2	equ	0xFDD
  4383                           fsr2h	equ	0xFDA
  4384                           fsr2l	equ	0xFD9
  4385                           status	equ	0xFD8
  4386                           
  4387 ;; *************** function ___altofl *****************
  4388 ;; Defined at:
  4389 ;;		line 36 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\altofl.c"
  4390 ;; Parameters:    Size  Location     Type
  4391 ;;  c               4   52[BANK0 ] long 
  4392 ;; Auto vars:     Size  Location     Type
  4393 ;;  sign            1   56[BANK0 ] unsigned char 
  4394 ;; Return value:  Size  Location     Type
  4395 ;;                  4   52[BANK0 ] unsigned char 
  4396 ;; Registers used:
  4397 ;;		wreg, status,2, status,0, cstack
  4398 ;; Tracked objects:
  4399 ;;		On entry : 0/0
  4400 ;;		On exit  : 0/0
  4401 ;;		Unchanged: 0/0
  4402 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4403 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4404 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4405 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4406 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4407 ;;Total ram usage:        5 bytes
  4408 ;; Hardware stack levels used:    1
  4409 ;; Hardware stack levels required when called:    3
  4410 ;; This function calls:
  4411 ;;		___flpack
  4412 ;; This function is called by:
  4413 ;;		_floor
  4414 ;; This function uses a non-reentrant model
  4415 ;;
  4416                           
  4417                           	psect	text11
  4418  004BA2                     __ptext11:
  4419                           	opt stack 0
  4420  004BA2                     ___altofl:
  4421                           	opt stack 23
  4422                           
  4423                           ; BSR set to: 0
  4424                           ;incstack = 0
  4425  004BA2  0E00               	movlw	0
  4426  004BA4  0100               	movlb	0	; () banked
  4427  004BA6  6F98               	movwf	___altofl@sign& (0+255),b
  4428                           
  4429                           ; BSR set to: 0
  4430  004BA8  0100               	movlb	0	; () banked
  4431  004BAA  AF97               	btfss	(___altofl@c+3)& (0+255),7,b
  4432  004BAC  D00D               	goto	l5353
  4433                           
  4434                           ; BSR set to: 0
  4435  004BAE  0100               	movlb	0	; () banked
  4436  004BB0  1F97               	comf	(___altofl@c+3)& (0+255),f,b
  4437  004BB2  1F96               	comf	(___altofl@c+2)& (0+255),f,b
  4438  004BB4  1F95               	comf	(___altofl@c+1)& (0+255),f,b
  4439  004BB6  6D94               	negf	___altofl@c& (0+255),b
  4440  004BB8  0E00               	movlw	0
  4441  004BBA  2395               	addwfc	(___altofl@c+1)& (0+255),f,b
  4442  004BBC  2396               	addwfc	(___altofl@c+2)& (0+255),f,b
  4443  004BBE  2397               	addwfc	(___altofl@c+3)& (0+255),f,b
  4444                           
  4445                           ; BSR set to: 0
  4446  004BC0  0E01               	movlw	1
  4447  004BC2  0100               	movlb	0	; () banked
  4448  004BC4  6F98               	movwf	___altofl@sign& (0+255),b
  4449  004BC6  D000               	goto	l5353
  4450  004BC8                     l5353:
  4451                           
  4452                           ; BSR set to: 0
  4453  004BC8  C094  F060         	movff	___altofl@c,___flpack@arg
  4454  004BCC  C095  F061         	movff	___altofl@c+1,___flpack@arg+1
  4455  004BD0  C096  F062         	movff	___altofl@c+2,___flpack@arg+2
  4456  004BD4  C097  F063         	movff	___altofl@c+3,___flpack@arg+3
  4457  004BD8  0E96               	movlw	150
  4458  004BDA  0100               	movlb	0	; () banked
  4459  004BDC  6F64               	movwf	___flpack@exp& (0+255),b
  4460  004BDE  C098  F065         	movff	___altofl@sign,___flpack@sign
  4461  004BE2  EC5E  F01D         	call	___flpack	;wreg free
  4462  004BE6  C060  F094         	movff	?___flpack,?___altofl
  4463  004BEA  C061  F095         	movff	?___flpack+1,?___altofl+1
  4464  004BEE  C062  F096         	movff	?___flpack+2,?___altofl+2
  4465  004BF2  C063  F097         	movff	?___flpack+3,?___altofl+3
  4466  004BF6  0012               	return	
  4467  004BF8  0012               	return		;funcret
  4468  004BFA                     __end_of___altofl:
  4469                           	opt stack 0
  4470                           tblptru	equ	0xFF8
  4471                           tblptrh	equ	0xFF7
  4472                           tblptrl	equ	0xFF6
  4473                           tablat	equ	0xFF5
  4474                           postinc0	equ	0xFEE
  4475                           wreg	equ	0xFE8
  4476                           postinc2	equ	0xFDE
  4477                           postdec2	equ	0xFDD
  4478                           fsr2h	equ	0xFDA
  4479                           fsr2l	equ	0xFD9
  4480                           status	equ	0xFD8
  4481                           
  4482 ;; *************** function _eval_poly *****************
  4483 ;; Defined at:
  4484 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\evalpoly.c"
  4485 ;; Parameters:    Size  Location     Type
  4486 ;;  x               4   42[BANK0 ] unsigned char 
  4487 ;;  d               2   46[BANK0 ] PTR const 
  4488 ;;		 -> log@coeff(36), exp@coeff(40), 
  4489 ;;  n               2   48[BANK0 ] int 
  4490 ;; Auto vars:     Size  Location     Type
  4491 ;;  res             4   54[BANK0 ] int 
  4492 ;; Return value:  Size  Location     Type
  4493 ;;                  4   42[BANK0 ] int 
  4494 ;; Registers used:
  4495 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4496 ;; Tracked objects:
  4497 ;;		On entry : 0/0
  4498 ;;		On exit  : 0/0
  4499 ;;		Unchanged: 0/0
  4500 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4501 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4502 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4503 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4504 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4505 ;;Total ram usage:       16 bytes
  4506 ;; Hardware stack levels used:    1
  4507 ;; Hardware stack levels required when called:    4
  4508 ;; This function calls:
  4509 ;;		___fladd
  4510 ;;		___flmul
  4511 ;; This function is called by:
  4512 ;;		_exp
  4513 ;;		_log
  4514 ;; This function uses a non-reentrant model
  4515 ;;
  4516                           
  4517                           	psect	text12
  4518  0044EE                     __ptext12:
  4519                           	opt stack 0
  4520  0044EE                     _eval_poly:
  4521                           	opt stack 23
  4522                           
  4523                           ;incstack = 0
  4524  0044EE  C090  F092         	movff	eval_poly@n,??_eval_poly
  4525  0044F2  C091  F093         	movff	eval_poly@n+1,??_eval_poly+1
  4526  0044F6  0100               	movlb	0	; () banked
  4527  0044F8  90D8               	bcf	status,0,c
  4528  0044FA  3792               	rlcf	??_eval_poly& (0+255),f,b
  4529  0044FC  3793               	rlcf	(??_eval_poly+1)& (0+255),f,b
  4530  0044FE  0100               	movlb	0	; () banked
  4531  004500  90D8               	bcf	status,0,c
  4532  004502  3792               	rlcf	??_eval_poly& (0+255),f,b
  4533  004504  3793               	rlcf	(??_eval_poly+1)& (0+255),f,b
  4534  004506  C08E  F094         	movff	eval_poly@d,??_eval_poly+2
  4535  00450A  C08F  F095         	movff	eval_poly@d+1,??_eval_poly+3
  4536  00450E  0100               	movlb	0	; () banked
  4537  004510  5192               	movf	??_eval_poly& (0+255),w,b
  4538  004512  0100               	movlb	0	; () banked
  4539  004514  2794               	addwf	(??_eval_poly+2)& (0+255),f,b
  4540  004516  0100               	movlb	0	; () banked
  4541  004518  5193               	movf	(??_eval_poly+1)& (0+255),w,b
  4542  00451A  0100               	movlb	0	; () banked
  4543  00451C  2395               	addwfc	(??_eval_poly+3)& (0+255),f,b
  4544  00451E  C094  FFF6         	movff	??_eval_poly+2,tblptrl
  4545  004522  C095  FFF7         	movff	??_eval_poly+3,tblptrh
  4546  004526                     	if	0	;tblptru may be non-zero
  4547  004526                     	endif
  4548  004526                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  4549  004526  0E00               	movlw	low (__mediumconst shr (0+16))
  4550  004528  6EF8               	movwf	tblptru,c
  4551  00452A                     	endif
  4552  00452A  0009               	tblrd		*+
  4553  00452C  CFF5 F096          	movff	tablat,eval_poly@res
  4554  004530  0009               	tblrd		*+
  4555  004532  CFF5 F097          	movff	tablat,eval_poly@res+1
  4556  004536  0009               	tblrd		*+
  4557  004538  CFF5 F098          	movff	tablat,eval_poly@res+2
  4558  00453C  000A               	tblrd		*-
  4559  00453E  CFF5 F099          	movff	tablat,eval_poly@res+3
  4560  004542  D053               	goto	l5647
  4561  004544                     l5645:
  4562                           
  4563                           ; BSR set to: 0
  4564  004544  C096  F073         	movff	eval_poly@res,___flmul@f2
  4565  004548  C097  F074         	movff	eval_poly@res+1,___flmul@f2+1
  4566  00454C  C098  F075         	movff	eval_poly@res+2,___flmul@f2+2
  4567  004550  C099  F076         	movff	eval_poly@res+3,___flmul@f2+3
  4568  004554  C08A  F06F         	movff	eval_poly@x,___flmul@f1
  4569  004558  C08B  F070         	movff	eval_poly@x+1,___flmul@f1+1
  4570  00455C  C08C  F071         	movff	eval_poly@x+2,___flmul@f1+2
  4571  004560  C08D  F072         	movff	eval_poly@x+3,___flmul@f1+3
  4572  004564  ECDD  F01E         	call	___flmul	;wreg free
  4573  004568  C06F  F07E         	movff	?___flmul,___fladd@f1
  4574  00456C  C070  F07F         	movff	?___flmul+1,___fladd@f1+1
  4575  004570  C071  F080         	movff	?___flmul+2,___fladd@f1+2
  4576  004574  C072  F081         	movff	?___flmul+3,___fladd@f1+3
  4577  004578  0100               	movlb	0	; () banked
  4578  00457A  0790               	decf	eval_poly@n& (0+255),f,b
  4579  00457C  A0D8               	btfss	status,0,c
  4580  00457E  0791               	decf	(eval_poly@n+1)& (0+255),f,b
  4581  004580  C090  F092         	movff	eval_poly@n,??_eval_poly
  4582  004584  C091  F093         	movff	eval_poly@n+1,??_eval_poly+1
  4583  004588  0100               	movlb	0	; () banked
  4584  00458A  90D8               	bcf	status,0,c
  4585  00458C  3792               	rlcf	??_eval_poly& (0+255),f,b
  4586  00458E  3793               	rlcf	(??_eval_poly+1)& (0+255),f,b
  4587  004590  0100               	movlb	0	; () banked
  4588  004592  90D8               	bcf	status,0,c
  4589  004594  3792               	rlcf	??_eval_poly& (0+255),f,b
  4590  004596  3793               	rlcf	(??_eval_poly+1)& (0+255),f,b
  4591  004598  C08E  F094         	movff	eval_poly@d,??_eval_poly+2
  4592  00459C  C08F  F095         	movff	eval_poly@d+1,??_eval_poly+3
  4593  0045A0  0100               	movlb	0	; () banked
  4594  0045A2  5192               	movf	??_eval_poly& (0+255),w,b
  4595  0045A4  0100               	movlb	0	; () banked
  4596  0045A6  2794               	addwf	(??_eval_poly+2)& (0+255),f,b
  4597  0045A8  0100               	movlb	0	; () banked
  4598  0045AA  5193               	movf	(??_eval_poly+1)& (0+255),w,b
  4599  0045AC  0100               	movlb	0	; () banked
  4600  0045AE  2395               	addwfc	(??_eval_poly+3)& (0+255),f,b
  4601  0045B0  C094  FFF6         	movff	??_eval_poly+2,tblptrl
  4602  0045B4  C095  FFF7         	movff	??_eval_poly+3,tblptrh
  4603  0045B8                     	if	0	;tblptru may be non-zero
  4604  0045B8                     	endif
  4605  0045B8                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  4606  0045B8  0E00               	movlw	low (__mediumconst shr (0+16))
  4607  0045BA  6EF8               	movwf	tblptru,c
  4608  0045BC                     	endif
  4609  0045BC  0009               	tblrd		*+
  4610  0045BE  CFF5 F082          	movff	tablat,___fladd@f2
  4611  0045C2  0009               	tblrd		*+
  4612  0045C4  CFF5 F083          	movff	tablat,___fladd@f2+1
  4613  0045C8  0009               	tblrd		*+
  4614  0045CA  CFF5 F084          	movff	tablat,___fladd@f2+2
  4615  0045CE  000A               	tblrd		*-
  4616  0045D0  CFF5 F085          	movff	tablat,___fladd@f2+3
  4617  0045D4  EC41  F01A         	call	___fladd	;wreg free
  4618  0045D8  C07E  F096         	movff	?___fladd,eval_poly@res
  4619  0045DC  C07F  F097         	movff	?___fladd+1,eval_poly@res+1
  4620  0045E0  C080  F098         	movff	?___fladd+2,eval_poly@res+2
  4621  0045E4  C081  F099         	movff	?___fladd+3,eval_poly@res+3
  4622  0045E8  D000               	goto	l5647
  4623  0045EA                     l5647:
  4624  0045EA  0100               	movlb	0	; () banked
  4625  0045EC  5190               	movf	eval_poly@n& (0+255),w,b
  4626  0045EE  0100               	movlb	0	; () banked
  4627  0045F0  1191               	iorwf	(eval_poly@n+1)& (0+255),w,b
  4628  0045F2  A4D8               	btfss	status,2,c
  4629  0045F4  D7A7               	goto	l5645
  4630                           
  4631                           ; BSR set to: 0
  4632  0045F6  C096  F08A         	movff	eval_poly@res,?_eval_poly
  4633  0045FA  C097  F08B         	movff	eval_poly@res+1,?_eval_poly+1
  4634  0045FE  C098  F08C         	movff	eval_poly@res+2,?_eval_poly+2
  4635  004602  C099  F08D         	movff	eval_poly@res+3,?_eval_poly+3
  4636                           
  4637                           ; BSR set to: 0
  4638  004606  0012               	return		;funcret
  4639  004608                     __end_of_eval_poly:
  4640                           	opt stack 0
  4641                           tblptru	equ	0xFF8
  4642                           tblptrh	equ	0xFF7
  4643                           tblptrl	equ	0xFF6
  4644                           tablat	equ	0xFF5
  4645                           postinc0	equ	0xFEE
  4646                           wreg	equ	0xFE8
  4647                           postinc2	equ	0xFDE
  4648                           postdec2	equ	0xFDD
  4649                           fsr2h	equ	0xFDA
  4650                           fsr2l	equ	0xFD9
  4651                           status	equ	0xFD8
  4652                           
  4653 ;; *************** function ___flmul *****************
  4654 ;; Defined at:
  4655 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\flmul.c"
  4656 ;; Parameters:    Size  Location     Type
  4657 ;;  f1              4   15[BANK0 ] int 
  4658 ;;  f2              4   19[BANK0 ] int 
  4659 ;; Auto vars:     Size  Location     Type
  4660 ;;  f3_as_produc    4   24[BANK0 ] unsigned long 
  4661 ;;  sign            1   29[BANK0 ] unsigned char 
  4662 ;;  cntr            1   28[BANK0 ] unsigned char 
  4663 ;;  exp             1   23[BANK0 ] unsigned char 
  4664 ;; Return value:  Size  Location     Type
  4665 ;;                  4   15[BANK0 ] unsigned char 
  4666 ;; Registers used:
  4667 ;;		wreg, status,2, status,0, cstack
  4668 ;; Tracked objects:
  4669 ;;		On entry : 0/0
  4670 ;;		On exit  : 0/0
  4671 ;;		Unchanged: 0/0
  4672 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4673 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4674 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4675 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4676 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4677 ;;Total ram usage:       15 bytes
  4678 ;; Hardware stack levels used:    1
  4679 ;; Hardware stack levels required when called:    3
  4680 ;; This function calls:
  4681 ;;		___flpack
  4682 ;; This function is called by:
  4683 ;;		_pow
  4684 ;;		_exp
  4685 ;;		_log
  4686 ;;		_eval_poly
  4687 ;; This function uses a non-reentrant model
  4688 ;;
  4689                           
  4690                           	psect	text13
  4691  003DBA                     __ptext13:
  4692                           	opt stack 0
  4693  003DBA                     ___flmul:
  4694                           	opt stack 23
  4695                           
  4696                           ; BSR set to: 0
  4697                           ;incstack = 0
  4698  003DBA  0100               	movlb	0	; () banked
  4699  003DBC  3571               	rlcf	(___flmul@f1+2)& (0+255),w,b
  4700  003DBE  3572               	rlcf	(___flmul@f1+3)& (0+255),w,b
  4701  003DC0  0100               	movlb	0	; () banked
  4702  003DC2  6F77               	movwf	___flmul@exp& (0+255),b
  4703  003DC4  0100               	movlb	0	; () banked
  4704  003DC6  5177               	movf	___flmul@exp& (0+255),w,b
  4705  003DC8  A4D8               	btfss	status,2,c
  4706  003DCA  D00A               	goto	l5431
  4707                           
  4708                           ; BSR set to: 0
  4709  003DCC  0E00               	movlw	0
  4710  003DCE  0100               	movlb	0	; () banked
  4711  003DD0  6F6F               	movwf	?___flmul& (0+255),b
  4712  003DD2  0E00               	movlw	0
  4713  003DD4  6F70               	movwf	(?___flmul+1)& (0+255),b
  4714  003DD6  0E00               	movlw	0
  4715  003DD8  6F71               	movwf	(?___flmul+2)& (0+255),b
  4716  003DDA  0E00               	movlw	0
  4717  003DDC  6F72               	movwf	(?___flmul+3)& (0+255),b
  4718                           
  4719                           ; BSR set to: 0
  4720  003DDE  0012               	return	
  4721  003DE0                     l5431:
  4722                           
  4723                           ; BSR set to: 0
  4724  003DE0  0100               	movlb	0	; () banked
  4725  003DE2  3575               	rlcf	(___flmul@f2+2)& (0+255),w,b
  4726  003DE4  3576               	rlcf	(___flmul@f2+3)& (0+255),w,b
  4727  003DE6  0100               	movlb	0	; () banked
  4728  003DE8  6F7D               	movwf	___flmul@sign& (0+255),b
  4729  003DEA  0100               	movlb	0	; () banked
  4730  003DEC  517D               	movf	___flmul@sign& (0+255),w,b
  4731  003DEE  A4D8               	btfss	status,2,c
  4732  003DF0  D00A               	goto	l5437
  4733                           
  4734                           ; BSR set to: 0
  4735  003DF2  0E00               	movlw	0
  4736  003DF4  0100               	movlb	0	; () banked
  4737  003DF6  6F6F               	movwf	?___flmul& (0+255),b
  4738  003DF8  0E00               	movlw	0
  4739  003DFA  6F70               	movwf	(?___flmul+1)& (0+255),b
  4740  003DFC  0E00               	movlw	0
  4741  003DFE  6F71               	movwf	(?___flmul+2)& (0+255),b
  4742  003E00  0E00               	movlw	0
  4743  003E02  6F72               	movwf	(?___flmul+3)& (0+255),b
  4744                           
  4745                           ; BSR set to: 0
  4746  003E04  0012               	return	
  4747  003E06                     l5437:
  4748                           
  4749                           ; BSR set to: 0
  4750  003E06  0100               	movlb	0	; () banked
  4751  003E08  517D               	movf	___flmul@sign& (0+255),w,b
  4752  003E0A  0F7B               	addlw	123
  4753  003E0C  0100               	movlb	0	; () banked
  4754  003E0E  2777               	addwf	___flmul@exp& (0+255),f,b
  4755                           
  4756                           ; BSR set to: 0
  4757  003E10  C072  F07D         	movff	___flmul@f1+3,___flmul@sign
  4758  003E14  0100               	movlb	0	; () banked
  4759  003E16  5176               	movf	(___flmul@f2+3)& (0+255),w,b
  4760  003E18  0100               	movlb	0	; () banked
  4761  003E1A  1B7D               	xorwf	___flmul@sign& (0+255),f,b
  4762  003E1C  0E80               	movlw	128
  4763  003E1E  0100               	movlb	0	; () banked
  4764  003E20  177D               	andwf	___flmul@sign& (0+255),f,b
  4765                           
  4766                           ; BSR set to: 0
  4767  003E22  0100               	movlb	0	; () banked
  4768  003E24  8F71               	bsf	(___flmul@f1+2)& (0+255),7,b
  4769                           
  4770                           ; BSR set to: 0
  4771  003E26  0100               	movlb	0	; () banked
  4772  003E28  8F75               	bsf	(___flmul@f2+2)& (0+255),7,b
  4773  003E2A  0EFF               	movlw	255
  4774  003E2C  0100               	movlb	0	; () banked
  4775  003E2E  1773               	andwf	___flmul@f2& (0+255),f,b
  4776  003E30  0EFF               	movlw	255
  4777  003E32  1774               	andwf	(___flmul@f2+1)& (0+255),f,b
  4778  003E34  0EFF               	movlw	255
  4779  003E36  1775               	andwf	(___flmul@f2+2)& (0+255),f,b
  4780  003E38  0E00               	movlw	0
  4781  003E3A  1776               	andwf	(___flmul@f2+3)& (0+255),f,b
  4782                           
  4783                           ; BSR set to: 0
  4784  003E3C  0E00               	movlw	0
  4785  003E3E  0100               	movlb	0	; () banked
  4786  003E40  6F78               	movwf	___flmul@f3_as_product& (0+255),b
  4787  003E42  0E00               	movlw	0
  4788  003E44  6F79               	movwf	(___flmul@f3_as_product+1)& (0+255),b
  4789  003E46  0E00               	movlw	0
  4790  003E48  6F7A               	movwf	(___flmul@f3_as_product+2)& (0+255),b
  4791  003E4A  0E00               	movlw	0
  4792  003E4C  6F7B               	movwf	(___flmul@f3_as_product+3)& (0+255),b
  4793                           
  4794                           ; BSR set to: 0
  4795  003E4E  0E07               	movlw	7
  4796  003E50  0100               	movlb	0	; () banked
  4797  003E52  6F7C               	movwf	___flmul@cntr& (0+255),b
  4798  003E54  D000               	goto	l5449
  4799  003E56                     l5449:
  4800                           
  4801                           ; BSR set to: 0
  4802  003E56  0100               	movlb	0	; () banked
  4803  003E58  A16F               	btfss	___flmul@f1& (0+255),0,b
  4804  003E5A  D011               	goto	l5453
  4805                           
  4806                           ; BSR set to: 0
  4807  003E5C  0100               	movlb	0	; () banked
  4808  003E5E  5173               	movf	___flmul@f2& (0+255),w,b
  4809  003E60  0100               	movlb	0	; () banked
  4810  003E62  2778               	addwf	___flmul@f3_as_product& (0+255),f,b
  4811  003E64  0100               	movlb	0	; () banked
  4812  003E66  5174               	movf	(___flmul@f2+1)& (0+255),w,b
  4813  003E68  0100               	movlb	0	; () banked
  4814  003E6A  2379               	addwfc	(___flmul@f3_as_product+1)& (0+255),f,b
  4815  003E6C  0100               	movlb	0	; () banked
  4816  003E6E  5175               	movf	(___flmul@f2+2)& (0+255),w,b
  4817  003E70  0100               	movlb	0	; () banked
  4818  003E72  237A               	addwfc	(___flmul@f3_as_product+2)& (0+255),f,b
  4819  003E74  0100               	movlb	0	; () banked
  4820  003E76  5176               	movf	(___flmul@f2+3)& (0+255),w,b
  4821  003E78  0100               	movlb	0	; () banked
  4822  003E7A  237B               	addwfc	(___flmul@f3_as_product+3)& (0+255),f,b
  4823  003E7C  D000               	goto	l5453
  4824  003E7E                     l5453:
  4825                           
  4826                           ; BSR set to: 0
  4827  003E7E  0100               	movlb	0	; () banked
  4828  003E80  90D8               	bcf	status,0,c
  4829  003E82  3372               	rrcf	(___flmul@f1+3)& (0+255),f,b
  4830  003E84  3371               	rrcf	(___flmul@f1+2)& (0+255),f,b
  4831  003E86  3370               	rrcf	(___flmul@f1+1)& (0+255),f,b
  4832  003E88  336F               	rrcf	___flmul@f1& (0+255),f,b
  4833                           
  4834                           ; BSR set to: 0
  4835  003E8A  0100               	movlb	0	; () banked
  4836  003E8C  90D8               	bcf	status,0,c
  4837  003E8E  3773               	rlcf	___flmul@f2& (0+255),f,b
  4838  003E90  3774               	rlcf	(___flmul@f2+1)& (0+255),f,b
  4839  003E92  3775               	rlcf	(___flmul@f2+2)& (0+255),f,b
  4840  003E94  3776               	rlcf	(___flmul@f2+3)& (0+255),f,b
  4841                           
  4842                           ; BSR set to: 0
  4843  003E96  0100               	movlb	0	; () banked
  4844  003E98  2F7C               	decfsz	___flmul@cntr& (0+255),f,b
  4845  003E9A  D7DD               	goto	l5449
  4846  003E9C  D000               	goto	l5459
  4847  003E9E                     l5459:
  4848                           
  4849                           ; BSR set to: 0
  4850  003E9E  0E11               	movlw	17
  4851  003EA0  0100               	movlb	0	; () banked
  4852  003EA2  6F7C               	movwf	___flmul@cntr& (0+255),b
  4853  003EA4  D000               	goto	l5461
  4854  003EA6                     l5461:
  4855                           
  4856                           ; BSR set to: 0
  4857  003EA6  0100               	movlb	0	; () banked
  4858  003EA8  A16F               	btfss	___flmul@f1& (0+255),0,b
  4859  003EAA  D011               	goto	l5465
  4860                           
  4861                           ; BSR set to: 0
  4862  003EAC  0100               	movlb	0	; () banked
  4863  003EAE  5173               	movf	___flmul@f2& (0+255),w,b
  4864  003EB0  0100               	movlb	0	; () banked
  4865  003EB2  2778               	addwf	___flmul@f3_as_product& (0+255),f,b
  4866  003EB4  0100               	movlb	0	; () banked
  4867  003EB6  5174               	movf	(___flmul@f2+1)& (0+255),w,b
  4868  003EB8  0100               	movlb	0	; () banked
  4869  003EBA  2379               	addwfc	(___flmul@f3_as_product+1)& (0+255),f,b
  4870  003EBC  0100               	movlb	0	; () banked
  4871  003EBE  5175               	movf	(___flmul@f2+2)& (0+255),w,b
  4872  003EC0  0100               	movlb	0	; () banked
  4873  003EC2  237A               	addwfc	(___flmul@f3_as_product+2)& (0+255),f,b
  4874  003EC4  0100               	movlb	0	; () banked
  4875  003EC6  5176               	movf	(___flmul@f2+3)& (0+255),w,b
  4876  003EC8  0100               	movlb	0	; () banked
  4877  003ECA  237B               	addwfc	(___flmul@f3_as_product+3)& (0+255),f,b
  4878  003ECC  D000               	goto	l5465
  4879  003ECE                     l5465:
  4880                           
  4881                           ; BSR set to: 0
  4882  003ECE  0100               	movlb	0	; () banked
  4883  003ED0  90D8               	bcf	status,0,c
  4884  003ED2  3372               	rrcf	(___flmul@f1+3)& (0+255),f,b
  4885  003ED4  3371               	rrcf	(___flmul@f1+2)& (0+255),f,b
  4886  003ED6  3370               	rrcf	(___flmul@f1+1)& (0+255),f,b
  4887  003ED8  336F               	rrcf	___flmul@f1& (0+255),f,b
  4888                           
  4889                           ; BSR set to: 0
  4890  003EDA  0100               	movlb	0	; () banked
  4891  003EDC  90D8               	bcf	status,0,c
  4892  003EDE  337B               	rrcf	(___flmul@f3_as_product+3)& (0+255),f,b
  4893  003EE0  337A               	rrcf	(___flmul@f3_as_product+2)& (0+255),f,b
  4894  003EE2  3379               	rrcf	(___flmul@f3_as_product+1)& (0+255),f,b
  4895  003EE4  3378               	rrcf	___flmul@f3_as_product& (0+255),f,b
  4896                           
  4897                           ; BSR set to: 0
  4898  003EE6  0100               	movlb	0	; () banked
  4899  003EE8  2F7C               	decfsz	___flmul@cntr& (0+255),f,b
  4900  003EEA  D7DD               	goto	l5461
  4901  003EEC  D000               	goto	l5471
  4902  003EEE                     l5471:
  4903                           
  4904                           ; BSR set to: 0
  4905  003EEE  C078  F060         	movff	___flmul@f3_as_product,___flpack@arg
  4906  003EF2  C079  F061         	movff	___flmul@f3_as_product+1,___flpack@arg+1
  4907  003EF6  C07A  F062         	movff	___flmul@f3_as_product+2,___flpack@arg+2
  4908  003EFA  C07B  F063         	movff	___flmul@f3_as_product+3,___flpack@arg+3
  4909  003EFE  C077  F064         	movff	___flmul@exp,___flpack@exp
  4910  003F02  C07D  F065         	movff	___flmul@sign,___flpack@sign
  4911  003F06  EC5E  F01D         	call	___flpack	;wreg free
  4912  003F0A  C060  F06F         	movff	?___flpack,?___flmul
  4913  003F0E  C061  F070         	movff	?___flpack+1,?___flmul+1
  4914  003F12  C062  F071         	movff	?___flpack+2,?___flmul+2
  4915  003F16  C063  F072         	movff	?___flpack+3,?___flmul+3
  4916  003F1A  0012               	return	
  4917  003F1C  0012               	return		;funcret
  4918  003F1E                     __end_of___flmul:
  4919                           	opt stack 0
  4920                           tblptru	equ	0xFF8
  4921                           tblptrh	equ	0xFF7
  4922                           tblptrl	equ	0xFF6
  4923                           tablat	equ	0xFF5
  4924                           postinc0	equ	0xFEE
  4925                           wreg	equ	0xFE8
  4926                           postinc2	equ	0xFDE
  4927                           postdec2	equ	0xFDD
  4928                           fsr2h	equ	0xFDA
  4929                           fsr2l	equ	0xFD9
  4930                           status	equ	0xFD8
  4931                           
  4932 ;; *************** function ___flsub *****************
  4933 ;; Defined at:
  4934 ;;		line 20 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\flsub.c"
  4935 ;; Parameters:    Size  Location     Type
  4936 ;;  f1              4   42[BANK0 ] unsigned char 
  4937 ;;  f2              4   46[BANK0 ] unsigned char 
  4938 ;; Auto vars:     Size  Location     Type
  4939 ;;		None
  4940 ;; Return value:  Size  Location     Type
  4941 ;;                  4   42[BANK0 ] unsigned char 
  4942 ;; Registers used:
  4943 ;;		wreg, status,2, status,0, cstack
  4944 ;; Tracked objects:
  4945 ;;		On entry : 0/0
  4946 ;;		On exit  : 0/0
  4947 ;;		Unchanged: 0/0
  4948 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4949 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4950 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4951 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4952 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4953 ;;Total ram usage:        8 bytes
  4954 ;; Hardware stack levels used:    1
  4955 ;; Hardware stack levels required when called:    4
  4956 ;; This function calls:
  4957 ;;		___fladd
  4958 ;; This function is called by:
  4959 ;;		_exp
  4960 ;; This function uses a non-reentrant model
  4961 ;;
  4962                           
  4963                           	psect	text14
  4964  004AEA                     __ptext14:
  4965                           	opt stack 0
  4966  004AEA                     ___flsub:
  4967                           	opt stack 23
  4968                           
  4969                           ;incstack = 0
  4970  004AEA  0100               	movlb	0	; () banked
  4971  004AEC  518E               	movf	___flsub@f2& (0+255),w,b
  4972  004AEE  0100               	movlb	0	; () banked
  4973  004AF0  118F               	iorwf	(___flsub@f2+1)& (0+255),w,b
  4974  004AF2  0100               	movlb	0	; () banked
  4975  004AF4  1190               	iorwf	(___flsub@f2+2)& (0+255),w,b
  4976  004AF6  0100               	movlb	0	; () banked
  4977  004AF8  1191               	iorwf	(___flsub@f2+3)& (0+255),w,b
  4978  004AFA  B4D8               	btfsc	status,2,c
  4979  004AFC  D00A               	goto	l5597
  4980                           
  4981                           ; BSR set to: 0
  4982  004AFE  0E00               	movlw	0
  4983  004B00  0100               	movlb	0	; () banked
  4984  004B02  1B8E               	xorwf	___flsub@f2& (0+255),f,b
  4985  004B04  0E00               	movlw	0
  4986  004B06  1B8F               	xorwf	(___flsub@f2+1)& (0+255),f,b
  4987  004B08  0E00               	movlw	0
  4988  004B0A  1B90               	xorwf	(___flsub@f2+2)& (0+255),f,b
  4989  004B0C  0E80               	movlw	128
  4990  004B0E  1B91               	xorwf	(___flsub@f2+3)& (0+255),f,b
  4991  004B10  D000               	goto	l5597
  4992  004B12                     l5597:
  4993                           
  4994                           ; BSR set to: 0
  4995  004B12  C08A  F07E         	movff	___flsub@f1,___fladd@f1
  4996  004B16  C08B  F07F         	movff	___flsub@f1+1,___fladd@f1+1
  4997  004B1A  C08C  F080         	movff	___flsub@f1+2,___fladd@f1+2
  4998  004B1E  C08D  F081         	movff	___flsub@f1+3,___fladd@f1+3
  4999  004B22  C08E  F082         	movff	___flsub@f2,___fladd@f2
  5000  004B26  C08F  F083         	movff	___flsub@f2+1,___fladd@f2+1
  5001  004B2A  C090  F084         	movff	___flsub@f2+2,___fladd@f2+2
  5002  004B2E  C091  F085         	movff	___flsub@f2+3,___fladd@f2+3
  5003  004B32  EC41  F01A         	call	___fladd	;wreg free
  5004  004B36  C07E  F08A         	movff	?___fladd,?___flsub
  5005  004B3A  C07F  F08B         	movff	?___fladd+1,?___flsub+1
  5006  004B3E  C080  F08C         	movff	?___fladd+2,?___flsub+2
  5007  004B42  C081  F08D         	movff	?___fladd+3,?___flsub+3
  5008  004B46  0012               	return	
  5009  004B48  0012               	return		;funcret
  5010  004B4A                     __end_of___flsub:
  5011                           	opt stack 0
  5012                           tblptru	equ	0xFF8
  5013                           tblptrh	equ	0xFF7
  5014                           tblptrl	equ	0xFF6
  5015                           tablat	equ	0xFF5
  5016                           postinc0	equ	0xFEE
  5017                           wreg	equ	0xFE8
  5018                           postinc2	equ	0xFDE
  5019                           postdec2	equ	0xFDD
  5020                           fsr2h	equ	0xFDA
  5021                           fsr2l	equ	0xFD9
  5022                           status	equ	0xFD8
  5023                           
  5024 ;; *************** function ___fladd *****************
  5025 ;; Defined at:
  5026 ;;		line 88 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\fladd.c"
  5027 ;; Parameters:    Size  Location     Type
  5028 ;;  f1              4   30[BANK0 ] unsigned char 
  5029 ;;  f2              4   34[BANK0 ] unsigned char 
  5030 ;; Auto vars:     Size  Location     Type
  5031 ;;  exp1            1   41[BANK0 ] unsigned char 
  5032 ;;  exp2            1   40[BANK0 ] unsigned char 
  5033 ;;  sign            1   39[BANK0 ] unsigned char 
  5034 ;; Return value:  Size  Location     Type
  5035 ;;                  4   30[BANK0 ] unsigned char 
  5036 ;; Registers used:
  5037 ;;		wreg, status,2, status,0, cstack
  5038 ;; Tracked objects:
  5039 ;;		On entry : 0/0
  5040 ;;		On exit  : 0/0
  5041 ;;		Unchanged: 0/0
  5042 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5043 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5044 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5045 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5046 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5047 ;;Total ram usage:       12 bytes
  5048 ;; Hardware stack levels used:    1
  5049 ;; Hardware stack levels required when called:    3
  5050 ;; This function calls:
  5051 ;;		___flpack
  5052 ;; This function is called by:
  5053 ;;		_rampe
  5054 ;;		___flsub
  5055 ;;		_floor
  5056 ;;		_log
  5057 ;;		_eval_poly
  5058 ;; This function uses a non-reentrant model
  5059 ;;
  5060                           
  5061                           	psect	text15
  5062  003482                     __ptext15:
  5063                           	opt stack 0
  5064  003482                     ___fladd:
  5065                           	opt stack 23
  5066                           
  5067                           ;incstack = 0
  5068  003482  0100               	movlb	0	; () banked
  5069  003484  3580               	rlcf	(___fladd@f1+2)& (0+255),w,b
  5070  003486  3581               	rlcf	(___fladd@f1+3)& (0+255),w,b
  5071  003488  0100               	movlb	0	; () banked
  5072  00348A  6F89               	movwf	___fladd@exp1& (0+255),b
  5073  00348C  0100               	movlb	0	; () banked
  5074  00348E  3584               	rlcf	(___fladd@f2+2)& (0+255),w,b
  5075  003490  3585               	rlcf	(___fladd@f2+3)& (0+255),w,b
  5076  003492  0100               	movlb	0	; () banked
  5077  003494  6F88               	movwf	___fladd@exp2& (0+255),b
  5078  003496  0100               	movlb	0	; () banked
  5079  003498  5189               	movf	___fladd@exp1& (0+255),w,b
  5080  00349A  0100               	movlb	0	; () banked
  5081  00349C  B4D8               	btfsc	status,2,c
  5082  00349E  D011               	goto	l1057
  5083                           
  5084                           ; BSR set to: 0
  5085  0034A0  0100               	movlb	0	; () banked
  5086  0034A2  5188               	movf	___fladd@exp2& (0+255),w,b
  5087  0034A4  0100               	movlb	0	; () banked
  5088  0034A6  5D89               	subwf	___fladd@exp1& (0+255),w,b
  5089  0034A8  B0D8               	btfsc	status,0,c
  5090  0034AA  D014               	goto	l5363
  5091                           
  5092                           ; BSR set to: 0
  5093  0034AC  0100               	movlb	0	; () banked
  5094  0034AE  5189               	movf	___fladd@exp1& (0+255),w,b
  5095  0034B0  0800               	sublw	0
  5096  0034B2  0100               	movlb	0	; () banked
  5097  0034B4  2588               	addwf	___fladd@exp2& (0+255),w,b
  5098  0034B6  0100               	movlb	0	; () banked
  5099  0034B8  6F86               	movwf	??___fladd& (0+255),b
  5100  0034BA  0E20               	movlw	32
  5101  0034BC  0100               	movlb	0	; () banked
  5102  0034BE  6586               	cpfsgt	??___fladd& (0+255),b
  5103  0034C0  D009               	goto	l5363
  5104  0034C2                     l1057:
  5105                           
  5106                           ; BSR set to: 0
  5107  0034C2  C082  F07E         	movff	___fladd@f2,?___fladd
  5108  0034C6  C083  F07F         	movff	___fladd@f2+1,?___fladd+1
  5109  0034CA  C084  F080         	movff	___fladd@f2+2,?___fladd+2
  5110  0034CE  C085  F081         	movff	___fladd@f2+3,?___fladd+3
  5111  0034D2  0012               	return	
  5112  0034D4                     l5363:
  5113                           
  5114                           ; BSR set to: 0
  5115  0034D4  0100               	movlb	0	; () banked
  5116  0034D6  5188               	movf	___fladd@exp2& (0+255),w,b
  5117  0034D8  0100               	movlb	0	; () banked
  5118  0034DA  B4D8               	btfsc	status,2,c
  5119  0034DC  D011               	goto	l1061
  5120                           
  5121                           ; BSR set to: 0
  5122  0034DE  0100               	movlb	0	; () banked
  5123  0034E0  5189               	movf	___fladd@exp1& (0+255),w,b
  5124  0034E2  0100               	movlb	0	; () banked
  5125  0034E4  5D88               	subwf	___fladd@exp2& (0+255),w,b
  5126  0034E6  B0D8               	btfsc	status,0,c
  5127  0034E8  D014               	goto	l5369
  5128                           
  5129                           ; BSR set to: 0
  5130  0034EA  0100               	movlb	0	; () banked
  5131  0034EC  5188               	movf	___fladd@exp2& (0+255),w,b
  5132  0034EE  0800               	sublw	0
  5133  0034F0  0100               	movlb	0	; () banked
  5134  0034F2  2589               	addwf	___fladd@exp1& (0+255),w,b
  5135  0034F4  0100               	movlb	0	; () banked
  5136  0034F6  6F86               	movwf	??___fladd& (0+255),b
  5137  0034F8  0E20               	movlw	32
  5138  0034FA  0100               	movlb	0	; () banked
  5139  0034FC  6586               	cpfsgt	??___fladd& (0+255),b
  5140  0034FE  D009               	goto	l5369
  5141  003500                     l1061:
  5142                           
  5143                           ; BSR set to: 0
  5144  003500  C07E  F07E         	movff	___fladd@f1,?___fladd
  5145  003504  C07F  F07F         	movff	___fladd@f1+1,?___fladd+1
  5146  003508  C080  F080         	movff	___fladd@f1+2,?___fladd+2
  5147  00350C  C081  F081         	movff	___fladd@f1+3,?___fladd+3
  5148  003510  0012               	return	
  5149  003512                     l5369:
  5150                           
  5151                           ; BSR set to: 0
  5152  003512  0E06               	movlw	6
  5153  003514  0100               	movlb	0	; () banked
  5154  003516  6F87               	movwf	___fladd@sign& (0+255),b
  5155                           
  5156                           ; BSR set to: 0
  5157  003518  0100               	movlb	0	; () banked
  5158  00351A  AF81               	btfss	(___fladd@f1+3)& (0+255),7,b
  5159  00351C  D003               	goto	l5375
  5160                           
  5161                           ; BSR set to: 0
  5162  00351E  0100               	movlb	0	; () banked
  5163  003520  8F87               	bsf	___fladd@sign& (0+255),7,b
  5164  003522  D000               	goto	l5375
  5165  003524                     l5375:
  5166                           
  5167                           ; BSR set to: 0
  5168  003524  0100               	movlb	0	; () banked
  5169  003526  AF85               	btfss	(___fladd@f2+3)& (0+255),7,b
  5170  003528  D002               	goto	l1063
  5171                           
  5172                           ; BSR set to: 0
  5173  00352A  0100               	movlb	0	; () banked
  5174  00352C  8D87               	bsf	___fladd@sign& (0+255),6,b
  5175  00352E                     l1063:
  5176                           
  5177                           ; BSR set to: 0
  5178  00352E  0100               	movlb	0	; () banked
  5179  003530  8F80               	bsf	(___fladd@f1+2)& (0+255),7,b
  5180                           
  5181                           ; BSR set to: 0
  5182  003532  0EFF               	movlw	255
  5183  003534  0100               	movlb	0	; () banked
  5184  003536  177E               	andwf	___fladd@f1& (0+255),f,b
  5185  003538  0EFF               	movlw	255
  5186  00353A  177F               	andwf	(___fladd@f1+1)& (0+255),f,b
  5187  00353C  0EFF               	movlw	255
  5188  00353E  1780               	andwf	(___fladd@f1+2)& (0+255),f,b
  5189  003540  0E00               	movlw	0
  5190  003542  1781               	andwf	(___fladd@f1+3)& (0+255),f,b
  5191                           
  5192                           ; BSR set to: 0
  5193  003544  0100               	movlb	0	; () banked
  5194  003546  8F84               	bsf	(___fladd@f2+2)& (0+255),7,b
  5195  003548  0EFF               	movlw	255
  5196  00354A  0100               	movlb	0	; () banked
  5197  00354C  1782               	andwf	___fladd@f2& (0+255),f,b
  5198  00354E  0EFF               	movlw	255
  5199  003550  1783               	andwf	(___fladd@f2+1)& (0+255),f,b
  5200  003552  0EFF               	movlw	255
  5201  003554  1784               	andwf	(___fladd@f2+2)& (0+255),f,b
  5202  003556  0E00               	movlw	0
  5203  003558  1785               	andwf	(___fladd@f2+3)& (0+255),f,b
  5204  00355A  0100               	movlb	0	; () banked
  5205  00355C  5188               	movf	___fladd@exp2& (0+255),w,b
  5206  00355E  0100               	movlb	0	; () banked
  5207  003560  5D89               	subwf	___fladd@exp1& (0+255),w,b
  5208  003562  B0D8               	btfsc	status,0,c
  5209  003564  D02A               	goto	l5393
  5210  003566                     l5383:
  5211                           
  5212                           ; BSR set to: 0
  5213  003566  0100               	movlb	0	; () banked
  5214  003568  90D8               	bcf	status,0,c
  5215  00356A  3782               	rlcf	___fladd@f2& (0+255),f,b
  5216  00356C  3783               	rlcf	(___fladd@f2+1)& (0+255),f,b
  5217  00356E  3784               	rlcf	(___fladd@f2+2)& (0+255),f,b
  5218  003570  3785               	rlcf	(___fladd@f2+3)& (0+255),f,b
  5219  003572  0100               	movlb	0	; () banked
  5220  003574  0788               	decf	___fladd@exp2& (0+255),f,b
  5221                           
  5222                           ; BSR set to: 0
  5223  003576  0100               	movlb	0	; () banked
  5224  003578  5189               	movf	___fladd@exp1& (0+255),w,b
  5225  00357A  0100               	movlb	0	; () banked
  5226  00357C  1988               	xorwf	___fladd@exp2& (0+255),w,b
  5227  00357E  B4D8               	btfsc	status,2,c
  5228  003580  D014               	goto	l5391
  5229                           
  5230                           ; BSR set to: 0
  5231  003582  0100               	movlb	0	; () banked
  5232  003584  0787               	decf	___fladd@sign& (0+255),f,b
  5233  003586  C087  F086         	movff	___fladd@sign,??___fladd
  5234  00358A  0E07               	movlw	7
  5235  00358C  0100               	movlb	0	; () banked
  5236  00358E  1786               	andwf	??___fladd& (0+255),f,b
  5237  003590  B4D8               	btfsc	status,2,c
  5238  003592  D00B               	goto	l5391
  5239  003594  D7E8               	goto	l5383
  5240                           
  5241                           ; BSR set to: 0
  5242                           
  5243                           ; BSR set to: 0
  5244  003596  D009               	goto	l5391
  5245  003598                     l5389:
  5246                           
  5247                           ; BSR set to: 0
  5248  003598  0100               	movlb	0	; () banked
  5249  00359A  90D8               	bcf	status,0,c
  5250  00359C  3381               	rrcf	(___fladd@f1+3)& (0+255),f,b
  5251  00359E  3380               	rrcf	(___fladd@f1+2)& (0+255),f,b
  5252  0035A0  337F               	rrcf	(___fladd@f1+1)& (0+255),f,b
  5253  0035A2  337E               	rrcf	___fladd@f1& (0+255),f,b
  5254  0035A4  0100               	movlb	0	; () banked
  5255  0035A6  2B89               	incf	___fladd@exp1& (0+255),f,b
  5256  0035A8  D000               	goto	l5391
  5257  0035AA                     l5391:
  5258                           
  5259                           ; BSR set to: 0
  5260  0035AA  0100               	movlb	0	; () banked
  5261  0035AC  5188               	movf	___fladd@exp2& (0+255),w,b
  5262  0035AE  0100               	movlb	0	; () banked
  5263  0035B0  1989               	xorwf	___fladd@exp1& (0+255),w,b
  5264  0035B2  B4D8               	btfsc	status,2,c
  5265  0035B4  D032               	goto	l1072
  5266  0035B6  D7F0               	goto	l5389
  5267                           
  5268                           ; BSR set to: 0
  5269  0035B8  D030               	goto	l1072
  5270  0035BA                     l5393:
  5271                           
  5272                           ; BSR set to: 0
  5273  0035BA  0100               	movlb	0	; () banked
  5274  0035BC  5189               	movf	___fladd@exp1& (0+255),w,b
  5275  0035BE  0100               	movlb	0	; () banked
  5276  0035C0  5D88               	subwf	___fladd@exp2& (0+255),w,b
  5277  0035C2  B0D8               	btfsc	status,0,c
  5278  0035C4  D02A               	goto	l1072
  5279  0035C6                     l5395:
  5280                           
  5281                           ; BSR set to: 0
  5282  0035C6  0100               	movlb	0	; () banked
  5283  0035C8  90D8               	bcf	status,0,c
  5284  0035CA  377E               	rlcf	___fladd@f1& (0+255),f,b
  5285  0035CC  377F               	rlcf	(___fladd@f1+1)& (0+255),f,b
  5286  0035CE  3780               	rlcf	(___fladd@f1+2)& (0+255),f,b
  5287  0035D0  3781               	rlcf	(___fladd@f1+3)& (0+255),f,b
  5288  0035D2  0100               	movlb	0	; () banked
  5289  0035D4  0789               	decf	___fladd@exp1& (0+255),f,b
  5290                           
  5291                           ; BSR set to: 0
  5292  0035D6  0100               	movlb	0	; () banked
  5293  0035D8  5189               	movf	___fladd@exp1& (0+255),w,b
  5294  0035DA  0100               	movlb	0	; () banked
  5295  0035DC  1988               	xorwf	___fladd@exp2& (0+255),w,b
  5296  0035DE  B4D8               	btfsc	status,2,c
  5297  0035E0  D014               	goto	l5403
  5298                           
  5299                           ; BSR set to: 0
  5300  0035E2  0100               	movlb	0	; () banked
  5301  0035E4  0787               	decf	___fladd@sign& (0+255),f,b
  5302  0035E6  C087  F086         	movff	___fladd@sign,??___fladd
  5303  0035EA  0E07               	movlw	7
  5304  0035EC  0100               	movlb	0	; () banked
  5305  0035EE  1786               	andwf	??___fladd& (0+255),f,b
  5306  0035F0  B4D8               	btfsc	status,2,c
  5307  0035F2  D00B               	goto	l5403
  5308  0035F4  D7E8               	goto	l5395
  5309                           
  5310                           ; BSR set to: 0
  5311                           
  5312                           ; BSR set to: 0
  5313  0035F6  D009               	goto	l5403
  5314  0035F8                     l5401:
  5315                           
  5316                           ; BSR set to: 0
  5317  0035F8  0100               	movlb	0	; () banked
  5318  0035FA  90D8               	bcf	status,0,c
  5319  0035FC  3385               	rrcf	(___fladd@f2+3)& (0+255),f,b
  5320  0035FE  3384               	rrcf	(___fladd@f2+2)& (0+255),f,b
  5321  003600  3383               	rrcf	(___fladd@f2+1)& (0+255),f,b
  5322  003602  3382               	rrcf	___fladd@f2& (0+255),f,b
  5323  003604  0100               	movlb	0	; () banked
  5324  003606  2B88               	incf	___fladd@exp2& (0+255),f,b
  5325  003608  D000               	goto	l5403
  5326  00360A                     l5403:
  5327                           
  5328                           ; BSR set to: 0
  5329  00360A  0100               	movlb	0	; () banked
  5330  00360C  5188               	movf	___fladd@exp2& (0+255),w,b
  5331  00360E  0100               	movlb	0	; () banked
  5332  003610  1989               	xorwf	___fladd@exp1& (0+255),w,b
  5333  003612  B4D8               	btfsc	status,2,c
  5334  003614  D002               	goto	l1072
  5335  003616  D7F0               	goto	l5401
  5336                           
  5337                           ; BSR set to: 0
  5338  003618  D000               	goto	l1072
  5339  00361A                     l1072:
  5340                           
  5341                           ; BSR set to: 0
  5342  00361A  0100               	movlb	0	; () banked
  5343  00361C  AF87               	btfss	___fladd@sign& (0+255),7,b
  5344  00361E  D011               	goto	l5407
  5345                           
  5346                           ; BSR set to: 0
  5347  003620  0EFF               	movlw	255
  5348  003622  0100               	movlb	0	; () banked
  5349  003624  1B7E               	xorwf	___fladd@f1& (0+255),f,b
  5350  003626  0EFF               	movlw	255
  5351  003628  1B7F               	xorwf	(___fladd@f1+1)& (0+255),f,b
  5352  00362A  0EFF               	movlw	255
  5353  00362C  1B80               	xorwf	(___fladd@f1+2)& (0+255),f,b
  5354  00362E  0EFF               	movlw	255
  5355  003630  1B81               	xorwf	(___fladd@f1+3)& (0+255),f,b
  5356  003632  0E01               	movlw	1
  5357  003634  0100               	movlb	0	; () banked
  5358  003636  277E               	addwf	___fladd@f1& (0+255),f,b
  5359  003638  0E00               	movlw	0
  5360  00363A  237F               	addwfc	(___fladd@f1+1)& (0+255),f,b
  5361  00363C  2380               	addwfc	(___fladd@f1+2)& (0+255),f,b
  5362  00363E  2381               	addwfc	(___fladd@f1+3)& (0+255),f,b
  5363  003640  D000               	goto	l5407
  5364  003642                     l5407:
  5365                           
  5366                           ; BSR set to: 0
  5367  003642  0100               	movlb	0	; () banked
  5368  003644  AD87               	btfss	___fladd@sign& (0+255),6,b
  5369  003646  D011               	goto	l5411
  5370                           
  5371                           ; BSR set to: 0
  5372  003648  0EFF               	movlw	255
  5373  00364A  0100               	movlb	0	; () banked
  5374  00364C  1B82               	xorwf	___fladd@f2& (0+255),f,b
  5375  00364E  0EFF               	movlw	255
  5376  003650  1B83               	xorwf	(___fladd@f2+1)& (0+255),f,b
  5377  003652  0EFF               	movlw	255
  5378  003654  1B84               	xorwf	(___fladd@f2+2)& (0+255),f,b
  5379  003656  0EFF               	movlw	255
  5380  003658  1B85               	xorwf	(___fladd@f2+3)& (0+255),f,b
  5381  00365A  0E01               	movlw	1
  5382  00365C  0100               	movlb	0	; () banked
  5383  00365E  2782               	addwf	___fladd@f2& (0+255),f,b
  5384  003660  0E00               	movlw	0
  5385  003662  2383               	addwfc	(___fladd@f2+1)& (0+255),f,b
  5386  003664  2384               	addwfc	(___fladd@f2+2)& (0+255),f,b
  5387  003666  2385               	addwfc	(___fladd@f2+3)& (0+255),f,b
  5388  003668  D000               	goto	l5411
  5389  00366A                     l5411:
  5390                           
  5391                           ; BSR set to: 0
  5392  00366A  0E00               	movlw	0
  5393  00366C  0100               	movlb	0	; () banked
  5394  00366E  6F87               	movwf	___fladd@sign& (0+255),b
  5395                           
  5396                           ; BSR set to: 0
  5397  003670  0100               	movlb	0	; () banked
  5398  003672  517E               	movf	___fladd@f1& (0+255),w,b
  5399  003674  0100               	movlb	0	; () banked
  5400  003676  2782               	addwf	___fladd@f2& (0+255),f,b
  5401  003678  0100               	movlb	0	; () banked
  5402  00367A  517F               	movf	(___fladd@f1+1)& (0+255),w,b
  5403  00367C  0100               	movlb	0	; () banked
  5404  00367E  2383               	addwfc	(___fladd@f2+1)& (0+255),f,b
  5405  003680  0100               	movlb	0	; () banked
  5406  003682  5180               	movf	(___fladd@f1+2)& (0+255),w,b
  5407  003684  0100               	movlb	0	; () banked
  5408  003686  2384               	addwfc	(___fladd@f2+2)& (0+255),f,b
  5409  003688  0100               	movlb	0	; () banked
  5410  00368A  5181               	movf	(___fladd@f1+3)& (0+255),w,b
  5411  00368C  0100               	movlb	0	; () banked
  5412  00368E  2385               	addwfc	(___fladd@f2+3)& (0+255),f,b
  5413                           
  5414                           ; BSR set to: 0
  5415  003690  0100               	movlb	0	; () banked
  5416  003692  AF85               	btfss	(___fladd@f2+3)& (0+255),7,b
  5417  003694  D014               	goto	l5421
  5418                           
  5419                           ; BSR set to: 0
  5420  003696  0EFF               	movlw	255
  5421  003698  0100               	movlb	0	; () banked
  5422  00369A  1B82               	xorwf	___fladd@f2& (0+255),f,b
  5423  00369C  0EFF               	movlw	255
  5424  00369E  1B83               	xorwf	(___fladd@f2+1)& (0+255),f,b
  5425  0036A0  0EFF               	movlw	255
  5426  0036A2  1B84               	xorwf	(___fladd@f2+2)& (0+255),f,b
  5427  0036A4  0EFF               	movlw	255
  5428  0036A6  1B85               	xorwf	(___fladd@f2+3)& (0+255),f,b
  5429  0036A8  0E01               	movlw	1
  5430  0036AA  0100               	movlb	0	; () banked
  5431  0036AC  2782               	addwf	___fladd@f2& (0+255),f,b
  5432  0036AE  0E00               	movlw	0
  5433  0036B0  2383               	addwfc	(___fladd@f2+1)& (0+255),f,b
  5434  0036B2  2384               	addwfc	(___fladd@f2+2)& (0+255),f,b
  5435  0036B4  2385               	addwfc	(___fladd@f2+3)& (0+255),f,b
  5436                           
  5437                           ; BSR set to: 0
  5438  0036B6  0E01               	movlw	1
  5439  0036B8  0100               	movlb	0	; () banked
  5440  0036BA  6F87               	movwf	___fladd@sign& (0+255),b
  5441  0036BC  D000               	goto	l5421
  5442  0036BE                     l5421:
  5443                           
  5444                           ; BSR set to: 0
  5445  0036BE  C082  F060         	movff	___fladd@f2,___flpack@arg
  5446  0036C2  C083  F061         	movff	___fladd@f2+1,___flpack@arg+1
  5447  0036C6  C084  F062         	movff	___fladd@f2+2,___flpack@arg+2
  5448  0036CA  C085  F063         	movff	___fladd@f2+3,___flpack@arg+3
  5449  0036CE  C089  F064         	movff	___fladd@exp1,___flpack@exp
  5450  0036D2  C087  F065         	movff	___fladd@sign,___flpack@sign
  5451  0036D6  EC5E  F01D         	call	___flpack	;wreg free
  5452  0036DA  C060  F07E         	movff	?___flpack,?___fladd
  5453  0036DE  C061  F07F         	movff	?___flpack+1,?___fladd+1
  5454  0036E2  C062  F080         	movff	?___flpack+2,?___fladd+2
  5455  0036E6  C063  F081         	movff	?___flpack+3,?___fladd+3
  5456  0036EA  0012               	return	
  5457  0036EC  0012               	return		;funcret
  5458  0036EE                     __end_of___fladd:
  5459                           	opt stack 0
  5460                           tblptru	equ	0xFF8
  5461                           tblptrh	equ	0xFF7
  5462                           tblptrl	equ	0xFF6
  5463                           tablat	equ	0xFF5
  5464                           postinc0	equ	0xFEE
  5465                           wreg	equ	0xFE8
  5466                           postinc2	equ	0xFDE
  5467                           postdec2	equ	0xFDD
  5468                           fsr2h	equ	0xFDA
  5469                           fsr2l	equ	0xFD9
  5470                           status	equ	0xFD8
  5471                           
  5472 ;; *************** function ___flneg *****************
  5473 ;; Defined at:
  5474 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\flneg.c"
  5475 ;; Parameters:    Size  Location     Type
  5476 ;;  f1              4    0[BANK0 ] unsigned char 
  5477 ;; Auto vars:     Size  Location     Type
  5478 ;;		None
  5479 ;; Return value:  Size  Location     Type
  5480 ;;                  4    0[BANK0 ] unsigned char 
  5481 ;; Registers used:
  5482 ;;		wreg, status,2, status,0
  5483 ;; Tracked objects:
  5484 ;;		On entry : 0/0
  5485 ;;		On exit  : 0/0
  5486 ;;		Unchanged: 0/0
  5487 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5488 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5489 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5490 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5491 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5492 ;;Total ram usage:        4 bytes
  5493 ;; Hardware stack levels used:    1
  5494 ;; Hardware stack levels required when called:    2
  5495 ;; This function calls:
  5496 ;;		Nothing
  5497 ;; This function is called by:
  5498 ;;		_pow
  5499 ;;		_exp
  5500 ;; This function uses a non-reentrant model
  5501 ;;
  5502                           
  5503                           	psect	text16
  5504  004D30                     __ptext16:
  5505                           	opt stack 0
  5506  004D30                     ___flneg:
  5507                           	opt stack 25
  5508                           
  5509                           ;incstack = 0
  5510  004D30  0100               	movlb	0	; () banked
  5511  004D32  5160               	movf	___flneg@f1& (0+255),w,b
  5512  004D34  0100               	movlb	0	; () banked
  5513  004D36  1161               	iorwf	(___flneg@f1+1)& (0+255),w,b
  5514  004D38  0100               	movlb	0	; () banked
  5515  004D3A  1162               	iorwf	(___flneg@f1+2)& (0+255),w,b
  5516  004D3C  0100               	movlb	0	; () banked
  5517  004D3E  1163               	iorwf	(___flneg@f1+3)& (0+255),w,b
  5518  004D40  B4D8               	btfsc	status,2,c
  5519  004D42  D00A               	goto	l5615
  5520                           
  5521                           ; BSR set to: 0
  5522  004D44  0E00               	movlw	0
  5523  004D46  0100               	movlb	0	; () banked
  5524  004D48  1B60               	xorwf	___flneg@f1& (0+255),f,b
  5525  004D4A  0E00               	movlw	0
  5526  004D4C  1B61               	xorwf	(___flneg@f1+1)& (0+255),f,b
  5527  004D4E  0E00               	movlw	0
  5528  004D50  1B62               	xorwf	(___flneg@f1+2)& (0+255),f,b
  5529  004D52  0E80               	movlw	128
  5530  004D54  1B63               	xorwf	(___flneg@f1+3)& (0+255),f,b
  5531  004D56  D000               	goto	l5615
  5532  004D58                     l5615:
  5533                           
  5534                           ; BSR set to: 0
  5535  004D58  C060  F060         	movff	___flneg@f1,?___flneg
  5536  004D5C  C061  F061         	movff	___flneg@f1+1,?___flneg+1
  5537  004D60  C062  F062         	movff	___flneg@f1+2,?___flneg+2
  5538  004D64  C063  F063         	movff	___flneg@f1+3,?___flneg+3
  5539  004D68  0012               	return	
  5540                           
  5541                           ; BSR set to: 0
  5542                           
  5543                           ; BSR set to: 0
  5544  004D6A  0012               	return		;funcret
  5545  004D6C                     __end_of___flneg:
  5546                           	opt stack 0
  5547                           tblptru	equ	0xFF8
  5548                           tblptrh	equ	0xFF7
  5549                           tblptrl	equ	0xFF6
  5550                           tablat	equ	0xFF5
  5551                           postinc0	equ	0xFEE
  5552                           wreg	equ	0xFE8
  5553                           postinc2	equ	0xFDE
  5554                           postdec2	equ	0xFDD
  5555                           fsr2h	equ	0xFDA
  5556                           fsr2l	equ	0xFD9
  5557                           status	equ	0xFD8
  5558                           
  5559 ;; *************** function ___fldiv *****************
  5560 ;; Defined at:
  5561 ;;		line 54 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\fldiv.c"
  5562 ;; Parameters:    Size  Location     Type
  5563 ;;  f1              4   10[BANK0 ] unsigned char 
  5564 ;;  f2              4   14[BANK0 ] unsigned char 
  5565 ;; Auto vars:     Size  Location     Type
  5566 ;;  f3              4   18[BANK0 ] unsigned char 
  5567 ;;  sign            1   24[BANK0 ] unsigned char 
  5568 ;;  exp             1   23[BANK0 ] unsigned char 
  5569 ;;  cntr            1   22[BANK0 ] unsigned char 
  5570 ;; Return value:  Size  Location     Type
  5571 ;;                  4   10[BANK0 ] unsigned char 
  5572 ;; Registers used:
  5573 ;;		wreg, status,2, status,0, cstack
  5574 ;; Tracked objects:
  5575 ;;		On entry : 0/0
  5576 ;;		On exit  : 0/0
  5577 ;;		Unchanged: 0/0
  5578 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5579 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5580 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5581 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5582 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5583 ;;Total ram usage:       15 bytes
  5584 ;; Hardware stack levels used:    1
  5585 ;; Hardware stack levels required when called:    3
  5586 ;; This function calls:
  5587 ;;		___flpack
  5588 ;; This function is called by:
  5589 ;;		_exp
  5590 ;; This function uses a non-reentrant model
  5591 ;;
  5592                           
  5593                           	psect	text17
  5594  003F1E                     __ptext17:
  5595                           	opt stack 0
  5596  003F1E                     ___fldiv:
  5597                           	opt stack 24
  5598                           
  5599                           ; BSR set to: 0
  5600                           ;incstack = 0
  5601  003F1E  0100               	movlb	0	; () banked
  5602  003F20  356C               	rlcf	(___fldiv@f1+2)& (0+255),w,b
  5603  003F22  356D               	rlcf	(___fldiv@f1+3)& (0+255),w,b
  5604  003F24  0100               	movlb	0	; () banked
  5605  003F26  6F77               	movwf	___fldiv@exp& (0+255),b
  5606  003F28  0100               	movlb	0	; () banked
  5607  003F2A  5177               	movf	___fldiv@exp& (0+255),w,b
  5608  003F2C  A4D8               	btfss	status,2,c
  5609  003F2E  D00A               	goto	l5559
  5610                           
  5611                           ; BSR set to: 0
  5612  003F30  0E00               	movlw	0
  5613  003F32  0100               	movlb	0	; () banked
  5614  003F34  6F6A               	movwf	?___fldiv& (0+255),b
  5615  003F36  0E00               	movlw	0
  5616  003F38  6F6B               	movwf	(?___fldiv+1)& (0+255),b
  5617  003F3A  0E00               	movlw	0
  5618  003F3C  6F6C               	movwf	(?___fldiv+2)& (0+255),b
  5619  003F3E  0E00               	movlw	0
  5620  003F40  6F6D               	movwf	(?___fldiv+3)& (0+255),b
  5621                           
  5622                           ; BSR set to: 0
  5623  003F42  0012               	return	
  5624  003F44                     l5559:
  5625                           
  5626                           ; BSR set to: 0
  5627  003F44  0100               	movlb	0	; () banked
  5628  003F46  3570               	rlcf	(___fldiv@f2+2)& (0+255),w,b
  5629  003F48  3571               	rlcf	(___fldiv@f2+3)& (0+255),w,b
  5630  003F4A  0100               	movlb	0	; () banked
  5631  003F4C  6F78               	movwf	___fldiv@sign& (0+255),b
  5632  003F4E  0100               	movlb	0	; () banked
  5633  003F50  5178               	movf	___fldiv@sign& (0+255),w,b
  5634  003F52  A4D8               	btfss	status,2,c
  5635  003F54  D00A               	goto	l5565
  5636                           
  5637                           ; BSR set to: 0
  5638  003F56  0E00               	movlw	0
  5639  003F58  0100               	movlb	0	; () banked
  5640  003F5A  6F6A               	movwf	?___fldiv& (0+255),b
  5641  003F5C  0E00               	movlw	0
  5642  003F5E  6F6B               	movwf	(?___fldiv+1)& (0+255),b
  5643  003F60  0E00               	movlw	0
  5644  003F62  6F6C               	movwf	(?___fldiv+2)& (0+255),b
  5645  003F64  0E00               	movlw	0
  5646  003F66  6F6D               	movwf	(?___fldiv+3)& (0+255),b
  5647                           
  5648                           ; BSR set to: 0
  5649  003F68  0012               	return	
  5650  003F6A                     l5565:
  5651                           
  5652                           ; BSR set to: 0
  5653  003F6A  0100               	movlb	0	; () banked
  5654  003F6C  5178               	movf	___fldiv@sign& (0+255),w,b
  5655  003F6E  0F89               	addlw	137
  5656  003F70  0100               	movlb	0	; () banked
  5657  003F72  5F77               	subwf	___fldiv@exp& (0+255),f,b
  5658                           
  5659                           ; BSR set to: 0
  5660  003F74  C06D  F078         	movff	___fldiv@f1+3,___fldiv@sign
  5661  003F78  0100               	movlb	0	; () banked
  5662  003F7A  5171               	movf	(___fldiv@f2+3)& (0+255),w,b
  5663  003F7C  0100               	movlb	0	; () banked
  5664  003F7E  1B78               	xorwf	___fldiv@sign& (0+255),f,b
  5665  003F80  0E80               	movlw	128
  5666  003F82  0100               	movlb	0	; () banked
  5667  003F84  1778               	andwf	___fldiv@sign& (0+255),f,b
  5668                           
  5669                           ; BSR set to: 0
  5670  003F86  0100               	movlb	0	; () banked
  5671  003F88  8F6C               	bsf	(___fldiv@f1+2)& (0+255),7,b
  5672                           
  5673                           ; BSR set to: 0
  5674  003F8A  0EFF               	movlw	255
  5675  003F8C  0100               	movlb	0	; () banked
  5676  003F8E  176A               	andwf	___fldiv@f1& (0+255),f,b
  5677  003F90  0EFF               	movlw	255
  5678  003F92  176B               	andwf	(___fldiv@f1+1)& (0+255),f,b
  5679  003F94  0EFF               	movlw	255
  5680  003F96  176C               	andwf	(___fldiv@f1+2)& (0+255),f,b
  5681  003F98  0E00               	movlw	0
  5682  003F9A  176D               	andwf	(___fldiv@f1+3)& (0+255),f,b
  5683  003F9C  0100               	movlb	0	; () banked
  5684  003F9E  8F70               	bsf	(___fldiv@f2+2)& (0+255),7,b
  5685                           
  5686                           ; BSR set to: 0
  5687  003FA0  0EFF               	movlw	255
  5688  003FA2  0100               	movlb	0	; () banked
  5689  003FA4  176E               	andwf	___fldiv@f2& (0+255),f,b
  5690  003FA6  0EFF               	movlw	255
  5691  003FA8  176F               	andwf	(___fldiv@f2+1)& (0+255),f,b
  5692  003FAA  0EFF               	movlw	255
  5693  003FAC  1770               	andwf	(___fldiv@f2+2)& (0+255),f,b
  5694  003FAE  0E00               	movlw	0
  5695  003FB0  1771               	andwf	(___fldiv@f2+3)& (0+255),f,b
  5696                           
  5697                           ; BSR set to: 0
  5698  003FB2  0E20               	movlw	32
  5699  003FB4  0100               	movlb	0	; () banked
  5700  003FB6  6F76               	movwf	___fldiv@cntr& (0+255),b
  5701  003FB8  D000               	goto	l5577
  5702  003FBA                     l5577:
  5703                           
  5704                           ; BSR set to: 0
  5705  003FBA  0100               	movlb	0	; () banked
  5706  003FBC  90D8               	bcf	status,0,c
  5707  003FBE  3772               	rlcf	___fldiv@f3& (0+255),f,b
  5708  003FC0  3773               	rlcf	(___fldiv@f3+1)& (0+255),f,b
  5709  003FC2  3774               	rlcf	(___fldiv@f3+2)& (0+255),f,b
  5710  003FC4  3775               	rlcf	(___fldiv@f3+3)& (0+255),f,b
  5711                           
  5712                           ; BSR set to: 0
  5713  003FC6  0100               	movlb	0	; () banked
  5714  003FC8  516E               	movf	___fldiv@f2& (0+255),w,b
  5715  003FCA  0100               	movlb	0	; () banked
  5716  003FCC  5D6A               	subwf	___fldiv@f1& (0+255),w,b
  5717  003FCE  0100               	movlb	0	; () banked
  5718  003FD0  516F               	movf	(___fldiv@f2+1)& (0+255),w,b
  5719  003FD2  0100               	movlb	0	; () banked
  5720  003FD4  596B               	subwfb	(___fldiv@f1+1)& (0+255),w,b
  5721  003FD6  0100               	movlb	0	; () banked
  5722  003FD8  5170               	movf	(___fldiv@f2+2)& (0+255),w,b
  5723  003FDA  0100               	movlb	0	; () banked
  5724  003FDC  596C               	subwfb	(___fldiv@f1+2)& (0+255),w,b
  5725  003FDE  0100               	movlb	0	; () banked
  5726  003FE0  5171               	movf	(___fldiv@f2+3)& (0+255),w,b
  5727  003FE2  0100               	movlb	0	; () banked
  5728  003FE4  596D               	subwfb	(___fldiv@f1+3)& (0+255),w,b
  5729  003FE6  A0D8               	btfss	status,0,c
  5730  003FE8  D013               	goto	l5585
  5731                           
  5732                           ; BSR set to: 0
  5733  003FEA  0100               	movlb	0	; () banked
  5734  003FEC  516E               	movf	___fldiv@f2& (0+255),w,b
  5735  003FEE  0100               	movlb	0	; () banked
  5736  003FF0  5F6A               	subwf	___fldiv@f1& (0+255),f,b
  5737  003FF2  0100               	movlb	0	; () banked
  5738  003FF4  516F               	movf	(___fldiv@f2+1)& (0+255),w,b
  5739  003FF6  0100               	movlb	0	; () banked
  5740  003FF8  5B6B               	subwfb	(___fldiv@f1+1)& (0+255),f,b
  5741  003FFA  0100               	movlb	0	; () banked
  5742  003FFC  5170               	movf	(___fldiv@f2+2)& (0+255),w,b
  5743  003FFE  0100               	movlb	0	; () banked
  5744  004000  5B6C               	subwfb	(___fldiv@f1+2)& (0+255),f,b
  5745  004002  0100               	movlb	0	; () banked
  5746  004004  5171               	movf	(___fldiv@f2+3)& (0+255),w,b
  5747  004006  0100               	movlb	0	; () banked
  5748  004008  5B6D               	subwfb	(___fldiv@f1+3)& (0+255),f,b
  5749                           
  5750                           ; BSR set to: 0
  5751  00400A  0100               	movlb	0	; () banked
  5752  00400C  8172               	bsf	___fldiv@f3& (0+255),0,b
  5753  00400E  D000               	goto	l5585
  5754  004010                     l5585:
  5755                           
  5756                           ; BSR set to: 0
  5757  004010  0100               	movlb	0	; () banked
  5758  004012  90D8               	bcf	status,0,c
  5759  004014  376A               	rlcf	___fldiv@f1& (0+255),f,b
  5760  004016  376B               	rlcf	(___fldiv@f1+1)& (0+255),f,b
  5761  004018  376C               	rlcf	(___fldiv@f1+2)& (0+255),f,b
  5762  00401A  376D               	rlcf	(___fldiv@f1+3)& (0+255),f,b
  5763                           
  5764                           ; BSR set to: 0
  5765  00401C  0100               	movlb	0	; () banked
  5766  00401E  2F76               	decfsz	___fldiv@cntr& (0+255),f,b
  5767  004020  D7CC               	goto	l5577
  5768  004022  D000               	goto	l5589
  5769  004024                     l5589:
  5770                           
  5771                           ; BSR set to: 0
  5772  004024  C072  F060         	movff	___fldiv@f3,___flpack@arg
  5773  004028  C073  F061         	movff	___fldiv@f3+1,___flpack@arg+1
  5774  00402C  C074  F062         	movff	___fldiv@f3+2,___flpack@arg+2
  5775  004030  C075  F063         	movff	___fldiv@f3+3,___flpack@arg+3
  5776  004034  C077  F064         	movff	___fldiv@exp,___flpack@exp
  5777  004038  C078  F065         	movff	___fldiv@sign,___flpack@sign
  5778  00403C  EC5E  F01D         	call	___flpack	;wreg free
  5779  004040  C060  F06A         	movff	?___flpack,?___fldiv
  5780  004044  C061  F06B         	movff	?___flpack+1,?___fldiv+1
  5781  004048  C062  F06C         	movff	?___flpack+2,?___fldiv+2
  5782  00404C  C063  F06D         	movff	?___flpack+3,?___fldiv+3
  5783  004050  0012               	return	
  5784  004052  0012               	return		;funcret
  5785  004054                     __end_of___fldiv:
  5786                           	opt stack 0
  5787                           tblptru	equ	0xFF8
  5788                           tblptrh	equ	0xFF7
  5789                           tblptrl	equ	0xFF6
  5790                           tablat	equ	0xFF5
  5791                           postinc0	equ	0xFEE
  5792                           wreg	equ	0xFE8
  5793                           postinc2	equ	0xFDE
  5794                           postdec2	equ	0xFDD
  5795                           fsr2h	equ	0xFDA
  5796                           fsr2l	equ	0xFD9
  5797                           status	equ	0xFD8
  5798                           
  5799 ;; *************** function ___awtofl *****************
  5800 ;; Defined at:
  5801 ;;		line 31 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\awtofl.c"
  5802 ;; Parameters:    Size  Location     Type
  5803 ;;  c               2   10[BANK0 ] int 
  5804 ;; Auto vars:     Size  Location     Type
  5805 ;;  f1              4    0        int 
  5806 ;;  sign            1   14[BANK0 ] unsigned char 
  5807 ;; Return value:  Size  Location     Type
  5808 ;;                  4   10[BANK0 ] unsigned char 
  5809 ;; Registers used:
  5810 ;;		wreg, status,2, status,0, cstack
  5811 ;; Tracked objects:
  5812 ;;		On entry : 0/0
  5813 ;;		On exit  : 0/0
  5814 ;;		Unchanged: 0/0
  5815 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5816 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5817 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5818 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5819 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5820 ;;Total ram usage:        5 bytes
  5821 ;; Hardware stack levels used:    1
  5822 ;; Hardware stack levels required when called:    3
  5823 ;; This function calls:
  5824 ;;		___flpack
  5825 ;; This function is called by:
  5826 ;;		_exp
  5827 ;;		_log
  5828 ;; This function uses a non-reentrant model
  5829 ;;
  5830                           
  5831                           	psect	text18
  5832  004CA0                     __ptext18:
  5833                           	opt stack 0
  5834  004CA0                     ___awtofl:
  5835                           	opt stack 24
  5836                           
  5837                           ;incstack = 0
  5838  004CA0  0E00               	movlw	0
  5839  004CA2  0100               	movlb	0	; () banked
  5840  004CA4  6F6E               	movwf	___awtofl@sign& (0+255),b
  5841                           
  5842                           ; BSR set to: 0
  5843  004CA6  0100               	movlb	0	; () banked
  5844  004CA8  AF6B               	btfss	(___awtofl@c+1)& (0+255),7,b
  5845  004CAA  D008               	goto	l5607
  5846                           
  5847                           ; BSR set to: 0
  5848  004CAC  0100               	movlb	0	; () banked
  5849  004CAE  6D6A               	negf	___awtofl@c& (0+255),b
  5850  004CB0  1F6B               	comf	(___awtofl@c+1)& (0+255),f,b
  5851  004CB2  B0D8               	btfsc	status,0,c
  5852  004CB4  2B6B               	incf	(___awtofl@c+1)& (0+255),f,b
  5853  004CB6  0100               	movlb	0	; () banked
  5854  004CB8  2B6E               	incf	___awtofl@sign& (0+255),f,b
  5855  004CBA  D000               	goto	l5607
  5856  004CBC                     l5607:
  5857                           
  5858                           ; BSR set to: 0
  5859  004CBC  C06A  F060         	movff	___awtofl@c,___flpack@arg
  5860  004CC0  C06B  F061         	movff	___awtofl@c+1,___flpack@arg+1
  5861  004CC4  0100               	movlb	0	; () banked
  5862  004CC6  6B62               	clrf	(___flpack@arg+2)& (0+255),b
  5863  004CC8  6B63               	clrf	(___flpack@arg+3)& (0+255),b
  5864  004CCA  0E96               	movlw	150
  5865  004CCC  0100               	movlb	0	; () banked
  5866  004CCE  6F64               	movwf	___flpack@exp& (0+255),b
  5867  004CD0  C06E  F065         	movff	___awtofl@sign,___flpack@sign
  5868  004CD4  EC5E  F01D         	call	___flpack	;wreg free
  5869  004CD8  C060  F06A         	movff	?___flpack,?___awtofl
  5870  004CDC  C061  F06B         	movff	?___flpack+1,?___awtofl+1
  5871  004CE0  C062  F06C         	movff	?___flpack+2,?___awtofl+2
  5872  004CE4  C063  F06D         	movff	?___flpack+3,?___awtofl+3
  5873  004CE8  0012               	return	
  5874  004CEA  0012               	return		;funcret
  5875  004CEC                     __end_of___awtofl:
  5876                           	opt stack 0
  5877                           tblptru	equ	0xFF8
  5878                           tblptrh	equ	0xFF7
  5879                           tblptrl	equ	0xFF6
  5880                           tablat	equ	0xFF5
  5881                           postinc0	equ	0xFEE
  5882                           wreg	equ	0xFE8
  5883                           postinc2	equ	0xFDE
  5884                           postdec2	equ	0xFDD
  5885                           fsr2h	equ	0xFDA
  5886                           fsr2l	equ	0xFD9
  5887                           status	equ	0xFD8
  5888                           
  5889 ;; *************** function ___lltofl *****************
  5890 ;; Defined at:
  5891 ;;		line 30 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lltofl.c"
  5892 ;; Parameters:    Size  Location     Type
  5893 ;;  c               4   10[BANK0 ] unsigned long 
  5894 ;; Auto vars:     Size  Location     Type
  5895 ;;		None
  5896 ;; Return value:  Size  Location     Type
  5897 ;;                  4   10[BANK0 ] unsigned long 
  5898 ;; Registers used:
  5899 ;;		wreg, status,2, status,0, cstack
  5900 ;; Tracked objects:
  5901 ;;		On entry : 0/0
  5902 ;;		On exit  : 0/0
  5903 ;;		Unchanged: 0/0
  5904 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5905 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5906 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5907 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5908 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5909 ;;Total ram usage:        4 bytes
  5910 ;; Hardware stack levels used:    1
  5911 ;; Hardware stack levels required when called:    3
  5912 ;; This function calls:
  5913 ;;		___flpack
  5914 ;; This function is called by:
  5915 ;;		_pow
  5916 ;; This function uses a non-reentrant model
  5917 ;;
  5918                           
  5919                           	psect	text19
  5920  004DA4                     __ptext19:
  5921                           	opt stack 0
  5922  004DA4                     ___lltofl:
  5923                           	opt stack 25
  5924                           
  5925                           ;incstack = 0
  5926  004DA4  C06A  F060         	movff	___lltofl@c,___flpack@arg
  5927  004DA8  C06B  F061         	movff	___lltofl@c+1,___flpack@arg+1
  5928  004DAC  C06C  F062         	movff	___lltofl@c+2,___flpack@arg+2
  5929  004DB0  C06D  F063         	movff	___lltofl@c+3,___flpack@arg+3
  5930  004DB4  0E96               	movlw	150
  5931  004DB6  0100               	movlb	0	; () banked
  5932  004DB8  6F64               	movwf	___flpack@exp& (0+255),b
  5933  004DBA  0E00               	movlw	0
  5934  004DBC  0100               	movlb	0	; () banked
  5935  004DBE  6F65               	movwf	___flpack@sign& (0+255),b
  5936  004DC0  EC5E  F01D         	call	___flpack	;wreg free
  5937  004DC4  C060  F06A         	movff	?___flpack,?___lltofl
  5938  004DC8  C061  F06B         	movff	?___flpack+1,?___lltofl+1
  5939  004DCC  C062  F06C         	movff	?___flpack+2,?___lltofl+2
  5940  004DD0  C063  F06D         	movff	?___flpack+3,?___lltofl+3
  5941  004DD4  0012               	return	
  5942  004DD6  0012               	return		;funcret
  5943  004DD8                     __end_of___lltofl:
  5944                           	opt stack 0
  5945                           tblptru	equ	0xFF8
  5946                           tblptrh	equ	0xFF7
  5947                           tblptrl	equ	0xFF6
  5948                           tablat	equ	0xFF5
  5949                           postinc0	equ	0xFEE
  5950                           wreg	equ	0xFE8
  5951                           postinc2	equ	0xFDE
  5952                           postdec2	equ	0xFDD
  5953                           fsr2h	equ	0xFDA
  5954                           fsr2l	equ	0xFD9
  5955                           status	equ	0xFD8
  5956                           
  5957 ;; *************** function _abs *****************
  5958 ;; Defined at:
  5959 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\abs.c"
  5960 ;; Parameters:    Size  Location     Type
  5961 ;;  a               2    0[BANK0 ] int 
  5962 ;; Auto vars:     Size  Location     Type
  5963 ;;		None
  5964 ;; Return value:  Size  Location     Type
  5965 ;;                  2    0[BANK0 ] int 
  5966 ;; Registers used:
  5967 ;;		wreg, status,2, status,0
  5968 ;; Tracked objects:
  5969 ;;		On entry : 0/0
  5970 ;;		On exit  : 0/0
  5971 ;;		Unchanged: 0/0
  5972 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5973 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5974 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5975 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5976 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5977 ;;Total ram usage:        4 bytes
  5978 ;; Hardware stack levels used:    1
  5979 ;; Hardware stack levels required when called:    2
  5980 ;; This function calls:
  5981 ;;		Nothing
  5982 ;; This function is called by:
  5983 ;;		_rampe
  5984 ;; This function uses a non-reentrant model
  5985 ;;
  5986                           
  5987                           	psect	text20
  5988  004E3E                     __ptext20:
  5989                           	opt stack 0
  5990  004E3E                     _abs:
  5991                           	opt stack 27
  5992                           
  5993                           ;incstack = 0
  5994  004E3E  0100               	movlb	0	; () banked
  5995  004E40  AF61               	btfss	(abs@a+1)& (0+255),7,b
  5996  004E42  D00E               	goto	l856
  5997                           
  5998                           ; BSR set to: 0
  5999  004E44  C060  F062         	movff	abs@a,??_abs
  6000  004E48  C061  F063         	movff	abs@a+1,??_abs+1
  6001  004E4C  0100               	movlb	0	; () banked
  6002  004E4E  1F62               	comf	??_abs& (0+255),f,b
  6003  004E50  1F63               	comf	(??_abs+1)& (0+255),f,b
  6004  004E52  4B62               	infsnz	??_abs& (0+255),f,b
  6005  004E54  2B63               	incf	(??_abs+1)& (0+255),f,b
  6006  004E56  C062  F060         	movff	??_abs,?_abs
  6007  004E5A  C063  F061         	movff	??_abs+1,?_abs+1
  6008  004E5E  0012               	return	
  6009  004E60                     l856:
  6010                           
  6011                           ; BSR set to: 0
  6012  004E60  C060  F060         	movff	abs@a,?_abs
  6013  004E64  C061  F061         	movff	abs@a+1,?_abs+1
  6014                           
  6015                           ; BSR set to: 0
  6016  004E68  0012               	return		;funcret
  6017  004E6A                     __end_of_abs:
  6018                           	opt stack 0
  6019                           tblptru	equ	0xFF8
  6020                           tblptrh	equ	0xFF7
  6021                           tblptrl	equ	0xFF6
  6022                           tablat	equ	0xFF5
  6023                           postinc0	equ	0xFEE
  6024                           wreg	equ	0xFE8
  6025                           postinc2	equ	0xFDE
  6026                           postdec2	equ	0xFDD
  6027                           fsr2h	equ	0xFDA
  6028                           fsr2l	equ	0xFD9
  6029                           status	equ	0xFD8
  6030                           
  6031 ;; *************** function ___lwtofl *****************
  6032 ;; Defined at:
  6033 ;;		line 28 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lwtofl.c"
  6034 ;; Parameters:    Size  Location     Type
  6035 ;;  c               2   10[BANK0 ] unsigned int 
  6036 ;; Auto vars:     Size  Location     Type
  6037 ;;		None
  6038 ;; Return value:  Size  Location     Type
  6039 ;;                  4   10[BANK0 ] unsigned int 
  6040 ;; Registers used:
  6041 ;;		wreg, status,2, status,0, cstack
  6042 ;; Tracked objects:
  6043 ;;		On entry : 0/0
  6044 ;;		On exit  : 0/0
  6045 ;;		Unchanged: 0/0
  6046 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6047 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6048 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6049 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6050 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6051 ;;Total ram usage:        4 bytes
  6052 ;; Hardware stack levels used:    1
  6053 ;; Hardware stack levels required when called:    3
  6054 ;; This function calls:
  6055 ;;		___flpack
  6056 ;; This function is called by:
  6057 ;;		_rampe
  6058 ;; This function uses a non-reentrant model
  6059 ;;
  6060                           
  6061                           	psect	text21
  6062  004E0C                     __ptext21:
  6063                           	opt stack 0
  6064  004E0C                     ___lwtofl:
  6065                           	opt stack 26
  6066                           
  6067                           ; BSR set to: 0
  6068                           ;incstack = 0
  6069  004E0C  C06A  F060         	movff	___lwtofl@c,___flpack@arg
  6070  004E10  C06B  F061         	movff	___lwtofl@c+1,___flpack@arg+1
  6071  004E14  0100               	movlb	0	; () banked
  6072  004E16  6B62               	clrf	(___flpack@arg+2)& (0+255),b
  6073  004E18  6B63               	clrf	(___flpack@arg+3)& (0+255),b
  6074  004E1A  0E96               	movlw	150
  6075  004E1C  0100               	movlb	0	; () banked
  6076  004E1E  6F64               	movwf	___flpack@exp& (0+255),b
  6077  004E20  0E00               	movlw	0
  6078  004E22  0100               	movlb	0	; () banked
  6079  004E24  6F65               	movwf	___flpack@sign& (0+255),b
  6080  004E26  EC5E  F01D         	call	___flpack	;wreg free
  6081  004E2A  C060  F06A         	movff	?___flpack,?___lwtofl
  6082  004E2E  C061  F06B         	movff	?___flpack+1,?___lwtofl+1
  6083  004E32  C062  F06C         	movff	?___flpack+2,?___lwtofl+2
  6084  004E36  C063  F06D         	movff	?___flpack+3,?___lwtofl+3
  6085  004E3A  0012               	return	
  6086  004E3C  0012               	return		;funcret
  6087  004E3E                     __end_of___lwtofl:
  6088                           	opt stack 0
  6089                           tblptru	equ	0xFF8
  6090                           tblptrh	equ	0xFF7
  6091                           tblptrl	equ	0xFF6
  6092                           tablat	equ	0xFF5
  6093                           postinc0	equ	0xFEE
  6094                           wreg	equ	0xFE8
  6095                           postinc2	equ	0xFDE
  6096                           postdec2	equ	0xFDD
  6097                           fsr2h	equ	0xFDA
  6098                           fsr2l	equ	0xFD9
  6099                           status	equ	0xFD8
  6100                           
  6101 ;; *************** function ___flpack *****************
  6102 ;; Defined at:
  6103 ;;		line 63 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\double.c"
  6104 ;; Parameters:    Size  Location     Type
  6105 ;;  arg             4    0[BANK0 ] unsigned long 
  6106 ;;  exp             1    4[BANK0 ] unsigned char 
  6107 ;;  sign            1    5[BANK0 ] unsigned char 
  6108 ;; Auto vars:     Size  Location     Type
  6109 ;;		None
  6110 ;; Return value:  Size  Location     Type
  6111 ;;                  4    0[BANK0 ] unsigned char 
  6112 ;; Registers used:
  6113 ;;		wreg, status,2, status,0
  6114 ;; Tracked objects:
  6115 ;;		On entry : 0/0
  6116 ;;		On exit  : 0/0
  6117 ;;		Unchanged: 0/0
  6118 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6119 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6120 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6121 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6122 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6123 ;;Total ram usage:       10 bytes
  6124 ;; Hardware stack levels used:    1
  6125 ;; Hardware stack levels required when called:    2
  6126 ;; This function calls:
  6127 ;;		Nothing
  6128 ;; This function is called by:
  6129 ;;		___altofl
  6130 ;;		___awtofl
  6131 ;;		___fladd
  6132 ;;		___fldiv
  6133 ;;		___flmul
  6134 ;;		___lltofl
  6135 ;;		___lwtofl
  6136 ;; This function uses a non-reentrant model
  6137 ;;
  6138                           
  6139                           	psect	text22
  6140  003ABC                     __ptext22:
  6141                           	opt stack 0
  6142  003ABC                     ___flpack:
  6143                           	opt stack 23
  6144                           
  6145                           ;incstack = 0
  6146  003ABC  0100               	movlb	0	; () banked
  6147  003ABE  5164               	movf	___flpack@exp& (0+255),w,b
  6148  003AC0  0100               	movlb	0	; () banked
  6149  003AC2  B4D8               	btfsc	status,2,c
  6150  003AC4  D00A               	goto	l5315
  6151                           
  6152                           ; BSR set to: 0
  6153  003AC6  0100               	movlb	0	; () banked
  6154  003AC8  5160               	movf	___flpack@arg& (0+255),w,b
  6155  003ACA  0100               	movlb	0	; () banked
  6156  003ACC  1161               	iorwf	(___flpack@arg+1)& (0+255),w,b
  6157  003ACE  0100               	movlb	0	; () banked
  6158  003AD0  1162               	iorwf	(___flpack@arg+2)& (0+255),w,b
  6159  003AD2  0100               	movlb	0	; () banked
  6160  003AD4  1163               	iorwf	(___flpack@arg+3)& (0+255),w,b
  6161  003AD6  A4D8               	btfss	status,2,c
  6162  003AD8  D014               	goto	l5321
  6163  003ADA                     l5315:
  6164                           
  6165                           ; BSR set to: 0
  6166  003ADA  0E00               	movlw	0
  6167  003ADC  0100               	movlb	0	; () banked
  6168  003ADE  6F60               	movwf	?___flpack& (0+255),b
  6169  003AE0  0E00               	movlw	0
  6170  003AE2  6F61               	movwf	(?___flpack+1)& (0+255),b
  6171  003AE4  0E00               	movlw	0
  6172  003AE6  6F62               	movwf	(?___flpack+2)& (0+255),b
  6173  003AE8  0E00               	movlw	0
  6174  003AEA  6F63               	movwf	(?___flpack+3)& (0+255),b
  6175                           
  6176                           ; BSR set to: 0
  6177  003AEC  0012               	return	
  6178                           
  6179                           ; BSR set to: 0
  6180  003AEE  D009               	goto	l5321
  6181  003AF0                     l5319:
  6182                           
  6183                           ; BSR set to: 0
  6184  003AF0  0100               	movlb	0	; () banked
  6185  003AF2  2B64               	incf	___flpack@exp& (0+255),f,b
  6186  003AF4  0100               	movlb	0	; () banked
  6187  003AF6  90D8               	bcf	status,0,c
  6188  003AF8  3363               	rrcf	(___flpack@arg+3)& (0+255),f,b
  6189  003AFA  3362               	rrcf	(___flpack@arg+2)& (0+255),f,b
  6190  003AFC  3361               	rrcf	(___flpack@arg+1)& (0+255),f,b
  6191  003AFE  3360               	rrcf	___flpack@arg& (0+255),f,b
  6192  003B00  D000               	goto	l5321
  6193  003B02                     l5321:
  6194                           
  6195                           ; BSR set to: 0
  6196  003B02  0E00               	movlw	0
  6197  003B04  0100               	movlb	0	; () banked
  6198  003B06  1560               	andwf	___flpack@arg& (0+255),w,b
  6199  003B08  0100               	movlb	0	; () banked
  6200  003B0A  6F66               	movwf	??___flpack& (0+255),b
  6201  003B0C  0E00               	movlw	0
  6202  003B0E  0100               	movlb	0	; () banked
  6203  003B10  1561               	andwf	(___flpack@arg+1)& (0+255),w,b
  6204  003B12  0100               	movlb	0	; () banked
  6205  003B14  6F67               	movwf	(??___flpack+1)& (0+255),b
  6206  003B16  0E00               	movlw	0
  6207  003B18  0100               	movlb	0	; () banked
  6208  003B1A  1562               	andwf	(___flpack@arg+2)& (0+255),w,b
  6209  003B1C  0100               	movlb	0	; () banked
  6210  003B1E  6F68               	movwf	(??___flpack+2)& (0+255),b
  6211  003B20  0EFE               	movlw	254
  6212  003B22  0100               	movlb	0	; () banked
  6213  003B24  1563               	andwf	(___flpack@arg+3)& (0+255),w,b
  6214  003B26  0100               	movlb	0	; () banked
  6215  003B28  6F69               	movwf	(??___flpack+3)& (0+255),b
  6216  003B2A  0100               	movlb	0	; () banked
  6217  003B2C  5166               	movf	??___flpack& (0+255),w,b
  6218  003B2E  0100               	movlb	0	; () banked
  6219  003B30  1167               	iorwf	(??___flpack+1)& (0+255),w,b
  6220  003B32  0100               	movlb	0	; () banked
  6221  003B34  1168               	iorwf	(??___flpack+2)& (0+255),w,b
  6222  003B36  0100               	movlb	0	; () banked
  6223  003B38  1169               	iorwf	(??___flpack+3)& (0+255),w,b
  6224  003B3A  B4D8               	btfsc	status,2,c
  6225  003B3C  D011               	goto	l1041
  6226  003B3E  D7D8               	goto	l5319
  6227                           
  6228                           ; BSR set to: 0
  6229  003B40  D00F               	goto	l1041
  6230  003B42                     l5323:
  6231                           
  6232                           ; BSR set to: 0
  6233  003B42  0100               	movlb	0	; () banked
  6234  003B44  2B64               	incf	___flpack@exp& (0+255),f,b
  6235                           
  6236                           ; BSR set to: 0
  6237  003B46  0E01               	movlw	1
  6238  003B48  0100               	movlb	0	; () banked
  6239  003B4A  2760               	addwf	___flpack@arg& (0+255),f,b
  6240  003B4C  0E00               	movlw	0
  6241  003B4E  2361               	addwfc	(___flpack@arg+1)& (0+255),f,b
  6242  003B50  2362               	addwfc	(___flpack@arg+2)& (0+255),f,b
  6243  003B52  2363               	addwfc	(___flpack@arg+3)& (0+255),f,b
  6244                           
  6245                           ; BSR set to: 0
  6246  003B54  0100               	movlb	0	; () banked
  6247  003B56  90D8               	bcf	status,0,c
  6248  003B58  3363               	rrcf	(___flpack@arg+3)& (0+255),f,b
  6249  003B5A  3362               	rrcf	(___flpack@arg+2)& (0+255),f,b
  6250  003B5C  3361               	rrcf	(___flpack@arg+1)& (0+255),f,b
  6251  003B5E  3360               	rrcf	___flpack@arg& (0+255),f,b
  6252  003B60                     l1041:
  6253                           
  6254                           ; BSR set to: 0
  6255  003B60  0E00               	movlw	0
  6256  003B62  0100               	movlb	0	; () banked
  6257  003B64  1560               	andwf	___flpack@arg& (0+255),w,b
  6258  003B66  0100               	movlb	0	; () banked
  6259  003B68  6F66               	movwf	??___flpack& (0+255),b
  6260  003B6A  0E00               	movlw	0
  6261  003B6C  0100               	movlb	0	; () banked
  6262  003B6E  1561               	andwf	(___flpack@arg+1)& (0+255),w,b
  6263  003B70  0100               	movlb	0	; () banked
  6264  003B72  6F67               	movwf	(??___flpack+1)& (0+255),b
  6265  003B74  0E00               	movlw	0
  6266  003B76  0100               	movlb	0	; () banked
  6267  003B78  1562               	andwf	(___flpack@arg+2)& (0+255),w,b
  6268  003B7A  0100               	movlb	0	; () banked
  6269  003B7C  6F68               	movwf	(??___flpack+2)& (0+255),b
  6270  003B7E  0EFF               	movlw	255
  6271  003B80  0100               	movlb	0	; () banked
  6272  003B82  1563               	andwf	(___flpack@arg+3)& (0+255),w,b
  6273  003B84  0100               	movlb	0	; () banked
  6274  003B86  6F69               	movwf	(??___flpack+3)& (0+255),b
  6275  003B88  0100               	movlb	0	; () banked
  6276  003B8A  5166               	movf	??___flpack& (0+255),w,b
  6277  003B8C  0100               	movlb	0	; () banked
  6278  003B8E  1167               	iorwf	(??___flpack+1)& (0+255),w,b
  6279  003B90  0100               	movlb	0	; () banked
  6280  003B92  1168               	iorwf	(??___flpack+2)& (0+255),w,b
  6281  003B94  0100               	movlb	0	; () banked
  6282  003B96  1169               	iorwf	(??___flpack+3)& (0+255),w,b
  6283  003B98  B4D8               	btfsc	status,2,c
  6284  003B9A  D00B               	goto	l5331
  6285  003B9C  D7D2               	goto	l5323
  6286                           
  6287                           ; BSR set to: 0
  6288  003B9E  D009               	goto	l5331
  6289  003BA0                     l5329:
  6290                           
  6291                           ; BSR set to: 0
  6292  003BA0  0100               	movlb	0	; () banked
  6293  003BA2  0764               	decf	___flpack@exp& (0+255),f,b
  6294  003BA4  0100               	movlb	0	; () banked
  6295  003BA6  90D8               	bcf	status,0,c
  6296  003BA8  3760               	rlcf	___flpack@arg& (0+255),f,b
  6297  003BAA  3761               	rlcf	(___flpack@arg+1)& (0+255),f,b
  6298  003BAC  3762               	rlcf	(___flpack@arg+2)& (0+255),f,b
  6299  003BAE  3763               	rlcf	(___flpack@arg+3)& (0+255),f,b
  6300  003BB0  D000               	goto	l5331
  6301  003BB2                     l5331:
  6302                           
  6303                           ; BSR set to: 0
  6304  003BB2  0100               	movlb	0	; () banked
  6305  003BB4  BF62               	btfsc	(___flpack@arg+2)& (0+255),7,b
  6306  003BB6  D005               	goto	l1048
  6307                           
  6308                           ; BSR set to: 0
  6309  003BB8  0E02               	movlw	2
  6310  003BBA  0100               	movlb	0	; () banked
  6311  003BBC  6164               	cpfslt	___flpack@exp& (0+255),b
  6312  003BBE  D7F0               	goto	l5329
  6313  003BC0  D000               	goto	l1048
  6314  003BC2                     l1048:
  6315                           
  6316                           ; BSR set to: 0
  6317  003BC2  0100               	movlb	0	; () banked
  6318  003BC4  B164               	btfsc	___flpack@exp& (0+255),0,b
  6319  003BC6  D009               	goto	l1049
  6320                           
  6321                           ; BSR set to: 0
  6322  003BC8  0EFF               	movlw	255
  6323  003BCA  0100               	movlb	0	; () banked
  6324  003BCC  1760               	andwf	___flpack@arg& (0+255),f,b
  6325  003BCE  0EFF               	movlw	255
  6326  003BD0  1761               	andwf	(___flpack@arg+1)& (0+255),f,b
  6327  003BD2  0E7F               	movlw	127
  6328  003BD4  1762               	andwf	(___flpack@arg+2)& (0+255),f,b
  6329  003BD6  0EFF               	movlw	255
  6330  003BD8  1763               	andwf	(___flpack@arg+3)& (0+255),f,b
  6331  003BDA                     l1049:
  6332                           
  6333                           ; BSR set to: 0
  6334  003BDA  0100               	movlb	0	; () banked
  6335  003BDC  90D8               	bcf	status,0,c
  6336  003BDE  3364               	rrcf	___flpack@exp& (0+255),f,b
  6337  003BE0  C064  F066         	movff	___flpack@exp,??___flpack
  6338  003BE4  0100               	movlb	0	; () banked
  6339  003BE6  6B67               	clrf	(??___flpack+1)& (0+255),b
  6340  003BE8  6B68               	clrf	(??___flpack+2)& (0+255),b
  6341  003BEA  6B69               	clrf	(??___flpack+3)& (0+255),b
  6342  003BEC  C066  F069         	movff	??___flpack,??___flpack+3
  6343  003BF0  0100               	movlb	0	; () banked
  6344  003BF2  6B68               	clrf	(??___flpack+2)& (0+255),b
  6345  003BF4  6B67               	clrf	(??___flpack+1)& (0+255),b
  6346  003BF6  6B66               	clrf	??___flpack& (0+255),b
  6347  003BF8  0100               	movlb	0	; () banked
  6348  003BFA  5166               	movf	??___flpack& (0+255),w,b
  6349  003BFC  0100               	movlb	0	; () banked
  6350  003BFE  1360               	iorwf	___flpack@arg& (0+255),f,b
  6351  003C00  0100               	movlb	0	; () banked
  6352  003C02  5167               	movf	(??___flpack+1)& (0+255),w,b
  6353  003C04  0100               	movlb	0	; () banked
  6354  003C06  1361               	iorwf	(___flpack@arg+1)& (0+255),f,b
  6355  003C08  0100               	movlb	0	; () banked
  6356  003C0A  5168               	movf	(??___flpack+2)& (0+255),w,b
  6357  003C0C  0100               	movlb	0	; () banked
  6358  003C0E  1362               	iorwf	(___flpack@arg+2)& (0+255),f,b
  6359  003C10  0100               	movlb	0	; () banked
  6360  003C12  5169               	movf	(??___flpack+3)& (0+255),w,b
  6361  003C14  0100               	movlb	0	; () banked
  6362  003C16  1363               	iorwf	(___flpack@arg+3)& (0+255),f,b
  6363                           
  6364                           ; BSR set to: 0
  6365  003C18  0100               	movlb	0	; () banked
  6366  003C1A  5165               	movf	___flpack@sign& (0+255),w,b
  6367  003C1C  0100               	movlb	0	; () banked
  6368  003C1E  B4D8               	btfsc	status,2,c
  6369  003C20  D003               	goto	l5341
  6370                           
  6371                           ; BSR set to: 0
  6372  003C22  0100               	movlb	0	; () banked
  6373  003C24  8F63               	bsf	(___flpack@arg+3)& (0+255),7,b
  6374  003C26  D000               	goto	l5341
  6375  003C28                     l5341:
  6376                           
  6377                           ; BSR set to: 0
  6378  003C28  C060  F060         	movff	___flpack@arg,?___flpack
  6379  003C2C  C061  F061         	movff	___flpack@arg+1,?___flpack+1
  6380  003C30  C062  F062         	movff	___flpack@arg+2,?___flpack+2
  6381  003C34  C063  F063         	movff	___flpack@arg+3,?___flpack+3
  6382  003C38  0012               	return	
  6383                           
  6384                           ; BSR set to: 0
  6385                           
  6386                           ; BSR set to: 0
  6387  003C3A  0012               	return		;funcret
  6388  003C3C                     __end_of___flpack:
  6389                           	opt stack 0
  6390                           tblptru	equ	0xFF8
  6391                           tblptrh	equ	0xFF7
  6392                           tblptrl	equ	0xFF6
  6393                           tablat	equ	0xFF5
  6394                           postinc0	equ	0xFEE
  6395                           wreg	equ	0xFE8
  6396                           postinc2	equ	0xFDE
  6397                           postdec2	equ	0xFDD
  6398                           fsr2h	equ	0xFDA
  6399                           fsr2l	equ	0xFD9
  6400                           status	equ	0xFD8
  6401                           
  6402 ;; *************** function ___lwdiv *****************
  6403 ;; Defined at:
  6404 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lwdiv.c"
  6405 ;; Parameters:    Size  Location     Type
  6406 ;;  dividend        2    0[BANK0 ] unsigned int 
  6407 ;;  divisor         2    2[BANK0 ] unsigned int 
  6408 ;; Auto vars:     Size  Location     Type
  6409 ;;  quotient        2    5[BANK0 ] unsigned int 
  6410 ;;  counter         1    4[BANK0 ] unsigned char 
  6411 ;; Return value:  Size  Location     Type
  6412 ;;                  2    0[BANK0 ] unsigned int 
  6413 ;; Registers used:
  6414 ;;		wreg, status,2, status,0
  6415 ;; Tracked objects:
  6416 ;;		On entry : 0/0
  6417 ;;		On exit  : 0/0
  6418 ;;		Unchanged: 0/0
  6419 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6420 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6421 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6422 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6423 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6424 ;;Total ram usage:        7 bytes
  6425 ;; Hardware stack levels used:    1
  6426 ;; Hardware stack levels required when called:    2
  6427 ;; This function calls:
  6428 ;;		Nothing
  6429 ;; This function is called by:
  6430 ;;		_rampe
  6431 ;; This function uses a non-reentrant model
  6432 ;;
  6433                           
  6434                           	psect	text23
  6435  004A68                     __ptext23:
  6436                           	opt stack 0
  6437  004A68                     ___lwdiv:
  6438                           	opt stack 27
  6439                           
  6440                           ; BSR set to: 0
  6441                           ;incstack = 0
  6442  004A68  0E00               	movlw	0
  6443  004A6A  0100               	movlb	0	; () banked
  6444  004A6C  6F66               	movwf	(___lwdiv@quotient+1)& (0+255),b
  6445  004A6E  0E00               	movlw	0
  6446  004A70  6F65               	movwf	___lwdiv@quotient& (0+255),b
  6447                           
  6448                           ; BSR set to: 0
  6449  004A72  0100               	movlb	0	; () banked
  6450  004A74  5162               	movf	___lwdiv@divisor& (0+255),w,b
  6451  004A76  0100               	movlb	0	; () banked
  6452  004A78  1163               	iorwf	(___lwdiv@divisor+1)& (0+255),w,b
  6453  004A7A  B4D8               	btfsc	status,2,c
  6454  004A7C  D031               	goto	l1331
  6455                           
  6456                           ; BSR set to: 0
  6457  004A7E  0E01               	movlw	1
  6458  004A80  0100               	movlb	0	; () banked
  6459  004A82  6F64               	movwf	___lwdiv@counter& (0+255),b
  6460  004A84  D007               	goto	l6629
  6461  004A86                     l6627:
  6462                           
  6463                           ; BSR set to: 0
  6464  004A86  0100               	movlb	0	; () banked
  6465  004A88  90D8               	bcf	status,0,c
  6466  004A8A  3762               	rlcf	___lwdiv@divisor& (0+255),f,b
  6467  004A8C  3763               	rlcf	(___lwdiv@divisor+1)& (0+255),f,b
  6468  004A8E  0100               	movlb	0	; () banked
  6469  004A90  2B64               	incf	___lwdiv@counter& (0+255),f,b
  6470  004A92  D000               	goto	l6629
  6471  004A94                     l6629:
  6472                           
  6473                           ; BSR set to: 0
  6474  004A94  0100               	movlb	0	; () banked
  6475  004A96  BF63               	btfsc	(___lwdiv@divisor+1)& (0+255),7,b
  6476  004A98  D002               	goto	l6631
  6477  004A9A  D7F5               	goto	l6627
  6478                           
  6479                           ; BSR set to: 0
  6480  004A9C  D000               	goto	l6631
  6481  004A9E                     l6631:
  6482                           
  6483                           ; BSR set to: 0
  6484  004A9E  0100               	movlb	0	; () banked
  6485  004AA0  90D8               	bcf	status,0,c
  6486  004AA2  3765               	rlcf	___lwdiv@quotient& (0+255),f,b
  6487  004AA4  3766               	rlcf	(___lwdiv@quotient+1)& (0+255),f,b
  6488                           
  6489                           ; BSR set to: 0
  6490  004AA6  0100               	movlb	0	; () banked
  6491  004AA8  5162               	movf	___lwdiv@divisor& (0+255),w,b
  6492  004AAA  0100               	movlb	0	; () banked
  6493  004AAC  5D60               	subwf	___lwdiv@dividend& (0+255),w,b
  6494  004AAE  0100               	movlb	0	; () banked
  6495  004AB0  5163               	movf	(___lwdiv@divisor+1)& (0+255),w,b
  6496  004AB2  0100               	movlb	0	; () banked
  6497  004AB4  5961               	subwfb	(___lwdiv@dividend+1)& (0+255),w,b
  6498  004AB6  A0D8               	btfss	status,0,c
  6499  004AB8  D00B               	goto	l6639
  6500                           
  6501                           ; BSR set to: 0
  6502  004ABA  0100               	movlb	0	; () banked
  6503  004ABC  5162               	movf	___lwdiv@divisor& (0+255),w,b
  6504  004ABE  0100               	movlb	0	; () banked
  6505  004AC0  5F60               	subwf	___lwdiv@dividend& (0+255),f,b
  6506  004AC2  0100               	movlb	0	; () banked
  6507  004AC4  5163               	movf	(___lwdiv@divisor+1)& (0+255),w,b
  6508  004AC6  0100               	movlb	0	; () banked
  6509  004AC8  5B61               	subwfb	(___lwdiv@dividend+1)& (0+255),f,b
  6510                           
  6511                           ; BSR set to: 0
  6512  004ACA  0100               	movlb	0	; () banked
  6513  004ACC  8165               	bsf	___lwdiv@quotient& (0+255),0,b
  6514  004ACE  D000               	goto	l6639
  6515  004AD0                     l6639:
  6516                           
  6517                           ; BSR set to: 0
  6518  004AD0  0100               	movlb	0	; () banked
  6519  004AD2  90D8               	bcf	status,0,c
  6520  004AD4  3363               	rrcf	(___lwdiv@divisor+1)& (0+255),f,b
  6521  004AD6  3362               	rrcf	___lwdiv@divisor& (0+255),f,b
  6522                           
  6523                           ; BSR set to: 0
  6524  004AD8  0100               	movlb	0	; () banked
  6525  004ADA  2F64               	decfsz	___lwdiv@counter& (0+255),f,b
  6526  004ADC  D7E0               	goto	l6631
  6527  004ADE  D000               	goto	l1331
  6528  004AE0                     l1331:
  6529                           
  6530                           ; BSR set to: 0
  6531  004AE0  C065  F060         	movff	___lwdiv@quotient,?___lwdiv
  6532  004AE4  C066  F061         	movff	___lwdiv@quotient+1,?___lwdiv+1
  6533                           
  6534                           ; BSR set to: 0
  6535  004AE8  0012               	return		;funcret
  6536  004AEA                     __end_of___lwdiv:
  6537                           	opt stack 0
  6538                           tblptru	equ	0xFF8
  6539                           tblptrh	equ	0xFF7
  6540                           tblptrl	equ	0xFF6
  6541                           tablat	equ	0xFF5
  6542                           postinc0	equ	0xFEE
  6543                           wreg	equ	0xFE8
  6544                           postinc2	equ	0xFDE
  6545                           postdec2	equ	0xFDD
  6546                           fsr2h	equ	0xFDA
  6547                           fsr2l	equ	0xFD9
  6548                           status	equ	0xFD8
  6549                           
  6550 ;; *************** function ___aldiv *****************
  6551 ;; Defined at:
  6552 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\aldiv.c"
  6553 ;; Parameters:    Size  Location     Type
  6554 ;;  dividend        4    0[BANK0 ] long 
  6555 ;;  divisor         4    4[BANK0 ] long 
  6556 ;; Auto vars:     Size  Location     Type
  6557 ;;  quotient        4   10[BANK0 ] long 
  6558 ;;  sign            1    9[BANK0 ] unsigned char 
  6559 ;;  counter         1    8[BANK0 ] unsigned char 
  6560 ;; Return value:  Size  Location     Type
  6561 ;;                  4    0[BANK0 ] long 
  6562 ;; Registers used:
  6563 ;;		wreg, status,2, status,0
  6564 ;; Tracked objects:
  6565 ;;		On entry : 0/0
  6566 ;;		On exit  : 0/0
  6567 ;;		Unchanged: 0/0
  6568 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6569 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6570 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6571 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6572 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6573 ;;Total ram usage:       14 bytes
  6574 ;; Hardware stack levels used:    1
  6575 ;; Hardware stack levels required when called:    2
  6576 ;; This function calls:
  6577 ;;		Nothing
  6578 ;; This function is called by:
  6579 ;;		_rampe
  6580 ;; This function uses a non-reentrant model
  6581 ;;
  6582                           
  6583                           	psect	text24
  6584  004186                     __ptext24:
  6585                           	opt stack 0
  6586  004186                     ___aldiv:
  6587                           	opt stack 27
  6588                           
  6589                           ; BSR set to: 0
  6590                           ;incstack = 0
  6591  004186  0E00               	movlw	0
  6592  004188  0100               	movlb	0	; () banked
  6593  00418A  6F69               	movwf	___aldiv@sign& (0+255),b
  6594                           
  6595                           ; BSR set to: 0
  6596  00418C  0100               	movlb	0	; () banked
  6597  00418E  AF67               	btfss	(___aldiv@divisor+3)& (0+255),7,b
  6598  004190  D00D               	goto	l6541
  6599                           
  6600                           ; BSR set to: 0
  6601  004192  0100               	movlb	0	; () banked
  6602  004194  1F67               	comf	(___aldiv@divisor+3)& (0+255),f,b
  6603  004196  1F66               	comf	(___aldiv@divisor+2)& (0+255),f,b
  6604  004198  1F65               	comf	(___aldiv@divisor+1)& (0+255),f,b
  6605  00419A  6D64               	negf	___aldiv@divisor& (0+255),b
  6606  00419C  0E00               	movlw	0
  6607  00419E  2365               	addwfc	(___aldiv@divisor+1)& (0+255),f,b
  6608  0041A0  2366               	addwfc	(___aldiv@divisor+2)& (0+255),f,b
  6609  0041A2  2367               	addwfc	(___aldiv@divisor+3)& (0+255),f,b
  6610                           
  6611                           ; BSR set to: 0
  6612  0041A4  0E01               	movlw	1
  6613  0041A6  0100               	movlb	0	; () banked
  6614  0041A8  6F69               	movwf	___aldiv@sign& (0+255),b
  6615  0041AA  D000               	goto	l6541
  6616  0041AC                     l6541:
  6617                           
  6618                           ; BSR set to: 0
  6619  0041AC  0100               	movlb	0	; () banked
  6620  0041AE  AF63               	btfss	(___aldiv@dividend+3)& (0+255),7,b
  6621  0041B0  D00D               	goto	l6547
  6622                           
  6623                           ; BSR set to: 0
  6624  0041B2  0100               	movlb	0	; () banked
  6625  0041B4  1F63               	comf	(___aldiv@dividend+3)& (0+255),f,b
  6626  0041B6  1F62               	comf	(___aldiv@dividend+2)& (0+255),f,b
  6627  0041B8  1F61               	comf	(___aldiv@dividend+1)& (0+255),f,b
  6628  0041BA  6D60               	negf	___aldiv@dividend& (0+255),b
  6629  0041BC  0E00               	movlw	0
  6630  0041BE  2361               	addwfc	(___aldiv@dividend+1)& (0+255),f,b
  6631  0041C0  2362               	addwfc	(___aldiv@dividend+2)& (0+255),f,b
  6632  0041C2  2363               	addwfc	(___aldiv@dividend+3)& (0+255),f,b
  6633                           
  6634                           ; BSR set to: 0
  6635  0041C4  0E01               	movlw	1
  6636  0041C6  0100               	movlb	0	; () banked
  6637  0041C8  1B69               	xorwf	___aldiv@sign& (0+255),f,b
  6638  0041CA  D000               	goto	l6547
  6639  0041CC                     l6547:
  6640                           
  6641                           ; BSR set to: 0
  6642  0041CC  0E00               	movlw	0
  6643  0041CE  0100               	movlb	0	; () banked
  6644  0041D0  6F6A               	movwf	___aldiv@quotient& (0+255),b
  6645  0041D2  0E00               	movlw	0
  6646  0041D4  6F6B               	movwf	(___aldiv@quotient+1)& (0+255),b
  6647  0041D6  0E00               	movlw	0
  6648  0041D8  6F6C               	movwf	(___aldiv@quotient+2)& (0+255),b
  6649  0041DA  0E00               	movlw	0
  6650  0041DC  6F6D               	movwf	(___aldiv@quotient+3)& (0+255),b
  6651                           
  6652                           ; BSR set to: 0
  6653  0041DE  0100               	movlb	0	; () banked
  6654  0041E0  5164               	movf	___aldiv@divisor& (0+255),w,b
  6655  0041E2  0100               	movlb	0	; () banked
  6656  0041E4  1165               	iorwf	(___aldiv@divisor+1)& (0+255),w,b
  6657  0041E6  0100               	movlb	0	; () banked
  6658  0041E8  1166               	iorwf	(___aldiv@divisor+2)& (0+255),w,b
  6659  0041EA  0100               	movlb	0	; () banked
  6660  0041EC  1167               	iorwf	(___aldiv@divisor+3)& (0+255),w,b
  6661  0041EE  B4D8               	btfsc	status,2,c
  6662  0041F0  D047               	goto	l6569
  6663                           
  6664                           ; BSR set to: 0
  6665  0041F2  0E01               	movlw	1
  6666  0041F4  0100               	movlb	0	; () banked
  6667  0041F6  6F68               	movwf	___aldiv@counter& (0+255),b
  6668  0041F8  D009               	goto	l6555
  6669  0041FA                     l6553:
  6670                           
  6671                           ; BSR set to: 0
  6672  0041FA  0100               	movlb	0	; () banked
  6673  0041FC  90D8               	bcf	status,0,c
  6674  0041FE  3764               	rlcf	___aldiv@divisor& (0+255),f,b
  6675  004200  3765               	rlcf	(___aldiv@divisor+1)& (0+255),f,b
  6676  004202  3766               	rlcf	(___aldiv@divisor+2)& (0+255),f,b
  6677  004204  3767               	rlcf	(___aldiv@divisor+3)& (0+255),f,b
  6678  004206  0100               	movlb	0	; () banked
  6679  004208  2B68               	incf	___aldiv@counter& (0+255),f,b
  6680  00420A  D000               	goto	l6555
  6681  00420C                     l6555:
  6682                           
  6683                           ; BSR set to: 0
  6684  00420C  0100               	movlb	0	; () banked
  6685  00420E  BF67               	btfsc	(___aldiv@divisor+3)& (0+255),7,b
  6686  004210  D002               	goto	l6557
  6687  004212  D7F3               	goto	l6553
  6688                           
  6689                           ; BSR set to: 0
  6690  004214  D000               	goto	l6557
  6691  004216                     l6557:
  6692                           
  6693                           ; BSR set to: 0
  6694  004216  0100               	movlb	0	; () banked
  6695  004218  90D8               	bcf	status,0,c
  6696  00421A  376A               	rlcf	___aldiv@quotient& (0+255),f,b
  6697  00421C  376B               	rlcf	(___aldiv@quotient+1)& (0+255),f,b
  6698  00421E  376C               	rlcf	(___aldiv@quotient+2)& (0+255),f,b
  6699  004220  376D               	rlcf	(___aldiv@quotient+3)& (0+255),f,b
  6700                           
  6701                           ; BSR set to: 0
  6702  004222  0100               	movlb	0	; () banked
  6703  004224  5164               	movf	___aldiv@divisor& (0+255),w,b
  6704  004226  0100               	movlb	0	; () banked
  6705  004228  5D60               	subwf	___aldiv@dividend& (0+255),w,b
  6706  00422A  0100               	movlb	0	; () banked
  6707  00422C  5165               	movf	(___aldiv@divisor+1)& (0+255),w,b
  6708  00422E  0100               	movlb	0	; () banked
  6709  004230  5961               	subwfb	(___aldiv@dividend+1)& (0+255),w,b
  6710  004232  0100               	movlb	0	; () banked
  6711  004234  5166               	movf	(___aldiv@divisor+2)& (0+255),w,b
  6712  004236  0100               	movlb	0	; () banked
  6713  004238  5962               	subwfb	(___aldiv@dividend+2)& (0+255),w,b
  6714  00423A  0100               	movlb	0	; () banked
  6715  00423C  5167               	movf	(___aldiv@divisor+3)& (0+255),w,b
  6716  00423E  0100               	movlb	0	; () banked
  6717  004240  5963               	subwfb	(___aldiv@dividend+3)& (0+255),w,b
  6718  004242  A0D8               	btfss	status,0,c
  6719  004244  D013               	goto	l6565
  6720                           
  6721                           ; BSR set to: 0
  6722  004246  0100               	movlb	0	; () banked
  6723  004248  5164               	movf	___aldiv@divisor& (0+255),w,b
  6724  00424A  0100               	movlb	0	; () banked
  6725  00424C  5F60               	subwf	___aldiv@dividend& (0+255),f,b
  6726  00424E  0100               	movlb	0	; () banked
  6727  004250  5165               	movf	(___aldiv@divisor+1)& (0+255),w,b
  6728  004252  0100               	movlb	0	; () banked
  6729  004254  5B61               	subwfb	(___aldiv@dividend+1)& (0+255),f,b
  6730  004256  0100               	movlb	0	; () banked
  6731  004258  5166               	movf	(___aldiv@divisor+2)& (0+255),w,b
  6732  00425A  0100               	movlb	0	; () banked
  6733  00425C  5B62               	subwfb	(___aldiv@dividend+2)& (0+255),f,b
  6734  00425E  0100               	movlb	0	; () banked
  6735  004260  5167               	movf	(___aldiv@divisor+3)& (0+255),w,b
  6736  004262  0100               	movlb	0	; () banked
  6737  004264  5B63               	subwfb	(___aldiv@dividend+3)& (0+255),f,b
  6738                           
  6739                           ; BSR set to: 0
  6740  004266  0100               	movlb	0	; () banked
  6741  004268  816A               	bsf	___aldiv@quotient& (0+255),0,b
  6742  00426A  D000               	goto	l6565
  6743  00426C                     l6565:
  6744                           
  6745                           ; BSR set to: 0
  6746  00426C  0100               	movlb	0	; () banked
  6747  00426E  90D8               	bcf	status,0,c
  6748  004270  3367               	rrcf	(___aldiv@divisor+3)& (0+255),f,b
  6749  004272  3366               	rrcf	(___aldiv@divisor+2)& (0+255),f,b
  6750  004274  3365               	rrcf	(___aldiv@divisor+1)& (0+255),f,b
  6751  004276  3364               	rrcf	___aldiv@divisor& (0+255),f,b
  6752                           
  6753                           ; BSR set to: 0
  6754  004278  0100               	movlb	0	; () banked
  6755  00427A  2F68               	decfsz	___aldiv@counter& (0+255),f,b
  6756  00427C  D7CC               	goto	l6557
  6757                           
  6758                           ; BSR set to: 0
  6759  00427E  D000               	goto	l6569
  6760  004280                     l6569:
  6761                           
  6762                           ; BSR set to: 0
  6763  004280  0100               	movlb	0	; () banked
  6764  004282  5169               	movf	___aldiv@sign& (0+255),w,b
  6765  004284  0100               	movlb	0	; () banked
  6766  004286  B4D8               	btfsc	status,2,c
  6767  004288  D00A               	goto	l6573
  6768                           
  6769                           ; BSR set to: 0
  6770  00428A  0100               	movlb	0	; () banked
  6771  00428C  1F6D               	comf	(___aldiv@quotient+3)& (0+255),f,b
  6772  00428E  1F6C               	comf	(___aldiv@quotient+2)& (0+255),f,b
  6773  004290  1F6B               	comf	(___aldiv@quotient+1)& (0+255),f,b
  6774  004292  6D6A               	negf	___aldiv@quotient& (0+255),b
  6775  004294  0E00               	movlw	0
  6776  004296  236B               	addwfc	(___aldiv@quotient+1)& (0+255),f,b
  6777  004298  236C               	addwfc	(___aldiv@quotient+2)& (0+255),f,b
  6778  00429A  236D               	addwfc	(___aldiv@quotient+3)& (0+255),f,b
  6779  00429C  D000               	goto	l6573
  6780  00429E                     l6573:
  6781                           
  6782                           ; BSR set to: 0
  6783  00429E  C06A  F060         	movff	___aldiv@quotient,?___aldiv
  6784  0042A2  C06B  F061         	movff	___aldiv@quotient+1,?___aldiv+1
  6785  0042A6  C06C  F062         	movff	___aldiv@quotient+2,?___aldiv+2
  6786  0042AA  C06D  F063         	movff	___aldiv@quotient+3,?___aldiv+3
  6787  0042AE  0012               	return	
  6788                           
  6789                           ; BSR set to: 0
  6790                           
  6791                           ; BSR set to: 0
  6792  0042B0  0012               	return		;funcret
  6793  0042B2                     __end_of___aldiv:
  6794                           	opt stack 0
  6795                           tblptru	equ	0xFF8
  6796                           tblptrh	equ	0xFF7
  6797                           tblptrl	equ	0xFF6
  6798                           tablat	equ	0xFF5
  6799                           postinc0	equ	0xFEE
  6800                           wreg	equ	0xFE8
  6801                           postinc2	equ	0xFDE
  6802                           postdec2	equ	0xFDD
  6803                           fsr2h	equ	0xFDA
  6804                           fsr2l	equ	0xFD9
  6805                           status	equ	0xFD8
  6806                           
  6807 ;; *************** function _SetDCEPWM1 *****************
  6808 ;; Defined at:
  6809 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\PWM\ew1setdc.c"
  6810 ;; Parameters:    Size  Location     Type
  6811 ;;  dutycycle       2    0[BANK0 ] unsigned int 
  6812 ;; Auto vars:     Size  Location     Type
  6813 ;;  DCycle          2    4[BANK0 ] struct PWMDC
  6814 ;; Return value:  Size  Location     Type
  6815 ;;		None               void
  6816 ;; Registers used:
  6817 ;;		wreg, status,2, status,0
  6818 ;; Tracked objects:
  6819 ;;		On entry : 0/0
  6820 ;;		On exit  : 0/0
  6821 ;;		Unchanged: 0/0
  6822 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6823 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6824 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6825 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6826 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6827 ;;Total ram usage:        6 bytes
  6828 ;; Hardware stack levels used:    1
  6829 ;; Hardware stack levels required when called:    2
  6830 ;; This function calls:
  6831 ;;		Nothing
  6832 ;; This function is called by:
  6833 ;;		_main
  6834 ;;		_rampe
  6835 ;; This function uses a non-reentrant model
  6836 ;;
  6837                           
  6838                           	psect	text25
  6839  004CEC                     __ptext25:
  6840                           	opt stack 0
  6841  004CEC                     _SetDCEPWM1:
  6842                           	opt stack 27
  6843                           
  6844                           ; BSR set to: 0
  6845                           ;incstack = 0
  6846  004CEC  C060  F062         	movff	SetDCEPWM1@dutycycle,??_SetDCEPWM1
  6847  004CF0  C061  F063         	movff	SetDCEPWM1@dutycycle+1,??_SetDCEPWM1+1
  6848  004CF4  0E06               	movlw	6
  6849  004CF6                     u8615:
  6850  004CF6  90D8               	bcf	status,0,c
  6851  004CF8  0100               	movlb	0	; () banked
  6852  004CFA  3762               	rlcf	??_SetDCEPWM1& (0+255),f,b
  6853  004CFC  3763               	rlcf	(??_SetDCEPWM1+1)& (0+255),f,b
  6854  004CFE  2EE8               	decfsz	wreg,f,c
  6855  004D00  D7FA               	goto	u8615
  6856  004D02  C062  F064         	movff	??_SetDCEPWM1,SetDCEPWM1@DCycle
  6857  004D06  C063  F065         	movff	??_SetDCEPWM1+1,SetDCEPWM1@DCycle+1
  6858                           
  6859                           ; BSR set to: 0
  6860  004D0A  C065  FFBB         	movff	SetDCEPWM1@DCycle+1,4027	;volatile
  6861  004D0E  C064  F062         	movff	SetDCEPWM1@DCycle,??_SetDCEPWM1
  6862  004D12  0100               	movlb	0	; () banked
  6863  004D14  90D8               	bcf	status,0,c
  6864  004D16  3362               	rrcf	??_SetDCEPWM1& (0+255),f,b
  6865  004D18  0100               	movlb	0	; () banked
  6866  004D1A  90D8               	bcf	status,0,c
  6867  004D1C  3362               	rrcf	??_SetDCEPWM1& (0+255),f,b
  6868  004D1E  0E30               	movlw	48
  6869  004D20  0100               	movlb	0	; () banked
  6870  004D22  1762               	andwf	??_SetDCEPWM1& (0+255),f,b
  6871  004D24  50BA               	movf	4026,w,c	;volatile
  6872  004D26  0BCF               	andlw	207
  6873  004D28  0100               	movlb	0	; () banked
  6874  004D2A  1162               	iorwf	??_SetDCEPWM1& (0+255),w,b
  6875  004D2C  6EBA               	movwf	4026,c	;volatile
  6876                           
  6877                           ; BSR set to: 0
  6878  004D2E  0012               	return		;funcret
  6879  004D30                     __end_of_SetDCEPWM1:
  6880                           	opt stack 0
  6881                           tblptru	equ	0xFF8
  6882                           tblptrh	equ	0xFF7
  6883                           tblptrl	equ	0xFF6
  6884                           tablat	equ	0xFF5
  6885                           postinc0	equ	0xFEE
  6886                           wreg	equ	0xFE8
  6887                           postinc2	equ	0xFDE
  6888                           postdec2	equ	0xFDD
  6889                           fsr2h	equ	0xFDA
  6890                           fsr2l	equ	0xFD9
  6891                           status	equ	0xFD8
  6892                           
  6893 ;; *************** function _configurazione_iniziale *****************
  6894 ;; Defined at:
  6895 ;;		line 302 in file "motore.c"
  6896 ;; Parameters:    Size  Location     Type
  6897 ;;		None
  6898 ;; Auto vars:     Size  Location     Type
  6899 ;;		None
  6900 ;; Return value:  Size  Location     Type
  6901 ;;		None               void
  6902 ;; Registers used:
  6903 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  6904 ;; Tracked objects:
  6905 ;;		On entry : 0/0
  6906 ;;		On exit  : 0/0
  6907 ;;		Unchanged: 0/0
  6908 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6909 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6910 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6911 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6912 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6913 ;;Total ram usage:        0 bytes
  6914 ;; Hardware stack levels used:    1
  6915 ;; Hardware stack levels required when called:    4
  6916 ;; This function calls:
  6917 ;;		_CANInitialize
  6918 ;;		_SetOutputEPWM1
  6919 ;;		_delay_ms
  6920 ;; This function is called by:
  6921 ;;		_main
  6922 ;; This function uses a non-reentrant model
  6923 ;;
  6924                           
  6925                           	psect	text26
  6926  004886                     __ptext26:
  6927                           	opt stack 0
  6928  004886                     _configurazione_iniziale:
  6929                           	opt stack 26
  6930                           
  6931                           ;motore.c: 305: CANInitialize(4, 6, 5, 1, 3, CAN_CONFIG_LINE_FILTER_OFF & CAN_CONFIG_SAM
      +                          PLE_ONCE & CAN_CONFIG_ALL_VALID_MSG & CAN_CONFIG_DBL_BUFFER_ON);
  6932                           
  6933                           ; BSR set to: 0
  6934                           ;incstack = 0
  6935  004886  0E06               	movlw	6
  6936  004888  0100               	movlb	0	; () banked
  6937  00488A  6F6E               	movwf	CANInitialize@phaseSeg1& (0+255),b
  6938  00488C  0E05               	movlw	5
  6939  00488E  0100               	movlb	0	; () banked
  6940  004890  6F6F               	movwf	CANInitialize@phaseSeg2& (0+255),b
  6941  004892  0E01               	movlw	1
  6942  004894  0100               	movlb	0	; () banked
  6943  004896  6F70               	movwf	CANInitialize@SJW& (0+255),b
  6944  004898  0E03               	movlw	3
  6945  00489A  0100               	movlb	0	; () banked
  6946  00489C  6F71               	movwf	CANInitialize@BRP& (0+255),b
  6947  00489E  0E9D               	movlw	157
  6948  0048A0  0100               	movlb	0	; () banked
  6949  0048A2  6F72               	movwf	CANInitialize@flags& (0+255),b
  6950  0048A4  0E04               	movlw	4
  6951  0048A6  EC77  F01C         	call	_CANInitialize
  6952                           
  6953                           ;motore.c: 306: RCONbits.IPEN = 1;
  6954  0048AA  8ED0               	bsf	4048,7,c	;volatile
  6955                           
  6956                           ;motore.c: 307: INTCONbits.INT0IF = 0;
  6957  0048AC  92F2               	bcf	intcon,1,c	;volatile
  6958                           
  6959                           ;motore.c: 308: PIR3bits.RXB1IF = 0;
  6960  0048AE  92A4               	bcf	4004,1,c	;volatile
  6961                           
  6962                           ;motore.c: 309: PIR3bits.RXB0IF = 0;
  6963  0048B0  90A4               	bcf	4004,0,c	;volatile
  6964                           
  6965                           ;motore.c: 311: IPR3bits.RXB1IP = 0;
  6966  0048B2  92A5               	bcf	4005,1,c	;volatile
  6967                           
  6968                           ;motore.c: 312: IPR3bits.RXB0IP = 0;
  6969  0048B4  90A5               	bcf	4005,0,c	;volatile
  6970                           
  6971                           ;motore.c: 313: INTCONbits.GIEH = 1;
  6972  0048B6  8EF2               	bsf	intcon,7,c	;volatile
  6973                           
  6974                           ;motore.c: 314: INTCONbits.GIEL = 1;
  6975  0048B8  8CF2               	bsf	intcon,6,c	;volatile
  6976                           
  6977                           ;motore.c: 317: T3CON = 0x01;
  6978  0048BA  0E01               	movlw	1
  6979  0048BC  6EB1               	movwf	4017,c	;volatile
  6980                           
  6981                           ;motore.c: 318: PIR2bits.TMR3IF = 0;
  6982  0048BE  92A1               	bcf	4001,1,c	;volatile
  6983                           
  6984                           ;motore.c: 319: IPR2bits.TMR3IP = 0;
  6985  0048C0  92A2               	bcf	4002,1,c	;volatile
  6986                           
  6987                           ;motore.c: 320: TMR3H = 0x63;
  6988  0048C2  0E63               	movlw	99
  6989  0048C4  6EB3               	movwf	4019,c	;volatile
  6990                           
  6991                           ;motore.c: 321: TMR3L = 0xC0;
  6992  0048C6  0EC0               	movlw	192
  6993  0048C8  6EB2               	movwf	4018,c	;volatile
  6994                           
  6995                           ;motore.c: 326: ADCON0bits.ADON = 1;
  6996  0048CA  80C2               	bsf	4034,0,c	;volatile
  6997                           
  6998                           ;motore.c: 327: ADCON0bits.CHS0 = 0;
  6999  0048CC  94C2               	bcf	4034,2,c	;volatile
  7000                           
  7001                           ;motore.c: 328: ADCON0bits.CHS1 = 0;
  7002  0048CE  96C2               	bcf	4034,3,c	;volatile
  7003                           
  7004                           ;motore.c: 329: ADCON0bits.CHS2 = 0;
  7005  0048D0  98C2               	bcf	4034,4,c	;volatile
  7006                           
  7007                           ;motore.c: 330: ADCON0bits.CHS3 = 0;
  7008  0048D2  9AC2               	bcf	4034,5,c	;volatile
  7009                           
  7010                           ;motore.c: 331: ADCON1bits.PCFG0 = 0;
  7011  0048D4  90C1               	bcf	4033,0,c	;volatile
  7012                           
  7013                           ;motore.c: 332: ADCON1bits.PCFG1 = 1;
  7014  0048D6  82C1               	bsf	4033,1,c	;volatile
  7015                           
  7016                           ;motore.c: 333: ADCON1bits.PCFG2 = 1;
  7017  0048D8  84C1               	bsf	4033,2,c	;volatile
  7018                           
  7019                           ;motore.c: 334: ADCON1bits.PCFG3 = 1;
  7020  0048DA  86C1               	bsf	4033,3,c	;volatile
  7021                           
  7022                           ;motore.c: 335: ADCON1bits.VCFG0 = 0;
  7023  0048DC  98C1               	bcf	4033,4,c	;volatile
  7024                           
  7025                           ;motore.c: 336: ADCON1bits.VCFG1 = 0;
  7026  0048DE  9AC1               	bcf	4033,5,c	;volatile
  7027                           
  7028                           ;motore.c: 337: ADCON2bits.ADCS0 = 1;
  7029  0048E0  80C0               	bsf	4032,0,c	;volatile
  7030                           
  7031                           ;motore.c: 338: ADCON2bits.ADCS1 = 0;
  7032  0048E2  92C0               	bcf	4032,1,c	;volatile
  7033                           
  7034                           ;motore.c: 339: ADCON2bits.ADCS2 = 1;
  7035  0048E4  84C0               	bsf	4032,2,c	;volatile
  7036                           
  7037                           ;motore.c: 340: ADCON2bits.ACQT0 = 0;
  7038  0048E6  96C0               	bcf	4032,3,c	;volatile
  7039                           
  7040                           ;motore.c: 341: ADCON2bits.ACQT1 = 1;
  7041  0048E8  88C0               	bsf	4032,4,c	;volatile
  7042                           
  7043                           ;motore.c: 342: ADCON2bits.ACQT2 = 1;
  7044  0048EA  8AC0               	bsf	4032,5,c	;volatile
  7045                           
  7046                           ;motore.c: 343: ADCON2bits.ADFM = 0;
  7047  0048EC  9EC0               	bcf	4032,7,c	;volatile
  7048                           
  7049                           ;motore.c: 346: PIE3bits.RXB1IE = 1;
  7050  0048EE  82A3               	bsf	4003,1,c	;volatile
  7051                           
  7052                           ;motore.c: 347: PIE3bits.RXB0IE = 1;
  7053  0048F0  80A3               	bsf	4003,0,c	;volatile
  7054                           
  7055                           ;motore.c: 348: PIE2bits.TMR3IE = 1;
  7056  0048F2  82A0               	bsf	4000,1,c	;volatile
  7057                           
  7058                           ;motore.c: 350: LATA = 0x00;
  7059  0048F4  0E00               	movlw	0
  7060  0048F6  6E89               	movwf	3977,c	;volatile
  7061                           
  7062                           ;motore.c: 351: TRISA = 0b01111101;
  7063  0048F8  0E7D               	movlw	125
  7064  0048FA  6E92               	movwf	3986,c	;volatile
  7065                           
  7066                           ;motore.c: 353: LATB = 0x00;
  7067  0048FC  0E00               	movlw	0
  7068  0048FE  6E8A               	movwf	3978,c	;volatile
  7069                           
  7070                           ;motore.c: 354: TRISB = 0b11111011;
  7071  004900  0EFB               	movlw	251
  7072  004902  6E93               	movwf	3987,c	;volatile
  7073                           
  7074                           ;motore.c: 356: LATC = 0x00;
  7075  004904  0E00               	movlw	0
  7076  004906  6E8B               	movwf	3979,c	;volatile
  7077                           
  7078                           ;motore.c: 357: TRISC = 0x00;
  7079  004908  0E00               	movlw	0
  7080  00490A  6E94               	movwf	3988,c	;volatile
  7081                           
  7082                           ;motore.c: 359: LATD = 0x00;
  7083  00490C  0E00               	movlw	0
  7084  00490E  6E8C               	movwf	3980,c	;volatile
  7085                           
  7086                           ;motore.c: 360: TRISD = 0x00;
  7087  004910  0E00               	movlw	0
  7088  004912  6E95               	movwf	3989,c	;volatile
  7089                           
  7090                           ;motore.c: 362: LATE = 0x00;
  7091  004914  0E00               	movlw	0
  7092  004916  6E8D               	movwf	3981,c	;volatile
  7093                           
  7094                           ;motore.c: 363: TRISE = 0xFF;
  7095  004918  6896               	setf	3990,c	;volatile
  7096                           
  7097                           ;motore.c: 364: delay_ms(2);
  7098  00491A  0E00               	movlw	0
  7099  00491C  0100               	movlb	0	; () banked
  7100  00491E  6F67               	movwf	(delay_ms@value_ms+1)& (0+255),b
  7101  004920  0E02               	movlw	2
  7102  004922  6F66               	movwf	delay_ms@value_ms& (0+255),b
  7103  004924  ECEC  F026         	call	_delay_ms	;wreg free
  7104                           
  7105                           ;motore.c: 365: SetOutputEPWM1(0b01111111, 0b11111100);
  7106  004928  0EFC               	movlw	252
  7107  00492A  0100               	movlb	0	; () banked
  7108  00492C  6F60               	movwf	SetOutputEPWM1@outputmode& (0+255),b
  7109  00492E  0E7F               	movlw	127
  7110  004930  ECFD  F025         	call	_SetOutputEPWM1
  7111  004934  0012               	return		;funcret
  7112  004936                     __end_of_configurazione_iniziale:
  7113                           	opt stack 0
  7114                           tblptru	equ	0xFF8
  7115                           tblptrh	equ	0xFF7
  7116                           tblptrl	equ	0xFF6
  7117                           tablat	equ	0xFF5
  7118                           intcon	equ	0xFF2
  7119                           postinc0	equ	0xFEE
  7120                           wreg	equ	0xFE8
  7121                           postinc2	equ	0xFDE
  7122                           postdec2	equ	0xFDD
  7123                           fsr2h	equ	0xFDA
  7124                           fsr2l	equ	0xFD9
  7125                           status	equ	0xFD8
  7126                           
  7127 ;; *************** function _delay_ms *****************
  7128 ;; Defined at:
  7129 ;;		line 61 in file "delay.c"
  7130 ;; Parameters:    Size  Location     Type
  7131 ;;  value_ms        2    6[BANK0 ] unsigned int 
  7132 ;; Auto vars:     Size  Location     Type
  7133 ;;		None
  7134 ;; Return value:  Size  Location     Type
  7135 ;;		None               void
  7136 ;; Registers used:
  7137 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  7138 ;; Tracked objects:
  7139 ;;		On entry : 0/0
  7140 ;;		On exit  : 0/0
  7141 ;;		Unchanged: 0/0
  7142 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7143 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7144 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7145 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7146 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7147 ;;Total ram usage:        2 bytes
  7148 ;; Hardware stack levels used:    1
  7149 ;; Hardware stack levels required when called:    3
  7150 ;; This function calls:
  7151 ;;		___wmul
  7152 ;; This function is called by:
  7153 ;;		_main
  7154 ;;		_configurazione_iniziale
  7155 ;;		_delay_s
  7156 ;; This function uses a non-reentrant model
  7157 ;;
  7158                           
  7159                           	psect	text27
  7160  004DD8                     __ptext27:
  7161                           	opt stack 0
  7162  004DD8                     _delay_ms:
  7163                           	opt stack 27
  7164                           
  7165                           ;delay.c: 73: clock_counter_reference = value_ms * delay_quartz_frequency_value;
  7166                           
  7167                           ;incstack = 0
  7168  004DD8  C041  F060         	movff	_delay_quartz_frequency_value,___wmul@multiplier	;volatile
  7169  004DDC  0100               	movlb	0	; () banked
  7170  004DDE  6B61               	clrf	(___wmul@multiplier+1)& (0+255),b
  7171  004DE0  C066  F062         	movff	delay_ms@value_ms,___wmul@multiplicand
  7172  004DE4  C067  F063         	movff	delay_ms@value_ms+1,___wmul@multiplicand+1
  7173  004DE8  ECB6  F026         	call	___wmul	;wreg free
  7174  004DEC  C060  F02F         	movff	?___wmul,_clock_counter_reference	;volatile
  7175  004DF0  C061  F030         	movff	?___wmul+1,_clock_counter_reference+1	;volatile
  7176                           
  7177                           ;delay.c: 75: while (clock_counter_reference) {
  7178  004DF4  D006               	goto	l575
  7179  004DF6                     l6469:
  7180                           
  7181                           ;delay.c: 85: _delay(240);
  7182  004DF6  0E50               	movlw	80
  7183  004DF8                     u9297:
  7184  004DF8  2EE8               	decfsz	wreg,f,c
  7185  004DFA  D7FE               	goto	u9297
  7186                           
  7187                           ;delay.c: 88: clock_counter_reference--;
  7188  004DFC  062F               	decf	_clock_counter_reference,f,c	;volatile
  7189  004DFE  A0D8               	btfss	status,0,c
  7190  004E00  0630               	decf	_clock_counter_reference+1,f,c	;volatile
  7191  004E02                     l575:
  7192  004E02  502F               	movf	_clock_counter_reference,w,c	;volatile
  7193  004E04  1030               	iorwf	_clock_counter_reference+1,w,c	;volatile
  7194  004E06  A4D8               	btfss	status,2,c
  7195  004E08  D7F6               	goto	l6469
  7196  004E0A  0012               	return		;funcret
  7197  004E0C                     __end_of_delay_ms:
  7198                           	opt stack 0
  7199                           tblptru	equ	0xFF8
  7200                           tblptrh	equ	0xFF7
  7201                           tblptrl	equ	0xFF6
  7202                           tablat	equ	0xFF5
  7203                           intcon	equ	0xFF2
  7204                           postinc0	equ	0xFEE
  7205                           wreg	equ	0xFE8
  7206                           postinc2	equ	0xFDE
  7207                           postdec2	equ	0xFDD
  7208                           fsr2h	equ	0xFDA
  7209                           fsr2l	equ	0xFD9
  7210                           status	equ	0xFD8
  7211                           
  7212 ;; *************** function _SetOutputEPWM1 *****************
  7213 ;; Defined at:
  7214 ;;		line 18 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\PWM\ew1setoc.c"
  7215 ;; Parameters:    Size  Location     Type
  7216 ;;  outputconfig    1    wreg     unsigned char 
  7217 ;;  outputmode      1    0[BANK0 ] unsigned char 
  7218 ;; Auto vars:     Size  Location     Type
  7219 ;;  outputconfig    1    1[BANK0 ] unsigned char 
  7220 ;; Return value:  Size  Location     Type
  7221 ;;		None               void
  7222 ;; Registers used:
  7223 ;;		wreg, status,2, status,0
  7224 ;; Tracked objects:
  7225 ;;		On entry : 0/0
  7226 ;;		On exit  : 0/0
  7227 ;;		Unchanged: 0/0
  7228 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7229 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7230 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7231 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7232 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7233 ;;Total ram usage:        2 bytes
  7234 ;; Hardware stack levels used:    1
  7235 ;; Hardware stack levels required when called:    2
  7236 ;; This function calls:
  7237 ;;		Nothing
  7238 ;; This function is called by:
  7239 ;;		_main
  7240 ;;		_rampe
  7241 ;;		_configurazione_iniziale
  7242 ;; This function uses a non-reentrant model
  7243 ;;
  7244                           
  7245                           	psect	text28
  7246  004BFA                     __ptext28:
  7247                           	opt stack 0
  7248  004BFA                     _SetOutputEPWM1:
  7249                           	opt stack 27
  7250                           
  7251                           ;incstack = 0
  7252                           ;SetOutputEPWM1@outputconfig stored from wreg
  7253  004BFA  0100               	movlb	0	; () banked
  7254  004BFC  6F61               	movwf	SetOutputEPWM1@outputconfig& (0+255),b
  7255                           
  7256                           ; BSR set to: 0
  7257  004BFE  50BA               	movf	4026,w,c	;volatile
  7258  004C00  09C0               	iorlw	192
  7259  004C02  0100               	movlb	0	; () banked
  7260  004C04  1561               	andwf	SetOutputEPWM1@outputconfig& (0+255),w,b
  7261  004C06  6EBA               	movwf	4026,c	;volatile
  7262  004C08  50BA               	movf	4026,w,c	;volatile
  7263  004C0A  090F               	iorlw	15
  7264  004C0C  0100               	movlb	0	; () banked
  7265  004C0E  1560               	andwf	SetOutputEPWM1@outputmode& (0+255),w,b
  7266  004C10  6EBA               	movwf	4026,c	;volatile
  7267  004C12  0E3F               	movlw	63
  7268  004C14  0100               	movlb	0	; () banked
  7269  004C16  1961               	xorwf	SetOutputEPWM1@outputconfig& (0+255),w,b
  7270  004C18  A4D8               	btfss	status,2,c
  7271  004C1A  D002               	goto	l6477
  7272                           
  7273                           ; BSR set to: 0
  7274  004C1C  9895               	bcf	3989,4,c	;volatile
  7275  004C1E  0012               	return	
  7276  004C20                     l6477:
  7277                           
  7278                           ; BSR set to: 0
  7279  004C20  0EBF               	movlw	191
  7280  004C22  0100               	movlb	0	; () banked
  7281  004C24  1961               	xorwf	SetOutputEPWM1@outputconfig& (0+255),w,b
  7282  004C26  A4D8               	btfss	status,2,c
  7283  004C28  D003               	goto	l6481
  7284                           
  7285                           ; BSR set to: 0
  7286  004C2A  9895               	bcf	3989,4,c	;volatile
  7287  004C2C  9A95               	bcf	3989,5,c	;volatile
  7288  004C2E  0012               	return	
  7289  004C30                     l6481:
  7290                           
  7291                           ; BSR set to: 0
  7292  004C30  0E7F               	movlw	127
  7293  004C32  0100               	movlb	0	; () banked
  7294  004C34  1961               	xorwf	SetOutputEPWM1@outputconfig& (0+255),w,b
  7295  004C36  B4D8               	btfsc	status,2,c
  7296  004C38  D004               	goto	l790
  7297                           
  7298                           ; BSR set to: 0
  7299  004C3A  0100               	movlb	0	; () banked
  7300  004C3C  2961               	incf	SetOutputEPWM1@outputconfig& (0+255),w,b
  7301  004C3E  A4D8               	btfss	status,2,c
  7302  004C40  0012               	return	
  7303  004C42                     l790:
  7304                           
  7305                           ; BSR set to: 0
  7306  004C42  9895               	bcf	3989,4,c	;volatile
  7307  004C44  9A95               	bcf	3989,5,c	;volatile
  7308  004C46  9C95               	bcf	3989,6,c	;volatile
  7309  004C48  9E95               	bcf	3989,7,c	;volatile
  7310                           
  7311                           ; BSR set to: 0
  7312                           
  7313                           ; BSR set to: 0
  7314  004C4A  0012               	return	
  7315                           
  7316                           ; BSR set to: 0
  7317                           
  7318                           ; BSR set to: 0
  7319  004C4C  0012               	return		;funcret
  7320  004C4E                     __end_of_SetOutputEPWM1:
  7321                           	opt stack 0
  7322                           tblptru	equ	0xFF8
  7323                           tblptrh	equ	0xFF7
  7324                           tblptrl	equ	0xFF6
  7325                           tablat	equ	0xFF5
  7326                           intcon	equ	0xFF2
  7327                           postinc0	equ	0xFEE
  7328                           wreg	equ	0xFE8
  7329                           postinc2	equ	0xFDE
  7330                           postdec2	equ	0xFDD
  7331                           fsr2h	equ	0xFDA
  7332                           fsr2l	equ	0xFD9
  7333                           status	equ	0xFD8
  7334                           
  7335 ;; *************** function _CANInitialize *****************
  7336 ;; Defined at:
  7337 ;;		line 218 in file "CANlib.h"
  7338 ;; Parameters:    Size  Location     Type
  7339 ;;  propSeg         1    wreg     unsigned char 
  7340 ;;  phaseSeg1       1   14[BANK0 ] unsigned char 
  7341 ;;  phaseSeg2       1   15[BANK0 ] unsigned char 
  7342 ;;  SJW             1   16[BANK0 ] unsigned char 
  7343 ;;  BRP             1   17[BANK0 ] unsigned char 
  7344 ;;  flags           1   18[BANK0 ] enum E16928
  7345 ;; Auto vars:     Size  Location     Type
  7346 ;;  propSeg         1   23[BANK0 ] unsigned char 
  7347 ;;  FilterConfig    1   25[BANK0 ] unsigned char 
  7348 ;;  FilterConfig    1   24[BANK0 ] unsigned char 
  7349 ;; Return value:  Size  Location     Type
  7350 ;;		None               void
  7351 ;; Registers used:
  7352 ;;		wreg, status,2, status,0, cstack
  7353 ;; Tracked objects:
  7354 ;;		On entry : 0/0
  7355 ;;		On exit  : 0/0
  7356 ;;		Unchanged: 0/0
  7357 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7358 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7359 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7360 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7361 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7362 ;;Total ram usage:       12 bytes
  7363 ;; Hardware stack levels used:    1
  7364 ;; Hardware stack levels required when called:    3
  7365 ;; This function calls:
  7366 ;;		_CANOperationMode
  7367 ;;		_CANSetFilter
  7368 ;;		_CANSetMask
  7369 ;; This function is called by:
  7370 ;;		_configurazione_iniziale
  7371 ;; This function uses a non-reentrant model
  7372 ;;
  7373                           
  7374                           	psect	text29
  7375  0038EE                     __ptext29:
  7376                           	opt stack 0
  7377  0038EE                     _CANInitialize:
  7378                           	opt stack 26
  7379                           
  7380                           ; BSR set to: 0
  7381                           ;incstack = 0
  7382                           ;CANInitialize@propSeg stored from wreg
  7383  0038EE  0100               	movlb	0	; () banked
  7384  0038F0  6F77               	movwf	CANInitialize@propSeg& (0+255),b
  7385                           
  7386                           ; BSR set to: 0
  7387                           ;CANlib.h: 220: BYTE FilterConfig1;
  7388                           ;CANlib.h: 221: BYTE FilterConfig2;
  7389                           ;CANlib.h: 223: CANOperationMode(CAN_OP_MODE_CONFIG);
  7390  0038F2  0E80               	movlw	128
  7391  0038F4  EC59  F027         	call	_CANOperationMode
  7392                           
  7393                           ;CANlib.h: 225: BRGCON1 = 0x00;
  7394  0038F8  0E00               	movlw	0
  7395  0038FA  6E70               	movwf	3952,c	;volatile
  7396                           
  7397                           ;CANlib.h: 226: BRGCON2 = 0x00;
  7398  0038FC  0E00               	movlw	0
  7399  0038FE  6E71               	movwf	3953,c	;volatile
  7400                           
  7401                           ;CANlib.h: 227: BRGCON3 = 0x00;
  7402  003900  0E00               	movlw	0
  7403  003902  6E72               	movwf	3954,c	;volatile
  7404                           
  7405                           ;CANlib.h: 229: SJW= SJW << 6;
  7406  003904  0100               	movlb	0	; () banked
  7407  003906  4170               	rrncf	CANInitialize@SJW& (0+255),w,b
  7408  003908  42E8               	rrncf	wreg,f,c
  7409  00390A  0BC0               	andlw	192
  7410  00390C  0100               	movlb	0	; () banked
  7411  00390E  6F70               	movwf	CANInitialize@SJW& (0+255),b
  7412                           
  7413                           ; BSR set to: 0
  7414                           ;CANlib.h: 230: BRGCON1 |= SJW;
  7415  003910  0100               	movlb	0	; () banked
  7416  003912  5170               	movf	CANInitialize@SJW& (0+255),w,b
  7417  003914  1270               	iorwf	3952,f,c	;volatile
  7418                           
  7419                           ; BSR set to: 0
  7420                           ;CANlib.h: 231: BRGCON1 |= BRP;
  7421  003916  0100               	movlb	0	; () banked
  7422  003918  5171               	movf	CANInitialize@BRP& (0+255),w,b
  7423  00391A  1270               	iorwf	3952,f,c	;volatile
  7424                           
  7425                           ; BSR set to: 0
  7426                           ;CANlib.h: 233: BRGCON2 |= propSeg;
  7427  00391C  0100               	movlb	0	; () banked
  7428  00391E  5177               	movf	CANInitialize@propSeg& (0+255),w,b
  7429  003920  1271               	iorwf	3953,f,c	;volatile
  7430                           
  7431                           ; BSR set to: 0
  7432                           ;CANlib.h: 234: phaseSeg1 = phaseSeg1 <<3;
  7433  003922  0100               	movlb	0	; () banked
  7434  003924  396E               	swapf	CANInitialize@phaseSeg1& (0+255),w,b
  7435  003926  42E8               	rrncf	wreg,f,c
  7436  003928  0BF8               	andlw	248
  7437  00392A  0100               	movlb	0	; () banked
  7438  00392C  6F6E               	movwf	CANInitialize@phaseSeg1& (0+255),b
  7439                           
  7440                           ; BSR set to: 0
  7441                           ;CANlib.h: 235: BRGCON2 |= phaseSeg1;
  7442  00392E  0100               	movlb	0	; () banked
  7443  003930  516E               	movf	CANInitialize@phaseSeg1& (0+255),w,b
  7444  003932  1271               	iorwf	3953,f,c	;volatile
  7445                           
  7446                           ; BSR set to: 0
  7447                           ;CANlib.h: 237: if ( !(flags & CAN_CONFIG_SAMPLE_BIT) )
  7448  003934  0100               	movlb	0	; () banked
  7449  003936  A572               	btfss	CANInitialize@flags& (0+255),2,b
  7450                           
  7451                           ; BSR set to: 0
  7452                           ;CANlib.h: 238: BRGCON2bits.SAM= 1;
  7453  003938  8C71               	bsf	3953,6,c	;volatile
  7454                           
  7455                           ; BSR set to: 0
  7456                           ;CANlib.h: 240: if ( flags & CAN_CONFIG_PHSEG2_PRG_BIT )
  7457  00393A  0100               	movlb	0	; () banked
  7458  00393C  A172               	btfss	CANInitialize@flags& (0+255),0,b
  7459  00393E  D002               	goto	l6199
  7460                           
  7461                           ; BSR set to: 0
  7462                           ;CANlib.h: 241: BRGCON2bits.SEG2PHTS = 1;
  7463  003940  8E71               	bsf	3953,7,c	;volatile
  7464  003942  D000               	goto	l6199
  7465  003944                     l6199:
  7466                           
  7467                           ; BSR set to: 0
  7468                           ;CANlib.h: 243: BRGCON3 |= phaseSeg2;
  7469  003944  0100               	movlb	0	; () banked
  7470  003946  516F               	movf	CANInitialize@phaseSeg2& (0+255),w,b
  7471  003948  1272               	iorwf	3954,f,c	;volatile
  7472                           
  7473                           ; BSR set to: 0
  7474                           ;CANlib.h: 245: if ( flags & CAN_CONFIG_LINE_FILTER_BIT )
  7475  00394A  0100               	movlb	0	; () banked
  7476  00394C  A372               	btfss	CANInitialize@flags& (0+255),1,b
  7477  00394E  D002               	goto	l6205
  7478                           
  7479                           ; BSR set to: 0
  7480                           ;CANlib.h: 246: BRGCON3bits.WAKFIL = 1;
  7481  003950  8C72               	bsf	3954,6,c	;volatile
  7482  003952  D000               	goto	l6205
  7483  003954                     l6205:
  7484                           
  7485                           ; BSR set to: 0
  7486                           ;CANlib.h: 251: RXB0CON = flags & CAN_CONFIG_MSG_BITS;
  7487  003954  0100               	movlb	0	; () banked
  7488  003956  5172               	movf	CANInitialize@flags& (0+255),w,b
  7489  003958  0B60               	andlw	96
  7490  00395A  6E60               	movwf	3936,c	;volatile
  7491                           
  7492                           ;CANlib.h: 252: if ( (flags & CAN_CONFIG_DBL_BUFFER_BIT)== CAN_CONFIG_DBL_BUFFER_ON )
  7493  00395C  0100               	movlb	0	; () banked
  7494  00395E  5172               	movf	CANInitialize@flags& (0+255),w,b
  7495  003960  0B10               	andlw	16
  7496  003962  0AFF               	xorlw	255
  7497  003964  B4D8               	btfsc	status,2,c
  7498                           
  7499                           ; BSR set to: 0
  7500                           ;CANlib.h: 253: RXB0CONbits.RXB0DBEN = 1;
  7501  003966  8460               	bsf	3936,2,c	;volatile
  7502                           
  7503                           ; BSR set to: 0
  7504                           ;CANlib.h: 255: RXB1CON = RXB0CON;
  7505  003968  CF60 FF50          	movff	3936,3920	;volatile
  7506                           
  7507                           ; BSR set to: 0
  7508                           ;CANlib.h: 259: CANSetMask (CAN_MASK_B1, 0x00000000, CAN_CONFIG_XTD_MSG);
  7509  00396C  0E00               	movlw	0
  7510  00396E  0100               	movlb	0	; () banked
  7511  003970  6F60               	movwf	CANSetMask@mask& (0+255),b
  7512  003972  0E00               	movlw	0
  7513  003974  6F61               	movwf	(CANSetMask@mask+1)& (0+255),b
  7514  003976  0E00               	movlw	0
  7515  003978  6F62               	movwf	(CANSetMask@mask+2)& (0+255),b
  7516  00397A  0E00               	movlw	0
  7517  00397C  6F63               	movwf	(CANSetMask@mask+3)& (0+255),b
  7518  00397E  0EF7               	movlw	247
  7519  003980  0100               	movlb	0	; () banked
  7520  003982  6F64               	movwf	CANSetMask@type& (0+255),b
  7521  003984  0E01               	movlw	1
  7522  003986  EC83  F015         	call	_CANSetMask
  7523                           
  7524                           ;CANlib.h: 260: CANSetMask (CAN_MASK_B2, 0x00000000, CAN_CONFIG_XTD_MSG);
  7525  00398A  0E00               	movlw	0
  7526  00398C  0100               	movlb	0	; () banked
  7527  00398E  6F60               	movwf	CANSetMask@mask& (0+255),b
  7528  003990  0E00               	movlw	0
  7529  003992  6F61               	movwf	(CANSetMask@mask+1)& (0+255),b
  7530  003994  0E00               	movlw	0
  7531  003996  6F62               	movwf	(CANSetMask@mask+2)& (0+255),b
  7532  003998  0E00               	movlw	0
  7533  00399A  6F63               	movwf	(CANSetMask@mask+3)& (0+255),b
  7534  00399C  0EF7               	movlw	247
  7535  00399E  0100               	movlb	0	; () banked
  7536  0039A0  6F64               	movwf	CANSetMask@type& (0+255),b
  7537  0039A2  0E02               	movlw	2
  7538  0039A4  EC83  F015         	call	_CANSetMask
  7539                           
  7540                           ;CANlib.h: 263: switch( (flags & CAN_CONFIG_MSG_BITS) | ~CAN_CONFIG_MSG_BITS )
  7541  0039A8  D00F               	goto	l6217
  7542  0039AA                     l6211:
  7543                           
  7544                           ;CANlib.h: 266: FilterConfig1 = CAN_CONFIG_XTD_MSG;
  7545  0039AA  0EF7               	movlw	247
  7546  0039AC  0100               	movlb	0	; () banked
  7547  0039AE  6F78               	movwf	CANInitialize@FilterConfig1& (0+255),b
  7548  0039B0  D007               	goto	l6213
  7549  0039B2                     l364:
  7550                           
  7551                           ; BSR set to: 0
  7552                           ;CANlib.h: 271: FilterConfig1 = CAN_CONFIG_STD_MSG;
  7553  0039B2  0100               	movlb	0	; () banked
  7554  0039B4  6978               	setf	CANInitialize@FilterConfig1& (0+255),b
  7555                           
  7556                           ;CANlib.h: 272: FilterConfig2 = CAN_CONFIG_STD_MSG;
  7557  0039B6  0100               	movlb	0	; () banked
  7558  0039B8  6979               	setf	CANInitialize@FilterConfig2& (0+255),b
  7559                           
  7560                           ;CANlib.h: 273: break;
  7561  0039BA  D028               	goto	l6219
  7562  0039BC                     l365:
  7563                           
  7564                           ; BSR set to: 0
  7565                           ;CANlib.h: 275: FilterConfig1 = CAN_CONFIG_STD_MSG;
  7566  0039BC  0100               	movlb	0	; () banked
  7567  0039BE  6978               	setf	CANInitialize@FilterConfig1& (0+255),b
  7568  0039C0                     l6213:
  7569                           
  7570                           ; BSR set to: 0
  7571                           ;CANlib.h: 276: FilterConfig2 = CAN_CONFIG_XTD_MSG;
  7572  0039C0  0EF7               	movlw	247
  7573  0039C2  0100               	movlb	0	; () banked
  7574  0039C4  6F79               	movwf	CANInitialize@FilterConfig2& (0+255),b
  7575                           
  7576                           ; BSR set to: 0
  7577                           ;CANlib.h: 278: }
  7578                           
  7579                           ;CANlib.h: 277: break;
  7580  0039C6  D022               	goto	l6219
  7581  0039C8                     l6217:
  7582  0039C8  0E9F               	movlw	159
  7583  0039CA  0100               	movlb	0	; () banked
  7584  0039CC  6F73               	movwf	??_CANInitialize& (0+255),b
  7585  0039CE  0EFF               	movlw	255
  7586  0039D0  0100               	movlb	0	; () banked
  7587  0039D2  6F74               	movwf	(??_CANInitialize+1)& (0+255),b
  7588  0039D4  0100               	movlb	0	; () banked
  7589  0039D6  5172               	movf	CANInitialize@flags& (0+255),w,b
  7590  0039D8  0B60               	andlw	96
  7591  0039DA  0100               	movlb	0	; () banked
  7592  0039DC  6F75               	movwf	(??_CANInitialize+2)& (0+255),b
  7593  0039DE  6B76               	clrf	(??_CANInitialize+3)& (0+255),b
  7594  0039E0  0100               	movlb	0	; () banked
  7595  0039E2  5173               	movf	??_CANInitialize& (0+255),w,b
  7596  0039E4  0100               	movlb	0	; () banked
  7597  0039E6  1375               	iorwf	(??_CANInitialize+2)& (0+255),f,b
  7598  0039E8  0100               	movlb	0	; () banked
  7599  0039EA  5174               	movf	(??_CANInitialize+1)& (0+255),w,b
  7600  0039EC  0100               	movlb	0	; () banked
  7601  0039EE  1376               	iorwf	(??_CANInitialize+3)& (0+255),f,b
  7602                           
  7603                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7604                           ; Switch size 1, requested type "space"
  7605                           ; Number of cases is 1, Range of values is 0 to 0
  7606                           ; switch strategies available:
  7607                           ; Name         Instructions Cycles
  7608                           ; simple_byte            4     3 (average)
  7609                           ;	Chosen strategy is simple_byte
  7610  0039F0  0100               	movlb	0	; () banked
  7611  0039F2  5176               	movf	(??_CANInitialize+3)& (0+255),w,b
  7612  0039F4  0A00               	xorlw	0	; case 0
  7613  0039F6  A4D8               	btfss	status,2,c
  7614  0039F8  D7E1               	goto	l365
  7615                           
  7616                           ; BSR set to: 0
  7617                           ; Switch size 1, requested type "space"
  7618                           ; Number of cases is 2, Range of values is 191 to 223
  7619                           ; switch strategies available:
  7620                           ; Name         Instructions Cycles
  7621                           ; simple_byte            7     4 (average)
  7622                           ;	Chosen strategy is simple_byte
  7623  0039FA  0100               	movlb	0	; () banked
  7624  0039FC  5175               	movf	(??_CANInitialize+2)& (0+255),w,b
  7625  0039FE  0ABF               	xorlw	191	; case 191
  7626  003A00  B4D8               	btfsc	status,2,c
  7627  003A02  D7D7               	goto	l364
  7628  003A04  0A60               	xorlw	96	; case 223
  7629  003A06  B4D8               	btfsc	status,2,c
  7630  003A08  D7D0               	goto	l6211
  7631  003A0A  D7D8               	goto	l365
  7632  003A0C                     l6219:
  7633                           
  7634                           ; BSR set to: 0
  7635                           ;CANlib.h: 280: CANSetFilter(CAN_FILTER_B1_F1, 0, FilterConfig1);
  7636  003A0C  0E00               	movlw	0
  7637  003A0E  0100               	movlb	0	; () banked
  7638  003A10  6F60               	movwf	CANSetFilter@filter& (0+255),b
  7639  003A12  0E00               	movlw	0
  7640  003A14  6F61               	movwf	(CANSetFilter@filter+1)& (0+255),b
  7641  003A16  0E00               	movlw	0
  7642  003A18  6F62               	movwf	(CANSetFilter@filter+2)& (0+255),b
  7643  003A1A  0E00               	movlw	0
  7644  003A1C  6F63               	movwf	(CANSetFilter@filter+3)& (0+255),b
  7645  003A1E  C078  F064         	movff	CANInitialize@FilterConfig1,CANSetFilter@type
  7646  003A22  0E00               	movlw	0
  7647  003A24  ECA7  F006         	call	_CANSetFilter
  7648                           
  7649                           ;CANlib.h: 281: CANSetFilter(CAN_FILTER_B1_F2, 0, FilterConfig1);
  7650  003A28  0E00               	movlw	0
  7651  003A2A  0100               	movlb	0	; () banked
  7652  003A2C  6F60               	movwf	CANSetFilter@filter& (0+255),b
  7653  003A2E  0E00               	movlw	0
  7654  003A30  6F61               	movwf	(CANSetFilter@filter+1)& (0+255),b
  7655  003A32  0E00               	movlw	0
  7656  003A34  6F62               	movwf	(CANSetFilter@filter+2)& (0+255),b
  7657  003A36  0E00               	movlw	0
  7658  003A38  6F63               	movwf	(CANSetFilter@filter+3)& (0+255),b
  7659  003A3A  C078  F064         	movff	CANInitialize@FilterConfig1,CANSetFilter@type
  7660  003A3E  0E01               	movlw	1
  7661  003A40  ECA7  F006         	call	_CANSetFilter
  7662                           
  7663                           ;CANlib.h: 282: CANSetFilter(CAN_FILTER_B2_F1, 0, FilterConfig2);
  7664  003A44  0E00               	movlw	0
  7665  003A46  0100               	movlb	0	; () banked
  7666  003A48  6F60               	movwf	CANSetFilter@filter& (0+255),b
  7667  003A4A  0E00               	movlw	0
  7668  003A4C  6F61               	movwf	(CANSetFilter@filter+1)& (0+255),b
  7669  003A4E  0E00               	movlw	0
  7670  003A50  6F62               	movwf	(CANSetFilter@filter+2)& (0+255),b
  7671  003A52  0E00               	movlw	0
  7672  003A54  6F63               	movwf	(CANSetFilter@filter+3)& (0+255),b
  7673  003A56  C079  F064         	movff	CANInitialize@FilterConfig2,CANSetFilter@type
  7674  003A5A  0E02               	movlw	2
  7675  003A5C  ECA7  F006         	call	_CANSetFilter
  7676                           
  7677                           ;CANlib.h: 283: CANSetFilter(CAN_FILTER_B2_F2, 0, FilterConfig2);
  7678  003A60  0E00               	movlw	0
  7679  003A62  0100               	movlb	0	; () banked
  7680  003A64  6F60               	movwf	CANSetFilter@filter& (0+255),b
  7681  003A66  0E00               	movlw	0
  7682  003A68  6F61               	movwf	(CANSetFilter@filter+1)& (0+255),b
  7683  003A6A  0E00               	movlw	0
  7684  003A6C  6F62               	movwf	(CANSetFilter@filter+2)& (0+255),b
  7685  003A6E  0E00               	movlw	0
  7686  003A70  6F63               	movwf	(CANSetFilter@filter+3)& (0+255),b
  7687  003A72  C079  F064         	movff	CANInitialize@FilterConfig2,CANSetFilter@type
  7688  003A76  0E03               	movlw	3
  7689  003A78  ECA7  F006         	call	_CANSetFilter
  7690                           
  7691                           ;CANlib.h: 284: CANSetFilter(CAN_FILTER_B2_F3, 0, FilterConfig2);
  7692  003A7C  0E00               	movlw	0
  7693  003A7E  0100               	movlb	0	; () banked
  7694  003A80  6F60               	movwf	CANSetFilter@filter& (0+255),b
  7695  003A82  0E00               	movlw	0
  7696  003A84  6F61               	movwf	(CANSetFilter@filter+1)& (0+255),b
  7697  003A86  0E00               	movlw	0
  7698  003A88  6F62               	movwf	(CANSetFilter@filter+2)& (0+255),b
  7699  003A8A  0E00               	movlw	0
  7700  003A8C  6F63               	movwf	(CANSetFilter@filter+3)& (0+255),b
  7701  003A8E  C079  F064         	movff	CANInitialize@FilterConfig2,CANSetFilter@type
  7702  003A92  0E04               	movlw	4
  7703  003A94  ECA7  F006         	call	_CANSetFilter
  7704                           
  7705                           ;CANlib.h: 285: CANSetFilter(CAN_FILTER_B2_F4, 0, FilterConfig2);
  7706  003A98  0E00               	movlw	0
  7707  003A9A  0100               	movlb	0	; () banked
  7708  003A9C  6F60               	movwf	CANSetFilter@filter& (0+255),b
  7709  003A9E  0E00               	movlw	0
  7710  003AA0  6F61               	movwf	(CANSetFilter@filter+1)& (0+255),b
  7711  003AA2  0E00               	movlw	0
  7712  003AA4  6F62               	movwf	(CANSetFilter@filter+2)& (0+255),b
  7713  003AA6  0E00               	movlw	0
  7714  003AA8  6F63               	movwf	(CANSetFilter@filter+3)& (0+255),b
  7715  003AAA  C079  F064         	movff	CANInitialize@FilterConfig2,CANSetFilter@type
  7716  003AAE  0E05               	movlw	5
  7717  003AB0  ECA7  F006         	call	_CANSetFilter
  7718                           
  7719                           ;CANlib.h: 287: CANOperationMode(CAN_OP_MODE_NORMAL);
  7720  003AB4  0E00               	movlw	0
  7721  003AB6  EC59  F027         	call	_CANOperationMode
  7722  003ABA  0012               	return		;funcret
  7723  003ABC                     __end_of_CANInitialize:
  7724                           	opt stack 0
  7725                           tblptru	equ	0xFF8
  7726                           tblptrh	equ	0xFF7
  7727                           tblptrl	equ	0xFF6
  7728                           tablat	equ	0xFF5
  7729                           intcon	equ	0xFF2
  7730                           postinc0	equ	0xFEE
  7731                           wreg	equ	0xFE8
  7732                           postinc2	equ	0xFDE
  7733                           postdec2	equ	0xFDD
  7734                           fsr2h	equ	0xFDA
  7735                           fsr2l	equ	0xFD9
  7736                           status	equ	0xFD8
  7737                           
  7738 ;; *************** function _CANSetMask *****************
  7739 ;; Defined at:
  7740 ;;		line 640 in file "CANlib.h"
  7741 ;; Parameters:    Size  Location     Type
  7742 ;;  numBuffer       1    wreg     enum E16962
  7743 ;;  mask            4    0[BANK0 ] unsigned long 
  7744 ;;  type            1    4[BANK0 ] enum E16928
  7745 ;; Auto vars:     Size  Location     Type
  7746 ;;  numBuffer       1    9[BANK0 ] enum E16962
  7747 ;;  tamp            4   10[BANK0 ] unsigned long 
  7748 ;; Return value:  Size  Location     Type
  7749 ;;		None               void
  7750 ;; Registers used:
  7751 ;;		wreg, status,2, status,0
  7752 ;; Tracked objects:
  7753 ;;		On entry : 0/0
  7754 ;;		On exit  : 0/0
  7755 ;;		Unchanged: 0/0
  7756 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7757 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7758 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7759 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7760 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7761 ;;Total ram usage:       14 bytes
  7762 ;; Hardware stack levels used:    1
  7763 ;; Hardware stack levels required when called:    2
  7764 ;; This function calls:
  7765 ;;		Nothing
  7766 ;; This function is called by:
  7767 ;;		_CANInitialize
  7768 ;; This function uses a non-reentrant model
  7769 ;;
  7770                           
  7771                           	psect	text30
  7772  002B06                     __ptext30:
  7773                           	opt stack 0
  7774  002B06                     _CANSetMask:
  7775                           	opt stack 26
  7776                           
  7777                           ;incstack = 0
  7778                           ;CANSetMask@numBuffer stored from wreg
  7779  002B06  0100               	movlb	0	; () banked
  7780  002B08  6F69               	movwf	CANSetMask@numBuffer& (0+255),b
  7781                           
  7782                           ; BSR set to: 0
  7783                           ;CANlib.h: 643: if ((numBuffer ==CAN_MASK_B1) && (type == CAN_CONFIG_STD_MSG))
  7784  002B0A  0100               	movlb	0	; () banked
  7785  002B0C  0569               	decf	CANSetMask@numBuffer& (0+255),w,b
  7786  002B0E  A4D8               	btfss	status,2,c
  7787  002B10  D057               	goto	l5705
  7788                           
  7789                           ; BSR set to: 0
  7790  002B12  0100               	movlb	0	; () banked
  7791  002B14  2964               	incf	CANSetMask@type& (0+255),w,b
  7792  002B16  A4D8               	btfss	status,2,c
  7793  002B18  D053               	goto	l5705
  7794                           
  7795                           ; BSR set to: 0
  7796                           ;CANlib.h: 644: {
  7797                           ;CANlib.h: 645: tamp = (mask >> 3);
  7798  002B1A  C060  F065         	movff	CANSetMask@mask,??_CANSetMask
  7799  002B1E  C061  F066         	movff	CANSetMask@mask+1,??_CANSetMask+1
  7800  002B22  C062  F067         	movff	CANSetMask@mask+2,??_CANSetMask+2
  7801  002B26  C063  F068         	movff	CANSetMask@mask+3,??_CANSetMask+3
  7802  002B2A  0E04               	movlw	4
  7803  002B2C  D006               	goto	u7060
  7804  002B2E                     u7065:
  7805  002B2E  0100               	movlb	0	; () banked
  7806  002B30  90D8               	bcf	status,0,c
  7807  002B32  3368               	rrcf	(??_CANSetMask+3)& (0+255),f,b
  7808  002B34  3367               	rrcf	(??_CANSetMask+2)& (0+255),f,b
  7809  002B36  3366               	rrcf	(??_CANSetMask+1)& (0+255),f,b
  7810  002B38  3365               	rrcf	??_CANSetMask& (0+255),f,b
  7811  002B3A                     u7060:
  7812  002B3A  2EE8               	decfsz	wreg,f,c
  7813  002B3C  D7F8               	goto	u7065
  7814  002B3E  C065  F06A         	movff	??_CANSetMask,CANSetMask@tamp
  7815  002B42  C066  F06B         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  7816  002B46  C067  F06C         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  7817  002B4A  C068  F06D         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  7818                           
  7819                           ; BSR set to: 0
  7820                           ;CANlib.h: 646: tamp = tamp & 0x000000FF;
  7821  002B4E  0100               	movlb	0	; () banked
  7822  002B50  516A               	movf	CANSetMask@tamp& (0+255),w,b
  7823  002B52  0100               	movlb	0	; () banked
  7824  002B54  6F6A               	movwf	CANSetMask@tamp& (0+255),b
  7825  002B56  6B6B               	clrf	(CANSetMask@tamp+1)& (0+255),b
  7826  002B58  6B6C               	clrf	(CANSetMask@tamp+2)& (0+255),b
  7827  002B5A  6B6D               	clrf	(CANSetMask@tamp+3)& (0+255),b
  7828                           
  7829                           ; BSR set to: 0
  7830                           ;CANlib.h: 647: RXM0SIDH = (unsigned char) tamp;
  7831  002B5C  C06A  FF18         	movff	CANSetMask@tamp,3864	;volatile
  7832                           
  7833                           ; BSR set to: 0
  7834                           ;CANlib.h: 649: tamp = mask & 0x00000007;
  7835  002B60  0E07               	movlw	7
  7836  002B62  0100               	movlb	0	; () banked
  7837  002B64  1560               	andwf	CANSetMask@mask& (0+255),w,b
  7838  002B66  0100               	movlb	0	; () banked
  7839  002B68  6F6A               	movwf	CANSetMask@tamp& (0+255),b
  7840  002B6A  0E00               	movlw	0
  7841  002B6C  0100               	movlb	0	; () banked
  7842  002B6E  1561               	andwf	(CANSetMask@mask+1)& (0+255),w,b
  7843  002B70  0100               	movlb	0	; () banked
  7844  002B72  6F6B               	movwf	(CANSetMask@tamp+1)& (0+255),b
  7845  002B74  0E00               	movlw	0
  7846  002B76  0100               	movlb	0	; () banked
  7847  002B78  1562               	andwf	(CANSetMask@mask+2)& (0+255),w,b
  7848  002B7A  0100               	movlb	0	; () banked
  7849  002B7C  6F6C               	movwf	(CANSetMask@tamp+2)& (0+255),b
  7850  002B7E  0E00               	movlw	0
  7851  002B80  0100               	movlb	0	; () banked
  7852  002B82  1563               	andwf	(CANSetMask@mask+3)& (0+255),w,b
  7853  002B84  0100               	movlb	0	; () banked
  7854  002B86  6F6D               	movwf	(CANSetMask@tamp+3)& (0+255),b
  7855                           
  7856                           ; BSR set to: 0
  7857                           ;CANlib.h: 650: tamp = tamp << 5;
  7858  002B88  C06A  F065         	movff	CANSetMask@tamp,??_CANSetMask
  7859  002B8C  C06B  F066         	movff	CANSetMask@tamp+1,??_CANSetMask+1
  7860  002B90  C06C  F067         	movff	CANSetMask@tamp+2,??_CANSetMask+2
  7861  002B94  C06D  F068         	movff	CANSetMask@tamp+3,??_CANSetMask+3
  7862  002B98  0E05               	movlw	5
  7863  002B9A                     u7075:
  7864  002B9A  90D8               	bcf	status,0,c
  7865  002B9C  0100               	movlb	0	; () banked
  7866  002B9E  3765               	rlcf	??_CANSetMask& (0+255),f,b
  7867  002BA0  3766               	rlcf	(??_CANSetMask+1)& (0+255),f,b
  7868  002BA2  3767               	rlcf	(??_CANSetMask+2)& (0+255),f,b
  7869  002BA4  3768               	rlcf	(??_CANSetMask+3)& (0+255),f,b
  7870  002BA6  2EE8               	decfsz	wreg,f,c
  7871  002BA8  D7F8               	goto	u7075
  7872  002BAA  C065  F06A         	movff	??_CANSetMask,CANSetMask@tamp
  7873  002BAE  C066  F06B         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  7874  002BB2  C067  F06C         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  7875  002BB6  C068  F06D         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  7876                           
  7877                           ; BSR set to: 0
  7878                           ;CANlib.h: 651: RXM0SIDL = (unsigned char) tamp;
  7879  002BBA  C06A  FF19         	movff	CANSetMask@tamp,3865	;volatile
  7880  002BBE  D000               	goto	l5705
  7881  002BC0                     l5705:
  7882                           
  7883                           ; BSR set to: 0
  7884                           ;CANlib.h: 652: }
  7885                           ;CANlib.h: 654: if ((numBuffer ==CAN_MASK_B2) && (type == CAN_CONFIG_STD_MSG))
  7886  002BC0  0E02               	movlw	2
  7887  002BC2  0100               	movlb	0	; () banked
  7888  002BC4  1969               	xorwf	CANSetMask@numBuffer& (0+255),w,b
  7889  002BC6  A4D8               	btfss	status,2,c
  7890  002BC8  D057               	goto	l5721
  7891                           
  7892                           ; BSR set to: 0
  7893  002BCA  0100               	movlb	0	; () banked
  7894  002BCC  2964               	incf	CANSetMask@type& (0+255),w,b
  7895  002BCE  A4D8               	btfss	status,2,c
  7896  002BD0  D053               	goto	l5721
  7897                           
  7898                           ; BSR set to: 0
  7899                           ;CANlib.h: 655: {
  7900                           ;CANlib.h: 656: tamp = (mask >> 3);
  7901  002BD2  C060  F065         	movff	CANSetMask@mask,??_CANSetMask
  7902  002BD6  C061  F066         	movff	CANSetMask@mask+1,??_CANSetMask+1
  7903  002BDA  C062  F067         	movff	CANSetMask@mask+2,??_CANSetMask+2
  7904  002BDE  C063  F068         	movff	CANSetMask@mask+3,??_CANSetMask+3
  7905  002BE2  0E04               	movlw	4
  7906  002BE4  D006               	goto	u7100
  7907  002BE6                     u7105:
  7908  002BE6  0100               	movlb	0	; () banked
  7909  002BE8  90D8               	bcf	status,0,c
  7910  002BEA  3368               	rrcf	(??_CANSetMask+3)& (0+255),f,b
  7911  002BEC  3367               	rrcf	(??_CANSetMask+2)& (0+255),f,b
  7912  002BEE  3366               	rrcf	(??_CANSetMask+1)& (0+255),f,b
  7913  002BF0  3365               	rrcf	??_CANSetMask& (0+255),f,b
  7914  002BF2                     u7100:
  7915  002BF2  2EE8               	decfsz	wreg,f,c
  7916  002BF4  D7F8               	goto	u7105
  7917  002BF6  C065  F06A         	movff	??_CANSetMask,CANSetMask@tamp
  7918  002BFA  C066  F06B         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  7919  002BFE  C067  F06C         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  7920  002C02  C068  F06D         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  7921                           
  7922                           ; BSR set to: 0
  7923                           ;CANlib.h: 657: tamp = tamp & 0x000000FF;
  7924  002C06  0100               	movlb	0	; () banked
  7925  002C08  516A               	movf	CANSetMask@tamp& (0+255),w,b
  7926  002C0A  0100               	movlb	0	; () banked
  7927  002C0C  6F6A               	movwf	CANSetMask@tamp& (0+255),b
  7928  002C0E  6B6B               	clrf	(CANSetMask@tamp+1)& (0+255),b
  7929  002C10  6B6C               	clrf	(CANSetMask@tamp+2)& (0+255),b
  7930  002C12  6B6D               	clrf	(CANSetMask@tamp+3)& (0+255),b
  7931                           
  7932                           ; BSR set to: 0
  7933                           ;CANlib.h: 658: RXM1SIDH = (unsigned char) tamp;
  7934  002C14  C06A  FF1C         	movff	CANSetMask@tamp,3868	;volatile
  7935                           
  7936                           ; BSR set to: 0
  7937                           ;CANlib.h: 660: tamp = mask & 0x00000007;
  7938  002C18  0E07               	movlw	7
  7939  002C1A  0100               	movlb	0	; () banked
  7940  002C1C  1560               	andwf	CANSetMask@mask& (0+255),w,b
  7941  002C1E  0100               	movlb	0	; () banked
  7942  002C20  6F6A               	movwf	CANSetMask@tamp& (0+255),b
  7943  002C22  0E00               	movlw	0
  7944  002C24  0100               	movlb	0	; () banked
  7945  002C26  1561               	andwf	(CANSetMask@mask+1)& (0+255),w,b
  7946  002C28  0100               	movlb	0	; () banked
  7947  002C2A  6F6B               	movwf	(CANSetMask@tamp+1)& (0+255),b
  7948  002C2C  0E00               	movlw	0
  7949  002C2E  0100               	movlb	0	; () banked
  7950  002C30  1562               	andwf	(CANSetMask@mask+2)& (0+255),w,b
  7951  002C32  0100               	movlb	0	; () banked
  7952  002C34  6F6C               	movwf	(CANSetMask@tamp+2)& (0+255),b
  7953  002C36  0E00               	movlw	0
  7954  002C38  0100               	movlb	0	; () banked
  7955  002C3A  1563               	andwf	(CANSetMask@mask+3)& (0+255),w,b
  7956  002C3C  0100               	movlb	0	; () banked
  7957  002C3E  6F6D               	movwf	(CANSetMask@tamp+3)& (0+255),b
  7958                           
  7959                           ; BSR set to: 0
  7960                           ;CANlib.h: 661: tamp = tamp << 5;
  7961  002C40  C06A  F065         	movff	CANSetMask@tamp,??_CANSetMask
  7962  002C44  C06B  F066         	movff	CANSetMask@tamp+1,??_CANSetMask+1
  7963  002C48  C06C  F067         	movff	CANSetMask@tamp+2,??_CANSetMask+2
  7964  002C4C  C06D  F068         	movff	CANSetMask@tamp+3,??_CANSetMask+3
  7965  002C50  0E05               	movlw	5
  7966  002C52                     u7115:
  7967  002C52  90D8               	bcf	status,0,c
  7968  002C54  0100               	movlb	0	; () banked
  7969  002C56  3765               	rlcf	??_CANSetMask& (0+255),f,b
  7970  002C58  3766               	rlcf	(??_CANSetMask+1)& (0+255),f,b
  7971  002C5A  3767               	rlcf	(??_CANSetMask+2)& (0+255),f,b
  7972  002C5C  3768               	rlcf	(??_CANSetMask+3)& (0+255),f,b
  7973  002C5E  2EE8               	decfsz	wreg,f,c
  7974  002C60  D7F8               	goto	u7115
  7975  002C62  C065  F06A         	movff	??_CANSetMask,CANSetMask@tamp
  7976  002C66  C066  F06B         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  7977  002C6A  C067  F06C         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  7978  002C6E  C068  F06D         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  7979                           
  7980                           ; BSR set to: 0
  7981                           ;CANlib.h: 662: RXM1SIDL = (unsigned char) tamp;
  7982  002C72  C06A  FF1D         	movff	CANSetMask@tamp,3869	;volatile
  7983  002C76  D000               	goto	l5721
  7984  002C78                     l5721:
  7985                           
  7986                           ; BSR set to: 0
  7987                           ;CANlib.h: 663: }
  7988                           ;CANlib.h: 665: if ((numBuffer ==CAN_MASK_B1) && (type == CAN_CONFIG_XTD_MSG))
  7989  002C78  0100               	movlb	0	; () banked
  7990  002C7A  0569               	decf	CANSetMask@numBuffer& (0+255),w,b
  7991  002C7C  A4D8               	btfss	status,2,c
  7992  002C7E  D089               	goto	l5753
  7993                           
  7994                           ; BSR set to: 0
  7995  002C80  0EF7               	movlw	247
  7996  002C82  0100               	movlb	0	; () banked
  7997  002C84  1964               	xorwf	CANSetMask@type& (0+255),w,b
  7998  002C86  A4D8               	btfss	status,2,c
  7999  002C88  D084               	goto	l5753
  8000                           
  8001                           ; BSR set to: 0
  8002                           ;CANlib.h: 666: {
  8003                           ;CANlib.h: 667: tamp = mask & 0x000000FF;
  8004  002C8A  0100               	movlb	0	; () banked
  8005  002C8C  5160               	movf	CANSetMask@mask& (0+255),w,b
  8006  002C8E  0100               	movlb	0	; () banked
  8007  002C90  6F6A               	movwf	CANSetMask@tamp& (0+255),b
  8008  002C92  6B6B               	clrf	(CANSetMask@tamp+1)& (0+255),b
  8009  002C94  6B6C               	clrf	(CANSetMask@tamp+2)& (0+255),b
  8010  002C96  6B6D               	clrf	(CANSetMask@tamp+3)& (0+255),b
  8011                           
  8012                           ; BSR set to: 0
  8013                           ;CANlib.h: 668: RXM0EIDL = (unsigned char) tamp;
  8014  002C98  C06A  FF1B         	movff	CANSetMask@tamp,3867	;volatile
  8015                           
  8016                           ; BSR set to: 0
  8017                           ;CANlib.h: 670: tamp = mask & 0x0000FF00;
  8018  002C9C  0E00               	movlw	0
  8019  002C9E  0100               	movlb	0	; () banked
  8020  002CA0  1560               	andwf	CANSetMask@mask& (0+255),w,b
  8021  002CA2  0100               	movlb	0	; () banked
  8022  002CA4  6F6A               	movwf	CANSetMask@tamp& (0+255),b
  8023  002CA6  0EFF               	movlw	255
  8024  002CA8  0100               	movlb	0	; () banked
  8025  002CAA  1561               	andwf	(CANSetMask@mask+1)& (0+255),w,b
  8026  002CAC  0100               	movlb	0	; () banked
  8027  002CAE  6F6B               	movwf	(CANSetMask@tamp+1)& (0+255),b
  8028  002CB0  0E00               	movlw	0
  8029  002CB2  0100               	movlb	0	; () banked
  8030  002CB4  1562               	andwf	(CANSetMask@mask+2)& (0+255),w,b
  8031  002CB6  0100               	movlb	0	; () banked
  8032  002CB8  6F6C               	movwf	(CANSetMask@tamp+2)& (0+255),b
  8033  002CBA  0E00               	movlw	0
  8034  002CBC  0100               	movlb	0	; () banked
  8035  002CBE  1563               	andwf	(CANSetMask@mask+3)& (0+255),w,b
  8036  002CC0  0100               	movlb	0	; () banked
  8037  002CC2  6F6D               	movwf	(CANSetMask@tamp+3)& (0+255),b
  8038                           
  8039                           ; BSR set to: 0
  8040                           ;CANlib.h: 671: tamp = tamp >> 8;
  8041  002CC4  C06A  F065         	movff	CANSetMask@tamp,??_CANSetMask
  8042  002CC8  C06B  F066         	movff	CANSetMask@tamp+1,??_CANSetMask+1
  8043  002CCC  C06C  F067         	movff	CANSetMask@tamp+2,??_CANSetMask+2
  8044  002CD0  C06D  F068         	movff	CANSetMask@tamp+3,??_CANSetMask+3
  8045  002CD4  C066  F065         	movff	??_CANSetMask+1,??_CANSetMask
  8046  002CD8  C067  F066         	movff	??_CANSetMask+2,??_CANSetMask+1
  8047  002CDC  C068  F067         	movff	??_CANSetMask+3,??_CANSetMask+2
  8048  002CE0  0100               	movlb	0	; () banked
  8049  002CE2  6B68               	clrf	(??_CANSetMask+3)& (0+255),b
  8050  002CE4  C065  F06A         	movff	??_CANSetMask,CANSetMask@tamp
  8051  002CE8  C066  F06B         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  8052  002CEC  C067  F06C         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  8053  002CF0  C068  F06D         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  8054                           
  8055                           ; BSR set to: 0
  8056                           ;CANlib.h: 672: RXM0EIDH = (unsigned char) tamp;
  8057  002CF4  C06A  FF1A         	movff	CANSetMask@tamp,3866	;volatile
  8058                           
  8059                           ; BSR set to: 0
  8060                           ;CANlib.h: 674: if (mask & 0x00010000)
  8061  002CF8  0100               	movlb	0	; () banked
  8062  002CFA  A162               	btfss	(CANSetMask@mask+2)& (0+255),0,b
  8063  002CFC  D003               	goto	l438
  8064                           
  8065                           ; BSR set to: 0
  8066                           ;CANlib.h: 675: RXM0SIDLbits.EID16 = 0x01;
  8067  002CFE  010F               	movlb	15	; () banked
  8068  002D00  8119               	bsf	25,0,b	;volatile
  8069  002D02  D002               	goto	l439
  8070  002D04                     l438:
  8071                           
  8072                           ; BSR set to: 0
  8073                           ;CANlib.h: 676: else
  8074                           ;CANlib.h: 677: RXM0SIDLbits.EID16 = 0x00;
  8075  002D04  010F               	movlb	15	; () banked
  8076  002D06  9119               	bcf	25,0,b	;volatile
  8077  002D08                     l439:
  8078                           
  8079                           ; BSR set to: 15
  8080                           ;CANlib.h: 679: if (mask & 0x00020000)
  8081  002D08  0100               	movlb	0	; () banked
  8082  002D0A  A362               	btfss	(CANSetMask@mask+2)& (0+255),1,b
  8083  002D0C  D003               	goto	l440
  8084                           
  8085                           ; BSR set to: 0
  8086                           ;CANlib.h: 680: RXM0SIDLbits.EID17 = 0x01;
  8087  002D0E  010F               	movlb	15	; () banked
  8088  002D10  8319               	bsf	25,1,b	;volatile
  8089  002D12  D002               	goto	l441
  8090  002D14                     l440:
  8091                           
  8092                           ; BSR set to: 0
  8093                           ;CANlib.h: 681: else
  8094                           ;CANlib.h: 682: RXM0SIDLbits.EID17 = 0x00;
  8095  002D14  010F               	movlb	15	; () banked
  8096  002D16  9319               	bcf	25,1,b	;volatile
  8097  002D18                     l441:
  8098                           
  8099                           ; BSR set to: 15
  8100                           ;CANlib.h: 684: if (mask & 0x00040000)
  8101  002D18  0100               	movlb	0	; () banked
  8102  002D1A  A562               	btfss	(CANSetMask@mask+2)& (0+255),2,b
  8103  002D1C  D003               	goto	l442
  8104                           
  8105                           ; BSR set to: 0
  8106                           ;CANlib.h: 685: RXM0SIDLbits.SID0 = 0x01;
  8107  002D1E  010F               	movlb	15	; () banked
  8108  002D20  8B19               	bsf	25,5,b	;volatile
  8109  002D22  D002               	goto	l443
  8110  002D24                     l442:
  8111                           
  8112                           ; BSR set to: 0
  8113                           ;CANlib.h: 686: else
  8114                           ;CANlib.h: 687: RXM0SIDLbits.SID0 = 0x00;
  8115  002D24  010F               	movlb	15	; () banked
  8116  002D26  9B19               	bcf	25,5,b	;volatile
  8117  002D28                     l443:
  8118                           
  8119                           ; BSR set to: 15
  8120                           ;CANlib.h: 689: if (mask & 0x00080000)
  8121  002D28  0100               	movlb	0	; () banked
  8122  002D2A  A762               	btfss	(CANSetMask@mask+2)& (0+255),3,b
  8123  002D2C  D003               	goto	l444
  8124                           
  8125                           ; BSR set to: 0
  8126                           ;CANlib.h: 690: RXM0SIDLbits.SID1 = 0x01;
  8127  002D2E  010F               	movlb	15	; () banked
  8128  002D30  8D19               	bsf	25,6,b	;volatile
  8129  002D32  D002               	goto	l445
  8130  002D34                     l444:
  8131                           
  8132                           ; BSR set to: 0
  8133                           ;CANlib.h: 691: else
  8134                           ;CANlib.h: 692: RXM0SIDLbits.SID1 = 0x00;
  8135  002D34  010F               	movlb	15	; () banked
  8136  002D36  9D19               	bcf	25,6,b	;volatile
  8137  002D38                     l445:
  8138                           
  8139                           ; BSR set to: 15
  8140                           ;CANlib.h: 694: if (mask & 0x00100000)
  8141  002D38  0100               	movlb	0	; () banked
  8142  002D3A  A962               	btfss	(CANSetMask@mask+2)& (0+255),4,b
  8143  002D3C  D003               	goto	l446
  8144                           
  8145                           ; BSR set to: 0
  8146                           ;CANlib.h: 695: RXM0SIDLbits.SID2 = 0x01 ;
  8147  002D3E  010F               	movlb	15	; () banked
  8148  002D40  8F19               	bsf	25,7,b	;volatile
  8149  002D42  D003               	goto	l5747
  8150  002D44                     l446:
  8151                           
  8152                           ; BSR set to: 0
  8153                           ;CANlib.h: 696: else
  8154                           ;CANlib.h: 697: RXM0SIDLbits.SID2 = 0x00 ;
  8155  002D44  010F               	movlb	15	; () banked
  8156  002D46  9F19               	bcf	25,7,b	;volatile
  8157  002D48  D000               	goto	l5747
  8158  002D4A                     l5747:
  8159                           
  8160                           ; BSR set to: 15
  8161                           ;CANlib.h: 699: tamp = (mask >> 21);
  8162  002D4A  C060  F065         	movff	CANSetMask@mask,??_CANSetMask
  8163  002D4E  C061  F066         	movff	CANSetMask@mask+1,??_CANSetMask+1
  8164  002D52  C062  F067         	movff	CANSetMask@mask+2,??_CANSetMask+2
  8165  002D56  C063  F068         	movff	CANSetMask@mask+3,??_CANSetMask+3
  8166  002D5A  0E16               	movlw	22
  8167  002D5C  D006               	goto	u7190
  8168  002D5E                     u7195:
  8169  002D5E  0100               	movlb	0	; () banked
  8170  002D60  90D8               	bcf	status,0,c
  8171  002D62  3368               	rrcf	(??_CANSetMask+3)& (0+255),f,b
  8172  002D64  3367               	rrcf	(??_CANSetMask+2)& (0+255),f,b
  8173  002D66  3366               	rrcf	(??_CANSetMask+1)& (0+255),f,b
  8174  002D68  3365               	rrcf	??_CANSetMask& (0+255),f,b
  8175  002D6A                     u7190:
  8176  002D6A  2EE8               	decfsz	wreg,f,c
  8177  002D6C  D7F8               	goto	u7195
  8178  002D6E  C065  F06A         	movff	??_CANSetMask,CANSetMask@tamp
  8179  002D72  C066  F06B         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  8180  002D76  C067  F06C         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  8181  002D7A  C068  F06D         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  8182                           
  8183                           ; BSR set to: 0
  8184                           ;CANlib.h: 700: tamp = tamp & 0x000000FF;
  8185  002D7E  0100               	movlb	0	; () banked
  8186  002D80  516A               	movf	CANSetMask@tamp& (0+255),w,b
  8187  002D82  0100               	movlb	0	; () banked
  8188  002D84  6F6A               	movwf	CANSetMask@tamp& (0+255),b
  8189  002D86  6B6B               	clrf	(CANSetMask@tamp+1)& (0+255),b
  8190  002D88  6B6C               	clrf	(CANSetMask@tamp+2)& (0+255),b
  8191  002D8A  6B6D               	clrf	(CANSetMask@tamp+3)& (0+255),b
  8192                           
  8193                           ; BSR set to: 0
  8194                           ;CANlib.h: 701: RXM0SIDH = (unsigned char) tamp;
  8195  002D8C  C06A  FF18         	movff	CANSetMask@tamp,3864	;volatile
  8196  002D90  D000               	goto	l5753
  8197  002D92                     l5753:
  8198                           
  8199                           ; BSR set to: 0
  8200                           ;CANlib.h: 702: }
  8201                           ;CANlib.h: 704: if ((numBuffer ==CAN_MASK_B2) && (type == CAN_CONFIG_XTD_MSG))
  8202  002D92  0E02               	movlw	2
  8203  002D94  0100               	movlb	0	; () banked
  8204  002D96  1969               	xorwf	CANSetMask@numBuffer& (0+255),w,b
  8205  002D98  A4D8               	btfss	status,2,c
  8206  002D9A  0012               	return	
  8207                           
  8208                           ; BSR set to: 0
  8209  002D9C  0EF7               	movlw	247
  8210  002D9E  0100               	movlb	0	; () banked
  8211  002DA0  1964               	xorwf	CANSetMask@type& (0+255),w,b
  8212  002DA2  A4D8               	btfss	status,2,c
  8213  002DA4  0012               	return	
  8214                           
  8215                           ; BSR set to: 0
  8216                           ;CANlib.h: 705: {
  8217                           ;CANlib.h: 706: tamp = mask & 0x000000FF;
  8218  002DA6  0100               	movlb	0	; () banked
  8219  002DA8  5160               	movf	CANSetMask@mask& (0+255),w,b
  8220  002DAA  0100               	movlb	0	; () banked
  8221  002DAC  6F6A               	movwf	CANSetMask@tamp& (0+255),b
  8222  002DAE  6B6B               	clrf	(CANSetMask@tamp+1)& (0+255),b
  8223  002DB0  6B6C               	clrf	(CANSetMask@tamp+2)& (0+255),b
  8224  002DB2  6B6D               	clrf	(CANSetMask@tamp+3)& (0+255),b
  8225                           
  8226                           ; BSR set to: 0
  8227                           ;CANlib.h: 707: RXM1EIDL = (unsigned char) tamp;
  8228  002DB4  C06A  FF1F         	movff	CANSetMask@tamp,3871	;volatile
  8229                           
  8230                           ; BSR set to: 0
  8231                           ;CANlib.h: 709: tamp = mask & 0x0000FF00;
  8232  002DB8  0E00               	movlw	0
  8233  002DBA  0100               	movlb	0	; () banked
  8234  002DBC  1560               	andwf	CANSetMask@mask& (0+255),w,b
  8235  002DBE  0100               	movlb	0	; () banked
  8236  002DC0  6F6A               	movwf	CANSetMask@tamp& (0+255),b
  8237  002DC2  0EFF               	movlw	255
  8238  002DC4  0100               	movlb	0	; () banked
  8239  002DC6  1561               	andwf	(CANSetMask@mask+1)& (0+255),w,b
  8240  002DC8  0100               	movlb	0	; () banked
  8241  002DCA  6F6B               	movwf	(CANSetMask@tamp+1)& (0+255),b
  8242  002DCC  0E00               	movlw	0
  8243  002DCE  0100               	movlb	0	; () banked
  8244  002DD0  1562               	andwf	(CANSetMask@mask+2)& (0+255),w,b
  8245  002DD2  0100               	movlb	0	; () banked
  8246  002DD4  6F6C               	movwf	(CANSetMask@tamp+2)& (0+255),b
  8247  002DD6  0E00               	movlw	0
  8248  002DD8  0100               	movlb	0	; () banked
  8249  002DDA  1563               	andwf	(CANSetMask@mask+3)& (0+255),w,b
  8250  002DDC  0100               	movlb	0	; () banked
  8251  002DDE  6F6D               	movwf	(CANSetMask@tamp+3)& (0+255),b
  8252                           
  8253                           ; BSR set to: 0
  8254                           ;CANlib.h: 710: tamp = tamp >> 8;
  8255  002DE0  C06A  F065         	movff	CANSetMask@tamp,??_CANSetMask
  8256  002DE4  C06B  F066         	movff	CANSetMask@tamp+1,??_CANSetMask+1
  8257  002DE8  C06C  F067         	movff	CANSetMask@tamp+2,??_CANSetMask+2
  8258  002DEC  C06D  F068         	movff	CANSetMask@tamp+3,??_CANSetMask+3
  8259  002DF0  C066  F065         	movff	??_CANSetMask+1,??_CANSetMask
  8260  002DF4  C067  F066         	movff	??_CANSetMask+2,??_CANSetMask+1
  8261  002DF8  C068  F067         	movff	??_CANSetMask+3,??_CANSetMask+2
  8262  002DFC  0100               	movlb	0	; () banked
  8263  002DFE  6B68               	clrf	(??_CANSetMask+3)& (0+255),b
  8264  002E00  C065  F06A         	movff	??_CANSetMask,CANSetMask@tamp
  8265  002E04  C066  F06B         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  8266  002E08  C067  F06C         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  8267  002E0C  C068  F06D         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  8268                           
  8269                           ; BSR set to: 0
  8270                           ;CANlib.h: 711: RXM1EIDH = (unsigned char) tamp;
  8271  002E10  C06A  FF1E         	movff	CANSetMask@tamp,3870	;volatile
  8272                           
  8273                           ; BSR set to: 0
  8274                           ;CANlib.h: 713: if (mask & 0x00010000)
  8275  002E14  0100               	movlb	0	; () banked
  8276  002E16  A162               	btfss	(CANSetMask@mask+2)& (0+255),0,b
  8277  002E18  D003               	goto	l449
  8278                           
  8279                           ; BSR set to: 0
  8280                           ;CANlib.h: 714: RXM1SIDLbits.EID16 = 0x01;
  8281  002E1A  010F               	movlb	15	; () banked
  8282  002E1C  811D               	bsf	29,0,b	;volatile
  8283  002E1E  D002               	goto	l450
  8284  002E20                     l449:
  8285                           
  8286                           ; BSR set to: 0
  8287                           ;CANlib.h: 715: else
  8288                           ;CANlib.h: 716: RXM1SIDLbits.EID16 = 0x00;
  8289  002E20  010F               	movlb	15	; () banked
  8290  002E22  911D               	bcf	29,0,b	;volatile
  8291  002E24                     l450:
  8292                           
  8293                           ; BSR set to: 15
  8294                           ;CANlib.h: 718: if (mask & 0x00020000)
  8295  002E24  0100               	movlb	0	; () banked
  8296  002E26  A362               	btfss	(CANSetMask@mask+2)& (0+255),1,b
  8297  002E28  D003               	goto	l451
  8298                           
  8299                           ; BSR set to: 0
  8300                           ;CANlib.h: 719: RXM1SIDLbits.EID17 = 0x01;
  8301  002E2A  010F               	movlb	15	; () banked
  8302  002E2C  831D               	bsf	29,1,b	;volatile
  8303  002E2E  D002               	goto	l452
  8304  002E30                     l451:
  8305                           
  8306                           ; BSR set to: 0
  8307                           ;CANlib.h: 720: else
  8308                           ;CANlib.h: 721: RXM1SIDLbits.EID17 = 0x00;
  8309  002E30  010F               	movlb	15	; () banked
  8310  002E32  931D               	bcf	29,1,b	;volatile
  8311  002E34                     l452:
  8312                           
  8313                           ; BSR set to: 15
  8314                           ;CANlib.h: 723: if (mask & 0x00040000)
  8315  002E34  0100               	movlb	0	; () banked
  8316  002E36  A562               	btfss	(CANSetMask@mask+2)& (0+255),2,b
  8317  002E38  D003               	goto	l453
  8318                           
  8319                           ; BSR set to: 0
  8320                           ;CANlib.h: 724: RXM1SIDLbits.SID0 = 0x01;
  8321  002E3A  010F               	movlb	15	; () banked
  8322  002E3C  8B1D               	bsf	29,5,b	;volatile
  8323  002E3E  D002               	goto	l454
  8324  002E40                     l453:
  8325                           
  8326                           ; BSR set to: 0
  8327                           ;CANlib.h: 725: else
  8328                           ;CANlib.h: 726: RXM1SIDLbits.SID0 = 0x00;
  8329  002E40  010F               	movlb	15	; () banked
  8330  002E42  9B1D               	bcf	29,5,b	;volatile
  8331  002E44                     l454:
  8332                           
  8333                           ; BSR set to: 15
  8334                           ;CANlib.h: 728: if (mask & 0x00080000)
  8335  002E44  0100               	movlb	0	; () banked
  8336  002E46  A762               	btfss	(CANSetMask@mask+2)& (0+255),3,b
  8337  002E48  D003               	goto	l455
  8338                           
  8339                           ; BSR set to: 0
  8340                           ;CANlib.h: 729: RXM1SIDLbits.SID1 = 0x01;
  8341  002E4A  010F               	movlb	15	; () banked
  8342  002E4C  8D1D               	bsf	29,6,b	;volatile
  8343  002E4E  D002               	goto	l456
  8344  002E50                     l455:
  8345                           
  8346                           ; BSR set to: 0
  8347                           ;CANlib.h: 730: else
  8348                           ;CANlib.h: 731: RXM1SIDLbits.SID1 = 0x00;
  8349  002E50  010F               	movlb	15	; () banked
  8350  002E52  9D1D               	bcf	29,6,b	;volatile
  8351  002E54                     l456:
  8352                           
  8353                           ; BSR set to: 15
  8354                           ;CANlib.h: 733: if (mask & 0x00100000)
  8355  002E54  0100               	movlb	0	; () banked
  8356  002E56  A962               	btfss	(CANSetMask@mask+2)& (0+255),4,b
  8357  002E58  D003               	goto	l457
  8358                           
  8359                           ; BSR set to: 0
  8360                           ;CANlib.h: 734: RXM1SIDLbits.SID2 = 0x01 ;
  8361  002E5A  010F               	movlb	15	; () banked
  8362  002E5C  8F1D               	bsf	29,7,b	;volatile
  8363  002E5E  D003               	goto	l5779
  8364  002E60                     l457:
  8365                           
  8366                           ; BSR set to: 0
  8367                           ;CANlib.h: 735: else
  8368                           ;CANlib.h: 736: RXM1SIDLbits.SID2 = 0x00 ;
  8369  002E60  010F               	movlb	15	; () banked
  8370  002E62  9F1D               	bcf	29,7,b	;volatile
  8371  002E64  D000               	goto	l5779
  8372  002E66                     l5779:
  8373                           
  8374                           ; BSR set to: 15
  8375                           ;CANlib.h: 738: tamp = (mask >> 21);
  8376  002E66  C060  F065         	movff	CANSetMask@mask,??_CANSetMask
  8377  002E6A  C061  F066         	movff	CANSetMask@mask+1,??_CANSetMask+1
  8378  002E6E  C062  F067         	movff	CANSetMask@mask+2,??_CANSetMask+2
  8379  002E72  C063  F068         	movff	CANSetMask@mask+3,??_CANSetMask+3
  8380  002E76  0E16               	movlw	22
  8381  002E78  D006               	goto	u7270
  8382  002E7A                     u7275:
  8383  002E7A  0100               	movlb	0	; () banked
  8384  002E7C  90D8               	bcf	status,0,c
  8385  002E7E  3368               	rrcf	(??_CANSetMask+3)& (0+255),f,b
  8386  002E80  3367               	rrcf	(??_CANSetMask+2)& (0+255),f,b
  8387  002E82  3366               	rrcf	(??_CANSetMask+1)& (0+255),f,b
  8388  002E84  3365               	rrcf	??_CANSetMask& (0+255),f,b
  8389  002E86                     u7270:
  8390  002E86  2EE8               	decfsz	wreg,f,c
  8391  002E88  D7F8               	goto	u7275
  8392  002E8A  C065  F06A         	movff	??_CANSetMask,CANSetMask@tamp
  8393  002E8E  C066  F06B         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  8394  002E92  C067  F06C         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  8395  002E96  C068  F06D         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  8396                           
  8397                           ; BSR set to: 0
  8398                           ;CANlib.h: 739: tamp = tamp & 0x000000FF;
  8399  002E9A  0100               	movlb	0	; () banked
  8400  002E9C  516A               	movf	CANSetMask@tamp& (0+255),w,b
  8401  002E9E  0100               	movlb	0	; () banked
  8402  002EA0  6F6A               	movwf	CANSetMask@tamp& (0+255),b
  8403  002EA2  6B6B               	clrf	(CANSetMask@tamp+1)& (0+255),b
  8404  002EA4  6B6C               	clrf	(CANSetMask@tamp+2)& (0+255),b
  8405  002EA6  6B6D               	clrf	(CANSetMask@tamp+3)& (0+255),b
  8406                           
  8407                           ; BSR set to: 0
  8408                           ;CANlib.h: 740: RXM1SIDH = (unsigned char) tamp;
  8409  002EA8  C06A  FF1C         	movff	CANSetMask@tamp,3868	;volatile
  8410  002EAC  0012               	return	
  8411                           
  8412                           ; BSR set to: 0
  8413                           
  8414                           ; BSR set to: 0
  8415  002EAE  0012               	return		;funcret
  8416  002EB0                     __end_of_CANSetMask:
  8417                           	opt stack 0
  8418                           tblptru	equ	0xFF8
  8419                           tblptrh	equ	0xFF7
  8420                           tblptrl	equ	0xFF6
  8421                           tablat	equ	0xFF5
  8422                           intcon	equ	0xFF2
  8423                           postinc0	equ	0xFEE
  8424                           wreg	equ	0xFE8
  8425                           postinc2	equ	0xFDE
  8426                           postdec2	equ	0xFDD
  8427                           fsr2h	equ	0xFDA
  8428                           fsr2l	equ	0xFD9
  8429                           status	equ	0xFD8
  8430                           
  8431 ;; *************** function _CANSetFilter *****************
  8432 ;; Defined at:
  8433 ;;		line 748 in file "CANlib.h"
  8434 ;; Parameters:    Size  Location     Type
  8435 ;;  numBuffer       1    wreg     enum E16965
  8436 ;;  filter          4    0[BANK0 ] unsigned long 
  8437 ;;  type            1    4[BANK0 ] enum E16928
  8438 ;; Auto vars:     Size  Location     Type
  8439 ;;  numBuffer       1    9[BANK0 ] enum E16965
  8440 ;;  tamp            4   10[BANK0 ] unsigned long 
  8441 ;; Return value:  Size  Location     Type
  8442 ;;		None               void
  8443 ;; Registers used:
  8444 ;;		wreg, status,2, status,0
  8445 ;; Tracked objects:
  8446 ;;		On entry : 0/0
  8447 ;;		On exit  : 0/0
  8448 ;;		Unchanged: 0/0
  8449 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8450 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8451 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8452 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8453 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8454 ;;Total ram usage:       14 bytes
  8455 ;; Hardware stack levels used:    1
  8456 ;; Hardware stack levels required when called:    2
  8457 ;; This function calls:
  8458 ;;		Nothing
  8459 ;; This function is called by:
  8460 ;;		_CANInitialize
  8461 ;; This function uses a non-reentrant model
  8462 ;;
  8463                           
  8464                           	psect	text31
  8465  000D4E                     __ptext31:
  8466                           	opt stack 0
  8467  000D4E                     _CANSetFilter:
  8468                           	opt stack 26
  8469                           
  8470                           ; BSR set to: 0
  8471                           ;incstack = 0
  8472                           ;CANSetFilter@numBuffer stored from wreg
  8473  000D4E  0100               	movlb	0	; () banked
  8474  000D50  6F69               	movwf	CANSetFilter@numBuffer& (0+255),b
  8475                           
  8476                           ; BSR set to: 0
  8477                           ;CANlib.h: 750: unsigned long tamp;
  8478                           ;CANlib.h: 752: if ((numBuffer ==CAN_FILTER_B1_F1) && (type == CAN_CONFIG_STD_MSG))
  8479  000D52  0100               	movlb	0	; () banked
  8480  000D54  5169               	movf	CANSetFilter@numBuffer& (0+255),w,b
  8481  000D56  0100               	movlb	0	; () banked
  8482  000D58  A4D8               	btfss	status,2,c
  8483  000D5A  D059               	goto	l5803
  8484                           
  8485                           ; BSR set to: 0
  8486  000D5C  0100               	movlb	0	; () banked
  8487  000D5E  2964               	incf	CANSetFilter@type& (0+255),w,b
  8488  000D60  A4D8               	btfss	status,2,c
  8489  000D62  D055               	goto	l5803
  8490                           
  8491                           ; BSR set to: 0
  8492                           ;CANlib.h: 753: {
  8493                           ;CANlib.h: 754: RXF0SIDLbits.EXIDEN = 0x00;
  8494  000D64  010F               	movlb	15	; () banked
  8495  000D66  9701               	bcf	1,3,b	;volatile
  8496                           
  8497                           ; BSR set to: 15
  8498                           ;CANlib.h: 756: tamp = (filter >> 3);
  8499  000D68  C060  F065         	movff	CANSetFilter@filter,??_CANSetFilter
  8500  000D6C  C061  F066         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  8501  000D70  C062  F067         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  8502  000D74  C063  F068         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  8503  000D78  0E04               	movlw	4
  8504  000D7A  D006               	goto	u7300
  8505  000D7C                     u7305:
  8506  000D7C  0100               	movlb	0	; () banked
  8507  000D7E  90D8               	bcf	status,0,c
  8508  000D80  3368               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  8509  000D82  3367               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  8510  000D84  3366               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  8511  000D86  3365               	rrcf	??_CANSetFilter& (0+255),f,b
  8512  000D88                     u7300:
  8513  000D88  2EE8               	decfsz	wreg,f,c
  8514  000D8A  D7F8               	goto	u7305
  8515  000D8C  C065  F06A         	movff	??_CANSetFilter,CANSetFilter@tamp
  8516  000D90  C066  F06B         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  8517  000D94  C067  F06C         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  8518  000D98  C068  F06D         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  8519                           
  8520                           ; BSR set to: 0
  8521                           ;CANlib.h: 757: tamp = tamp & 0x000000FF;
  8522  000D9C  0100               	movlb	0	; () banked
  8523  000D9E  516A               	movf	CANSetFilter@tamp& (0+255),w,b
  8524  000DA0  0100               	movlb	0	; () banked
  8525  000DA2  6F6A               	movwf	CANSetFilter@tamp& (0+255),b
  8526  000DA4  6B6B               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  8527  000DA6  6B6C               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  8528  000DA8  6B6D               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  8529                           
  8530                           ; BSR set to: 0
  8531                           ;CANlib.h: 758: RXF0SIDH = (unsigned char) tamp;
  8532  000DAA  C06A  FF00         	movff	CANSetFilter@tamp,3840	;volatile
  8533                           
  8534                           ; BSR set to: 0
  8535                           ;CANlib.h: 760: tamp = filter & 0x00000007;
  8536  000DAE  0E07               	movlw	7
  8537  000DB0  0100               	movlb	0	; () banked
  8538  000DB2  1560               	andwf	CANSetFilter@filter& (0+255),w,b
  8539  000DB4  0100               	movlb	0	; () banked
  8540  000DB6  6F6A               	movwf	CANSetFilter@tamp& (0+255),b
  8541  000DB8  0E00               	movlw	0
  8542  000DBA  0100               	movlb	0	; () banked
  8543  000DBC  1561               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  8544  000DBE  0100               	movlb	0	; () banked
  8545  000DC0  6F6B               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  8546  000DC2  0E00               	movlw	0
  8547  000DC4  0100               	movlb	0	; () banked
  8548  000DC6  1562               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  8549  000DC8  0100               	movlb	0	; () banked
  8550  000DCA  6F6C               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  8551  000DCC  0E00               	movlw	0
  8552  000DCE  0100               	movlb	0	; () banked
  8553  000DD0  1563               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  8554  000DD2  0100               	movlb	0	; () banked
  8555  000DD4  6F6D               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  8556                           
  8557                           ; BSR set to: 0
  8558                           ;CANlib.h: 761: tamp = tamp << 5;
  8559  000DD6  C06A  F065         	movff	CANSetFilter@tamp,??_CANSetFilter
  8560  000DDA  C06B  F066         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  8561  000DDE  C06C  F067         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  8562  000DE2  C06D  F068         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  8563  000DE6  0E05               	movlw	5
  8564  000DE8                     u7315:
  8565  000DE8  90D8               	bcf	status,0,c
  8566  000DEA  0100               	movlb	0	; () banked
  8567  000DEC  3765               	rlcf	??_CANSetFilter& (0+255),f,b
  8568  000DEE  3766               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  8569  000DF0  3767               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  8570  000DF2  3768               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  8571  000DF4  2EE8               	decfsz	wreg,f,c
  8572  000DF6  D7F8               	goto	u7315
  8573  000DF8  C065  F06A         	movff	??_CANSetFilter,CANSetFilter@tamp
  8574  000DFC  C066  F06B         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  8575  000E00  C067  F06C         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  8576  000E04  C068  F06D         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  8577                           
  8578                           ; BSR set to: 0
  8579                           ;CANlib.h: 762: RXF0SIDL = (unsigned char) tamp;
  8580  000E08  C06A  FF01         	movff	CANSetFilter@tamp,3841	;volatile
  8581  000E0C  D000               	goto	l5803
  8582  000E0E                     l5803:
  8583                           
  8584                           ; BSR set to: 0
  8585                           ;CANlib.h: 763: }
  8586                           ;CANlib.h: 765: if ((numBuffer ==CAN_FILTER_B1_F2) && (type == CAN_CONFIG_STD_MSG))
  8587  000E0E  0100               	movlb	0	; () banked
  8588  000E10  0569               	decf	CANSetFilter@numBuffer& (0+255),w,b
  8589  000E12  A4D8               	btfss	status,2,c
  8590  000E14  D059               	goto	l5821
  8591                           
  8592                           ; BSR set to: 0
  8593  000E16  0100               	movlb	0	; () banked
  8594  000E18  2964               	incf	CANSetFilter@type& (0+255),w,b
  8595  000E1A  A4D8               	btfss	status,2,c
  8596  000E1C  D055               	goto	l5821
  8597                           
  8598                           ; BSR set to: 0
  8599                           ;CANlib.h: 766: {
  8600                           ;CANlib.h: 767: RXF1SIDLbits.EXIDEN = 0x00;
  8601  000E1E  010F               	movlb	15	; () banked
  8602  000E20  9705               	bcf	5,3,b	;volatile
  8603                           
  8604                           ; BSR set to: 15
  8605                           ;CANlib.h: 769: tamp = (filter >> 3);
  8606  000E22  C060  F065         	movff	CANSetFilter@filter,??_CANSetFilter
  8607  000E26  C061  F066         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  8608  000E2A  C062  F067         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  8609  000E2E  C063  F068         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  8610  000E32  0E04               	movlw	4
  8611  000E34  D006               	goto	u7340
  8612  000E36                     u7345:
  8613  000E36  0100               	movlb	0	; () banked
  8614  000E38  90D8               	bcf	status,0,c
  8615  000E3A  3368               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  8616  000E3C  3367               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  8617  000E3E  3366               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  8618  000E40  3365               	rrcf	??_CANSetFilter& (0+255),f,b
  8619  000E42                     u7340:
  8620  000E42  2EE8               	decfsz	wreg,f,c
  8621  000E44  D7F8               	goto	u7345
  8622  000E46  C065  F06A         	movff	??_CANSetFilter,CANSetFilter@tamp
  8623  000E4A  C066  F06B         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  8624  000E4E  C067  F06C         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  8625  000E52  C068  F06D         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  8626                           
  8627                           ; BSR set to: 0
  8628                           ;CANlib.h: 770: tamp = tamp & 0x000000FF;
  8629  000E56  0100               	movlb	0	; () banked
  8630  000E58  516A               	movf	CANSetFilter@tamp& (0+255),w,b
  8631  000E5A  0100               	movlb	0	; () banked
  8632  000E5C  6F6A               	movwf	CANSetFilter@tamp& (0+255),b
  8633  000E5E  6B6B               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  8634  000E60  6B6C               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  8635  000E62  6B6D               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  8636                           
  8637                           ; BSR set to: 0
  8638                           ;CANlib.h: 771: RXF1SIDH = (unsigned char) tamp;
  8639  000E64  C06A  FF04         	movff	CANSetFilter@tamp,3844	;volatile
  8640                           
  8641                           ; BSR set to: 0
  8642                           ;CANlib.h: 773: tamp = filter & 0x00000007;
  8643  000E68  0E07               	movlw	7
  8644  000E6A  0100               	movlb	0	; () banked
  8645  000E6C  1560               	andwf	CANSetFilter@filter& (0+255),w,b
  8646  000E6E  0100               	movlb	0	; () banked
  8647  000E70  6F6A               	movwf	CANSetFilter@tamp& (0+255),b
  8648  000E72  0E00               	movlw	0
  8649  000E74  0100               	movlb	0	; () banked
  8650  000E76  1561               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  8651  000E78  0100               	movlb	0	; () banked
  8652  000E7A  6F6B               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  8653  000E7C  0E00               	movlw	0
  8654  000E7E  0100               	movlb	0	; () banked
  8655  000E80  1562               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  8656  000E82  0100               	movlb	0	; () banked
  8657  000E84  6F6C               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  8658  000E86  0E00               	movlw	0
  8659  000E88  0100               	movlb	0	; () banked
  8660  000E8A  1563               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  8661  000E8C  0100               	movlb	0	; () banked
  8662  000E8E  6F6D               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  8663                           
  8664                           ; BSR set to: 0
  8665                           ;CANlib.h: 774: tamp = tamp << 5;
  8666  000E90  C06A  F065         	movff	CANSetFilter@tamp,??_CANSetFilter
  8667  000E94  C06B  F066         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  8668  000E98  C06C  F067         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  8669  000E9C  C06D  F068         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  8670  000EA0  0E05               	movlw	5
  8671  000EA2                     u7355:
  8672  000EA2  90D8               	bcf	status,0,c
  8673  000EA4  0100               	movlb	0	; () banked
  8674  000EA6  3765               	rlcf	??_CANSetFilter& (0+255),f,b
  8675  000EA8  3766               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  8676  000EAA  3767               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  8677  000EAC  3768               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  8678  000EAE  2EE8               	decfsz	wreg,f,c
  8679  000EB0  D7F8               	goto	u7355
  8680  000EB2  C065  F06A         	movff	??_CANSetFilter,CANSetFilter@tamp
  8681  000EB6  C066  F06B         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  8682  000EBA  C067  F06C         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  8683  000EBE  C068  F06D         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  8684                           
  8685                           ; BSR set to: 0
  8686                           ;CANlib.h: 775: RXF1SIDL = (unsigned char) tamp;
  8687  000EC2  C06A  FF05         	movff	CANSetFilter@tamp,3845	;volatile
  8688  000EC6  D000               	goto	l5821
  8689  000EC8                     l5821:
  8690                           
  8691                           ; BSR set to: 0
  8692                           ;CANlib.h: 776: }
  8693                           ;CANlib.h: 778: if ((numBuffer ==CAN_FILTER_B2_F1) && (type == CAN_CONFIG_STD_MSG))
  8694  000EC8  0E02               	movlw	2
  8695  000ECA  0100               	movlb	0	; () banked
  8696  000ECC  1969               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  8697  000ECE  A4D8               	btfss	status,2,c
  8698  000ED0  D059               	goto	l5839
  8699                           
  8700                           ; BSR set to: 0
  8701  000ED2  0100               	movlb	0	; () banked
  8702  000ED4  2964               	incf	CANSetFilter@type& (0+255),w,b
  8703  000ED6  A4D8               	btfss	status,2,c
  8704  000ED8  D055               	goto	l5839
  8705                           
  8706                           ; BSR set to: 0
  8707                           ;CANlib.h: 779: {
  8708                           ;CANlib.h: 780: RXF2SIDLbits.EXIDEN = 0x00;
  8709  000EDA  010F               	movlb	15	; () banked
  8710  000EDC  9709               	bcf	9,3,b	;volatile
  8711                           
  8712                           ; BSR set to: 15
  8713                           ;CANlib.h: 782: tamp = (filter >> 3);
  8714  000EDE  C060  F065         	movff	CANSetFilter@filter,??_CANSetFilter
  8715  000EE2  C061  F066         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  8716  000EE6  C062  F067         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  8717  000EEA  C063  F068         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  8718  000EEE  0E04               	movlw	4
  8719  000EF0  D006               	goto	u7380
  8720  000EF2                     u7385:
  8721  000EF2  0100               	movlb	0	; () banked
  8722  000EF4  90D8               	bcf	status,0,c
  8723  000EF6  3368               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  8724  000EF8  3367               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  8725  000EFA  3366               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  8726  000EFC  3365               	rrcf	??_CANSetFilter& (0+255),f,b
  8727  000EFE                     u7380:
  8728  000EFE  2EE8               	decfsz	wreg,f,c
  8729  000F00  D7F8               	goto	u7385
  8730  000F02  C065  F06A         	movff	??_CANSetFilter,CANSetFilter@tamp
  8731  000F06  C066  F06B         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  8732  000F0A  C067  F06C         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  8733  000F0E  C068  F06D         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  8734                           
  8735                           ; BSR set to: 0
  8736                           ;CANlib.h: 783: tamp = tamp & 0x000000FF;
  8737  000F12  0100               	movlb	0	; () banked
  8738  000F14  516A               	movf	CANSetFilter@tamp& (0+255),w,b
  8739  000F16  0100               	movlb	0	; () banked
  8740  000F18  6F6A               	movwf	CANSetFilter@tamp& (0+255),b
  8741  000F1A  6B6B               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  8742  000F1C  6B6C               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  8743  000F1E  6B6D               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  8744                           
  8745                           ; BSR set to: 0
  8746                           ;CANlib.h: 784: RXF2SIDH = (unsigned char) tamp;
  8747  000F20  C06A  FF08         	movff	CANSetFilter@tamp,3848	;volatile
  8748                           
  8749                           ; BSR set to: 0
  8750                           ;CANlib.h: 786: tamp = filter & 0x00000007;
  8751  000F24  0E07               	movlw	7
  8752  000F26  0100               	movlb	0	; () banked
  8753  000F28  1560               	andwf	CANSetFilter@filter& (0+255),w,b
  8754  000F2A  0100               	movlb	0	; () banked
  8755  000F2C  6F6A               	movwf	CANSetFilter@tamp& (0+255),b
  8756  000F2E  0E00               	movlw	0
  8757  000F30  0100               	movlb	0	; () banked
  8758  000F32  1561               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  8759  000F34  0100               	movlb	0	; () banked
  8760  000F36  6F6B               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  8761  000F38  0E00               	movlw	0
  8762  000F3A  0100               	movlb	0	; () banked
  8763  000F3C  1562               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  8764  000F3E  0100               	movlb	0	; () banked
  8765  000F40  6F6C               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  8766  000F42  0E00               	movlw	0
  8767  000F44  0100               	movlb	0	; () banked
  8768  000F46  1563               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  8769  000F48  0100               	movlb	0	; () banked
  8770  000F4A  6F6D               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  8771                           
  8772                           ; BSR set to: 0
  8773                           ;CANlib.h: 787: tamp = tamp << 5;
  8774  000F4C  C06A  F065         	movff	CANSetFilter@tamp,??_CANSetFilter
  8775  000F50  C06B  F066         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  8776  000F54  C06C  F067         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  8777  000F58  C06D  F068         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  8778  000F5C  0E05               	movlw	5
  8779  000F5E                     u7395:
  8780  000F5E  90D8               	bcf	status,0,c
  8781  000F60  0100               	movlb	0	; () banked
  8782  000F62  3765               	rlcf	??_CANSetFilter& (0+255),f,b
  8783  000F64  3766               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  8784  000F66  3767               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  8785  000F68  3768               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  8786  000F6A  2EE8               	decfsz	wreg,f,c
  8787  000F6C  D7F8               	goto	u7395
  8788  000F6E  C065  F06A         	movff	??_CANSetFilter,CANSetFilter@tamp
  8789  000F72  C066  F06B         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  8790  000F76  C067  F06C         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  8791  000F7A  C068  F06D         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  8792                           
  8793                           ; BSR set to: 0
  8794                           ;CANlib.h: 788: RXF2SIDL = (unsigned char) tamp;
  8795  000F7E  C06A  FF09         	movff	CANSetFilter@tamp,3849	;volatile
  8796  000F82  D000               	goto	l5839
  8797  000F84                     l5839:
  8798                           
  8799                           ; BSR set to: 0
  8800                           ;CANlib.h: 789: }
  8801                           ;CANlib.h: 791: if ((numBuffer ==CAN_FILTER_B2_F2) && (type == CAN_CONFIG_STD_MSG))
  8802  000F84  0E03               	movlw	3
  8803  000F86  0100               	movlb	0	; () banked
  8804  000F88  1969               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  8805  000F8A  A4D8               	btfss	status,2,c
  8806  000F8C  D059               	goto	l5857
  8807                           
  8808                           ; BSR set to: 0
  8809  000F8E  0100               	movlb	0	; () banked
  8810  000F90  2964               	incf	CANSetFilter@type& (0+255),w,b
  8811  000F92  A4D8               	btfss	status,2,c
  8812  000F94  D055               	goto	l5857
  8813                           
  8814                           ; BSR set to: 0
  8815                           ;CANlib.h: 792: {
  8816                           ;CANlib.h: 793: RXF3SIDLbits.EXIDEN = 0x00;
  8817  000F96  010F               	movlb	15	; () banked
  8818  000F98  970D               	bcf	13,3,b	;volatile
  8819                           
  8820                           ; BSR set to: 15
  8821                           ;CANlib.h: 795: tamp = (filter >> 3);
  8822  000F9A  C060  F065         	movff	CANSetFilter@filter,??_CANSetFilter
  8823  000F9E  C061  F066         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  8824  000FA2  C062  F067         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  8825  000FA6  C063  F068         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  8826  000FAA  0E04               	movlw	4
  8827  000FAC  D006               	goto	u7420
  8828  000FAE                     u7425:
  8829  000FAE  0100               	movlb	0	; () banked
  8830  000FB0  90D8               	bcf	status,0,c
  8831  000FB2  3368               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  8832  000FB4  3367               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  8833  000FB6  3366               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  8834  000FB8  3365               	rrcf	??_CANSetFilter& (0+255),f,b
  8835  000FBA                     u7420:
  8836  000FBA  2EE8               	decfsz	wreg,f,c
  8837  000FBC  D7F8               	goto	u7425
  8838  000FBE  C065  F06A         	movff	??_CANSetFilter,CANSetFilter@tamp
  8839  000FC2  C066  F06B         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  8840  000FC6  C067  F06C         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  8841  000FCA  C068  F06D         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  8842                           
  8843                           ; BSR set to: 0
  8844                           ;CANlib.h: 796: tamp = tamp & 0x000000FF;
  8845  000FCE  0100               	movlb	0	; () banked
  8846  000FD0  516A               	movf	CANSetFilter@tamp& (0+255),w,b
  8847  000FD2  0100               	movlb	0	; () banked
  8848  000FD4  6F6A               	movwf	CANSetFilter@tamp& (0+255),b
  8849  000FD6  6B6B               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  8850  000FD8  6B6C               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  8851  000FDA  6B6D               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  8852                           
  8853                           ; BSR set to: 0
  8854                           ;CANlib.h: 797: RXF3SIDH = (unsigned char) tamp;
  8855  000FDC  C06A  FF0C         	movff	CANSetFilter@tamp,3852	;volatile
  8856                           
  8857                           ; BSR set to: 0
  8858                           ;CANlib.h: 799: tamp = filter & 0x00000007;
  8859  000FE0  0E07               	movlw	7
  8860  000FE2  0100               	movlb	0	; () banked
  8861  000FE4  1560               	andwf	CANSetFilter@filter& (0+255),w,b
  8862  000FE6  0100               	movlb	0	; () banked
  8863  000FE8  6F6A               	movwf	CANSetFilter@tamp& (0+255),b
  8864  000FEA  0E00               	movlw	0
  8865  000FEC  0100               	movlb	0	; () banked
  8866  000FEE  1561               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  8867  000FF0  0100               	movlb	0	; () banked
  8868  000FF2  6F6B               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  8869  000FF4  0E00               	movlw	0
  8870  000FF6  0100               	movlb	0	; () banked
  8871  000FF8  1562               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  8872  000FFA  0100               	movlb	0	; () banked
  8873  000FFC  6F6C               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  8874  000FFE  0E00               	movlw	0
  8875  001000  0100               	movlb	0	; () banked
  8876  001002  1563               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  8877  001004  0100               	movlb	0	; () banked
  8878  001006  6F6D               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  8879                           
  8880                           ; BSR set to: 0
  8881                           ;CANlib.h: 800: tamp = tamp << 5;
  8882  001008  C06A  F065         	movff	CANSetFilter@tamp,??_CANSetFilter
  8883  00100C  C06B  F066         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  8884  001010  C06C  F067         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  8885  001014  C06D  F068         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  8886  001018  0E05               	movlw	5
  8887  00101A                     u7435:
  8888  00101A  90D8               	bcf	status,0,c
  8889  00101C  0100               	movlb	0	; () banked
  8890  00101E  3765               	rlcf	??_CANSetFilter& (0+255),f,b
  8891  001020  3766               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  8892  001022  3767               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  8893  001024  3768               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  8894  001026  2EE8               	decfsz	wreg,f,c
  8895  001028  D7F8               	goto	u7435
  8896  00102A  C065  F06A         	movff	??_CANSetFilter,CANSetFilter@tamp
  8897  00102E  C066  F06B         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  8898  001032  C067  F06C         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  8899  001036  C068  F06D         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  8900                           
  8901                           ; BSR set to: 0
  8902                           ;CANlib.h: 801: RXF3SIDL = (unsigned char) tamp;
  8903  00103A  C06A  FF0D         	movff	CANSetFilter@tamp,3853	;volatile
  8904  00103E  D000               	goto	l5857
  8905  001040                     l5857:
  8906                           
  8907                           ; BSR set to: 0
  8908                           ;CANlib.h: 802: }
  8909                           ;CANlib.h: 804: if ((numBuffer ==CAN_FILTER_B2_F3) && (type == CAN_CONFIG_STD_MSG))
  8910  001040  0E04               	movlw	4
  8911  001042  0100               	movlb	0	; () banked
  8912  001044  1969               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  8913  001046  A4D8               	btfss	status,2,c
  8914  001048  D059               	goto	l5875
  8915                           
  8916                           ; BSR set to: 0
  8917  00104A  0100               	movlb	0	; () banked
  8918  00104C  2964               	incf	CANSetFilter@type& (0+255),w,b
  8919  00104E  A4D8               	btfss	status,2,c
  8920  001050  D055               	goto	l5875
  8921                           
  8922                           ; BSR set to: 0
  8923                           ;CANlib.h: 805: {
  8924                           ;CANlib.h: 806: RXF4SIDLbits.EXIDEN = 0x00;
  8925  001052  010F               	movlb	15	; () banked
  8926  001054  9711               	bcf	17,3,b	;volatile
  8927                           
  8928                           ; BSR set to: 15
  8929                           ;CANlib.h: 808: tamp = (filter >> 3);
  8930  001056  C060  F065         	movff	CANSetFilter@filter,??_CANSetFilter
  8931  00105A  C061  F066         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  8932  00105E  C062  F067         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  8933  001062  C063  F068         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  8934  001066  0E04               	movlw	4
  8935  001068  D006               	goto	u7460
  8936  00106A                     u7465:
  8937  00106A  0100               	movlb	0	; () banked
  8938  00106C  90D8               	bcf	status,0,c
  8939  00106E  3368               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  8940  001070  3367               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  8941  001072  3366               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  8942  001074  3365               	rrcf	??_CANSetFilter& (0+255),f,b
  8943  001076                     u7460:
  8944  001076  2EE8               	decfsz	wreg,f,c
  8945  001078  D7F8               	goto	u7465
  8946  00107A  C065  F06A         	movff	??_CANSetFilter,CANSetFilter@tamp
  8947  00107E  C066  F06B         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  8948  001082  C067  F06C         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  8949  001086  C068  F06D         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  8950                           
  8951                           ; BSR set to: 0
  8952                           ;CANlib.h: 809: tamp = tamp & 0x000000FF;
  8953  00108A  0100               	movlb	0	; () banked
  8954  00108C  516A               	movf	CANSetFilter@tamp& (0+255),w,b
  8955  00108E  0100               	movlb	0	; () banked
  8956  001090  6F6A               	movwf	CANSetFilter@tamp& (0+255),b
  8957  001092  6B6B               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  8958  001094  6B6C               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  8959  001096  6B6D               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  8960                           
  8961                           ; BSR set to: 0
  8962                           ;CANlib.h: 810: RXF4SIDH = (unsigned char) tamp;
  8963  001098  C06A  FF10         	movff	CANSetFilter@tamp,3856	;volatile
  8964                           
  8965                           ; BSR set to: 0
  8966                           ;CANlib.h: 812: tamp = filter & 0x00000007;
  8967  00109C  0E07               	movlw	7
  8968  00109E  0100               	movlb	0	; () banked
  8969  0010A0  1560               	andwf	CANSetFilter@filter& (0+255),w,b
  8970  0010A2  0100               	movlb	0	; () banked
  8971  0010A4  6F6A               	movwf	CANSetFilter@tamp& (0+255),b
  8972  0010A6  0E00               	movlw	0
  8973  0010A8  0100               	movlb	0	; () banked
  8974  0010AA  1561               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  8975  0010AC  0100               	movlb	0	; () banked
  8976  0010AE  6F6B               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  8977  0010B0  0E00               	movlw	0
  8978  0010B2  0100               	movlb	0	; () banked
  8979  0010B4  1562               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  8980  0010B6  0100               	movlb	0	; () banked
  8981  0010B8  6F6C               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  8982  0010BA  0E00               	movlw	0
  8983  0010BC  0100               	movlb	0	; () banked
  8984  0010BE  1563               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  8985  0010C0  0100               	movlb	0	; () banked
  8986  0010C2  6F6D               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  8987                           
  8988                           ; BSR set to: 0
  8989                           ;CANlib.h: 813: tamp = tamp << 5;
  8990  0010C4  C06A  F065         	movff	CANSetFilter@tamp,??_CANSetFilter
  8991  0010C8  C06B  F066         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  8992  0010CC  C06C  F067         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  8993  0010D0  C06D  F068         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  8994  0010D4  0E05               	movlw	5
  8995  0010D6                     u7475:
  8996  0010D6  90D8               	bcf	status,0,c
  8997  0010D8  0100               	movlb	0	; () banked
  8998  0010DA  3765               	rlcf	??_CANSetFilter& (0+255),f,b
  8999  0010DC  3766               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  9000  0010DE  3767               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  9001  0010E0  3768               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  9002  0010E2  2EE8               	decfsz	wreg,f,c
  9003  0010E4  D7F8               	goto	u7475
  9004  0010E6  C065  F06A         	movff	??_CANSetFilter,CANSetFilter@tamp
  9005  0010EA  C066  F06B         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  9006  0010EE  C067  F06C         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  9007  0010F2  C068  F06D         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  9008                           
  9009                           ; BSR set to: 0
  9010                           ;CANlib.h: 814: RXF4SIDL = (unsigned char) tamp;
  9011  0010F6  C06A  FF11         	movff	CANSetFilter@tamp,3857	;volatile
  9012  0010FA  D000               	goto	l5875
  9013  0010FC                     l5875:
  9014                           
  9015                           ; BSR set to: 0
  9016                           ;CANlib.h: 815: }
  9017                           ;CANlib.h: 817: if ((numBuffer ==CAN_FILTER_B2_F4) && (type == CAN_CONFIG_STD_MSG))
  9018  0010FC  0E05               	movlw	5
  9019  0010FE  0100               	movlb	0	; () banked
  9020  001100  1969               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  9021  001102  A4D8               	btfss	status,2,c
  9022  001104  D059               	goto	l5893
  9023                           
  9024                           ; BSR set to: 0
  9025  001106  0100               	movlb	0	; () banked
  9026  001108  2964               	incf	CANSetFilter@type& (0+255),w,b
  9027  00110A  A4D8               	btfss	status,2,c
  9028  00110C  D055               	goto	l5893
  9029                           
  9030                           ; BSR set to: 0
  9031                           ;CANlib.h: 818: {
  9032                           ;CANlib.h: 819: RXF5SIDLbits.EXIDEN = 0x00;
  9033  00110E  010F               	movlb	15	; () banked
  9034  001110  9715               	bcf	21,3,b	;volatile
  9035                           
  9036                           ; BSR set to: 15
  9037                           ;CANlib.h: 821: tamp = (filter >> 3);
  9038  001112  C060  F065         	movff	CANSetFilter@filter,??_CANSetFilter
  9039  001116  C061  F066         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  9040  00111A  C062  F067         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  9041  00111E  C063  F068         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  9042  001122  0E04               	movlw	4
  9043  001124  D006               	goto	u7500
  9044  001126                     u7505:
  9045  001126  0100               	movlb	0	; () banked
  9046  001128  90D8               	bcf	status,0,c
  9047  00112A  3368               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  9048  00112C  3367               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  9049  00112E  3366               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  9050  001130  3365               	rrcf	??_CANSetFilter& (0+255),f,b
  9051  001132                     u7500:
  9052  001132  2EE8               	decfsz	wreg,f,c
  9053  001134  D7F8               	goto	u7505
  9054  001136  C065  F06A         	movff	??_CANSetFilter,CANSetFilter@tamp
  9055  00113A  C066  F06B         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  9056  00113E  C067  F06C         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  9057  001142  C068  F06D         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  9058                           
  9059                           ; BSR set to: 0
  9060                           ;CANlib.h: 822: tamp = tamp & 0x000000FF;
  9061  001146  0100               	movlb	0	; () banked
  9062  001148  516A               	movf	CANSetFilter@tamp& (0+255),w,b
  9063  00114A  0100               	movlb	0	; () banked
  9064  00114C  6F6A               	movwf	CANSetFilter@tamp& (0+255),b
  9065  00114E  6B6B               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  9066  001150  6B6C               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  9067  001152  6B6D               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  9068                           
  9069                           ; BSR set to: 0
  9070                           ;CANlib.h: 823: RXF5SIDH = (unsigned char) tamp;
  9071  001154  C06A  FF14         	movff	CANSetFilter@tamp,3860	;volatile
  9072                           
  9073                           ; BSR set to: 0
  9074                           ;CANlib.h: 825: tamp = filter & 0x00000007;
  9075  001158  0E07               	movlw	7
  9076  00115A  0100               	movlb	0	; () banked
  9077  00115C  1560               	andwf	CANSetFilter@filter& (0+255),w,b
  9078  00115E  0100               	movlb	0	; () banked
  9079  001160  6F6A               	movwf	CANSetFilter@tamp& (0+255),b
  9080  001162  0E00               	movlw	0
  9081  001164  0100               	movlb	0	; () banked
  9082  001166  1561               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  9083  001168  0100               	movlb	0	; () banked
  9084  00116A  6F6B               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  9085  00116C  0E00               	movlw	0
  9086  00116E  0100               	movlb	0	; () banked
  9087  001170  1562               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  9088  001172  0100               	movlb	0	; () banked
  9089  001174  6F6C               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  9090  001176  0E00               	movlw	0
  9091  001178  0100               	movlb	0	; () banked
  9092  00117A  1563               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  9093  00117C  0100               	movlb	0	; () banked
  9094  00117E  6F6D               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  9095                           
  9096                           ; BSR set to: 0
  9097                           ;CANlib.h: 826: tamp = tamp << 5;
  9098  001180  C06A  F065         	movff	CANSetFilter@tamp,??_CANSetFilter
  9099  001184  C06B  F066         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  9100  001188  C06C  F067         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  9101  00118C  C06D  F068         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  9102  001190  0E05               	movlw	5
  9103  001192                     u7515:
  9104  001192  90D8               	bcf	status,0,c
  9105  001194  0100               	movlb	0	; () banked
  9106  001196  3765               	rlcf	??_CANSetFilter& (0+255),f,b
  9107  001198  3766               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  9108  00119A  3767               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  9109  00119C  3768               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  9110  00119E  2EE8               	decfsz	wreg,f,c
  9111  0011A0  D7F8               	goto	u7515
  9112  0011A2  C065  F06A         	movff	??_CANSetFilter,CANSetFilter@tamp
  9113  0011A6  C066  F06B         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  9114  0011AA  C067  F06C         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  9115  0011AE  C068  F06D         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  9116                           
  9117                           ; BSR set to: 0
  9118                           ;CANlib.h: 827: RXF5SIDL = (unsigned char) tamp;
  9119  0011B2  C06A  FF15         	movff	CANSetFilter@tamp,3861	;volatile
  9120  0011B6  D000               	goto	l5893
  9121  0011B8                     l5893:
  9122                           
  9123                           ; BSR set to: 0
  9124                           ;CANlib.h: 828: }
  9125                           ;CANlib.h: 831: if ((numBuffer ==CAN_FILTER_B1_F1) && (type == CAN_CONFIG_XTD_MSG))
  9126  0011B8  0100               	movlb	0	; () banked
  9127  0011BA  5169               	movf	CANSetFilter@numBuffer& (0+255),w,b
  9128  0011BC  0100               	movlb	0	; () banked
  9129  0011BE  A4D8               	btfss	status,2,c
  9130  0011C0  D08B               	goto	l5927
  9131                           
  9132                           ; BSR set to: 0
  9133  0011C2  0EF7               	movlw	247
  9134  0011C4  0100               	movlb	0	; () banked
  9135  0011C6  1964               	xorwf	CANSetFilter@type& (0+255),w,b
  9136  0011C8  A4D8               	btfss	status,2,c
  9137  0011CA  D086               	goto	l5927
  9138                           
  9139                           ; BSR set to: 0
  9140                           ;CANlib.h: 832: {
  9141                           ;CANlib.h: 833: RXF0SIDLbits.EXIDEN = 0x01;
  9142  0011CC  010F               	movlb	15	; () banked
  9143  0011CE  8701               	bsf	1,3,b	;volatile
  9144                           
  9145                           ; BSR set to: 15
  9146                           ;CANlib.h: 835: tamp = filter & 0x000000FF;
  9147  0011D0  0100               	movlb	0	; () banked
  9148  0011D2  5160               	movf	CANSetFilter@filter& (0+255),w,b
  9149  0011D4  0100               	movlb	0	; () banked
  9150  0011D6  6F6A               	movwf	CANSetFilter@tamp& (0+255),b
  9151  0011D8  6B6B               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  9152  0011DA  6B6C               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  9153  0011DC  6B6D               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  9154                           
  9155                           ; BSR set to: 0
  9156                           ;CANlib.h: 836: RXF0EIDL = (unsigned char) tamp;
  9157  0011DE  C06A  FF03         	movff	CANSetFilter@tamp,3843	;volatile
  9158                           
  9159                           ; BSR set to: 0
  9160                           ;CANlib.h: 838: tamp = filter & 0x0000FF00;
  9161  0011E2  0E00               	movlw	0
  9162  0011E4  0100               	movlb	0	; () banked
  9163  0011E6  1560               	andwf	CANSetFilter@filter& (0+255),w,b
  9164  0011E8  0100               	movlb	0	; () banked
  9165  0011EA  6F6A               	movwf	CANSetFilter@tamp& (0+255),b
  9166  0011EC  0EFF               	movlw	255
  9167  0011EE  0100               	movlb	0	; () banked
  9168  0011F0  1561               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  9169  0011F2  0100               	movlb	0	; () banked
  9170  0011F4  6F6B               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  9171  0011F6  0E00               	movlw	0
  9172  0011F8  0100               	movlb	0	; () banked
  9173  0011FA  1562               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  9174  0011FC  0100               	movlb	0	; () banked
  9175  0011FE  6F6C               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  9176  001200  0E00               	movlw	0
  9177  001202  0100               	movlb	0	; () banked
  9178  001204  1563               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  9179  001206  0100               	movlb	0	; () banked
  9180  001208  6F6D               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  9181                           
  9182                           ; BSR set to: 0
  9183                           ;CANlib.h: 839: tamp = tamp >> 8;
  9184  00120A  C06A  F065         	movff	CANSetFilter@tamp,??_CANSetFilter
  9185  00120E  C06B  F066         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  9186  001212  C06C  F067         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  9187  001216  C06D  F068         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  9188  00121A  C066  F065         	movff	??_CANSetFilter+1,??_CANSetFilter
  9189  00121E  C067  F066         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  9190  001222  C068  F067         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  9191  001226  0100               	movlb	0	; () banked
  9192  001228  6B68               	clrf	(??_CANSetFilter+3)& (0+255),b
  9193  00122A  C065  F06A         	movff	??_CANSetFilter,CANSetFilter@tamp
  9194  00122E  C066  F06B         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  9195  001232  C067  F06C         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  9196  001236  C068  F06D         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  9197                           
  9198                           ; BSR set to: 0
  9199                           ;CANlib.h: 840: RXF0EIDH = (unsigned char) tamp;
  9200  00123A  C06A  FF02         	movff	CANSetFilter@tamp,3842	;volatile
  9201                           
  9202                           ; BSR set to: 0
  9203                           ;CANlib.h: 842: if (filter & 0x00010000)
  9204  00123E  0100               	movlb	0	; () banked
  9205  001240  A162               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
  9206  001242  D003               	goto	l469
  9207                           
  9208                           ; BSR set to: 0
  9209                           ;CANlib.h: 843: RXF0SIDLbits.EID16 = 0x01;
  9210  001244  010F               	movlb	15	; () banked
  9211  001246  8101               	bsf	1,0,b	;volatile
  9212  001248  D002               	goto	l470
  9213  00124A                     l469:
  9214                           
  9215                           ; BSR set to: 0
  9216                           ;CANlib.h: 844: else
  9217                           ;CANlib.h: 845: RXF0SIDLbits.EID16 = 0x00;
  9218  00124A  010F               	movlb	15	; () banked
  9219  00124C  9101               	bcf	1,0,b	;volatile
  9220  00124E                     l470:
  9221                           
  9222                           ; BSR set to: 15
  9223                           ;CANlib.h: 847: if (filter & 0x00020000)
  9224  00124E  0100               	movlb	0	; () banked
  9225  001250  A362               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
  9226  001252  D003               	goto	l471
  9227                           
  9228                           ; BSR set to: 0
  9229                           ;CANlib.h: 848: RXF0SIDLbits.EID17 = 0x01;
  9230  001254  010F               	movlb	15	; () banked
  9231  001256  8301               	bsf	1,1,b	;volatile
  9232  001258  D002               	goto	l472
  9233  00125A                     l471:
  9234                           
  9235                           ; BSR set to: 0
  9236                           ;CANlib.h: 849: else
  9237                           ;CANlib.h: 850: RXF0SIDLbits.EID17 = 0x00;
  9238  00125A  010F               	movlb	15	; () banked
  9239  00125C  9301               	bcf	1,1,b	;volatile
  9240  00125E                     l472:
  9241                           
  9242                           ; BSR set to: 15
  9243                           ;CANlib.h: 852: if (filter & 0x00040000)
  9244  00125E  0100               	movlb	0	; () banked
  9245  001260  A562               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
  9246  001262  D003               	goto	l473
  9247                           
  9248                           ; BSR set to: 0
  9249                           ;CANlib.h: 853: RXF0SIDLbits.SID0 = 0x01;
  9250  001264  010F               	movlb	15	; () banked
  9251  001266  8B01               	bsf	1,5,b	;volatile
  9252  001268  D002               	goto	l474
  9253  00126A                     l473:
  9254                           
  9255                           ; BSR set to: 0
  9256                           ;CANlib.h: 854: else
  9257                           ;CANlib.h: 855: RXF0SIDLbits.SID0 = 0x00;
  9258  00126A  010F               	movlb	15	; () banked
  9259  00126C  9B01               	bcf	1,5,b	;volatile
  9260  00126E                     l474:
  9261                           
  9262                           ; BSR set to: 15
  9263                           ;CANlib.h: 857: if (filter & 0x00080000)
  9264  00126E  0100               	movlb	0	; () banked
  9265  001270  A762               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
  9266  001272  D003               	goto	l475
  9267                           
  9268                           ; BSR set to: 0
  9269                           ;CANlib.h: 858: RXF0SIDLbits.SID1 = 0x01;
  9270  001274  010F               	movlb	15	; () banked
  9271  001276  8D01               	bsf	1,6,b	;volatile
  9272  001278  D002               	goto	l476
  9273  00127A                     l475:
  9274                           
  9275                           ; BSR set to: 0
  9276                           ;CANlib.h: 859: else
  9277                           ;CANlib.h: 860: RXF0SIDLbits.SID1 = 0x00;
  9278  00127A  010F               	movlb	15	; () banked
  9279  00127C  9D01               	bcf	1,6,b	;volatile
  9280  00127E                     l476:
  9281                           
  9282                           ; BSR set to: 15
  9283                           ;CANlib.h: 862: if (filter & 0x00100000)
  9284  00127E  0100               	movlb	0	; () banked
  9285  001280  A962               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
  9286  001282  D003               	goto	l477
  9287                           
  9288                           ; BSR set to: 0
  9289                           ;CANlib.h: 863: RXF0SIDLbits.SID2 = 0x01 ;
  9290  001284  010F               	movlb	15	; () banked
  9291  001286  8F01               	bsf	1,7,b	;volatile
  9292  001288  D003               	goto	l5921
  9293  00128A                     l477:
  9294                           
  9295                           ; BSR set to: 0
  9296                           ;CANlib.h: 864: else
  9297                           ;CANlib.h: 865: RXF0SIDLbits.SID2 = 0x00 ;
  9298  00128A  010F               	movlb	15	; () banked
  9299  00128C  9F01               	bcf	1,7,b	;volatile
  9300  00128E  D000               	goto	l5921
  9301  001290                     l5921:
  9302                           
  9303                           ; BSR set to: 15
  9304                           ;CANlib.h: 867: tamp = (filter >> 21);
  9305  001290  C060  F065         	movff	CANSetFilter@filter,??_CANSetFilter
  9306  001294  C061  F066         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  9307  001298  C062  F067         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  9308  00129C  C063  F068         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  9309  0012A0  0E16               	movlw	22
  9310  0012A2  D006               	goto	u7590
  9311  0012A4                     u7595:
  9312  0012A4  0100               	movlb	0	; () banked
  9313  0012A6  90D8               	bcf	status,0,c
  9314  0012A8  3368               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  9315  0012AA  3367               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  9316  0012AC  3366               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  9317  0012AE  3365               	rrcf	??_CANSetFilter& (0+255),f,b
  9318  0012B0                     u7590:
  9319  0012B0  2EE8               	decfsz	wreg,f,c
  9320  0012B2  D7F8               	goto	u7595
  9321  0012B4  C065  F06A         	movff	??_CANSetFilter,CANSetFilter@tamp
  9322  0012B8  C066  F06B         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  9323  0012BC  C067  F06C         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  9324  0012C0  C068  F06D         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  9325                           
  9326                           ; BSR set to: 0
  9327                           ;CANlib.h: 868: tamp = tamp & 0x000000FF;
  9328  0012C4  0100               	movlb	0	; () banked
  9329  0012C6  516A               	movf	CANSetFilter@tamp& (0+255),w,b
  9330  0012C8  0100               	movlb	0	; () banked
  9331  0012CA  6F6A               	movwf	CANSetFilter@tamp& (0+255),b
  9332  0012CC  6B6B               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  9333  0012CE  6B6C               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  9334  0012D0  6B6D               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  9335                           
  9336                           ; BSR set to: 0
  9337                           ;CANlib.h: 869: RXF0SIDH = (unsigned char) tamp;
  9338  0012D2  C06A  FF00         	movff	CANSetFilter@tamp,3840	;volatile
  9339  0012D6  D000               	goto	l5927
  9340  0012D8                     l5927:
  9341                           
  9342                           ; BSR set to: 0
  9343                           ;CANlib.h: 870: }
  9344                           ;CANlib.h: 872: if ((numBuffer ==CAN_FILTER_B1_F2) && (type == CAN_CONFIG_XTD_MSG))
  9345  0012D8  0100               	movlb	0	; () banked
  9346  0012DA  0569               	decf	CANSetFilter@numBuffer& (0+255),w,b
  9347  0012DC  A4D8               	btfss	status,2,c
  9348  0012DE  D08B               	goto	l5961
  9349                           
  9350                           ; BSR set to: 0
  9351  0012E0  0EF7               	movlw	247
  9352  0012E2  0100               	movlb	0	; () banked
  9353  0012E4  1964               	xorwf	CANSetFilter@type& (0+255),w,b
  9354  0012E6  A4D8               	btfss	status,2,c
  9355  0012E8  D086               	goto	l5961
  9356                           
  9357                           ; BSR set to: 0
  9358                           ;CANlib.h: 873: {
  9359                           ;CANlib.h: 874: RXF1SIDLbits.EXIDEN = 0x01;
  9360  0012EA  010F               	movlb	15	; () banked
  9361  0012EC  8705               	bsf	5,3,b	;volatile
  9362                           
  9363                           ; BSR set to: 15
  9364                           ;CANlib.h: 876: tamp = filter & 0x000000FF;
  9365  0012EE  0100               	movlb	0	; () banked
  9366  0012F0  5160               	movf	CANSetFilter@filter& (0+255),w,b
  9367  0012F2  0100               	movlb	0	; () banked
  9368  0012F4  6F6A               	movwf	CANSetFilter@tamp& (0+255),b
  9369  0012F6  6B6B               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  9370  0012F8  6B6C               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  9371  0012FA  6B6D               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  9372                           
  9373                           ; BSR set to: 0
  9374                           ;CANlib.h: 877: RXF1EIDL = (unsigned char) tamp;
  9375  0012FC  C06A  FF07         	movff	CANSetFilter@tamp,3847	;volatile
  9376                           
  9377                           ; BSR set to: 0
  9378                           ;CANlib.h: 879: tamp = filter & 0x0000FF00;
  9379  001300  0E00               	movlw	0
  9380  001302  0100               	movlb	0	; () banked
  9381  001304  1560               	andwf	CANSetFilter@filter& (0+255),w,b
  9382  001306  0100               	movlb	0	; () banked
  9383  001308  6F6A               	movwf	CANSetFilter@tamp& (0+255),b
  9384  00130A  0EFF               	movlw	255
  9385  00130C  0100               	movlb	0	; () banked
  9386  00130E  1561               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  9387  001310  0100               	movlb	0	; () banked
  9388  001312  6F6B               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  9389  001314  0E00               	movlw	0
  9390  001316  0100               	movlb	0	; () banked
  9391  001318  1562               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  9392  00131A  0100               	movlb	0	; () banked
  9393  00131C  6F6C               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  9394  00131E  0E00               	movlw	0
  9395  001320  0100               	movlb	0	; () banked
  9396  001322  1563               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  9397  001324  0100               	movlb	0	; () banked
  9398  001326  6F6D               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  9399                           
  9400                           ; BSR set to: 0
  9401                           ;CANlib.h: 880: tamp = tamp >> 8;
  9402  001328  C06A  F065         	movff	CANSetFilter@tamp,??_CANSetFilter
  9403  00132C  C06B  F066         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  9404  001330  C06C  F067         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  9405  001334  C06D  F068         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  9406  001338  C066  F065         	movff	??_CANSetFilter+1,??_CANSetFilter
  9407  00133C  C067  F066         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  9408  001340  C068  F067         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  9409  001344  0100               	movlb	0	; () banked
  9410  001346  6B68               	clrf	(??_CANSetFilter+3)& (0+255),b
  9411  001348  C065  F06A         	movff	??_CANSetFilter,CANSetFilter@tamp
  9412  00134C  C066  F06B         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  9413  001350  C067  F06C         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  9414  001354  C068  F06D         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  9415                           
  9416                           ; BSR set to: 0
  9417                           ;CANlib.h: 881: RXF1EIDH = (unsigned char) tamp;
  9418  001358  C06A  FF06         	movff	CANSetFilter@tamp,3846	;volatile
  9419                           
  9420                           ; BSR set to: 0
  9421                           ;CANlib.h: 883: if (filter & 0x00010000)
  9422  00135C  0100               	movlb	0	; () banked
  9423  00135E  A162               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
  9424  001360  D003               	goto	l480
  9425                           
  9426                           ; BSR set to: 0
  9427                           ;CANlib.h: 884: RXF1SIDLbits.EID16 = 0x01;
  9428  001362  010F               	movlb	15	; () banked
  9429  001364  8105               	bsf	5,0,b	;volatile
  9430  001366  D002               	goto	l481
  9431  001368                     l480:
  9432                           
  9433                           ; BSR set to: 0
  9434                           ;CANlib.h: 885: else
  9435                           ;CANlib.h: 886: RXF1SIDLbits.EID16 = 0x00;
  9436  001368  010F               	movlb	15	; () banked
  9437  00136A  9105               	bcf	5,0,b	;volatile
  9438  00136C                     l481:
  9439                           
  9440                           ; BSR set to: 15
  9441                           ;CANlib.h: 888: if (filter & 0x00020000)
  9442  00136C  0100               	movlb	0	; () banked
  9443  00136E  A362               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
  9444  001370  D003               	goto	l482
  9445                           
  9446                           ; BSR set to: 0
  9447                           ;CANlib.h: 889: RXF1SIDLbits.EID17 = 0x01;
  9448  001372  010F               	movlb	15	; () banked
  9449  001374  8305               	bsf	5,1,b	;volatile
  9450  001376  D002               	goto	l483
  9451  001378                     l482:
  9452                           
  9453                           ; BSR set to: 0
  9454                           ;CANlib.h: 890: else
  9455                           ;CANlib.h: 891: RXF1SIDLbits.EID17 = 0x00;
  9456  001378  010F               	movlb	15	; () banked
  9457  00137A  9305               	bcf	5,1,b	;volatile
  9458  00137C                     l483:
  9459                           
  9460                           ; BSR set to: 15
  9461                           ;CANlib.h: 893: if (filter & 0x00040000)
  9462  00137C  0100               	movlb	0	; () banked
  9463  00137E  A562               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
  9464  001380  D003               	goto	l484
  9465                           
  9466                           ; BSR set to: 0
  9467                           ;CANlib.h: 894: RXF1SIDLbits.SID0 = 0x01;
  9468  001382  010F               	movlb	15	; () banked
  9469  001384  8B05               	bsf	5,5,b	;volatile
  9470  001386  D002               	goto	l485
  9471  001388                     l484:
  9472                           
  9473                           ; BSR set to: 0
  9474                           ;CANlib.h: 895: else
  9475                           ;CANlib.h: 896: RXF1SIDLbits.SID0 = 0x00;
  9476  001388  010F               	movlb	15	; () banked
  9477  00138A  9B05               	bcf	5,5,b	;volatile
  9478  00138C                     l485:
  9479                           
  9480                           ; BSR set to: 15
  9481                           ;CANlib.h: 898: if (filter & 0x00080000)
  9482  00138C  0100               	movlb	0	; () banked
  9483  00138E  A762               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
  9484  001390  D003               	goto	l486
  9485                           
  9486                           ; BSR set to: 0
  9487                           ;CANlib.h: 899: RXF1SIDLbits.SID1 = 0x01;
  9488  001392  010F               	movlb	15	; () banked
  9489  001394  8D05               	bsf	5,6,b	;volatile
  9490  001396  D002               	goto	l487
  9491  001398                     l486:
  9492                           
  9493                           ; BSR set to: 0
  9494                           ;CANlib.h: 900: else
  9495                           ;CANlib.h: 901: RXF1SIDLbits.SID1 = 0x00;
  9496  001398  010F               	movlb	15	; () banked
  9497  00139A  9D05               	bcf	5,6,b	;volatile
  9498  00139C                     l487:
  9499                           
  9500                           ; BSR set to: 15
  9501                           ;CANlib.h: 903: if (filter & 0x00100000)
  9502  00139C  0100               	movlb	0	; () banked
  9503  00139E  A962               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
  9504  0013A0  D003               	goto	l488
  9505                           
  9506                           ; BSR set to: 0
  9507                           ;CANlib.h: 904: RXF1SIDLbits.SID2 = 0x01 ;
  9508  0013A2  010F               	movlb	15	; () banked
  9509  0013A4  8F05               	bsf	5,7,b	;volatile
  9510  0013A6  D003               	goto	l5955
  9511  0013A8                     l488:
  9512                           
  9513                           ; BSR set to: 0
  9514                           ;CANlib.h: 905: else
  9515                           ;CANlib.h: 906: RXF1SIDLbits.SID2 = 0x00 ;
  9516  0013A8  010F               	movlb	15	; () banked
  9517  0013AA  9F05               	bcf	5,7,b	;volatile
  9518  0013AC  D000               	goto	l5955
  9519  0013AE                     l5955:
  9520                           
  9521                           ; BSR set to: 15
  9522                           ;CANlib.h: 908: tamp = (filter >> 21);
  9523  0013AE  C060  F065         	movff	CANSetFilter@filter,??_CANSetFilter
  9524  0013B2  C061  F066         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  9525  0013B6  C062  F067         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  9526  0013BA  C063  F068         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  9527  0013BE  0E16               	movlw	22
  9528  0013C0  D006               	goto	u7670
  9529  0013C2                     u7675:
  9530  0013C2  0100               	movlb	0	; () banked
  9531  0013C4  90D8               	bcf	status,0,c
  9532  0013C6  3368               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  9533  0013C8  3367               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  9534  0013CA  3366               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  9535  0013CC  3365               	rrcf	??_CANSetFilter& (0+255),f,b
  9536  0013CE                     u7670:
  9537  0013CE  2EE8               	decfsz	wreg,f,c
  9538  0013D0  D7F8               	goto	u7675
  9539  0013D2  C065  F06A         	movff	??_CANSetFilter,CANSetFilter@tamp
  9540  0013D6  C066  F06B         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  9541  0013DA  C067  F06C         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  9542  0013DE  C068  F06D         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  9543                           
  9544                           ; BSR set to: 0
  9545                           ;CANlib.h: 909: tamp = tamp & 0x000000FF;
  9546  0013E2  0100               	movlb	0	; () banked
  9547  0013E4  516A               	movf	CANSetFilter@tamp& (0+255),w,b
  9548  0013E6  0100               	movlb	0	; () banked
  9549  0013E8  6F6A               	movwf	CANSetFilter@tamp& (0+255),b
  9550  0013EA  6B6B               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  9551  0013EC  6B6C               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  9552  0013EE  6B6D               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  9553                           
  9554                           ; BSR set to: 0
  9555                           ;CANlib.h: 910: RXF1SIDH = (unsigned char) tamp;
  9556  0013F0  C06A  FF04         	movff	CANSetFilter@tamp,3844	;volatile
  9557  0013F4  D000               	goto	l5961
  9558  0013F6                     l5961:
  9559                           
  9560                           ; BSR set to: 0
  9561                           ;CANlib.h: 911: }
  9562                           ;CANlib.h: 914: if ((numBuffer ==CAN_FILTER_B2_F1) && (type == CAN_CONFIG_XTD_MSG))
  9563  0013F6  0E02               	movlw	2
  9564  0013F8  0100               	movlb	0	; () banked
  9565  0013FA  1969               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  9566  0013FC  A4D8               	btfss	status,2,c
  9567  0013FE  D08B               	goto	l5995
  9568                           
  9569                           ; BSR set to: 0
  9570  001400  0EF7               	movlw	247
  9571  001402  0100               	movlb	0	; () banked
  9572  001404  1964               	xorwf	CANSetFilter@type& (0+255),w,b
  9573  001406  A4D8               	btfss	status,2,c
  9574  001408  D086               	goto	l5995
  9575                           
  9576                           ; BSR set to: 0
  9577                           ;CANlib.h: 915: {
  9578                           ;CANlib.h: 916: RXF2SIDLbits.EXIDEN = 0x01;
  9579  00140A  010F               	movlb	15	; () banked
  9580  00140C  8709               	bsf	9,3,b	;volatile
  9581                           
  9582                           ; BSR set to: 15
  9583                           ;CANlib.h: 918: tamp = filter & 0x000000FF;
  9584  00140E  0100               	movlb	0	; () banked
  9585  001410  5160               	movf	CANSetFilter@filter& (0+255),w,b
  9586  001412  0100               	movlb	0	; () banked
  9587  001414  6F6A               	movwf	CANSetFilter@tamp& (0+255),b
  9588  001416  6B6B               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  9589  001418  6B6C               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  9590  00141A  6B6D               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  9591                           
  9592                           ; BSR set to: 0
  9593                           ;CANlib.h: 919: RXF2EIDL = (unsigned char) tamp;
  9594  00141C  C06A  FF0B         	movff	CANSetFilter@tamp,3851	;volatile
  9595                           
  9596                           ; BSR set to: 0
  9597                           ;CANlib.h: 921: tamp = filter & 0x0000FF00;
  9598  001420  0E00               	movlw	0
  9599  001422  0100               	movlb	0	; () banked
  9600  001424  1560               	andwf	CANSetFilter@filter& (0+255),w,b
  9601  001426  0100               	movlb	0	; () banked
  9602  001428  6F6A               	movwf	CANSetFilter@tamp& (0+255),b
  9603  00142A  0EFF               	movlw	255
  9604  00142C  0100               	movlb	0	; () banked
  9605  00142E  1561               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  9606  001430  0100               	movlb	0	; () banked
  9607  001432  6F6B               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  9608  001434  0E00               	movlw	0
  9609  001436  0100               	movlb	0	; () banked
  9610  001438  1562               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  9611  00143A  0100               	movlb	0	; () banked
  9612  00143C  6F6C               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  9613  00143E  0E00               	movlw	0
  9614  001440  0100               	movlb	0	; () banked
  9615  001442  1563               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  9616  001444  0100               	movlb	0	; () banked
  9617  001446  6F6D               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  9618                           
  9619                           ; BSR set to: 0
  9620                           ;CANlib.h: 922: tamp = tamp >> 8;
  9621  001448  C06A  F065         	movff	CANSetFilter@tamp,??_CANSetFilter
  9622  00144C  C06B  F066         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  9623  001450  C06C  F067         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  9624  001454  C06D  F068         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  9625  001458  C066  F065         	movff	??_CANSetFilter+1,??_CANSetFilter
  9626  00145C  C067  F066         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  9627  001460  C068  F067         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  9628  001464  0100               	movlb	0	; () banked
  9629  001466  6B68               	clrf	(??_CANSetFilter+3)& (0+255),b
  9630  001468  C065  F06A         	movff	??_CANSetFilter,CANSetFilter@tamp
  9631  00146C  C066  F06B         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  9632  001470  C067  F06C         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  9633  001474  C068  F06D         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  9634                           
  9635                           ; BSR set to: 0
  9636                           ;CANlib.h: 923: RXF2EIDH = (unsigned char) tamp;
  9637  001478  C06A  FF0A         	movff	CANSetFilter@tamp,3850	;volatile
  9638                           
  9639                           ; BSR set to: 0
  9640                           ;CANlib.h: 925: if (filter & 0x00010000)
  9641  00147C  0100               	movlb	0	; () banked
  9642  00147E  A162               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
  9643  001480  D003               	goto	l491
  9644                           
  9645                           ; BSR set to: 0
  9646                           ;CANlib.h: 926: RXF2SIDLbits.EID16 = 0x01;
  9647  001482  010F               	movlb	15	; () banked
  9648  001484  8109               	bsf	9,0,b	;volatile
  9649  001486  D002               	goto	l492
  9650  001488                     l491:
  9651                           
  9652                           ; BSR set to: 0
  9653                           ;CANlib.h: 927: else
  9654                           ;CANlib.h: 928: RXF2SIDLbits.EID16 = 0x00;
  9655  001488  010F               	movlb	15	; () banked
  9656  00148A  9109               	bcf	9,0,b	;volatile
  9657  00148C                     l492:
  9658                           
  9659                           ; BSR set to: 15
  9660                           ;CANlib.h: 930: if (filter & 0x00020000)
  9661  00148C  0100               	movlb	0	; () banked
  9662  00148E  A362               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
  9663  001490  D003               	goto	l493
  9664                           
  9665                           ; BSR set to: 0
  9666                           ;CANlib.h: 931: RXF2SIDLbits.EID17 = 0x01;
  9667  001492  010F               	movlb	15	; () banked
  9668  001494  8309               	bsf	9,1,b	;volatile
  9669  001496  D002               	goto	l494
  9670  001498                     l493:
  9671                           
  9672                           ; BSR set to: 0
  9673                           ;CANlib.h: 932: else
  9674                           ;CANlib.h: 933: RXF2SIDLbits.EID17 = 0x00;
  9675  001498  010F               	movlb	15	; () banked
  9676  00149A  9309               	bcf	9,1,b	;volatile
  9677  00149C                     l494:
  9678                           
  9679                           ; BSR set to: 15
  9680                           ;CANlib.h: 935: if (filter & 0x00040000)
  9681  00149C  0100               	movlb	0	; () banked
  9682  00149E  A562               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
  9683  0014A0  D003               	goto	l495
  9684                           
  9685                           ; BSR set to: 0
  9686                           ;CANlib.h: 936: RXF2SIDLbits.SID0 = 0x01;
  9687  0014A2  010F               	movlb	15	; () banked
  9688  0014A4  8B09               	bsf	9,5,b	;volatile
  9689  0014A6  D002               	goto	l496
  9690  0014A8                     l495:
  9691                           
  9692                           ; BSR set to: 0
  9693                           ;CANlib.h: 937: else
  9694                           ;CANlib.h: 938: RXF2SIDLbits.SID0 = 0x00;
  9695  0014A8  010F               	movlb	15	; () banked
  9696  0014AA  9B09               	bcf	9,5,b	;volatile
  9697  0014AC                     l496:
  9698                           
  9699                           ; BSR set to: 15
  9700                           ;CANlib.h: 940: if (filter & 0x00080000)
  9701  0014AC  0100               	movlb	0	; () banked
  9702  0014AE  A762               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
  9703  0014B0  D003               	goto	l497
  9704                           
  9705                           ; BSR set to: 0
  9706                           ;CANlib.h: 941: RXF2SIDLbits.SID1 = 0x01;
  9707  0014B2  010F               	movlb	15	; () banked
  9708  0014B4  8D09               	bsf	9,6,b	;volatile
  9709  0014B6  D002               	goto	l498
  9710  0014B8                     l497:
  9711                           
  9712                           ; BSR set to: 0
  9713                           ;CANlib.h: 942: else
  9714                           ;CANlib.h: 943: RXF2SIDLbits.SID1 = 0x00;
  9715  0014B8  010F               	movlb	15	; () banked
  9716  0014BA  9D09               	bcf	9,6,b	;volatile
  9717  0014BC                     l498:
  9718                           
  9719                           ; BSR set to: 15
  9720                           ;CANlib.h: 945: if (filter & 0x00100000)
  9721  0014BC  0100               	movlb	0	; () banked
  9722  0014BE  A962               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
  9723  0014C0  D003               	goto	l499
  9724                           
  9725                           ; BSR set to: 0
  9726                           ;CANlib.h: 946: RXF2SIDLbits.SID2 = 0x01 ;
  9727  0014C2  010F               	movlb	15	; () banked
  9728  0014C4  8F09               	bsf	9,7,b	;volatile
  9729  0014C6  D003               	goto	l5989
  9730  0014C8                     l499:
  9731                           
  9732                           ; BSR set to: 0
  9733                           ;CANlib.h: 947: else
  9734                           ;CANlib.h: 948: RXF2SIDLbits.SID2 = 0x00 ;
  9735  0014C8  010F               	movlb	15	; () banked
  9736  0014CA  9F09               	bcf	9,7,b	;volatile
  9737  0014CC  D000               	goto	l5989
  9738  0014CE                     l5989:
  9739                           
  9740                           ; BSR set to: 15
  9741                           ;CANlib.h: 950: tamp = (filter >> 21);
  9742  0014CE  C060  F065         	movff	CANSetFilter@filter,??_CANSetFilter
  9743  0014D2  C061  F066         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  9744  0014D6  C062  F067         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  9745  0014DA  C063  F068         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  9746  0014DE  0E16               	movlw	22
  9747  0014E0  D006               	goto	u7750
  9748  0014E2                     u7755:
  9749  0014E2  0100               	movlb	0	; () banked
  9750  0014E4  90D8               	bcf	status,0,c
  9751  0014E6  3368               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  9752  0014E8  3367               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  9753  0014EA  3366               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  9754  0014EC  3365               	rrcf	??_CANSetFilter& (0+255),f,b
  9755  0014EE                     u7750:
  9756  0014EE  2EE8               	decfsz	wreg,f,c
  9757  0014F0  D7F8               	goto	u7755
  9758  0014F2  C065  F06A         	movff	??_CANSetFilter,CANSetFilter@tamp
  9759  0014F6  C066  F06B         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  9760  0014FA  C067  F06C         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  9761  0014FE  C068  F06D         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  9762                           
  9763                           ; BSR set to: 0
  9764                           ;CANlib.h: 951: tamp = tamp & 0x000000FF;
  9765  001502  0100               	movlb	0	; () banked
  9766  001504  516A               	movf	CANSetFilter@tamp& (0+255),w,b
  9767  001506  0100               	movlb	0	; () banked
  9768  001508  6F6A               	movwf	CANSetFilter@tamp& (0+255),b
  9769  00150A  6B6B               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  9770  00150C  6B6C               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  9771  00150E  6B6D               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  9772                           
  9773                           ; BSR set to: 0
  9774                           ;CANlib.h: 952: RXF2SIDH = (unsigned char) tamp;
  9775  001510  C06A  FF08         	movff	CANSetFilter@tamp,3848	;volatile
  9776  001514  D000               	goto	l5995
  9777  001516                     l5995:
  9778                           
  9779                           ; BSR set to: 0
  9780                           ;CANlib.h: 953: }
  9781                           ;CANlib.h: 955: if ((numBuffer ==CAN_FILTER_B2_F2) && (type == CAN_CONFIG_XTD_MSG))
  9782  001516  0E03               	movlw	3
  9783  001518  0100               	movlb	0	; () banked
  9784  00151A  1969               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  9785  00151C  A4D8               	btfss	status,2,c
  9786  00151E  D08B               	goto	l6029
  9787                           
  9788                           ; BSR set to: 0
  9789  001520  0EF7               	movlw	247
  9790  001522  0100               	movlb	0	; () banked
  9791  001524  1964               	xorwf	CANSetFilter@type& (0+255),w,b
  9792  001526  A4D8               	btfss	status,2,c
  9793  001528  D086               	goto	l6029
  9794                           
  9795                           ; BSR set to: 0
  9796                           ;CANlib.h: 956: {
  9797                           ;CANlib.h: 957: RXF3SIDLbits.EXIDEN = 0x01;
  9798  00152A  010F               	movlb	15	; () banked
  9799  00152C  870D               	bsf	13,3,b	;volatile
  9800                           
  9801                           ; BSR set to: 15
  9802                           ;CANlib.h: 959: tamp = filter & 0x000000FF;
  9803  00152E  0100               	movlb	0	; () banked
  9804  001530  5160               	movf	CANSetFilter@filter& (0+255),w,b
  9805  001532  0100               	movlb	0	; () banked
  9806  001534  6F6A               	movwf	CANSetFilter@tamp& (0+255),b
  9807  001536  6B6B               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  9808  001538  6B6C               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  9809  00153A  6B6D               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  9810                           
  9811                           ; BSR set to: 0
  9812                           ;CANlib.h: 960: RXF3EIDL = (unsigned char) tamp;
  9813  00153C  C06A  FF0F         	movff	CANSetFilter@tamp,3855	;volatile
  9814                           
  9815                           ; BSR set to: 0
  9816                           ;CANlib.h: 962: tamp = filter & 0x0000FF00;
  9817  001540  0E00               	movlw	0
  9818  001542  0100               	movlb	0	; () banked
  9819  001544  1560               	andwf	CANSetFilter@filter& (0+255),w,b
  9820  001546  0100               	movlb	0	; () banked
  9821  001548  6F6A               	movwf	CANSetFilter@tamp& (0+255),b
  9822  00154A  0EFF               	movlw	255
  9823  00154C  0100               	movlb	0	; () banked
  9824  00154E  1561               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  9825  001550  0100               	movlb	0	; () banked
  9826  001552  6F6B               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  9827  001554  0E00               	movlw	0
  9828  001556  0100               	movlb	0	; () banked
  9829  001558  1562               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  9830  00155A  0100               	movlb	0	; () banked
  9831  00155C  6F6C               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  9832  00155E  0E00               	movlw	0
  9833  001560  0100               	movlb	0	; () banked
  9834  001562  1563               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  9835  001564  0100               	movlb	0	; () banked
  9836  001566  6F6D               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  9837                           
  9838                           ; BSR set to: 0
  9839                           ;CANlib.h: 963: tamp = tamp >> 8;
  9840  001568  C06A  F065         	movff	CANSetFilter@tamp,??_CANSetFilter
  9841  00156C  C06B  F066         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  9842  001570  C06C  F067         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  9843  001574  C06D  F068         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  9844  001578  C066  F065         	movff	??_CANSetFilter+1,??_CANSetFilter
  9845  00157C  C067  F066         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  9846  001580  C068  F067         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  9847  001584  0100               	movlb	0	; () banked
  9848  001586  6B68               	clrf	(??_CANSetFilter+3)& (0+255),b
  9849  001588  C065  F06A         	movff	??_CANSetFilter,CANSetFilter@tamp
  9850  00158C  C066  F06B         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  9851  001590  C067  F06C         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  9852  001594  C068  F06D         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  9853                           
  9854                           ; BSR set to: 0
  9855                           ;CANlib.h: 964: RXF3EIDH = (unsigned char) tamp;
  9856  001598  C06A  FF0E         	movff	CANSetFilter@tamp,3854	;volatile
  9857                           
  9858                           ; BSR set to: 0
  9859                           ;CANlib.h: 966: if (filter & 0x00010000)
  9860  00159C  0100               	movlb	0	; () banked
  9861  00159E  A162               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
  9862  0015A0  D003               	goto	l502
  9863                           
  9864                           ; BSR set to: 0
  9865                           ;CANlib.h: 967: RXF3SIDLbits.EID16 = 0x01;
  9866  0015A2  010F               	movlb	15	; () banked
  9867  0015A4  810D               	bsf	13,0,b	;volatile
  9868  0015A6  D002               	goto	l503
  9869  0015A8                     l502:
  9870                           
  9871                           ; BSR set to: 0
  9872                           ;CANlib.h: 968: else
  9873                           ;CANlib.h: 969: RXF3SIDLbits.EID16 = 0x00;
  9874  0015A8  010F               	movlb	15	; () banked
  9875  0015AA  910D               	bcf	13,0,b	;volatile
  9876  0015AC                     l503:
  9877                           
  9878                           ; BSR set to: 15
  9879                           ;CANlib.h: 971: if (filter & 0x00020000)
  9880  0015AC  0100               	movlb	0	; () banked
  9881  0015AE  A362               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
  9882  0015B0  D003               	goto	l504
  9883                           
  9884                           ; BSR set to: 0
  9885                           ;CANlib.h: 972: RXF3SIDLbits.EID17 = 0x01;
  9886  0015B2  010F               	movlb	15	; () banked
  9887  0015B4  830D               	bsf	13,1,b	;volatile
  9888  0015B6  D002               	goto	l505
  9889  0015B8                     l504:
  9890                           
  9891                           ; BSR set to: 0
  9892                           ;CANlib.h: 973: else
  9893                           ;CANlib.h: 974: RXF3SIDLbits.EID17 = 0x00;
  9894  0015B8  010F               	movlb	15	; () banked
  9895  0015BA  930D               	bcf	13,1,b	;volatile
  9896  0015BC                     l505:
  9897                           
  9898                           ; BSR set to: 15
  9899                           ;CANlib.h: 976: if (filter & 0x00040000)
  9900  0015BC  0100               	movlb	0	; () banked
  9901  0015BE  A562               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
  9902  0015C0  D003               	goto	l506
  9903                           
  9904                           ; BSR set to: 0
  9905                           ;CANlib.h: 977: RXF3SIDLbits.SID0 = 0x01;
  9906  0015C2  010F               	movlb	15	; () banked
  9907  0015C4  8B0D               	bsf	13,5,b	;volatile
  9908  0015C6  D002               	goto	l507
  9909  0015C8                     l506:
  9910                           
  9911                           ; BSR set to: 0
  9912                           ;CANlib.h: 978: else
  9913                           ;CANlib.h: 979: RXF3SIDLbits.SID0 = 0x00;
  9914  0015C8  010F               	movlb	15	; () banked
  9915  0015CA  9B0D               	bcf	13,5,b	;volatile
  9916  0015CC                     l507:
  9917                           
  9918                           ; BSR set to: 15
  9919                           ;CANlib.h: 981: if (filter & 0x00080000)
  9920  0015CC  0100               	movlb	0	; () banked
  9921  0015CE  A762               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
  9922  0015D0  D003               	goto	l508
  9923                           
  9924                           ; BSR set to: 0
  9925                           ;CANlib.h: 982: RXF3SIDLbits.SID1 = 0x01;
  9926  0015D2  010F               	movlb	15	; () banked
  9927  0015D4  8D0D               	bsf	13,6,b	;volatile
  9928  0015D6  D002               	goto	l509
  9929  0015D8                     l508:
  9930                           
  9931                           ; BSR set to: 0
  9932                           ;CANlib.h: 983: else
  9933                           ;CANlib.h: 984: RXF3SIDLbits.SID1 = 0x00;
  9934  0015D8  010F               	movlb	15	; () banked
  9935  0015DA  9D0D               	bcf	13,6,b	;volatile
  9936  0015DC                     l509:
  9937                           
  9938                           ; BSR set to: 15
  9939                           ;CANlib.h: 986: if (filter & 0x00100000)
  9940  0015DC  0100               	movlb	0	; () banked
  9941  0015DE  A962               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
  9942  0015E0  D003               	goto	l510
  9943                           
  9944                           ; BSR set to: 0
  9945                           ;CANlib.h: 987: RXF3SIDLbits.SID2 = 0x01 ;
  9946  0015E2  010F               	movlb	15	; () banked
  9947  0015E4  8F0D               	bsf	13,7,b	;volatile
  9948  0015E6  D003               	goto	l6023
  9949  0015E8                     l510:
  9950                           
  9951                           ; BSR set to: 0
  9952                           ;CANlib.h: 988: else
  9953                           ;CANlib.h: 989: RXF3SIDLbits.SID2 = 0x00 ;
  9954  0015E8  010F               	movlb	15	; () banked
  9955  0015EA  9F0D               	bcf	13,7,b	;volatile
  9956  0015EC  D000               	goto	l6023
  9957  0015EE                     l6023:
  9958                           
  9959                           ; BSR set to: 15
  9960                           ;CANlib.h: 991: tamp = (filter >> 21);
  9961  0015EE  C060  F065         	movff	CANSetFilter@filter,??_CANSetFilter
  9962  0015F2  C061  F066         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  9963  0015F6  C062  F067         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  9964  0015FA  C063  F068         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  9965  0015FE  0E16               	movlw	22
  9966  001600  D006               	goto	u7830
  9967  001602                     u7835:
  9968  001602  0100               	movlb	0	; () banked
  9969  001604  90D8               	bcf	status,0,c
  9970  001606  3368               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  9971  001608  3367               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  9972  00160A  3366               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  9973  00160C  3365               	rrcf	??_CANSetFilter& (0+255),f,b
  9974  00160E                     u7830:
  9975  00160E  2EE8               	decfsz	wreg,f,c
  9976  001610  D7F8               	goto	u7835
  9977  001612  C065  F06A         	movff	??_CANSetFilter,CANSetFilter@tamp
  9978  001616  C066  F06B         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  9979  00161A  C067  F06C         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  9980  00161E  C068  F06D         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  9981                           
  9982                           ; BSR set to: 0
  9983                           ;CANlib.h: 992: tamp = tamp & 0x000000FF;
  9984  001622  0100               	movlb	0	; () banked
  9985  001624  516A               	movf	CANSetFilter@tamp& (0+255),w,b
  9986  001626  0100               	movlb	0	; () banked
  9987  001628  6F6A               	movwf	CANSetFilter@tamp& (0+255),b
  9988  00162A  6B6B               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  9989  00162C  6B6C               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  9990  00162E  6B6D               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  9991                           
  9992                           ; BSR set to: 0
  9993                           ;CANlib.h: 993: RXF3SIDH = (unsigned char) tamp;
  9994  001630  C06A  FF0C         	movff	CANSetFilter@tamp,3852	;volatile
  9995  001634  D000               	goto	l6029
  9996  001636                     l6029:
  9997                           
  9998                           ; BSR set to: 0
  9999                           ;CANlib.h: 994: }
 10000                           ;CANlib.h: 996: if ((numBuffer ==CAN_FILTER_B2_F3) && (type == CAN_CONFIG_XTD_MSG))
 10001  001636  0E04               	movlw	4
 10002  001638  0100               	movlb	0	; () banked
 10003  00163A  1969               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
 10004  00163C  A4D8               	btfss	status,2,c
 10005  00163E  D08B               	goto	l6063
 10006                           
 10007                           ; BSR set to: 0
 10008  001640  0EF7               	movlw	247
 10009  001642  0100               	movlb	0	; () banked
 10010  001644  1964               	xorwf	CANSetFilter@type& (0+255),w,b
 10011  001646  A4D8               	btfss	status,2,c
 10012  001648  D086               	goto	l6063
 10013                           
 10014                           ; BSR set to: 0
 10015                           ;CANlib.h: 997: {
 10016                           ;CANlib.h: 998: RXF4SIDLbits.EXIDEN = 0x01;
 10017  00164A  010F               	movlb	15	; () banked
 10018  00164C  8711               	bsf	17,3,b	;volatile
 10019                           
 10020                           ; BSR set to: 15
 10021                           ;CANlib.h: 1000: tamp = filter & 0x000000FF;
 10022  00164E  0100               	movlb	0	; () banked
 10023  001650  5160               	movf	CANSetFilter@filter& (0+255),w,b
 10024  001652  0100               	movlb	0	; () banked
 10025  001654  6F6A               	movwf	CANSetFilter@tamp& (0+255),b
 10026  001656  6B6B               	clrf	(CANSetFilter@tamp+1)& (0+255),b
 10027  001658  6B6C               	clrf	(CANSetFilter@tamp+2)& (0+255),b
 10028  00165A  6B6D               	clrf	(CANSetFilter@tamp+3)& (0+255),b
 10029                           
 10030                           ; BSR set to: 0
 10031                           ;CANlib.h: 1001: RXF4EIDL = (unsigned char) tamp;
 10032  00165C  C06A  FF13         	movff	CANSetFilter@tamp,3859	;volatile
 10033                           
 10034                           ; BSR set to: 0
 10035                           ;CANlib.h: 1003: tamp = filter & 0x0000FF00;
 10036  001660  0E00               	movlw	0
 10037  001662  0100               	movlb	0	; () banked
 10038  001664  1560               	andwf	CANSetFilter@filter& (0+255),w,b
 10039  001666  0100               	movlb	0	; () banked
 10040  001668  6F6A               	movwf	CANSetFilter@tamp& (0+255),b
 10041  00166A  0EFF               	movlw	255
 10042  00166C  0100               	movlb	0	; () banked
 10043  00166E  1561               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
 10044  001670  0100               	movlb	0	; () banked
 10045  001672  6F6B               	movwf	(CANSetFilter@tamp+1)& (0+255),b
 10046  001674  0E00               	movlw	0
 10047  001676  0100               	movlb	0	; () banked
 10048  001678  1562               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
 10049  00167A  0100               	movlb	0	; () banked
 10050  00167C  6F6C               	movwf	(CANSetFilter@tamp+2)& (0+255),b
 10051  00167E  0E00               	movlw	0
 10052  001680  0100               	movlb	0	; () banked
 10053  001682  1563               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
 10054  001684  0100               	movlb	0	; () banked
 10055  001686  6F6D               	movwf	(CANSetFilter@tamp+3)& (0+255),b
 10056                           
 10057                           ; BSR set to: 0
 10058                           ;CANlib.h: 1004: tamp = tamp >> 8;
 10059  001688  C06A  F065         	movff	CANSetFilter@tamp,??_CANSetFilter
 10060  00168C  C06B  F066         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
 10061  001690  C06C  F067         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
 10062  001694  C06D  F068         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
 10063  001698  C066  F065         	movff	??_CANSetFilter+1,??_CANSetFilter
 10064  00169C  C067  F066         	movff	??_CANSetFilter+2,??_CANSetFilter+1
 10065  0016A0  C068  F067         	movff	??_CANSetFilter+3,??_CANSetFilter+2
 10066  0016A4  0100               	movlb	0	; () banked
 10067  0016A6  6B68               	clrf	(??_CANSetFilter+3)& (0+255),b
 10068  0016A8  C065  F06A         	movff	??_CANSetFilter,CANSetFilter@tamp
 10069  0016AC  C066  F06B         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 10070  0016B0  C067  F06C         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 10071  0016B4  C068  F06D         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 10072                           
 10073                           ; BSR set to: 0
 10074                           ;CANlib.h: 1005: RXF4EIDH = (unsigned char) tamp;
 10075  0016B8  C06A  FF12         	movff	CANSetFilter@tamp,3858	;volatile
 10076                           
 10077                           ; BSR set to: 0
 10078                           ;CANlib.h: 1007: if (filter & 0x00010000)
 10079  0016BC  0100               	movlb	0	; () banked
 10080  0016BE  A162               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
 10081  0016C0  D003               	goto	l513
 10082                           
 10083                           ; BSR set to: 0
 10084                           ;CANlib.h: 1008: RXF4SIDLbits.EID16 = 0x01;
 10085  0016C2  010F               	movlb	15	; () banked
 10086  0016C4  8111               	bsf	17,0,b	;volatile
 10087  0016C6  D002               	goto	l514
 10088  0016C8                     l513:
 10089                           
 10090                           ; BSR set to: 0
 10091                           ;CANlib.h: 1009: else
 10092                           ;CANlib.h: 1010: RXF4SIDLbits.EID16 = 0x00;
 10093  0016C8  010F               	movlb	15	; () banked
 10094  0016CA  9111               	bcf	17,0,b	;volatile
 10095  0016CC                     l514:
 10096                           
 10097                           ; BSR set to: 15
 10098                           ;CANlib.h: 1012: if (filter & 0x00020000)
 10099  0016CC  0100               	movlb	0	; () banked
 10100  0016CE  A362               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
 10101  0016D0  D003               	goto	l515
 10102                           
 10103                           ; BSR set to: 0
 10104                           ;CANlib.h: 1013: RXF4SIDLbits.EID17 = 0x01;
 10105  0016D2  010F               	movlb	15	; () banked
 10106  0016D4  8311               	bsf	17,1,b	;volatile
 10107  0016D6  D002               	goto	l516
 10108  0016D8                     l515:
 10109                           
 10110                           ; BSR set to: 0
 10111                           ;CANlib.h: 1014: else
 10112                           ;CANlib.h: 1015: RXF4SIDLbits.EID17 = 0x00;
 10113  0016D8  010F               	movlb	15	; () banked
 10114  0016DA  9311               	bcf	17,1,b	;volatile
 10115  0016DC                     l516:
 10116                           
 10117                           ; BSR set to: 15
 10118                           ;CANlib.h: 1017: if (filter & 0x00040000)
 10119  0016DC  0100               	movlb	0	; () banked
 10120  0016DE  A562               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
 10121  0016E0  D003               	goto	l517
 10122                           
 10123                           ; BSR set to: 0
 10124                           ;CANlib.h: 1018: RXF4SIDLbits.SID0 = 0x01;
 10125  0016E2  010F               	movlb	15	; () banked
 10126  0016E4  8B11               	bsf	17,5,b	;volatile
 10127  0016E6  D002               	goto	l518
 10128  0016E8                     l517:
 10129                           
 10130                           ; BSR set to: 0
 10131                           ;CANlib.h: 1019: else
 10132                           ;CANlib.h: 1020: RXF4SIDLbits.SID0 = 0x00;
 10133  0016E8  010F               	movlb	15	; () banked
 10134  0016EA  9B11               	bcf	17,5,b	;volatile
 10135  0016EC                     l518:
 10136                           
 10137                           ; BSR set to: 15
 10138                           ;CANlib.h: 1022: if (filter & 0x00080000)
 10139  0016EC  0100               	movlb	0	; () banked
 10140  0016EE  A762               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
 10141  0016F0  D003               	goto	l519
 10142                           
 10143                           ; BSR set to: 0
 10144                           ;CANlib.h: 1023: RXF4SIDLbits.SID1 = 0x01;
 10145  0016F2  010F               	movlb	15	; () banked
 10146  0016F4  8D11               	bsf	17,6,b	;volatile
 10147  0016F6  D002               	goto	l520
 10148  0016F8                     l519:
 10149                           
 10150                           ; BSR set to: 0
 10151                           ;CANlib.h: 1024: else
 10152                           ;CANlib.h: 1025: RXF4SIDLbits.SID1 = 0x00;
 10153  0016F8  010F               	movlb	15	; () banked
 10154  0016FA  9D11               	bcf	17,6,b	;volatile
 10155  0016FC                     l520:
 10156                           
 10157                           ; BSR set to: 15
 10158                           ;CANlib.h: 1027: if (filter & 0x00100000)
 10159  0016FC  0100               	movlb	0	; () banked
 10160  0016FE  A962               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
 10161  001700  D003               	goto	l521
 10162                           
 10163                           ; BSR set to: 0
 10164                           ;CANlib.h: 1028: RXF4SIDLbits.SID2 = 0x01 ;
 10165  001702  010F               	movlb	15	; () banked
 10166  001704  8F11               	bsf	17,7,b	;volatile
 10167  001706  D003               	goto	l6057
 10168  001708                     l521:
 10169                           
 10170                           ; BSR set to: 0
 10171                           ;CANlib.h: 1029: else
 10172                           ;CANlib.h: 1030: RXF4SIDLbits.SID2 = 0x00 ;
 10173  001708  010F               	movlb	15	; () banked
 10174  00170A  9F11               	bcf	17,7,b	;volatile
 10175  00170C  D000               	goto	l6057
 10176  00170E                     l6057:
 10177                           
 10178                           ; BSR set to: 15
 10179                           ;CANlib.h: 1032: tamp = (filter >> 21);
 10180  00170E  C060  F065         	movff	CANSetFilter@filter,??_CANSetFilter
 10181  001712  C061  F066         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
 10182  001716  C062  F067         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
 10183  00171A  C063  F068         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
 10184  00171E  0E16               	movlw	22
 10185  001720  D006               	goto	u7910
 10186  001722                     u7915:
 10187  001722  0100               	movlb	0	; () banked
 10188  001724  90D8               	bcf	status,0,c
 10189  001726  3368               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
 10190  001728  3367               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
 10191  00172A  3366               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
 10192  00172C  3365               	rrcf	??_CANSetFilter& (0+255),f,b
 10193  00172E                     u7910:
 10194  00172E  2EE8               	decfsz	wreg,f,c
 10195  001730  D7F8               	goto	u7915
 10196  001732  C065  F06A         	movff	??_CANSetFilter,CANSetFilter@tamp
 10197  001736  C066  F06B         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 10198  00173A  C067  F06C         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 10199  00173E  C068  F06D         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 10200                           
 10201                           ; BSR set to: 0
 10202                           ;CANlib.h: 1033: tamp = tamp & 0x000000FF;
 10203  001742  0100               	movlb	0	; () banked
 10204  001744  516A               	movf	CANSetFilter@tamp& (0+255),w,b
 10205  001746  0100               	movlb	0	; () banked
 10206  001748  6F6A               	movwf	CANSetFilter@tamp& (0+255),b
 10207  00174A  6B6B               	clrf	(CANSetFilter@tamp+1)& (0+255),b
 10208  00174C  6B6C               	clrf	(CANSetFilter@tamp+2)& (0+255),b
 10209  00174E  6B6D               	clrf	(CANSetFilter@tamp+3)& (0+255),b
 10210                           
 10211                           ; BSR set to: 0
 10212                           ;CANlib.h: 1034: RXF4SIDH = (unsigned char) tamp;
 10213  001750  C06A  FF10         	movff	CANSetFilter@tamp,3856	;volatile
 10214  001754  D000               	goto	l6063
 10215  001756                     l6063:
 10216                           
 10217                           ; BSR set to: 0
 10218                           ;CANlib.h: 1035: }
 10219                           ;CANlib.h: 1037: if ((numBuffer ==CAN_FILTER_B2_F4) && (type == CAN_CONFIG_XTD_MSG))
 10220  001756  0E05               	movlw	5
 10221  001758  0100               	movlb	0	; () banked
 10222  00175A  1969               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
 10223  00175C  A4D8               	btfss	status,2,c
 10224  00175E  0012               	return	
 10225                           
 10226                           ; BSR set to: 0
 10227  001760  0EF7               	movlw	247
 10228  001762  0100               	movlb	0	; () banked
 10229  001764  1964               	xorwf	CANSetFilter@type& (0+255),w,b
 10230  001766  A4D8               	btfss	status,2,c
 10231  001768  0012               	return	
 10232                           
 10233                           ; BSR set to: 0
 10234                           ;CANlib.h: 1038: {
 10235                           ;CANlib.h: 1039: RXF5SIDLbits.EXIDEN = 0x01;
 10236  00176A  010F               	movlb	15	; () banked
 10237  00176C  8715               	bsf	21,3,b	;volatile
 10238                           
 10239                           ; BSR set to: 15
 10240                           ;CANlib.h: 1041: tamp = filter & 0x000000FF;
 10241  00176E  0100               	movlb	0	; () banked
 10242  001770  5160               	movf	CANSetFilter@filter& (0+255),w,b
 10243  001772  0100               	movlb	0	; () banked
 10244  001774  6F6A               	movwf	CANSetFilter@tamp& (0+255),b
 10245  001776  6B6B               	clrf	(CANSetFilter@tamp+1)& (0+255),b
 10246  001778  6B6C               	clrf	(CANSetFilter@tamp+2)& (0+255),b
 10247  00177A  6B6D               	clrf	(CANSetFilter@tamp+3)& (0+255),b
 10248                           
 10249                           ; BSR set to: 0
 10250                           ;CANlib.h: 1042: RXF5EIDL = (unsigned char) tamp;
 10251  00177C  C06A  FF17         	movff	CANSetFilter@tamp,3863	;volatile
 10252                           
 10253                           ; BSR set to: 0
 10254                           ;CANlib.h: 1044: tamp = filter & 0x0000FF00;
 10255  001780  0E00               	movlw	0
 10256  001782  0100               	movlb	0	; () banked
 10257  001784  1560               	andwf	CANSetFilter@filter& (0+255),w,b
 10258  001786  0100               	movlb	0	; () banked
 10259  001788  6F6A               	movwf	CANSetFilter@tamp& (0+255),b
 10260  00178A  0EFF               	movlw	255
 10261  00178C  0100               	movlb	0	; () banked
 10262  00178E  1561               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
 10263  001790  0100               	movlb	0	; () banked
 10264  001792  6F6B               	movwf	(CANSetFilter@tamp+1)& (0+255),b
 10265  001794  0E00               	movlw	0
 10266  001796  0100               	movlb	0	; () banked
 10267  001798  1562               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
 10268  00179A  0100               	movlb	0	; () banked
 10269  00179C  6F6C               	movwf	(CANSetFilter@tamp+2)& (0+255),b
 10270  00179E  0E00               	movlw	0
 10271  0017A0  0100               	movlb	0	; () banked
 10272  0017A2  1563               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
 10273  0017A4  0100               	movlb	0	; () banked
 10274  0017A6  6F6D               	movwf	(CANSetFilter@tamp+3)& (0+255),b
 10275                           
 10276                           ; BSR set to: 0
 10277                           ;CANlib.h: 1045: tamp = tamp >> 8;
 10278  0017A8  C06A  F065         	movff	CANSetFilter@tamp,??_CANSetFilter
 10279  0017AC  C06B  F066         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
 10280  0017B0  C06C  F067         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
 10281  0017B4  C06D  F068         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
 10282  0017B8  C066  F065         	movff	??_CANSetFilter+1,??_CANSetFilter
 10283  0017BC  C067  F066         	movff	??_CANSetFilter+2,??_CANSetFilter+1
 10284  0017C0  C068  F067         	movff	??_CANSetFilter+3,??_CANSetFilter+2
 10285  0017C4  0100               	movlb	0	; () banked
 10286  0017C6  6B68               	clrf	(??_CANSetFilter+3)& (0+255),b
 10287  0017C8  C065  F06A         	movff	??_CANSetFilter,CANSetFilter@tamp
 10288  0017CC  C066  F06B         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 10289  0017D0  C067  F06C         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 10290  0017D4  C068  F06D         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 10291                           
 10292                           ; BSR set to: 0
 10293                           ;CANlib.h: 1046: RXF5EIDH = (unsigned char) tamp;
 10294  0017D8  C06A  FF16         	movff	CANSetFilter@tamp,3862	;volatile
 10295                           
 10296                           ; BSR set to: 0
 10297                           ;CANlib.h: 1048: if (filter & 0x00010000)
 10298  0017DC  0100               	movlb	0	; () banked
 10299  0017DE  A162               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
 10300  0017E0  D003               	goto	l524
 10301                           
 10302                           ; BSR set to: 0
 10303                           ;CANlib.h: 1049: RXF5SIDLbits.EID16 = 0x01;
 10304  0017E2  010F               	movlb	15	; () banked
 10305  0017E4  8115               	bsf	21,0,b	;volatile
 10306  0017E6  D002               	goto	l525
 10307  0017E8                     l524:
 10308                           
 10309                           ; BSR set to: 0
 10310                           ;CANlib.h: 1050: else
 10311                           ;CANlib.h: 1051: RXF5SIDLbits.EID16 = 0x00;
 10312  0017E8  010F               	movlb	15	; () banked
 10313  0017EA  9115               	bcf	21,0,b	;volatile
 10314  0017EC                     l525:
 10315                           
 10316                           ; BSR set to: 15
 10317                           ;CANlib.h: 1053: if (filter & 0x00020000)
 10318  0017EC  0100               	movlb	0	; () banked
 10319  0017EE  A362               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
 10320  0017F0  D003               	goto	l526
 10321                           
 10322                           ; BSR set to: 0
 10323                           ;CANlib.h: 1054: RXF5SIDLbits.EID17 = 0x01;
 10324  0017F2  010F               	movlb	15	; () banked
 10325  0017F4  8315               	bsf	21,1,b	;volatile
 10326  0017F6  D002               	goto	l527
 10327  0017F8                     l526:
 10328                           
 10329                           ; BSR set to: 0
 10330                           ;CANlib.h: 1055: else
 10331                           ;CANlib.h: 1056: RXF5SIDLbits.EID17 = 0x00;
 10332  0017F8  010F               	movlb	15	; () banked
 10333  0017FA  9315               	bcf	21,1,b	;volatile
 10334  0017FC                     l527:
 10335                           
 10336                           ; BSR set to: 15
 10337                           ;CANlib.h: 1058: if (filter & 0x00040000)
 10338  0017FC  0100               	movlb	0	; () banked
 10339  0017FE  A562               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
 10340  001800  D003               	goto	l528
 10341                           
 10342                           ; BSR set to: 0
 10343                           ;CANlib.h: 1059: RXF5SIDLbits.SID0 = 0x01;
 10344  001802  010F               	movlb	15	; () banked
 10345  001804  8B15               	bsf	21,5,b	;volatile
 10346  001806  D002               	goto	l529
 10347  001808                     l528:
 10348                           
 10349                           ; BSR set to: 0
 10350                           ;CANlib.h: 1060: else
 10351                           ;CANlib.h: 1061: RXF5SIDLbits.SID0 = 0x00;
 10352  001808  010F               	movlb	15	; () banked
 10353  00180A  9B15               	bcf	21,5,b	;volatile
 10354  00180C                     l529:
 10355                           
 10356                           ; BSR set to: 15
 10357                           ;CANlib.h: 1063: if (filter & 0x00080000)
 10358  00180C  0100               	movlb	0	; () banked
 10359  00180E  A762               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
 10360  001810  D003               	goto	l530
 10361                           
 10362                           ; BSR set to: 0
 10363                           ;CANlib.h: 1064: RXF5SIDLbits.SID1 = 0x01;
 10364  001812  010F               	movlb	15	; () banked
 10365  001814  8D15               	bsf	21,6,b	;volatile
 10366  001816  D002               	goto	l531
 10367  001818                     l530:
 10368                           
 10369                           ; BSR set to: 0
 10370                           ;CANlib.h: 1065: else
 10371                           ;CANlib.h: 1066: RXF5SIDLbits.SID1 = 0x00;
 10372  001818  010F               	movlb	15	; () banked
 10373  00181A  9D15               	bcf	21,6,b	;volatile
 10374  00181C                     l531:
 10375                           
 10376                           ; BSR set to: 15
 10377                           ;CANlib.h: 1068: if (filter & 0x00100000)
 10378  00181C  0100               	movlb	0	; () banked
 10379  00181E  A962               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
 10380  001820  D003               	goto	l532
 10381                           
 10382                           ; BSR set to: 0
 10383                           ;CANlib.h: 1069: RXF5SIDLbits.SID2 = 0x01 ;
 10384  001822  010F               	movlb	15	; () banked
 10385  001824  8F15               	bsf	21,7,b	;volatile
 10386  001826  D003               	goto	l6091
 10387  001828                     l532:
 10388                           
 10389                           ; BSR set to: 0
 10390                           ;CANlib.h: 1070: else
 10391                           ;CANlib.h: 1071: RXF5SIDLbits.SID2 = 0x00 ;
 10392  001828  010F               	movlb	15	; () banked
 10393  00182A  9F15               	bcf	21,7,b	;volatile
 10394  00182C  D000               	goto	l6091
 10395  00182E                     l6091:
 10396                           
 10397                           ; BSR set to: 15
 10398                           ;CANlib.h: 1073: tamp = (filter >> 21);
 10399  00182E  C060  F065         	movff	CANSetFilter@filter,??_CANSetFilter
 10400  001832  C061  F066         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
 10401  001836  C062  F067         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
 10402  00183A  C063  F068         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
 10403  00183E  0E16               	movlw	22
 10404  001840  D006               	goto	u7990
 10405  001842                     u7995:
 10406  001842  0100               	movlb	0	; () banked
 10407  001844  90D8               	bcf	status,0,c
 10408  001846  3368               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
 10409  001848  3367               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
 10410  00184A  3366               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
 10411  00184C  3365               	rrcf	??_CANSetFilter& (0+255),f,b
 10412  00184E                     u7990:
 10413  00184E  2EE8               	decfsz	wreg,f,c
 10414  001850  D7F8               	goto	u7995
 10415  001852  C065  F06A         	movff	??_CANSetFilter,CANSetFilter@tamp
 10416  001856  C066  F06B         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 10417  00185A  C067  F06C         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 10418  00185E  C068  F06D         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 10419                           
 10420                           ; BSR set to: 0
 10421                           ;CANlib.h: 1074: tamp = tamp & 0x000000FF;
 10422  001862  0100               	movlb	0	; () banked
 10423  001864  516A               	movf	CANSetFilter@tamp& (0+255),w,b
 10424  001866  0100               	movlb	0	; () banked
 10425  001868  6F6A               	movwf	CANSetFilter@tamp& (0+255),b
 10426  00186A  6B6B               	clrf	(CANSetFilter@tamp+1)& (0+255),b
 10427  00186C  6B6C               	clrf	(CANSetFilter@tamp+2)& (0+255),b
 10428  00186E  6B6D               	clrf	(CANSetFilter@tamp+3)& (0+255),b
 10429                           
 10430                           ; BSR set to: 0
 10431                           ;CANlib.h: 1075: RXF5SIDH = (unsigned char) tamp;
 10432  001870  C06A  FF14         	movff	CANSetFilter@tamp,3860	;volatile
 10433  001874  0012               	return	
 10434                           
 10435                           ; BSR set to: 0
 10436                           
 10437                           ; BSR set to: 0
 10438  001876  0012               	return		;funcret
 10439  001878                     __end_of_CANSetFilter:
 10440                           	opt stack 0
 10441                           tblptru	equ	0xFF8
 10442                           tblptrh	equ	0xFF7
 10443                           tblptrl	equ	0xFF6
 10444                           tablat	equ	0xFF5
 10445                           intcon	equ	0xFF2
 10446                           postinc0	equ	0xFEE
 10447                           wreg	equ	0xFE8
 10448                           postinc2	equ	0xFDE
 10449                           postdec2	equ	0xFDD
 10450                           fsr2h	equ	0xFDA
 10451                           fsr2l	equ	0xFD9
 10452                           status	equ	0xFD8
 10453                           
 10454 ;; *************** function _CANOperationMode *****************
 10455 ;; Defined at:
 10456 ;;		line 206 in file "CANlib.h"
 10457 ;; Parameters:    Size  Location     Type
 10458 ;;  mode            1    wreg     enum E16922
 10459 ;; Auto vars:     Size  Location     Type
 10460 ;;  mode            1    0[BANK0 ] enum E16922
 10461 ;; Return value:  Size  Location     Type
 10462 ;;		None               void
 10463 ;; Registers used:
 10464 ;;		wreg, status,2, status,0
 10465 ;; Tracked objects:
 10466 ;;		On entry : 0/0
 10467 ;;		On exit  : 0/0
 10468 ;;		Unchanged: 0/0
 10469 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10470 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10471 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10472 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10473 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10474 ;;Total ram usage:        1 bytes
 10475 ;; Hardware stack levels used:    1
 10476 ;; Hardware stack levels required when called:    2
 10477 ;; This function calls:
 10478 ;;		Nothing
 10479 ;; This function is called by:
 10480 ;;		_CANInitialize
 10481 ;; This function uses a non-reentrant model
 10482 ;;
 10483                           
 10484                           	psect	text32
 10485  004EB2                     __ptext32:
 10486                           	opt stack 0
 10487  004EB2                     _CANOperationMode:
 10488                           	opt stack 26
 10489                           
 10490                           ; BSR set to: 0
 10491                           ;incstack = 0
 10492                           ;CANOperationMode@mode stored from wreg
 10493  004EB2  0100               	movlb	0	; () banked
 10494  004EB4  6F60               	movwf	CANOperationMode@mode& (0+255),b
 10495                           
 10496                           ; BSR set to: 0
 10497                           ;CANlib.h: 208: CANCON = mode;
 10498  004EB6  C060  FF6F         	movff	CANOperationMode@mode,3951	;volatile
 10499                           
 10500                           ; BSR set to: 0
 10501                           
 10502                           ;CANlib.h: 210: while((CANSTAT & 0b11100000) != mode );
 10503  004EBA  D000               	goto	l5687
 10504  004EBC                     l5687:
 10505                           
 10506                           ; BSR set to: 0
 10507  004EBC  506E               	movf	3950,w,c	;volatile
 10508  004EBE  0BE0               	andlw	224
 10509  004EC0  0100               	movlb	0	; () banked
 10510  004EC2  1960               	xorwf	CANOperationMode@mode& (0+255),w,b
 10511  004EC4  A4D8               	btfss	status,2,c
 10512  004EC6  D7FA               	goto	l5687
 10513                           
 10514                           ; BSR set to: 0
 10515                           
 10516                           ; BSR set to: 0
 10517  004EC8  0012               	return		;funcret
 10518  004ECA                     __end_of_CANOperationMode:
 10519                           	opt stack 0
 10520                           tblptru	equ	0xFF8
 10521                           tblptrh	equ	0xFF7
 10522                           tblptrl	equ	0xFF6
 10523                           tablat	equ	0xFF5
 10524                           intcon	equ	0xFF2
 10525                           postinc0	equ	0xFEE
 10526                           wreg	equ	0xFE8
 10527                           postinc2	equ	0xFDE
 10528                           postdec2	equ	0xFDD
 10529                           fsr2h	equ	0xFDA
 10530                           fsr2l	equ	0xFD9
 10531                           status	equ	0xFD8
 10532                           
 10533 ;; *************** function _can_interpreter *****************
 10534 ;; Defined at:
 10535 ;;		line 276 in file "motore.c"
 10536 ;; Parameters:    Size  Location     Type
 10537 ;;		None
 10538 ;; Auto vars:     Size  Location     Type
 10539 ;;		None
 10540 ;; Return value:  Size  Location     Type
 10541 ;;		None               void
 10542 ;; Registers used:
 10543 ;;		wreg, status,2, status,0
 10544 ;; Tracked objects:
 10545 ;;		On entry : 0/0
 10546 ;;		On exit  : 0/0
 10547 ;;		Unchanged: 0/0
 10548 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10549 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10550 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10551 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10552 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10553 ;;Total ram usage:        2 bytes
 10554 ;; Hardware stack levels used:    1
 10555 ;; Hardware stack levels required when called:    2
 10556 ;; This function calls:
 10557 ;;		Nothing
 10558 ;; This function is called by:
 10559 ;;		_main
 10560 ;; This function uses a non-reentrant model
 10561 ;;
 10562                           
 10563                           	psect	text33
 10564  004936                     __ptext33:
 10565                           	opt stack 0
 10566  004936                     _can_interpreter:
 10567                           	opt stack 28
 10568                           
 10569                           ;motore.c: 277: if (new_message == 1) {
 10570                           
 10571                           ; BSR set to: 0
 10572                           ;incstack = 0
 10573  004936  AC3F               	btfss	_new_message/(0+8),_new_message& (0+7),c	;volatile
 10574  004938  D04A               	goto	l752
 10575                           
 10576                           ;motore.c: 278: if (id == 0b00000000001) {
 10577  00493A  0423               	decf	_id,w,c	;volatile
 10578  00493C  1024               	iorwf	_id+1,w,c	;volatile
 10579  00493E  1025               	iorwf	_id+2,w,c	;volatile
 10580  004940  1026               	iorwf	_id+3,w,c	;volatile
 10581  004942  A4D8               	btfss	status,2,c
 10582  004944  D00A               	goto	l6767
 10583                           
 10584                           ;motore.c: 279: requestSpeed = 0;
 10585  004946  0E00               	movlw	0
 10586  004948  6E2B               	movwf	_requestSpeed,c	;volatile
 10587  00494A  0E00               	movlw	0
 10588  00494C  6E2C               	movwf	_requestSpeed+1,c	;volatile
 10589  00494E  0E00               	movlw	0
 10590  004950  6E2D               	movwf	_requestSpeed+2,c	;volatile
 10591  004952  0E00               	movlw	0
 10592  004954  6E2E               	movwf	_requestSpeed+3,c	;volatile
 10593                           
 10594                           ;motore.c: 280: PORTAbits.RA1 = 1;
 10595  004956  8280               	bsf	3968,1,c	;volatile
 10596  004958  D000               	goto	l6767
 10597  00495A                     l6767:
 10598                           
 10599                           ;motore.c: 281: }
 10600                           ;motore.c: 282: if (id == 0b00000001000) {
 10601  00495A  0E08               	movlw	8
 10602  00495C  1823               	xorwf	_id,w,c	;volatile
 10603  00495E  1024               	iorwf	_id+1,w,c	;volatile
 10604  004960  1025               	iorwf	_id+2,w,c	;volatile
 10605  004962  1026               	iorwf	_id+3,w,c	;volatile
 10606  004964  A4D8               	btfss	status,2,c
 10607  004966  D01C               	goto	l6777
 10608                           
 10609                           ;motore.c: 288: left_speed = data_array[1];
 10610  004968  C038  F0DF         	movff	_data_array+1,_left_speed	;volatile
 10611  00496C  0100               	movlb	0	; () banked
 10612  00496E  6BE0               	clrf	(_left_speed+1)& (0+255),b	;volatile
 10613                           
 10614                           ; BSR set to: 0
 10615                           ;motore.c: 289: left_speed = ((left_speed << 8) | (data_array[0]));
 10616  004970  0100               	movlb	0	; () banked
 10617  004972  51DF               	movf	_left_speed& (0+255),w,b	;volatile
 10618  004974  0100               	movlb	0	; () banked
 10619  004976  6F60               	movwf	??_can_interpreter& (0+255),b
 10620  004978  5037               	movf	_data_array,w,c
 10621  00497A  0100               	movlb	0	; () banked
 10622  00497C  6FDF               	movwf	_left_speed& (0+255),b	;volatile
 10623  00497E  C060  F0E0         	movff	??_can_interpreter,_left_speed+1	;volatile
 10624                           
 10625                           ; BSR set to: 0
 10626                           ;motore.c: 290: right_speed = data_array[3];
 10627  004982  C03A  F0E3         	movff	_data_array+3,_right_speed	;volatile
 10628  004986  0100               	movlb	0	; () banked
 10629  004988  6BE4               	clrf	(_right_speed+1)& (0+255),b	;volatile
 10630                           
 10631                           ;motore.c: 291: right_speed = ((right_speed << 8) | (data_array[2]));
 10632  00498A  0100               	movlb	0	; () banked
 10633  00498C  51E3               	movf	_right_speed& (0+255),w,b	;volatile
 10634  00498E  0100               	movlb	0	; () banked
 10635  004990  6F60               	movwf	??_can_interpreter& (0+255),b
 10636  004992  5039               	movf	_data_array+2,w,c
 10637  004994  0100               	movlb	0	; () banked
 10638  004996  6FE3               	movwf	_right_speed& (0+255),b	;volatile
 10639  004998  C060  F0E4         	movff	??_can_interpreter,_right_speed+1	;volatile
 10640                           
 10641                           ; BSR set to: 0
 10642                           ;motore.c: 292: speed_fetched = 1;
 10643  00499C  8440               	bsf	_speed_fetched/(0+8),_speed_fetched& (0+7),c	;volatile
 10644  00499E  D000               	goto	l6777
 10645  0049A0                     l6777:
 10646                           
 10647                           ;motore.c: 293: }
 10648                           ;motore.c: 295: if ((id == 0b00000000010) || (id == 0b00000000011) || (id == 0b000000001
      +                          00)) {
 10649  0049A0  0E02               	movlw	2
 10650  0049A2  1823               	xorwf	_id,w,c	;volatile
 10651  0049A4  1024               	iorwf	_id+1,w,c	;volatile
 10652  0049A6  1025               	iorwf	_id+2,w,c	;volatile
 10653  0049A8  1026               	iorwf	_id+3,w,c	;volatile
 10654  0049AA  B4D8               	btfsc	status,2,c
 10655  0049AC  D00E               	goto	l757
 10656  0049AE  0E03               	movlw	3
 10657  0049B0  1823               	xorwf	_id,w,c	;volatile
 10658  0049B2  1024               	iorwf	_id+1,w,c	;volatile
 10659  0049B4  1025               	iorwf	_id+2,w,c	;volatile
 10660  0049B6  1026               	iorwf	_id+3,w,c	;volatile
 10661  0049B8  B4D8               	btfsc	status,2,c
 10662  0049BA  D007               	goto	l757
 10663  0049BC  0E04               	movlw	4
 10664  0049BE  1823               	xorwf	_id,w,c	;volatile
 10665  0049C0  1024               	iorwf	_id+1,w,c	;volatile
 10666  0049C2  1025               	iorwf	_id+2,w,c	;volatile
 10667  0049C4  1026               	iorwf	_id+3,w,c	;volatile
 10668  0049C6  A4D8               	btfss	status,2,c
 10669  0049C8  D002               	goto	l752
 10670  0049CA                     l757:
 10671                           
 10672                           ;motore.c: 296: ECU_error = 0;
 10673  0049CA  903F               	bcf	_ECU_error/(0+8),_ECU_error& (0+7),c	;volatile
 10674  0049CC  D000               	goto	l752
 10675  0049CE                     l752:
 10676                           
 10677                           ;motore.c: 297: }
 10678                           ;motore.c: 298: }
 10679                           ;motore.c: 299: new_message = 0;
 10680  0049CE  9C3F               	bcf	_new_message/(0+8),_new_message& (0+7),c	;volatile
 10681  0049D0  0012               	return		;funcret
 10682  0049D2                     __end_of_can_interpreter:
 10683                           	opt stack 0
 10684                           tblptru	equ	0xFF8
 10685                           tblptrh	equ	0xFF7
 10686                           tblptrl	equ	0xFF6
 10687                           tablat	equ	0xFF5
 10688                           intcon	equ	0xFF2
 10689                           postinc0	equ	0xFEE
 10690                           wreg	equ	0xFE8
 10691                           postinc2	equ	0xFDE
 10692                           postdec2	equ	0xFDD
 10693                           fsr2h	equ	0xFDA
 10694                           fsr2l	equ	0xFD9
 10695                           status	equ	0xFD8
 10696                           
 10697 ;; *************** function _battery_measure *****************
 10698 ;; Defined at:
 10699 ;;		line 262 in file "motore.c"
 10700 ;; Parameters:    Size  Location     Type
 10701 ;;		None
 10702 ;; Auto vars:     Size  Location     Type
 10703 ;;		None
 10704 ;; Return value:  Size  Location     Type
 10705 ;;		None               void
 10706 ;; Registers used:
 10707 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10708 ;; Tracked objects:
 10709 ;;		On entry : 0/0
 10710 ;;		On exit  : 0/0
 10711 ;;		Unchanged: 0/0
 10712 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10713 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10714 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10715 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10716 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10717 ;;Total ram usage:        0 bytes
 10718 ;; Hardware stack levels used:    1
 10719 ;; Hardware stack levels required when called:    3
 10720 ;; This function calls:
 10721 ;;		_CANisTxReady
 10722 ;;		_CANsendMessage
 10723 ;;		___awdiv
 10724 ;;		___wmul
 10725 ;; This function is called by:
 10726 ;;		_main
 10727 ;; This function uses a non-reentrant model
 10728 ;;
 10729                           
 10730                           	psect	text34
 10731  0049D2                     __ptext34:
 10732                           	opt stack 0
 10733  0049D2                     _battery_measure:
 10734                           	opt stack 27
 10735                           
 10736                           ;motore.c: 263: ADCON0bits.GO = 1;
 10737                           
 10738                           ;incstack = 0
 10739  0049D2  82C2               	bsf	4034,1,c	;volatile
 10740                           
 10741                           ;motore.c: 264: while (ADCON0bits.GO);
 10742  0049D4  D000               	goto	l741
 10743  0049D6                     l741:
 10744  0049D6  B2C2               	btfsc	4034,1,c	;volatile
 10745  0049D8  D7FE               	goto	l741
 10746                           
 10747                           ;motore.c: 265: vBatt = ADRESH;
 10748  0049DA  CFC4 F033          	movff	4036,_vBatt	;volatile
 10749  0049DE  6A34               	clrf	_vBatt+1,c
 10750                           
 10751                           ;motore.c: 266: vBatt = (vBatt * 14) / 255;
 10752  0049E0  C033  F060         	movff	_vBatt,___wmul@multiplier
 10753  0049E4  C034  F061         	movff	_vBatt+1,___wmul@multiplier+1
 10754  0049E8  0E00               	movlw	0
 10755  0049EA  0100               	movlb	0	; () banked
 10756  0049EC  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
 10757  0049EE  0E0E               	movlw	14
 10758  0049F0  6F62               	movwf	___wmul@multiplicand& (0+255),b
 10759  0049F2  ECB6  F026         	call	___wmul	;wreg free
 10760  0049F6  C060  F066         	movff	?___wmul,___awdiv@dividend
 10761  0049FA  C061  F067         	movff	?___wmul+1,___awdiv@dividend+1
 10762  0049FE  0E00               	movlw	0
 10763  004A00  0100               	movlb	0	; () banked
 10764  004A02  6F69               	movwf	(___awdiv@divisor+1)& (0+255),b
 10765  004A04  6968               	setf	___awdiv@divisor& (0+255),b
 10766  004A06  EC80  F023         	call	___awdiv	;wreg free
 10767  004A0A  C066  F033         	movff	?___awdiv,_vBatt
 10768  004A0E  C067  F034         	movff	?___awdiv+1,_vBatt+1
 10769                           
 10770                           ;motore.c: 267: if (vBatt < 10) {
 10771  004A12  BE34               	btfsc	_vBatt+1,7,c
 10772  004A14  D008               	goto	l6887
 10773  004A16  5034               	movf	_vBatt+1,w,c
 10774  004A18  E124               	bnz	l744
 10775  004A1A  0E0A               	movlw	10
 10776  004A1C  5C33               	subwf	_vBatt,w,c
 10777  004A1E  A0D8               	btfss	status,0,c
 10778  004A20  D002               	goto	l6887
 10779  004A22  D01F               	goto	l744
 10780                           
 10781                           ;motore.c: 268: while (CANisTxReady() != 1);
 10782  004A24  D000               	goto	l6887
 10783  004A26                     l6887:
 10784  004A26  EC35  F027         	call	_CANisTxReady	;wreg free
 10785  004A2A  06E8               	decf	wreg,f,c
 10786  004A2C  A4D8               	btfss	status,2,c
 10787  004A2E  D7FB               	goto	l6887
 10788                           
 10789                           ;motore.c: 269: CANsendMessage(0b00000001011, data_array, 8, CAN_CONFIG_STD_MSG & CAN_RE
      +                          MOTE_TX_FRAME & CAN_TX_PRIORITY_0);
 10790  004A30  0E0B               	movlw	11
 10791  004A32  0100               	movlb	0	; () banked
 10792  004A34  6F60               	movwf	CANsendMessage@identifier& (0+255),b
 10793  004A36  0E00               	movlw	0
 10794  004A38  6F61               	movwf	(CANsendMessage@identifier+1)& (0+255),b
 10795  004A3A  0E00               	movlw	0
 10796  004A3C  6F62               	movwf	(CANsendMessage@identifier+2)& (0+255),b
 10797  004A3E  0E00               	movlw	0
 10798  004A40  6F63               	movwf	(CANsendMessage@identifier+3)& (0+255),b
 10799  004A42  0E37               	movlw	low _data_array
 10800  004A44  0100               	movlb	0	; () banked
 10801  004A46  6F64               	movwf	CANsendMessage@data& (0+255),b
 10802  004A48  0E00               	movlw	high _data_array
 10803  004A4A  0100               	movlb	0	; () banked
 10804  004A4C  6F65               	movwf	(CANsendMessage@data+1)& (0+255),b
 10805  004A4E  0E08               	movlw	8
 10806  004A50  0100               	movlb	0	; () banked
 10807  004A52  6F66               	movwf	CANsendMessage@dataLength& (0+255),b
 10808  004A54  0EFC               	movlw	252
 10809  004A56  0100               	movlb	0	; () banked
 10810  004A58  6F67               	movwf	CANsendMessage@flags& (0+255),b
 10811  004A5A  EC3C  F00C         	call	_CANsendMessage	;wreg free
 10812                           
 10813                           ;motore.c: 270: PORTCbits.RC1 = 1;
 10814  004A5E  8282               	bsf	3970,1,c	;volatile
 10815                           
 10816                           ;motore.c: 271: } else {
 10817  004A60  0012               	return	
 10818  004A62                     l744:
 10819                           
 10820                           ;motore.c: 272: PORTCbits.RC1 = 0;
 10821  004A62  9282               	bcf	3970,1,c	;volatile
 10822  004A64  0012               	return	
 10823  004A66  0012               	return		;funcret
 10824  004A68                     __end_of_battery_measure:
 10825                           	opt stack 0
 10826                           tblptru	equ	0xFF8
 10827                           tblptrh	equ	0xFF7
 10828                           tblptrl	equ	0xFF6
 10829                           tablat	equ	0xFF5
 10830                           intcon	equ	0xFF2
 10831                           postinc0	equ	0xFEE
 10832                           wreg	equ	0xFE8
 10833                           postinc2	equ	0xFDE
 10834                           postdec2	equ	0xFDD
 10835                           fsr2h	equ	0xFDA
 10836                           fsr2l	equ	0xFD9
 10837                           status	equ	0xFD8
 10838                           
 10839 ;; *************** function ___wmul *****************
 10840 ;; Defined at:
 10841 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\Umul16.c"
 10842 ;; Parameters:    Size  Location     Type
 10843 ;;  multiplier      2    0[BANK0 ] unsigned int 
 10844 ;;  multiplicand    2    2[BANK0 ] unsigned int 
 10845 ;; Auto vars:     Size  Location     Type
 10846 ;;  product         2    4[BANK0 ] unsigned int 
 10847 ;; Return value:  Size  Location     Type
 10848 ;;                  2    0[BANK0 ] unsigned int 
 10849 ;; Registers used:
 10850 ;;		wreg, status,2, status,0, prodl, prodh
 10851 ;; Tracked objects:
 10852 ;;		On entry : 0/0
 10853 ;;		On exit  : 0/0
 10854 ;;		Unchanged: 0/0
 10855 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10856 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10857 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10858 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10859 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10860 ;;Total ram usage:        6 bytes
 10861 ;; Hardware stack levels used:    1
 10862 ;; Hardware stack levels required when called:    2
 10863 ;; This function calls:
 10864 ;;		Nothing
 10865 ;; This function is called by:
 10866 ;;		_delay_ms
 10867 ;;		_battery_measure
 10868 ;; This function uses a non-reentrant model
 10869 ;;
 10870                           
 10871                           	psect	text35
 10872  004D6C                     __ptext35:
 10873                           	opt stack 0
 10874  004D6C                     ___wmul:
 10875                           	opt stack 27
 10876                           
 10877                           ;incstack = 0
 10878  004D6C  0100               	movlb	0	; () banked
 10879  004D6E  5160               	movf	___wmul@multiplier& (0+255),w,b
 10880  004D70  0100               	movlb	0	; () banked
 10881  004D72  0362               	mulwf	___wmul@multiplicand& (0+255),b
 10882  004D74  CFF3 F064          	movff	prodl,___wmul@product
 10883  004D78  CFF4 F065          	movff	prodh,___wmul@product+1
 10884  004D7C  0100               	movlb	0	; () banked
 10885  004D7E  5160               	movf	___wmul@multiplier& (0+255),w,b
 10886  004D80  0100               	movlb	0	; () banked
 10887  004D82  0363               	mulwf	(___wmul@multiplicand+1)& (0+255),b
 10888  004D84  50F3               	movf	prodl,w,c
 10889  004D86  0100               	movlb	0	; () banked
 10890  004D88  2765               	addwf	(___wmul@product+1)& (0+255),f,b
 10891  004D8A  0100               	movlb	0	; () banked
 10892  004D8C  5161               	movf	(___wmul@multiplier+1)& (0+255),w,b
 10893  004D8E  0100               	movlb	0	; () banked
 10894  004D90  0362               	mulwf	___wmul@multiplicand& (0+255),b
 10895  004D92  50F3               	movf	prodl,w,c
 10896  004D94  0100               	movlb	0	; () banked
 10897  004D96  2765               	addwf	(___wmul@product+1)& (0+255),f,b
 10898                           
 10899                           ; BSR set to: 0
 10900  004D98  C064  F060         	movff	___wmul@product,?___wmul
 10901  004D9C  C065  F061         	movff	___wmul@product+1,?___wmul+1
 10902  004DA0  0012               	return	
 10903                           
 10904                           ; BSR set to: 0
 10905                           
 10906                           ; BSR set to: 0
 10907  004DA2  0012               	return		;funcret
 10908  004DA4                     __end_of___wmul:
 10909                           	opt stack 0
 10910                           tblptru	equ	0xFF8
 10911                           tblptrh	equ	0xFF7
 10912                           tblptrl	equ	0xFF6
 10913                           tablat	equ	0xFF5
 10914                           prodh	equ	0xFF4
 10915                           prodl	equ	0xFF3
 10916                           intcon	equ	0xFF2
 10917                           postinc0	equ	0xFEE
 10918                           wreg	equ	0xFE8
 10919                           postinc2	equ	0xFDE
 10920                           postdec2	equ	0xFDD
 10921                           fsr2h	equ	0xFDA
 10922                           fsr2l	equ	0xFD9
 10923                           status	equ	0xFD8
 10924                           
 10925 ;; *************** function ___awdiv *****************
 10926 ;; Defined at:
 10927 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\awdiv.c"
 10928 ;; Parameters:    Size  Location     Type
 10929 ;;  dividend        2    6[BANK0 ] int 
 10930 ;;  divisor         2    8[BANK0 ] int 
 10931 ;; Auto vars:     Size  Location     Type
 10932 ;;  quotient        2   12[BANK0 ] int 
 10933 ;;  sign            1   11[BANK0 ] unsigned char 
 10934 ;;  counter         1   10[BANK0 ] unsigned char 
 10935 ;; Return value:  Size  Location     Type
 10936 ;;                  2    6[BANK0 ] int 
 10937 ;; Registers used:
 10938 ;;		wreg, status,2, status,0
 10939 ;; Tracked objects:
 10940 ;;		On entry : 0/0
 10941 ;;		On exit  : 0/0
 10942 ;;		Unchanged: 0/0
 10943 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10944 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10945 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10946 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10947 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10948 ;;Total ram usage:        8 bytes
 10949 ;; Hardware stack levels used:    1
 10950 ;; Hardware stack levels required when called:    2
 10951 ;; This function calls:
 10952 ;;		Nothing
 10953 ;; This function is called by:
 10954 ;;		_battery_measure
 10955 ;; This function uses a non-reentrant model
 10956 ;;
 10957                           
 10958                           	psect	text36
 10959  004700                     __ptext36:
 10960                           	opt stack 0
 10961  004700                     ___awdiv:
 10962                           	opt stack 27
 10963                           
 10964                           ; BSR set to: 0
 10965                           ;incstack = 0
 10966  004700  0E00               	movlw	0
 10967  004702  0100               	movlb	0	; () banked
 10968  004704  6F6B               	movwf	___awdiv@sign& (0+255),b
 10969                           
 10970                           ; BSR set to: 0
 10971  004706  0100               	movlb	0	; () banked
 10972  004708  AF69               	btfss	(___awdiv@divisor+1)& (0+255),7,b
 10973  00470A  D009               	goto	l6585
 10974                           
 10975                           ; BSR set to: 0
 10976  00470C  0100               	movlb	0	; () banked
 10977  00470E  6D68               	negf	___awdiv@divisor& (0+255),b
 10978  004710  1F69               	comf	(___awdiv@divisor+1)& (0+255),f,b
 10979  004712  B0D8               	btfsc	status,0,c
 10980  004714  2B69               	incf	(___awdiv@divisor+1)& (0+255),f,b
 10981                           
 10982                           ; BSR set to: 0
 10983  004716  0E01               	movlw	1
 10984  004718  0100               	movlb	0	; () banked
 10985  00471A  6F6B               	movwf	___awdiv@sign& (0+255),b
 10986  00471C  D000               	goto	l6585
 10987  00471E                     l6585:
 10988                           
 10989                           ; BSR set to: 0
 10990  00471E  0100               	movlb	0	; () banked
 10991  004720  AF67               	btfss	(___awdiv@dividend+1)& (0+255),7,b
 10992  004722  D009               	goto	l6591
 10993                           
 10994                           ; BSR set to: 0
 10995  004724  0100               	movlb	0	; () banked
 10996  004726  6D66               	negf	___awdiv@dividend& (0+255),b
 10997  004728  1F67               	comf	(___awdiv@dividend+1)& (0+255),f,b
 10998  00472A  B0D8               	btfsc	status,0,c
 10999  00472C  2B67               	incf	(___awdiv@dividend+1)& (0+255),f,b
 11000                           
 11001                           ; BSR set to: 0
 11002  00472E  0E01               	movlw	1
 11003  004730  0100               	movlb	0	; () banked
 11004  004732  1B6B               	xorwf	___awdiv@sign& (0+255),f,b
 11005  004734  D000               	goto	l6591
 11006  004736                     l6591:
 11007                           
 11008                           ; BSR set to: 0
 11009  004736  0E00               	movlw	0
 11010  004738  0100               	movlb	0	; () banked
 11011  00473A  6F6D               	movwf	(___awdiv@quotient+1)& (0+255),b
 11012  00473C  0E00               	movlw	0
 11013  00473E  6F6C               	movwf	___awdiv@quotient& (0+255),b
 11014                           
 11015                           ; BSR set to: 0
 11016  004740  0100               	movlb	0	; () banked
 11017  004742  5168               	movf	___awdiv@divisor& (0+255),w,b
 11018  004744  0100               	movlb	0	; () banked
 11019  004746  1169               	iorwf	(___awdiv@divisor+1)& (0+255),w,b
 11020  004748  B4D8               	btfsc	status,2,c
 11021  00474A  D031               	goto	l6613
 11022                           
 11023                           ; BSR set to: 0
 11024  00474C  0E01               	movlw	1
 11025  00474E  0100               	movlb	0	; () banked
 11026  004750  6F6A               	movwf	___awdiv@counter& (0+255),b
 11027  004752  D007               	goto	l6599
 11028  004754                     l6597:
 11029                           
 11030                           ; BSR set to: 0
 11031  004754  0100               	movlb	0	; () banked
 11032  004756  90D8               	bcf	status,0,c
 11033  004758  3768               	rlcf	___awdiv@divisor& (0+255),f,b
 11034  00475A  3769               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
 11035  00475C  0100               	movlb	0	; () banked
 11036  00475E  2B6A               	incf	___awdiv@counter& (0+255),f,b
 11037  004760  D000               	goto	l6599
 11038  004762                     l6599:
 11039                           
 11040                           ; BSR set to: 0
 11041  004762  0100               	movlb	0	; () banked
 11042  004764  BF69               	btfsc	(___awdiv@divisor+1)& (0+255),7,b
 11043  004766  D002               	goto	l6601
 11044  004768  D7F5               	goto	l6597
 11045                           
 11046                           ; BSR set to: 0
 11047  00476A  D000               	goto	l6601
 11048  00476C                     l6601:
 11049                           
 11050                           ; BSR set to: 0
 11051  00476C  0100               	movlb	0	; () banked
 11052  00476E  90D8               	bcf	status,0,c
 11053  004770  376C               	rlcf	___awdiv@quotient& (0+255),f,b
 11054  004772  376D               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
 11055                           
 11056                           ; BSR set to: 0
 11057  004774  0100               	movlb	0	; () banked
 11058  004776  5168               	movf	___awdiv@divisor& (0+255),w,b
 11059  004778  0100               	movlb	0	; () banked
 11060  00477A  5D66               	subwf	___awdiv@dividend& (0+255),w,b
 11061  00477C  0100               	movlb	0	; () banked
 11062  00477E  5169               	movf	(___awdiv@divisor+1)& (0+255),w,b
 11063  004780  0100               	movlb	0	; () banked
 11064  004782  5967               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
 11065  004784  A0D8               	btfss	status,0,c
 11066  004786  D00B               	goto	l6609
 11067                           
 11068                           ; BSR set to: 0
 11069  004788  0100               	movlb	0	; () banked
 11070  00478A  5168               	movf	___awdiv@divisor& (0+255),w,b
 11071  00478C  0100               	movlb	0	; () banked
 11072  00478E  5F66               	subwf	___awdiv@dividend& (0+255),f,b
 11073  004790  0100               	movlb	0	; () banked
 11074  004792  5169               	movf	(___awdiv@divisor+1)& (0+255),w,b
 11075  004794  0100               	movlb	0	; () banked
 11076  004796  5B67               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
 11077                           
 11078                           ; BSR set to: 0
 11079  004798  0100               	movlb	0	; () banked
 11080  00479A  816C               	bsf	___awdiv@quotient& (0+255),0,b
 11081  00479C  D000               	goto	l6609
 11082  00479E                     l6609:
 11083                           
 11084                           ; BSR set to: 0
 11085  00479E  0100               	movlb	0	; () banked
 11086  0047A0  90D8               	bcf	status,0,c
 11087  0047A2  3369               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
 11088  0047A4  3368               	rrcf	___awdiv@divisor& (0+255),f,b
 11089                           
 11090                           ; BSR set to: 0
 11091  0047A6  0100               	movlb	0	; () banked
 11092  0047A8  2F6A               	decfsz	___awdiv@counter& (0+255),f,b
 11093  0047AA  D7E0               	goto	l6601
 11094                           
 11095                           ; BSR set to: 0
 11096  0047AC  D000               	goto	l6613
 11097  0047AE                     l6613:
 11098                           
 11099                           ; BSR set to: 0
 11100  0047AE  0100               	movlb	0	; () banked
 11101  0047B0  516B               	movf	___awdiv@sign& (0+255),w,b
 11102  0047B2  0100               	movlb	0	; () banked
 11103  0047B4  B4D8               	btfsc	status,2,c
 11104  0047B6  D006               	goto	l6617
 11105                           
 11106                           ; BSR set to: 0
 11107  0047B8  0100               	movlb	0	; () banked
 11108  0047BA  6D6C               	negf	___awdiv@quotient& (0+255),b
 11109  0047BC  1F6D               	comf	(___awdiv@quotient+1)& (0+255),f,b
 11110  0047BE  B0D8               	btfsc	status,0,c
 11111  0047C0  2B6D               	incf	(___awdiv@quotient+1)& (0+255),f,b
 11112  0047C2  D000               	goto	l6617
 11113  0047C4                     l6617:
 11114                           
 11115                           ; BSR set to: 0
 11116  0047C4  C06C  F066         	movff	___awdiv@quotient,?___awdiv
 11117  0047C8  C06D  F067         	movff	___awdiv@quotient+1,?___awdiv+1
 11118  0047CC  0012               	return	
 11119                           
 11120                           ; BSR set to: 0
 11121                           
 11122                           ; BSR set to: 0
 11123  0047CE  0012               	return		;funcret
 11124  0047D0                     __end_of___awdiv:
 11125                           	opt stack 0
 11126                           tblptru	equ	0xFF8
 11127                           tblptrh	equ	0xFF7
 11128                           tblptrl	equ	0xFF6
 11129                           tablat	equ	0xFF5
 11130                           prodh	equ	0xFF4
 11131                           prodl	equ	0xFF3
 11132                           intcon	equ	0xFF2
 11133                           postinc0	equ	0xFEE
 11134                           wreg	equ	0xFE8
 11135                           postinc2	equ	0xFDE
 11136                           postdec2	equ	0xFDD
 11137                           fsr2h	equ	0xFDA
 11138                           fsr2l	equ	0xFD9
 11139                           status	equ	0xFD8
 11140                           
 11141 ;; *************** function _CANsendMessage *****************
 11142 ;; Defined at:
 11143 ;;		line 294 in file "CANlib.h"
 11144 ;; Parameters:    Size  Location     Type
 11145 ;;  identifier      4    0[BANK0 ] unsigned long 
 11146 ;;  data            2    4[BANK0 ] PTR unsigned char 
 11147 ;;		 -> data_array_debug(8), data_array(8), 
 11148 ;;  dataLength      1    6[BANK0 ] unsigned char 
 11149 ;;  flags           1    7[BANK0 ] enum E16950
 11150 ;; Auto vars:     Size  Location     Type
 11151 ;;  tamp            4   12[BANK0 ] unsigned long 
 11152 ;; Return value:  Size  Location     Type
 11153 ;;		None               void
 11154 ;; Registers used:
 11155 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 11156 ;; Tracked objects:
 11157 ;;		On entry : 0/0
 11158 ;;		On exit  : 0/0
 11159 ;;		Unchanged: 0/0
 11160 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11161 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11162 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11163 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11164 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11165 ;;Total ram usage:       16 bytes
 11166 ;; Hardware stack levels used:    1
 11167 ;; Hardware stack levels required when called:    2
 11168 ;; This function calls:
 11169 ;;		Nothing
 11170 ;; This function is called by:
 11171 ;;		_main
 11172 ;;		_rampe
 11173 ;;		_send_data
 11174 ;;		_battery_measure
 11175 ;; This function uses a non-reentrant model
 11176 ;;
 11177                           
 11178                           	psect	text37
 11179  001878                     __ptext37:
 11180                           	opt stack 0
 11181  001878                     _CANsendMessage:
 11182                           	opt stack 27
 11183                           
 11184                           ;CANlib.h: 296: unsigned long tamp;
 11185                           ;CANlib.h: 298: if (TXB0CONbits.TXREQ == 0)
 11186                           
 11187                           ; BSR set to: 0
 11188                           ;incstack = 0
 11189  001878  010F               	movlb	15	; () banked
 11190  00187A  B740               	btfsc	64,3,b	;volatile
 11191  00187C  D142               	goto	l369
 11192                           
 11193                           ; BSR set to: 15
 11194                           ;CANlib.h: 299: { TXB0DLC = dataLength;
 11195  00187E  C066  FF45         	movff	CANsendMessage@dataLength,3909	;volatile
 11196                           
 11197                           ;CANlib.h: 300: if (0b01000000 & flags)
 11198  001882  0100               	movlb	0	; () banked
 11199  001884  AD67               	btfss	CANsendMessage@flags& (0+255),6,b
 11200  001886  D003               	goto	l370
 11201                           
 11202                           ; BSR set to: 0
 11203                           ;CANlib.h: 301: TXB0DLCbits.TXRTR = 0x01;
 11204  001888  010F               	movlb	15	; () banked
 11205  00188A  8D45               	bsf	69,6,b	;volatile
 11206  00188C  D002               	goto	l371
 11207  00188E                     l370:
 11208                           
 11209                           ; BSR set to: 0
 11210                           ;CANlib.h: 302: else
 11211                           ;CANlib.h: 303: TXB0DLCbits.TXRTR = 0x00;
 11212  00188E  010F               	movlb	15	; () banked
 11213  001890  9D45               	bcf	69,6,b	;volatile
 11214  001892                     l371:
 11215                           
 11216                           ; BSR set to: 15
 11217                           ;CANlib.h: 305: if (CAN_TX_FRAME_MASK & flags)
 11218  001892  0100               	movlb	0	; () banked
 11219  001894  A767               	btfss	CANsendMessage@flags& (0+255),3,b
 11220  001896  D07A               	goto	l372
 11221                           
 11222                           ; BSR set to: 0
 11223                           ;CANlib.h: 306: {
 11224                           ;CANlib.h: 308: tamp = identifier & 0x000000FF;
 11225  001898  0100               	movlb	0	; () banked
 11226  00189A  5160               	movf	CANsendMessage@identifier& (0+255),w,b
 11227  00189C  0100               	movlb	0	; () banked
 11228  00189E  6F6C               	movwf	CANsendMessage@tamp& (0+255),b
 11229  0018A0  6B6D               	clrf	(CANsendMessage@tamp+1)& (0+255),b
 11230  0018A2  6B6E               	clrf	(CANsendMessage@tamp+2)& (0+255),b
 11231  0018A4  6B6F               	clrf	(CANsendMessage@tamp+3)& (0+255),b
 11232                           
 11233                           ; BSR set to: 0
 11234                           ;CANlib.h: 309: TXB0EIDL = (unsigned char) tamp;
 11235  0018A6  C06C  FF44         	movff	CANsendMessage@tamp,3908	;volatile
 11236                           
 11237                           ; BSR set to: 0
 11238                           ;CANlib.h: 311: tamp = identifier & 0x0000FF00;
 11239  0018AA  0E00               	movlw	0
 11240  0018AC  0100               	movlb	0	; () banked
 11241  0018AE  1560               	andwf	CANsendMessage@identifier& (0+255),w,b
 11242  0018B0  0100               	movlb	0	; () banked
 11243  0018B2  6F6C               	movwf	CANsendMessage@tamp& (0+255),b
 11244  0018B4  0EFF               	movlw	255
 11245  0018B6  0100               	movlb	0	; () banked
 11246  0018B8  1561               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
 11247  0018BA  0100               	movlb	0	; () banked
 11248  0018BC  6F6D               	movwf	(CANsendMessage@tamp+1)& (0+255),b
 11249  0018BE  0E00               	movlw	0
 11250  0018C0  0100               	movlb	0	; () banked
 11251  0018C2  1562               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
 11252  0018C4  0100               	movlb	0	; () banked
 11253  0018C6  6F6E               	movwf	(CANsendMessage@tamp+2)& (0+255),b
 11254  0018C8  0E00               	movlw	0
 11255  0018CA  0100               	movlb	0	; () banked
 11256  0018CC  1563               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
 11257  0018CE  0100               	movlb	0	; () banked
 11258  0018D0  6F6F               	movwf	(CANsendMessage@tamp+3)& (0+255),b
 11259                           
 11260                           ; BSR set to: 0
 11261                           ;CANlib.h: 312: tamp = tamp >> 8;
 11262  0018D2  C06C  F068         	movff	CANsendMessage@tamp,??_CANsendMessage
 11263  0018D6  C06D  F069         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
 11264  0018DA  C06E  F06A         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
 11265  0018DE  C06F  F06B         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
 11266  0018E2  C069  F068         	movff	??_CANsendMessage+1,??_CANsendMessage
 11267  0018E6  C06A  F069         	movff	??_CANsendMessage+2,??_CANsendMessage+1
 11268  0018EA  C06B  F06A         	movff	??_CANsendMessage+3,??_CANsendMessage+2
 11269  0018EE  0100               	movlb	0	; () banked
 11270  0018F0  6B6B               	clrf	(??_CANsendMessage+3)& (0+255),b
 11271  0018F2  C068  F06C         	movff	??_CANsendMessage,CANsendMessage@tamp
 11272  0018F6  C069  F06D         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
 11273  0018FA  C06A  F06E         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
 11274  0018FE  C06B  F06F         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
 11275                           
 11276                           ; BSR set to: 0
 11277                           ;CANlib.h: 313: TXB0EIDH = (unsigned char) tamp;
 11278  001902  C06C  FF43         	movff	CANsendMessage@tamp,3907	;volatile
 11279                           
 11280                           ; BSR set to: 0
 11281                           ;CANlib.h: 315: TXB0SIDL = 0x00;
 11282  001906  0E00               	movlw	0
 11283  001908  010F               	movlb	15	; () banked
 11284  00190A  6F42               	movwf	66,b	;volatile
 11285                           
 11286                           ; BSR set to: 15
 11287                           ;CANlib.h: 316: TXB0SIDLbits.EXIDE = 0x01;
 11288  00190C  010F               	movlb	15	; () banked
 11289  00190E  8742               	bsf	66,3,b	;volatile
 11290                           
 11291                           ; BSR set to: 15
 11292                           ;CANlib.h: 318: if (identifier & 0x00010000)
 11293  001910  0100               	movlb	0	; () banked
 11294  001912  A162               	btfss	(CANsendMessage@identifier+2)& (0+255),0,b
 11295  001914  D002               	goto	l373
 11296                           
 11297                           ; BSR set to: 0
 11298                           ;CANlib.h: 319: TXB0SIDLbits.EID16 = 0x01;
 11299  001916  010F               	movlb	15	; () banked
 11300  001918  8142               	bsf	66,0,b	;volatile
 11301  00191A                     l373:
 11302                           
 11303                           ;CANlib.h: 320: if (identifier & 0x00020000)
 11304  00191A  0100               	movlb	0	; () banked
 11305  00191C  A362               	btfss	(CANsendMessage@identifier+2)& (0+255),1,b
 11306  00191E  D002               	goto	l374
 11307                           
 11308                           ; BSR set to: 0
 11309                           ;CANlib.h: 321: TXB0SIDLbits.EID17 = 0x01;
 11310  001920  010F               	movlb	15	; () banked
 11311  001922  8342               	bsf	66,1,b	;volatile
 11312  001924                     l374:
 11313                           
 11314                           ;CANlib.h: 322: if (identifier & 0x00040000)
 11315  001924  0100               	movlb	0	; () banked
 11316  001926  A562               	btfss	(CANsendMessage@identifier+2)& (0+255),2,b
 11317  001928  D002               	goto	l375
 11318                           
 11319                           ; BSR set to: 0
 11320                           ;CANlib.h: 323: TXB0SIDLbits.SID0 = 0x01;
 11321  00192A  010F               	movlb	15	; () banked
 11322  00192C  8B42               	bsf	66,5,b	;volatile
 11323  00192E                     l375:
 11324                           
 11325                           ;CANlib.h: 324: if (identifier & 0x00080000)
 11326  00192E  0100               	movlb	0	; () banked
 11327  001930  A762               	btfss	(CANsendMessage@identifier+2)& (0+255),3,b
 11328  001932  D002               	goto	l376
 11329                           
 11330                           ; BSR set to: 0
 11331                           ;CANlib.h: 325: TXB0SIDLbits.SID1 = 0x01;
 11332  001934  010F               	movlb	15	; () banked
 11333  001936  8D42               	bsf	66,6,b	;volatile
 11334  001938                     l376:
 11335                           
 11336                           ;CANlib.h: 326: if (identifier & 0x00100000)
 11337  001938  0100               	movlb	0	; () banked
 11338  00193A  A962               	btfss	(CANsendMessage@identifier+2)& (0+255),4,b
 11339  00193C  D003               	goto	l6257
 11340                           
 11341                           ; BSR set to: 0
 11342                           ;CANlib.h: 327: TXB0SIDLbits.SID2 = 0x01;
 11343  00193E  010F               	movlb	15	; () banked
 11344  001940  8F42               	bsf	66,7,b	;volatile
 11345  001942  D000               	goto	l6257
 11346  001944                     l6257:
 11347                           
 11348                           ;CANlib.h: 329: tamp = (identifier >> 21);
 11349  001944  C060  F068         	movff	CANsendMessage@identifier,??_CANsendMessage
 11350  001948  C061  F069         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
 11351  00194C  C062  F06A         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
 11352  001950  C063  F06B         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
 11353  001954  0E16               	movlw	22
 11354  001956  D006               	goto	u8220
 11355  001958                     u8225:
 11356  001958  0100               	movlb	0	; () banked
 11357  00195A  90D8               	bcf	status,0,c
 11358  00195C  336B               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
 11359  00195E  336A               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
 11360  001960  3369               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
 11361  001962  3368               	rrcf	??_CANsendMessage& (0+255),f,b
 11362  001964                     u8220:
 11363  001964  2EE8               	decfsz	wreg,f,c
 11364  001966  D7F8               	goto	u8225
 11365  001968  C068  F06C         	movff	??_CANsendMessage,CANsendMessage@tamp
 11366  00196C  C069  F06D         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
 11367  001970  C06A  F06E         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
 11368  001974  C06B  F06F         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
 11369                           
 11370                           ; BSR set to: 0
 11371                           ;CANlib.h: 330: tamp = tamp & 0x000000FF;
 11372  001978  0100               	movlb	0	; () banked
 11373  00197A  516C               	movf	CANsendMessage@tamp& (0+255),w,b
 11374  00197C  0100               	movlb	0	; () banked
 11375  00197E  6F6C               	movwf	CANsendMessage@tamp& (0+255),b
 11376  001980  6B6D               	clrf	(CANsendMessage@tamp+1)& (0+255),b
 11377  001982  6B6E               	clrf	(CANsendMessage@tamp+2)& (0+255),b
 11378  001984  6B6F               	clrf	(CANsendMessage@tamp+3)& (0+255),b
 11379                           
 11380                           ; BSR set to: 0
 11381                           ;CANlib.h: 331: TXB0SIDH = (unsigned char) tamp;
 11382  001986  C06C  FF41         	movff	CANsendMessage@tamp,3905	;volatile
 11383                           
 11384                           ;CANlib.h: 332: }
 11385  00198A  D05A               	goto	l6277
 11386  00198C                     l372:
 11387                           
 11388                           ; BSR set to: 0
 11389                           ;CANlib.h: 334: else
 11390                           ;CANlib.h: 336: {
 11391                           ;CANlib.h: 337: TXB0SIDLbits.EXIDE = 0x00;
 11392  00198C  010F               	movlb	15	; () banked
 11393  00198E  9742               	bcf	66,3,b	;volatile
 11394                           
 11395                           ; BSR set to: 15
 11396                           ;CANlib.h: 339: tamp = (identifier >> 3);
 11397  001990  C060  F068         	movff	CANsendMessage@identifier,??_CANsendMessage
 11398  001994  C061  F069         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
 11399  001998  C062  F06A         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
 11400  00199C  C063  F06B         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
 11401  0019A0  0E04               	movlw	4
 11402  0019A2  D006               	goto	u8230
 11403  0019A4                     u8235:
 11404  0019A4  0100               	movlb	0	; () banked
 11405  0019A6  90D8               	bcf	status,0,c
 11406  0019A8  336B               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
 11407  0019AA  336A               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
 11408  0019AC  3369               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
 11409  0019AE  3368               	rrcf	??_CANsendMessage& (0+255),f,b
 11410  0019B0                     u8230:
 11411  0019B0  2EE8               	decfsz	wreg,f,c
 11412  0019B2  D7F8               	goto	u8235
 11413  0019B4  C068  F06C         	movff	??_CANsendMessage,CANsendMessage@tamp
 11414  0019B8  C069  F06D         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
 11415  0019BC  C06A  F06E         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
 11416  0019C0  C06B  F06F         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
 11417                           
 11418                           ; BSR set to: 0
 11419                           ;CANlib.h: 340: tamp = tamp & 0x000000FF;
 11420  0019C4  0100               	movlb	0	; () banked
 11421  0019C6  516C               	movf	CANsendMessage@tamp& (0+255),w,b
 11422  0019C8  0100               	movlb	0	; () banked
 11423  0019CA  6F6C               	movwf	CANsendMessage@tamp& (0+255),b
 11424  0019CC  6B6D               	clrf	(CANsendMessage@tamp+1)& (0+255),b
 11425  0019CE  6B6E               	clrf	(CANsendMessage@tamp+2)& (0+255),b
 11426  0019D0  6B6F               	clrf	(CANsendMessage@tamp+3)& (0+255),b
 11427                           
 11428                           ; BSR set to: 0
 11429                           ;CANlib.h: 341: TXB0SIDH = (unsigned char) tamp;
 11430  0019D2  C06C  FF41         	movff	CANsendMessage@tamp,3905	;volatile
 11431                           
 11432                           ; BSR set to: 0
 11433                           ;CANlib.h: 343: tamp = identifier & 0x00000007;
 11434  0019D6  0E07               	movlw	7
 11435  0019D8  0100               	movlb	0	; () banked
 11436  0019DA  1560               	andwf	CANsendMessage@identifier& (0+255),w,b
 11437  0019DC  0100               	movlb	0	; () banked
 11438  0019DE  6F6C               	movwf	CANsendMessage@tamp& (0+255),b
 11439  0019E0  0E00               	movlw	0
 11440  0019E2  0100               	movlb	0	; () banked
 11441  0019E4  1561               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
 11442  0019E6  0100               	movlb	0	; () banked
 11443  0019E8  6F6D               	movwf	(CANsendMessage@tamp+1)& (0+255),b
 11444  0019EA  0E00               	movlw	0
 11445  0019EC  0100               	movlb	0	; () banked
 11446  0019EE  1562               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
 11447  0019F0  0100               	movlb	0	; () banked
 11448  0019F2  6F6E               	movwf	(CANsendMessage@tamp+2)& (0+255),b
 11449  0019F4  0E00               	movlw	0
 11450  0019F6  0100               	movlb	0	; () banked
 11451  0019F8  1563               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
 11452  0019FA  0100               	movlb	0	; () banked
 11453  0019FC  6F6F               	movwf	(CANsendMessage@tamp+3)& (0+255),b
 11454                           
 11455                           ; BSR set to: 0
 11456                           ;CANlib.h: 344: tamp = tamp << 5;
 11457  0019FE  C06C  F068         	movff	CANsendMessage@tamp,??_CANsendMessage
 11458  001A02  C06D  F069         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
 11459  001A06  C06E  F06A         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
 11460  001A0A  C06F  F06B         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
 11461  001A0E  0E05               	movlw	5
 11462  001A10                     u8245:
 11463  001A10  90D8               	bcf	status,0,c
 11464  001A12  0100               	movlb	0	; () banked
 11465  001A14  3768               	rlcf	??_CANsendMessage& (0+255),f,b
 11466  001A16  3769               	rlcf	(??_CANsendMessage+1)& (0+255),f,b
 11467  001A18  376A               	rlcf	(??_CANsendMessage+2)& (0+255),f,b
 11468  001A1A  376B               	rlcf	(??_CANsendMessage+3)& (0+255),f,b
 11469  001A1C  2EE8               	decfsz	wreg,f,c
 11470  001A1E  D7F8               	goto	u8245
 11471  001A20  C068  F06C         	movff	??_CANsendMessage,CANsendMessage@tamp
 11472  001A24  C069  F06D         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
 11473  001A28  C06A  F06E         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
 11474  001A2C  C06B  F06F         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
 11475                           
 11476                           ; BSR set to: 0
 11477                           ;CANlib.h: 345: TXB0SIDL = TXB0SIDL & 0b00011111;
 11478  001A30  010F               	movlb	15	; () banked
 11479  001A32  5142               	movf	66,w,b	;volatile
 11480  001A34  0B1F               	andlw	31
 11481  001A36  010F               	movlb	15	; () banked
 11482  001A38  6F42               	movwf	66,b	;volatile
 11483                           
 11484                           ; BSR set to: 15
 11485                           ;CANlib.h: 346: TXB0SIDL = (unsigned char) tamp;
 11486  001A3A  C06C  FF42         	movff	CANsendMessage@tamp,3906	;volatile
 11487  001A3E  D000               	goto	l6277
 11488  001A40                     l6277:
 11489                           
 11490                           ;CANlib.h: 347: }
 11491                           ;CANlib.h: 349: if (0b00000001 & flags)
 11492  001A40  0100               	movlb	0	; () banked
 11493  001A42  A167               	btfss	CANsendMessage@flags& (0+255),0,b
 11494  001A44  D003               	goto	l379
 11495                           
 11496                           ; BSR set to: 0
 11497                           ;CANlib.h: 350: TXB0CONbits.TXPRI0 = 0x01;
 11498  001A46  010F               	movlb	15	; () banked
 11499  001A48  8140               	bsf	64,0,b	;volatile
 11500  001A4A  D002               	goto	l380
 11501  001A4C                     l379:
 11502                           
 11503                           ; BSR set to: 0
 11504                           ;CANlib.h: 351: else
 11505                           ;CANlib.h: 352: TXB0CONbits.TXPRI0 = 0x00;
 11506  001A4C  010F               	movlb	15	; () banked
 11507  001A4E  9140               	bcf	64,0,b	;volatile
 11508  001A50                     l380:
 11509                           
 11510                           ; BSR set to: 15
 11511                           ;CANlib.h: 353: if (0b00000010 & flags)
 11512  001A50  0100               	movlb	0	; () banked
 11513  001A52  A367               	btfss	CANsendMessage@flags& (0+255),1,b
 11514  001A54  D003               	goto	l381
 11515                           
 11516                           ; BSR set to: 0
 11517                           ;CANlib.h: 354: TXB0CONbits.TXPRI1 = 0x01;
 11518  001A56  010F               	movlb	15	; () banked
 11519  001A58  8340               	bsf	64,1,b	;volatile
 11520  001A5A  D003               	goto	l6283
 11521  001A5C                     l381:
 11522                           
 11523                           ; BSR set to: 0
 11524                           ;CANlib.h: 355: else
 11525                           ;CANlib.h: 356: TXB0CONbits.TXPRI1 = 0x00;
 11526  001A5C  010F               	movlb	15	; () banked
 11527  001A5E  9340               	bcf	64,1,b	;volatile
 11528  001A60  D000               	goto	l6283
 11529  001A62                     l6283:
 11530                           
 11531                           ; BSR set to: 15
 11532                           ;CANlib.h: 358: TXB0D0 = data[0];
 11533  001A62  C064  FFD9         	movff	CANsendMessage@data,fsr2l
 11534  001A66  C065  FFDA         	movff	CANsendMessage@data+1,fsr2h
 11535  001A6A  50DF               	movf	indf2,w,c
 11536  001A6C  010F               	movlb	15	; () banked
 11537  001A6E  6F46               	movwf	70,b	;volatile
 11538                           
 11539                           ; BSR set to: 15
 11540                           ;CANlib.h: 359: TXB0D1 = data[1];
 11541  001A70  0100               	movlb	0	; () banked
 11542  001A72  EE20 F001          	lfsr	2,1
 11543  001A76  5164               	movf	CANsendMessage@data& (0+255),w,b
 11544  001A78  26D9               	addwf	fsr2l,f,c
 11545  001A7A  5165               	movf	(CANsendMessage@data+1)& (0+255),w,b
 11546  001A7C  22DA               	addwfc	fsr2h,f,c
 11547  001A7E  50DF               	movf	indf2,w,c
 11548  001A80  010F               	movlb	15	; () banked
 11549  001A82  6F47               	movwf	71,b	;volatile
 11550                           
 11551                           ; BSR set to: 15
 11552                           ;CANlib.h: 360: TXB0D2 = data[2];
 11553  001A84  0100               	movlb	0	; () banked
 11554  001A86  EE20 F002          	lfsr	2,2
 11555  001A8A  5164               	movf	CANsendMessage@data& (0+255),w,b
 11556  001A8C  26D9               	addwf	fsr2l,f,c
 11557  001A8E  5165               	movf	(CANsendMessage@data+1)& (0+255),w,b
 11558  001A90  22DA               	addwfc	fsr2h,f,c
 11559  001A92  50DF               	movf	indf2,w,c
 11560  001A94  010F               	movlb	15	; () banked
 11561  001A96  6F48               	movwf	72,b	;volatile
 11562                           
 11563                           ; BSR set to: 15
 11564                           ;CANlib.h: 361: TXB0D3 = data[3];
 11565  001A98  0100               	movlb	0	; () banked
 11566  001A9A  EE20 F003          	lfsr	2,3
 11567  001A9E  5164               	movf	CANsendMessage@data& (0+255),w,b
 11568  001AA0  26D9               	addwf	fsr2l,f,c
 11569  001AA2  5165               	movf	(CANsendMessage@data+1)& (0+255),w,b
 11570  001AA4  22DA               	addwfc	fsr2h,f,c
 11571  001AA6  50DF               	movf	indf2,w,c
 11572  001AA8  010F               	movlb	15	; () banked
 11573  001AAA  6F49               	movwf	73,b	;volatile
 11574                           
 11575                           ; BSR set to: 15
 11576                           ;CANlib.h: 362: TXB0D4 = data[4];
 11577  001AAC  0100               	movlb	0	; () banked
 11578  001AAE  EE20 F004          	lfsr	2,4
 11579  001AB2  5164               	movf	CANsendMessage@data& (0+255),w,b
 11580  001AB4  26D9               	addwf	fsr2l,f,c
 11581  001AB6  5165               	movf	(CANsendMessage@data+1)& (0+255),w,b
 11582  001AB8  22DA               	addwfc	fsr2h,f,c
 11583  001ABA  50DF               	movf	indf2,w,c
 11584  001ABC  010F               	movlb	15	; () banked
 11585  001ABE  6F4A               	movwf	74,b	;volatile
 11586                           
 11587                           ; BSR set to: 15
 11588                           ;CANlib.h: 363: TXB0D5 = data[5];
 11589  001AC0  0100               	movlb	0	; () banked
 11590  001AC2  EE20 F005          	lfsr	2,5
 11591  001AC6  5164               	movf	CANsendMessage@data& (0+255),w,b
 11592  001AC8  26D9               	addwf	fsr2l,f,c
 11593  001ACA  5165               	movf	(CANsendMessage@data+1)& (0+255),w,b
 11594  001ACC  22DA               	addwfc	fsr2h,f,c
 11595  001ACE  50DF               	movf	indf2,w,c
 11596  001AD0  010F               	movlb	15	; () banked
 11597  001AD2  6F4B               	movwf	75,b	;volatile
 11598                           
 11599                           ; BSR set to: 15
 11600                           ;CANlib.h: 364: TXB0D6 = data[6];
 11601  001AD4  0100               	movlb	0	; () banked
 11602  001AD6  EE20 F006          	lfsr	2,6
 11603  001ADA  5164               	movf	CANsendMessage@data& (0+255),w,b
 11604  001ADC  26D9               	addwf	fsr2l,f,c
 11605  001ADE  5165               	movf	(CANsendMessage@data+1)& (0+255),w,b
 11606  001AE0  22DA               	addwfc	fsr2h,f,c
 11607  001AE2  50DF               	movf	indf2,w,c
 11608  001AE4  010F               	movlb	15	; () banked
 11609  001AE6  6F4C               	movwf	76,b	;volatile
 11610                           
 11611                           ; BSR set to: 15
 11612                           ;CANlib.h: 365: TXB0D7 = data[7];
 11613  001AE8  0100               	movlb	0	; () banked
 11614  001AEA  EE20 F007          	lfsr	2,7
 11615  001AEE  5164               	movf	CANsendMessage@data& (0+255),w,b
 11616  001AF0  26D9               	addwf	fsr2l,f,c
 11617  001AF2  5165               	movf	(CANsendMessage@data+1)& (0+255),w,b
 11618  001AF4  22DA               	addwfc	fsr2h,f,c
 11619  001AF6  50DF               	movf	indf2,w,c
 11620  001AF8  010F               	movlb	15	; () banked
 11621  001AFA  6F4D               	movwf	77,b	;volatile
 11622                           
 11623                           ; BSR set to: 15
 11624                           ;CANlib.h: 367: TXB0CONbits.TXREQ = 0x01;
 11625  001AFC  010F               	movlb	15	; () banked
 11626  001AFE  8740               	bsf	64,3,b	;volatile
 11627                           
 11628                           ; BSR set to: 15
 11629                           ;CANlib.h: 368: return;
 11630  001B00  0012               	return	
 11631  001B02                     l369:
 11632                           
 11633                           ; BSR set to: 15
 11634                           ;CANlib.h: 369: }
 11635                           ;CANlib.h: 373: if (TXB1CONbits.TXREQ == 0)
 11636  001B02  010F               	movlb	15	; () banked
 11637  001B04  B730               	btfsc	48,3,b	;volatile
 11638  001B06  D142               	goto	l384
 11639                           
 11640                           ; BSR set to: 15
 11641                           ;CANlib.h: 374: { TXB1DLC = dataLength;
 11642  001B08  C066  FF35         	movff	CANsendMessage@dataLength,3893	;volatile
 11643                           
 11644                           ;CANlib.h: 376: if (0b01000000 & flags)
 11645  001B0C  0100               	movlb	0	; () banked
 11646  001B0E  AD67               	btfss	CANsendMessage@flags& (0+255),6,b
 11647  001B10  D003               	goto	l385
 11648                           
 11649                           ; BSR set to: 0
 11650                           ;CANlib.h: 377: TXB1DLCbits.TXRTR = 0x01;
 11651  001B12  010F               	movlb	15	; () banked
 11652  001B14  8D35               	bsf	53,6,b	;volatile
 11653  001B16  D002               	goto	l386
 11654  001B18                     l385:
 11655                           
 11656                           ; BSR set to: 0
 11657                           ;CANlib.h: 378: else
 11658                           ;CANlib.h: 379: TXB1DLCbits.TXRTR = 0x00;
 11659  001B18  010F               	movlb	15	; () banked
 11660  001B1A  9D35               	bcf	53,6,b	;volatile
 11661  001B1C                     l386:
 11662                           
 11663                           ; BSR set to: 15
 11664                           ;CANlib.h: 381: if (CAN_TX_FRAME_MASK & flags)
 11665  001B1C  0100               	movlb	0	; () banked
 11666  001B1E  A767               	btfss	CANsendMessage@flags& (0+255),3,b
 11667  001B20  D07A               	goto	l387
 11668                           
 11669                           ; BSR set to: 0
 11670                           ;CANlib.h: 382: {
 11671                           ;CANlib.h: 383: tamp = identifier & 0x000000FF;
 11672  001B22  0100               	movlb	0	; () banked
 11673  001B24  5160               	movf	CANsendMessage@identifier& (0+255),w,b
 11674  001B26  0100               	movlb	0	; () banked
 11675  001B28  6F6C               	movwf	CANsendMessage@tamp& (0+255),b
 11676  001B2A  6B6D               	clrf	(CANsendMessage@tamp+1)& (0+255),b
 11677  001B2C  6B6E               	clrf	(CANsendMessage@tamp+2)& (0+255),b
 11678  001B2E  6B6F               	clrf	(CANsendMessage@tamp+3)& (0+255),b
 11679                           
 11680                           ; BSR set to: 0
 11681                           ;CANlib.h: 384: TXB1EIDL = (unsigned char) tamp;
 11682  001B30  C06C  FF34         	movff	CANsendMessage@tamp,3892	;volatile
 11683                           
 11684                           ; BSR set to: 0
 11685                           ;CANlib.h: 386: tamp = identifier & 0x0000FF00;
 11686  001B34  0E00               	movlw	0
 11687  001B36  0100               	movlb	0	; () banked
 11688  001B38  1560               	andwf	CANsendMessage@identifier& (0+255),w,b
 11689  001B3A  0100               	movlb	0	; () banked
 11690  001B3C  6F6C               	movwf	CANsendMessage@tamp& (0+255),b
 11691  001B3E  0EFF               	movlw	255
 11692  001B40  0100               	movlb	0	; () banked
 11693  001B42  1561               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
 11694  001B44  0100               	movlb	0	; () banked
 11695  001B46  6F6D               	movwf	(CANsendMessage@tamp+1)& (0+255),b
 11696  001B48  0E00               	movlw	0
 11697  001B4A  0100               	movlb	0	; () banked
 11698  001B4C  1562               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
 11699  001B4E  0100               	movlb	0	; () banked
 11700  001B50  6F6E               	movwf	(CANsendMessage@tamp+2)& (0+255),b
 11701  001B52  0E00               	movlw	0
 11702  001B54  0100               	movlb	0	; () banked
 11703  001B56  1563               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
 11704  001B58  0100               	movlb	0	; () banked
 11705  001B5A  6F6F               	movwf	(CANsendMessage@tamp+3)& (0+255),b
 11706                           
 11707                           ; BSR set to: 0
 11708                           ;CANlib.h: 387: tamp = tamp >> 8;
 11709  001B5C  C06C  F068         	movff	CANsendMessage@tamp,??_CANsendMessage
 11710  001B60  C06D  F069         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
 11711  001B64  C06E  F06A         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
 11712  001B68  C06F  F06B         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
 11713  001B6C  C069  F068         	movff	??_CANsendMessage+1,??_CANsendMessage
 11714  001B70  C06A  F069         	movff	??_CANsendMessage+2,??_CANsendMessage+1
 11715  001B74  C06B  F06A         	movff	??_CANsendMessage+3,??_CANsendMessage+2
 11716  001B78  0100               	movlb	0	; () banked
 11717  001B7A  6B6B               	clrf	(??_CANsendMessage+3)& (0+255),b
 11718  001B7C  C068  F06C         	movff	??_CANsendMessage,CANsendMessage@tamp
 11719  001B80  C069  F06D         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
 11720  001B84  C06A  F06E         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
 11721  001B88  C06B  F06F         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
 11722                           
 11723                           ; BSR set to: 0
 11724                           ;CANlib.h: 388: TXB1EIDH = (unsigned char) tamp;
 11725  001B8C  C06C  FF33         	movff	CANsendMessage@tamp,3891	;volatile
 11726                           
 11727                           ; BSR set to: 0
 11728                           ;CANlib.h: 390: TXB1SIDL = 0x00;
 11729  001B90  0E00               	movlw	0
 11730  001B92  010F               	movlb	15	; () banked
 11731  001B94  6F32               	movwf	50,b	;volatile
 11732                           
 11733                           ; BSR set to: 15
 11734                           ;CANlib.h: 391: TXB1SIDLbits.EXIDE = 0x01;
 11735  001B96  010F               	movlb	15	; () banked
 11736  001B98  8732               	bsf	50,3,b	;volatile
 11737                           
 11738                           ; BSR set to: 15
 11739                           ;CANlib.h: 393: if (identifier & 0x00010000)
 11740  001B9A  0100               	movlb	0	; () banked
 11741  001B9C  A162               	btfss	(CANsendMessage@identifier+2)& (0+255),0,b
 11742  001B9E  D002               	goto	l388
 11743                           
 11744                           ; BSR set to: 0
 11745                           ;CANlib.h: 394: TXB1SIDLbits.EID16 = 0x01;
 11746  001BA0  010F               	movlb	15	; () banked
 11747  001BA2  8132               	bsf	50,0,b	;volatile
 11748  001BA4                     l388:
 11749                           
 11750                           ;CANlib.h: 395: if (identifier & 0x00020000)
 11751  001BA4  0100               	movlb	0	; () banked
 11752  001BA6  A362               	btfss	(CANsendMessage@identifier+2)& (0+255),1,b
 11753  001BA8  D002               	goto	l389
 11754                           
 11755                           ; BSR set to: 0
 11756                           ;CANlib.h: 396: TXB1SIDLbits.EID17 = 0x01;
 11757  001BAA  010F               	movlb	15	; () banked
 11758  001BAC  8332               	bsf	50,1,b	;volatile
 11759  001BAE                     l389:
 11760                           
 11761                           ;CANlib.h: 397: if (identifier & 0x00040000)
 11762  001BAE  0100               	movlb	0	; () banked
 11763  001BB0  A562               	btfss	(CANsendMessage@identifier+2)& (0+255),2,b
 11764  001BB2  D002               	goto	l390
 11765                           
 11766                           ; BSR set to: 0
 11767                           ;CANlib.h: 398: TXB1SIDLbits.SID0 = 0x01;
 11768  001BB4  010F               	movlb	15	; () banked
 11769  001BB6  8B32               	bsf	50,5,b	;volatile
 11770  001BB8                     l390:
 11771                           
 11772                           ;CANlib.h: 399: if (identifier & 0x00080000)
 11773  001BB8  0100               	movlb	0	; () banked
 11774  001BBA  A762               	btfss	(CANsendMessage@identifier+2)& (0+255),3,b
 11775  001BBC  D002               	goto	l391
 11776                           
 11777                           ; BSR set to: 0
 11778                           ;CANlib.h: 400: TXB1SIDLbits.SID1 = 0x01;
 11779  001BBE  010F               	movlb	15	; () banked
 11780  001BC0  8D32               	bsf	50,6,b	;volatile
 11781  001BC2                     l391:
 11782                           
 11783                           ;CANlib.h: 401: if (identifier & 0x00100000)
 11784  001BC2  0100               	movlb	0	; () banked
 11785  001BC4  A962               	btfss	(CANsendMessage@identifier+2)& (0+255),4,b
 11786  001BC6  D003               	goto	l6333
 11787                           
 11788                           ; BSR set to: 0
 11789                           ;CANlib.h: 402: TXB1SIDLbits.SID2 = 0x01;
 11790  001BC8  010F               	movlb	15	; () banked
 11791  001BCA  8F32               	bsf	50,7,b	;volatile
 11792  001BCC  D000               	goto	l6333
 11793  001BCE                     l6333:
 11794                           
 11795                           ;CANlib.h: 404: tamp = (identifier >> 21);
 11796  001BCE  C060  F068         	movff	CANsendMessage@identifier,??_CANsendMessage
 11797  001BD2  C061  F069         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
 11798  001BD6  C062  F06A         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
 11799  001BDA  C063  F06B         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
 11800  001BDE  0E16               	movlw	22
 11801  001BE0  D006               	goto	u8350
 11802  001BE2                     u8355:
 11803  001BE2  0100               	movlb	0	; () banked
 11804  001BE4  90D8               	bcf	status,0,c
 11805  001BE6  336B               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
 11806  001BE8  336A               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
 11807  001BEA  3369               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
 11808  001BEC  3368               	rrcf	??_CANsendMessage& (0+255),f,b
 11809  001BEE                     u8350:
 11810  001BEE  2EE8               	decfsz	wreg,f,c
 11811  001BF0  D7F8               	goto	u8355
 11812  001BF2  C068  F06C         	movff	??_CANsendMessage,CANsendMessage@tamp
 11813  001BF6  C069  F06D         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
 11814  001BFA  C06A  F06E         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
 11815  001BFE  C06B  F06F         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
 11816                           
 11817                           ; BSR set to: 0
 11818                           ;CANlib.h: 405: tamp = tamp & 0x000000FF;
 11819  001C02  0100               	movlb	0	; () banked
 11820  001C04  516C               	movf	CANsendMessage@tamp& (0+255),w,b
 11821  001C06  0100               	movlb	0	; () banked
 11822  001C08  6F6C               	movwf	CANsendMessage@tamp& (0+255),b
 11823  001C0A  6B6D               	clrf	(CANsendMessage@tamp+1)& (0+255),b
 11824  001C0C  6B6E               	clrf	(CANsendMessage@tamp+2)& (0+255),b
 11825  001C0E  6B6F               	clrf	(CANsendMessage@tamp+3)& (0+255),b
 11826                           
 11827                           ; BSR set to: 0
 11828                           ;CANlib.h: 406: TXB1SIDH = (unsigned char) tamp;
 11829  001C10  C06C  FF31         	movff	CANsendMessage@tamp,3889	;volatile
 11830                           
 11831                           ;CANlib.h: 407: }
 11832  001C14  D05A               	goto	l6353
 11833  001C16                     l387:
 11834                           
 11835                           ; BSR set to: 0
 11836                           ;CANlib.h: 409: else
 11837                           ;CANlib.h: 411: {
 11838                           ;CANlib.h: 412: TXB1SIDLbits.EXIDE = 0x00;
 11839  001C16  010F               	movlb	15	; () banked
 11840  001C18  9732               	bcf	50,3,b	;volatile
 11841                           
 11842                           ; BSR set to: 15
 11843                           ;CANlib.h: 414: tamp = (identifier >> 3);
 11844  001C1A  C060  F068         	movff	CANsendMessage@identifier,??_CANsendMessage
 11845  001C1E  C061  F069         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
 11846  001C22  C062  F06A         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
 11847  001C26  C063  F06B         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
 11848  001C2A  0E04               	movlw	4
 11849  001C2C  D006               	goto	u8360
 11850  001C2E                     u8365:
 11851  001C2E  0100               	movlb	0	; () banked
 11852  001C30  90D8               	bcf	status,0,c
 11853  001C32  336B               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
 11854  001C34  336A               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
 11855  001C36  3369               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
 11856  001C38  3368               	rrcf	??_CANsendMessage& (0+255),f,b
 11857  001C3A                     u8360:
 11858  001C3A  2EE8               	decfsz	wreg,f,c
 11859  001C3C  D7F8               	goto	u8365
 11860  001C3E  C068  F06C         	movff	??_CANsendMessage,CANsendMessage@tamp
 11861  001C42  C069  F06D         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
 11862  001C46  C06A  F06E         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
 11863  001C4A  C06B  F06F         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
 11864                           
 11865                           ; BSR set to: 0
 11866                           ;CANlib.h: 415: tamp = tamp & 0x000000FF;
 11867  001C4E  0100               	movlb	0	; () banked
 11868  001C50  516C               	movf	CANsendMessage@tamp& (0+255),w,b
 11869  001C52  0100               	movlb	0	; () banked
 11870  001C54  6F6C               	movwf	CANsendMessage@tamp& (0+255),b
 11871  001C56  6B6D               	clrf	(CANsendMessage@tamp+1)& (0+255),b
 11872  001C58  6B6E               	clrf	(CANsendMessage@tamp+2)& (0+255),b
 11873  001C5A  6B6F               	clrf	(CANsendMessage@tamp+3)& (0+255),b
 11874                           
 11875                           ; BSR set to: 0
 11876                           ;CANlib.h: 416: TXB1SIDH = (unsigned char) tamp;
 11877  001C5C  C06C  FF31         	movff	CANsendMessage@tamp,3889	;volatile
 11878                           
 11879                           ; BSR set to: 0
 11880                           ;CANlib.h: 418: tamp = identifier & 0x00000007;
 11881  001C60  0E07               	movlw	7
 11882  001C62  0100               	movlb	0	; () banked
 11883  001C64  1560               	andwf	CANsendMessage@identifier& (0+255),w,b
 11884  001C66  0100               	movlb	0	; () banked
 11885  001C68  6F6C               	movwf	CANsendMessage@tamp& (0+255),b
 11886  001C6A  0E00               	movlw	0
 11887  001C6C  0100               	movlb	0	; () banked
 11888  001C6E  1561               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
 11889  001C70  0100               	movlb	0	; () banked
 11890  001C72  6F6D               	movwf	(CANsendMessage@tamp+1)& (0+255),b
 11891  001C74  0E00               	movlw	0
 11892  001C76  0100               	movlb	0	; () banked
 11893  001C78  1562               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
 11894  001C7A  0100               	movlb	0	; () banked
 11895  001C7C  6F6E               	movwf	(CANsendMessage@tamp+2)& (0+255),b
 11896  001C7E  0E00               	movlw	0
 11897  001C80  0100               	movlb	0	; () banked
 11898  001C82  1563               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
 11899  001C84  0100               	movlb	0	; () banked
 11900  001C86  6F6F               	movwf	(CANsendMessage@tamp+3)& (0+255),b
 11901                           
 11902                           ; BSR set to: 0
 11903                           ;CANlib.h: 419: tamp = tamp << 5;
 11904  001C88  C06C  F068         	movff	CANsendMessage@tamp,??_CANsendMessage
 11905  001C8C  C06D  F069         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
 11906  001C90  C06E  F06A         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
 11907  001C94  C06F  F06B         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
 11908  001C98  0E05               	movlw	5
 11909  001C9A                     u8375:
 11910  001C9A  90D8               	bcf	status,0,c
 11911  001C9C  0100               	movlb	0	; () banked
 11912  001C9E  3768               	rlcf	??_CANsendMessage& (0+255),f,b
 11913  001CA0  3769               	rlcf	(??_CANsendMessage+1)& (0+255),f,b
 11914  001CA2  376A               	rlcf	(??_CANsendMessage+2)& (0+255),f,b
 11915  001CA4  376B               	rlcf	(??_CANsendMessage+3)& (0+255),f,b
 11916  001CA6  2EE8               	decfsz	wreg,f,c
 11917  001CA8  D7F8               	goto	u8375
 11918  001CAA  C068  F06C         	movff	??_CANsendMessage,CANsendMessage@tamp
 11919  001CAE  C069  F06D         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
 11920  001CB2  C06A  F06E         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
 11921  001CB6  C06B  F06F         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
 11922                           
 11923                           ; BSR set to: 0
 11924                           ;CANlib.h: 420: TXB1SIDL = TXB1SIDL & 0b00011111;
 11925  001CBA  010F               	movlb	15	; () banked
 11926  001CBC  5132               	movf	50,w,b	;volatile
 11927  001CBE  0B1F               	andlw	31
 11928  001CC0  010F               	movlb	15	; () banked
 11929  001CC2  6F32               	movwf	50,b	;volatile
 11930                           
 11931                           ; BSR set to: 15
 11932                           ;CANlib.h: 421: TXB1SIDL = (unsigned char) tamp;
 11933  001CC4  C06C  FF32         	movff	CANsendMessage@tamp,3890	;volatile
 11934  001CC8  D000               	goto	l6353
 11935  001CCA                     l6353:
 11936                           
 11937                           ;CANlib.h: 422: }
 11938                           ;CANlib.h: 424: if (0b00000001 & flags)
 11939  001CCA  0100               	movlb	0	; () banked
 11940  001CCC  A167               	btfss	CANsendMessage@flags& (0+255),0,b
 11941  001CCE  D003               	goto	l394
 11942                           
 11943                           ; BSR set to: 0
 11944                           ;CANlib.h: 425: TXB1CONbits.TXPRI0 = 0x01;
 11945  001CD0  010F               	movlb	15	; () banked
 11946  001CD2  8130               	bsf	48,0,b	;volatile
 11947  001CD4  D002               	goto	l395
 11948  001CD6                     l394:
 11949                           
 11950                           ; BSR set to: 0
 11951                           ;CANlib.h: 426: else
 11952                           ;CANlib.h: 427: TXB1CONbits.TXPRI0 = 0x00;
 11953  001CD6  010F               	movlb	15	; () banked
 11954  001CD8  9130               	bcf	48,0,b	;volatile
 11955  001CDA                     l395:
 11956                           
 11957                           ; BSR set to: 15
 11958                           ;CANlib.h: 428: if (0b00000010 & flags)
 11959  001CDA  0100               	movlb	0	; () banked
 11960  001CDC  A367               	btfss	CANsendMessage@flags& (0+255),1,b
 11961  001CDE  D003               	goto	l396
 11962                           
 11963                           ; BSR set to: 0
 11964                           ;CANlib.h: 429: TXB1CONbits.TXPRI1 = 0x01;
 11965  001CE0  010F               	movlb	15	; () banked
 11966  001CE2  8330               	bsf	48,1,b	;volatile
 11967  001CE4  D003               	goto	l6359
 11968  001CE6                     l396:
 11969                           
 11970                           ; BSR set to: 0
 11971                           ;CANlib.h: 430: else
 11972                           ;CANlib.h: 431: TXB1CONbits.TXPRI1 = 0x00;
 11973  001CE6  010F               	movlb	15	; () banked
 11974  001CE8  9330               	bcf	48,1,b	;volatile
 11975  001CEA  D000               	goto	l6359
 11976  001CEC                     l6359:
 11977                           
 11978                           ; BSR set to: 15
 11979                           ;CANlib.h: 433: TXB1D0 = data[0];
 11980  001CEC  C064  FFD9         	movff	CANsendMessage@data,fsr2l
 11981  001CF0  C065  FFDA         	movff	CANsendMessage@data+1,fsr2h
 11982  001CF4  50DF               	movf	indf2,w,c
 11983  001CF6  010F               	movlb	15	; () banked
 11984  001CF8  6F36               	movwf	54,b	;volatile
 11985                           
 11986                           ; BSR set to: 15
 11987                           ;CANlib.h: 434: TXB1D1 = data[1];
 11988  001CFA  0100               	movlb	0	; () banked
 11989  001CFC  EE20 F001          	lfsr	2,1
 11990  001D00  5164               	movf	CANsendMessage@data& (0+255),w,b
 11991  001D02  26D9               	addwf	fsr2l,f,c
 11992  001D04  5165               	movf	(CANsendMessage@data+1)& (0+255),w,b
 11993  001D06  22DA               	addwfc	fsr2h,f,c
 11994  001D08  50DF               	movf	indf2,w,c
 11995  001D0A  010F               	movlb	15	; () banked
 11996  001D0C  6F37               	movwf	55,b	;volatile
 11997                           
 11998                           ; BSR set to: 15
 11999                           ;CANlib.h: 435: TXB1D2 = data[2];
 12000  001D0E  0100               	movlb	0	; () banked
 12001  001D10  EE20 F002          	lfsr	2,2
 12002  001D14  5164               	movf	CANsendMessage@data& (0+255),w,b
 12003  001D16  26D9               	addwf	fsr2l,f,c
 12004  001D18  5165               	movf	(CANsendMessage@data+1)& (0+255),w,b
 12005  001D1A  22DA               	addwfc	fsr2h,f,c
 12006  001D1C  50DF               	movf	indf2,w,c
 12007  001D1E  010F               	movlb	15	; () banked
 12008  001D20  6F38               	movwf	56,b	;volatile
 12009                           
 12010                           ; BSR set to: 15
 12011                           ;CANlib.h: 436: TXB1D3 = data[3];
 12012  001D22  0100               	movlb	0	; () banked
 12013  001D24  EE20 F003          	lfsr	2,3
 12014  001D28  5164               	movf	CANsendMessage@data& (0+255),w,b
 12015  001D2A  26D9               	addwf	fsr2l,f,c
 12016  001D2C  5165               	movf	(CANsendMessage@data+1)& (0+255),w,b
 12017  001D2E  22DA               	addwfc	fsr2h,f,c
 12018  001D30  50DF               	movf	indf2,w,c
 12019  001D32  010F               	movlb	15	; () banked
 12020  001D34  6F39               	movwf	57,b	;volatile
 12021                           
 12022                           ; BSR set to: 15
 12023                           ;CANlib.h: 437: TXB1D4 = data[4];
 12024  001D36  0100               	movlb	0	; () banked
 12025  001D38  EE20 F004          	lfsr	2,4
 12026  001D3C  5164               	movf	CANsendMessage@data& (0+255),w,b
 12027  001D3E  26D9               	addwf	fsr2l,f,c
 12028  001D40  5165               	movf	(CANsendMessage@data+1)& (0+255),w,b
 12029  001D42  22DA               	addwfc	fsr2h,f,c
 12030  001D44  50DF               	movf	indf2,w,c
 12031  001D46  010F               	movlb	15	; () banked
 12032  001D48  6F3A               	movwf	58,b	;volatile
 12033                           
 12034                           ; BSR set to: 15
 12035                           ;CANlib.h: 438: TXB1D5 = data[5];
 12036  001D4A  0100               	movlb	0	; () banked
 12037  001D4C  EE20 F005          	lfsr	2,5
 12038  001D50  5164               	movf	CANsendMessage@data& (0+255),w,b
 12039  001D52  26D9               	addwf	fsr2l,f,c
 12040  001D54  5165               	movf	(CANsendMessage@data+1)& (0+255),w,b
 12041  001D56  22DA               	addwfc	fsr2h,f,c
 12042  001D58  50DF               	movf	indf2,w,c
 12043  001D5A  010F               	movlb	15	; () banked
 12044  001D5C  6F3B               	movwf	59,b	;volatile
 12045                           
 12046                           ; BSR set to: 15
 12047                           ;CANlib.h: 439: TXB1D6 = data[6];
 12048  001D5E  0100               	movlb	0	; () banked
 12049  001D60  EE20 F006          	lfsr	2,6
 12050  001D64  5164               	movf	CANsendMessage@data& (0+255),w,b
 12051  001D66  26D9               	addwf	fsr2l,f,c
 12052  001D68  5165               	movf	(CANsendMessage@data+1)& (0+255),w,b
 12053  001D6A  22DA               	addwfc	fsr2h,f,c
 12054  001D6C  50DF               	movf	indf2,w,c
 12055  001D6E  010F               	movlb	15	; () banked
 12056  001D70  6F3C               	movwf	60,b	;volatile
 12057                           
 12058                           ; BSR set to: 15
 12059                           ;CANlib.h: 440: TXB1D7 = data[7];
 12060  001D72  0100               	movlb	0	; () banked
 12061  001D74  EE20 F007          	lfsr	2,7
 12062  001D78  5164               	movf	CANsendMessage@data& (0+255),w,b
 12063  001D7A  26D9               	addwf	fsr2l,f,c
 12064  001D7C  5165               	movf	(CANsendMessage@data+1)& (0+255),w,b
 12065  001D7E  22DA               	addwfc	fsr2h,f,c
 12066  001D80  50DF               	movf	indf2,w,c
 12067  001D82  010F               	movlb	15	; () banked
 12068  001D84  6F3D               	movwf	61,b	;volatile
 12069                           
 12070                           ; BSR set to: 15
 12071                           ;CANlib.h: 442: TXB1CONbits.TXREQ = 0x01;
 12072  001D86  010F               	movlb	15	; () banked
 12073  001D88  8730               	bsf	48,3,b	;volatile
 12074                           
 12075                           ; BSR set to: 15
 12076                           ;CANlib.h: 444: return;
 12077  001D8A  0012               	return	
 12078  001D8C                     l384:
 12079                           
 12080                           ; BSR set to: 15
 12081                           ;CANlib.h: 445: }
 12082                           ;CANlib.h: 449: if (TXB2CONbits.TXREQ == 0)
 12083  001D8C  010F               	movlb	15	; () banked
 12084  001D8E  B720               	btfsc	32,3,b	;volatile
 12085  001D90  0012               	return	
 12086                           
 12087                           ; BSR set to: 15
 12088                           ;CANlib.h: 450: { TXB2DLC = dataLength;
 12089  001D92  C066  FF25         	movff	CANsendMessage@dataLength,3877	;volatile
 12090                           
 12091                           ;CANlib.h: 452: if (0b01000000 & flags)
 12092  001D96  0100               	movlb	0	; () banked
 12093  001D98  AD67               	btfss	CANsendMessage@flags& (0+255),6,b
 12094  001D9A  D003               	goto	l399
 12095                           
 12096                           ; BSR set to: 0
 12097                           ;CANlib.h: 453: TXB2DLCbits.TXRTR = 0x01;
 12098  001D9C  010F               	movlb	15	; () banked
 12099  001D9E  8D25               	bsf	37,6,b	;volatile
 12100  001DA0  D002               	goto	l400
 12101  001DA2                     l399:
 12102                           
 12103                           ; BSR set to: 0
 12104                           ;CANlib.h: 454: else
 12105                           ;CANlib.h: 455: TXB2DLCbits.TXRTR = 0x00;
 12106  001DA2  010F               	movlb	15	; () banked
 12107  001DA4  9D25               	bcf	37,6,b	;volatile
 12108  001DA6                     l400:
 12109                           
 12110                           ; BSR set to: 15
 12111                           ;CANlib.h: 457: if (CAN_TX_FRAME_MASK & flags)
 12112  001DA6  0100               	movlb	0	; () banked
 12113  001DA8  A767               	btfss	CANsendMessage@flags& (0+255),3,b
 12114  001DAA  D07A               	goto	l401
 12115                           
 12116                           ; BSR set to: 0
 12117                           ;CANlib.h: 458: {
 12118                           ;CANlib.h: 459: tamp = identifier & 0x000000FF;
 12119  001DAC  0100               	movlb	0	; () banked
 12120  001DAE  5160               	movf	CANsendMessage@identifier& (0+255),w,b
 12121  001DB0  0100               	movlb	0	; () banked
 12122  001DB2  6F6C               	movwf	CANsendMessage@tamp& (0+255),b
 12123  001DB4  6B6D               	clrf	(CANsendMessage@tamp+1)& (0+255),b
 12124  001DB6  6B6E               	clrf	(CANsendMessage@tamp+2)& (0+255),b
 12125  001DB8  6B6F               	clrf	(CANsendMessage@tamp+3)& (0+255),b
 12126                           
 12127                           ; BSR set to: 0
 12128                           ;CANlib.h: 460: TXB2EIDL = (unsigned char) tamp;
 12129  001DBA  C06C  FF24         	movff	CANsendMessage@tamp,3876	;volatile
 12130                           
 12131                           ; BSR set to: 0
 12132                           ;CANlib.h: 462: tamp = identifier & 0x0000FF00;
 12133  001DBE  0E00               	movlw	0
 12134  001DC0  0100               	movlb	0	; () banked
 12135  001DC2  1560               	andwf	CANsendMessage@identifier& (0+255),w,b
 12136  001DC4  0100               	movlb	0	; () banked
 12137  001DC6  6F6C               	movwf	CANsendMessage@tamp& (0+255),b
 12138  001DC8  0EFF               	movlw	255
 12139  001DCA  0100               	movlb	0	; () banked
 12140  001DCC  1561               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
 12141  001DCE  0100               	movlb	0	; () banked
 12142  001DD0  6F6D               	movwf	(CANsendMessage@tamp+1)& (0+255),b
 12143  001DD2  0E00               	movlw	0
 12144  001DD4  0100               	movlb	0	; () banked
 12145  001DD6  1562               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
 12146  001DD8  0100               	movlb	0	; () banked
 12147  001DDA  6F6E               	movwf	(CANsendMessage@tamp+2)& (0+255),b
 12148  001DDC  0E00               	movlw	0
 12149  001DDE  0100               	movlb	0	; () banked
 12150  001DE0  1563               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
 12151  001DE2  0100               	movlb	0	; () banked
 12152  001DE4  6F6F               	movwf	(CANsendMessage@tamp+3)& (0+255),b
 12153                           
 12154                           ; BSR set to: 0
 12155                           ;CANlib.h: 463: tamp = tamp >> 8;
 12156  001DE6  C06C  F068         	movff	CANsendMessage@tamp,??_CANsendMessage
 12157  001DEA  C06D  F069         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
 12158  001DEE  C06E  F06A         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
 12159  001DF2  C06F  F06B         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
 12160  001DF6  C069  F068         	movff	??_CANsendMessage+1,??_CANsendMessage
 12161  001DFA  C06A  F069         	movff	??_CANsendMessage+2,??_CANsendMessage+1
 12162  001DFE  C06B  F06A         	movff	??_CANsendMessage+3,??_CANsendMessage+2
 12163  001E02  0100               	movlb	0	; () banked
 12164  001E04  6B6B               	clrf	(??_CANsendMessage+3)& (0+255),b
 12165  001E06  C068  F06C         	movff	??_CANsendMessage,CANsendMessage@tamp
 12166  001E0A  C069  F06D         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
 12167  001E0E  C06A  F06E         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
 12168  001E12  C06B  F06F         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
 12169                           
 12170                           ; BSR set to: 0
 12171                           ;CANlib.h: 464: TXB2EIDH = (unsigned char) tamp;
 12172  001E16  C06C  FF23         	movff	CANsendMessage@tamp,3875	;volatile
 12173                           
 12174                           ; BSR set to: 0
 12175                           ;CANlib.h: 466: TXB2SIDL = 0x00;
 12176  001E1A  0E00               	movlw	0
 12177  001E1C  010F               	movlb	15	; () banked
 12178  001E1E  6F22               	movwf	34,b	;volatile
 12179                           
 12180                           ; BSR set to: 15
 12181                           ;CANlib.h: 467: TXB2SIDLbits.EXIDE = 0x01;
 12182  001E20  010F               	movlb	15	; () banked
 12183  001E22  8722               	bsf	34,3,b	;volatile
 12184                           
 12185                           ; BSR set to: 15
 12186                           ;CANlib.h: 469: if (identifier & 0x00010000)
 12187  001E24  0100               	movlb	0	; () banked
 12188  001E26  A162               	btfss	(CANsendMessage@identifier+2)& (0+255),0,b
 12189  001E28  D002               	goto	l402
 12190                           
 12191                           ; BSR set to: 0
 12192                           ;CANlib.h: 470: TXB2SIDLbits.EID16 = 0x01;
 12193  001E2A  010F               	movlb	15	; () banked
 12194  001E2C  8122               	bsf	34,0,b	;volatile
 12195  001E2E                     l402:
 12196                           
 12197                           ;CANlib.h: 471: if (identifier & 0x00020000)
 12198  001E2E  0100               	movlb	0	; () banked
 12199  001E30  A362               	btfss	(CANsendMessage@identifier+2)& (0+255),1,b
 12200  001E32  D002               	goto	l403
 12201                           
 12202                           ; BSR set to: 0
 12203                           ;CANlib.h: 472: TXB2SIDLbits.EID17 = 0x01;
 12204  001E34  010F               	movlb	15	; () banked
 12205  001E36  8322               	bsf	34,1,b	;volatile
 12206  001E38                     l403:
 12207                           
 12208                           ;CANlib.h: 473: if (identifier & 0x00040000)
 12209  001E38  0100               	movlb	0	; () banked
 12210  001E3A  A562               	btfss	(CANsendMessage@identifier+2)& (0+255),2,b
 12211  001E3C  D002               	goto	l404
 12212                           
 12213                           ; BSR set to: 0
 12214                           ;CANlib.h: 474: TXB2SIDLbits.SID0 = 0x01;
 12215  001E3E  010F               	movlb	15	; () banked
 12216  001E40  8B22               	bsf	34,5,b	;volatile
 12217  001E42                     l404:
 12218                           
 12219                           ;CANlib.h: 475: if (identifier & 0x00080000)
 12220  001E42  0100               	movlb	0	; () banked
 12221  001E44  A762               	btfss	(CANsendMessage@identifier+2)& (0+255),3,b
 12222  001E46  D002               	goto	l405
 12223                           
 12224                           ; BSR set to: 0
 12225                           ;CANlib.h: 476: TXB2SIDLbits.SID1 = 0x01;
 12226  001E48  010F               	movlb	15	; () banked
 12227  001E4A  8D22               	bsf	34,6,b	;volatile
 12228  001E4C                     l405:
 12229                           
 12230                           ;CANlib.h: 477: if (identifier & 0x00100000)
 12231  001E4C  0100               	movlb	0	; () banked
 12232  001E4E  A962               	btfss	(CANsendMessage@identifier+2)& (0+255),4,b
 12233  001E50  D003               	goto	l6409
 12234                           
 12235                           ; BSR set to: 0
 12236                           ;CANlib.h: 478: TXB2SIDLbits.SID2 = 0x01;
 12237  001E52  010F               	movlb	15	; () banked
 12238  001E54  8F22               	bsf	34,7,b	;volatile
 12239  001E56  D000               	goto	l6409
 12240  001E58                     l6409:
 12241                           
 12242                           ;CANlib.h: 480: tamp = (identifier >> 21);
 12243  001E58  C060  F068         	movff	CANsendMessage@identifier,??_CANsendMessage
 12244  001E5C  C061  F069         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
 12245  001E60  C062  F06A         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
 12246  001E64  C063  F06B         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
 12247  001E68  0E16               	movlw	22
 12248  001E6A  D006               	goto	u8480
 12249  001E6C                     u8485:
 12250  001E6C  0100               	movlb	0	; () banked
 12251  001E6E  90D8               	bcf	status,0,c
 12252  001E70  336B               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
 12253  001E72  336A               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
 12254  001E74  3369               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
 12255  001E76  3368               	rrcf	??_CANsendMessage& (0+255),f,b
 12256  001E78                     u8480:
 12257  001E78  2EE8               	decfsz	wreg,f,c
 12258  001E7A  D7F8               	goto	u8485
 12259  001E7C  C068  F06C         	movff	??_CANsendMessage,CANsendMessage@tamp
 12260  001E80  C069  F06D         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
 12261  001E84  C06A  F06E         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
 12262  001E88  C06B  F06F         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
 12263                           
 12264                           ; BSR set to: 0
 12265                           ;CANlib.h: 481: tamp = tamp & 0x000000FF;
 12266  001E8C  0100               	movlb	0	; () banked
 12267  001E8E  516C               	movf	CANsendMessage@tamp& (0+255),w,b
 12268  001E90  0100               	movlb	0	; () banked
 12269  001E92  6F6C               	movwf	CANsendMessage@tamp& (0+255),b
 12270  001E94  6B6D               	clrf	(CANsendMessage@tamp+1)& (0+255),b
 12271  001E96  6B6E               	clrf	(CANsendMessage@tamp+2)& (0+255),b
 12272  001E98  6B6F               	clrf	(CANsendMessage@tamp+3)& (0+255),b
 12273                           
 12274                           ; BSR set to: 0
 12275                           ;CANlib.h: 482: TXB2SIDH = (unsigned char) tamp;
 12276  001E9A  C06C  FF21         	movff	CANsendMessage@tamp,3873	;volatile
 12277                           
 12278                           ;CANlib.h: 483: }
 12279  001E9E  D05A               	goto	l6429
 12280  001EA0                     l401:
 12281                           
 12282                           ; BSR set to: 0
 12283                           ;CANlib.h: 485: else
 12284                           ;CANlib.h: 487: {
 12285                           ;CANlib.h: 488: TXB2SIDLbits.EXIDE = 0x00;
 12286  001EA0  010F               	movlb	15	; () banked
 12287  001EA2  9722               	bcf	34,3,b	;volatile
 12288                           
 12289                           ; BSR set to: 15
 12290                           ;CANlib.h: 490: tamp = (identifier >> 3);
 12291  001EA4  C060  F068         	movff	CANsendMessage@identifier,??_CANsendMessage
 12292  001EA8  C061  F069         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
 12293  001EAC  C062  F06A         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
 12294  001EB0  C063  F06B         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
 12295  001EB4  0E04               	movlw	4
 12296  001EB6  D006               	goto	u8490
 12297  001EB8                     u8495:
 12298  001EB8  0100               	movlb	0	; () banked
 12299  001EBA  90D8               	bcf	status,0,c
 12300  001EBC  336B               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
 12301  001EBE  336A               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
 12302  001EC0  3369               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
 12303  001EC2  3368               	rrcf	??_CANsendMessage& (0+255),f,b
 12304  001EC4                     u8490:
 12305  001EC4  2EE8               	decfsz	wreg,f,c
 12306  001EC6  D7F8               	goto	u8495
 12307  001EC8  C068  F06C         	movff	??_CANsendMessage,CANsendMessage@tamp
 12308  001ECC  C069  F06D         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
 12309  001ED0  C06A  F06E         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
 12310  001ED4  C06B  F06F         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
 12311                           
 12312                           ; BSR set to: 0
 12313                           ;CANlib.h: 491: tamp = tamp & 0x000000FF;
 12314  001ED8  0100               	movlb	0	; () banked
 12315  001EDA  516C               	movf	CANsendMessage@tamp& (0+255),w,b
 12316  001EDC  0100               	movlb	0	; () banked
 12317  001EDE  6F6C               	movwf	CANsendMessage@tamp& (0+255),b
 12318  001EE0  6B6D               	clrf	(CANsendMessage@tamp+1)& (0+255),b
 12319  001EE2  6B6E               	clrf	(CANsendMessage@tamp+2)& (0+255),b
 12320  001EE4  6B6F               	clrf	(CANsendMessage@tamp+3)& (0+255),b
 12321                           
 12322                           ; BSR set to: 0
 12323                           ;CANlib.h: 492: TXB2SIDH = (unsigned char) tamp;
 12324  001EE6  C06C  FF21         	movff	CANsendMessage@tamp,3873	;volatile
 12325                           
 12326                           ; BSR set to: 0
 12327                           ;CANlib.h: 494: tamp = identifier & 0x00000007;
 12328  001EEA  0E07               	movlw	7
 12329  001EEC  0100               	movlb	0	; () banked
 12330  001EEE  1560               	andwf	CANsendMessage@identifier& (0+255),w,b
 12331  001EF0  0100               	movlb	0	; () banked
 12332  001EF2  6F6C               	movwf	CANsendMessage@tamp& (0+255),b
 12333  001EF4  0E00               	movlw	0
 12334  001EF6  0100               	movlb	0	; () banked
 12335  001EF8  1561               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
 12336  001EFA  0100               	movlb	0	; () banked
 12337  001EFC  6F6D               	movwf	(CANsendMessage@tamp+1)& (0+255),b
 12338  001EFE  0E00               	movlw	0
 12339  001F00  0100               	movlb	0	; () banked
 12340  001F02  1562               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
 12341  001F04  0100               	movlb	0	; () banked
 12342  001F06  6F6E               	movwf	(CANsendMessage@tamp+2)& (0+255),b
 12343  001F08  0E00               	movlw	0
 12344  001F0A  0100               	movlb	0	; () banked
 12345  001F0C  1563               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
 12346  001F0E  0100               	movlb	0	; () banked
 12347  001F10  6F6F               	movwf	(CANsendMessage@tamp+3)& (0+255),b
 12348                           
 12349                           ; BSR set to: 0
 12350                           ;CANlib.h: 495: tamp = tamp << 5;
 12351  001F12  C06C  F068         	movff	CANsendMessage@tamp,??_CANsendMessage
 12352  001F16  C06D  F069         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
 12353  001F1A  C06E  F06A         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
 12354  001F1E  C06F  F06B         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
 12355  001F22  0E05               	movlw	5
 12356  001F24                     u8505:
 12357  001F24  90D8               	bcf	status,0,c
 12358  001F26  0100               	movlb	0	; () banked
 12359  001F28  3768               	rlcf	??_CANsendMessage& (0+255),f,b
 12360  001F2A  3769               	rlcf	(??_CANsendMessage+1)& (0+255),f,b
 12361  001F2C  376A               	rlcf	(??_CANsendMessage+2)& (0+255),f,b
 12362  001F2E  376B               	rlcf	(??_CANsendMessage+3)& (0+255),f,b
 12363  001F30  2EE8               	decfsz	wreg,f,c
 12364  001F32  D7F8               	goto	u8505
 12365  001F34  C068  F06C         	movff	??_CANsendMessage,CANsendMessage@tamp
 12366  001F38  C069  F06D         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
 12367  001F3C  C06A  F06E         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
 12368  001F40  C06B  F06F         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
 12369                           
 12370                           ; BSR set to: 0
 12371                           ;CANlib.h: 496: TXB2SIDL = TXB2SIDL & 0b00011111;
 12372  001F44  010F               	movlb	15	; () banked
 12373  001F46  5122               	movf	34,w,b	;volatile
 12374  001F48  0B1F               	andlw	31
 12375  001F4A  010F               	movlb	15	; () banked
 12376  001F4C  6F22               	movwf	34,b	;volatile
 12377                           
 12378                           ; BSR set to: 15
 12379                           ;CANlib.h: 497: TXB2SIDL = (unsigned char) tamp;
 12380  001F4E  C06C  FF22         	movff	CANsendMessage@tamp,3874	;volatile
 12381  001F52  D000               	goto	l6429
 12382  001F54                     l6429:
 12383                           
 12384                           ;CANlib.h: 498: }
 12385                           ;CANlib.h: 500: if (0b00000001 & flags)
 12386  001F54  0100               	movlb	0	; () banked
 12387  001F56  A167               	btfss	CANsendMessage@flags& (0+255),0,b
 12388  001F58  D003               	goto	l408
 12389                           
 12390                           ; BSR set to: 0
 12391                           ;CANlib.h: 501: TXB2CONbits.TXPRI0 = 0x01;
 12392  001F5A  010F               	movlb	15	; () banked
 12393  001F5C  8120               	bsf	32,0,b	;volatile
 12394  001F5E  D002               	goto	l409
 12395  001F60                     l408:
 12396                           
 12397                           ; BSR set to: 0
 12398                           ;CANlib.h: 502: else
 12399                           ;CANlib.h: 503: TXB2CONbits.TXPRI0 = 0x00;
 12400  001F60  010F               	movlb	15	; () banked
 12401  001F62  9120               	bcf	32,0,b	;volatile
 12402  001F64                     l409:
 12403                           
 12404                           ; BSR set to: 15
 12405                           ;CANlib.h: 504: if (0b00000010 & flags)
 12406  001F64  0100               	movlb	0	; () banked
 12407  001F66  A367               	btfss	CANsendMessage@flags& (0+255),1,b
 12408  001F68  D003               	goto	l410
 12409                           
 12410                           ; BSR set to: 0
 12411                           ;CANlib.h: 505: TXB2CONbits.TXPRI1 = 0x01;
 12412  001F6A  010F               	movlb	15	; () banked
 12413  001F6C  8320               	bsf	32,1,b	;volatile
 12414  001F6E  D003               	goto	l6435
 12415  001F70                     l410:
 12416                           
 12417                           ; BSR set to: 0
 12418                           ;CANlib.h: 506: else
 12419                           ;CANlib.h: 507: TXB2CONbits.TXPRI1 = 0x00;
 12420  001F70  010F               	movlb	15	; () banked
 12421  001F72  9320               	bcf	32,1,b	;volatile
 12422  001F74  D000               	goto	l6435
 12423  001F76                     l6435:
 12424                           
 12425                           ; BSR set to: 15
 12426                           ;CANlib.h: 509: TXB2D0 = data[0];
 12427  001F76  C064  FFD9         	movff	CANsendMessage@data,fsr2l
 12428  001F7A  C065  FFDA         	movff	CANsendMessage@data+1,fsr2h
 12429  001F7E  50DF               	movf	indf2,w,c
 12430  001F80  010F               	movlb	15	; () banked
 12431  001F82  6F26               	movwf	38,b	;volatile
 12432                           
 12433                           ; BSR set to: 15
 12434                           ;CANlib.h: 510: TXB2D1 = data[1];
 12435  001F84  0100               	movlb	0	; () banked
 12436  001F86  EE20 F001          	lfsr	2,1
 12437  001F8A  5164               	movf	CANsendMessage@data& (0+255),w,b
 12438  001F8C  26D9               	addwf	fsr2l,f,c
 12439  001F8E  5165               	movf	(CANsendMessage@data+1)& (0+255),w,b
 12440  001F90  22DA               	addwfc	fsr2h,f,c
 12441  001F92  50DF               	movf	indf2,w,c
 12442  001F94  010F               	movlb	15	; () banked
 12443  001F96  6F27               	movwf	39,b	;volatile
 12444                           
 12445                           ; BSR set to: 15
 12446                           ;CANlib.h: 511: TXB2D2 = data[2];
 12447  001F98  0100               	movlb	0	; () banked
 12448  001F9A  EE20 F002          	lfsr	2,2
 12449  001F9E  5164               	movf	CANsendMessage@data& (0+255),w,b
 12450  001FA0  26D9               	addwf	fsr2l,f,c
 12451  001FA2  5165               	movf	(CANsendMessage@data+1)& (0+255),w,b
 12452  001FA4  22DA               	addwfc	fsr2h,f,c
 12453  001FA6  50DF               	movf	indf2,w,c
 12454  001FA8  010F               	movlb	15	; () banked
 12455  001FAA  6F28               	movwf	40,b	;volatile
 12456                           
 12457                           ; BSR set to: 15
 12458                           ;CANlib.h: 512: TXB2D3 = data[3];
 12459  001FAC  0100               	movlb	0	; () banked
 12460  001FAE  EE20 F003          	lfsr	2,3
 12461  001FB2  5164               	movf	CANsendMessage@data& (0+255),w,b
 12462  001FB4  26D9               	addwf	fsr2l,f,c
 12463  001FB6  5165               	movf	(CANsendMessage@data+1)& (0+255),w,b
 12464  001FB8  22DA               	addwfc	fsr2h,f,c
 12465  001FBA  50DF               	movf	indf2,w,c
 12466  001FBC  010F               	movlb	15	; () banked
 12467  001FBE  6F29               	movwf	41,b	;volatile
 12468                           
 12469                           ; BSR set to: 15
 12470                           ;CANlib.h: 513: TXB2D4 = data[4];
 12471  001FC0  0100               	movlb	0	; () banked
 12472  001FC2  EE20 F004          	lfsr	2,4
 12473  001FC6  5164               	movf	CANsendMessage@data& (0+255),w,b
 12474  001FC8  26D9               	addwf	fsr2l,f,c
 12475  001FCA  5165               	movf	(CANsendMessage@data+1)& (0+255),w,b
 12476  001FCC  22DA               	addwfc	fsr2h,f,c
 12477  001FCE  50DF               	movf	indf2,w,c
 12478  001FD0  010F               	movlb	15	; () banked
 12479  001FD2  6F2A               	movwf	42,b	;volatile
 12480                           
 12481                           ; BSR set to: 15
 12482                           ;CANlib.h: 514: TXB2D5 = data[5];
 12483  001FD4  0100               	movlb	0	; () banked
 12484  001FD6  EE20 F005          	lfsr	2,5
 12485  001FDA  5164               	movf	CANsendMessage@data& (0+255),w,b
 12486  001FDC  26D9               	addwf	fsr2l,f,c
 12487  001FDE  5165               	movf	(CANsendMessage@data+1)& (0+255),w,b
 12488  001FE0  22DA               	addwfc	fsr2h,f,c
 12489  001FE2  50DF               	movf	indf2,w,c
 12490  001FE4  010F               	movlb	15	; () banked
 12491  001FE6  6F2B               	movwf	43,b	;volatile
 12492                           
 12493                           ; BSR set to: 15
 12494                           ;CANlib.h: 515: TXB2D6 = data[6];
 12495  001FE8  0100               	movlb	0	; () banked
 12496  001FEA  EE20 F006          	lfsr	2,6
 12497  001FEE  5164               	movf	CANsendMessage@data& (0+255),w,b
 12498  001FF0  26D9               	addwf	fsr2l,f,c
 12499  001FF2  5165               	movf	(CANsendMessage@data+1)& (0+255),w,b
 12500  001FF4  22DA               	addwfc	fsr2h,f,c
 12501  001FF6  50DF               	movf	indf2,w,c
 12502  001FF8  010F               	movlb	15	; () banked
 12503  001FFA  6F2C               	movwf	44,b	;volatile
 12504                           
 12505                           ; BSR set to: 15
 12506                           ;CANlib.h: 516: TXB2D7 = data[7];
 12507  001FFC  0100               	movlb	0	; () banked
 12508  001FFE  EE20 F007          	lfsr	2,7
 12509  002002  5164               	movf	CANsendMessage@data& (0+255),w,b
 12510  002004  26D9               	addwf	fsr2l,f,c
 12511  002006  5165               	movf	(CANsendMessage@data+1)& (0+255),w,b
 12512  002008  22DA               	addwfc	fsr2h,f,c
 12513  00200A  50DF               	movf	indf2,w,c
 12514  00200C  010F               	movlb	15	; () banked
 12515  00200E  6F2D               	movwf	45,b	;volatile
 12516                           
 12517                           ; BSR set to: 15
 12518                           ;CANlib.h: 518: TXB2CONbits.TXREQ = 0x01;
 12519  002010  010F               	movlb	15	; () banked
 12520  002012  8720               	bsf	32,3,b	;volatile
 12521                           
 12522                           ; BSR set to: 15
 12523                           ;CANlib.h: 520: return;
 12524  002014  0012               	return	
 12525                           
 12526                           ; BSR set to: 15
 12527                           
 12528                           ; BSR set to: 15
 12529  002016  0012               	return		;funcret
 12530  002018                     __end_of_CANsendMessage:
 12531                           	opt stack 0
 12532                           tblptru	equ	0xFF8
 12533                           tblptrh	equ	0xFF7
 12534                           tblptrl	equ	0xFF6
 12535                           tablat	equ	0xFF5
 12536                           prodh	equ	0xFF4
 12537                           prodl	equ	0xFF3
 12538                           intcon	equ	0xFF2
 12539                           postinc0	equ	0xFEE
 12540                           wreg	equ	0xFE8
 12541                           indf2	equ	0xFDF
 12542                           postinc2	equ	0xFDE
 12543                           postdec2	equ	0xFDD
 12544                           fsr2h	equ	0xFDA
 12545                           fsr2l	equ	0xFD9
 12546                           status	equ	0xFD8
 12547                           
 12548 ;; *************** function _CANisTxReady *****************
 12549 ;; Defined at:
 12550 ;;		line 1154 in file "CANlib.h"
 12551 ;; Parameters:    Size  Location     Type
 12552 ;;		None
 12553 ;; Auto vars:     Size  Location     Type
 12554 ;;		None
 12555 ;; Return value:  Size  Location     Type
 12556 ;;                  1    wreg      unsigned char 
 12557 ;; Registers used:
 12558 ;;		wreg, status,2
 12559 ;; Tracked objects:
 12560 ;;		On entry : 0/0
 12561 ;;		On exit  : 0/0
 12562 ;;		Unchanged: 0/0
 12563 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12564 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12565 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12566 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12567 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12568 ;;Total ram usage:        1 bytes
 12569 ;; Hardware stack levels used:    1
 12570 ;; Hardware stack levels required when called:    2
 12571 ;; This function calls:
 12572 ;;		Nothing
 12573 ;; This function is called by:
 12574 ;;		_main
 12575 ;;		_rampe
 12576 ;;		_send_data
 12577 ;;		_battery_measure
 12578 ;; This function uses a non-reentrant model
 12579 ;;
 12580                           
 12581                           	psect	text38
 12582  004E6A                     __ptext38:
 12583                           	opt stack 0
 12584  004E6A                     _CANisTxReady:
 12585                           	opt stack 27
 12586                           
 12587                           ;CANlib.h: 1156: return (!TXB0CONbits.TXREQ || !TXB1CONbits.TXREQ || !TXB2CONbits.TXREQ)
      +                          ;
 12588                           
 12589                           ; BSR set to: 15
 12590                           ;incstack = 0
 12591  004E6A  0E01               	movlw	1
 12592  004E6C  0100               	movlb	0	; () banked
 12593  004E6E  6F60               	movwf	_CANisTxReady$3005& (0+255),b
 12594                           
 12595                           ; BSR set to: 0
 12596  004E70  010F               	movlb	15	; () banked
 12597  004E72  A740               	btfss	64,3,b	;volatile
 12598  004E74  D009               	goto	l562
 12599                           
 12600                           ; BSR set to: 15
 12601  004E76  010F               	movlb	15	; () banked
 12602  004E78  A730               	btfss	48,3,b	;volatile
 12603  004E7A  D006               	goto	l562
 12604                           
 12605                           ; BSR set to: 15
 12606  004E7C  010F               	movlb	15	; () banked
 12607  004E7E  A720               	btfss	32,3,b	;volatile
 12608  004E80  D003               	goto	l562
 12609                           
 12610                           ; BSR set to: 15
 12611  004E82  0E00               	movlw	0
 12612  004E84  0100               	movlb	0	; () banked
 12613  004E86  6F60               	movwf	_CANisTxReady$3005& (0+255),b
 12614  004E88                     l562:
 12615  004E88  0100               	movlb	0	; () banked
 12616  004E8A  5160               	movf	_CANisTxReady$3005& (0+255),w,b
 12617  004E8C  0012               	return	
 12618                           
 12619                           ; BSR set to: 0
 12620                           
 12621                           ; BSR set to: 0
 12622  004E8E  0012               	return		;funcret
 12623  004E90                     __end_of_CANisTxReady:
 12624                           	opt stack 0
 12625                           tblptru	equ	0xFF8
 12626                           tblptrh	equ	0xFF7
 12627                           tblptrl	equ	0xFF6
 12628                           tablat	equ	0xFF5
 12629                           prodh	equ	0xFF4
 12630                           prodl	equ	0xFF3
 12631                           intcon	equ	0xFF2
 12632                           postinc0	equ	0xFEE
 12633                           wreg	equ	0xFE8
 12634                           indf2	equ	0xFDF
 12635                           postinc2	equ	0xFDE
 12636                           postdec2	equ	0xFDD
 12637                           fsr2h	equ	0xFDA
 12638                           fsr2l	equ	0xFD9
 12639                           status	equ	0xFD8
 12640                           
 12641 ;; *************** function _OpenTimer2 *****************
 12642 ;; Defined at:
 12643 ;;		line 17 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\Timers\t2open.c"
 12644 ;; Parameters:    Size  Location     Type
 12645 ;;  config          1    wreg     unsigned char 
 12646 ;; Auto vars:     Size  Location     Type
 12647 ;;  config          1    0[BANK0 ] unsigned char 
 12648 ;; Return value:  Size  Location     Type
 12649 ;;		None               void
 12650 ;; Registers used:
 12651 ;;		wreg, status,2, status,0
 12652 ;; Tracked objects:
 12653 ;;		On entry : 0/0
 12654 ;;		On exit  : 0/0
 12655 ;;		Unchanged: 0/0
 12656 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12657 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12658 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12659 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12660 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12661 ;;Total ram usage:        1 bytes
 12662 ;; Hardware stack levels used:    1
 12663 ;; Hardware stack levels required when called:    2
 12664 ;; This function calls:
 12665 ;;		Nothing
 12666 ;; This function is called by:
 12667 ;;		_main
 12668 ;; This function uses a non-reentrant model
 12669 ;;
 12670                           
 12671                           	psect	text39
 12672  004E90                     __ptext39:
 12673                           	opt stack 0
 12674  004E90                     _OpenTimer2:
 12675                           	opt stack 28
 12676                           
 12677                           ; BSR set to: 0
 12678                           ;incstack = 0
 12679                           ;OpenTimer2@config stored from wreg
 12680  004E90  0100               	movlb	0	; () banked
 12681  004E92  6F60               	movwf	OpenTimer2@config& (0+255),b
 12682                           
 12683                           ; BSR set to: 0
 12684  004E94  0100               	movlb	0	; () banked
 12685  004E96  5160               	movf	OpenTimer2@config& (0+255),w,b
 12686  004E98  0BFB               	andlw	251
 12687  004E9A  6ECA               	movwf	4042,c	;volatile
 12688                           
 12689                           ; BSR set to: 0
 12690  004E9C  0E00               	movlw	0
 12691  004E9E  6ECC               	movwf	4044,c	;volatile
 12692                           
 12693                           ; BSR set to: 0
 12694  004EA0  929E               	bcf	3998,1,c	;volatile
 12695                           
 12696                           ; BSR set to: 0
 12697  004EA2  0100               	movlb	0	; () banked
 12698  004EA4  AF60               	btfss	OpenTimer2@config& (0+255),7,b
 12699  004EA6  D002               	goto	l804
 12700                           
 12701                           ; BSR set to: 0
 12702  004EA8  829D               	bsf	3997,1,c	;volatile
 12703  004EAA  D001               	goto	l805
 12704  004EAC                     l804:
 12705                           
 12706                           ; BSR set to: 0
 12707  004EAC  929D               	bcf	3997,1,c	;volatile
 12708  004EAE                     l805:
 12709                           
 12710                           ; BSR set to: 0
 12711  004EAE  84CA               	bsf	4042,2,c	;volatile
 12712                           
 12713                           ; BSR set to: 0
 12714  004EB0  0012               	return		;funcret
 12715  004EB2                     __end_of_OpenTimer2:
 12716                           	opt stack 0
 12717                           tblptru	equ	0xFF8
 12718                           tblptrh	equ	0xFF7
 12719                           tblptrl	equ	0xFF6
 12720                           tablat	equ	0xFF5
 12721                           prodh	equ	0xFF4
 12722                           prodl	equ	0xFF3
 12723                           intcon	equ	0xFF2
 12724                           postinc0	equ	0xFEE
 12725                           wreg	equ	0xFE8
 12726                           indf2	equ	0xFDF
 12727                           postinc2	equ	0xFDE
 12728                           postdec2	equ	0xFDD
 12729                           fsr2h	equ	0xFDA
 12730                           fsr2l	equ	0xFD9
 12731                           status	equ	0xFD8
 12732                           
 12733 ;; *************** function _OpenEPWM1 *****************
 12734 ;; Defined at:
 12735 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\PWM\ew1open.c"
 12736 ;; Parameters:    Size  Location     Type
 12737 ;;  period          1    wreg     unsigned char 
 12738 ;; Auto vars:     Size  Location     Type
 12739 ;;  period          1    0[BANK0 ] unsigned char 
 12740 ;; Return value:  Size  Location     Type
 12741 ;;		None               void
 12742 ;; Registers used:
 12743 ;;		wreg, status,2
 12744 ;; Tracked objects:
 12745 ;;		On entry : 0/0
 12746 ;;		On exit  : 0/0
 12747 ;;		Unchanged: 0/0
 12748 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12749 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12750 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12751 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12752 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12753 ;;Total ram usage:        1 bytes
 12754 ;; Hardware stack levels used:    1
 12755 ;; Hardware stack levels required when called:    2
 12756 ;; This function calls:
 12757 ;;		Nothing
 12758 ;; This function is called by:
 12759 ;;		_main
 12760 ;; This function uses a non-reentrant model
 12761 ;;
 12762                           
 12763                           	psect	text40
 12764  004EE2                     __ptext40:
 12765                           	opt stack 0
 12766  004EE2                     _OpenEPWM1:
 12767                           	opt stack 28
 12768                           
 12769                           ; BSR set to: 0
 12770                           ;incstack = 0
 12771                           ;OpenEPWM1@period stored from wreg
 12772  004EE2  0100               	movlb	0	; () banked
 12773  004EE4  6F60               	movwf	OpenEPWM1@period& (0+255),b
 12774                           
 12775                           ; BSR set to: 0
 12776  004EE6  0E0C               	movlw	12
 12777  004EE8  6EBA               	movwf	4026,c	;volatile
 12778                           
 12779                           ; BSR set to: 0
 12780  004EEA  94CA               	bcf	4042,2,c	;volatile
 12781                           
 12782                           ; BSR set to: 0
 12783  004EEC  C060  FFCB         	movff	OpenEPWM1@period,4043	;volatile
 12784                           
 12785                           ; BSR set to: 0
 12786  004EF0  84CA               	bsf	4042,2,c	;volatile
 12787                           
 12788                           ; BSR set to: 0
 12789  004EF2  0012               	return		;funcret
 12790  004EF4                     __end_of_OpenEPWM1:
 12791                           	opt stack 0
 12792                           tblptru	equ	0xFF8
 12793                           tblptrh	equ	0xFF7
 12794                           tblptrl	equ	0xFF6
 12795                           tablat	equ	0xFF5
 12796                           prodh	equ	0xFF4
 12797                           prodl	equ	0xFF3
 12798                           intcon	equ	0xFF2
 12799                           postinc0	equ	0xFEE
 12800                           wreg	equ	0xFE8
 12801                           indf2	equ	0xFDF
 12802                           postinc2	equ	0xFDE
 12803                           postdec2	equ	0xFDD
 12804                           fsr2h	equ	0xFDA
 12805                           fsr2l	equ	0xFD9
 12806                           status	equ	0xFD8
 12807                           
 12808 ;; *************** function _ISR_bassa *****************
 12809 ;; Defined at:
 12810 ;;		line 96 in file "motore.c"
 12811 ;; Parameters:    Size  Location     Type
 12812 ;;		None
 12813 ;; Auto vars:     Size  Location     Type
 12814 ;;  i               1   33[COMRAM] unsigned char 
 12815 ;; Return value:  Size  Location     Type
 12816 ;;		None               void
 12817 ;; Registers used:
 12818 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12819 ;; Tracked objects:
 12820 ;;		On entry : 0/0
 12821 ;;		On exit  : 0/0
 12822 ;;		Unchanged: 0/0
 12823 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12824 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12825 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12826 ;;      Temps:         21       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12827 ;;      Totals:        22       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12828 ;;Total ram usage:       22 bytes
 12829 ;; Hardware stack levels used:    1
 12830 ;; Hardware stack levels required when called:    1
 12831 ;; This function calls:
 12832 ;;		_CANisRxReady
 12833 ;;		_CANreceiveMessage
 12834 ;; This function is called by:
 12835 ;;		Interrupt level 1
 12836 ;; This function uses a non-reentrant model
 12837 ;;
 12838                           
 12839                           	psect	intcodelo
 12840  000018                     __pintcodelo:
 12841                           	opt stack 0
 12842  000018                     _ISR_bassa:
 12843                           	opt stack 23
 12844                           
 12845                           ; BSR set to: 0
 12846                           ;incstack = 0
 12847  000018  CFD8 F011          	movff	status,??_ISR_bassa+4
 12848  00001C  CFE8 F012          	movff	wreg,??_ISR_bassa+5
 12849  000020  CFE0 F013          	movff	bsr,??_ISR_bassa+6
 12850  000024  CFFA F014          	movff	pclath,??_ISR_bassa+7
 12851  000028  CFFB F015          	movff	pclatu,??_ISR_bassa+8
 12852  00002C  CFE9 F016          	movff	fsr0l,??_ISR_bassa+9
 12853  000030  CFEA F017          	movff	fsr0h,??_ISR_bassa+10
 12854  000034  CFE1 F018          	movff	fsr1l,??_ISR_bassa+11
 12855  000038  CFE2 F019          	movff	fsr1h,??_ISR_bassa+12
 12856  00003C  CFD9 F01A          	movff	fsr2l,??_ISR_bassa+13
 12857  000040  CFDA F01B          	movff	fsr2h,??_ISR_bassa+14
 12858  000044  CFF3 F01C          	movff	prodl,??_ISR_bassa+15
 12859  000048  CFF4 F01D          	movff	prodh,??_ISR_bassa+16
 12860  00004C  CFF6 F01E          	movff	tblptrl,??_ISR_bassa+17
 12861  000050  CFF7 F01F          	movff	tblptrh,??_ISR_bassa+18
 12862  000054  CFF8 F020          	movff	tblptru,??_ISR_bassa+19
 12863  000058  CFF5 F021          	movff	tablat,??_ISR_bassa+20
 12864                           
 12865                           ;motore.c: 97: if ((PIR3bits.RXB0IF == 1) || (PIR3bits.RXB1IF == 1)) {
 12866  00005C  B0A4               	btfsc	4004,0,c	;volatile
 12867  00005E  D002               	goto	i1l664
 12868  000060  A2A4               	btfss	4004,1,c	;volatile
 12869  000062  D05D               	goto	i1l5195
 12870  000064                     i1l664:
 12871                           
 12872                           ;motore.c: 98: if (PIR3bits.RXB0IF == 1) {
 12873  000064  A0A4               	btfss	4004,0,c	;volatile
 12874  000066  D002               	goto	i1l5161
 12875                           
 12876                           ;motore.c: 99: PORTCbits.RC1 = 1;
 12877  000068  8282               	bsf	3970,1,c	;volatile
 12878  00006A  D000               	goto	i1l5161
 12879  00006C                     i1l5161:
 12880                           
 12881                           ;motore.c: 100: }
 12882                           ;motore.c: 101: if (CANisRxReady()) {
 12883  00006C  EC65  F027         	call	_CANisRxReady	;wreg free
 12884  000070  0900               	iorlw	0
 12885  000072  B4D8               	btfsc	status,2,c
 12886  000074  D051               	goto	i1l5191
 12887                           
 12888                           ;motore.c: 102: CANreceiveMessage(&msg);
 12889  000076  0EE6               	movlw	low _msg
 12890  000078  6E01               	movwf	CANreceiveMessage@msg,c
 12891  00007A  0E00               	movlw	high _msg
 12892  00007C  6E02               	movwf	CANreceiveMessage@msg+1,c
 12893  00007E  ECEC  F012         	call	_CANreceiveMessage	;wreg free
 12894                           
 12895                           ;motore.c: 103: remote_frame = msg.RTR;
 12896  000082  0100               	movlb	0	; () banked
 12897  000084  B1F4               	btfsc	(_msg+14)& (0+255),0,b
 12898  000086  D002               	bra	i1u624_25
 12899  000088  9E3F               	bcf	_remote_frame/(0+8),_remote_frame& (0+7),c	;volatile
 12900  00008A  D001               	bra	i1u624_26
 12901  00008C                     i1u624_25:
 12902  00008C  8E3F               	bsf	_remote_frame/(0+8),_remote_frame& (0+7),c	;volatile
 12903  00008E                     i1u624_26:
 12904                           
 12905                           ;motore.c: 104: id = msg.identifier;
 12906  00008E  C0E6  F023         	movff	_msg,_id	;volatile
 12907  000092  C0E7  F024         	movff	_msg+1,_id+1	;volatile
 12908  000096  C0E8  F025         	movff	_msg+2,_id+2	;volatile
 12909  00009A  C0E9  F026         	movff	_msg+3,_id+3	;volatile
 12910                           
 12911                           ;motore.c: 105: for (char i = 0; i < 8; i++) {
 12912  00009E  0E00               	movlw	0
 12913  0000A0  6E22               	movwf	ISR_bassa@i,c
 12914  0000A2                     i1l5171:
 12915  0000A2  0E07               	movlw	7
 12916  0000A4  6422               	cpfsgt	ISR_bassa@i,c
 12917  0000A6  D001               	goto	i1l5175
 12918  0000A8  D014               	goto	i1l5181
 12919  0000AA                     i1l5175:
 12920                           
 12921                           ;motore.c: 106: data_array[i] = msg.data[i];
 12922  0000AA  5022               	movf	ISR_bassa@i,w,c
 12923  0000AC  0D01               	mullw	1
 12924  0000AE  0EEA               	movlw	low (_msg+4)
 12925  0000B0  24F3               	addwf	prodl,w,c
 12926  0000B2  6ED9               	movwf	fsr2l,c
 12927  0000B4  0E00               	movlw	high (_msg+4)
 12928  0000B6  20F4               	addwfc	prodh,w,c
 12929  0000B8  6EDA               	movwf	fsr2h,c
 12930  0000BA  5022               	movf	ISR_bassa@i,w,c
 12931  0000BC  0D01               	mullw	1
 12932  0000BE  0E37               	movlw	low _data_array
 12933  0000C0  24F3               	addwf	prodl,w,c
 12934  0000C2  6EE1               	movwf	fsr1l,c
 12935  0000C4  0E00               	movlw	high _data_array
 12936  0000C6  20F4               	addwfc	prodh,w,c
 12937  0000C8  6EE2               	movwf	fsr1h,c
 12938  0000CA  CFDF FFE7          	movff	indf2,indf1
 12939  0000CE  2A22               	incf	ISR_bassa@i,f,c
 12940  0000D0  D7E8               	goto	i1l5171
 12941  0000D2                     i1l5181:
 12942                           
 12943                           ;motore.c: 107: }
 12944                           ;motore.c: 108: if (id == 0b00000000101) {
 12945  0000D2  0E05               	movlw	5
 12946  0000D4  1823               	xorwf	_id,w,c	;volatile
 12947  0000D6  1024               	iorwf	_id+1,w,c	;volatile
 12948  0000D8  1025               	iorwf	_id+2,w,c	;volatile
 12949  0000DA  1026               	iorwf	_id+3,w,c	;volatile
 12950  0000DC  A4D8               	btfss	status,2,c
 12951  0000DE  D01A               	goto	i1l5189
 12952                           
 12953                           ;motore.c: 109: requestSpeed = data_array[1];
 12954  0000E0  5038               	movf	_data_array+1,w,c
 12955  0000E2  6E2B               	movwf	_requestSpeed,c	;volatile
 12956  0000E4  6A2C               	clrf	_requestSpeed+1,c	;volatile
 12957  0000E6  6A2D               	clrf	_requestSpeed+2,c	;volatile
 12958  0000E8  6A2E               	clrf	_requestSpeed+3,c	;volatile
 12959                           
 12960                           ;motore.c: 110: requestSpeed = ((requestSpeed << 8) | data_array[0]);
 12961  0000EA  5037               	movf	_data_array,w,c
 12962  0000EC  C02B  F00E         	movff	_requestSpeed,??_ISR_bassa+1	;volatile
 12963  0000F0  C02C  F00F         	movff	_requestSpeed+1,??_ISR_bassa+2	;volatile
 12964  0000F4  C02D  F010         	movff	_requestSpeed+2,??_ISR_bassa+3	;volatile
 12965  0000F8  6A0D               	clrf	??_ISR_bassa& (0+255),c
 12966  0000FA  100D               	iorwf	??_ISR_bassa,w,c
 12967  0000FC  6E2B               	movwf	_requestSpeed,c	;volatile
 12968  0000FE  500E               	movf	??_ISR_bassa+1,w,c
 12969  000100  6E2C               	movwf	_requestSpeed+1,c	;volatile
 12970  000102  500F               	movf	??_ISR_bassa+2,w,c
 12971  000104  6E2D               	movwf	_requestSpeed+2,c	;volatile
 12972  000106  5010               	movf	??_ISR_bassa+3,w,c
 12973  000108  6E2E               	movwf	_requestSpeed+3,c	;volatile
 12974                           
 12975                           ;motore.c: 111: dir = data_array[2];
 12976  00010A  C039  F0FD         	movff	_data_array+2,_dir	;volatile
 12977  00010E  0100               	movlb	0	; () banked
 12978  000110  6BFE               	clrf	(_dir+1)& (0+255),b	;volatile
 12979  000112  D000               	goto	i1l5189
 12980  000114                     i1l5189:
 12981                           
 12982                           ;motore.c: 112: }
 12983                           ;motore.c: 113: new_message = 1;
 12984  000114  8C3F               	bsf	_new_message/(0+8),_new_message& (0+7),c	;volatile
 12985  000116  D000               	goto	i1l5191
 12986  000118                     i1l5191:
 12987                           
 12988                           ;motore.c: 114: }
 12989                           ;motore.c: 115: PIR3bits.RXB0IF = 0;
 12990  000118  90A4               	bcf	4004,0,c	;volatile
 12991                           
 12992                           ;motore.c: 116: PIR3bits.RXB1IF = 0;
 12993  00011A  92A4               	bcf	4004,1,c	;volatile
 12994  00011C  D000               	goto	i1l5195
 12995  00011E                     i1l5195:
 12996                           
 12997                           ;motore.c: 117: }
 12998                           ;motore.c: 119: if (PIR2bits.TMR3IF) {
 12999  00011E  A2A1               	btfss	4001,1,c	;volatile
 13000  000120  D00D               	goto	i1l671
 13001                           
 13002                           ;motore.c: 120: timeCounter++;
 13003  000122  0E01               	movlw	1
 13004  000124  0100               	movlb	0	; () banked
 13005  000126  27D7               	addwf	_timeCounter& (0+255),f,b	;volatile
 13006  000128  0E00               	movlw	0
 13007  00012A  23D8               	addwfc	(_timeCounter+1)& (0+255),f,b	;volatile
 13008  00012C  23D9               	addwfc	(_timeCounter+2)& (0+255),f,b	;volatile
 13009  00012E  23DA               	addwfc	(_timeCounter+3)& (0+255),f,b	;volatile
 13010                           
 13011                           ; BSR set to: 0
 13012                           ;motore.c: 121: TMR3H = 0x63;
 13013  000130  0E63               	movlw	99
 13014  000132  6EB3               	movwf	4019,c	;volatile
 13015                           
 13016                           ; BSR set to: 0
 13017                           ;motore.c: 122: TMR3L = 0xC0;
 13018  000134  0EC0               	movlw	192
 13019  000136  6EB2               	movwf	4018,c	;volatile
 13020                           
 13021                           ; BSR set to: 0
 13022                           ;motore.c: 123: PIR2bits.TMR3IF = 0;
 13023  000138  92A1               	bcf	4001,1,c	;volatile
 13024  00013A  D000               	goto	i1l671
 13025  00013C                     i1l671:
 13026  00013C  C021  FFF5         	movff	??_ISR_bassa+20,tablat
 13027  000140  C020  FFF8         	movff	??_ISR_bassa+19,tblptru
 13028  000144  C01F  FFF7         	movff	??_ISR_bassa+18,tblptrh
 13029  000148  C01E  FFF6         	movff	??_ISR_bassa+17,tblptrl
 13030  00014C  C01D  FFF4         	movff	??_ISR_bassa+16,prodh
 13031  000150  C01C  FFF3         	movff	??_ISR_bassa+15,prodl
 13032  000154  C01B  FFDA         	movff	??_ISR_bassa+14,fsr2h
 13033  000158  C01A  FFD9         	movff	??_ISR_bassa+13,fsr2l
 13034  00015C  C019  FFE2         	movff	??_ISR_bassa+12,fsr1h
 13035  000160  C018  FFE1         	movff	??_ISR_bassa+11,fsr1l
 13036  000164  C017  FFEA         	movff	??_ISR_bassa+10,fsr0h
 13037  000168  C016  FFE9         	movff	??_ISR_bassa+9,fsr0l
 13038  00016C  C015  FFFB         	movff	??_ISR_bassa+8,pclatu
 13039  000170  C014  FFFA         	movff	??_ISR_bassa+7,pclath
 13040  000174  C013  FFE0         	movff	??_ISR_bassa+6,bsr
 13041  000178  C012  FFE8         	movff	??_ISR_bassa+5,wreg
 13042  00017C  C011  FFD8         	movff	??_ISR_bassa+4,status
 13043  000180  0010               	retfie	
 13044  000182                     __end_of_ISR_bassa:
 13045                           	opt stack 0
 13046                           pclatu	equ	0xFFB
 13047                           pclath	equ	0xFFA
 13048                           tblptru	equ	0xFF8
 13049                           tblptrh	equ	0xFF7
 13050                           tblptrl	equ	0xFF6
 13051                           tablat	equ	0xFF5
 13052                           prodh	equ	0xFF4
 13053                           prodl	equ	0xFF3
 13054                           intcon	equ	0xFF2
 13055                           postinc0	equ	0xFEE
 13056                           fsr0h	equ	0xFEA
 13057                           fsr0l	equ	0xFE9
 13058                           wreg	equ	0xFE8
 13059                           indf1	equ	0xFE7
 13060                           fsr1h	equ	0xFE2
 13061                           fsr1l	equ	0xFE1
 13062                           bsr	equ	0xFE0
 13063                           indf2	equ	0xFDF
 13064                           postinc2	equ	0xFDE
 13065                           postdec2	equ	0xFDD
 13066                           fsr2h	equ	0xFDA
 13067                           fsr2l	equ	0xFD9
 13068                           status	equ	0xFD8
 13069                           
 13070 ;; *************** function _CANreceiveMessage *****************
 13071 ;; Defined at:
 13072 ;;		line 528 in file "CANlib.h"
 13073 ;; Parameters:    Size  Location     Type
 13074 ;;  msg             2    0[COMRAM] PTR struct .
 13075 ;;		 -> msg(15), 
 13076 ;; Auto vars:     Size  Location     Type
 13077 ;;  tamp            1   11[COMRAM] unsigned char 
 13078 ;;  error           1   10[COMRAM] unsigned char 
 13079 ;; Return value:  Size  Location     Type
 13080 ;;                  1    wreg      unsigned char 
 13081 ;; Registers used:
 13082 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 13083 ;; Tracked objects:
 13084 ;;		On entry : 0/0
 13085 ;;		On exit  : 0/0
 13086 ;;		Unchanged: 0/0
 13087 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13088 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13089 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13090 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13091 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13092 ;;Total ram usage:       12 bytes
 13093 ;; Hardware stack levels used:    1
 13094 ;; This function calls:
 13095 ;;		Nothing
 13096 ;; This function is called by:
 13097 ;;		_ISR_bassa
 13098 ;; This function uses a non-reentrant model
 13099 ;;
 13100                           
 13101                           	psect	text42
 13102  0025D8                     __ptext42:
 13103                           	opt stack 0
 13104  0025D8                     _CANreceiveMessage:
 13105                           	opt stack 23
 13106                           
 13107                           ;CANlib.h: 530: BYTE tamp;
 13108                           ;CANlib.h: 531: BYTE error = 0;
 13109                           
 13110                           ;incstack = 0
 13111  0025D8  0E00               	movlw	0
 13112  0025DA  6E0B               	movwf	CANreceiveMessage@error,c
 13113                           
 13114                           ;CANlib.h: 533: if (COMSTATbits.RXB0OVFL == 0x01)
 13115  0025DC  AE74               	btfss	3956,7,c	;volatile
 13116  0025DE  D002               	goto	i1l4761
 13117                           
 13118                           ;CANlib.h: 534: error |= CAN_RX_BUFFER_1_OVFL;
 13119  0025E0  800B               	bsf	CANreceiveMessage@error,0,c
 13120  0025E2  D000               	goto	i1l4761
 13121  0025E4                     i1l4761:
 13122                           
 13123                           ;CANlib.h: 536: if (COMSTATbits.RXB1OVFL == 0x01)
 13124  0025E4  AC74               	btfss	3956,6,c	;volatile
 13125  0025E6  D002               	goto	i1l4765
 13126                           
 13127                           ;CANlib.h: 537: error |= CAN_RX_BUFFER_2_OVFL;
 13128  0025E8  820B               	bsf	CANreceiveMessage@error,1,c
 13129  0025EA  D000               	goto	i1l4765
 13130  0025EC                     i1l4765:
 13131                           
 13132                           ;CANlib.h: 540: if (RXB1CONbits.RXFUL ==0x01)
 13133  0025EC  010F               	movlb	15	; () banked
 13134  0025EE  AF50               	btfss	80,7,b	;volatile
 13135  0025F0  D149               	goto	i1l416
 13136                           
 13137                           ; BSR set to: 15
 13138                           ;CANlib.h: 541: {
 13139                           ;CANlib.h: 542: msg->identifier = 0;
 13140  0025F2  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 13141  0025F6  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 13142  0025FA  6ADE               	clrf	postinc2,c
 13143  0025FC  6ADE               	clrf	postinc2,c
 13144  0025FE  6ADE               	clrf	postinc2,c
 13145  002600  6ADD               	clrf	postdec2,c
 13146                           
 13147                           ; BSR set to: 15
 13148                           ;CANlib.h: 543: msg->data[0] =RXB1D0;
 13149  002602  EE20 F004          	lfsr	2,4
 13150  002606  5001               	movf	CANreceiveMessage@msg,w,c
 13151  002608  26D9               	addwf	fsr2l,f,c
 13152  00260A  5002               	movf	CANreceiveMessage@msg+1,w,c
 13153  00260C  22DA               	addwfc	fsr2h,f,c
 13154  00260E  CF56 FFDF          	movff	3926,indf2	;volatile
 13155                           
 13156                           ; BSR set to: 15
 13157                           ;CANlib.h: 544: msg->data[1] =RXB1D1;
 13158  002612  EE20 F005          	lfsr	2,5
 13159  002616  5001               	movf	CANreceiveMessage@msg,w,c
 13160  002618  26D9               	addwf	fsr2l,f,c
 13161  00261A  5002               	movf	CANreceiveMessage@msg+1,w,c
 13162  00261C  22DA               	addwfc	fsr2h,f,c
 13163  00261E  CF57 FFDF          	movff	3927,indf2	;volatile
 13164                           
 13165                           ; BSR set to: 15
 13166                           ;CANlib.h: 545: msg->data[2] =RXB1D2;
 13167  002622  EE20 F006          	lfsr	2,6
 13168  002626  5001               	movf	CANreceiveMessage@msg,w,c
 13169  002628  26D9               	addwf	fsr2l,f,c
 13170  00262A  5002               	movf	CANreceiveMessage@msg+1,w,c
 13171  00262C  22DA               	addwfc	fsr2h,f,c
 13172  00262E  CF58 FFDF          	movff	3928,indf2	;volatile
 13173                           
 13174                           ; BSR set to: 15
 13175                           ;CANlib.h: 546: msg->data[3] =RXB1D3;
 13176  002632  EE20 F007          	lfsr	2,7
 13177  002636  5001               	movf	CANreceiveMessage@msg,w,c
 13178  002638  26D9               	addwf	fsr2l,f,c
 13179  00263A  5002               	movf	CANreceiveMessage@msg+1,w,c
 13180  00263C  22DA               	addwfc	fsr2h,f,c
 13181  00263E  CF59 FFDF          	movff	3929,indf2	;volatile
 13182                           
 13183                           ; BSR set to: 15
 13184                           ;CANlib.h: 547: msg->data[4] =RXB1D4;
 13185  002642  EE20 F008          	lfsr	2,8
 13186  002646  5001               	movf	CANreceiveMessage@msg,w,c
 13187  002648  26D9               	addwf	fsr2l,f,c
 13188  00264A  5002               	movf	CANreceiveMessage@msg+1,w,c
 13189  00264C  22DA               	addwfc	fsr2h,f,c
 13190  00264E  CF5A FFDF          	movff	3930,indf2	;volatile
 13191                           
 13192                           ; BSR set to: 15
 13193                           ;CANlib.h: 548: msg->data[5] =RXB1D5;
 13194  002652  EE20 F009          	lfsr	2,9
 13195  002656  5001               	movf	CANreceiveMessage@msg,w,c
 13196  002658  26D9               	addwf	fsr2l,f,c
 13197  00265A  5002               	movf	CANreceiveMessage@msg+1,w,c
 13198  00265C  22DA               	addwfc	fsr2h,f,c
 13199  00265E  CF5B FFDF          	movff	3931,indf2	;volatile
 13200                           
 13201                           ; BSR set to: 15
 13202                           ;CANlib.h: 549: msg->data[6] =RXB1D6;
 13203  002662  EE20 F00A          	lfsr	2,10
 13204  002666  5001               	movf	CANreceiveMessage@msg,w,c
 13205  002668  26D9               	addwf	fsr2l,f,c
 13206  00266A  5002               	movf	CANreceiveMessage@msg+1,w,c
 13207  00266C  22DA               	addwfc	fsr2h,f,c
 13208  00266E  CF5C FFDF          	movff	3932,indf2	;volatile
 13209                           
 13210                           ; BSR set to: 15
 13211                           ;CANlib.h: 550: msg->data[7] =RXB1D7;
 13212  002672  EE20 F00B          	lfsr	2,11
 13213  002676  5001               	movf	CANreceiveMessage@msg,w,c
 13214  002678  26D9               	addwf	fsr2l,f,c
 13215  00267A  5002               	movf	CANreceiveMessage@msg+1,w,c
 13216  00267C  22DA               	addwfc	fsr2h,f,c
 13217  00267E  CF5D FFDF          	movff	3933,indf2	;volatile
 13218                           
 13219                           ; BSR set to: 15
 13220                           ;CANlib.h: 552: msg->RTR = RXB1DLCbits.RXRTR;
 13221  002682  EE20 F00E          	lfsr	2,14
 13222  002686  5001               	movf	CANreceiveMessage@msg,w,c
 13223  002688  26D9               	addwf	fsr2l,f,c
 13224  00268A  5002               	movf	CANreceiveMessage@msg+1,w,c
 13225  00268C  22DA               	addwfc	fsr2h,f,c
 13226  00268E  010F               	movlb	15	; () banked
 13227  002690  AD55               	btfss	85,6,b	;volatile
 13228  002692  D002               	goto	i1u566_20
 13229  002694  0E01               	movlw	1
 13230  002696  D001               	goto	i1u566_26
 13231  002698                     i1u566_20:
 13232  002698  0E00               	movlw	0
 13233  00269A                     i1u566_26:
 13234  00269A  6EDF               	movwf	indf2,c
 13235                           
 13236                           ; BSR set to: 15
 13237                           ;CANlib.h: 554: msg->length = RXB1DLC & 0x0F;
 13238  00269C  EE20 F00D          	lfsr	2,13
 13239  0026A0  5001               	movf	CANreceiveMessage@msg,w,c
 13240  0026A2  26D9               	addwf	fsr2l,f,c
 13241  0026A4  5002               	movf	CANreceiveMessage@msg+1,w,c
 13242  0026A6  22DA               	addwfc	fsr2h,f,c
 13243  0026A8  010F               	movlb	15	; () banked
 13244  0026AA  5155               	movf	85,w,b	;volatile
 13245  0026AC  0B0F               	andlw	15
 13246  0026AE  6EDF               	movwf	indf2,c
 13247                           
 13248                           ; BSR set to: 15
 13249                           ;CANlib.h: 556: msg->type = RXB1SIDLbits.EXID;
 13250  0026B0  EE20 F00C          	lfsr	2,12
 13251  0026B4  5001               	movf	CANreceiveMessage@msg,w,c
 13252  0026B6  26D9               	addwf	fsr2l,f,c
 13253  0026B8  5002               	movf	CANreceiveMessage@msg+1,w,c
 13254  0026BA  22DA               	addwfc	fsr2h,f,c
 13255  0026BC  010F               	movlb	15	; () banked
 13256  0026BE  A752               	btfss	82,3,b	;volatile
 13257  0026C0  D002               	goto	i1u567_20
 13258  0026C2  0E01               	movlw	1
 13259  0026C4  D001               	goto	i1u567_26
 13260  0026C6                     i1u567_20:
 13261  0026C6  0E00               	movlw	0
 13262  0026C8                     i1u567_26:
 13263  0026C8  6EDF               	movwf	indf2,c
 13264                           
 13265                           ; BSR set to: 15
 13266                           ;CANlib.h: 558: if (RXB1SIDLbits.EXID == 0)
 13267  0026CA  010F               	movlb	15	; () banked
 13268  0026CC  B752               	btfsc	82,3,b	;volatile
 13269  0026CE  D044               	goto	i1l4799
 13270                           
 13271                           ; BSR set to: 15
 13272                           ;CANlib.h: 559: {
 13273                           ;CANlib.h: 560: msg->identifier = ((unsigned long)RXB1SIDH)<< 3;
 13274  0026D0  CF51 F003          	movff	3921,??_CANreceiveMessage	;volatile
 13275  0026D4  6A04               	clrf	(??_CANreceiveMessage+1)& (0+255),c
 13276  0026D6  6A05               	clrf	(??_CANreceiveMessage+2)& (0+255),c
 13277  0026D8  6A06               	clrf	(??_CANreceiveMessage+3)& (0+255),c
 13278  0026DA  0E03               	movlw	3
 13279  0026DC                     i1u569_25:
 13280  0026DC  90D8               	bcf	status,0,c
 13281  0026DE  3603               	rlcf	??_CANreceiveMessage,f,c
 13282  0026E0  3604               	rlcf	??_CANreceiveMessage+1,f,c
 13283  0026E2  3605               	rlcf	??_CANreceiveMessage+2,f,c
 13284  0026E4  3606               	rlcf	??_CANreceiveMessage+3,f,c
 13285  0026E6  2EE8               	decfsz	wreg,f,c
 13286  0026E8  D7F9               	goto	i1u569_25
 13287  0026EA  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 13288  0026EE  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 13289  0026F2  C003  FFDE         	movff	??_CANreceiveMessage,postinc2
 13290  0026F6  C004  FFDE         	movff	??_CANreceiveMessage+1,postinc2
 13291  0026FA  C005  FFDE         	movff	??_CANreceiveMessage+2,postinc2
 13292  0026FE  C006  FFDE         	movff	??_CANreceiveMessage+3,postinc2
 13293                           
 13294                           ; BSR set to: 15
 13295                           ;CANlib.h: 561: tamp = (RXB1SIDL >> 5 ) & 0x07;
 13296  002702  010F               	movlb	15	; () banked
 13297  002704  3952               	swapf	82,w,b	;volatile
 13298  002706  42E8               	rrncf	wreg,f,c
 13299  002708  0B07               	andlw	7
 13300  00270A  0B07               	andlw	7
 13301  00270C  6E0C               	movwf	CANreceiveMessage@tamp,c
 13302                           
 13303                           ; BSR set to: 15
 13304                           ;CANlib.h: 562: msg->identifier = msg->identifier + tamp;
 13305  00270E  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 13306  002712  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 13307  002716  CFDE F003          	movff	postinc2,??_CANreceiveMessage
 13308  00271A  CFDE F004          	movff	postinc2,??_CANreceiveMessage+1
 13309  00271E  CFDE F005          	movff	postinc2,??_CANreceiveMessage+2
 13310  002722  CFDE F006          	movff	postinc2,??_CANreceiveMessage+3
 13311  002726  500C               	movf	CANreceiveMessage@tamp,w,c
 13312  002728  2403               	addwf	??_CANreceiveMessage,w,c
 13313  00272A  6E07               	movwf	(??_CANreceiveMessage+4)& (0+255),c
 13314  00272C  0E00               	movlw	0
 13315  00272E  2004               	addwfc	??_CANreceiveMessage+1,w,c
 13316  002730  6E08               	movwf	(??_CANreceiveMessage+5)& (0+255),c
 13317  002732  0E00               	movlw	0
 13318  002734  2005               	addwfc	??_CANreceiveMessage+2,w,c
 13319  002736  6E09               	movwf	(??_CANreceiveMessage+6)& (0+255),c
 13320  002738  0E00               	movlw	0
 13321  00273A  2006               	addwfc	??_CANreceiveMessage+3,w,c
 13322  00273C  6E0A               	movwf	(??_CANreceiveMessage+7)& (0+255),c
 13323  00273E  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 13324  002742  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 13325  002746  C007  FFDE         	movff	??_CANreceiveMessage+4,postinc2
 13326  00274A  C008  FFDE         	movff	??_CANreceiveMessage+5,postinc2
 13327  00274E  C009  FFDE         	movff	??_CANreceiveMessage+6,postinc2
 13328  002752  C00A  FFDE         	movff	??_CANreceiveMessage+7,postinc2
 13329                           
 13330                           ;CANlib.h: 563: }
 13331  002756  D093               	goto	i1l4825
 13332  002758                     i1l4799:
 13333                           
 13334                           ; BSR set to: 15
 13335                           ;CANlib.h: 564: else
 13336                           ;CANlib.h: 565: {
 13337                           ;CANlib.h: 566: msg->identifier = (unsigned long) RXB1EIDL;
 13338  002758  CF54 F003          	movff	3924,??_CANreceiveMessage	;volatile
 13339  00275C  6A04               	clrf	(??_CANreceiveMessage+1)& (0+255),c
 13340  00275E  6A05               	clrf	(??_CANreceiveMessage+2)& (0+255),c
 13341  002760  6A06               	clrf	(??_CANreceiveMessage+3)& (0+255),c
 13342  002762  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 13343  002766  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 13344  00276A  C003  FFDE         	movff	??_CANreceiveMessage,postinc2
 13345  00276E  C004  FFDE         	movff	??_CANreceiveMessage+1,postinc2
 13346  002772  C005  FFDE         	movff	??_CANreceiveMessage+2,postinc2
 13347  002776  C006  FFDE         	movff	??_CANreceiveMessage+3,postinc2
 13348                           
 13349                           ; BSR set to: 15
 13350                           ;CANlib.h: 567: msg->identifier += ((unsigned long) RXB1EIDH) << 8;
 13351  00277A  CF53 F003          	movff	3923,??_CANreceiveMessage	;volatile
 13352  00277E  6A04               	clrf	(??_CANreceiveMessage+1)& (0+255),c
 13353  002780  6A05               	clrf	(??_CANreceiveMessage+2)& (0+255),c
 13354  002782  6A06               	clrf	(??_CANreceiveMessage+3)& (0+255),c
 13355  002784  C005  F006         	movff	??_CANreceiveMessage+2,??_CANreceiveMessage+3
 13356  002788  C004  F005         	movff	??_CANreceiveMessage+1,??_CANreceiveMessage+2
 13357  00278C  C003  F004         	movff	??_CANreceiveMessage,??_CANreceiveMessage+1
 13358  002790  6A03               	clrf	??_CANreceiveMessage,c
 13359  002792  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 13360  002796  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 13361  00279A  5003               	movf	??_CANreceiveMessage,w,c
 13362  00279C  26DE               	addwf	postinc2,f,c
 13363  00279E  5004               	movf	??_CANreceiveMessage+1,w,c
 13364  0027A0  22DE               	addwfc	postinc2,f,c
 13365  0027A2  5005               	movf	??_CANreceiveMessage+2,w,c
 13366  0027A4  22DE               	addwfc	postinc2,f,c
 13367  0027A6  5006               	movf	??_CANreceiveMessage+3,w,c
 13368  0027A8  22DE               	addwfc	postinc2,f,c
 13369                           
 13370                           ; BSR set to: 15
 13371                           ;CANlib.h: 569: if (RXB1SIDLbits.EID16)
 13372  0027AA  010F               	movlb	15	; () banked
 13373  0027AC  A152               	btfss	82,0,b	;volatile
 13374  0027AE  D00D               	goto	i1l4807
 13375                           
 13376                           ; BSR set to: 15
 13377                           ;CANlib.h: 570: msg->identifier |= 0x00010000;
 13378  0027B0  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 13379  0027B4  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 13380  0027B8  0E00               	movlw	0
 13381  0027BA  12DE               	iorwf	postinc2,f,c
 13382  0027BC  0E00               	movlw	0
 13383  0027BE  12DE               	iorwf	postinc2,f,c
 13384  0027C0  0E01               	movlw	1
 13385  0027C2  12DE               	iorwf	postinc2,f,c
 13386  0027C4  0E00               	movlw	0
 13387  0027C6  12DE               	iorwf	postinc2,f,c
 13388  0027C8  D000               	goto	i1l4807
 13389  0027CA                     i1l4807:
 13390                           
 13391                           ; BSR set to: 15
 13392                           ;CANlib.h: 571: if (RXB1SIDLbits.EID17)
 13393  0027CA  010F               	movlb	15	; () banked
 13394  0027CC  A352               	btfss	82,1,b	;volatile
 13395  0027CE  D00D               	goto	i1l4811
 13396                           
 13397                           ; BSR set to: 15
 13398                           ;CANlib.h: 572: msg->identifier |= 0x00020000;
 13399  0027D0  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 13400  0027D4  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 13401  0027D8  0E00               	movlw	0
 13402  0027DA  12DE               	iorwf	postinc2,f,c
 13403  0027DC  0E00               	movlw	0
 13404  0027DE  12DE               	iorwf	postinc2,f,c
 13405  0027E0  0E02               	movlw	2
 13406  0027E2  12DE               	iorwf	postinc2,f,c
 13407  0027E4  0E00               	movlw	0
 13408  0027E6  12DE               	iorwf	postinc2,f,c
 13409  0027E8  D000               	goto	i1l4811
 13410  0027EA                     i1l4811:
 13411                           
 13412                           ; BSR set to: 15
 13413                           ;CANlib.h: 573: if (RXB1SIDLbits.SID0)
 13414  0027EA  010F               	movlb	15	; () banked
 13415  0027EC  AB52               	btfss	82,5,b	;volatile
 13416  0027EE  D00D               	goto	i1l4815
 13417                           
 13418                           ; BSR set to: 15
 13419                           ;CANlib.h: 574: msg->identifier |= 0x00040000;
 13420  0027F0  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 13421  0027F4  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 13422  0027F8  0E00               	movlw	0
 13423  0027FA  12DE               	iorwf	postinc2,f,c
 13424  0027FC  0E00               	movlw	0
 13425  0027FE  12DE               	iorwf	postinc2,f,c
 13426  002800  0E04               	movlw	4
 13427  002802  12DE               	iorwf	postinc2,f,c
 13428  002804  0E00               	movlw	0
 13429  002806  12DE               	iorwf	postinc2,f,c
 13430  002808  D000               	goto	i1l4815
 13431  00280A                     i1l4815:
 13432                           
 13433                           ; BSR set to: 15
 13434                           ;CANlib.h: 575: if (RXB1SIDLbits.SID1)
 13435  00280A  010F               	movlb	15	; () banked
 13436  00280C  AD52               	btfss	82,6,b	;volatile
 13437  00280E  D00D               	goto	i1l4819
 13438                           
 13439                           ; BSR set to: 15
 13440                           ;CANlib.h: 576: msg->identifier |= 0x00080000;
 13441  002810  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 13442  002814  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 13443  002818  0E00               	movlw	0
 13444  00281A  12DE               	iorwf	postinc2,f,c
 13445  00281C  0E00               	movlw	0
 13446  00281E  12DE               	iorwf	postinc2,f,c
 13447  002820  0E08               	movlw	8
 13448  002822  12DE               	iorwf	postinc2,f,c
 13449  002824  0E00               	movlw	0
 13450  002826  12DE               	iorwf	postinc2,f,c
 13451  002828  D000               	goto	i1l4819
 13452  00282A                     i1l4819:
 13453                           
 13454                           ; BSR set to: 15
 13455                           ;CANlib.h: 577: if (RXB1SIDLbits.SID2)
 13456  00282A  010F               	movlb	15	; () banked
 13457  00282C  AF52               	btfss	82,7,b	;volatile
 13458  00282E  D00D               	goto	i1l4823
 13459                           
 13460                           ; BSR set to: 15
 13461                           ;CANlib.h: 578: msg->identifier |= 0x00100000;
 13462  002830  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 13463  002834  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 13464  002838  0E00               	movlw	0
 13465  00283A  12DE               	iorwf	postinc2,f,c
 13466  00283C  0E00               	movlw	0
 13467  00283E  12DE               	iorwf	postinc2,f,c
 13468  002840  0E10               	movlw	16
 13469  002842  12DE               	iorwf	postinc2,f,c
 13470  002844  0E00               	movlw	0
 13471  002846  12DE               	iorwf	postinc2,f,c
 13472  002848  D000               	goto	i1l4823
 13473  00284A                     i1l4823:
 13474                           
 13475                           ; BSR set to: 15
 13476                           ;CANlib.h: 580: msg->identifier |= ((unsigned long) RXB1SIDH) << 21;
 13477  00284A  CF51 F003          	movff	3921,??_CANreceiveMessage	;volatile
 13478  00284E  6A04               	clrf	(??_CANreceiveMessage+1)& (0+255),c
 13479  002850  6A05               	clrf	(??_CANreceiveMessage+2)& (0+255),c
 13480  002852  6A06               	clrf	(??_CANreceiveMessage+3)& (0+255),c
 13481  002854  0E15               	movlw	21
 13482  002856                     i1u575_25:
 13483  002856  90D8               	bcf	status,0,c
 13484  002858  3603               	rlcf	??_CANreceiveMessage,f,c
 13485  00285A  3604               	rlcf	??_CANreceiveMessage+1,f,c
 13486  00285C  3605               	rlcf	??_CANreceiveMessage+2,f,c
 13487  00285E  3606               	rlcf	??_CANreceiveMessage+3,f,c
 13488  002860  2EE8               	decfsz	wreg,f,c
 13489  002862  D7F9               	goto	i1u575_25
 13490  002864  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 13491  002868  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 13492  00286C  5003               	movf	??_CANreceiveMessage,w,c
 13493  00286E  12DE               	iorwf	postinc2,f,c
 13494  002870  5004               	movf	??_CANreceiveMessage+1,w,c
 13495  002872  12DE               	iorwf	postinc2,f,c
 13496  002874  5005               	movf	??_CANreceiveMessage+2,w,c
 13497  002876  12DE               	iorwf	postinc2,f,c
 13498  002878  5006               	movf	??_CANreceiveMessage+3,w,c
 13499  00287A  12DE               	iorwf	postinc2,f,c
 13500  00287C  D000               	goto	i1l4825
 13501  00287E                     i1l4825:
 13502                           
 13503                           ; BSR set to: 15
 13504                           ;CANlib.h: 581: }
 13505                           ;CANlib.h: 583: RXB1CONbits.RXFUL = 0x00;
 13506  00287E  010F               	movlb	15	; () banked
 13507  002880  9F50               	bcf	80,7,b	;volatile
 13508                           
 13509                           ; BSR set to: 15
 13510                           ;CANlib.h: 584: return (error);
 13511                           ;	Return value of _CANreceiveMessage is never used
 13512  002882  0012               	return	
 13513  002884                     i1l416:
 13514                           
 13515                           ; BSR set to: 15
 13516                           ;CANlib.h: 585: }
 13517                           ;CANlib.h: 587: if (RXB0CONbits.RXFUL ==0x01)
 13518  002884  AE60               	btfss	3936,7,c	;volatile
 13519  002886  0012               	return	
 13520                           
 13521                           ; BSR set to: 15
 13522                           ;CANlib.h: 588: {
 13523                           ;CANlib.h: 589: msg->identifier = 0;
 13524  002888  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 13525  00288C  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 13526  002890  6ADE               	clrf	postinc2,c
 13527  002892  6ADE               	clrf	postinc2,c
 13528  002894  6ADE               	clrf	postinc2,c
 13529  002896  6ADD               	clrf	postdec2,c
 13530                           
 13531                           ; BSR set to: 15
 13532                           ;CANlib.h: 590: msg->data[0] =RXB0D0;
 13533  002898  EE20 F004          	lfsr	2,4
 13534  00289C  5001               	movf	CANreceiveMessage@msg,w,c
 13535  00289E  26D9               	addwf	fsr2l,f,c
 13536  0028A0  5002               	movf	CANreceiveMessage@msg+1,w,c
 13537  0028A2  22DA               	addwfc	fsr2h,f,c
 13538  0028A4  CF66 FFDF          	movff	3942,indf2	;volatile
 13539                           
 13540                           ; BSR set to: 15
 13541                           ;CANlib.h: 591: msg->data[1] =RXB0D1;
 13542  0028A8  EE20 F005          	lfsr	2,5
 13543  0028AC  5001               	movf	CANreceiveMessage@msg,w,c
 13544  0028AE  26D9               	addwf	fsr2l,f,c
 13545  0028B0  5002               	movf	CANreceiveMessage@msg+1,w,c
 13546  0028B2  22DA               	addwfc	fsr2h,f,c
 13547  0028B4  CF67 FFDF          	movff	3943,indf2	;volatile
 13548                           
 13549                           ; BSR set to: 15
 13550                           ;CANlib.h: 592: msg->data[2] =RXB0D2;
 13551  0028B8  EE20 F006          	lfsr	2,6
 13552  0028BC  5001               	movf	CANreceiveMessage@msg,w,c
 13553  0028BE  26D9               	addwf	fsr2l,f,c
 13554  0028C0  5002               	movf	CANreceiveMessage@msg+1,w,c
 13555  0028C2  22DA               	addwfc	fsr2h,f,c
 13556  0028C4  CF68 FFDF          	movff	3944,indf2	;volatile
 13557                           
 13558                           ; BSR set to: 15
 13559                           ;CANlib.h: 593: msg->data[3] =RXB0D3;
 13560  0028C8  EE20 F007          	lfsr	2,7
 13561  0028CC  5001               	movf	CANreceiveMessage@msg,w,c
 13562  0028CE  26D9               	addwf	fsr2l,f,c
 13563  0028D0  5002               	movf	CANreceiveMessage@msg+1,w,c
 13564  0028D2  22DA               	addwfc	fsr2h,f,c
 13565  0028D4  CF69 FFDF          	movff	3945,indf2	;volatile
 13566                           
 13567                           ; BSR set to: 15
 13568                           ;CANlib.h: 594: msg->data[4] =RXB0D4;
 13569  0028D8  EE20 F008          	lfsr	2,8
 13570  0028DC  5001               	movf	CANreceiveMessage@msg,w,c
 13571  0028DE  26D9               	addwf	fsr2l,f,c
 13572  0028E0  5002               	movf	CANreceiveMessage@msg+1,w,c
 13573  0028E2  22DA               	addwfc	fsr2h,f,c
 13574  0028E4  CF6A FFDF          	movff	3946,indf2	;volatile
 13575                           
 13576                           ; BSR set to: 15
 13577                           ;CANlib.h: 595: msg->data[5] =RXB0D5;
 13578  0028E8  EE20 F009          	lfsr	2,9
 13579  0028EC  5001               	movf	CANreceiveMessage@msg,w,c
 13580  0028EE  26D9               	addwf	fsr2l,f,c
 13581  0028F0  5002               	movf	CANreceiveMessage@msg+1,w,c
 13582  0028F2  22DA               	addwfc	fsr2h,f,c
 13583  0028F4  CF6B FFDF          	movff	3947,indf2	;volatile
 13584                           
 13585                           ; BSR set to: 15
 13586                           ;CANlib.h: 596: msg->data[6] =RXB0D6;
 13587  0028F8  EE20 F00A          	lfsr	2,10
 13588  0028FC  5001               	movf	CANreceiveMessage@msg,w,c
 13589  0028FE  26D9               	addwf	fsr2l,f,c
 13590  002900  5002               	movf	CANreceiveMessage@msg+1,w,c
 13591  002902  22DA               	addwfc	fsr2h,f,c
 13592  002904  CF6C FFDF          	movff	3948,indf2	;volatile
 13593                           
 13594                           ; BSR set to: 15
 13595                           ;CANlib.h: 597: msg->data[7] =RXB0D7;
 13596  002908  EE20 F00B          	lfsr	2,11
 13597  00290C  5001               	movf	CANreceiveMessage@msg,w,c
 13598  00290E  26D9               	addwf	fsr2l,f,c
 13599  002910  5002               	movf	CANreceiveMessage@msg+1,w,c
 13600  002912  22DA               	addwfc	fsr2h,f,c
 13601  002914  CF6D FFDF          	movff	3949,indf2	;volatile
 13602                           
 13603                           ; BSR set to: 15
 13604                           ;CANlib.h: 599: msg->RTR = RXB0DLCbits.RXRTR;
 13605  002918  EE20 F00E          	lfsr	2,14
 13606  00291C  5001               	movf	CANreceiveMessage@msg,w,c
 13607  00291E  26D9               	addwf	fsr2l,f,c
 13608  002920  5002               	movf	CANreceiveMessage@msg+1,w,c
 13609  002922  22DA               	addwfc	fsr2h,f,c
 13610  002924  AC65               	btfss	3941,6,c	;volatile
 13611  002926  D002               	goto	i1u577_20
 13612  002928  0E01               	movlw	1
 13613  00292A  D001               	goto	i1u577_26
 13614  00292C                     i1u577_20:
 13615  00292C  0E00               	movlw	0
 13616  00292E                     i1u577_26:
 13617  00292E  6EDF               	movwf	indf2,c
 13618                           
 13619                           ; BSR set to: 15
 13620                           ;CANlib.h: 601: msg->length = RXB0DLC & 0x0F;
 13621  002930  EE20 F00D          	lfsr	2,13
 13622  002934  5001               	movf	CANreceiveMessage@msg,w,c
 13623  002936  26D9               	addwf	fsr2l,f,c
 13624  002938  5002               	movf	CANreceiveMessage@msg+1,w,c
 13625  00293A  22DA               	addwfc	fsr2h,f,c
 13626  00293C  5065               	movf	3941,w,c	;volatile
 13627  00293E  0B0F               	andlw	15
 13628  002940  6EDF               	movwf	indf2,c
 13629                           
 13630                           ; BSR set to: 15
 13631                           ;CANlib.h: 603: msg->type = RXB0SIDLbits.EXID;
 13632  002942  EE20 F00C          	lfsr	2,12
 13633  002946  5001               	movf	CANreceiveMessage@msg,w,c
 13634  002948  26D9               	addwf	fsr2l,f,c
 13635  00294A  5002               	movf	CANreceiveMessage@msg+1,w,c
 13636  00294C  22DA               	addwfc	fsr2h,f,c
 13637  00294E  A662               	btfss	3938,3,c	;volatile
 13638  002950  D002               	goto	i1u578_20
 13639  002952  0E01               	movlw	1
 13640  002954  D001               	goto	i1u578_26
 13641  002956                     i1u578_20:
 13642  002956  0E00               	movlw	0
 13643  002958                     i1u578_26:
 13644  002958  6EDF               	movwf	indf2,c
 13645                           
 13646                           ; BSR set to: 15
 13647                           ;CANlib.h: 605: if (RXB0SIDLbits.EXID == 0)
 13648  00295A  B662               	btfsc	3938,3,c	;volatile
 13649  00295C  D043               	goto	i1l4861
 13650                           
 13651                           ; BSR set to: 15
 13652                           ;CANlib.h: 606: {
 13653                           ;CANlib.h: 607: msg->identifier = ((unsigned long)RXB0SIDH)<< 3;
 13654  00295E  CF61 F003          	movff	3937,??_CANreceiveMessage	;volatile
 13655  002962  6A04               	clrf	(??_CANreceiveMessage+1)& (0+255),c
 13656  002964  6A05               	clrf	(??_CANreceiveMessage+2)& (0+255),c
 13657  002966  6A06               	clrf	(??_CANreceiveMessage+3)& (0+255),c
 13658  002968  0E03               	movlw	3
 13659  00296A                     i1u580_25:
 13660  00296A  90D8               	bcf	status,0,c
 13661  00296C  3603               	rlcf	??_CANreceiveMessage,f,c
 13662  00296E  3604               	rlcf	??_CANreceiveMessage+1,f,c
 13663  002970  3605               	rlcf	??_CANreceiveMessage+2,f,c
 13664  002972  3606               	rlcf	??_CANreceiveMessage+3,f,c
 13665  002974  2EE8               	decfsz	wreg,f,c
 13666  002976  D7F9               	goto	i1u580_25
 13667  002978  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 13668  00297C  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 13669  002980  C003  FFDE         	movff	??_CANreceiveMessage,postinc2
 13670  002984  C004  FFDE         	movff	??_CANreceiveMessage+1,postinc2
 13671  002988  C005  FFDE         	movff	??_CANreceiveMessage+2,postinc2
 13672  00298C  C006  FFDE         	movff	??_CANreceiveMessage+3,postinc2
 13673                           
 13674                           ; BSR set to: 15
 13675                           ;CANlib.h: 608: tamp = (RXB0SIDL >> 5 ) & 0x07;
 13676  002990  3862               	swapf	3938,w,c	;volatile
 13677  002992  42E8               	rrncf	wreg,f,c
 13678  002994  0B07               	andlw	7
 13679  002996  0B07               	andlw	7
 13680  002998  6E0C               	movwf	CANreceiveMessage@tamp,c
 13681                           
 13682                           ; BSR set to: 15
 13683                           ;CANlib.h: 609: msg->identifier = msg->identifier + tamp;
 13684  00299A  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 13685  00299E  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 13686  0029A2  CFDE F003          	movff	postinc2,??_CANreceiveMessage
 13687  0029A6  CFDE F004          	movff	postinc2,??_CANreceiveMessage+1
 13688  0029AA  CFDE F005          	movff	postinc2,??_CANreceiveMessage+2
 13689  0029AE  CFDE F006          	movff	postinc2,??_CANreceiveMessage+3
 13690  0029B2  500C               	movf	CANreceiveMessage@tamp,w,c
 13691  0029B4  2403               	addwf	??_CANreceiveMessage,w,c
 13692  0029B6  6E07               	movwf	(??_CANreceiveMessage+4)& (0+255),c
 13693  0029B8  0E00               	movlw	0
 13694  0029BA  2004               	addwfc	??_CANreceiveMessage+1,w,c
 13695  0029BC  6E08               	movwf	(??_CANreceiveMessage+5)& (0+255),c
 13696  0029BE  0E00               	movlw	0
 13697  0029C0  2005               	addwfc	??_CANreceiveMessage+2,w,c
 13698  0029C2  6E09               	movwf	(??_CANreceiveMessage+6)& (0+255),c
 13699  0029C4  0E00               	movlw	0
 13700  0029C6  2006               	addwfc	??_CANreceiveMessage+3,w,c
 13701  0029C8  6E0A               	movwf	(??_CANreceiveMessage+7)& (0+255),c
 13702  0029CA  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 13703  0029CE  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 13704  0029D2  C007  FFDE         	movff	??_CANreceiveMessage+4,postinc2
 13705  0029D6  C008  FFDE         	movff	??_CANreceiveMessage+5,postinc2
 13706  0029DA  C009  FFDE         	movff	??_CANreceiveMessage+6,postinc2
 13707  0029DE  C00A  FFDE         	movff	??_CANreceiveMessage+7,postinc2
 13708                           
 13709                           ;CANlib.h: 610: }
 13710  0029E2  D08E               	goto	i1l4887
 13711  0029E4                     i1l4861:
 13712                           
 13713                           ; BSR set to: 15
 13714                           ;CANlib.h: 611: else
 13715                           ;CANlib.h: 612: {
 13716                           ;CANlib.h: 613: msg->identifier = (unsigned long) RXB0EIDL;
 13717  0029E4  CF64 F003          	movff	3940,??_CANreceiveMessage	;volatile
 13718  0029E8  6A04               	clrf	(??_CANreceiveMessage+1)& (0+255),c
 13719  0029EA  6A05               	clrf	(??_CANreceiveMessage+2)& (0+255),c
 13720  0029EC  6A06               	clrf	(??_CANreceiveMessage+3)& (0+255),c
 13721  0029EE  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 13722  0029F2  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 13723  0029F6  C003  FFDE         	movff	??_CANreceiveMessage,postinc2
 13724  0029FA  C004  FFDE         	movff	??_CANreceiveMessage+1,postinc2
 13725  0029FE  C005  FFDE         	movff	??_CANreceiveMessage+2,postinc2
 13726  002A02  C006  FFDE         	movff	??_CANreceiveMessage+3,postinc2
 13727                           
 13728                           ; BSR set to: 15
 13729                           ;CANlib.h: 614: msg->identifier += ((unsigned long) RXB0EIDH) << 8;
 13730  002A06  CF63 F003          	movff	3939,??_CANreceiveMessage	;volatile
 13731  002A0A  6A04               	clrf	(??_CANreceiveMessage+1)& (0+255),c
 13732  002A0C  6A05               	clrf	(??_CANreceiveMessage+2)& (0+255),c
 13733  002A0E  6A06               	clrf	(??_CANreceiveMessage+3)& (0+255),c
 13734  002A10  C005  F006         	movff	??_CANreceiveMessage+2,??_CANreceiveMessage+3
 13735  002A14  C004  F005         	movff	??_CANreceiveMessage+1,??_CANreceiveMessage+2
 13736  002A18  C003  F004         	movff	??_CANreceiveMessage,??_CANreceiveMessage+1
 13737  002A1C  6A03               	clrf	??_CANreceiveMessage,c
 13738  002A1E  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 13739  002A22  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 13740  002A26  5003               	movf	??_CANreceiveMessage,w,c
 13741  002A28  26DE               	addwf	postinc2,f,c
 13742  002A2A  5004               	movf	??_CANreceiveMessage+1,w,c
 13743  002A2C  22DE               	addwfc	postinc2,f,c
 13744  002A2E  5005               	movf	??_CANreceiveMessage+2,w,c
 13745  002A30  22DE               	addwfc	postinc2,f,c
 13746  002A32  5006               	movf	??_CANreceiveMessage+3,w,c
 13747  002A34  22DE               	addwfc	postinc2,f,c
 13748                           
 13749                           ; BSR set to: 15
 13750                           ;CANlib.h: 616: if (RXB0SIDLbits.EID16)
 13751  002A36  A062               	btfss	3938,0,c	;volatile
 13752  002A38  D00D               	goto	i1l4869
 13753                           
 13754                           ; BSR set to: 15
 13755                           ;CANlib.h: 617: msg->identifier |= 0x00010000;
 13756  002A3A  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 13757  002A3E  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 13758  002A42  0E00               	movlw	0
 13759  002A44  12DE               	iorwf	postinc2,f,c
 13760  002A46  0E00               	movlw	0
 13761  002A48  12DE               	iorwf	postinc2,f,c
 13762  002A4A  0E01               	movlw	1
 13763  002A4C  12DE               	iorwf	postinc2,f,c
 13764  002A4E  0E00               	movlw	0
 13765  002A50  12DE               	iorwf	postinc2,f,c
 13766  002A52  D000               	goto	i1l4869
 13767  002A54                     i1l4869:
 13768                           
 13769                           ; BSR set to: 15
 13770                           ;CANlib.h: 618: if (RXB0SIDLbits.EID17)
 13771  002A54  A262               	btfss	3938,1,c	;volatile
 13772  002A56  D00D               	goto	i1l4873
 13773                           
 13774                           ; BSR set to: 15
 13775                           ;CANlib.h: 619: msg->identifier |= 0x00020000;
 13776  002A58  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 13777  002A5C  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 13778  002A60  0E00               	movlw	0
 13779  002A62  12DE               	iorwf	postinc2,f,c
 13780  002A64  0E00               	movlw	0
 13781  002A66  12DE               	iorwf	postinc2,f,c
 13782  002A68  0E02               	movlw	2
 13783  002A6A  12DE               	iorwf	postinc2,f,c
 13784  002A6C  0E00               	movlw	0
 13785  002A6E  12DE               	iorwf	postinc2,f,c
 13786  002A70  D000               	goto	i1l4873
 13787  002A72                     i1l4873:
 13788                           
 13789                           ; BSR set to: 15
 13790                           ;CANlib.h: 620: if (RXB0SIDLbits.SID0)
 13791  002A72  AA62               	btfss	3938,5,c	;volatile
 13792  002A74  D00D               	goto	i1l4877
 13793                           
 13794                           ; BSR set to: 15
 13795                           ;CANlib.h: 621: msg->identifier |= 0x00040000;
 13796  002A76  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 13797  002A7A  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 13798  002A7E  0E00               	movlw	0
 13799  002A80  12DE               	iorwf	postinc2,f,c
 13800  002A82  0E00               	movlw	0
 13801  002A84  12DE               	iorwf	postinc2,f,c
 13802  002A86  0E04               	movlw	4
 13803  002A88  12DE               	iorwf	postinc2,f,c
 13804  002A8A  0E00               	movlw	0
 13805  002A8C  12DE               	iorwf	postinc2,f,c
 13806  002A8E  D000               	goto	i1l4877
 13807  002A90                     i1l4877:
 13808                           
 13809                           ; BSR set to: 15
 13810                           ;CANlib.h: 622: if (RXB0SIDLbits.SID1)
 13811  002A90  AC62               	btfss	3938,6,c	;volatile
 13812  002A92  D00D               	goto	i1l4881
 13813                           
 13814                           ; BSR set to: 15
 13815                           ;CANlib.h: 623: msg->identifier |= 0x00080000;
 13816  002A94  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 13817  002A98  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 13818  002A9C  0E00               	movlw	0
 13819  002A9E  12DE               	iorwf	postinc2,f,c
 13820  002AA0  0E00               	movlw	0
 13821  002AA2  12DE               	iorwf	postinc2,f,c
 13822  002AA4  0E08               	movlw	8
 13823  002AA6  12DE               	iorwf	postinc2,f,c
 13824  002AA8  0E00               	movlw	0
 13825  002AAA  12DE               	iorwf	postinc2,f,c
 13826  002AAC  D000               	goto	i1l4881
 13827  002AAE                     i1l4881:
 13828                           
 13829                           ; BSR set to: 15
 13830                           ;CANlib.h: 624: if (RXB0SIDLbits.SID2)
 13831  002AAE  AE62               	btfss	3938,7,c	;volatile
 13832  002AB0  D00D               	goto	i1l4885
 13833                           
 13834                           ; BSR set to: 15
 13835                           ;CANlib.h: 625: msg->identifier |= 0x00100000;
 13836  002AB2  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 13837  002AB6  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 13838  002ABA  0E00               	movlw	0
 13839  002ABC  12DE               	iorwf	postinc2,f,c
 13840  002ABE  0E00               	movlw	0
 13841  002AC0  12DE               	iorwf	postinc2,f,c
 13842  002AC2  0E10               	movlw	16
 13843  002AC4  12DE               	iorwf	postinc2,f,c
 13844  002AC6  0E00               	movlw	0
 13845  002AC8  12DE               	iorwf	postinc2,f,c
 13846  002ACA  D000               	goto	i1l4885
 13847  002ACC                     i1l4885:
 13848                           
 13849                           ; BSR set to: 15
 13850                           ;CANlib.h: 627: msg->identifier |= ((unsigned long) RXB0SIDH) << 21;
 13851  002ACC  CF61 F003          	movff	3937,??_CANreceiveMessage	;volatile
 13852  002AD0  6A04               	clrf	(??_CANreceiveMessage+1)& (0+255),c
 13853  002AD2  6A05               	clrf	(??_CANreceiveMessage+2)& (0+255),c
 13854  002AD4  6A06               	clrf	(??_CANreceiveMessage+3)& (0+255),c
 13855  002AD6  0E15               	movlw	21
 13856  002AD8                     i1u586_25:
 13857  002AD8  90D8               	bcf	status,0,c
 13858  002ADA  3603               	rlcf	??_CANreceiveMessage,f,c
 13859  002ADC  3604               	rlcf	??_CANreceiveMessage+1,f,c
 13860  002ADE  3605               	rlcf	??_CANreceiveMessage+2,f,c
 13861  002AE0  3606               	rlcf	??_CANreceiveMessage+3,f,c
 13862  002AE2  2EE8               	decfsz	wreg,f,c
 13863  002AE4  D7F9               	goto	i1u586_25
 13864  002AE6  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 13865  002AEA  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 13866  002AEE  5003               	movf	??_CANreceiveMessage,w,c
 13867  002AF0  12DE               	iorwf	postinc2,f,c
 13868  002AF2  5004               	movf	??_CANreceiveMessage+1,w,c
 13869  002AF4  12DE               	iorwf	postinc2,f,c
 13870  002AF6  5005               	movf	??_CANreceiveMessage+2,w,c
 13871  002AF8  12DE               	iorwf	postinc2,f,c
 13872  002AFA  5006               	movf	??_CANreceiveMessage+3,w,c
 13873  002AFC  12DE               	iorwf	postinc2,f,c
 13874  002AFE  D000               	goto	i1l4887
 13875  002B00                     i1l4887:
 13876                           
 13877                           ; BSR set to: 15
 13878                           ;CANlib.h: 629: }
 13879                           ;CANlib.h: 630: RXB0CONbits.RXFUL = 0x00;
 13880  002B00  9E60               	bcf	3936,7,c	;volatile
 13881                           
 13882                           ; BSR set to: 15
 13883                           ;CANlib.h: 632: return (error);
 13884                           ;	Return value of _CANreceiveMessage is never used
 13885  002B02  0012               	return	
 13886                           
 13887                           ; BSR set to: 15
 13888                           
 13889                           ; BSR set to: 15
 13890  002B04  0012               	return		;funcret
 13891  002B06                     __end_of_CANreceiveMessage:
 13892                           	opt stack 0
 13893                           pclatu	equ	0xFFB
 13894                           pclath	equ	0xFFA
 13895                           tblptru	equ	0xFF8
 13896                           tblptrh	equ	0xFF7
 13897                           tblptrl	equ	0xFF6
 13898                           tablat	equ	0xFF5
 13899                           prodh	equ	0xFF4
 13900                           prodl	equ	0xFF3
 13901                           intcon	equ	0xFF2
 13902                           postinc0	equ	0xFEE
 13903                           fsr0h	equ	0xFEA
 13904                           fsr0l	equ	0xFE9
 13905                           wreg	equ	0xFE8
 13906                           indf1	equ	0xFE7
 13907                           fsr1h	equ	0xFE2
 13908                           fsr1l	equ	0xFE1
 13909                           bsr	equ	0xFE0
 13910                           indf2	equ	0xFDF
 13911                           postinc2	equ	0xFDE
 13912                           postdec2	equ	0xFDD
 13913                           fsr2h	equ	0xFDA
 13914                           fsr2l	equ	0xFD9
 13915                           status	equ	0xFD8
 13916                           
 13917 ;; *************** function _CANisRxReady *****************
 13918 ;; Defined at:
 13919 ;;		line 1163 in file "CANlib.h"
 13920 ;; Parameters:    Size  Location     Type
 13921 ;;		None
 13922 ;; Auto vars:     Size  Location     Type
 13923 ;;		None
 13924 ;; Return value:  Size  Location     Type
 13925 ;;                  1    wreg      unsigned char 
 13926 ;; Registers used:
 13927 ;;		wreg, status,2
 13928 ;; Tracked objects:
 13929 ;;		On entry : 0/0
 13930 ;;		On exit  : 0/0
 13931 ;;		Unchanged: 0/0
 13932 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13933 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13934 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13935 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13936 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13937 ;;Total ram usage:        1 bytes
 13938 ;; Hardware stack levels used:    1
 13939 ;; This function calls:
 13940 ;;		Nothing
 13941 ;; This function is called by:
 13942 ;;		_ISR_bassa
 13943 ;; This function uses a non-reentrant model
 13944 ;;
 13945                           
 13946                           	psect	text43
 13947  004ECA                     __ptext43:
 13948                           	opt stack 0
 13949  004ECA                     _CANisRxReady:
 13950                           	opt stack 23
 13951                           
 13952                           ;CANlib.h: 1165: return (RXB0CONbits.RXFUL || RXB1CONbits.RXFUL);
 13953                           
 13954                           ; BSR set to: 15
 13955                           ;incstack = 0
 13956  004ECA  0E01               	movlw	1
 13957  004ECC  6E01               	movwf	_CANisRxReady$3007,c
 13958  004ECE  BE60               	btfsc	3936,7,c	;volatile
 13959  004ED0  D005               	goto	i1l567
 13960  004ED2  010F               	movlb	15	; () banked
 13961  004ED4  BF50               	btfsc	80,7,b	;volatile
 13962  004ED6  D002               	goto	i1l567
 13963                           
 13964                           ; BSR set to: 15
 13965  004ED8  0E00               	movlw	0
 13966  004EDA  6E01               	movwf	_CANisRxReady$3007,c
 13967  004EDC                     i1l567:
 13968  004EDC  5001               	movf	_CANisRxReady$3007,w,c
 13969  004EDE  0012               	return	
 13970  004EE0  0012               	return		;funcret
 13971  004EE2                     __end_of_CANisRxReady:
 13972                           	opt stack 0
 13973                           pclatu	equ	0xFFB
 13974                           pclath	equ	0xFFA
 13975                           tblptru	equ	0xFF8
 13976                           tblptrh	equ	0xFF7
 13977                           tblptrl	equ	0xFF6
 13978                           tablat	equ	0xFF5
 13979                           prodh	equ	0xFF4
 13980                           prodl	equ	0xFF3
 13981                           intcon	equ	0xFF2
 13982                           postinc0	equ	0xFEE
 13983                           fsr0h	equ	0xFEA
 13984                           fsr0l	equ	0xFE9
 13985                           wreg	equ	0xFE8
 13986                           indf1	equ	0xFE7
 13987                           fsr1h	equ	0xFE2
 13988                           fsr1l	equ	0xFE1
 13989                           bsr	equ	0xFE0
 13990                           indf2	equ	0xFDF
 13991                           postinc2	equ	0xFDE
 13992                           postdec2	equ	0xFDD
 13993                           fsr2h	equ	0xFDA
 13994                           fsr2l	equ	0xFD9
 13995                           status	equ	0xFD8
 13996                           pclatu	equ	0xFFB
 13997                           pclath	equ	0xFFA
 13998                           tblptru	equ	0xFF8
 13999                           tblptrh	equ	0xFF7
 14000                           tblptrl	equ	0xFF6
 14001                           tablat	equ	0xFF5
 14002                           prodh	equ	0xFF4
 14003                           prodl	equ	0xFF3
 14004                           intcon	equ	0xFF2
 14005                           postinc0	equ	0xFEE
 14006                           fsr0h	equ	0xFEA
 14007                           fsr0l	equ	0xFE9
 14008                           wreg	equ	0xFE8
 14009                           indf1	equ	0xFE7
 14010                           fsr1h	equ	0xFE2
 14011                           fsr1l	equ	0xFE1
 14012                           bsr	equ	0xFE0
 14013                           indf2	equ	0xFDF
 14014                           postinc2	equ	0xFDE
 14015                           postdec2	equ	0xFDD
 14016                           fsr2h	equ	0xFDA
 14017                           fsr2l	equ	0xFD9
 14018                           status	equ	0xFD8
 14019                           
 14020                           	psect	rparam
 14021  0000                     pclatu	equ	0xFFB
 14022                           pclath	equ	0xFFA
 14023                           tblptru	equ	0xFF8
 14024                           tblptrh	equ	0xFF7
 14025                           tblptrl	equ	0xFF6
 14026                           tablat	equ	0xFF5
 14027                           prodh	equ	0xFF4
 14028                           prodl	equ	0xFF3
 14029                           intcon	equ	0xFF2
 14030                           postinc0	equ	0xFEE
 14031                           fsr0h	equ	0xFEA
 14032                           fsr0l	equ	0xFE9
 14033                           wreg	equ	0xFE8
 14034                           indf1	equ	0xFE7
 14035                           fsr1h	equ	0xFE2
 14036                           fsr1l	equ	0xFE1
 14037                           bsr	equ	0xFE0
 14038                           indf2	equ	0xFDF
 14039                           postinc2	equ	0xFDE
 14040                           postdec2	equ	0xFDD
 14041                           fsr2h	equ	0xFDA
 14042                           fsr2l	equ	0xFD9
 14043                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    76
    Data        3
    BSS         106
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     34      65
    BANK0           160     95     159
    BANK1           256     25      41
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0

Pointer List with Targets:

    eval_poly@d	PTR const  size(2) Largest target is 40
		 -> log@coeff(CODE[36]), exp@coeff(CODE[40]), 

    frexp@eptr	PTR int  size(2) Largest target is 2
		 -> log@exponent(BANK0[2]), floor@expon(BANK0[2]), 

    CANreceiveMessage@msg	PTR struct . size(2) Largest target is 15
		 -> msg(BANK0[15]), 

    CANsendMessage@data	PTR unsigned char  size(2) Largest target is 8
		 -> data_array_debug(BANK0[8]), data_array(COMRAM[8]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _ISR_bassa in COMRAM

    _ISR_bassa->_CANreceiveMessage

Critical Paths under _main in BANK0

    _main->_rampe
    _send_data->_CANsendMessage
    _rampe->_pow
    _pow->_exp
    _log->_eval_poly
    _exp->_floor
    _ldexp->_eval_poly
    _floor->___altofl
    ___fltol->___fladd
    ___altofl->___fltol
    _eval_poly->___fladd
    ___flmul->___awtofl
    ___flsub->___fladd
    ___fladd->___flmul
    ___fldiv->___flpack
    ___awtofl->___flpack
    ___lltofl->___flpack
    ___lwtofl->___flpack
    _configurazione_iniziale->_CANInitialize
    _delay_ms->___wmul
    _CANInitialize->_CANSetFilter
    _CANInitialize->_CANSetMask
    _battery_measure->_CANsendMessage
    ___awdiv->___wmul

Critical Paths under _ISR_bassa in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_rampe
    _rampe->_pow

Critical Paths under _ISR_bassa in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR_bassa in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR_bassa in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR_bassa in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR_bassa in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR_bassa in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR_bassa in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _ISR_bassa in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _ISR_bassa in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _ISR_bassa in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _ISR_bassa in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _ISR_bassa in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 9     9      0  106436
                                             94 BANK0      1     1      0
                                             17 BANK1      8     8      0
                       _CANisTxReady
                     _CANsendMessage
                          _OpenEPWM1
                         _OpenTimer2
                         _SetDCEPWM1
                     _SetOutputEPWM1
                    _battery_measure
                    _can_interpreter
            _configurazione_iniziale
                           _delay_ms
                              _rampe
                          _send_data
 ---------------------------------------------------------------------------------
 (1) _send_data                                            0     0      0    4654
                       _CANisTxReady
                     _CANsendMessage
 ---------------------------------------------------------------------------------
 (1) _rampe                                               24    24      0   80568
                                             86 BANK0      8     8      0
                                             13 BANK1      4     4      0
                       _CANisTxReady
                     _CANsendMessage
                         _SetDCEPWM1
                     _SetOutputEPWM1
                            ___aldiv
                            ___fladd
                            ___fltol
                            ___lwdiv
                           ___lwtofl
                                _abs
                                _pow
 ---------------------------------------------------------------------------------
 (2) _pow                                                 21    13      8   64942
                                             78 BANK0      8     0      8
                                              0 BANK1     13    13      0
                             ___flge
                            ___flmul
                            ___flneg
                            ___fltol
                           ___lltofl
                            ___lwdiv (ARG)
                           ___lwtofl (ARG)
                                _exp
                                _log
 ---------------------------------------------------------------------------------
 (3) _log                                                  6     2      4   20695
                                             58 BANK0      6     2      4
                           ___awtofl
                            ___fladd
                            ___flmul
                          _eval_poly
                              _frexp
 ---------------------------------------------------------------------------------
 (3) _exp                                                 11     7      4   35530
                                             67 BANK0     11     7      4
                           ___awtofl
                            ___fldiv
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                          _eval_poly
                              _floor
                              _ldexp
                                _log (ARG)
 ---------------------------------------------------------------------------------
 (4) _ldexp                                                8     2      6     489
                                             58 BANK0      8     2      6
                          _eval_poly (ARG)
 ---------------------------------------------------------------------------------
 (4) _floor                                               10     6      4    9704
                                             57 BANK0     10     6      4
                           ___altofl
                            ___fladd
                             ___flge
                            ___fltol
                              _frexp
 ---------------------------------------------------------------------------------
 (4) _frexp                                                8     2      6     582
                                              0 BANK0      8     2      6
 ---------------------------------------------------------------------------------
 (5) ___fltol                                             10     6      4     792
                                             42 BANK0     10     6      4
                            ___fladd (ARG)
                            ___lwdiv (ARG)
                           ___lwtofl (ARG)
 ---------------------------------------------------------------------------------
 (5) ___flge                                              12     4      8     718
                                              0 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (5) ___altofl                                             5     1      4    2446
                                             52 BANK0      5     1      4
                           ___flpack
                            ___fltol (ARG)
 ---------------------------------------------------------------------------------
 (4) _eval_poly                                           16     8      8    8943
                                             42 BANK0     16     8      8
                            ___fladd
                            ___flmul
 ---------------------------------------------------------------------------------
 (5) ___flmul                                             15     7      8    3566
                                             15 BANK0     15     7      8
                           ___awtofl (ARG)
                           ___flpack
                              _frexp (ARG)
 ---------------------------------------------------------------------------------
 (4) ___flsub                                              8     0      8    5049
                                             42 BANK0      8     0      8
                           ___awtofl (ARG)
                            ___fladd
 ---------------------------------------------------------------------------------
 (5) ___fladd                                             12     4      8    4733
                                             30 BANK0     12     4      8
                           ___awtofl (ARG)
                            ___flmul (ARG)
                           ___flpack
                            ___lwdiv (ARG)
                           ___lwtofl (ARG)
                              _frexp (ARG)
 ---------------------------------------------------------------------------------
 (4) ___flneg                                              4     0      4     260
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (4) ___fldiv                                             15     7      8    2885
                                             10 BANK0     15     7      8
                           ___flpack
 ---------------------------------------------------------------------------------
 (4) ___awtofl                                             9     5      4    2511
                                             10 BANK0      5     1      4
                           ___flpack
 ---------------------------------------------------------------------------------
 (3) ___lltofl                                             4     0      4    2344
                                             10 BANK0      4     0      4
                           ___flpack
 ---------------------------------------------------------------------------------
 (2) _abs                                                  4     2      2     158
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (2) ___lwtofl                                             4     0      4    2539
                                             10 BANK0      4     0      4
                           ___flpack
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (6) ___flpack                                            10     4      6    2248
                                              0 BANK0     10     4      6
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              7     3      4     761
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             14     6      8     575
                                              0 BANK0     14     6      8
 ---------------------------------------------------------------------------------
 (2) _SetDCEPWM1                                           6     4      2     424
                                              0 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (1) _configurazione_iniziale                              0     0      0    9124
                      _CANInitialize
                     _SetOutputEPWM1
                           _delay_ms
 ---------------------------------------------------------------------------------
 (1) _delay_ms                                             2     0      2     718
                                              6 BANK0      2     0      2
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) _SetOutputEPWM1                                       2     1      1     446
                                              0 BANK0      2     1      1
 ---------------------------------------------------------------------------------
 (2) _CANInitialize                                       12     7      5    7960
                                             14 BANK0     12     7      5
                   _CANOperationMode
                       _CANSetFilter
                         _CANSetMask
 ---------------------------------------------------------------------------------
 (3) _CANSetMask                                          14     9      5    1740
                                              0 BANK0     14     9      5
 ---------------------------------------------------------------------------------
 (3) _CANSetFilter                                        14     9      5    5220
                                              0 BANK0     14     9      5
 ---------------------------------------------------------------------------------
 (3) _CANOperationMode                                     1     1      0      62
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _can_interpreter                                      2     2      0       0
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _battery_measure                                      0     0      0    5721
                       _CANisTxReady
                     _CANsendMessage
                            ___awdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     492
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              8     4      4     575
                                              6 BANK0      8     4      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (2) _CANsendMessage                                      16     8      8    4617
                                              0 BANK0     16     8      8
 ---------------------------------------------------------------------------------
 (2) _CANisTxReady                                         1     1      0      37
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _OpenTimer2                                           1     1      0      62
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _OpenEPWM1                                            1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _ISR_bassa                                           22    22      0    1240
                                             12 COMRAM    22    22      0
                       _CANisRxReady
                  _CANreceiveMessage
 ---------------------------------------------------------------------------------
 (8) _CANreceiveMessage                                   12    10      2    1126
                                              0 COMRAM    12    10      2
 ---------------------------------------------------------------------------------
 (8) _CANisRxReady                                         1     1      0      24
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _CANisTxReady
   _CANsendMessage
   _OpenEPWM1
   _OpenTimer2
   _SetDCEPWM1
   _SetOutputEPWM1
   _battery_measure
     _CANisTxReady
     _CANsendMessage
     ___awdiv
       ___wmul (ARG)
     ___wmul
   _can_interpreter
   _configurazione_iniziale
     _CANInitialize
       _CANOperationMode
       _CANSetFilter
       _CANSetMask
     _SetOutputEPWM1
     _delay_ms
       ___wmul
   _delay_ms
     ___wmul
   _rampe
     _CANisTxReady
     _CANsendMessage
     _SetDCEPWM1
     _SetOutputEPWM1
     ___aldiv
     ___fladd
       ___awtofl (ARG)
         ___flpack
       ___flmul (ARG)
         ___awtofl (ARG)
           ___flpack
         ___flpack (ARG)
         _frexp (ARG)
       ___flpack (ARG)
       ___lwdiv (ARG)
       ___lwtofl (ARG)
         ___flpack
         ___lwdiv (ARG)
       _frexp (ARG)
     ___fltol
       ___fladd (ARG)
         ___awtofl (ARG)
           ___flpack
         ___flmul (ARG)
           ___awtofl (ARG)
             ___flpack
           ___flpack (ARG)
           _frexp (ARG)
         ___flpack (ARG)
         ___lwdiv (ARG)
         ___lwtofl (ARG)
           ___flpack
           ___lwdiv (ARG)
         _frexp (ARG)
       ___lwdiv (ARG)
       ___lwtofl (ARG)
         ___flpack
         ___lwdiv (ARG)
     ___lwdiv
     ___lwtofl
       ___flpack
       ___lwdiv (ARG)
     _abs
     _pow
       ___flge
       ___flmul
         ___awtofl (ARG)
           ___flpack
         ___flpack (ARG)
         _frexp (ARG)
       ___flneg
       ___fltol
         ___fladd (ARG)
           ___awtofl (ARG)
             ___flpack
           ___flmul (ARG)
             ___awtofl (ARG)
               ___flpack
             ___flpack (ARG)
             _frexp (ARG)
           ___flpack (ARG)
           ___lwdiv (ARG)
           ___lwtofl (ARG)
             ___flpack
             ___lwdiv (ARG)
           _frexp (ARG)
         ___lwdiv (ARG)
         ___lwtofl (ARG)
           ___flpack
           ___lwdiv (ARG)
       ___lltofl
         ___flpack
       ___lwdiv (ARG)
       ___lwtofl (ARG)
         ___flpack
         ___lwdiv (ARG)
       _exp (ARG)
         ___awtofl
           ___flpack
         ___fldiv
           ___flpack
         ___flge
         ___flmul
           ___awtofl (ARG)
             ___flpack
           ___flpack (ARG)
           _frexp (ARG)
         ___flneg
         ___flsub
           ___awtofl (ARG)
             ___flpack
           ___fladd (ARG)
             ___awtofl (ARG)
               ___flpack
             ___flmul (ARG)
               ___awtofl (ARG)
                 ___flpack
               ___flpack (ARG)
               _frexp (ARG)
             ___flpack (ARG)
             ___lwdiv (ARG)
             ___lwtofl (ARG)
               ___flpack
               ___lwdiv (ARG)
             _frexp (ARG)
         ___fltol
           ___fladd (ARG)
             ___awtofl (ARG)
               ___flpack
             ___flmul (ARG)
               ___awtofl (ARG)
                 ___flpack
               ___flpack (ARG)
               _frexp (ARG)
             ___flpack (ARG)
             ___lwdiv (ARG)
             ___lwtofl (ARG)
               ___flpack
               ___lwdiv (ARG)
             _frexp (ARG)
           ___lwdiv (ARG)
           ___lwtofl (ARG)
             ___flpack
             ___lwdiv (ARG)
         _eval_poly
           ___fladd
             ___awtofl (ARG)
               ___flpack
             ___flmul (ARG)
               ___awtofl (ARG)
                 ___flpack
               ___flpack (ARG)
               _frexp (ARG)
             ___flpack (ARG)
             ___lwdiv (ARG)
             ___lwtofl (ARG)
               ___flpack
               ___lwdiv (ARG)
             _frexp (ARG)
           ___flmul
             ___awtofl (ARG)
               ___flpack
             ___flpack (ARG)
             _frexp (ARG)
         _floor
           ___altofl
             ___flpack
             ___fltol (ARG)
               ___fladd (ARG)
                 ___awtofl (ARG)
                   ___flpack
                 ___flmul (ARG)
                   ___awtofl (ARG)
                     ___flpack
                   ___flpack (ARG)
                   _frexp (ARG)
                 ___flpack (ARG)
                 ___lwdiv (ARG)
                 ___lwtofl (ARG)
                   ___flpack
                   ___lwdiv (ARG)
                 _frexp (ARG)
               ___lwdiv (ARG)
               ___lwtofl (ARG)
                 ___flpack
                 ___lwdiv (ARG)
           ___fladd
             ___awtofl (ARG)
               ___flpack
             ___flmul (ARG)
               ___awtofl (ARG)
                 ___flpack
               ___flpack (ARG)
               _frexp (ARG)
             ___flpack (ARG)
             ___lwdiv (ARG)
             ___lwtofl (ARG)
               ___flpack
               ___lwdiv (ARG)
             _frexp (ARG)
           ___flge
           ___fltol
             ___fladd (ARG)
               ___awtofl (ARG)
                 ___flpack
               ___flmul (ARG)
                 ___awtofl (ARG)
                   ___flpack
                 ___flpack (ARG)
                 _frexp (ARG)
               ___flpack (ARG)
               ___lwdiv (ARG)
               ___lwtofl (ARG)
                 ___flpack
                 ___lwdiv (ARG)
               _frexp (ARG)
             ___lwdiv (ARG)
             ___lwtofl (ARG)
               ___flpack
               ___lwdiv (ARG)
           _frexp
         _ldexp
           _eval_poly (ARG)
             ___fladd
               ___awtofl (ARG)
                 ___flpack
               ___flmul (ARG)
                 ___awtofl (ARG)
                   ___flpack
                 ___flpack (ARG)
                 _frexp (ARG)
               ___flpack (ARG)
               ___lwdiv (ARG)
               ___lwtofl (ARG)
                 ___flpack
                 ___lwdiv (ARG)
               _frexp (ARG)
             ___flmul
               ___awtofl (ARG)
                 ___flpack
               ___flpack (ARG)
               _frexp (ARG)
         _log (ARG)
           ___awtofl
             ___flpack
           ___fladd
             ___awtofl (ARG)
               ___flpack
             ___flmul (ARG)
               ___awtofl (ARG)
                 ___flpack
               ___flpack (ARG)
               _frexp (ARG)
             ___flpack (ARG)
             ___lwdiv (ARG)
             ___lwtofl (ARG)
               ___flpack
               ___lwdiv (ARG)
             _frexp (ARG)
           ___flmul
             ___awtofl (ARG)
               ___flpack
             ___flpack (ARG)
             _frexp (ARG)
           _eval_poly
             ___fladd
               ___awtofl (ARG)
                 ___flpack
               ___flmul (ARG)
                 ___awtofl (ARG)
                   ___flpack
                 ___flpack (ARG)
                 _frexp (ARG)
               ___flpack (ARG)
               ___lwdiv (ARG)
               ___lwtofl (ARG)
                 ___flpack
                 ___lwdiv (ARG)
               _frexp (ARG)
             ___flmul
               ___awtofl (ARG)
                 ___flpack
               ___flpack (ARG)
               _frexp (ARG)
           _frexp
       _log (ARG)
         ___awtofl
           ___flpack
         ___fladd
           ___awtofl (ARG)
             ___flpack
           ___flmul (ARG)
             ___awtofl (ARG)
               ___flpack
             ___flpack (ARG)
             _frexp (ARG)
           ___flpack (ARG)
           ___lwdiv (ARG)
           ___lwtofl (ARG)
             ___flpack
             ___lwdiv (ARG)
           _frexp (ARG)
         ___flmul
           ___awtofl (ARG)
             ___flpack
           ___flpack (ARG)
           _frexp (ARG)
         _eval_poly
           ___fladd
             ___awtofl (ARG)
               ___flpack
             ___flmul (ARG)
               ___awtofl (ARG)
                 ___flpack
               ___flpack (ARG)
               _frexp (ARG)
             ___flpack (ARG)
             ___lwdiv (ARG)
             ___lwtofl (ARG)
               ___flpack
               ___lwdiv (ARG)
             _frexp (ARG)
           ___flmul
             ___awtofl (ARG)
               ___flpack
             ___flpack (ARG)
             _frexp (ARG)
         _frexp
   _send_data
     _CANisTxReady
     _CANsendMessage

 _ISR_bassa (ROOT)
   _CANisRxReady
   _CANreceiveMessage

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             CFF      0       0      31        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100     19      29       7       16.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     5F      9F       5       99.4%
BITCOMRAM           5F      0       2       0        2.1%
COMRAM              5F     22      41       1       68.4%
BITSFR_3             0      0       0      40        0.0%
SFR_3                0      0       0      40        0.0%
BITSFR_2             0      0       0      40        0.0%
SFR_2                0      0       0      40        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     109      20        0.0%
DATA                 0      0     109       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.34 build -361300703 
Symbol Table                                                                                   Tue Jun 07 19:27:26 2016

                   ___altofl@sign 0098                      ___fldiv@cntr 0076  
            __end_of_CANSetFilter 1878                      ___fldiv@sign 0078  
                    ___awdiv@sign 006B                                _id 0023  
                              bsr 000FE0               ___wmul@multiplicand 0062  
                     __CFG_BORV$3 000000                    _SetOutputEPWM1 4BFA  
                    __CFG_CP0$OFF 000000                      __CFG_CP1$OFF 000000  
                    __CFG_CP2$OFF 000000                      __CFG_CP3$OFF 000000  
                     __CFG_OSC$HS 000000                      __CFG_CP4$OFF 000000  
                    __CFG_CP5$OFF 000000                      ___flpack@arg 0060  
                    ___flpack@exp 0064              _previousTimeCounter1 00CF  
            _previousTimeCounter2 00D3                               l400 1DA6  
            _previousTimeCounter3 0027                               l401 1EA0  
                             l410 1F70                               l402 1E2E  
                             l403 1E38                               l404 1E42  
                             l405 1E4C                               l510 15E8  
                             l502 15A8                               l503 15AC  
                             l408 1F60                               l520 16FC  
                             l504 15B8                               l440 2D14  
                             l409 1F64                               l521 1708  
                             l513 16C8                               l505 15BC  
                             l441 2D18                               l370 188E  
                             l530 1818                               l514 16CC  
                             l506 15C8                               l450 2E24  
                             l442 2D24                               l371 1892  
                             l531 181C                               l515 16D8  
                             l507 15CC                               l451 2E30  
                             l443 2D28                               l380 1A50  
                             l372 198C                               l532 1828  
                             l524 17E8                               l516 16DC  
                             l508 15D8                               l452 2E34  
                             l444 2D34                               l364 39B2  
                             l381 1A5C                               l373 191A  
                             l525 17EC                               l517 16E8  
                             l509 15DC                               l453 2E40  
                             l445 2D38                               l365 39BC  
                             l390 1BB8                               l374 1924  
                             l526 17F8                               l518 16EC  
                             l470 124E                               l454 2E44  
                             l446 2D44                               l438 2D04  
                             l391 1BC2                               l375 192E  
                             l527 17FC                               l519 16F8  
                             l471 125A                               l455 2E50  
                             l439 2D08                               l384 1D8C  
                             l376 1938                               l528 1808  
                             l480 1368                               l472 125E  
                             l456 2E54                               l385 1B18  
                             l369 1B02                               l529 180C  
                             l481 136C                               l473 126A  
                             l457 2E60                               l449 2E20  
                             l562 4E88                               l394 1CD6  
                             l386 1B1C                               l482 1378  
                             l474 126E                               l395 1CDA  
                             l387 1C16                               l379 1A4C  
                             l491 1488                               l483 137C  
                             l475 127A                               l804 4EAC  
                             l396 1CE6                               l388 1BA4  
                             l492 148C                               l484 1388  
                             l476 127E                               l805 4EAE  
                             l389 1BAE                               l741 49D6  
                             l493 1498                               l485 138C  
                             l477 128A                               l469 124A  
                             l494 149C                               l486 1398  
                             l734 4C9A                               l399 1DA2  
                             l495 14A8                               l487 139C  
                             l575 4E02                               l744 4A62  
                             l752 49CE                               l496 14AC  
                             l488 13A8                               l736 4C96  
                             l497 14B8                               l498 14BC  
                             l499 14C8                               l683 3080  
                             l757 49CA                               l693 315E  
                             l790 4C42                               l856 4E60  
                    __CFG_CPB$OFF 000000                               _PR2 000FCB  
                    __CFG_CPD$OFF 000000                               _abs 4E3E  
                             _dir 00FD                               _exp 31F6  
                             _log 3C3C                               _msg 00E6  
                             _pow 36EE                               prod 000FF3  
                             wreg 000FE8                      ___flmul@cntr 007C  
                    ___flmul@sign 007D                      __CFG_LVP$OFF 000000  
                   ___flpack@sign 0065                      ___fltol@exp1 0093  
                    __CFG_WDT$OFF 000000                              l1041 3B60  
                            ?_abs 0060                              l1061 3500  
                            l1063 352E                              l1048 3BC2  
                            l1072 361A                              l1049 3BDA  
                            l1057 34C2                              l1331 4AE0  
                            l1403 43C2                              l1097 46AE  
                            l1373 38DC                              l1392 32F0  
                            l1368 373E                              l1393 3470  
                            l6023 15EE                              l5321 3B02  
                            l5401 35F8                              l6113 3C60  
                            l6211 39AA                              l5331 3BB2  
                            l5323 3B42                              l5315 3ADA  
                            l5411 366A                              l5403 360A  
                            l6029 1636                              l6213 39C0  
                            l6205 3954                              l5341 3C28  
                            l5421 36BE                              l6141 3268  
                            l6063 1756                              l5319 3AF0  
                            l5407 3642                              l5431 3DE0  
                            l5511 446A                              l6135 321E  
                            l6119 3C92                              l6057 170E  
                            l6217 39C8                              l5329 3BA0  
                            l5353 4BC8                              l5521 449C  
                            l6091 182E                              l6219 3A0C  
                            l5363 34D4                              l5523 44AE  
                            l5515 447E                              l6147 32B2  
                            l6333 1BCE                              l5461 3EA6  
                            l5453 3E7E                              l5437 3E06  
                            l5525 44BC                              l5541 4808  
                            l5607 4CBC                              l5615 4D58  
                            l5391 35AA                              l5383 3566  
                            l5375 3524                              l5471 3EEE  
                            l6503 3752                              l6409 1E58  
                            l6353 1CCA                              l6257 1944  
                            l6601 476C                              l5721 2C78  
                            l5705 2BC0                              l5393 35BA  
                            l5369 3512                              l5465 3ECE  
                            l5449 3E56                              l5529 44DA  
                            l5633 4306                              l6169 3438  
                            l6521 3830                              l6435 1F76  
                            l6283 1A62                              l5803 0E0E  
                            l5395 35C6                              l5459 3E9E  
                            ?_exp 00A3                              l6429 1F54  
                            l6277 1A40                              l6613 47AE  
                            l5821 0EC8                              l6541 41AC  
                            l5565 3F6A                              l5389 3598  
                            l5645 4544                              l5485 46FA  
                            l5637 4328                              l5629 42F2  
                            l6517 3800                              l6509 377A  
                            ?_log 009A                              l6359 1CEC  
                            l6199 3944                              l6631 4A9E  
                            l5559 3F44                              l5647 45EA  
                            l5479 465C                              l5495 43FA  
                            l5663 40E4                              l5655 407C  
                            l6617 47C4                              l6609 479E  
                            l5921 1290                              l5753 2D92  
                            l6481 4C30                              l6553 41FA  
                            l5585 4010                              l5577 3FBA  
                            l5681 4172                              l6801 20A0  
                            l5747 2D4A                              l6555 420C  
                            l6547 41CC                              l6627 4A86  
                            l5675 4118                              l6477 4C20  
                            l6469 4DF6                              l6573 429E  
                            l6565 426C                              l6557 4216  
                            l6629 4A94                              l5589 4024  
                            l5597 4B12                              l6821 2160  
                            l6813 211C                              l6591 4736  
                            l5687 4EBC                              l5927 12D8  
                            l5839 0F84                              l6639 4AD0  
                            l5679 412E                              l6585 471E  
                            l5961 13F6                              l5857 1040  
                            l6569 4280                              l6841 2382  
                            l6817 2146                              l6921 2EEE  
                            l5955 13AE                              l5875 10FC  
                            l5779 2E66                              l6835 22DE  
                            l6931 2F78                              l6597 4754  
                            l5893 11B8                              l6853 2536  
                            l6829 223A                              l6599 4762  
                            l6767 495A                              l6855 2542  
                            l6847 2436                              l6943 3064  
                            l6777 49A0                              l6865 25C6  
                            l6961 30D0                              l6953 3084  
                            l6937 2F84                              l6929 2F68  
                            l5995 1516                              l6859 25A0  
                            l6787 2030                              l6875 4C8A  
                            l6971 3144                              l6955 3094  
                            l5989 14CE                              l6797 2086  
                            l6949 3078                              l6887 4A26  
                            l6967 310C                              l6975 3148  
                            l6977 3170                              ?_pow 00AE  
                            _LATA 000F89                              _LATB 000F8A  
                            _LATC 000F8B                              _LATD 000F8C  
                            _LATE 000F8D                              u7100 2BF2  
                            u7105 2BE6                              u7115 2C52  
                            u7300 0D88                              u7060 2B3A  
                            u7305 0D7C                              u7065 2B2E  
                            u8050 32BC                              u7315 0DE8  
                            u7075 2B9A                              u8220 1964  
                            u7500 1132                              u7420 0FBA  
                            u7340 0E42                              u8060 32BE  
                            u8230 19B0                              u7270 2E86  
                            u7190 2D6A                              u9040 24A6  
                            u8225 1958                              u7505 1126  
                            u7425 0FAE                              u7345 0E36  
                            u8235 19A4                              u7515 1192  
                            u7435 101A                              u7355 0EA2  
                            u7275 2E7A                              u7195 2D5E  
                            u7460 1076                              u7380 0EFE  
                            u9060 258C                              u8245 1A10  
                            u8350 1BEE                              u8360 1C3A  
                            u9160 2F62                              u8505 1F24  
                            u7465 106A                              u7385 0EF2  
                            u8355 1BE2                              u7475 10D6  
                            u7395 0F5E                              u6860 483A  
                            u8365 1C2E                              u7910 172E  
                            u7830 160E                              u7750 14EE  
                            u7670 13CE                              u7590 12B0  
                            u6790 441A                              u6950 4316  
                            u8375 1C9A                              u8615 4CF6  
                            u8480 1E78                              u9280 31DC  
                            u8490 1EC4                              u7915 1722  
                            u7835 1602                              u7755 14E2  
                            u7675 13C2                              u7595 12A4  
                            u6795 440E                              u6868 483E  
                            u8485 1E6C                              u6990 40AE  
                            u8670 37E2                              u8495 1EB8  
                            u9297 4DF8                              u7990 184E  
                            u6998 40B2                              u8970 2102  
                            u7995 1842                              _TMR2 000FCC  
             __size_of_CANSetMask 03AA                              abs@a 0060  
                            _main 2EB0                              fsr0h 000FEA  
                            fsr1h 000FE2                              fsr0l 000FE9  
                            fsr2h 000FDA                              indf1 000FE7  
                            fsr1l 000FE1                              indf2 000FDF  
                            fsr2l 000FD9                              exp@x 00A3  
                            log@x 009A                              pclat 000FFA  
                            pow@x 00AE                              pow@y 00B2  
                            prodh 000FF4                              prodl 000FF3  
                            start 0182                     __CFG_IESO$OFF 000000  
                   __CFG_MCLRE$ON 000000                      ___param_bank 000010  
                _CANOperationMode 4EB2            __end_of_SetOutputEPWM1 4C4E  
                           ??_abs 0062                             ??_exp 00A7  
                           ??_log 009E                             ??_pow 00B6  
      __size_of_CANreceiveMessage 052E                     ___fltol@sign1 0092  
                 __end_of___aldiv 42B2                   __end_of___fladd 36EE  
                           ?_main 0001                   __end_of___fldiv 4054  
                 __end_of___awdiv 47D0                   __end_of___flneg 4D6C  
                 __end_of___flmul 3F1E                   __end_of___flsub 4B4A  
                 __end_of___fltol 44EE                   ___awdiv@divisor 0068  
                           _T2CON 000FCA                             _T3CON 000FB1  
                 __end_of___lwdiv 4AEA                             i1l416 2884  
                           i1l567 4EDC                             i1l671 013C  
                           i1l664 0064                   ___awdiv@counter 006A  
                           _TMR3H 000FB3                             _TMR3L 000FB2  
               _CANisRxReady$3007 0001                             _TRISA 000F92  
                           _TRISB 000F93                             _TRISC 000F94  
                           _TRISD 000F95                             _TRISE 000F96  
                   __CFG_PWRT$OFF 000000                     __CFG_WRT0$OFF 000000  
                   __CFG_WRT1$OFF 000000                     __CFG_WRT2$OFF 000000  
                   __CFG_WRT3$OFF 000000                     __CFG_WRT4$OFF 000000  
              __size_of_ISR_bassa 016A                     __CFG_WRT5$OFF 000000  
                  __CFG_EBTR0$OFF 000000                    __CFG_FCMEN$OFF 000000  
                  __CFG_EBTR1$OFF 000000                CANInitialize@flags 0072  
                  __CFG_EBTR2$OFF 000000                     ___awtofl@sign 006E  
                  __CFG_EBTR3$OFF 000000                    __CFG_EBTR4$OFF 000000  
                  __CFG_EBTR5$OFF 000000                     __CFG_WRTB$OFF 000000  
                   __CFG_WRTC$OFF 000000                     __CFG_WRTD$OFF 000000  
                  __CFG_EBTRB$OFF 000000                             _vBatt 0033  
                           _floor 42B2                             _ldexp 4054  
                           _frexp 47D0                             _errno 00DB  
                           _rampe 2018                    __pbitbssCOMRAM 01F8  
            __end_of_CANisRxReady 4EE2                             tablat 000FF5  
            __end_of_CANisTxReady 4E90                             pow@yi 0109  
                           status 000FD8                       exp@exponent 00AB  
                      _SetDCEPWM1 4CEC                       ldexp@newexp 009E  
                 __initialization 4B4A                       log@exponent 009E  
        __size_of_battery_measure 0096                      __end_of_main 31F6  
                 ?_SetOutputEPWM1 0060                            ??_main 0111  
                   __activetblptr 000003                 _CANisTxReady$3005 0060  
                   _counter_array 0119                            ?_floor 0099  
                          ?_ldexp 009A                            ?_frexp 0060  
                __end_of___altofl 4BFA                            _CANCON 000F6F  
                          _ADRESH 000FC4                            ?_rampe 0001  
                __end_of___flpack 3C3C                  ___awdiv@dividend 0066  
                __end_of___awtofl 4CEC                   __CFG_BBSIZ$1024 000000  
                __end_of___lltofl 4DD8                            i1l5161 006C  
                          i1l5171 00A2                            i1l5181 00D2  
                          i1l5175 00AA                            i1l5191 0118  
                          i1l4811 27EA                            i1l5195 011E  
                          i1l5189 0114                            i1l4823 284A  
                          i1l4815 280A                            i1l4807 27CA  
                          i1l4825 287E                            i1l4761 25E4  
                          i1l4819 282A                        _OpenTimer2 4E90  
                          i1l4861 29E4                            i1l4765 25EC  
                          i1l4881 2AAE                            i1l4873 2A72  
                          i1l4885 2ACC                            i1l4877 2A90  
                          i1l4869 2A54                            i1l4887 2B00  
                          i1l4799 2758                  __end_of___lwtofl 4E3E  
                          _RXB0D0 000F66                            _RXB0D1 000F67  
                          _RXB0D2 000F68                            _RXB0D3 000F69  
                          _RXB0D4 000F6A                            _RXB1D0 000F56  
                          _RXB0D5 000F6B                            _RXB1D1 000F57  
                          _RXB0D6 000F6C                            _RXB1D2 000F58  
                          _RXB0D7 000F6D                            _RXB1D3 000F59  
                          _RXB1D4 000F5A                            _RXB1D5 000F5B  
                          _RXB1D6 000F5C                            _RXB1D7 000F5D  
                          _TXB0D0 000F46                            _TXB0D1 000F47  
                          _TXB0D2 000F48                            _TXB0D3 000F49  
                          _TXB1D0 000F36                            _TXB0D4 000F4A  
                          _TXB1D1 000F37                            _TXB0D5 000F4B  
                          _TXB1D2 000F38                            _TXB0D6 000F4C  
                          _TXB1D3 000F39                            _TXB0D7 000F4D  
                          _TXB2D0 000F26                            _TXB1D4 000F3A  
                          _TXB2D1 000F27                            _TXB1D5 000F3B  
                          _TXB2D2 000F28                            _TXB1D6 000F3C  
                          _TXB2D3 000F29                            _TXB1D7 000F3D  
                          _TXB2D4 000F2A                            _TXB2D5 000F2B  
                          _TXB2D6 000F2C                            _TXB2D7 000F2D  
              CANsendMessage@data 0064                CANsendMessage@tamp 006C  
                __end_of_delay_ms 4E0C             __size_of_CANSetFilter 0B2A  
                  __CFG_XINST$OFF 000000                __size_of_OpenEPWM1 0012  
               __end_of_ISR_bassa 0182                            ___flge 4608  
                       ??___aldiv 0068                         ??___fladd 0086  
                          ___wmul 4D6C                         ??___fldiv 0072  
                       ??___awdiv 006A                         ??___flneg 0064  
                  __CFG_STVREN$ON 000000                         ??___flmul 0077  
                       ??___flsub 0092                         ??___fltol 008E  
                       ??___lwdiv 0064                      ??_CANSetMask 0065  
                          _errore 00DD                  OpenTimer2@config 0060  
                          clear_0 4B50                            clear_1 4B5C  
                          clear_2 4B6C                  ___awdiv@quotient 006C  
        ?_configurazione_iniziale 0001                            floor@i 009D  
                          floor@x 0099                   __CFG_BOREN$BOHW 000000  
                    __pdataCOMRAM 0041                      __mediumconst 0000  
                          tblptrh 000FF7                            tblptrl 000FF6  
                          tblptru 000FF8                      _CANSetFilter 0D4E  
                      ___fladd@f1 007E                        ___fladd@f2 0082  
                      ___flge@ff1 0060                        ___flge@ff2 0064  
                __end_ofexp@coeff 0D29                  __end_oflog@coeff 0D4D  
                      ___altofl@c 0094                        ___fldiv@f1 006A  
                      ___fldiv@f2 006E                        ___fldiv@f3 0072  
                      __accesstop 0060           __end_of__initialization 4B9C  
              __end_of_CANSetMask 2EB0                   __CFG_PBADEN$OFF 000000  
                      ___flneg@f1 0060                        ___flmul@f1 006F  
                      ___flmul@f2 0073                      eval_poly@res 0096  
                   ___rparam_used 000001                        ___flsub@f1 008A  
                      ___flsub@f2 008E                        ___fltol@f1 008A  
                      ___awtofl@c 006A                       ?_SetDCEPWM1 0060  
                  __pcstackCOMRAM 0001                      __pidataBANK0 4EF4  
                      ___lltofl@c 006A                     __end_of_floor 43D4  
                   __end_of_ldexp 4186                     __end_of_frexp 4886  
                   __end_of_rampe 25D8                        ___lwtofl@c 006A  
               ??_battery_measure 0070             CANSetFilter@numBuffer 0069  
                 OpenEPWM1@period 0060             __size_of_CANisRxReady 0018  
           __size_of_CANisTxReady 0026                 __end_of_OpenEPWM1 4EF4  
                         ??_floor 009D                           ??_ldexp 00A0  
                         ??_frexp 0066                           ??_rampe 00B6  
        __end_of_CANOperationMode 4ECA                        __pbssBANK0 00BF  
                      __pbssBANK1 0119                       ?_OpenTimer2 0001  
              __size_of_eval_poly 011A                        _data_array 0037  
         __size_of_CANsendMessage 07A0          __size_of_can_interpreter 009C  
                         ?___flge 0060                           ?___wmul 0060  
              __size_of_send_data 0052                         ?___altofl 0094  
                       ?___flpack 0060                      _CANisRxReady 4ECA  
                         _ECCPR1L 000FBB                           _CANSTAT 000F6E  
                       ?___awtofl 006A                      _CANisTxReady 4E6A  
                       ?___lltofl 006A                           _BRGCON1 000F70  
                         _BRGCON2 000F71                           _BRGCON3 000F72  
                       ?___lwtofl 006A            __size_of_CANInitialize 01CE  
                       ?_delay_ms 0066                           _RXB0DLC 000F65  
                         _RXB1DLC 000F55                           _RXB0CON 000F60  
             __size_of_SetDCEPWM1 0044                           _RXB1CON 000F50  
                         _TXB0DLC 000F45                           _TXB1DLC 000F35  
                         _TXB2DLC 000F25               CANsendMessage@flags 0067  
                _data_array_debug 00F5          SetOutputEPWM1@outputmode 0060  
                      _correzione 00BF                  ??_SetOutputEPWM1 0061  
                         __Hparam 0000                        _left_speed 00DF  
                         __Lparam 0000                  delay_ms@value_ms 0066  
                         ___aldiv 4186                   __size_of___flge 00F8  
                         ___fladd 3482                           ___fldiv 3F1E  
                         ___awdiv 4700                           ___flneg 4D30  
                         ___flmul 3DBA                           ___flsub 4AEA  
                         ___fltol 43D4                   __size_of___wmul 0038  
                         ___lwdiv 4A68                        _rampe$4018 010D  
                    __psmallconst 0D00                        ??___altofl 0098  
                      ??___flpack 0066              CANInitialize@propSeg 0077  
                         __pcinit 4B4A                        ??___awtofl 006E  
               __end_of_eval_poly 4608                           __ramtop 0D00  
             __size_of_OpenTimer2 0022                        ??___lltofl 006E  
                         __ptext0 2EB0                           __ptext1 4C4E  
                         __ptext2 2018                           __ptext3 36EE  
                         __ptext4 3C3C                           __ptext5 31F6  
                         __ptext6 4054                           __ptext7 42B2  
                         __ptext8 47D0                           __ptext9 43D4  
                      ??___lwtofl 006E                         _T2CONbits 000FCA  
                    __size_of_abs 002C                           _current 0035  
                    __size_of_exp 028C                      __size_of_log 017E  
                    __size_of_pow 0200                        _duty_cycle 0031  
                ___aldiv@dividend 0060                        ??_delay_ms 0068  
                       _ECU_error 01F8            CANreceiveMessage@error 000B  
            end_of_initialization 4B9C                           exp@sign 00AD  
               __end_of_send_data 4CA0                     _CANInitialize 38EE  
                         pow@sign 0108                  ___aldiv@quotient 006A  
                         postdec2 000FDD                           postinc0 000FEE  
                         postinc2 000FDE                         _ISR_bassa 0018  
               ??_can_interpreter 0060                         _PORTAbits 000F80  
                  CANSetMask@mask 0060                         _PORTCbits 000F82  
                  CANSetMask@tamp 006A                    _centralina_abs 01FA  
                  CANSetMask@type 0064                         _TRISDbits 000F95  
                     ___fldiv@exp 0077  __size_of_configurazione_iniziale 00B0  
             _previousTimeCounter 00CB           _clock_counter_reference 002F  
                     ___flmul@exp 0077                    _CANsendMessage 1878  
                CANInitialize@BRP 0071                  CANInitialize@SJW 0070  
                  ?_CANInitialize 006E                        main@period 00BE  
                    ??_SetDCEPWM1 0062                   _battery_measure 49D2  
                  __end_of___flge 4700                        ?_ISR_bassa 0001  
                  __end_of___wmul 4DA4                     __pidataCOMRAM 4EF6  
                      floor@expon 00A1               start_initialization 4B4A  
                      eval_poly@d 008E                        eval_poly@n 0090  
                      eval_poly@x 008A                        ldexp@value 009A  
                     __end_of_abs 4E6A                       __end_of_exp 3482  
                     __end_of_log 3DBA                       __end_of_pow 38EE  
              __end_of_SetDCEPWM1 4D30               CANSetMask@numBuffer 0069  
          __end_of_CANsendMessage 2018                 ?_CANOperationMode 0001  
                    ??_OpenTimer2 0060                         _OpenEPWM1 4EE2  
                      frexp@value 0060                ??_CANOperationMode 0060  
      CANInitialize@FilterConfig1 0078        CANInitialize@FilterConfig2 0079  
                        ??___flge 0068                          ??___wmul 0064  
                     __pdataBANK0 00FD                  __CFG_LPT1OSC$OFF 000000  
              __end_of_OpenTimer2 4EB2                 __size_of___altofl 0058  
               __size_of___flpack 0180            CANInitialize@phaseSeg1 006E  
          CANInitialize@phaseSeg2 006F                 __size_of___awtofl 004C  
               __size_of___lltofl 0034                       __pbssCOMRAM 0023  
               __size_of___lwtofl 0032                     __pcstackBANK0 0060  
                   __pcstackBANK1 0100                       _BRGCON2bits 000F71  
                     _BRGCON3bits 000F72               SetDCEPWM1@dutycycle 0060  
               __size_of_delay_ms 0034                   ?_CANsendMessage 0060  
                      ?_OpenEPWM1 0001           __end_of_battery_measure 4A68  
                 ??_CANInitialize 0073                         _can_retry 01F9  
                    _currentSpeed 00C3                CANSetFilter@filter 0060  
                ___lwdiv@dividend 0060                         _ecu_cycle 00E5  
                        ?___aldiv 0060                          ?___fladd 007E  
                        ?___fldiv 006A                          ?___awdiv 0066  
                        ?___flneg 0060                          ?___flmul 006F  
                        ?___flsub 008A                          ?___fltol 008A  
                        ?___lwdiv 0060                       ??_ISR_bassa 000D  
                     __pintcodelo 0018                       __smallconst 0D00  
                        _ECCP1CON 000FBA                       _COMSTATbits 000F74  
      SetOutputEPWM1@outputconfig 0061                         _eval_poly 44EE  
                      ISR_bassa@i 0022                     _remote_frame1 0200  
                ___lwdiv@quotient 0065           _configurazione_iniziale 4886  
                  __size_of_floor 0122                    __size_of_ldexp 0132  
                  __size_of_frexp 00B6                    __size_of_rampe 05C0  
                    _message_sent 01FD                   ___aldiv@divisor 0064  
           CANreceiveMessage@tamp 000C                   ___aldiv@counter 0068  
                  ___wmul@product 0064                   _can_interpreter 4936  
                        _IPR2bits 000FA2      _delay_quartz_frequency_value 0041  
                        _PIE1bits 000F9D                          _IPR3bits 000FA5  
                        _PIE2bits 000FA0                         _send_data 4C4E  
                        _PIE3bits 000FA3                          i1u624_25 008C  
                        i1u624_26 008E                          i1u580_25 296A  
                        i1u566_20 2698                          i1u566_26 269A  
                        i1u567_20 26C6                          i1u575_25 2856  
                        i1u567_26 26C8                          i1u577_20 292C  
                        i1u569_25 26DC                          i1u577_26 292E  
                        _PIR1bits 000F9E                          i1u578_20 2956  
                        i1u586_25 2AD8                          i1u578_26 2958  
                        _PIR2bits 000FA1                          _PIR3bits 000FA4  
                        _RXB0EIDH 000F63                          _RXB0EIDL 000F64  
                        _RXB1EIDH 000F53                          _RXB1EIDL 000F54  
                        _RCONbits 000FD0                  __CFG_WDTPS$32768 000000  
                        _RXB0SIDH 000F61                         _scrittura 0036  
                        _RXB0SIDL 000F62                          _RXF0EIDH 000F02  
                        _RXB1SIDH 000F51                          _RXF0EIDL 000F03  
                        _RXB1SIDL 000F52                          _RXF1EIDH 000F06  
                        _RXF1EIDL 000F07                          _RXF2EIDH 000F0A  
                        _RXF2EIDL 000F0B                          _RXF3EIDH 000F0E  
                        _RXF3EIDL 000F0F                          _RXF4EIDH 000F12  
                        _RXF4EIDL 000F13                          _RXF5EIDH 000F16  
                        _RXF5EIDL 000F17                          _RXF0SIDH 000F00  
                        _RXF0SIDL 000F01                          _TXB0EIDH 000F43  
                        _RXF1SIDH 000F04                          _TXB0EIDL 000F44  
                        _RXF1SIDL 000F05                          _TXB1EIDH 000F33  
                        _RXF2SIDH 000F08                          _TXB1EIDL 000F34  
                        _RXF2SIDL 000F09                          _TXB2EIDH 000F23  
                        _RXF3SIDH 000F0C                          _TXB2EIDL 000F24  
                        _RXF3SIDL 000F0D                          _RXF4SIDH 000F10  
                        _RXF4SIDL 000F11                          _RXF5SIDH 000F14  
                        _RXF5SIDL 000F15                          _RXM0EIDH 000F1A  
                        _RXM0EIDL 000F1B                          _TXB0SIDH 000F41  
                        _RXM1EIDH 000F1E                          _TXB0SIDL 000F42  
                        _RXM1EIDL 000F1F                          _TXB1SIDH 000F31  
                        _TXB1SIDL 000F32                          _TXB2SIDH 000F21  
                        _TXB2SIDL 000F22                          _RXM0SIDH 000F18  
                        _RXM0SIDL 000F19                          _RXM1SIDH 000F1C  
                        _RXM1SIDL 000F1D                          _RXERRCNT 000F75  
                        _TXERRCNT 000F76                        _ADCON0bits 000FC2  
                      _ADCON1bits 000FC1                        _ADCON2bits 000FC0  
               ___wmul@multiplier 0060                        ?_eval_poly 008A  
                   ?_CANSetFilter 0060                        _CANCONbits 000F6F  
                     ??_OpenEPWM1 0060                  ?_battery_measure 0001  
                       frexp@eptr 0064                        ?_send_data 0001  
                        __Hrparam 0000                      _RXB0SIDLbits 000F62  
                SetDCEPWM1@DCycle 0064                          __Lrparam 0000  
                    _RXB1SIDLbits 000F52                _centralina_comando 01FB  
                __size_of___aldiv 012C                  __size_of___fladd 026C  
                      _CANSetMask 2B06                  __size_of___fldiv 0136  
                __size_of___awdiv 00D0                  __size_of___flneg 003C  
                __size_of___flmul 0164                  __size_of___flsub 0060  
                __size_of___fltol 011A                          ___altofl 4BA2  
                        ___flpack 3ABC                  __size_of___lwdiv 0082  
                        ___awtofl 4CA0           __size_of_SetOutputEPWM1 0054  
                        ___lltofl 4DA4                          ___lwtofl 4E0C  
              _currentSpeed_array 0121                          _exp$4021 00A7  
       ??_configurazione_iniziale 007A                      _RXF0SIDLbits 000F01  
                        _delay_ms 4DD8                   ___lwdiv@divisor 0062  
                    _RXF1SIDLbits 000F05                   ___lwdiv@counter 0064  
                  ??_CANSetFilter 0065                          __ptext10 4608  
                        __ptext11 4BA2                          __ptext20 4E3E  
                        __ptext12 44EE                          __ptext21 4E0C  
                        __ptext13 3DBA                          __ptext30 2B06  
                        __ptext22 3ABC                          __ptext14 4AEA  
                        __ptext31 0D4E                          __ptext23 4A68  
                        __ptext15 3482                          __ptext40 4EE2  
                        __ptext32 4EB2                          __ptext24 4186  
                        __ptext16 4D30                          __ptext33 4936  
                        __ptext25 4CEC                          __ptext17 3F1E  
                        __ptext42 25D8                          __ptext34 49D2  
                        __ptext26 4886                          __ptext18 4CA0  
                        __ptext43 4ECA                          __ptext35 4D6C  
                        __ptext27 4DD8                          __ptext19 4DA4  
                        __ptext36 4700                          __ptext28 4BFA  
                        __ptext37 1878                          __ptext29 38EE  
                        __ptext38 4E6A                          __ptext39 4E90  
                    _RXF2SIDLbits 000F09           __end_of_can_interpreter 49D2  
                    _RXF3SIDLbits 000F0D                          _pow$4020 0104  
                        _pow$4019 0100                      _RXF4SIDLbits 000F11  
                   _speed_fetched 0202                      _RXF5SIDLbits 000F15  
        CANsendMessage@dataLength 0066                      _remote_frame 01FF  
                   __size_of_main 0346                          _duty_set 00C7  
            CANreceiveMessage@msg 0001                      _TXB0SIDLbits 000F42  
                     _new_message 01FE                      _TXB1SIDLbits 000F32  
                    _TXB2SIDLbits 000F22         __size_of_CANOperationMode 0018  
                   ?_CANisRxReady 0001                     ?_CANisTxReady 0001  
                     _RXB0DLCbits 000F65                          exp@coeff 0D01  
           ___flmul@f3_as_product 0078                          log@coeff 0D29  
                     _RXB1DLCbits 000F55                      _RXM0SIDLbits 000F19  
                     _RXB0CONbits 000F60                       _RXB1CONbits 000F50  
               _CANreceiveMessage 25D8                      _RXM1SIDLbits 000F1D  
                      _INTCONbits 000FF2                       ??_eval_poly 0092  
                ??_CANsendMessage 0068                      _requestSpeed 002B  
              ?_CANreceiveMessage 0001                      _request_sent 0201  
        CANsendMessage@identifier 0060                          intlevel1 0000  
               _centralina_sterzo 01FC                  CANSetFilter@tamp 006A  
                CANSetFilter@type 0064               ??_CANreceiveMessage 0003  
                     _TXB0DLCbits 000F45                       _right_speed 00E3  
                     _TXB1DLCbits 000F35                       _TXB0CONbits 000F40  
                     ??_send_data 0070                       _TXB2DLCbits 000F25  
 __end_of_configurazione_iniziale 4936                       _TXB1CONbits 000F30  
                     _TXB2CONbits 000F20                       _timeCounter 00D7  
            CANOperationMode@mode 0060                    ??_CANisRxReady 0001  
                     ?_CANSetMask 0060                    ??_CANisTxReady 0060  
       __end_of_CANreceiveMessage 2B06                      ___aldiv@sign 0069  
                ?_can_interpreter 0001                       _previousPwm 00E1  
                    ___fladd@exp1 0089                      ___fladd@exp2 0088  
                    ___fladd@sign 0087             __end_of_CANInitialize 3ABC  
