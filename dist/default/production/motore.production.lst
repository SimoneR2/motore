

Microchip Technology PIC18 LITE Macro Assembler V1.35 build -356382666 
                                                                                               Sat Dec 26 09:48:22 2015

Microchip Technology Omniscient Code Generator v1.35 (Free mode) build 201507080246
     1                           	processor	18F4480
     2                           	fnconf	param0,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	idataBANK0,global,class=CODE,delta=1
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bitbssCOMRAM,global,bit,class=COMRAM,space=1,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    14                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    15                           	psect	text0,global,reloc=2,class=CODE,delta=1
    16                           	psect	text1,global,reloc=2,class=CODE,delta=1
    17                           	psect	text2,global,reloc=2,class=CODE,delta=1
    18                           	psect	text3,global,reloc=2,class=CODE,delta=1
    19                           	psect	text4,global,reloc=2,class=CODE,delta=1
    20                           	psect	text5,global,reloc=2,class=CODE,delta=1
    21                           	psect	text6,global,reloc=2,class=CODE,delta=1
    22                           	psect	text7,global,reloc=2,class=CODE,delta=1
    23                           	psect	text8,global,reloc=2,class=CODE,delta=1
    24                           	psect	text9,global,reloc=2,class=CODE,delta=1
    25                           	psect	text10,global,reloc=2,class=CODE,delta=1
    26                           	psect	text11,global,reloc=2,class=CODE,delta=1
    27                           	psect	text12,global,reloc=2,class=CODE,delta=1
    28                           	psect	text13,global,reloc=2,class=CODE,delta=1
    29                           	psect	text14,global,reloc=2,class=CODE,delta=1
    30                           	psect	text15,global,reloc=2,class=CODE,delta=1
    31                           	psect	text16,global,reloc=2,class=CODE,delta=1
    32                           	psect	text17,global,reloc=2,class=CODE,delta=1
    33                           	psect	text18,global,reloc=2,class=CODE,delta=1
    34                           	psect	text19,global,reloc=2,class=CODE,delta=1
    35                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    36                           	psect	text21,global,reloc=2,class=CODE,delta=1
    37                           	psect	text22,global,reloc=2,class=CODE,delta=1
    38                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    39                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    40                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    41                           	psect	param0,global,class=BANK0,space=1,delta=1
    42                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    43  0000                     
    44                           	psect	idataCOMRAM
    45  002798                     __pidataCOMRAM:
    46                           	opt stack 0
    47                           
    48                           ;initializer for _currentSpeed
    49  002798  01                 	db	1
    50                           
    51                           	psect	idataBANK0
    52  002799                     __pidataBANK0:
    53                           	opt stack 0
    54                           
    55                           ;initializer for _delay_quartz_frequency_value
    56  002799  10                 	db	16
    57  0000                     _RXB1CON	set	3920
    58  0000                     _RXB1CONbits	set	3920
    59  0000                     _RXB1D0	set	3926
    60  0000                     _RXB1D1	set	3927
    61  0000                     _RXB1D2	set	3928
    62  0000                     _RXB1D3	set	3929
    63  0000                     _RXB1D4	set	3930
    64  0000                     _RXB1D5	set	3931
    65  0000                     _RXB1D6	set	3932
    66  0000                     _RXB1D7	set	3933
    67  0000                     _RXB1DLC	set	3925
    68  0000                     _RXB1DLCbits	set	3925
    69  0000                     _RXB1EIDH	set	3923
    70  0000                     _RXB1EIDL	set	3924
    71  0000                     _RXB1SIDH	set	3921
    72  0000                     _RXB1SIDL	set	3922
    73  0000                     _RXB1SIDLbits	set	3922
    74  0000                     _RXF0EIDH	set	3842
    75  0000                     _RXF0EIDL	set	3843
    76  0000                     _RXF0SIDH	set	3840
    77  0000                     _RXF0SIDL	set	3841
    78  0000                     _RXF0SIDLbits	set	3841
    79  0000                     _RXF1EIDH	set	3846
    80  0000                     _RXF1EIDL	set	3847
    81  0000                     _RXF1SIDH	set	3844
    82  0000                     _RXF1SIDL	set	3845
    83  0000                     _RXF1SIDLbits	set	3845
    84  0000                     _RXF2EIDH	set	3850
    85  0000                     _RXF2EIDL	set	3851
    86  0000                     _RXF2SIDH	set	3848
    87  0000                     _RXF2SIDL	set	3849
    88  0000                     _RXF2SIDLbits	set	3849
    89  0000                     _RXF3EIDH	set	3854
    90  0000                     _RXF3EIDL	set	3855
    91  0000                     _RXF3SIDH	set	3852
    92  0000                     _RXF3SIDL	set	3853
    93  0000                     _RXF3SIDLbits	set	3853
    94  0000                     _RXF4EIDH	set	3858
    95  0000                     _RXF4EIDL	set	3859
    96  0000                     _RXF4SIDH	set	3856
    97  0000                     _RXF4SIDL	set	3857
    98  0000                     _RXF4SIDLbits	set	3857
    99  0000                     _RXF5EIDH	set	3862
   100  0000                     _RXF5EIDL	set	3863
   101  0000                     _RXF5SIDH	set	3860
   102  0000                     _RXF5SIDL	set	3861
   103  0000                     _RXF5SIDLbits	set	3861
   104  0000                     _RXM0EIDH	set	3866
   105  0000                     _RXM0EIDL	set	3867
   106  0000                     _RXM0SIDH	set	3864
   107  0000                     _RXM0SIDL	set	3865
   108  0000                     _RXM0SIDLbits	set	3865
   109  0000                     _RXM1EIDH	set	3870
   110  0000                     _RXM1EIDL	set	3871
   111  0000                     _RXM1SIDH	set	3868
   112  0000                     _RXM1SIDL	set	3869
   113  0000                     _RXM1SIDLbits	set	3869
   114  0000                     _TXB0CONbits	set	3904
   115  0000                     _TXB0D0	set	3910
   116  0000                     _TXB0D1	set	3911
   117  0000                     _TXB0D2	set	3912
   118  0000                     _TXB0D3	set	3913
   119  0000                     _TXB0D4	set	3914
   120  0000                     _TXB0D5	set	3915
   121  0000                     _TXB0D6	set	3916
   122  0000                     _TXB0D7	set	3917
   123  0000                     _TXB0DLC	set	3909
   124  0000                     _TXB0DLCbits	set	3909
   125  0000                     _TXB0EIDH	set	3907
   126  0000                     _TXB0EIDL	set	3908
   127  0000                     _TXB0SIDH	set	3905
   128  0000                     _TXB0SIDL	set	3906
   129  0000                     _TXB0SIDLbits	set	3906
   130  0000                     _TXB1CONbits	set	3888
   131  0000                     _TXB1D0	set	3894
   132  0000                     _TXB1D1	set	3895
   133  0000                     _TXB1D2	set	3896
   134  0000                     _TXB1D3	set	3897
   135  0000                     _TXB1D4	set	3898
   136  0000                     _TXB1D5	set	3899
   137  0000                     _TXB1D6	set	3900
   138  0000                     _TXB1D7	set	3901
   139  0000                     _TXB1DLC	set	3893
   140  0000                     _TXB1DLCbits	set	3893
   141  0000                     _TXB1EIDH	set	3891
   142  0000                     _TXB1EIDL	set	3892
   143  0000                     _TXB1SIDH	set	3889
   144  0000                     _TXB1SIDL	set	3890
   145  0000                     _TXB1SIDLbits	set	3890
   146  0000                     _TXB2CONbits	set	3872
   147  0000                     _TXB2D0	set	3878
   148  0000                     _TXB2D1	set	3879
   149  0000                     _TXB2D2	set	3880
   150  0000                     _TXB2D3	set	3881
   151  0000                     _TXB2D4	set	3882
   152  0000                     _TXB2D5	set	3883
   153  0000                     _TXB2D6	set	3884
   154  0000                     _TXB2D7	set	3885
   155  0000                     _TXB2DLC	set	3877
   156  0000                     _TXB2DLCbits	set	3877
   157  0000                     _TXB2EIDH	set	3875
   158  0000                     _TXB2EIDL	set	3876
   159  0000                     _TXB2SIDH	set	3873
   160  0000                     _TXB2SIDL	set	3874
   161  0000                     _TXB2SIDLbits	set	3874
   162  0000                     _ADCON0bits	set	4034
   163  0000                     _ADCON1bits	set	4033
   164  0000                     _ADCON2bits	set	4032
   165  0000                     _ADRESH	set	4036
   166  0000                     _BRGCON1	set	3952
   167  0000                     _BRGCON2	set	3953
   168  0000                     _BRGCON2bits	set	3953
   169  0000                     _BRGCON3	set	3954
   170  0000                     _BRGCON3bits	set	3954
   171  0000                     _CANCON	set	3951
   172  0000                     _CANCONbits	set	3951
   173  0000                     _CANSTAT	set	3950
   174  0000                     _COMSTATbits	set	3956
   175  0000                     _ECCP1CON	set	4026
   176  0000                     _ECCPR1L	set	4027
   177  0000                     _INTCON2bits	set	4081
   178  0000                     _INTCONbits	set	4082
   179  0000                     _IPR2bits	set	4002
   180  0000                     _IPR3bits	set	4005
   181  0000                     _LATA	set	3977
   182  0000                     _LATB	set	3978
   183  0000                     _LATC	set	3979
   184  0000                     _LATD	set	3980
   185  0000                     _LATE	set	3981
   186  0000                     _PIE1bits	set	3997
   187  0000                     _PIE2bits	set	4000
   188  0000                     _PIE3bits	set	4003
   189  0000                     _PIR1bits	set	3998
   190  0000                     _PIR2bits	set	4001
   191  0000                     _PIR3bits	set	4004
   192  0000                     _PORTAbits	set	3968
   193  0000                     _PORTD	set	3971
   194  0000                     _PR2	set	4043
   195  0000                     _RCONbits	set	4048
   196  0000                     _RXB0CON	set	3936
   197  0000                     _RXB0CONbits	set	3936
   198  0000                     _RXB0D0	set	3942
   199  0000                     _RXB0D1	set	3943
   200  0000                     _RXB0D2	set	3944
   201  0000                     _RXB0D3	set	3945
   202  0000                     _RXB0D4	set	3946
   203  0000                     _RXB0D5	set	3947
   204  0000                     _RXB0D6	set	3948
   205  0000                     _RXB0D7	set	3949
   206  0000                     _RXB0DLC	set	3941
   207  0000                     _RXB0DLCbits	set	3941
   208  0000                     _RXB0EIDH	set	3939
   209  0000                     _RXB0EIDL	set	3940
   210  0000                     _RXB0SIDH	set	3937
   211  0000                     _RXB0SIDL	set	3938
   212  0000                     _RXB0SIDLbits	set	3938
   213  0000                     _RXERRCNT	set	3957
   214  0000                     _T2CON	set	4042
   215  0000                     _T2CONbits	set	4042
   216  0000                     _T3CON	set	4017
   217  0000                     _TMR2	set	4044
   218  0000                     _TMR3H	set	4019
   219  0000                     _TMR3L	set	4018
   220  0000                     _TRISA	set	3986
   221  0000                     _TRISB	set	3987
   222  0000                     _TRISC	set	3988
   223  0000                     _TRISD	set	3989
   224  0000                     _TRISDbits	set	3989
   225  0000                     _TRISE	set	3990
   226  0000                     _TXERRCNT	set	3958
   227                           
   228                           ; #config settings
   229  0000                     
   230                           	psect	cinit
   231  0025D0                     __pcinit:
   232                           	opt stack 0
   233  0025D0                     start_initialization:
   234                           	opt stack 0
   235  0025D0                     __initialization:
   236                           	opt stack 0
   237                           
   238                           ; Clear objects allocated to BANK0 (39 bytes)
   239  0025D0  EE00  F091         	lfsr	0,__pbssBANK0
   240  0025D4  0E27               	movlw	39
   241  0025D6                     clear_0:
   242  0025D6  6AEE               	clrf	postinc0,c
   243  0025D8  06E8               	decf	wreg,f,c
   244  0025DA  E1FD               	bnz	clear_0
   245                           
   246                           ; Clear objects allocated to BITCOMRAM (1 bytes)
   247  0025DC  6A47               	clrf	(__pbitbssCOMRAM/(0+8))& (0+255),c
   248                           
   249                           ; Clear objects allocated to COMRAM (41 bytes)
   250  0025DE  EE00  F001         	lfsr	0,__pbssCOMRAM
   251  0025E2  0E29               	movlw	41
   252  0025E4                     clear_1:
   253  0025E4  6AEE               	clrf	postinc0,c
   254  0025E6  06E8               	decf	wreg,f,c
   255  0025E8  E1FD               	bnz	clear_1
   256                           
   257                           ; Initialize objects allocated to BANK0 (1 bytes)
   258                           ; load TBLPTR registers with __pidataBANK0
   259  0025EA  0E99               	movlw	low __pidataBANK0
   260  0025EC  6EF6               	movwf	tblptrl,c
   261  0025EE  0E27               	movlw	high __pidataBANK0
   262  0025F0  6EF7               	movwf	tblptrh,c
   263  0025F2  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   264  0025F4  6EF8               	movwf	tblptru,c
   265  0025F6  0009               	tblrd		*+	;fetch initializer
   266  0025F8  CFF5 F0B8          	movff	tablat,__pdataBANK0
   267                           
   268                           ; Initialize objects allocated to COMRAM (1 bytes)
   269                           ; load TBLPTR registers with __pidataCOMRAM
   270  0025FC  0E98               	movlw	low __pidataCOMRAM
   271  0025FE  6EF6               	movwf	tblptrl,c
   272  002600  0E27               	movlw	high __pidataCOMRAM
   273  002602  6EF7               	movwf	tblptrh,c
   274  002604  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   275  002606  6EF8               	movwf	tblptru,c
   276  002608  0009               	tblrd		*+	;fetch initializer
   277  00260A  CFF5 F048          	movff	tablat,__pdataCOMRAM
   278  00260E                     end_of_initialization:
   279                           	opt stack 0
   280  00260E                     __end_of__initialization:
   281                           	opt stack 0
   282  00260E  9049               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   283  002610  9249               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   284  002612  0E00               	movlw	low (__Lmediumconst shr (0+16))
   285  002614  6EF8               	movwf	tblptru,c
   286  002616  0100               	movlb	0
   287  002618  EFA0  F00C         	goto	_main	;jump to C main() function
   288                           tblptru	equ	0xFF8
   289                           tblptrh	equ	0xFF7
   290                           tblptrl	equ	0xFF6
   291                           tablat	equ	0xFF5
   292                           postinc0	equ	0xFEE
   293                           wreg	equ	0xFE8
   294                           
   295                           	psect	bitbssCOMRAM
   296  000238                     __pbitbssCOMRAM:
   297                           	opt stack 0
   298  000238                     _misura:
   299                           	opt stack 0
   300  000238                     	ds	1
   301  000239                     _remote_frame:
   302                           	opt stack 0
   303  000239                     	ds	1
   304                           tblptru	equ	0xFF8
   305                           tblptrh	equ	0xFF7
   306                           tblptrl	equ	0xFF6
   307                           tablat	equ	0xFF5
   308                           postinc0	equ	0xFEE
   309                           wreg	equ	0xFE8
   310                           
   311                           	psect	bssCOMRAM
   312  000001                     __pbssCOMRAM:
   313                           	opt stack 0
   314  000001                     _counter_array:
   315                           	opt stack 0
   316  000001                     	ds	8
   317  000009                     _counter:
   318                           	opt stack 0
   319  000009                     	ds	4
   320  00000D                     _timeCounter:
   321                           	opt stack 0
   322  00000D                     	ds	4
   323  000011                     _duty_cycle:
   324                           	opt stack 0
   325  000011                     	ds	2
   326  000013                     _msg:
   327                           	opt stack 0
   328  000013                     	ds	15
   329  000022                     _data_array:
   330                           	opt stack 0
   331  000022                     	ds	8
   332                           tblptru	equ	0xFF8
   333                           tblptrh	equ	0xFF7
   334                           tblptrl	equ	0xFF6
   335                           tablat	equ	0xFF5
   336                           postinc0	equ	0xFEE
   337                           wreg	equ	0xFE8
   338                           
   339                           	psect	dataCOMRAM
   340  000048                     __pdataCOMRAM:
   341                           	opt stack 0
   342  000048                     _currentSpeed:
   343                           	opt stack 0
   344  000048                     	ds	1
   345                           tblptru	equ	0xFF8
   346                           tblptrh	equ	0xFF7
   347                           tblptrl	equ	0xFF6
   348                           tablat	equ	0xFF5
   349                           postinc0	equ	0xFEE
   350                           wreg	equ	0xFE8
   351                           
   352                           	psect	bssBANK0
   353  000091                     __pbssBANK0:
   354                           	opt stack 0
   355  000091                     _currentSpeed_array:
   356                           	opt stack 0
   357  000091                     	ds	8
   358  000099                     _id:
   359                           	opt stack 0
   360  000099                     	ds	4
   361  00009D                     _previousTimeCounter:
   362                           	opt stack 0
   363  00009D                     	ds	4
   364  0000A1                     _previousTimeCounter1:
   365                           	opt stack 0
   366  0000A1                     	ds	4
   367  0000A5                     _previousTimeCounter2:
   368                           	opt stack 0
   369  0000A5                     	ds	4
   370  0000A9                     _clock_counter_reference:
   371                           	opt stack 0
   372  0000A9                     	ds	2
   373  0000AB                     _correzione:
   374                           	opt stack 0
   375  0000AB                     	ds	2
   376  0000AD                     _dir:
   377                           	opt stack 0
   378  0000AD                     	ds	2
   379  0000AF                     _errore:
   380                           	opt stack 0
   381  0000AF                     	ds	2
   382  0000B1                     _vBatt:
   383                           	opt stack 0
   384  0000B1                     	ds	2
   385  0000B3                     _duty_set:
   386                           	opt stack 0
   387  0000B3                     	ds	1
   388  0000B4                     _left_speed:
   389                           	opt stack 0
   390  0000B4                     	ds	1
   391  0000B5                     _previousPwm:
   392                           	opt stack 0
   393  0000B5                     	ds	1
   394  0000B6                     _requestSpeed:
   395                           	opt stack 0
   396  0000B6                     	ds	1
   397  0000B7                     _right_speed:
   398                           	opt stack 0
   399  0000B7                     	ds	1
   400                           tblptru	equ	0xFF8
   401                           tblptrh	equ	0xFF7
   402                           tblptrl	equ	0xFF6
   403                           tablat	equ	0xFF5
   404                           postinc0	equ	0xFEE
   405                           wreg	equ	0xFE8
   406                           
   407                           	psect	dataBANK0
   408  0000B8                     __pdataBANK0:
   409                           	opt stack 0
   410  0000B8                     _delay_quartz_frequency_value:
   411                           	opt stack 0
   412  0000B8                     	ds	1
   413                           tblptru	equ	0xFF8
   414                           tblptrh	equ	0xFF7
   415                           tblptrl	equ	0xFF6
   416                           tablat	equ	0xFF5
   417                           postinc0	equ	0xFEE
   418                           wreg	equ	0xFE8
   419                           
   420                           	psect	cstackBANK0
   421  000060                     __pcstackBANK0:
   422                           	opt stack 0
   423  000060                     ??_ISR_alta:
   424                           
   425                           ; 0 bytes @ 0x0
   426  000060                     	ds	14
   427  00006E                     ?_abs:
   428                           	opt stack 0
   429  00006E                     ?___awdiv:
   430                           	opt stack 0
   431  00006E                     CANOperationMode@mode:
   432                           	opt stack 0
   433  00006E                     _CANisTxReady$2955:
   434                           	opt stack 0
   435  00006E                     OpenEPWM1@period:
   436                           	opt stack 0
   437  00006E                     SetOutputEPWM1@outputmode:
   438                           	opt stack 0
   439  00006E                     OpenTimer2@config:
   440                           	opt stack 0
   441  00006E                     SetDCEPWM1@dutycycle:
   442                           	opt stack 0
   443  00006E                     abs@a:
   444                           	opt stack 0
   445  00006E                     ___awdiv@dividend:
   446                           	opt stack 0
   447  00006E                     CANsendMessage@identifier:
   448                           	opt stack 0
   449  00006E                     CANSetMask@mask:
   450                           	opt stack 0
   451  00006E                     CANSetFilter@filter:
   452                           	opt stack 0
   453                           
   454                           ; 4 bytes @ 0xE
   455  00006E                     	ds	1
   456  00006F                     SetOutputEPWM1@outputconfig:
   457                           	opt stack 0
   458                           
   459                           ; 1 bytes @ 0xF
   460  00006F                     	ds	1
   461  000070                     ??_abs:
   462  000070                     ??_SetDCEPWM1:
   463  000070                     ___awdiv@divisor:
   464                           	opt stack 0
   465                           
   466                           ; 2 bytes @ 0x10
   467  000070                     	ds	2
   468  000072                     CANSetMask@type:
   469                           	opt stack 0
   470  000072                     CANSetFilter@type:
   471                           	opt stack 0
   472  000072                     ___awdiv@counter:
   473                           	opt stack 0
   474  000072                     CANsendMessage@data:
   475                           	opt stack 0
   476  000072                     SetDCEPWM1@DCycle:
   477                           	opt stack 0
   478                           
   479                           ; 2 bytes @ 0x12
   480  000072                     	ds	1
   481  000073                     ??_CANSetMask:
   482  000073                     ??_CANSetFilter:
   483  000073                     ___awdiv@sign:
   484                           	opt stack 0
   485                           
   486                           ; 1 bytes @ 0x13
   487  000073                     	ds	1
   488  000074                     CANsendMessage@dataLength:
   489                           	opt stack 0
   490  000074                     ___awdiv@quotient:
   491                           	opt stack 0
   492                           
   493                           ; 2 bytes @ 0x14
   494  000074                     	ds	1
   495  000075                     CANsendMessage@flags:
   496                           	opt stack 0
   497                           
   498                           ; 1 bytes @ 0x15
   499  000075                     	ds	1
   500  000076                     ??_CANsendMessage:
   501  000076                     ?___wmul:
   502                           	opt stack 0
   503  000076                     ___wmul@multiplier:
   504                           	opt stack 0
   505                           
   506                           ; 2 bytes @ 0x16
   507  000076                     	ds	1
   508  000077                     CANSetMask@numBuffer:
   509                           	opt stack 0
   510  000077                     CANSetFilter@numBuffer:
   511                           	opt stack 0
   512                           
   513                           ; 1 bytes @ 0x17
   514  000077                     	ds	1
   515  000078                     ___wmul@multiplicand:
   516                           	opt stack 0
   517  000078                     CANSetMask@tamp:
   518                           	opt stack 0
   519  000078                     CANSetFilter@tamp:
   520                           	opt stack 0
   521                           
   522                           ; 4 bytes @ 0x18
   523  000078                     	ds	2
   524  00007A                     ___wmul@product:
   525                           	opt stack 0
   526  00007A                     CANsendMessage@tamp:
   527                           	opt stack 0
   528                           
   529                           ; 4 bytes @ 0x1A
   530  00007A                     	ds	2
   531  00007C                     CANInitialize@phaseSeg1:
   532                           	opt stack 0
   533  00007C                     delay_ms@value_ms:
   534                           	opt stack 0
   535                           
   536                           ; 2 bytes @ 0x1C
   537  00007C                     	ds	1
   538  00007D                     CANInitialize@phaseSeg2:
   539                           	opt stack 0
   540                           
   541                           ; 1 bytes @ 0x1D
   542  00007D                     	ds	1
   543  00007E                     CANInitialize@SJW:
   544                           	opt stack 0
   545                           
   546                           ; 1 bytes @ 0x1E
   547  00007E                     	ds	1
   548  00007F                     CANInitialize@BRP:
   549                           	opt stack 0
   550                           
   551                           ; 1 bytes @ 0x1F
   552  00007F                     	ds	1
   553  000080                     CANInitialize@flags:
   554                           	opt stack 0
   555                           
   556                           ; 1 bytes @ 0x20
   557  000080                     	ds	1
   558  000081                     ??_CANInitialize:
   559                           
   560                           ; 0 bytes @ 0x21
   561  000081                     	ds	4
   562  000085                     CANInitialize@propSeg:
   563                           	opt stack 0
   564                           
   565                           ; 1 bytes @ 0x25
   566  000085                     	ds	1
   567  000086                     CANInitialize@FilterConfig1:
   568                           	opt stack 0
   569                           
   570                           ; 1 bytes @ 0x26
   571  000086                     	ds	1
   572  000087                     CANInitialize@FilterConfig2:
   573                           	opt stack 0
   574                           
   575                           ; 1 bytes @ 0x27
   576  000087                     	ds	1
   577  000088                     ??_main:
   578                           
   579                           ; 0 bytes @ 0x28
   580  000088                     	ds	8
   581  000090                     main@period:
   582                           	opt stack 0
   583                           
   584                           ; 1 bytes @ 0x30
   585  000090                     	ds	1
   586                           tblptru	equ	0xFF8
   587                           tblptrh	equ	0xFF7
   588                           tblptrl	equ	0xFF6
   589                           tablat	equ	0xFF5
   590                           postinc0	equ	0xFEE
   591                           wreg	equ	0xFE8
   592                           
   593                           	psect	cstackCOMRAM
   594  00002A                     __pcstackCOMRAM:
   595                           	opt stack 0
   596  00002A                     _CANisRxReady$2957:
   597                           	opt stack 0
   598  00002A                     CANreceiveMessage@msg:
   599                           	opt stack 0
   600                           
   601                           ; 2 bytes @ 0x0
   602  00002A                     	ds	2
   603  00002C                     ??_CANreceiveMessage:
   604                           
   605                           ; 0 bytes @ 0x2
   606  00002C                     	ds	8
   607  000034                     CANreceiveMessage@error:
   608                           	opt stack 0
   609                           
   610                           ; 1 bytes @ 0xA
   611  000034                     	ds	1
   612  000035                     CANreceiveMessage@tamp:
   613                           	opt stack 0
   614                           
   615                           ; 1 bytes @ 0xB
   616  000035                     	ds	1
   617  000036                     ??_ISR_bassa:
   618                           
   619                           ; 0 bytes @ 0xC
   620  000036                     	ds	17
   621                           tblptru	equ	0xFF8
   622                           tblptrh	equ	0xFF7
   623                           tblptrl	equ	0xFF6
   624                           tablat	equ	0xFF5
   625                           postinc0	equ	0xFEE
   626                           wreg	equ	0xFE8
   627                           
   628 ;;
   629 ;;Main: autosize = 0, tempsize = 8, incstack = 0, save=0
   630 ;;
   631 ;; *************** function _main *****************
   632 ;; Defined at:
   633 ;;		line 117 in file "motore.c"
   634 ;; Parameters:    Size  Location     Type
   635 ;;		None
   636 ;; Auto vars:     Size  Location     Type
   637 ;;  period          1   48[BANK0 ] unsigned char 
   638 ;; Return value:  Size  Location     Type
   639 ;;                  2  650[None  ] int 
   640 ;; Registers used:
   641 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   642 ;; Tracked objects:
   643 ;;		On entry : 0/0
   644 ;;		On exit  : 0/0
   645 ;;		Unchanged: 0/0
   646 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   647 ;;      Params:         0       0       0       0
   648 ;;      Locals:         0       1       0       0
   649 ;;      Temps:          0       8       0       0
   650 ;;      Totals:         0       9       0       0
   651 ;;Total ram usage:        9 bytes
   652 ;; Hardware stack levels required when called:    6
   653 ;; This function calls:
   654 ;;		_CANisRXwarningON
   655 ;;		_CANisTXwarningON
   656 ;;		_CANisTxReady
   657 ;;		_CANsendMessage
   658 ;;		_OpenEPWM1
   659 ;;		_OpenTimer2
   660 ;;		_SetDCEPWM1
   661 ;;		_SetOutputEPWM1
   662 ;;		___awdiv
   663 ;;		___wmul
   664 ;;		_abs
   665 ;;		_battery_measure
   666 ;;		_configurazione_iniziale
   667 ;;		_delay_ms
   668 ;;		_send_data
   669 ;; This function is called by:
   670 ;;		Startup code after reset
   671 ;; This function uses a non-reentrant model
   672 ;;
   673                           
   674                           	psect	text0
   675  001940                     __ptext0:
   676                           	opt stack 0
   677  001940                     _main:
   678                           	opt stack 25
   679                           
   680                           ;motore.c: 118: unsigned char period;
   681                           ;motore.c: 119: configurazione_iniziale();
   682                           
   683                           ;incstack = 0
   684  001940  ECAD  F011         	call	_configurazione_iniziale	;wreg free
   685                           
   686                           ;motore.c: 120: OpenTimer2(0b01111111 & 0b11111100 & 0b10000111);
   687  001944  0E04               	movlw	4
   688  001946  EC90  F013         	call	_OpenTimer2
   689                           
   690                           ;motore.c: 121: period = 249;
   691  00194A  0EF9               	movlw	249
   692  00194C  0100               	movlb	0	; () banked
   693  00194E  6F90               	movwf	main@period& (0+255),b
   694                           
   695                           ; BSR set to: 0
   696                           ;motore.c: 122: OpenEPWM1(period);
   697  001950  0100               	movlb	0	; () banked
   698  001952  5190               	movf	main@period& (0+255),w,b
   699  001954  ECB7  F013         	call	_OpenEPWM1
   700                           
   701                           ;motore.c: 125: PORTD = 0xFF;
   702  001958  6883               	setf	3971,c	;volatile
   703                           
   704                           ;motore.c: 126: delay_ms(500);
   705  00195A  0E01               	movlw	1
   706  00195C  0100               	movlb	0	; () banked
   707  00195E  6F7D               	movwf	(delay_ms@value_ms+1)& (0+255),b
   708  001960  0EF4               	movlw	244
   709  001962  6F7C               	movwf	delay_ms@value_ms& (0+255),b
   710  001964  EC30  F013         	call	_delay_ms	;wreg free
   711                           
   712                           ;motore.c: 127: PORTD = 0x00;
   713  001968  0E00               	movlw	0
   714  00196A  6E83               	movwf	3971,c	;volatile
   715                           
   716                           ;motore.c: 128: delay_ms(500);
   717  00196C  0E01               	movlw	1
   718  00196E  0100               	movlb	0	; () banked
   719  001970  6F7D               	movwf	(delay_ms@value_ms+1)& (0+255),b
   720  001972  0EF4               	movlw	244
   721  001974  6F7C               	movwf	delay_ms@value_ms& (0+255),b
   722  001976  EC30  F013         	call	_delay_ms	;wreg free
   723                           
   724                           ;motore.c: 129: PORTD = 0xFF;
   725  00197A  6883               	setf	3971,c	;volatile
   726                           
   727                           ;motore.c: 130: delay_ms(500);
   728  00197C  0E01               	movlw	1
   729  00197E  0100               	movlb	0	; () banked
   730  001980  6F7D               	movwf	(delay_ms@value_ms+1)& (0+255),b
   731  001982  0EF4               	movlw	244
   732  001984  6F7C               	movwf	delay_ms@value_ms& (0+255),b
   733  001986  EC30  F013         	call	_delay_ms	;wreg free
   734                           
   735                           ;motore.c: 131: PORTD = 0x00;
   736  00198A  0E00               	movlw	0
   737  00198C  6E83               	movwf	3971,c	;volatile
   738                           
   739                           ;motore.c: 132: delay_ms(500);
   740  00198E  0E01               	movlw	1
   741  001990  0100               	movlb	0	; () banked
   742  001992  6F7D               	movwf	(delay_ms@value_ms+1)& (0+255),b
   743  001994  0EF4               	movlw	244
   744  001996  6F7C               	movwf	delay_ms@value_ms& (0+255),b
   745  001998  EC30  F013         	call	_delay_ms	;wreg free
   746  00199C                     l651:
   747                           
   748                           ;motore.c: 136: if (dir == 1) {
   749  00199C  0100               	movlb	0	; () banked
   750  00199E  05AD               	decf	_dir& (0+255),w,b
   751  0019A0  0100               	movlb	0	; () banked
   752  0019A2  11AE               	iorwf	(_dir+1)& (0+255),w,b
   753  0019A4  A4D8               	btfss	status,2,c
   754  0019A6  D006               	goto	l4864
   755                           
   756                           ; BSR set to: 0
   757                           ;motore.c: 137: SetOutputEPWM1(0b01111111, 0b11111100);
   758  0019A8  0EFC               	movlw	252
   759  0019AA  0100               	movlb	0	; () banked
   760  0019AC  6F6E               	movwf	SetOutputEPWM1@outputmode& (0+255),b
   761  0019AE  0E7F               	movlw	127
   762  0019B0  ECBF  F012         	call	_SetOutputEPWM1
   763  0019B4                     l4864:
   764                           
   765                           ;motore.c: 138: }
   766                           ;motore.c: 139: if (dir == 0) {
   767  0019B4  0100               	movlb	0	; () banked
   768  0019B6  51AD               	movf	_dir& (0+255),w,b
   769  0019B8  0100               	movlb	0	; () banked
   770  0019BA  11AE               	iorwf	(_dir+1)& (0+255),w,b
   771  0019BC  A4D8               	btfss	status,2,c
   772  0019BE  D006               	goto	l4868
   773                           
   774                           ; BSR set to: 0
   775                           ;motore.c: 140: SetOutputEPWM1(0b11111111, 0b11111100);
   776  0019C0  0EFC               	movlw	252
   777  0019C2  0100               	movlb	0	; () banked
   778  0019C4  6F6E               	movwf	SetOutputEPWM1@outputmode& (0+255),b
   779  0019C6  0EFF               	movlw	255
   780  0019C8  ECBF  F012         	call	_SetOutputEPWM1
   781  0019CC                     l4868:
   782                           
   783                           ;motore.c: 141: }
   784                           ;motore.c: 142: if ((timeCounter - previousTimeCounter1 >= 10)) {
   785  0019CC  C0A1  F088         	movff	_previousTimeCounter1,??_main
   786  0019D0  C0A2  F089         	movff	_previousTimeCounter1+1,??_main+1
   787  0019D4  C0A3  F08A         	movff	_previousTimeCounter1+2,??_main+2
   788  0019D8  C0A4  F08B         	movff	_previousTimeCounter1+3,??_main+3
   789  0019DC  0100               	movlb	0	; () banked
   790  0019DE  1F88               	comf	??_main& (0+255),f,b
   791  0019E0  1F89               	comf	(??_main+1)& (0+255),f,b
   792  0019E2  1F8A               	comf	(??_main+2)& (0+255),f,b
   793  0019E4  1F8B               	comf	(??_main+3)& (0+255),f,b
   794  0019E6  2B88               	incf	??_main& (0+255),f,b
   795  0019E8  0E00               	movlw	0
   796  0019EA  2389               	addwfc	(??_main+1)& (0+255),f,b
   797  0019EC  238A               	addwfc	(??_main+2)& (0+255),f,b
   798  0019EE  238B               	addwfc	(??_main+3)& (0+255),f,b
   799  0019F0  500D               	movf	_timeCounter,w,c
   800  0019F2  0100               	movlb	0	; () banked
   801  0019F4  2588               	addwf	??_main& (0+255),w,b
   802  0019F6  0100               	movlb	0	; () banked
   803  0019F8  6F8C               	movwf	(??_main+4)& (0+255),b
   804  0019FA  500E               	movf	_timeCounter+1,w,c
   805  0019FC  0100               	movlb	0	; () banked
   806  0019FE  2189               	addwfc	(??_main+1)& (0+255),w,b
   807  001A00  0100               	movlb	0	; () banked
   808  001A02  6F8D               	movwf	(??_main+5)& (0+255),b
   809  001A04  500F               	movf	_timeCounter+2,w,c
   810  001A06  0100               	movlb	0	; () banked
   811  001A08  218A               	addwfc	(??_main+2)& (0+255),w,b
   812  001A0A  0100               	movlb	0	; () banked
   813  001A0C  6F8E               	movwf	(??_main+6)& (0+255),b
   814  001A0E  5010               	movf	_timeCounter+3,w,c
   815  001A10  0100               	movlb	0	; () banked
   816  001A12  218B               	addwfc	(??_main+3)& (0+255),w,b
   817  001A14  0100               	movlb	0	; () banked
   818  001A16  6F8F               	movwf	(??_main+7)& (0+255),b
   819  001A18  0100               	movlb	0	; () banked
   820  001A1A  518F               	movf	(??_main+7)& (0+255),w,b
   821  001A1C  0100               	movlb	0	; () banked
   822  001A1E  118E               	iorwf	(??_main+6)& (0+255),w,b
   823  001A20  0100               	movlb	0	; () banked
   824  001A22  118D               	iorwf	(??_main+5)& (0+255),w,b
   825  001A24  E105               	bnz	u6150
   826  001A26  0E0A               	movlw	10
   827  001A28  0100               	movlb	0	; () banked
   828  001A2A  5D8C               	subwf	(??_main+4)& (0+255),w,b
   829  001A2C  A0D8               	btfss	status,0,c
   830  001A2E  D101               	goto	l4900
   831  001A30                     u6150:
   832                           
   833                           ; BSR set to: 0
   834                           ;motore.c: 143: CANsendMessage(0b00000000000000000000000000010, 0, 0, CAN_CONFIG_STD_MSG
      +                           & CAN_REMOTE_TX_FRAME & CAN_TX_PRIORITY_0);
   835  001A30  0E02               	movlw	2
   836  001A32  0100               	movlb	0	; () banked
   837  001A34  6F6E               	movwf	CANsendMessage@identifier& (0+255),b
   838  001A36  0E00               	movlw	0
   839  001A38  6F6F               	movwf	(CANsendMessage@identifier+1)& (0+255),b
   840  001A3A  0E00               	movlw	0
   841  001A3C  6F70               	movwf	(CANsendMessage@identifier+2)& (0+255),b
   842  001A3E  0E00               	movlw	0
   843  001A40  6F71               	movwf	(CANsendMessage@identifier+3)& (0+255),b
   844  001A42  0E00               	movlw	0
   845  001A44  0100               	movlb	0	; () banked
   846  001A46  6F72               	movwf	CANsendMessage@data& (0+255),b
   847  001A48  0E00               	movlw	0
   848  001A4A  0100               	movlb	0	; () banked
   849  001A4C  6F73               	movwf	(CANsendMessage@data+1)& (0+255),b
   850  001A4E  0E00               	movlw	0
   851  001A50  0100               	movlb	0	; () banked
   852  001A52  6F74               	movwf	CANsendMessage@dataLength& (0+255),b
   853  001A54  0EFC               	movlw	252
   854  001A56  0100               	movlb	0	; () banked
   855  001A58  6F75               	movwf	CANsendMessage@flags& (0+255),b
   856  001A5A  EC54  F006         	call	_CANsendMessage	;wreg free
   857                           
   858                           ;motore.c: 144: currentSpeed = ((left_speed + right_speed) / 2);
   859  001A5E  0100               	movlb	0	; () banked
   860  001A60  51B4               	movf	_left_speed& (0+255),w,b
   861  001A62  0100               	movlb	0	; () banked
   862  001A64  25B7               	addwf	_right_speed& (0+255),w,b
   863  001A66  0100               	movlb	0	; () banked
   864  001A68  6F6E               	movwf	___awdiv@dividend& (0+255),b
   865  001A6A  0100               	movlb	0	; () banked
   866  001A6C  6B6F               	clrf	(___awdiv@dividend+1)& (0+255),b
   867  001A6E  0100               	movlb	0	; () banked
   868  001A70  376F               	rlcf	(___awdiv@dividend+1)& (0+255),f,b
   869  001A72  0E00               	movlw	0
   870  001A74  0100               	movlb	0	; () banked
   871  001A76  6F71               	movwf	(___awdiv@divisor+1)& (0+255),b
   872  001A78  0E02               	movlw	2
   873  001A7A  6F70               	movwf	___awdiv@divisor& (0+255),b
   874  001A7C  EC4E  F011         	call	___awdiv	;wreg free
   875  001A80  0100               	movlb	0	; () banked
   876  001A82  516E               	movf	?___awdiv& (0+255),w,b
   877  001A84  6E48               	movwf	_currentSpeed,c
   878                           
   879                           ; BSR set to: 0
   880                           ;motore.c: 145: if (currentSpeed - requestSpeed > 0) {
   881  001A86  0100               	movlb	0	; () banked
   882  001A88  51B6               	movf	_requestSpeed& (0+255),w,b
   883  001A8A  0100               	movlb	0	; () banked
   884  001A8C  6F88               	movwf	??_main& (0+255),b
   885  001A8E  6B89               	clrf	(??_main+1)& (0+255),b
   886  001A90  0100               	movlb	0	; () banked
   887  001A92  1F88               	comf	??_main& (0+255),f,b
   888  001A94  1F89               	comf	(??_main+1)& (0+255),f,b
   889  001A96  4B88               	infsnz	??_main& (0+255),f,b
   890  001A98  2B89               	incf	(??_main+1)& (0+255),f,b
   891  001A9A  5048               	movf	_currentSpeed,w,c
   892  001A9C  0100               	movlb	0	; () banked
   893  001A9E  6F8A               	movwf	(??_main+2)& (0+255),b
   894  001AA0  6B8B               	clrf	(??_main+3)& (0+255),b
   895  001AA2  0100               	movlb	0	; () banked
   896  001AA4  5188               	movf	??_main& (0+255),w,b
   897  001AA6  0100               	movlb	0	; () banked
   898  001AA8  278A               	addwf	(??_main+2)& (0+255),f,b
   899  001AAA  0100               	movlb	0	; () banked
   900  001AAC  5189               	movf	(??_main+1)& (0+255),w,b
   901  001AAE  0100               	movlb	0	; () banked
   902  001AB0  238B               	addwfc	(??_main+3)& (0+255),f,b
   903  001AB2  0100               	movlb	0	; () banked
   904  001AB4  BF8B               	btfsc	(??_main+3)& (0+255),7,b
   905  001AB6  D0BD               	goto	l4900
   906  001AB8  0100               	movlb	0	; () banked
   907  001ABA  518B               	movf	(??_main+3)& (0+255),w,b
   908  001ABC  E104               	bnz	u6160
   909  001ABE  0100               	movlb	0	; () banked
   910  001AC0  058A               	decf	(??_main+2)& (0+255),w,b
   911  001AC2  A0D8               	btfss	status,0,c
   912  001AC4  D0B6               	goto	l4900
   913  001AC6                     u6160:
   914                           
   915                           ; BSR set to: 0
   916                           ;motore.c: 146: errore = abs(currentSpeed - requestSpeed);
   917  001AC6  0100               	movlb	0	; () banked
   918  001AC8  51B6               	movf	_requestSpeed& (0+255),w,b
   919  001ACA  0100               	movlb	0	; () banked
   920  001ACC  6F88               	movwf	??_main& (0+255),b
   921  001ACE  6B89               	clrf	(??_main+1)& (0+255),b
   922  001AD0  0100               	movlb	0	; () banked
   923  001AD2  1F88               	comf	??_main& (0+255),f,b
   924  001AD4  1F89               	comf	(??_main+1)& (0+255),f,b
   925  001AD6  4B88               	infsnz	??_main& (0+255),f,b
   926  001AD8  2B89               	incf	(??_main+1)& (0+255),f,b
   927  001ADA  5048               	movf	_currentSpeed,w,c
   928  001ADC  0100               	movlb	0	; () banked
   929  001ADE  2588               	addwf	??_main& (0+255),w,b
   930  001AE0  0100               	movlb	0	; () banked
   931  001AE2  6F6E               	movwf	abs@a& (0+255),b
   932  001AE4  0E00               	movlw	0
   933  001AE6  0100               	movlb	0	; () banked
   934  001AE8  2189               	addwfc	(??_main+1)& (0+255),w,b
   935  001AEA  0100               	movlb	0	; () banked
   936  001AEC  6F6F               	movwf	(abs@a+1)& (0+255),b
   937  001AEE  EC68  F013         	call	_abs	;wreg free
   938  001AF2  C06E  F0AF         	movff	?_abs,_errore
   939  001AF6  C06F  F0B0         	movff	?_abs+1,_errore+1
   940                           
   941                           ;motore.c: 147: correzione = ((errore / 17)*(errore / 17))*4;
   942  001AFA  0E00               	movlw	0
   943  001AFC  0100               	movlb	0	; () banked
   944  001AFE  6F71               	movwf	(___awdiv@divisor+1)& (0+255),b
   945  001B00  0E11               	movlw	17
   946  001B02  6F70               	movwf	___awdiv@divisor& (0+255),b
   947  001B04  C0AF  F06E         	movff	_errore,___awdiv@dividend
   948  001B08  C0B0  F06F         	movff	_errore+1,___awdiv@dividend+1
   949  001B0C  EC4E  F011         	call	___awdiv	;wreg free
   950  001B10  C06E  F076         	movff	?___awdiv,___wmul@multiplier
   951  001B14  C06F  F077         	movff	?___awdiv+1,___wmul@multiplier+1
   952  001B18  0E00               	movlw	0
   953  001B1A  0100               	movlb	0	; () banked
   954  001B1C  6F71               	movwf	(___awdiv@divisor+1)& (0+255),b
   955  001B1E  0E11               	movlw	17
   956  001B20  6F70               	movwf	___awdiv@divisor& (0+255),b
   957  001B22  C0AF  F06E         	movff	_errore,___awdiv@dividend
   958  001B26  C0B0  F06F         	movff	_errore+1,___awdiv@dividend+1
   959  001B2A  EC4E  F011         	call	___awdiv	;wreg free
   960  001B2E  C06E  F078         	movff	?___awdiv,___wmul@multiplicand
   961  001B32  C06F  F079         	movff	?___awdiv+1,___wmul@multiplicand+1
   962  001B36  EC4D  F013         	call	___wmul	;wreg free
   963  001B3A  0100               	movlb	0	; () banked
   964  001B3C  90D8               	bcf	status,0,c
   965  001B3E  3776               	rlcf	?___wmul& (0+255),f,b
   966  001B40  3777               	rlcf	(?___wmul+1)& (0+255),f,b
   967  001B42  0100               	movlb	0	; () banked
   968  001B44  90D8               	bcf	status,0,c
   969  001B46  3776               	rlcf	?___wmul& (0+255),f,b
   970  001B48  3777               	rlcf	(?___wmul+1)& (0+255),f,b
   971  001B4A  C076  F0AB         	movff	?___wmul,_correzione
   972  001B4E  C077  F0AC         	movff	?___wmul+1,_correzione+1
   973                           
   974                           ; BSR set to: 0
   975                           ;motore.c: 148: if (correzione > 1) {
   976  001B52  0100               	movlb	0	; () banked
   977  001B54  51AC               	movf	(_correzione+1)& (0+255),w,b
   978  001B56  E105               	bnz	u6170
   979  001B58  0E02               	movlw	2
   980  001B5A  0100               	movlb	0	; () banked
   981  001B5C  5DAB               	subwf	_correzione& (0+255),w,b
   982  001B5E  A0D8               	btfss	status,0,c
   983  001B60  D055               	goto	l656
   984  001B62                     u6170:
   985                           
   986                           ; BSR set to: 0
   987                           ;motore.c: 149: if ((currentSpeed - requestSpeed) > 0) {
   988  001B62  0100               	movlb	0	; () banked
   989  001B64  51B6               	movf	_requestSpeed& (0+255),w,b
   990  001B66  0100               	movlb	0	; () banked
   991  001B68  6F88               	movwf	??_main& (0+255),b
   992  001B6A  6B89               	clrf	(??_main+1)& (0+255),b
   993  001B6C  0100               	movlb	0	; () banked
   994  001B6E  1F88               	comf	??_main& (0+255),f,b
   995  001B70  1F89               	comf	(??_main+1)& (0+255),f,b
   996  001B72  4B88               	infsnz	??_main& (0+255),f,b
   997  001B74  2B89               	incf	(??_main+1)& (0+255),f,b
   998  001B76  5048               	movf	_currentSpeed,w,c
   999  001B78  0100               	movlb	0	; () banked
  1000  001B7A  6F8A               	movwf	(??_main+2)& (0+255),b
  1001  001B7C  6B8B               	clrf	(??_main+3)& (0+255),b
  1002  001B7E  0100               	movlb	0	; () banked
  1003  001B80  5188               	movf	??_main& (0+255),w,b
  1004  001B82  0100               	movlb	0	; () banked
  1005  001B84  278A               	addwf	(??_main+2)& (0+255),f,b
  1006  001B86  0100               	movlb	0	; () banked
  1007  001B88  5189               	movf	(??_main+1)& (0+255),w,b
  1008  001B8A  0100               	movlb	0	; () banked
  1009  001B8C  238B               	addwfc	(??_main+3)& (0+255),f,b
  1010  001B8E  0100               	movlb	0	; () banked
  1011  001B90  BF8B               	btfsc	(??_main+3)& (0+255),7,b
  1012  001B92  D035               	goto	l657
  1013  001B94  0100               	movlb	0	; () banked
  1014  001B96  518B               	movf	(??_main+3)& (0+255),w,b
  1015  001B98  E104               	bnz	u6180
  1016  001B9A  0100               	movlb	0	; () banked
  1017  001B9C  058A               	decf	(??_main+2)& (0+255),w,b
  1018  001B9E  A0D8               	btfss	status,0,c
  1019  001BA0  D02E               	goto	l657
  1020  001BA2                     u6180:
  1021                           
  1022                           ; BSR set to: 0
  1023                           ;motore.c: 150: if (previousPwm > correzione) {
  1024  001BA2  0100               	movlb	0	; () banked
  1025  001BA4  51B5               	movf	_previousPwm& (0+255),w,b
  1026  001BA6  0100               	movlb	0	; () banked
  1027  001BA8  5DAB               	subwf	_correzione& (0+255),w,b
  1028  001BAA  0E00               	movlw	0
  1029  001BAC  59AC               	subwfb	(_correzione+1)& (0+255),w,b
  1030  001BAE  B0D8               	btfsc	status,0,c
  1031  001BB0  D007               	goto	l658
  1032                           
  1033                           ; BSR set to: 0
  1034                           ;motore.c: 151: duty_set = previousPwm - correzione;
  1035  001BB2  0100               	movlb	0	; () banked
  1036  001BB4  51AB               	movf	_correzione& (0+255),w,b
  1037  001BB6  0800               	sublw	0
  1038  001BB8  0100               	movlb	0	; () banked
  1039  001BBA  25B5               	addwf	_previousPwm& (0+255),w,b
  1040  001BBC  0100               	movlb	0	; () banked
  1041  001BBE  6FB3               	movwf	_duty_set& (0+255),b
  1042  001BC0                     l658:
  1043                           
  1044                           ; BSR set to: 0
  1045                           ;motore.c: 152: }
  1046                           ;motore.c: 153: if ((currentSpeed - requestSpeed) < 0) {
  1047  001BC0  0100               	movlb	0	; () banked
  1048  001BC2  51B6               	movf	_requestSpeed& (0+255),w,b
  1049  001BC4  0100               	movlb	0	; () banked
  1050  001BC6  6F88               	movwf	??_main& (0+255),b
  1051  001BC8  6B89               	clrf	(??_main+1)& (0+255),b
  1052  001BCA  0100               	movlb	0	; () banked
  1053  001BCC  1F88               	comf	??_main& (0+255),f,b
  1054  001BCE  1F89               	comf	(??_main+1)& (0+255),f,b
  1055  001BD0  4B88               	infsnz	??_main& (0+255),f,b
  1056  001BD2  2B89               	incf	(??_main+1)& (0+255),f,b
  1057  001BD4  5048               	movf	_currentSpeed,w,c
  1058  001BD6  0100               	movlb	0	; () banked
  1059  001BD8  6F8A               	movwf	(??_main+2)& (0+255),b
  1060  001BDA  6B8B               	clrf	(??_main+3)& (0+255),b
  1061  001BDC  0100               	movlb	0	; () banked
  1062  001BDE  5188               	movf	??_main& (0+255),w,b
  1063  001BE0  0100               	movlb	0	; () banked
  1064  001BE2  278A               	addwf	(??_main+2)& (0+255),f,b
  1065  001BE4  0100               	movlb	0	; () banked
  1066  001BE6  5189               	movf	(??_main+1)& (0+255),w,b
  1067  001BE8  0100               	movlb	0	; () banked
  1068  001BEA  238B               	addwfc	(??_main+3)& (0+255),f,b
  1069  001BEC  0100               	movlb	0	; () banked
  1070  001BEE  AF8B               	btfss	(??_main+3)& (0+255),7,b
  1071  001BF0  D006               	goto	l657
  1072                           
  1073                           ; BSR set to: 0
  1074                           ;motore.c: 154: duty_set = previousPwm + correzione;
  1075  001BF2  0100               	movlb	0	; () banked
  1076  001BF4  51B5               	movf	_previousPwm& (0+255),w,b
  1077  001BF6  0100               	movlb	0	; () banked
  1078  001BF8  25AB               	addwf	_correzione& (0+255),w,b
  1079  001BFA  0100               	movlb	0	; () banked
  1080  001BFC  6FB3               	movwf	_duty_set& (0+255),b
  1081  001BFE                     l657:
  1082                           
  1083                           ; BSR set to: 0
  1084                           ;motore.c: 155: }
  1085                           ;motore.c: 156: }
  1086                           ;motore.c: 157: if (correzione < 1) {
  1087  001BFE  0100               	movlb	0	; () banked
  1088  001C00  51AB               	movf	_correzione& (0+255),w,b
  1089  001C02  0100               	movlb	0	; () banked
  1090  001C04  11AC               	iorwf	(_correzione+1)& (0+255),w,b
  1091  001C06  B4D8               	btfsc	status,2,c
  1092                           
  1093                           ; BSR set to: 0
  1094                           ;motore.c: 158: duty_set = previousPwm;
  1095  001C08  C0B5  F0B3         	movff	_previousPwm,_duty_set
  1096  001C0C                     l656:
  1097                           
  1098                           ; BSR set to: 0
  1099                           ;motore.c: 159: }
  1100                           ;motore.c: 160: }
  1101                           ;motore.c: 161: previousPwm = duty_set;
  1102  001C0C  C0B3  F0B5         	movff	_duty_set,_previousPwm
  1103                           
  1104                           ; BSR set to: 0
  1105                           ;motore.c: 162: SetDCEPWM1(duty_set);
  1106  001C10  C0B3  F06E         	movff	_duty_set,SetDCEPWM1@dutycycle
  1107  001C14  0100               	movlb	0	; () banked
  1108  001C16  6B6F               	clrf	(SetDCEPWM1@dutycycle+1)& (0+255),b
  1109  001C18  EC0E  F013         	call	_SetDCEPWM1	;wreg free
  1110                           
  1111                           ;motore.c: 163: if (remote_frame == 1) {
  1112  001C1C  B247               	btfsc	_remote_frame/(0+8),_remote_frame& (0+7),c
  1113                           
  1114                           ;motore.c: 164: send_data();
  1115  001C1E  EC44  F012         	call	_send_data	;wreg free
  1116                           
  1117                           ;motore.c: 165: }
  1118                           ;motore.c: 166: previousTimeCounter1 = timeCounter;
  1119  001C22  C00D  F0A1         	movff	_timeCounter,_previousTimeCounter1
  1120  001C26  C00E  F0A2         	movff	_timeCounter+1,_previousTimeCounter1+1
  1121  001C2A  C00F  F0A3         	movff	_timeCounter+2,_previousTimeCounter1+2
  1122  001C2E  C010  F0A4         	movff	_timeCounter+3,_previousTimeCounter1+3
  1123  001C32                     l4900:
  1124                           
  1125                           ;motore.c: 167: }
  1126                           ;motore.c: 168: }
  1127                           ;motore.c: 169: if ((CANisTXwarningON() == 1) || (CANisRXwarningON() == 1)) {
  1128  001C32  ECC0  F013         	call	_CANisTXwarningON	;wreg free
  1129  001C36  06E8               	decf	wreg,f,c
  1130  001C38  B4D8               	btfsc	status,2,c
  1131  001C3A  D005               	goto	l4904
  1132  001C3C  ECC6  F013         	call	_CANisRXwarningON	;wreg free
  1133  001C40  06E8               	decf	wreg,f,c
  1134  001C42  A4D8               	btfss	status,2,c
  1135  001C44  D009               	goto	l662
  1136  001C46                     l4904:
  1137                           
  1138                           ;motore.c: 170: SetDCEPWM1(0);
  1139  001C46  0E00               	movlw	0
  1140  001C48  0100               	movlb	0	; () banked
  1141  001C4A  6F6F               	movwf	(SetDCEPWM1@dutycycle+1)& (0+255),b
  1142  001C4C  0E00               	movlw	0
  1143  001C4E  6F6E               	movwf	SetDCEPWM1@dutycycle& (0+255),b
  1144  001C50  EC0E  F013         	call	_SetDCEPWM1	;wreg free
  1145                           
  1146                           ;motore.c: 171: PORTAbits.RA7 = 1;
  1147  001C54  8E80               	bsf	3968,7,c	;volatile
  1148                           
  1149                           ;motore.c: 172: } else {
  1150  001C56  D03D               	goto	l4924
  1151  001C58                     l662:
  1152                           
  1153                           ;motore.c: 173: PORTAbits.RA7 = 0;
  1154  001C58  9E80               	bcf	3968,7,c	;volatile
  1155                           
  1156                           ;motore.c: 174: }
  1157                           ;motore.c: 181: while ((timeCounter - previousTimeCounter) > 100) {
  1158  001C5A  D03B               	goto	l4924
  1159  001C5C                     l4908:
  1160                           
  1161                           ;motore.c: 182: SetDCEPWM1(0);
  1162  001C5C  0E00               	movlw	0
  1163  001C5E  0100               	movlb	0	; () banked
  1164  001C60  6F6F               	movwf	(SetDCEPWM1@dutycycle+1)& (0+255),b
  1165  001C62  0E00               	movlw	0
  1166  001C64  6F6E               	movwf	SetDCEPWM1@dutycycle& (0+255),b
  1167  001C66  EC0E  F013         	call	_SetDCEPWM1	;wreg free
  1168                           
  1169                           ;motore.c: 183: PORTAbits.RA0 = 1;
  1170  001C6A  8080               	bsf	3968,0,c	;volatile
  1171                           
  1172                           ;motore.c: 184: delay_ms(250);
  1173  001C6C  0E00               	movlw	0
  1174  001C6E  0100               	movlb	0	; () banked
  1175  001C70  6F7D               	movwf	(delay_ms@value_ms+1)& (0+255),b
  1176  001C72  0EFA               	movlw	250
  1177  001C74  6F7C               	movwf	delay_ms@value_ms& (0+255),b
  1178  001C76  EC30  F013         	call	_delay_ms	;wreg free
  1179                           
  1180                           ;motore.c: 185: PORTAbits.RA0 = 0;
  1181  001C7A  9080               	bcf	3968,0,c	;volatile
  1182                           
  1183                           ;motore.c: 186: delay_ms(250);
  1184  001C7C  0E00               	movlw	0
  1185  001C7E  0100               	movlb	0	; () banked
  1186  001C80  6F7D               	movwf	(delay_ms@value_ms+1)& (0+255),b
  1187  001C82  0EFA               	movlw	250
  1188  001C84  6F7C               	movwf	delay_ms@value_ms& (0+255),b
  1189  001C86  EC30  F013         	call	_delay_ms	;wreg free
  1190                           
  1191                           ;motore.c: 187: previousTimeCounter = timeCounter;
  1192  001C8A  C00D  F09D         	movff	_timeCounter,_previousTimeCounter
  1193  001C8E  C00E  F09E         	movff	_timeCounter+1,_previousTimeCounter+1
  1194  001C92  C00F  F09F         	movff	_timeCounter+2,_previousTimeCounter+2
  1195  001C96  C010  F0A0         	movff	_timeCounter+3,_previousTimeCounter+3
  1196  001C9A                     l4920:
  1197  001C9A  EC7E  F013         	call	_CANisTxReady	;wreg free
  1198  001C9E  0900               	iorlw	0
  1199  001CA0  B4D8               	btfsc	status,2,c
  1200  001CA2  D7FB               	goto	l4920
  1201                           
  1202                           ;motore.c: 189: CANsendMessage(0b00000000000000000000000000001, data_array, 8, CAN_CONFI
      +                          G_STD_MSG & CAN_REMOTE_TX_FRAME & CAN_TX_PRIORITY_0);
  1203  001CA4  0E01               	movlw	1
  1204  001CA6  0100               	movlb	0	; () banked
  1205  001CA8  6F6E               	movwf	CANsendMessage@identifier& (0+255),b
  1206  001CAA  0E00               	movlw	0
  1207  001CAC  6F6F               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  1208  001CAE  0E00               	movlw	0
  1209  001CB0  6F70               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  1210  001CB2  0E00               	movlw	0
  1211  001CB4  6F71               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  1212  001CB6  0E22               	movlw	low _data_array
  1213  001CB8  0100               	movlb	0	; () banked
  1214  001CBA  6F72               	movwf	CANsendMessage@data& (0+255),b
  1215  001CBC  0E00               	movlw	high _data_array
  1216  001CBE  0100               	movlb	0	; () banked
  1217  001CC0  6F73               	movwf	(CANsendMessage@data+1)& (0+255),b
  1218  001CC2  0E08               	movlw	8
  1219  001CC4  0100               	movlb	0	; () banked
  1220  001CC6  6F74               	movwf	CANsendMessage@dataLength& (0+255),b
  1221  001CC8  0EFC               	movlw	252
  1222  001CCA  0100               	movlb	0	; () banked
  1223  001CCC  6F75               	movwf	CANsendMessage@flags& (0+255),b
  1224  001CCE  EC54  F006         	call	_CANsendMessage	;wreg free
  1225  001CD2                     l4924:
  1226  001CD2  C09D  F088         	movff	_previousTimeCounter,??_main
  1227  001CD6  C09E  F089         	movff	_previousTimeCounter+1,??_main+1
  1228  001CDA  C09F  F08A         	movff	_previousTimeCounter+2,??_main+2
  1229  001CDE  C0A0  F08B         	movff	_previousTimeCounter+3,??_main+3
  1230  001CE2  0100               	movlb	0	; () banked
  1231  001CE4  1F88               	comf	??_main& (0+255),f,b
  1232  001CE6  1F89               	comf	(??_main+1)& (0+255),f,b
  1233  001CE8  1F8A               	comf	(??_main+2)& (0+255),f,b
  1234  001CEA  1F8B               	comf	(??_main+3)& (0+255),f,b
  1235  001CEC  2B88               	incf	??_main& (0+255),f,b
  1236  001CEE  0E00               	movlw	0
  1237  001CF0  2389               	addwfc	(??_main+1)& (0+255),f,b
  1238  001CF2  238A               	addwfc	(??_main+2)& (0+255),f,b
  1239  001CF4  238B               	addwfc	(??_main+3)& (0+255),f,b
  1240  001CF6  500D               	movf	_timeCounter,w,c
  1241  001CF8  0100               	movlb	0	; () banked
  1242  001CFA  2588               	addwf	??_main& (0+255),w,b
  1243  001CFC  0100               	movlb	0	; () banked
  1244  001CFE  6F8C               	movwf	(??_main+4)& (0+255),b
  1245  001D00  500E               	movf	_timeCounter+1,w,c
  1246  001D02  0100               	movlb	0	; () banked
  1247  001D04  2189               	addwfc	(??_main+1)& (0+255),w,b
  1248  001D06  0100               	movlb	0	; () banked
  1249  001D08  6F8D               	movwf	(??_main+5)& (0+255),b
  1250  001D0A  500F               	movf	_timeCounter+2,w,c
  1251  001D0C  0100               	movlb	0	; () banked
  1252  001D0E  218A               	addwfc	(??_main+2)& (0+255),w,b
  1253  001D10  0100               	movlb	0	; () banked
  1254  001D12  6F8E               	movwf	(??_main+6)& (0+255),b
  1255  001D14  5010               	movf	_timeCounter+3,w,c
  1256  001D16  0100               	movlb	0	; () banked
  1257  001D18  218B               	addwfc	(??_main+3)& (0+255),w,b
  1258  001D1A  0100               	movlb	0	; () banked
  1259  001D1C  6F8F               	movwf	(??_main+7)& (0+255),b
  1260  001D1E  0100               	movlb	0	; () banked
  1261  001D20  518F               	movf	(??_main+7)& (0+255),w,b
  1262  001D22  0100               	movlb	0	; () banked
  1263  001D24  118E               	iorwf	(??_main+6)& (0+255),w,b
  1264  001D26  0100               	movlb	0	; () banked
  1265  001D28  118D               	iorwf	(??_main+5)& (0+255),w,b
  1266  001D2A  E198               	bnz	l4908
  1267  001D2C  0E65               	movlw	101
  1268  001D2E  0100               	movlb	0	; () banked
  1269  001D30  5D8C               	subwf	(??_main+4)& (0+255),w,b
  1270  001D32  A0D8               	btfss	status,0,c
  1271  001D34  D633               	goto	l651
  1272  001D36  D792               	goto	l4908
  1273  001D38                     __end_of_main:
  1274                           	opt stack 0
  1275                           tblptru	equ	0xFF8
  1276                           tblptrh	equ	0xFF7
  1277                           tblptrl	equ	0xFF6
  1278                           tablat	equ	0xFF5
  1279                           postinc0	equ	0xFEE
  1280                           wreg	equ	0xFE8
  1281                           status	equ	0xFD8
  1282                           
  1283 ;; *************** function _send_data *****************
  1284 ;; Defined at:
  1285 ;;		line 198 in file "motore.c"
  1286 ;; Parameters:    Size  Location     Type
  1287 ;;		None
  1288 ;; Auto vars:     Size  Location     Type
  1289 ;;		None
  1290 ;; Return value:  Size  Location     Type
  1291 ;;		None               void
  1292 ;; Registers used:
  1293 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1294 ;; Tracked objects:
  1295 ;;		On entry : 0/0
  1296 ;;		On exit  : 0/0
  1297 ;;		Unchanged: 0/0
  1298 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1299 ;;      Params:         0       0       0       0
  1300 ;;      Locals:         0       0       0       0
  1301 ;;      Temps:          0       0       0       0
  1302 ;;      Totals:         0       0       0       0
  1303 ;;Total ram usage:        0 bytes
  1304 ;; Hardware stack levels used:    1
  1305 ;; Hardware stack levels required when called:    5
  1306 ;; This function calls:
  1307 ;;		_CANisTxReady
  1308 ;;		_CANsendMessage
  1309 ;;		_delay_ms
  1310 ;; This function is called by:
  1311 ;;		_main
  1312 ;; This function uses a non-reentrant model
  1313 ;;
  1314                           
  1315                           	psect	text1
  1316  002488                     __ptext1:
  1317                           	opt stack 0
  1318  002488                     _send_data:
  1319                           	opt stack 25
  1320                           
  1321                           ;motore.c: 199: if (CANisTxReady()) {
  1322                           
  1323                           ;incstack = 0
  1324  002488  EC7E  F013         	call	_CANisTxReady	;wreg free
  1325  00248C  0900               	iorlw	0
  1326  00248E  A4D8               	btfss	status,2,c
  1327                           
  1328                           ;motore.c: 200: if (remote_frame == 1) {
  1329  002490  A247               	btfss	_remote_frame/(0+8),_remote_frame& (0+7),c
  1330  002492  D017               	goto	l4808
  1331                           
  1332                           ;motore.c: 201: CANsendMessage(id, data_array, 8, CAN_CONFIG_STD_MSG & CAN_NORMAL_TX_FRA
      +                          ME & CAN_TX_PRIORITY_0);
  1333  002494  C099  F06E         	movff	_id,CANsendMessage@identifier
  1334  002498  C09A  F06F         	movff	_id+1,CANsendMessage@identifier+1
  1335  00249C  C09B  F070         	movff	_id+2,CANsendMessage@identifier+2
  1336  0024A0  C09C  F071         	movff	_id+3,CANsendMessage@identifier+3
  1337  0024A4  0E22               	movlw	low _data_array
  1338  0024A6  0100               	movlb	0	; () banked
  1339  0024A8  6F72               	movwf	CANsendMessage@data& (0+255),b
  1340  0024AA  0E00               	movlw	high _data_array
  1341  0024AC  0100               	movlb	0	; () banked
  1342  0024AE  6F73               	movwf	(CANsendMessage@data+1)& (0+255),b
  1343  0024B0  0E08               	movlw	8
  1344  0024B2  0100               	movlb	0	; () banked
  1345  0024B4  6F74               	movwf	CANsendMessage@dataLength& (0+255),b
  1346  0024B6  0EBC               	movlw	188
  1347  0024B8  0100               	movlb	0	; () banked
  1348  0024BA  6F75               	movwf	CANsendMessage@flags& (0+255),b
  1349  0024BC  EC54  F006         	call	_CANsendMessage	;wreg free
  1350                           
  1351                           ;motore.c: 202: remote_frame = 0;
  1352  0024C0  9247               	bcf	_remote_frame/(0+8),_remote_frame& (0+7),c
  1353  0024C2                     l4808:
  1354                           
  1355                           ;motore.c: 203: }
  1356                           ;motore.c: 204: }
  1357                           ;motore.c: 205: if ((TXB0CONbits.TXABT) || (TXB1CONbits.TXABT)) {
  1358  0024C2  010F               	movlb	15	; () banked
  1359  0024C4  BD40               	btfsc	64,6,b	;volatile
  1360  0024C6  D003               	goto	l4812
  1361                           
  1362                           ; BSR set to: 15
  1363  0024C8  010F               	movlb	15	; () banked
  1364  0024CA  AD30               	btfss	48,6,b	;volatile
  1365  0024CC  0012               	return	
  1366  0024CE                     l4812:
  1367                           
  1368                           ; BSR set to: 15
  1369                           ;motore.c: 206: delay_ms(5);
  1370  0024CE  0E00               	movlw	0
  1371  0024D0  0100               	movlb	0	; () banked
  1372  0024D2  6F7D               	movwf	(delay_ms@value_ms+1)& (0+255),b
  1373  0024D4  0E05               	movlw	5
  1374  0024D6  6F7C               	movwf	delay_ms@value_ms& (0+255),b
  1375  0024D8  EC30  F013         	call	_delay_ms	;wreg free
  1376                           
  1377                           ;motore.c: 207: if (remote_frame == 1) {
  1378  0024DC  A247               	btfss	_remote_frame/(0+8),_remote_frame& (0+7),c
  1379  0024DE  0012               	return	
  1380                           
  1381                           ;motore.c: 208: CANsendMessage(id, data_array, 8, CAN_CONFIG_STD_MSG & CAN_NORMAL_TX_FRA
      +                          ME & CAN_TX_PRIORITY_0);
  1382  0024E0  C099  F06E         	movff	_id,CANsendMessage@identifier
  1383  0024E4  C09A  F06F         	movff	_id+1,CANsendMessage@identifier+1
  1384  0024E8  C09B  F070         	movff	_id+2,CANsendMessage@identifier+2
  1385  0024EC  C09C  F071         	movff	_id+3,CANsendMessage@identifier+3
  1386  0024F0  0E22               	movlw	low _data_array
  1387  0024F2  0100               	movlb	0	; () banked
  1388  0024F4  6F72               	movwf	CANsendMessage@data& (0+255),b
  1389  0024F6  0E00               	movlw	high _data_array
  1390  0024F8  0100               	movlb	0	; () banked
  1391  0024FA  6F73               	movwf	(CANsendMessage@data+1)& (0+255),b
  1392  0024FC  0E08               	movlw	8
  1393  0024FE  0100               	movlb	0	; () banked
  1394  002500  6F74               	movwf	CANsendMessage@dataLength& (0+255),b
  1395  002502  0EBC               	movlw	188
  1396  002504  0100               	movlb	0	; () banked
  1397  002506  6F75               	movwf	CANsendMessage@flags& (0+255),b
  1398  002508  EC54  F006         	call	_CANsendMessage	;wreg free
  1399                           
  1400                           ;motore.c: 209: remote_frame = 0;
  1401  00250C  9247               	bcf	_remote_frame/(0+8),_remote_frame& (0+7),c
  1402  00250E  0012               	return	
  1403  002510                     __end_of_send_data:
  1404                           	opt stack 0
  1405                           tblptru	equ	0xFF8
  1406                           tblptrh	equ	0xFF7
  1407                           tblptrl	equ	0xFF6
  1408                           tablat	equ	0xFF5
  1409                           postinc0	equ	0xFEE
  1410                           wreg	equ	0xFE8
  1411                           status	equ	0xFD8
  1412                           
  1413 ;; *************** function _delay_ms *****************
  1414 ;; Defined at:
  1415 ;;		line 61 in file "K:/Tesina/LaurTec_PIC_libraries_v_3.3.0/src\delay.c"
  1416 ;; Parameters:    Size  Location     Type
  1417 ;;  value_ms        2   28[BANK0 ] unsigned int 
  1418 ;; Auto vars:     Size  Location     Type
  1419 ;;		None
  1420 ;; Return value:  Size  Location     Type
  1421 ;;		None               void
  1422 ;; Registers used:
  1423 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  1424 ;; Tracked objects:
  1425 ;;		On entry : 0/0
  1426 ;;		On exit  : 0/0
  1427 ;;		Unchanged: 0/0
  1428 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1429 ;;      Params:         0       2       0       0
  1430 ;;      Locals:         0       0       0       0
  1431 ;;      Temps:          0       0       0       0
  1432 ;;      Totals:         0       2       0       0
  1433 ;;Total ram usage:        2 bytes
  1434 ;; Hardware stack levels used:    1
  1435 ;; Hardware stack levels required when called:    4
  1436 ;; This function calls:
  1437 ;;		___wmul
  1438 ;; This function is called by:
  1439 ;;		_main
  1440 ;;		_send_data
  1441 ;;		_delay_s
  1442 ;; This function uses a non-reentrant model
  1443 ;;
  1444                           
  1445                           	psect	text2
  1446  002660                     __ptext2:
  1447                           	opt stack 0
  1448  002660                     _delay_ms:
  1449                           	opt stack 25
  1450                           
  1451                           ;src\delay.c: 73: clock_counter_reference = value_ms * delay_quartz_frequency_value;
  1452                           
  1453                           ;incstack = 0
  1454  002660  C0B8  F076         	movff	_delay_quartz_frequency_value,___wmul@multiplier	;volatile
  1455  002664  0100               	movlb	0	; () banked
  1456  002666  6B77               	clrf	(___wmul@multiplier+1)& (0+255),b
  1457  002668  C07C  F078         	movff	delay_ms@value_ms,___wmul@multiplicand
  1458  00266C  C07D  F079         	movff	delay_ms@value_ms+1,___wmul@multiplicand+1
  1459  002670  EC4D  F013         	call	___wmul	;wreg free
  1460  002674  C076  F0A9         	movff	?___wmul,_clock_counter_reference	;volatile
  1461  002678  C077  F0AA         	movff	?___wmul+1,_clock_counter_reference+1	;volatile
  1462                           
  1463                           ;src\delay.c: 75: while (clock_counter_reference) {
  1464  00267C  D007               	goto	l571
  1465  00267E                     l4612:
  1466                           
  1467                           ;src\delay.c: 85: _delay(240);
  1468  00267E  0E50               	movlw	80
  1469  002680                     u6287:
  1470  002680  2EE8               	decfsz	wreg,f,c
  1471  002682  D7FE               	goto	u6287
  1472                           
  1473                           ;src\delay.c: 88: clock_counter_reference--;
  1474  002684  0100               	movlb	0	; () banked
  1475  002686  07A9               	decf	_clock_counter_reference& (0+255),f,b	;volatile
  1476  002688  A0D8               	btfss	status,0,c
  1477  00268A  07AA               	decf	(_clock_counter_reference+1)& (0+255),f,b	;volatile
  1478  00268C                     l571:
  1479  00268C  0100               	movlb	0	; () banked
  1480  00268E  51A9               	movf	_clock_counter_reference& (0+255),w,b	;volatile
  1481  002690  0100               	movlb	0	; () banked
  1482  002692  11AA               	iorwf	(_clock_counter_reference+1)& (0+255),w,b	;volatile
  1483  002694  B4D8               	btfsc	status,2,c
  1484  002696  0012               	return	
  1485  002698  D7F2               	goto	l4612
  1486  00269A                     __end_of_delay_ms:
  1487                           	opt stack 0
  1488                           tblptru	equ	0xFF8
  1489                           tblptrh	equ	0xFF7
  1490                           tblptrl	equ	0xFF6
  1491                           tablat	equ	0xFF5
  1492                           postinc0	equ	0xFEE
  1493                           wreg	equ	0xFE8
  1494                           status	equ	0xFD8
  1495                           
  1496 ;; *************** function _configurazione_iniziale *****************
  1497 ;; Defined at:
  1498 ;;		line 225 in file "motore.c"
  1499 ;; Parameters:    Size  Location     Type
  1500 ;;		None
  1501 ;; Auto vars:     Size  Location     Type
  1502 ;;		None
  1503 ;; Return value:  Size  Location     Type
  1504 ;;		None               void
  1505 ;; Registers used:
  1506 ;;		wreg, status,2, status,0, cstack
  1507 ;; Tracked objects:
  1508 ;;		On entry : 0/0
  1509 ;;		On exit  : 0/0
  1510 ;;		Unchanged: 0/0
  1511 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1512 ;;      Params:         0       0       0       0
  1513 ;;      Locals:         0       0       0       0
  1514 ;;      Temps:          0       0       0       0
  1515 ;;      Totals:         0       0       0       0
  1516 ;;Total ram usage:        0 bytes
  1517 ;; Hardware stack levels used:    1
  1518 ;; Hardware stack levels required when called:    5
  1519 ;; This function calls:
  1520 ;;		_CANInitialize
  1521 ;; This function is called by:
  1522 ;;		_main
  1523 ;; This function uses a non-reentrant model
  1524 ;;
  1525                           
  1526                           	psect	text3
  1527  00235A                     __ptext3:
  1528                           	opt stack 0
  1529  00235A                     _configurazione_iniziale:
  1530                           	opt stack 25
  1531                           
  1532                           ;motore.c: 228: CANInitialize(4, 6, 5, 1, 3, CAN_CONFIG_LINE_FILTER_OFF & CAN_CONFIG_SAM
      +                          PLE_ONCE & CAN_CONFIG_ALL_VALID_MSG & CAN_CONFIG_DBL_BUFFER_ON);
  1533                           
  1534                           ; BSR set to: 0
  1535                           ;incstack = 0
  1536  00235A  0E06               	movlw	6
  1537  00235C  0100               	movlb	0	; () banked
  1538  00235E  6F7C               	movwf	CANInitialize@phaseSeg1& (0+255),b
  1539  002360  0E05               	movlw	5
  1540  002362  0100               	movlb	0	; () banked
  1541  002364  6F7D               	movwf	CANInitialize@phaseSeg2& (0+255),b
  1542  002366  0E01               	movlw	1
  1543  002368  0100               	movlb	0	; () banked
  1544  00236A  6F7E               	movwf	CANInitialize@SJW& (0+255),b
  1545  00236C  0E03               	movlw	3
  1546  00236E  0100               	movlb	0	; () banked
  1547  002370  6F7F               	movwf	CANInitialize@BRP& (0+255),b
  1548  002372  0E9D               	movlw	157
  1549  002374  0100               	movlb	0	; () banked
  1550  002376  6F80               	movwf	CANInitialize@flags& (0+255),b
  1551  002378  0E04               	movlw	4
  1552  00237A  EC6B  F010         	call	_CANInitialize
  1553                           
  1554                           ;motore.c: 229: RCONbits.IPEN = 1;
  1555  00237E  8ED0               	bsf	4048,7,c	;volatile
  1556                           
  1557                           ;motore.c: 230: INTCONbits.INT0IF = 0;
  1558  002380  92F2               	bcf	intcon,1,c	;volatile
  1559                           
  1560                           ;motore.c: 231: INTCONbits.INT0IE = 1;
  1561  002382  88F2               	bsf	intcon,4,c	;volatile
  1562                           
  1563                           ;motore.c: 232: PIR3bits.RXB1IF = 0;
  1564  002384  92A4               	bcf	4004,1,c	;volatile
  1565                           
  1566                           ;motore.c: 233: PIR3bits.RXB0IF = 0;
  1567  002386  90A4               	bcf	4004,0,c	;volatile
  1568                           
  1569                           ;motore.c: 234: PIE3bits.RXB1IE = 1;
  1570  002388  82A3               	bsf	4003,1,c	;volatile
  1571                           
  1572                           ;motore.c: 235: PIE3bits.RXB0IE = 1;
  1573  00238A  80A3               	bsf	4003,0,c	;volatile
  1574                           
  1575                           ;motore.c: 236: IPR3bits.RXB1IP = 0;
  1576  00238C  92A5               	bcf	4005,1,c	;volatile
  1577                           
  1578                           ;motore.c: 237: IPR3bits.RXB0IP = 0;
  1579  00238E  90A5               	bcf	4005,0,c	;volatile
  1580                           
  1581                           ;motore.c: 238: INTCONbits.GIEH = 1;
  1582  002390  8EF2               	bsf	intcon,7,c	;volatile
  1583                           
  1584                           ;motore.c: 239: INTCONbits.GIEL = 1;
  1585  002392  8CF2               	bsf	intcon,6,c	;volatile
  1586                           
  1587                           ;motore.c: 240: INTCON2bits.INTEDG0 = 1;
  1588  002394  8CF1               	bsf	intcon2,6,c	;volatile
  1589                           
  1590                           ;motore.c: 243: T3CON = 0x01;
  1591  002396  0E01               	movlw	1
  1592  002398  6EB1               	movwf	4017,c	;volatile
  1593                           
  1594                           ;motore.c: 244: PIR2bits.TMR3IF = 0;
  1595  00239A  92A1               	bcf	4001,1,c	;volatile
  1596                           
  1597                           ;motore.c: 245: IPR2bits.TMR3IP = 0;
  1598  00239C  92A2               	bcf	4002,1,c	;volatile
  1599                           
  1600                           ;motore.c: 246: TMR3H = 0x63;
  1601  00239E  0E63               	movlw	99
  1602  0023A0  6EB3               	movwf	4019,c	;volatile
  1603                           
  1604                           ;motore.c: 247: TMR3L = 0xC0;
  1605  0023A2  0EC0               	movlw	192
  1606  0023A4  6EB2               	movwf	4018,c	;volatile
  1607                           
  1608                           ;motore.c: 248: PIE2bits.TMR3IE = 1;
  1609  0023A6  82A0               	bsf	4000,1,c	;volatile
  1610                           
  1611                           ;motore.c: 252: ADCON0bits.ADON = 1;
  1612  0023A8  80C2               	bsf	4034,0,c	;volatile
  1613                           
  1614                           ;motore.c: 253: ADCON0bits.CHS0 = 0;
  1615  0023AA  94C2               	bcf	4034,2,c	;volatile
  1616                           
  1617                           ;motore.c: 254: ADCON0bits.CHS1 = 0;
  1618  0023AC  96C2               	bcf	4034,3,c	;volatile
  1619                           
  1620                           ;motore.c: 255: ADCON0bits.CHS2 = 0;
  1621  0023AE  98C2               	bcf	4034,4,c	;volatile
  1622                           
  1623                           ;motore.c: 256: ADCON0bits.CHS3 = 0;
  1624  0023B0  9AC2               	bcf	4034,5,c	;volatile
  1625                           
  1626                           ;motore.c: 257: ADCON1bits.PCFG0 = 0;
  1627  0023B2  90C1               	bcf	4033,0,c	;volatile
  1628                           
  1629                           ;motore.c: 258: ADCON1bits.PCFG1 = 1;
  1630  0023B4  82C1               	bsf	4033,1,c	;volatile
  1631                           
  1632                           ;motore.c: 259: ADCON1bits.PCFG2 = 1;
  1633  0023B6  84C1               	bsf	4033,2,c	;volatile
  1634                           
  1635                           ;motore.c: 260: ADCON1bits.PCFG3 = 1;
  1636  0023B8  86C1               	bsf	4033,3,c	;volatile
  1637                           
  1638                           ;motore.c: 261: ADCON1bits.VCFG0 = 0;
  1639  0023BA  98C1               	bcf	4033,4,c	;volatile
  1640                           
  1641                           ;motore.c: 262: ADCON1bits.VCFG1 = 0;
  1642  0023BC  9AC1               	bcf	4033,5,c	;volatile
  1643                           
  1644                           ;motore.c: 263: ADCON2bits.ADCS0 = 1;
  1645  0023BE  80C0               	bsf	4032,0,c	;volatile
  1646                           
  1647                           ;motore.c: 264: ADCON2bits.ADCS1 = 0;
  1648  0023C0  92C0               	bcf	4032,1,c	;volatile
  1649                           
  1650                           ;motore.c: 265: ADCON2bits.ADCS2 = 1;
  1651  0023C2  84C0               	bsf	4032,2,c	;volatile
  1652                           
  1653                           ;motore.c: 266: ADCON2bits.ACQT0 = 0;
  1654  0023C4  96C0               	bcf	4032,3,c	;volatile
  1655                           
  1656                           ;motore.c: 267: ADCON2bits.ACQT1 = 1;
  1657  0023C6  88C0               	bsf	4032,4,c	;volatile
  1658                           
  1659                           ;motore.c: 268: ADCON2bits.ACQT2 = 1;
  1660  0023C8  8AC0               	bsf	4032,5,c	;volatile
  1661                           
  1662                           ;motore.c: 269: ADCON2bits.ADFM = 0;
  1663  0023CA  9EC0               	bcf	4032,7,c	;volatile
  1664                           
  1665                           ;motore.c: 273: LATA = 0x00;
  1666  0023CC  0E00               	movlw	0
  1667  0023CE  6E89               	movwf	3977,c	;volatile
  1668                           
  1669                           ;motore.c: 274: TRISA = 0b01111111;
  1670  0023D0  0E7F               	movlw	127
  1671  0023D2  6E92               	movwf	3986,c	;volatile
  1672                           
  1673                           ;motore.c: 276: LATB = 0x00;
  1674  0023D4  0E00               	movlw	0
  1675  0023D6  6E8A               	movwf	3978,c	;volatile
  1676                           
  1677                           ;motore.c: 277: TRISB = 0b11111011;
  1678  0023D8  0EFB               	movlw	251
  1679  0023DA  6E93               	movwf	3987,c	;volatile
  1680                           
  1681                           ;motore.c: 279: LATC = 0x00;
  1682  0023DC  0E00               	movlw	0
  1683  0023DE  6E8B               	movwf	3979,c	;volatile
  1684                           
  1685                           ;motore.c: 280: TRISC = 0x00;
  1686  0023E0  0E00               	movlw	0
  1687  0023E2  6E94               	movwf	3988,c	;volatile
  1688                           
  1689                           ;motore.c: 282: LATD = 0x00;
  1690  0023E4  0E00               	movlw	0
  1691  0023E6  6E8C               	movwf	3980,c	;volatile
  1692                           
  1693                           ;motore.c: 283: TRISD = 0x00;
  1694  0023E8  0E00               	movlw	0
  1695  0023EA  6E95               	movwf	3989,c	;volatile
  1696                           
  1697                           ;motore.c: 285: LATE = 0x00;
  1698  0023EC  0E00               	movlw	0
  1699  0023EE  6E8D               	movwf	3981,c	;volatile
  1700                           
  1701                           ;motore.c: 286: TRISE = 0xFF;
  1702  0023F0  6896               	setf	3990,c	;volatile
  1703  0023F2  0012               	return		;funcret
  1704  0023F4                     __end_of_configurazione_iniziale:
  1705                           	opt stack 0
  1706                           tblptru	equ	0xFF8
  1707                           tblptrh	equ	0xFF7
  1708                           tblptrl	equ	0xFF6
  1709                           tablat	equ	0xFF5
  1710                           intcon	equ	0xFF2
  1711                           intcon2	equ	0xFF1
  1712                           postinc0	equ	0xFEE
  1713                           wreg	equ	0xFE8
  1714                           status	equ	0xFD8
  1715                           
  1716 ;; *************** function _CANInitialize *****************
  1717 ;; Defined at:
  1718 ;;		line 218 in file "K:/Tesina/LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
  1719 ;; Parameters:    Size  Location     Type
  1720 ;;  propSeg         1    wreg     unsigned char 
  1721 ;;  phaseSeg1       1   28[BANK0 ] unsigned char 
  1722 ;;  phaseSeg2       1   29[BANK0 ] unsigned char 
  1723 ;;  SJW             1   30[BANK0 ] unsigned char 
  1724 ;;  BRP             1   31[BANK0 ] unsigned char 
  1725 ;;  flags           1   32[BANK0 ] enum E16844
  1726 ;; Auto vars:     Size  Location     Type
  1727 ;;  propSeg         1   37[BANK0 ] unsigned char 
  1728 ;;  FilterConfig    1   39[BANK0 ] unsigned char 
  1729 ;;  FilterConfig    1   38[BANK0 ] unsigned char 
  1730 ;; Return value:  Size  Location     Type
  1731 ;;		None               void
  1732 ;; Registers used:
  1733 ;;		wreg, status,2, status,0, cstack
  1734 ;; Tracked objects:
  1735 ;;		On entry : 0/0
  1736 ;;		On exit  : 0/0
  1737 ;;		Unchanged: 0/0
  1738 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1739 ;;      Params:         0       5       0       0
  1740 ;;      Locals:         0       3       0       0
  1741 ;;      Temps:          0       4       0       0
  1742 ;;      Totals:         0      12       0       0
  1743 ;;Total ram usage:       12 bytes
  1744 ;; Hardware stack levels used:    1
  1745 ;; Hardware stack levels required when called:    4
  1746 ;; This function calls:
  1747 ;;		_CANOperationMode
  1748 ;;		_CANSetFilter
  1749 ;;		_CANSetMask
  1750 ;; This function is called by:
  1751 ;;		_configurazione_iniziale
  1752 ;; This function uses a non-reentrant model
  1753 ;;
  1754                           
  1755                           	psect	text4
  1756  0020D6                     __ptext4:
  1757                           	opt stack 0
  1758  0020D6                     _CANInitialize:
  1759                           	opt stack 25
  1760                           
  1761                           ;incstack = 0
  1762                           ;CANInitialize@propSeg stored from wreg
  1763  0020D6  0100               	movlb	0	; () banked
  1764  0020D8  6F85               	movwf	CANInitialize@propSeg& (0+255),b
  1765                           
  1766                           ;inc\CANlib.h: 220: BYTE FilterConfig1;
  1767                           ;inc\CANlib.h: 221: BYTE FilterConfig2;
  1768                           ;inc\CANlib.h: 223: CANOperationMode(CAN_OP_MODE_CONFIG);
  1769  0020DA  0E80               	movlw	128
  1770  0020DC  ECA1  F013         	call	_CANOperationMode
  1771                           
  1772                           ;inc\CANlib.h: 225: BRGCON1 = 0x00;
  1773  0020E0  0E00               	movlw	0
  1774  0020E2  6E70               	movwf	3952,c	;volatile
  1775                           
  1776                           ;inc\CANlib.h: 226: BRGCON2 = 0x00;
  1777  0020E4  0E00               	movlw	0
  1778  0020E6  6E71               	movwf	3953,c	;volatile
  1779                           
  1780                           ;inc\CANlib.h: 227: BRGCON3 = 0x00;
  1781  0020E8  0E00               	movlw	0
  1782  0020EA  6E72               	movwf	3954,c	;volatile
  1783                           
  1784                           ;inc\CANlib.h: 229: SJW= SJW << 6;
  1785  0020EC  0100               	movlb	0	; () banked
  1786  0020EE  417E               	rrncf	CANInitialize@SJW& (0+255),w,b
  1787  0020F0  42E8               	rrncf	wreg,f,c
  1788  0020F2  0BC0               	andlw	192
  1789  0020F4  0100               	movlb	0	; () banked
  1790  0020F6  6F7E               	movwf	CANInitialize@SJW& (0+255),b
  1791                           
  1792                           ; BSR set to: 0
  1793                           ;inc\CANlib.h: 230: BRGCON1 |= SJW;
  1794  0020F8  0100               	movlb	0	; () banked
  1795  0020FA  517E               	movf	CANInitialize@SJW& (0+255),w,b
  1796  0020FC  1270               	iorwf	3952,f,c	;volatile
  1797                           
  1798                           ; BSR set to: 0
  1799                           ;inc\CANlib.h: 231: BRGCON1 |= BRP;
  1800  0020FE  0100               	movlb	0	; () banked
  1801  002100  517F               	movf	CANInitialize@BRP& (0+255),w,b
  1802  002102  1270               	iorwf	3952,f,c	;volatile
  1803                           
  1804                           ; BSR set to: 0
  1805                           ;inc\CANlib.h: 233: BRGCON2 |= propSeg;
  1806  002104  0100               	movlb	0	; () banked
  1807  002106  5185               	movf	CANInitialize@propSeg& (0+255),w,b
  1808  002108  1271               	iorwf	3953,f,c	;volatile
  1809                           
  1810                           ; BSR set to: 0
  1811                           ;inc\CANlib.h: 234: phaseSeg1 = phaseSeg1 <<3;
  1812  00210A  0100               	movlb	0	; () banked
  1813  00210C  397C               	swapf	CANInitialize@phaseSeg1& (0+255),w,b
  1814  00210E  42E8               	rrncf	wreg,f,c
  1815  002110  0BF8               	andlw	248
  1816  002112  0100               	movlb	0	; () banked
  1817  002114  6F7C               	movwf	CANInitialize@phaseSeg1& (0+255),b
  1818                           
  1819                           ; BSR set to: 0
  1820                           ;inc\CANlib.h: 235: BRGCON2 |= phaseSeg1;
  1821  002116  0100               	movlb	0	; () banked
  1822  002118  517C               	movf	CANInitialize@phaseSeg1& (0+255),w,b
  1823  00211A  1271               	iorwf	3953,f,c	;volatile
  1824                           
  1825                           ; BSR set to: 0
  1826                           ;inc\CANlib.h: 237: if ( !(flags & CAN_CONFIG_SAMPLE_BIT) )
  1827  00211C  0100               	movlb	0	; () banked
  1828  00211E  A580               	btfss	CANInitialize@flags& (0+255),2,b
  1829                           
  1830                           ; BSR set to: 0
  1831                           ;inc\CANlib.h: 238: BRGCON2bits.SAM= 1;
  1832  002120  8C71               	bsf	3953,6,c	;volatile
  1833                           
  1834                           ; BSR set to: 0
  1835                           ;inc\CANlib.h: 240: if ( flags & CAN_CONFIG_PHSEG2_PRG_BIT )
  1836  002122  0100               	movlb	0	; () banked
  1837  002124  B180               	btfsc	CANInitialize@flags& (0+255),0,b
  1838                           
  1839                           ; BSR set to: 0
  1840                           ;inc\CANlib.h: 241: BRGCON2bits.SEG2PHTS = 1;
  1841  002126  8E71               	bsf	3953,7,c	;volatile
  1842                           
  1843                           ; BSR set to: 0
  1844                           ;inc\CANlib.h: 243: BRGCON3 |= phaseSeg2;
  1845                           
  1846                           ; BSR set to: 0
  1847  002128  0100               	movlb	0	; () banked
  1848  00212A  517D               	movf	CANInitialize@phaseSeg2& (0+255),w,b
  1849  00212C  1272               	iorwf	3954,f,c	;volatile
  1850                           
  1851                           ; BSR set to: 0
  1852                           ;inc\CANlib.h: 245: if ( flags & CAN_CONFIG_LINE_FILTER_BIT )
  1853  00212E  0100               	movlb	0	; () banked
  1854  002130  B380               	btfsc	CANInitialize@flags& (0+255),1,b
  1855                           
  1856                           ; BSR set to: 0
  1857                           ;inc\CANlib.h: 246: BRGCON3bits.WAKFIL = 1;
  1858  002132  8C72               	bsf	3954,6,c	;volatile
  1859                           
  1860                           ; BSR set to: 0
  1861                           ;inc\CANlib.h: 251: RXB0CON = flags & CAN_CONFIG_MSG_BITS;
  1862                           
  1863                           ; BSR set to: 0
  1864  002134  0100               	movlb	0	; () banked
  1865  002136  5180               	movf	CANInitialize@flags& (0+255),w,b
  1866  002138  0B60               	andlw	96
  1867  00213A  6E60               	movwf	3936,c	;volatile
  1868                           
  1869                           ;inc\CANlib.h: 252: if ( (flags & CAN_CONFIG_DBL_BUFFER_BIT)== CAN_CONFIG_DBL_BUFFER_ON 
      +                          )
  1870  00213C  0100               	movlb	0	; () banked
  1871  00213E  5180               	movf	CANInitialize@flags& (0+255),w,b
  1872  002140  0B10               	andlw	16
  1873  002142  0AFF               	xorlw	255
  1874  002144  B4D8               	btfsc	status,2,c
  1875                           
  1876                           ; BSR set to: 0
  1877                           ;inc\CANlib.h: 253: RXB0CONbits.RXB0DBEN = 1;
  1878  002146  8460               	bsf	3936,2,c	;volatile
  1879                           
  1880                           ; BSR set to: 0
  1881                           ;inc\CANlib.h: 255: RXB1CON = RXB0CON;
  1882  002148  CF60 FF50          	movff	3936,3920	;volatile
  1883                           
  1884                           ; BSR set to: 0
  1885                           ;inc\CANlib.h: 259: CANSetMask (CAN_MASK_B1, 0x00000000, CAN_CONFIG_XTD_MSG);
  1886  00214C  0E00               	movlw	0
  1887  00214E  0100               	movlb	0	; () banked
  1888  002150  6F6E               	movwf	CANSetMask@mask& (0+255),b
  1889  002152  0E00               	movlw	0
  1890  002154  6F6F               	movwf	(CANSetMask@mask+1)& (0+255),b
  1891  002156  0E00               	movlw	0
  1892  002158  6F70               	movwf	(CANSetMask@mask+2)& (0+255),b
  1893  00215A  0E00               	movlw	0
  1894  00215C  6F71               	movwf	(CANSetMask@mask+3)& (0+255),b
  1895  00215E  0EF7               	movlw	247
  1896  002160  0100               	movlb	0	; () banked
  1897  002162  6F72               	movwf	CANSetMask@type& (0+255),b
  1898  002164  0E01               	movlw	1
  1899  002166  EC9C  F00E         	call	_CANSetMask
  1900                           
  1901                           ;inc\CANlib.h: 260: CANSetMask (CAN_MASK_B2, 0x00000000, CAN_CONFIG_XTD_MSG);
  1902  00216A  0E00               	movlw	0
  1903  00216C  0100               	movlb	0	; () banked
  1904  00216E  6F6E               	movwf	CANSetMask@mask& (0+255),b
  1905  002170  0E00               	movlw	0
  1906  002172  6F6F               	movwf	(CANSetMask@mask+1)& (0+255),b
  1907  002174  0E00               	movlw	0
  1908  002176  6F70               	movwf	(CANSetMask@mask+2)& (0+255),b
  1909  002178  0E00               	movlw	0
  1910  00217A  6F71               	movwf	(CANSetMask@mask+3)& (0+255),b
  1911  00217C  0EF7               	movlw	247
  1912  00217E  0100               	movlb	0	; () banked
  1913  002180  6F72               	movwf	CANSetMask@type& (0+255),b
  1914  002182  0E02               	movlw	2
  1915  002184  EC9C  F00E         	call	_CANSetMask
  1916                           
  1917                           ;inc\CANlib.h: 263: switch( (flags & CAN_CONFIG_MSG_BITS) | ~CAN_CONFIG_MSG_BITS )
  1918  002188  D00F               	goto	l4360
  1919  00218A                     l4354:
  1920                           
  1921                           ;inc\CANlib.h: 266: FilterConfig1 = CAN_CONFIG_XTD_MSG;
  1922  00218A  0EF7               	movlw	247
  1923  00218C  0100               	movlb	0	; () banked
  1924  00218E  6F86               	movwf	CANInitialize@FilterConfig1& (0+255),b
  1925  002190  D007               	goto	l4356
  1926  002192                     l360:
  1927                           
  1928                           ; BSR set to: 0
  1929                           ;inc\CANlib.h: 271: FilterConfig1 = CAN_CONFIG_STD_MSG;
  1930  002192  0100               	movlb	0	; () banked
  1931  002194  6986               	setf	CANInitialize@FilterConfig1& (0+255),b
  1932                           
  1933                           ;inc\CANlib.h: 272: FilterConfig2 = CAN_CONFIG_STD_MSG;
  1934  002196  0100               	movlb	0	; () banked
  1935  002198  6987               	setf	CANInitialize@FilterConfig2& (0+255),b
  1936                           
  1937                           ;inc\CANlib.h: 273: break;
  1938  00219A  D028               	goto	l4362
  1939  00219C                     l361:
  1940                           
  1941                           ; BSR set to: 0
  1942                           ;inc\CANlib.h: 275: FilterConfig1 = CAN_CONFIG_STD_MSG;
  1943  00219C  0100               	movlb	0	; () banked
  1944  00219E  6986               	setf	CANInitialize@FilterConfig1& (0+255),b
  1945  0021A0                     l4356:
  1946                           
  1947                           ; BSR set to: 0
  1948                           ;inc\CANlib.h: 276: FilterConfig2 = CAN_CONFIG_XTD_MSG;
  1949  0021A0  0EF7               	movlw	247
  1950  0021A2  0100               	movlb	0	; () banked
  1951  0021A4  6F87               	movwf	CANInitialize@FilterConfig2& (0+255),b
  1952                           
  1953                           ; BSR set to: 0
  1954                           ;inc\CANlib.h: 278: }
  1955                           
  1956                           ;inc\CANlib.h: 277: break;
  1957  0021A6  D022               	goto	l4362
  1958  0021A8                     l4360:
  1959  0021A8  0E9F               	movlw	159
  1960  0021AA  0100               	movlb	0	; () banked
  1961  0021AC  6F81               	movwf	??_CANInitialize& (0+255),b
  1962  0021AE  0EFF               	movlw	255
  1963  0021B0  0100               	movlb	0	; () banked
  1964  0021B2  6F82               	movwf	(??_CANInitialize+1)& (0+255),b
  1965  0021B4  0100               	movlb	0	; () banked
  1966  0021B6  5180               	movf	CANInitialize@flags& (0+255),w,b
  1967  0021B8  0B60               	andlw	96
  1968  0021BA  0100               	movlb	0	; () banked
  1969  0021BC  6F83               	movwf	(??_CANInitialize+2)& (0+255),b
  1970  0021BE  6B84               	clrf	(??_CANInitialize+3)& (0+255),b
  1971  0021C0  0100               	movlb	0	; () banked
  1972  0021C2  5181               	movf	??_CANInitialize& (0+255),w,b
  1973  0021C4  0100               	movlb	0	; () banked
  1974  0021C6  1383               	iorwf	(??_CANInitialize+2)& (0+255),f,b
  1975  0021C8  0100               	movlb	0	; () banked
  1976  0021CA  5182               	movf	(??_CANInitialize+1)& (0+255),w,b
  1977  0021CC  0100               	movlb	0	; () banked
  1978  0021CE  1384               	iorwf	(??_CANInitialize+3)& (0+255),f,b
  1979                           
  1980                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1981                           ; Switch size 1, requested type "space"
  1982                           ; Number of cases is 1, Range of values is 0 to 0
  1983                           ; switch strategies available:
  1984                           ; Name         Instructions Cycles
  1985                           ; simple_byte            4     3 (average)
  1986                           ;	Chosen strategy is simple_byte
  1987  0021D0  0100               	movlb	0	; () banked
  1988  0021D2  5184               	movf	(??_CANInitialize+3)& (0+255),w,b
  1989  0021D4  0A00               	xorlw	0	; case 0
  1990  0021D6  A4D8               	btfss	status,2,c
  1991  0021D8  D7E1               	goto	l361
  1992                           
  1993                           ; BSR set to: 0
  1994                           ; Switch size 1, requested type "space"
  1995                           ; Number of cases is 2, Range of values is 191 to 223
  1996                           ; switch strategies available:
  1997                           ; Name         Instructions Cycles
  1998                           ; simple_byte            7     4 (average)
  1999                           ;	Chosen strategy is simple_byte
  2000  0021DA  0100               	movlb	0	; () banked
  2001  0021DC  5183               	movf	(??_CANInitialize+2)& (0+255),w,b
  2002  0021DE  0ABF               	xorlw	191	; case 191
  2003  0021E0  B4D8               	btfsc	status,2,c
  2004  0021E2  D7D7               	goto	l360
  2005  0021E4  0A60               	xorlw	96	; case 223
  2006  0021E6  B4D8               	btfsc	status,2,c
  2007  0021E8  D7D0               	goto	l4354
  2008  0021EA  D7D8               	goto	l361
  2009  0021EC                     l4362:
  2010                           
  2011                           ; BSR set to: 0
  2012                           ;inc\CANlib.h: 280: CANSetFilter(CAN_FILTER_B1_F1, 0, FilterConfig1);
  2013  0021EC  0E00               	movlw	0
  2014  0021EE  0100               	movlb	0	; () banked
  2015  0021F0  6F6E               	movwf	CANSetFilter@filter& (0+255),b
  2016  0021F2  0E00               	movlw	0
  2017  0021F4  6F6F               	movwf	(CANSetFilter@filter+1)& (0+255),b
  2018  0021F6  0E00               	movlw	0
  2019  0021F8  6F70               	movwf	(CANSetFilter@filter+2)& (0+255),b
  2020  0021FA  0E00               	movlw	0
  2021  0021FC  6F71               	movwf	(CANSetFilter@filter+3)& (0+255),b
  2022  0021FE  C086  F072         	movff	CANInitialize@FilterConfig1,CANSetFilter@type
  2023  002202  0E00               	movlw	0
  2024  002204  ECD1  F000         	call	_CANSetFilter
  2025                           
  2026                           ;inc\CANlib.h: 281: CANSetFilter(CAN_FILTER_B1_F2, 0, FilterConfig1);
  2027  002208  0E00               	movlw	0
  2028  00220A  0100               	movlb	0	; () banked
  2029  00220C  6F6E               	movwf	CANSetFilter@filter& (0+255),b
  2030  00220E  0E00               	movlw	0
  2031  002210  6F6F               	movwf	(CANSetFilter@filter+1)& (0+255),b
  2032  002212  0E00               	movlw	0
  2033  002214  6F70               	movwf	(CANSetFilter@filter+2)& (0+255),b
  2034  002216  0E00               	movlw	0
  2035  002218  6F71               	movwf	(CANSetFilter@filter+3)& (0+255),b
  2036  00221A  C086  F072         	movff	CANInitialize@FilterConfig1,CANSetFilter@type
  2037  00221E  0E01               	movlw	1
  2038  002220  ECD1  F000         	call	_CANSetFilter
  2039                           
  2040                           ;inc\CANlib.h: 282: CANSetFilter(CAN_FILTER_B2_F1, 0, FilterConfig2);
  2041  002224  0E00               	movlw	0
  2042  002226  0100               	movlb	0	; () banked
  2043  002228  6F6E               	movwf	CANSetFilter@filter& (0+255),b
  2044  00222A  0E00               	movlw	0
  2045  00222C  6F6F               	movwf	(CANSetFilter@filter+1)& (0+255),b
  2046  00222E  0E00               	movlw	0
  2047  002230  6F70               	movwf	(CANSetFilter@filter+2)& (0+255),b
  2048  002232  0E00               	movlw	0
  2049  002234  6F71               	movwf	(CANSetFilter@filter+3)& (0+255),b
  2050  002236  C087  F072         	movff	CANInitialize@FilterConfig2,CANSetFilter@type
  2051  00223A  0E02               	movlw	2
  2052  00223C  ECD1  F000         	call	_CANSetFilter
  2053                           
  2054                           ;inc\CANlib.h: 283: CANSetFilter(CAN_FILTER_B2_F2, 0, FilterConfig2);
  2055  002240  0E00               	movlw	0
  2056  002242  0100               	movlb	0	; () banked
  2057  002244  6F6E               	movwf	CANSetFilter@filter& (0+255),b
  2058  002246  0E00               	movlw	0
  2059  002248  6F6F               	movwf	(CANSetFilter@filter+1)& (0+255),b
  2060  00224A  0E00               	movlw	0
  2061  00224C  6F70               	movwf	(CANSetFilter@filter+2)& (0+255),b
  2062  00224E  0E00               	movlw	0
  2063  002250  6F71               	movwf	(CANSetFilter@filter+3)& (0+255),b
  2064  002252  C087  F072         	movff	CANInitialize@FilterConfig2,CANSetFilter@type
  2065  002256  0E03               	movlw	3
  2066  002258  ECD1  F000         	call	_CANSetFilter
  2067                           
  2068                           ;inc\CANlib.h: 284: CANSetFilter(CAN_FILTER_B2_F3, 0, FilterConfig2);
  2069  00225C  0E00               	movlw	0
  2070  00225E  0100               	movlb	0	; () banked
  2071  002260  6F6E               	movwf	CANSetFilter@filter& (0+255),b
  2072  002262  0E00               	movlw	0
  2073  002264  6F6F               	movwf	(CANSetFilter@filter+1)& (0+255),b
  2074  002266  0E00               	movlw	0
  2075  002268  6F70               	movwf	(CANSetFilter@filter+2)& (0+255),b
  2076  00226A  0E00               	movlw	0
  2077  00226C  6F71               	movwf	(CANSetFilter@filter+3)& (0+255),b
  2078  00226E  C087  F072         	movff	CANInitialize@FilterConfig2,CANSetFilter@type
  2079  002272  0E04               	movlw	4
  2080  002274  ECD1  F000         	call	_CANSetFilter
  2081                           
  2082                           ;inc\CANlib.h: 285: CANSetFilter(CAN_FILTER_B2_F4, 0, FilterConfig2);
  2083  002278  0E00               	movlw	0
  2084  00227A  0100               	movlb	0	; () banked
  2085  00227C  6F6E               	movwf	CANSetFilter@filter& (0+255),b
  2086  00227E  0E00               	movlw	0
  2087  002280  6F6F               	movwf	(CANSetFilter@filter+1)& (0+255),b
  2088  002282  0E00               	movlw	0
  2089  002284  6F70               	movwf	(CANSetFilter@filter+2)& (0+255),b
  2090  002286  0E00               	movlw	0
  2091  002288  6F71               	movwf	(CANSetFilter@filter+3)& (0+255),b
  2092  00228A  C087  F072         	movff	CANInitialize@FilterConfig2,CANSetFilter@type
  2093  00228E  0E05               	movlw	5
  2094  002290  ECD1  F000         	call	_CANSetFilter
  2095                           
  2096                           ;inc\CANlib.h: 287: CANOperationMode(CAN_OP_MODE_NORMAL);
  2097  002294  0E00               	movlw	0
  2098  002296  ECA1  F013         	call	_CANOperationMode
  2099  00229A  0012               	return		;funcret
  2100  00229C                     __end_of_CANInitialize:
  2101                           	opt stack 0
  2102                           tblptru	equ	0xFF8
  2103                           tblptrh	equ	0xFF7
  2104                           tblptrl	equ	0xFF6
  2105                           tablat	equ	0xFF5
  2106                           intcon	equ	0xFF2
  2107                           intcon2	equ	0xFF1
  2108                           postinc0	equ	0xFEE
  2109                           wreg	equ	0xFE8
  2110                           status	equ	0xFD8
  2111                           
  2112 ;; *************** function _CANSetMask *****************
  2113 ;; Defined at:
  2114 ;;		line 640 in file "K:/Tesina/LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
  2115 ;; Parameters:    Size  Location     Type
  2116 ;;  numBuffer       1    wreg     enum E16878
  2117 ;;  mask            4   14[BANK0 ] unsigned long 
  2118 ;;  type            1   18[BANK0 ] enum E16844
  2119 ;; Auto vars:     Size  Location     Type
  2120 ;;  numBuffer       1   23[BANK0 ] enum E16878
  2121 ;;  tamp            4   24[BANK0 ] unsigned long 
  2122 ;; Return value:  Size  Location     Type
  2123 ;;		None               void
  2124 ;; Registers used:
  2125 ;;		wreg, status,2, status,0
  2126 ;; Tracked objects:
  2127 ;;		On entry : 0/0
  2128 ;;		On exit  : 0/0
  2129 ;;		Unchanged: 0/0
  2130 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2131 ;;      Params:         0       5       0       0
  2132 ;;      Locals:         0       5       0       0
  2133 ;;      Temps:          0       4       0       0
  2134 ;;      Totals:         0      14       0       0
  2135 ;;Total ram usage:       14 bytes
  2136 ;; Hardware stack levels used:    1
  2137 ;; Hardware stack levels required when called:    3
  2138 ;; This function calls:
  2139 ;;		Nothing
  2140 ;; This function is called by:
  2141 ;;		_CANInitialize
  2142 ;; This function uses a non-reentrant model
  2143 ;;
  2144                           
  2145                           	psect	text5
  2146  001D38                     __ptext5:
  2147                           	opt stack 0
  2148  001D38                     _CANSetMask:
  2149                           	opt stack 25
  2150                           
  2151                           ;incstack = 0
  2152                           ;CANSetMask@numBuffer stored from wreg
  2153  001D38  0100               	movlb	0	; () banked
  2154  001D3A  6F77               	movwf	CANSetMask@numBuffer& (0+255),b
  2155                           
  2156                           ;inc\CANlib.h: 643: if ((numBuffer ==CAN_MASK_B1) && (type == CAN_CONFIG_STD_MSG))
  2157  001D3C  0100               	movlb	0	; () banked
  2158  001D3E  0577               	decf	CANSetMask@numBuffer& (0+255),w,b
  2159  001D40  A4D8               	btfss	status,2,c
  2160  001D42  D056               	goto	l3918
  2161                           
  2162                           ; BSR set to: 0
  2163  001D44  0100               	movlb	0	; () banked
  2164  001D46  2972               	incf	CANSetMask@type& (0+255),w,b
  2165  001D48  A4D8               	btfss	status,2,c
  2166  001D4A  D052               	goto	l3918
  2167                           
  2168                           ; BSR set to: 0
  2169                           ;inc\CANlib.h: 644: {
  2170                           ;inc\CANlib.h: 645: tamp = (mask >> 3);
  2171  001D4C  C06E  F073         	movff	CANSetMask@mask,??_CANSetMask
  2172  001D50  C06F  F074         	movff	CANSetMask@mask+1,??_CANSetMask+1
  2173  001D54  C070  F075         	movff	CANSetMask@mask+2,??_CANSetMask+2
  2174  001D58  C071  F076         	movff	CANSetMask@mask+3,??_CANSetMask+3
  2175  001D5C  0E04               	movlw	4
  2176  001D5E  D006               	goto	u4480
  2177  001D60                     u4485:
  2178  001D60  0100               	movlb	0	; () banked
  2179  001D62  90D8               	bcf	status,0,c
  2180  001D64  3376               	rrcf	(??_CANSetMask+3)& (0+255),f,b
  2181  001D66  3375               	rrcf	(??_CANSetMask+2)& (0+255),f,b
  2182  001D68  3374               	rrcf	(??_CANSetMask+1)& (0+255),f,b
  2183  001D6A  3373               	rrcf	??_CANSetMask& (0+255),f,b
  2184  001D6C                     u4480:
  2185  001D6C  2EE8               	decfsz	wreg,f,c
  2186  001D6E  D7F8               	goto	u4485
  2187  001D70  C073  F078         	movff	??_CANSetMask,CANSetMask@tamp
  2188  001D74  C074  F079         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  2189  001D78  C075  F07A         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  2190  001D7C  C076  F07B         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  2191                           
  2192                           ; BSR set to: 0
  2193                           ;inc\CANlib.h: 646: tamp = tamp & 0x000000FF;
  2194  001D80  0100               	movlb	0	; () banked
  2195  001D82  5178               	movf	CANSetMask@tamp& (0+255),w,b
  2196  001D84  0100               	movlb	0	; () banked
  2197  001D86  6F78               	movwf	CANSetMask@tamp& (0+255),b
  2198  001D88  6B79               	clrf	(CANSetMask@tamp+1)& (0+255),b
  2199  001D8A  6B7A               	clrf	(CANSetMask@tamp+2)& (0+255),b
  2200  001D8C  6B7B               	clrf	(CANSetMask@tamp+3)& (0+255),b
  2201                           
  2202                           ; BSR set to: 0
  2203                           ;inc\CANlib.h: 647: RXM0SIDH = (unsigned char) tamp;
  2204  001D8E  C078  FF18         	movff	CANSetMask@tamp,3864	;volatile
  2205                           
  2206                           ; BSR set to: 0
  2207                           ;inc\CANlib.h: 649: tamp = mask & 0x00000007;
  2208  001D92  0E07               	movlw	7
  2209  001D94  0100               	movlb	0	; () banked
  2210  001D96  156E               	andwf	CANSetMask@mask& (0+255),w,b
  2211  001D98  0100               	movlb	0	; () banked
  2212  001D9A  6F78               	movwf	CANSetMask@tamp& (0+255),b
  2213  001D9C  0E00               	movlw	0
  2214  001D9E  0100               	movlb	0	; () banked
  2215  001DA0  156F               	andwf	(CANSetMask@mask+1)& (0+255),w,b
  2216  001DA2  0100               	movlb	0	; () banked
  2217  001DA4  6F79               	movwf	(CANSetMask@tamp+1)& (0+255),b
  2218  001DA6  0E00               	movlw	0
  2219  001DA8  0100               	movlb	0	; () banked
  2220  001DAA  1570               	andwf	(CANSetMask@mask+2)& (0+255),w,b
  2221  001DAC  0100               	movlb	0	; () banked
  2222  001DAE  6F7A               	movwf	(CANSetMask@tamp+2)& (0+255),b
  2223  001DB0  0E00               	movlw	0
  2224  001DB2  0100               	movlb	0	; () banked
  2225  001DB4  1571               	andwf	(CANSetMask@mask+3)& (0+255),w,b
  2226  001DB6  0100               	movlb	0	; () banked
  2227  001DB8  6F7B               	movwf	(CANSetMask@tamp+3)& (0+255),b
  2228                           
  2229                           ; BSR set to: 0
  2230                           ;inc\CANlib.h: 650: tamp = tamp << 5;
  2231  001DBA  C078  F073         	movff	CANSetMask@tamp,??_CANSetMask
  2232  001DBE  C079  F074         	movff	CANSetMask@tamp+1,??_CANSetMask+1
  2233  001DC2  C07A  F075         	movff	CANSetMask@tamp+2,??_CANSetMask+2
  2234  001DC6  C07B  F076         	movff	CANSetMask@tamp+3,??_CANSetMask+3
  2235  001DCA  0E05               	movlw	5
  2236  001DCC                     u4495:
  2237  001DCC  90D8               	bcf	status,0,c
  2238  001DCE  0100               	movlb	0	; () banked
  2239  001DD0  3773               	rlcf	??_CANSetMask& (0+255),f,b
  2240  001DD2  3774               	rlcf	(??_CANSetMask+1)& (0+255),f,b
  2241  001DD4  3775               	rlcf	(??_CANSetMask+2)& (0+255),f,b
  2242  001DD6  3776               	rlcf	(??_CANSetMask+3)& (0+255),f,b
  2243  001DD8  2EE8               	decfsz	wreg,f,c
  2244  001DDA  D7F8               	goto	u4495
  2245  001DDC  C073  F078         	movff	??_CANSetMask,CANSetMask@tamp
  2246  001DE0  C074  F079         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  2247  001DE4  C075  F07A         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  2248  001DE8  C076  F07B         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  2249                           
  2250                           ; BSR set to: 0
  2251                           ;inc\CANlib.h: 651: RXM0SIDL = (unsigned char) tamp;
  2252  001DEC  C078  FF19         	movff	CANSetMask@tamp,3865	;volatile
  2253  001DF0                     l3918:
  2254                           
  2255                           ; BSR set to: 0
  2256                           ;inc\CANlib.h: 652: }
  2257                           ;inc\CANlib.h: 654: if ((numBuffer ==CAN_MASK_B2) && (type == CAN_CONFIG_STD_MSG))
  2258  001DF0  0E02               	movlw	2
  2259  001DF2  0100               	movlb	0	; () banked
  2260  001DF4  1977               	xorwf	CANSetMask@numBuffer& (0+255),w,b
  2261  001DF6  A4D8               	btfss	status,2,c
  2262  001DF8  D056               	goto	l3934
  2263                           
  2264                           ; BSR set to: 0
  2265  001DFA  0100               	movlb	0	; () banked
  2266  001DFC  2972               	incf	CANSetMask@type& (0+255),w,b
  2267  001DFE  A4D8               	btfss	status,2,c
  2268  001E00  D052               	goto	l3934
  2269                           
  2270                           ; BSR set to: 0
  2271                           ;inc\CANlib.h: 655: {
  2272                           ;inc\CANlib.h: 656: tamp = (mask >> 3);
  2273  001E02  C06E  F073         	movff	CANSetMask@mask,??_CANSetMask
  2274  001E06  C06F  F074         	movff	CANSetMask@mask+1,??_CANSetMask+1
  2275  001E0A  C070  F075         	movff	CANSetMask@mask+2,??_CANSetMask+2
  2276  001E0E  C071  F076         	movff	CANSetMask@mask+3,??_CANSetMask+3
  2277  001E12  0E04               	movlw	4
  2278  001E14  D006               	goto	u4520
  2279  001E16                     u4525:
  2280  001E16  0100               	movlb	0	; () banked
  2281  001E18  90D8               	bcf	status,0,c
  2282  001E1A  3376               	rrcf	(??_CANSetMask+3)& (0+255),f,b
  2283  001E1C  3375               	rrcf	(??_CANSetMask+2)& (0+255),f,b
  2284  001E1E  3374               	rrcf	(??_CANSetMask+1)& (0+255),f,b
  2285  001E20  3373               	rrcf	??_CANSetMask& (0+255),f,b
  2286  001E22                     u4520:
  2287  001E22  2EE8               	decfsz	wreg,f,c
  2288  001E24  D7F8               	goto	u4525
  2289  001E26  C073  F078         	movff	??_CANSetMask,CANSetMask@tamp
  2290  001E2A  C074  F079         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  2291  001E2E  C075  F07A         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  2292  001E32  C076  F07B         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  2293                           
  2294                           ; BSR set to: 0
  2295                           ;inc\CANlib.h: 657: tamp = tamp & 0x000000FF;
  2296  001E36  0100               	movlb	0	; () banked
  2297  001E38  5178               	movf	CANSetMask@tamp& (0+255),w,b
  2298  001E3A  0100               	movlb	0	; () banked
  2299  001E3C  6F78               	movwf	CANSetMask@tamp& (0+255),b
  2300  001E3E  6B79               	clrf	(CANSetMask@tamp+1)& (0+255),b
  2301  001E40  6B7A               	clrf	(CANSetMask@tamp+2)& (0+255),b
  2302  001E42  6B7B               	clrf	(CANSetMask@tamp+3)& (0+255),b
  2303                           
  2304                           ; BSR set to: 0
  2305                           ;inc\CANlib.h: 658: RXM1SIDH = (unsigned char) tamp;
  2306  001E44  C078  FF1C         	movff	CANSetMask@tamp,3868	;volatile
  2307                           
  2308                           ; BSR set to: 0
  2309                           ;inc\CANlib.h: 660: tamp = mask & 0x00000007;
  2310  001E48  0E07               	movlw	7
  2311  001E4A  0100               	movlb	0	; () banked
  2312  001E4C  156E               	andwf	CANSetMask@mask& (0+255),w,b
  2313  001E4E  0100               	movlb	0	; () banked
  2314  001E50  6F78               	movwf	CANSetMask@tamp& (0+255),b
  2315  001E52  0E00               	movlw	0
  2316  001E54  0100               	movlb	0	; () banked
  2317  001E56  156F               	andwf	(CANSetMask@mask+1)& (0+255),w,b
  2318  001E58  0100               	movlb	0	; () banked
  2319  001E5A  6F79               	movwf	(CANSetMask@tamp+1)& (0+255),b
  2320  001E5C  0E00               	movlw	0
  2321  001E5E  0100               	movlb	0	; () banked
  2322  001E60  1570               	andwf	(CANSetMask@mask+2)& (0+255),w,b
  2323  001E62  0100               	movlb	0	; () banked
  2324  001E64  6F7A               	movwf	(CANSetMask@tamp+2)& (0+255),b
  2325  001E66  0E00               	movlw	0
  2326  001E68  0100               	movlb	0	; () banked
  2327  001E6A  1571               	andwf	(CANSetMask@mask+3)& (0+255),w,b
  2328  001E6C  0100               	movlb	0	; () banked
  2329  001E6E  6F7B               	movwf	(CANSetMask@tamp+3)& (0+255),b
  2330                           
  2331                           ; BSR set to: 0
  2332                           ;inc\CANlib.h: 661: tamp = tamp << 5;
  2333  001E70  C078  F073         	movff	CANSetMask@tamp,??_CANSetMask
  2334  001E74  C079  F074         	movff	CANSetMask@tamp+1,??_CANSetMask+1
  2335  001E78  C07A  F075         	movff	CANSetMask@tamp+2,??_CANSetMask+2
  2336  001E7C  C07B  F076         	movff	CANSetMask@tamp+3,??_CANSetMask+3
  2337  001E80  0E05               	movlw	5
  2338  001E82                     u4535:
  2339  001E82  90D8               	bcf	status,0,c
  2340  001E84  0100               	movlb	0	; () banked
  2341  001E86  3773               	rlcf	??_CANSetMask& (0+255),f,b
  2342  001E88  3774               	rlcf	(??_CANSetMask+1)& (0+255),f,b
  2343  001E8A  3775               	rlcf	(??_CANSetMask+2)& (0+255),f,b
  2344  001E8C  3776               	rlcf	(??_CANSetMask+3)& (0+255),f,b
  2345  001E8E  2EE8               	decfsz	wreg,f,c
  2346  001E90  D7F8               	goto	u4535
  2347  001E92  C073  F078         	movff	??_CANSetMask,CANSetMask@tamp
  2348  001E96  C074  F079         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  2349  001E9A  C075  F07A         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  2350  001E9E  C076  F07B         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  2351                           
  2352                           ; BSR set to: 0
  2353                           ;inc\CANlib.h: 662: RXM1SIDL = (unsigned char) tamp;
  2354  001EA2  C078  FF1D         	movff	CANSetMask@tamp,3869	;volatile
  2355  001EA6                     l3934:
  2356                           
  2357                           ; BSR set to: 0
  2358                           ;inc\CANlib.h: 663: }
  2359                           ;inc\CANlib.h: 665: if ((numBuffer ==CAN_MASK_B1) && (type == CAN_CONFIG_XTD_MSG))
  2360  001EA6  0100               	movlb	0	; () banked
  2361  001EA8  0577               	decf	CANSetMask@numBuffer& (0+255),w,b
  2362  001EAA  A4D8               	btfss	status,2,c
  2363  001EAC  D087               	goto	l3966
  2364                           
  2365                           ; BSR set to: 0
  2366  001EAE  0EF7               	movlw	247
  2367  001EB0  0100               	movlb	0	; () banked
  2368  001EB2  1972               	xorwf	CANSetMask@type& (0+255),w,b
  2369  001EB4  A4D8               	btfss	status,2,c
  2370  001EB6  D082               	goto	l3966
  2371                           
  2372                           ; BSR set to: 0
  2373                           ;inc\CANlib.h: 666: {
  2374                           ;inc\CANlib.h: 667: tamp = mask & 0x000000FF;
  2375  001EB8  0100               	movlb	0	; () banked
  2376  001EBA  516E               	movf	CANSetMask@mask& (0+255),w,b
  2377  001EBC  0100               	movlb	0	; () banked
  2378  001EBE  6F78               	movwf	CANSetMask@tamp& (0+255),b
  2379  001EC0  6B79               	clrf	(CANSetMask@tamp+1)& (0+255),b
  2380  001EC2  6B7A               	clrf	(CANSetMask@tamp+2)& (0+255),b
  2381  001EC4  6B7B               	clrf	(CANSetMask@tamp+3)& (0+255),b
  2382                           
  2383                           ; BSR set to: 0
  2384                           ;inc\CANlib.h: 668: RXM0EIDL = (unsigned char) tamp;
  2385  001EC6  C078  FF1B         	movff	CANSetMask@tamp,3867	;volatile
  2386                           
  2387                           ; BSR set to: 0
  2388                           ;inc\CANlib.h: 670: tamp = mask & 0x0000FF00;
  2389  001ECA  0E00               	movlw	0
  2390  001ECC  0100               	movlb	0	; () banked
  2391  001ECE  156E               	andwf	CANSetMask@mask& (0+255),w,b
  2392  001ED0  0100               	movlb	0	; () banked
  2393  001ED2  6F78               	movwf	CANSetMask@tamp& (0+255),b
  2394  001ED4  0EFF               	movlw	255
  2395  001ED6  0100               	movlb	0	; () banked
  2396  001ED8  156F               	andwf	(CANSetMask@mask+1)& (0+255),w,b
  2397  001EDA  0100               	movlb	0	; () banked
  2398  001EDC  6F79               	movwf	(CANSetMask@tamp+1)& (0+255),b
  2399  001EDE  0E00               	movlw	0
  2400  001EE0  0100               	movlb	0	; () banked
  2401  001EE2  1570               	andwf	(CANSetMask@mask+2)& (0+255),w,b
  2402  001EE4  0100               	movlb	0	; () banked
  2403  001EE6  6F7A               	movwf	(CANSetMask@tamp+2)& (0+255),b
  2404  001EE8  0E00               	movlw	0
  2405  001EEA  0100               	movlb	0	; () banked
  2406  001EEC  1571               	andwf	(CANSetMask@mask+3)& (0+255),w,b
  2407  001EEE  0100               	movlb	0	; () banked
  2408  001EF0  6F7B               	movwf	(CANSetMask@tamp+3)& (0+255),b
  2409                           
  2410                           ; BSR set to: 0
  2411                           ;inc\CANlib.h: 671: tamp = tamp >> 8;
  2412  001EF2  C078  F073         	movff	CANSetMask@tamp,??_CANSetMask
  2413  001EF6  C079  F074         	movff	CANSetMask@tamp+1,??_CANSetMask+1
  2414  001EFA  C07A  F075         	movff	CANSetMask@tamp+2,??_CANSetMask+2
  2415  001EFE  C07B  F076         	movff	CANSetMask@tamp+3,??_CANSetMask+3
  2416  001F02  C074  F073         	movff	??_CANSetMask+1,??_CANSetMask
  2417  001F06  C075  F074         	movff	??_CANSetMask+2,??_CANSetMask+1
  2418  001F0A  C076  F075         	movff	??_CANSetMask+3,??_CANSetMask+2
  2419  001F0E  0100               	movlb	0	; () banked
  2420  001F10  6B76               	clrf	(??_CANSetMask+3)& (0+255),b
  2421  001F12  C073  F078         	movff	??_CANSetMask,CANSetMask@tamp
  2422  001F16  C074  F079         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  2423  001F1A  C075  F07A         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  2424  001F1E  C076  F07B         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  2425                           
  2426                           ; BSR set to: 0
  2427                           ;inc\CANlib.h: 672: RXM0EIDH = (unsigned char) tamp;
  2428  001F22  C078  FF1A         	movff	CANSetMask@tamp,3866	;volatile
  2429                           
  2430                           ; BSR set to: 0
  2431                           ;inc\CANlib.h: 674: if (mask & 0x00010000)
  2432  001F26  0100               	movlb	0	; () banked
  2433  001F28  A170               	btfss	(CANSetMask@mask+2)& (0+255),0,b
  2434  001F2A  D003               	goto	l434
  2435                           
  2436                           ; BSR set to: 0
  2437                           ;inc\CANlib.h: 675: RXM0SIDLbits.EID16 = 0x01;
  2438  001F2C  010F               	movlb	15	; () banked
  2439  001F2E  8119               	bsf	25,0,b	;volatile
  2440  001F30  D002               	goto	l435
  2441  001F32                     l434:
  2442                           
  2443                           ; BSR set to: 0
  2444                           ;inc\CANlib.h: 676: else
  2445                           ;inc\CANlib.h: 677: RXM0SIDLbits.EID16 = 0x00;
  2446  001F32  010F               	movlb	15	; () banked
  2447  001F34  9119               	bcf	25,0,b	;volatile
  2448  001F36                     l435:
  2449                           
  2450                           ; BSR set to: 15
  2451                           ;inc\CANlib.h: 679: if (mask & 0x00020000)
  2452  001F36  0100               	movlb	0	; () banked
  2453  001F38  A370               	btfss	(CANSetMask@mask+2)& (0+255),1,b
  2454  001F3A  D003               	goto	l436
  2455                           
  2456                           ; BSR set to: 0
  2457                           ;inc\CANlib.h: 680: RXM0SIDLbits.EID17 = 0x01;
  2458  001F3C  010F               	movlb	15	; () banked
  2459  001F3E  8319               	bsf	25,1,b	;volatile
  2460  001F40  D002               	goto	l437
  2461  001F42                     l436:
  2462                           
  2463                           ; BSR set to: 0
  2464                           ;inc\CANlib.h: 681: else
  2465                           ;inc\CANlib.h: 682: RXM0SIDLbits.EID17 = 0x00;
  2466  001F42  010F               	movlb	15	; () banked
  2467  001F44  9319               	bcf	25,1,b	;volatile
  2468  001F46                     l437:
  2469                           
  2470                           ; BSR set to: 15
  2471                           ;inc\CANlib.h: 684: if (mask & 0x00040000)
  2472  001F46  0100               	movlb	0	; () banked
  2473  001F48  A570               	btfss	(CANSetMask@mask+2)& (0+255),2,b
  2474  001F4A  D003               	goto	l438
  2475                           
  2476                           ; BSR set to: 0
  2477                           ;inc\CANlib.h: 685: RXM0SIDLbits.SID0 = 0x01;
  2478  001F4C  010F               	movlb	15	; () banked
  2479  001F4E  8B19               	bsf	25,5,b	;volatile
  2480  001F50  D002               	goto	l439
  2481  001F52                     l438:
  2482                           
  2483                           ; BSR set to: 0
  2484                           ;inc\CANlib.h: 686: else
  2485                           ;inc\CANlib.h: 687: RXM0SIDLbits.SID0 = 0x00;
  2486  001F52  010F               	movlb	15	; () banked
  2487  001F54  9B19               	bcf	25,5,b	;volatile
  2488  001F56                     l439:
  2489                           
  2490                           ; BSR set to: 15
  2491                           ;inc\CANlib.h: 689: if (mask & 0x00080000)
  2492  001F56  0100               	movlb	0	; () banked
  2493  001F58  A770               	btfss	(CANSetMask@mask+2)& (0+255),3,b
  2494  001F5A  D003               	goto	l440
  2495                           
  2496                           ; BSR set to: 0
  2497                           ;inc\CANlib.h: 690: RXM0SIDLbits.SID1 = 0x01;
  2498  001F5C  010F               	movlb	15	; () banked
  2499  001F5E  8D19               	bsf	25,6,b	;volatile
  2500  001F60  D002               	goto	l441
  2501  001F62                     l440:
  2502                           
  2503                           ; BSR set to: 0
  2504                           ;inc\CANlib.h: 691: else
  2505                           ;inc\CANlib.h: 692: RXM0SIDLbits.SID1 = 0x00;
  2506  001F62  010F               	movlb	15	; () banked
  2507  001F64  9D19               	bcf	25,6,b	;volatile
  2508  001F66                     l441:
  2509                           
  2510                           ; BSR set to: 15
  2511                           ;inc\CANlib.h: 694: if (mask & 0x00100000)
  2512  001F66  0100               	movlb	0	; () banked
  2513  001F68  A970               	btfss	(CANSetMask@mask+2)& (0+255),4,b
  2514  001F6A  D003               	goto	l442
  2515                           
  2516                           ; BSR set to: 0
  2517                           ;inc\CANlib.h: 695: RXM0SIDLbits.SID2 = 0x01 ;
  2518  001F6C  010F               	movlb	15	; () banked
  2519  001F6E  8F19               	bsf	25,7,b	;volatile
  2520  001F70  D002               	goto	l3960
  2521  001F72                     l442:
  2522                           
  2523                           ; BSR set to: 0
  2524                           ;inc\CANlib.h: 696: else
  2525                           ;inc\CANlib.h: 697: RXM0SIDLbits.SID2 = 0x00 ;
  2526  001F72  010F               	movlb	15	; () banked
  2527  001F74  9F19               	bcf	25,7,b	;volatile
  2528  001F76                     l3960:
  2529                           
  2530                           ; BSR set to: 15
  2531                           ;inc\CANlib.h: 699: tamp = (mask >> 21);
  2532  001F76  C06E  F073         	movff	CANSetMask@mask,??_CANSetMask
  2533  001F7A  C06F  F074         	movff	CANSetMask@mask+1,??_CANSetMask+1
  2534  001F7E  C070  F075         	movff	CANSetMask@mask+2,??_CANSetMask+2
  2535  001F82  C071  F076         	movff	CANSetMask@mask+3,??_CANSetMask+3
  2536  001F86  0E16               	movlw	22
  2537  001F88  D006               	goto	u4610
  2538  001F8A                     u4615:
  2539  001F8A  0100               	movlb	0	; () banked
  2540  001F8C  90D8               	bcf	status,0,c
  2541  001F8E  3376               	rrcf	(??_CANSetMask+3)& (0+255),f,b
  2542  001F90  3375               	rrcf	(??_CANSetMask+2)& (0+255),f,b
  2543  001F92  3374               	rrcf	(??_CANSetMask+1)& (0+255),f,b
  2544  001F94  3373               	rrcf	??_CANSetMask& (0+255),f,b
  2545  001F96                     u4610:
  2546  001F96  2EE8               	decfsz	wreg,f,c
  2547  001F98  D7F8               	goto	u4615
  2548  001F9A  C073  F078         	movff	??_CANSetMask,CANSetMask@tamp
  2549  001F9E  C074  F079         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  2550  001FA2  C075  F07A         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  2551  001FA6  C076  F07B         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  2552                           
  2553                           ; BSR set to: 0
  2554                           ;inc\CANlib.h: 700: tamp = tamp & 0x000000FF;
  2555  001FAA  0100               	movlb	0	; () banked
  2556  001FAC  5178               	movf	CANSetMask@tamp& (0+255),w,b
  2557  001FAE  0100               	movlb	0	; () banked
  2558  001FB0  6F78               	movwf	CANSetMask@tamp& (0+255),b
  2559  001FB2  6B79               	clrf	(CANSetMask@tamp+1)& (0+255),b
  2560  001FB4  6B7A               	clrf	(CANSetMask@tamp+2)& (0+255),b
  2561  001FB6  6B7B               	clrf	(CANSetMask@tamp+3)& (0+255),b
  2562                           
  2563                           ; BSR set to: 0
  2564                           ;inc\CANlib.h: 701: RXM0SIDH = (unsigned char) tamp;
  2565  001FB8  C078  FF18         	movff	CANSetMask@tamp,3864	;volatile
  2566  001FBC                     l3966:
  2567                           
  2568                           ; BSR set to: 0
  2569                           ;inc\CANlib.h: 702: }
  2570                           ;inc\CANlib.h: 704: if ((numBuffer ==CAN_MASK_B2) && (type == CAN_CONFIG_XTD_MSG))
  2571  001FBC  0E02               	movlw	2
  2572  001FBE  0100               	movlb	0	; () banked
  2573  001FC0  1977               	xorwf	CANSetMask@numBuffer& (0+255),w,b
  2574  001FC2  A4D8               	btfss	status,2,c
  2575  001FC4  0012               	return	
  2576                           
  2577                           ; BSR set to: 0
  2578  001FC6  0EF7               	movlw	247
  2579  001FC8  0100               	movlb	0	; () banked
  2580  001FCA  1972               	xorwf	CANSetMask@type& (0+255),w,b
  2581  001FCC  A4D8               	btfss	status,2,c
  2582  001FCE  0012               	return	
  2583                           
  2584                           ; BSR set to: 0
  2585                           ;inc\CANlib.h: 705: {
  2586                           ;inc\CANlib.h: 706: tamp = mask & 0x000000FF;
  2587  001FD0  0100               	movlb	0	; () banked
  2588  001FD2  516E               	movf	CANSetMask@mask& (0+255),w,b
  2589  001FD4  0100               	movlb	0	; () banked
  2590  001FD6  6F78               	movwf	CANSetMask@tamp& (0+255),b
  2591  001FD8  6B79               	clrf	(CANSetMask@tamp+1)& (0+255),b
  2592  001FDA  6B7A               	clrf	(CANSetMask@tamp+2)& (0+255),b
  2593  001FDC  6B7B               	clrf	(CANSetMask@tamp+3)& (0+255),b
  2594                           
  2595                           ; BSR set to: 0
  2596                           ;inc\CANlib.h: 707: RXM1EIDL = (unsigned char) tamp;
  2597  001FDE  C078  FF1F         	movff	CANSetMask@tamp,3871	;volatile
  2598                           
  2599                           ; BSR set to: 0
  2600                           ;inc\CANlib.h: 709: tamp = mask & 0x0000FF00;
  2601  001FE2  0E00               	movlw	0
  2602  001FE4  0100               	movlb	0	; () banked
  2603  001FE6  156E               	andwf	CANSetMask@mask& (0+255),w,b
  2604  001FE8  0100               	movlb	0	; () banked
  2605  001FEA  6F78               	movwf	CANSetMask@tamp& (0+255),b
  2606  001FEC  0EFF               	movlw	255
  2607  001FEE  0100               	movlb	0	; () banked
  2608  001FF0  156F               	andwf	(CANSetMask@mask+1)& (0+255),w,b
  2609  001FF2  0100               	movlb	0	; () banked
  2610  001FF4  6F79               	movwf	(CANSetMask@tamp+1)& (0+255),b
  2611  001FF6  0E00               	movlw	0
  2612  001FF8  0100               	movlb	0	; () banked
  2613  001FFA  1570               	andwf	(CANSetMask@mask+2)& (0+255),w,b
  2614  001FFC  0100               	movlb	0	; () banked
  2615  001FFE  6F7A               	movwf	(CANSetMask@tamp+2)& (0+255),b
  2616  002000  0E00               	movlw	0
  2617  002002  0100               	movlb	0	; () banked
  2618  002004  1571               	andwf	(CANSetMask@mask+3)& (0+255),w,b
  2619  002006  0100               	movlb	0	; () banked
  2620  002008  6F7B               	movwf	(CANSetMask@tamp+3)& (0+255),b
  2621                           
  2622                           ; BSR set to: 0
  2623                           ;inc\CANlib.h: 710: tamp = tamp >> 8;
  2624  00200A  C078  F073         	movff	CANSetMask@tamp,??_CANSetMask
  2625  00200E  C079  F074         	movff	CANSetMask@tamp+1,??_CANSetMask+1
  2626  002012  C07A  F075         	movff	CANSetMask@tamp+2,??_CANSetMask+2
  2627  002016  C07B  F076         	movff	CANSetMask@tamp+3,??_CANSetMask+3
  2628  00201A  C074  F073         	movff	??_CANSetMask+1,??_CANSetMask
  2629  00201E  C075  F074         	movff	??_CANSetMask+2,??_CANSetMask+1
  2630  002022  C076  F075         	movff	??_CANSetMask+3,??_CANSetMask+2
  2631  002026  0100               	movlb	0	; () banked
  2632  002028  6B76               	clrf	(??_CANSetMask+3)& (0+255),b
  2633  00202A  C073  F078         	movff	??_CANSetMask,CANSetMask@tamp
  2634  00202E  C074  F079         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  2635  002032  C075  F07A         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  2636  002036  C076  F07B         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  2637                           
  2638                           ; BSR set to: 0
  2639                           ;inc\CANlib.h: 711: RXM1EIDH = (unsigned char) tamp;
  2640  00203A  C078  FF1E         	movff	CANSetMask@tamp,3870	;volatile
  2641                           
  2642                           ; BSR set to: 0
  2643                           ;inc\CANlib.h: 713: if (mask & 0x00010000)
  2644  00203E  0100               	movlb	0	; () banked
  2645  002040  A170               	btfss	(CANSetMask@mask+2)& (0+255),0,b
  2646  002042  D003               	goto	l445
  2647                           
  2648                           ; BSR set to: 0
  2649                           ;inc\CANlib.h: 714: RXM1SIDLbits.EID16 = 0x01;
  2650  002044  010F               	movlb	15	; () banked
  2651  002046  811D               	bsf	29,0,b	;volatile
  2652  002048  D002               	goto	l446
  2653  00204A                     l445:
  2654                           
  2655                           ; BSR set to: 0
  2656                           ;inc\CANlib.h: 715: else
  2657                           ;inc\CANlib.h: 716: RXM1SIDLbits.EID16 = 0x00;
  2658  00204A  010F               	movlb	15	; () banked
  2659  00204C  911D               	bcf	29,0,b	;volatile
  2660  00204E                     l446:
  2661                           
  2662                           ; BSR set to: 15
  2663                           ;inc\CANlib.h: 718: if (mask & 0x00020000)
  2664  00204E  0100               	movlb	0	; () banked
  2665  002050  A370               	btfss	(CANSetMask@mask+2)& (0+255),1,b
  2666  002052  D003               	goto	l447
  2667                           
  2668                           ; BSR set to: 0
  2669                           ;inc\CANlib.h: 719: RXM1SIDLbits.EID17 = 0x01;
  2670  002054  010F               	movlb	15	; () banked
  2671  002056  831D               	bsf	29,1,b	;volatile
  2672  002058  D002               	goto	l448
  2673  00205A                     l447:
  2674                           
  2675                           ; BSR set to: 0
  2676                           ;inc\CANlib.h: 720: else
  2677                           ;inc\CANlib.h: 721: RXM1SIDLbits.EID17 = 0x00;
  2678  00205A  010F               	movlb	15	; () banked
  2679  00205C  931D               	bcf	29,1,b	;volatile
  2680  00205E                     l448:
  2681                           
  2682                           ; BSR set to: 15
  2683                           ;inc\CANlib.h: 723: if (mask & 0x00040000)
  2684  00205E  0100               	movlb	0	; () banked
  2685  002060  A570               	btfss	(CANSetMask@mask+2)& (0+255),2,b
  2686  002062  D003               	goto	l449
  2687                           
  2688                           ; BSR set to: 0
  2689                           ;inc\CANlib.h: 724: RXM1SIDLbits.SID0 = 0x01;
  2690  002064  010F               	movlb	15	; () banked
  2691  002066  8B1D               	bsf	29,5,b	;volatile
  2692  002068  D002               	goto	l450
  2693  00206A                     l449:
  2694                           
  2695                           ; BSR set to: 0
  2696                           ;inc\CANlib.h: 725: else
  2697                           ;inc\CANlib.h: 726: RXM1SIDLbits.SID0 = 0x00;
  2698  00206A  010F               	movlb	15	; () banked
  2699  00206C  9B1D               	bcf	29,5,b	;volatile
  2700  00206E                     l450:
  2701                           
  2702                           ; BSR set to: 15
  2703                           ;inc\CANlib.h: 728: if (mask & 0x00080000)
  2704  00206E  0100               	movlb	0	; () banked
  2705  002070  A770               	btfss	(CANSetMask@mask+2)& (0+255),3,b
  2706  002072  D003               	goto	l451
  2707                           
  2708                           ; BSR set to: 0
  2709                           ;inc\CANlib.h: 729: RXM1SIDLbits.SID1 = 0x01;
  2710  002074  010F               	movlb	15	; () banked
  2711  002076  8D1D               	bsf	29,6,b	;volatile
  2712  002078  D002               	goto	l452
  2713  00207A                     l451:
  2714                           
  2715                           ; BSR set to: 0
  2716                           ;inc\CANlib.h: 730: else
  2717                           ;inc\CANlib.h: 731: RXM1SIDLbits.SID1 = 0x00;
  2718  00207A  010F               	movlb	15	; () banked
  2719  00207C  9D1D               	bcf	29,6,b	;volatile
  2720  00207E                     l452:
  2721                           
  2722                           ; BSR set to: 15
  2723                           ;inc\CANlib.h: 733: if (mask & 0x00100000)
  2724  00207E  0100               	movlb	0	; () banked
  2725  002080  A970               	btfss	(CANSetMask@mask+2)& (0+255),4,b
  2726  002082  D003               	goto	l453
  2727                           
  2728                           ; BSR set to: 0
  2729                           ;inc\CANlib.h: 734: RXM1SIDLbits.SID2 = 0x01 ;
  2730  002084  010F               	movlb	15	; () banked
  2731  002086  8F1D               	bsf	29,7,b	;volatile
  2732  002088  D002               	goto	l3992
  2733  00208A                     l453:
  2734                           
  2735                           ; BSR set to: 0
  2736                           ;inc\CANlib.h: 735: else
  2737                           ;inc\CANlib.h: 736: RXM1SIDLbits.SID2 = 0x00 ;
  2738  00208A  010F               	movlb	15	; () banked
  2739  00208C  9F1D               	bcf	29,7,b	;volatile
  2740  00208E                     l3992:
  2741                           
  2742                           ; BSR set to: 15
  2743                           ;inc\CANlib.h: 738: tamp = (mask >> 21);
  2744  00208E  C06E  F073         	movff	CANSetMask@mask,??_CANSetMask
  2745  002092  C06F  F074         	movff	CANSetMask@mask+1,??_CANSetMask+1
  2746  002096  C070  F075         	movff	CANSetMask@mask+2,??_CANSetMask+2
  2747  00209A  C071  F076         	movff	CANSetMask@mask+3,??_CANSetMask+3
  2748  00209E  0E16               	movlw	22
  2749  0020A0  D006               	goto	u4690
  2750  0020A2                     u4695:
  2751  0020A2  0100               	movlb	0	; () banked
  2752  0020A4  90D8               	bcf	status,0,c
  2753  0020A6  3376               	rrcf	(??_CANSetMask+3)& (0+255),f,b
  2754  0020A8  3375               	rrcf	(??_CANSetMask+2)& (0+255),f,b
  2755  0020AA  3374               	rrcf	(??_CANSetMask+1)& (0+255),f,b
  2756  0020AC  3373               	rrcf	??_CANSetMask& (0+255),f,b
  2757  0020AE                     u4690:
  2758  0020AE  2EE8               	decfsz	wreg,f,c
  2759  0020B0  D7F8               	goto	u4695
  2760  0020B2  C073  F078         	movff	??_CANSetMask,CANSetMask@tamp
  2761  0020B6  C074  F079         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  2762  0020BA  C075  F07A         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  2763  0020BE  C076  F07B         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  2764                           
  2765                           ; BSR set to: 0
  2766                           ;inc\CANlib.h: 739: tamp = tamp & 0x000000FF;
  2767  0020C2  0100               	movlb	0	; () banked
  2768  0020C4  5178               	movf	CANSetMask@tamp& (0+255),w,b
  2769  0020C6  0100               	movlb	0	; () banked
  2770  0020C8  6F78               	movwf	CANSetMask@tamp& (0+255),b
  2771  0020CA  6B79               	clrf	(CANSetMask@tamp+1)& (0+255),b
  2772  0020CC  6B7A               	clrf	(CANSetMask@tamp+2)& (0+255),b
  2773  0020CE  6B7B               	clrf	(CANSetMask@tamp+3)& (0+255),b
  2774                           
  2775                           ; BSR set to: 0
  2776                           ;inc\CANlib.h: 740: RXM1SIDH = (unsigned char) tamp;
  2777  0020D0  C078  FF1C         	movff	CANSetMask@tamp,3868	;volatile
  2778  0020D4  0012               	return	
  2779  0020D6                     __end_of_CANSetMask:
  2780                           	opt stack 0
  2781                           tblptru	equ	0xFF8
  2782                           tblptrh	equ	0xFF7
  2783                           tblptrl	equ	0xFF6
  2784                           tablat	equ	0xFF5
  2785                           intcon	equ	0xFF2
  2786                           intcon2	equ	0xFF1
  2787                           postinc0	equ	0xFEE
  2788                           wreg	equ	0xFE8
  2789                           status	equ	0xFD8
  2790                           
  2791 ;; *************** function _CANSetFilter *****************
  2792 ;; Defined at:
  2793 ;;		line 748 in file "K:/Tesina/LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
  2794 ;; Parameters:    Size  Location     Type
  2795 ;;  numBuffer       1    wreg     enum E16881
  2796 ;;  filter          4   14[BANK0 ] unsigned long 
  2797 ;;  type            1   18[BANK0 ] enum E16844
  2798 ;; Auto vars:     Size  Location     Type
  2799 ;;  numBuffer       1   23[BANK0 ] enum E16881
  2800 ;;  tamp            4   24[BANK0 ] unsigned long 
  2801 ;; Return value:  Size  Location     Type
  2802 ;;		None               void
  2803 ;; Registers used:
  2804 ;;		wreg, status,2, status,0
  2805 ;; Tracked objects:
  2806 ;;		On entry : 0/0
  2807 ;;		On exit  : 0/0
  2808 ;;		Unchanged: 0/0
  2809 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2810 ;;      Params:         0       5       0       0
  2811 ;;      Locals:         0       5       0       0
  2812 ;;      Temps:          0       4       0       0
  2813 ;;      Totals:         0      14       0       0
  2814 ;;Total ram usage:       14 bytes
  2815 ;; Hardware stack levels used:    1
  2816 ;; Hardware stack levels required when called:    3
  2817 ;; This function calls:
  2818 ;;		Nothing
  2819 ;; This function is called by:
  2820 ;;		_CANInitialize
  2821 ;; This function uses a non-reentrant model
  2822 ;;
  2823                           
  2824                           	psect	text6
  2825  0001A2                     __ptext6:
  2826                           	opt stack 0
  2827  0001A2                     _CANSetFilter:
  2828                           	opt stack 25
  2829                           
  2830                           ; BSR set to: 0
  2831                           ;incstack = 0
  2832                           ;CANSetFilter@numBuffer stored from wreg
  2833  0001A2  0100               	movlb	0	; () banked
  2834  0001A4  6F77               	movwf	CANSetFilter@numBuffer& (0+255),b
  2835                           
  2836                           ;inc\CANlib.h: 750: unsigned long tamp;
  2837                           ;inc\CANlib.h: 752: if ((numBuffer ==CAN_FILTER_B1_F1) && (type == CAN_CONFIG_STD_MSG))
  2838  0001A6  0100               	movlb	0	; () banked
  2839  0001A8  5177               	movf	CANSetFilter@numBuffer& (0+255),w,b
  2840  0001AA  0100               	movlb	0	; () banked
  2841  0001AC  A4D8               	btfss	status,2,c
  2842  0001AE  D058               	goto	l4016
  2843                           
  2844                           ; BSR set to: 0
  2845  0001B0  0100               	movlb	0	; () banked
  2846  0001B2  2972               	incf	CANSetFilter@type& (0+255),w,b
  2847  0001B4  A4D8               	btfss	status,2,c
  2848  0001B6  D054               	goto	l4016
  2849                           
  2850                           ; BSR set to: 0
  2851                           ;inc\CANlib.h: 753: {
  2852                           ;inc\CANlib.h: 754: RXF0SIDLbits.EXIDEN = 0x00;
  2853  0001B8  010F               	movlb	15	; () banked
  2854  0001BA  9701               	bcf	1,3,b	;volatile
  2855                           
  2856                           ; BSR set to: 15
  2857                           ;inc\CANlib.h: 756: tamp = (filter >> 3);
  2858  0001BC  C06E  F073         	movff	CANSetFilter@filter,??_CANSetFilter
  2859  0001C0  C06F  F074         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  2860  0001C4  C070  F075         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  2861  0001C8  C071  F076         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  2862  0001CC  0E04               	movlw	4
  2863  0001CE  D006               	goto	u4720
  2864  0001D0                     u4725:
  2865  0001D0  0100               	movlb	0	; () banked
  2866  0001D2  90D8               	bcf	status,0,c
  2867  0001D4  3376               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  2868  0001D6  3375               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  2869  0001D8  3374               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  2870  0001DA  3373               	rrcf	??_CANSetFilter& (0+255),f,b
  2871  0001DC                     u4720:
  2872  0001DC  2EE8               	decfsz	wreg,f,c
  2873  0001DE  D7F8               	goto	u4725
  2874  0001E0  C073  F078         	movff	??_CANSetFilter,CANSetFilter@tamp
  2875  0001E4  C074  F079         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  2876  0001E8  C075  F07A         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  2877  0001EC  C076  F07B         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  2878                           
  2879                           ; BSR set to: 0
  2880                           ;inc\CANlib.h: 757: tamp = tamp & 0x000000FF;
  2881  0001F0  0100               	movlb	0	; () banked
  2882  0001F2  5178               	movf	CANSetFilter@tamp& (0+255),w,b
  2883  0001F4  0100               	movlb	0	; () banked
  2884  0001F6  6F78               	movwf	CANSetFilter@tamp& (0+255),b
  2885  0001F8  6B79               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  2886  0001FA  6B7A               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  2887  0001FC  6B7B               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  2888                           
  2889                           ; BSR set to: 0
  2890                           ;inc\CANlib.h: 758: RXF0SIDH = (unsigned char) tamp;
  2891  0001FE  C078  FF00         	movff	CANSetFilter@tamp,3840	;volatile
  2892                           
  2893                           ; BSR set to: 0
  2894                           ;inc\CANlib.h: 760: tamp = filter & 0x00000007;
  2895  000202  0E07               	movlw	7
  2896  000204  0100               	movlb	0	; () banked
  2897  000206  156E               	andwf	CANSetFilter@filter& (0+255),w,b
  2898  000208  0100               	movlb	0	; () banked
  2899  00020A  6F78               	movwf	CANSetFilter@tamp& (0+255),b
  2900  00020C  0E00               	movlw	0
  2901  00020E  0100               	movlb	0	; () banked
  2902  000210  156F               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  2903  000212  0100               	movlb	0	; () banked
  2904  000214  6F79               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  2905  000216  0E00               	movlw	0
  2906  000218  0100               	movlb	0	; () banked
  2907  00021A  1570               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  2908  00021C  0100               	movlb	0	; () banked
  2909  00021E  6F7A               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  2910  000220  0E00               	movlw	0
  2911  000222  0100               	movlb	0	; () banked
  2912  000224  1571               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  2913  000226  0100               	movlb	0	; () banked
  2914  000228  6F7B               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  2915                           
  2916                           ; BSR set to: 0
  2917                           ;inc\CANlib.h: 761: tamp = tamp << 5;
  2918  00022A  C078  F073         	movff	CANSetFilter@tamp,??_CANSetFilter
  2919  00022E  C079  F074         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  2920  000232  C07A  F075         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  2921  000236  C07B  F076         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  2922  00023A  0E05               	movlw	5
  2923  00023C                     u4735:
  2924  00023C  90D8               	bcf	status,0,c
  2925  00023E  0100               	movlb	0	; () banked
  2926  000240  3773               	rlcf	??_CANSetFilter& (0+255),f,b
  2927  000242  3774               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  2928  000244  3775               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  2929  000246  3776               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  2930  000248  2EE8               	decfsz	wreg,f,c
  2931  00024A  D7F8               	goto	u4735
  2932  00024C  C073  F078         	movff	??_CANSetFilter,CANSetFilter@tamp
  2933  000250  C074  F079         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  2934  000254  C075  F07A         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  2935  000258  C076  F07B         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  2936                           
  2937                           ; BSR set to: 0
  2938                           ;inc\CANlib.h: 762: RXF0SIDL = (unsigned char) tamp;
  2939  00025C  C078  FF01         	movff	CANSetFilter@tamp,3841	;volatile
  2940  000260                     l4016:
  2941                           
  2942                           ; BSR set to: 0
  2943                           ;inc\CANlib.h: 763: }
  2944                           ;inc\CANlib.h: 765: if ((numBuffer ==CAN_FILTER_B1_F2) && (type == CAN_CONFIG_STD_MSG))
  2945  000260  0100               	movlb	0	; () banked
  2946  000262  0577               	decf	CANSetFilter@numBuffer& (0+255),w,b
  2947  000264  A4D8               	btfss	status,2,c
  2948  000266  D058               	goto	l4034
  2949                           
  2950                           ; BSR set to: 0
  2951  000268  0100               	movlb	0	; () banked
  2952  00026A  2972               	incf	CANSetFilter@type& (0+255),w,b
  2953  00026C  A4D8               	btfss	status,2,c
  2954  00026E  D054               	goto	l4034
  2955                           
  2956                           ; BSR set to: 0
  2957                           ;inc\CANlib.h: 766: {
  2958                           ;inc\CANlib.h: 767: RXF1SIDLbits.EXIDEN = 0x00;
  2959  000270  010F               	movlb	15	; () banked
  2960  000272  9705               	bcf	5,3,b	;volatile
  2961                           
  2962                           ; BSR set to: 15
  2963                           ;inc\CANlib.h: 769: tamp = (filter >> 3);
  2964  000274  C06E  F073         	movff	CANSetFilter@filter,??_CANSetFilter
  2965  000278  C06F  F074         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  2966  00027C  C070  F075         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  2967  000280  C071  F076         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  2968  000284  0E04               	movlw	4
  2969  000286  D006               	goto	u4760
  2970  000288                     u4765:
  2971  000288  0100               	movlb	0	; () banked
  2972  00028A  90D8               	bcf	status,0,c
  2973  00028C  3376               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  2974  00028E  3375               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  2975  000290  3374               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  2976  000292  3373               	rrcf	??_CANSetFilter& (0+255),f,b
  2977  000294                     u4760:
  2978  000294  2EE8               	decfsz	wreg,f,c
  2979  000296  D7F8               	goto	u4765
  2980  000298  C073  F078         	movff	??_CANSetFilter,CANSetFilter@tamp
  2981  00029C  C074  F079         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  2982  0002A0  C075  F07A         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  2983  0002A4  C076  F07B         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  2984                           
  2985                           ; BSR set to: 0
  2986                           ;inc\CANlib.h: 770: tamp = tamp & 0x000000FF;
  2987  0002A8  0100               	movlb	0	; () banked
  2988  0002AA  5178               	movf	CANSetFilter@tamp& (0+255),w,b
  2989  0002AC  0100               	movlb	0	; () banked
  2990  0002AE  6F78               	movwf	CANSetFilter@tamp& (0+255),b
  2991  0002B0  6B79               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  2992  0002B2  6B7A               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  2993  0002B4  6B7B               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  2994                           
  2995                           ; BSR set to: 0
  2996                           ;inc\CANlib.h: 771: RXF1SIDH = (unsigned char) tamp;
  2997  0002B6  C078  FF04         	movff	CANSetFilter@tamp,3844	;volatile
  2998                           
  2999                           ; BSR set to: 0
  3000                           ;inc\CANlib.h: 773: tamp = filter & 0x00000007;
  3001  0002BA  0E07               	movlw	7
  3002  0002BC  0100               	movlb	0	; () banked
  3003  0002BE  156E               	andwf	CANSetFilter@filter& (0+255),w,b
  3004  0002C0  0100               	movlb	0	; () banked
  3005  0002C2  6F78               	movwf	CANSetFilter@tamp& (0+255),b
  3006  0002C4  0E00               	movlw	0
  3007  0002C6  0100               	movlb	0	; () banked
  3008  0002C8  156F               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  3009  0002CA  0100               	movlb	0	; () banked
  3010  0002CC  6F79               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  3011  0002CE  0E00               	movlw	0
  3012  0002D0  0100               	movlb	0	; () banked
  3013  0002D2  1570               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  3014  0002D4  0100               	movlb	0	; () banked
  3015  0002D6  6F7A               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  3016  0002D8  0E00               	movlw	0
  3017  0002DA  0100               	movlb	0	; () banked
  3018  0002DC  1571               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  3019  0002DE  0100               	movlb	0	; () banked
  3020  0002E0  6F7B               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  3021                           
  3022                           ; BSR set to: 0
  3023                           ;inc\CANlib.h: 774: tamp = tamp << 5;
  3024  0002E2  C078  F073         	movff	CANSetFilter@tamp,??_CANSetFilter
  3025  0002E6  C079  F074         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  3026  0002EA  C07A  F075         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  3027  0002EE  C07B  F076         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  3028  0002F2  0E05               	movlw	5
  3029  0002F4                     u4775:
  3030  0002F4  90D8               	bcf	status,0,c
  3031  0002F6  0100               	movlb	0	; () banked
  3032  0002F8  3773               	rlcf	??_CANSetFilter& (0+255),f,b
  3033  0002FA  3774               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  3034  0002FC  3775               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  3035  0002FE  3776               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  3036  000300  2EE8               	decfsz	wreg,f,c
  3037  000302  D7F8               	goto	u4775
  3038  000304  C073  F078         	movff	??_CANSetFilter,CANSetFilter@tamp
  3039  000308  C074  F079         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  3040  00030C  C075  F07A         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  3041  000310  C076  F07B         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  3042                           
  3043                           ; BSR set to: 0
  3044                           ;inc\CANlib.h: 775: RXF1SIDL = (unsigned char) tamp;
  3045  000314  C078  FF05         	movff	CANSetFilter@tamp,3845	;volatile
  3046  000318                     l4034:
  3047                           
  3048                           ; BSR set to: 0
  3049                           ;inc\CANlib.h: 776: }
  3050                           ;inc\CANlib.h: 778: if ((numBuffer ==CAN_FILTER_B2_F1) && (type == CAN_CONFIG_STD_MSG))
  3051  000318  0E02               	movlw	2
  3052  00031A  0100               	movlb	0	; () banked
  3053  00031C  1977               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  3054  00031E  A4D8               	btfss	status,2,c
  3055  000320  D058               	goto	l4052
  3056                           
  3057                           ; BSR set to: 0
  3058  000322  0100               	movlb	0	; () banked
  3059  000324  2972               	incf	CANSetFilter@type& (0+255),w,b
  3060  000326  A4D8               	btfss	status,2,c
  3061  000328  D054               	goto	l4052
  3062                           
  3063                           ; BSR set to: 0
  3064                           ;inc\CANlib.h: 779: {
  3065                           ;inc\CANlib.h: 780: RXF2SIDLbits.EXIDEN = 0x00;
  3066  00032A  010F               	movlb	15	; () banked
  3067  00032C  9709               	bcf	9,3,b	;volatile
  3068                           
  3069                           ; BSR set to: 15
  3070                           ;inc\CANlib.h: 782: tamp = (filter >> 3);
  3071  00032E  C06E  F073         	movff	CANSetFilter@filter,??_CANSetFilter
  3072  000332  C06F  F074         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  3073  000336  C070  F075         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  3074  00033A  C071  F076         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  3075  00033E  0E04               	movlw	4
  3076  000340  D006               	goto	u4800
  3077  000342                     u4805:
  3078  000342  0100               	movlb	0	; () banked
  3079  000344  90D8               	bcf	status,0,c
  3080  000346  3376               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  3081  000348  3375               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  3082  00034A  3374               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  3083  00034C  3373               	rrcf	??_CANSetFilter& (0+255),f,b
  3084  00034E                     u4800:
  3085  00034E  2EE8               	decfsz	wreg,f,c
  3086  000350  D7F8               	goto	u4805
  3087  000352  C073  F078         	movff	??_CANSetFilter,CANSetFilter@tamp
  3088  000356  C074  F079         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  3089  00035A  C075  F07A         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  3090  00035E  C076  F07B         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  3091                           
  3092                           ; BSR set to: 0
  3093                           ;inc\CANlib.h: 783: tamp = tamp & 0x000000FF;
  3094  000362  0100               	movlb	0	; () banked
  3095  000364  5178               	movf	CANSetFilter@tamp& (0+255),w,b
  3096  000366  0100               	movlb	0	; () banked
  3097  000368  6F78               	movwf	CANSetFilter@tamp& (0+255),b
  3098  00036A  6B79               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  3099  00036C  6B7A               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  3100  00036E  6B7B               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  3101                           
  3102                           ; BSR set to: 0
  3103                           ;inc\CANlib.h: 784: RXF2SIDH = (unsigned char) tamp;
  3104  000370  C078  FF08         	movff	CANSetFilter@tamp,3848	;volatile
  3105                           
  3106                           ; BSR set to: 0
  3107                           ;inc\CANlib.h: 786: tamp = filter & 0x00000007;
  3108  000374  0E07               	movlw	7
  3109  000376  0100               	movlb	0	; () banked
  3110  000378  156E               	andwf	CANSetFilter@filter& (0+255),w,b
  3111  00037A  0100               	movlb	0	; () banked
  3112  00037C  6F78               	movwf	CANSetFilter@tamp& (0+255),b
  3113  00037E  0E00               	movlw	0
  3114  000380  0100               	movlb	0	; () banked
  3115  000382  156F               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  3116  000384  0100               	movlb	0	; () banked
  3117  000386  6F79               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  3118  000388  0E00               	movlw	0
  3119  00038A  0100               	movlb	0	; () banked
  3120  00038C  1570               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  3121  00038E  0100               	movlb	0	; () banked
  3122  000390  6F7A               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  3123  000392  0E00               	movlw	0
  3124  000394  0100               	movlb	0	; () banked
  3125  000396  1571               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  3126  000398  0100               	movlb	0	; () banked
  3127  00039A  6F7B               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  3128                           
  3129                           ; BSR set to: 0
  3130                           ;inc\CANlib.h: 787: tamp = tamp << 5;
  3131  00039C  C078  F073         	movff	CANSetFilter@tamp,??_CANSetFilter
  3132  0003A0  C079  F074         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  3133  0003A4  C07A  F075         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  3134  0003A8  C07B  F076         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  3135  0003AC  0E05               	movlw	5
  3136  0003AE                     u4815:
  3137  0003AE  90D8               	bcf	status,0,c
  3138  0003B0  0100               	movlb	0	; () banked
  3139  0003B2  3773               	rlcf	??_CANSetFilter& (0+255),f,b
  3140  0003B4  3774               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  3141  0003B6  3775               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  3142  0003B8  3776               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  3143  0003BA  2EE8               	decfsz	wreg,f,c
  3144  0003BC  D7F8               	goto	u4815
  3145  0003BE  C073  F078         	movff	??_CANSetFilter,CANSetFilter@tamp
  3146  0003C2  C074  F079         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  3147  0003C6  C075  F07A         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  3148  0003CA  C076  F07B         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  3149                           
  3150                           ; BSR set to: 0
  3151                           ;inc\CANlib.h: 788: RXF2SIDL = (unsigned char) tamp;
  3152  0003CE  C078  FF09         	movff	CANSetFilter@tamp,3849	;volatile
  3153  0003D2                     l4052:
  3154                           
  3155                           ; BSR set to: 0
  3156                           ;inc\CANlib.h: 789: }
  3157                           ;inc\CANlib.h: 791: if ((numBuffer ==CAN_FILTER_B2_F2) && (type == CAN_CONFIG_STD_MSG))
  3158  0003D2  0E03               	movlw	3
  3159  0003D4  0100               	movlb	0	; () banked
  3160  0003D6  1977               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  3161  0003D8  A4D8               	btfss	status,2,c
  3162  0003DA  D058               	goto	l4070
  3163                           
  3164                           ; BSR set to: 0
  3165  0003DC  0100               	movlb	0	; () banked
  3166  0003DE  2972               	incf	CANSetFilter@type& (0+255),w,b
  3167  0003E0  A4D8               	btfss	status,2,c
  3168  0003E2  D054               	goto	l4070
  3169                           
  3170                           ; BSR set to: 0
  3171                           ;inc\CANlib.h: 792: {
  3172                           ;inc\CANlib.h: 793: RXF3SIDLbits.EXIDEN = 0x00;
  3173  0003E4  010F               	movlb	15	; () banked
  3174  0003E6  970D               	bcf	13,3,b	;volatile
  3175                           
  3176                           ; BSR set to: 15
  3177                           ;inc\CANlib.h: 795: tamp = (filter >> 3);
  3178  0003E8  C06E  F073         	movff	CANSetFilter@filter,??_CANSetFilter
  3179  0003EC  C06F  F074         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  3180  0003F0  C070  F075         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  3181  0003F4  C071  F076         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  3182  0003F8  0E04               	movlw	4
  3183  0003FA  D006               	goto	u4840
  3184  0003FC                     u4845:
  3185  0003FC  0100               	movlb	0	; () banked
  3186  0003FE  90D8               	bcf	status,0,c
  3187  000400  3376               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  3188  000402  3375               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  3189  000404  3374               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  3190  000406  3373               	rrcf	??_CANSetFilter& (0+255),f,b
  3191  000408                     u4840:
  3192  000408  2EE8               	decfsz	wreg,f,c
  3193  00040A  D7F8               	goto	u4845
  3194  00040C  C073  F078         	movff	??_CANSetFilter,CANSetFilter@tamp
  3195  000410  C074  F079         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  3196  000414  C075  F07A         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  3197  000418  C076  F07B         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  3198                           
  3199                           ; BSR set to: 0
  3200                           ;inc\CANlib.h: 796: tamp = tamp & 0x000000FF;
  3201  00041C  0100               	movlb	0	; () banked
  3202  00041E  5178               	movf	CANSetFilter@tamp& (0+255),w,b
  3203  000420  0100               	movlb	0	; () banked
  3204  000422  6F78               	movwf	CANSetFilter@tamp& (0+255),b
  3205  000424  6B79               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  3206  000426  6B7A               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  3207  000428  6B7B               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  3208                           
  3209                           ; BSR set to: 0
  3210                           ;inc\CANlib.h: 797: RXF3SIDH = (unsigned char) tamp;
  3211  00042A  C078  FF0C         	movff	CANSetFilter@tamp,3852	;volatile
  3212                           
  3213                           ; BSR set to: 0
  3214                           ;inc\CANlib.h: 799: tamp = filter & 0x00000007;
  3215  00042E  0E07               	movlw	7
  3216  000430  0100               	movlb	0	; () banked
  3217  000432  156E               	andwf	CANSetFilter@filter& (0+255),w,b
  3218  000434  0100               	movlb	0	; () banked
  3219  000436  6F78               	movwf	CANSetFilter@tamp& (0+255),b
  3220  000438  0E00               	movlw	0
  3221  00043A  0100               	movlb	0	; () banked
  3222  00043C  156F               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  3223  00043E  0100               	movlb	0	; () banked
  3224  000440  6F79               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  3225  000442  0E00               	movlw	0
  3226  000444  0100               	movlb	0	; () banked
  3227  000446  1570               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  3228  000448  0100               	movlb	0	; () banked
  3229  00044A  6F7A               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  3230  00044C  0E00               	movlw	0
  3231  00044E  0100               	movlb	0	; () banked
  3232  000450  1571               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  3233  000452  0100               	movlb	0	; () banked
  3234  000454  6F7B               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  3235                           
  3236                           ; BSR set to: 0
  3237                           ;inc\CANlib.h: 800: tamp = tamp << 5;
  3238  000456  C078  F073         	movff	CANSetFilter@tamp,??_CANSetFilter
  3239  00045A  C079  F074         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  3240  00045E  C07A  F075         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  3241  000462  C07B  F076         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  3242  000466  0E05               	movlw	5
  3243  000468                     u4855:
  3244  000468  90D8               	bcf	status,0,c
  3245  00046A  0100               	movlb	0	; () banked
  3246  00046C  3773               	rlcf	??_CANSetFilter& (0+255),f,b
  3247  00046E  3774               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  3248  000470  3775               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  3249  000472  3776               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  3250  000474  2EE8               	decfsz	wreg,f,c
  3251  000476  D7F8               	goto	u4855
  3252  000478  C073  F078         	movff	??_CANSetFilter,CANSetFilter@tamp
  3253  00047C  C074  F079         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  3254  000480  C075  F07A         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  3255  000484  C076  F07B         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  3256                           
  3257                           ; BSR set to: 0
  3258                           ;inc\CANlib.h: 801: RXF3SIDL = (unsigned char) tamp;
  3259  000488  C078  FF0D         	movff	CANSetFilter@tamp,3853	;volatile
  3260  00048C                     l4070:
  3261                           
  3262                           ; BSR set to: 0
  3263                           ;inc\CANlib.h: 802: }
  3264                           ;inc\CANlib.h: 804: if ((numBuffer ==CAN_FILTER_B2_F3) && (type == CAN_CONFIG_STD_MSG))
  3265  00048C  0E04               	movlw	4
  3266  00048E  0100               	movlb	0	; () banked
  3267  000490  1977               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  3268  000492  A4D8               	btfss	status,2,c
  3269  000494  D058               	goto	l4088
  3270                           
  3271                           ; BSR set to: 0
  3272  000496  0100               	movlb	0	; () banked
  3273  000498  2972               	incf	CANSetFilter@type& (0+255),w,b
  3274  00049A  A4D8               	btfss	status,2,c
  3275  00049C  D054               	goto	l4088
  3276                           
  3277                           ; BSR set to: 0
  3278                           ;inc\CANlib.h: 805: {
  3279                           ;inc\CANlib.h: 806: RXF4SIDLbits.EXIDEN = 0x00;
  3280  00049E  010F               	movlb	15	; () banked
  3281  0004A0  9711               	bcf	17,3,b	;volatile
  3282                           
  3283                           ; BSR set to: 15
  3284                           ;inc\CANlib.h: 808: tamp = (filter >> 3);
  3285  0004A2  C06E  F073         	movff	CANSetFilter@filter,??_CANSetFilter
  3286  0004A6  C06F  F074         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  3287  0004AA  C070  F075         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  3288  0004AE  C071  F076         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  3289  0004B2  0E04               	movlw	4
  3290  0004B4  D006               	goto	u4880
  3291  0004B6                     u4885:
  3292  0004B6  0100               	movlb	0	; () banked
  3293  0004B8  90D8               	bcf	status,0,c
  3294  0004BA  3376               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  3295  0004BC  3375               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  3296  0004BE  3374               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  3297  0004C0  3373               	rrcf	??_CANSetFilter& (0+255),f,b
  3298  0004C2                     u4880:
  3299  0004C2  2EE8               	decfsz	wreg,f,c
  3300  0004C4  D7F8               	goto	u4885
  3301  0004C6  C073  F078         	movff	??_CANSetFilter,CANSetFilter@tamp
  3302  0004CA  C074  F079         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  3303  0004CE  C075  F07A         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  3304  0004D2  C076  F07B         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  3305                           
  3306                           ; BSR set to: 0
  3307                           ;inc\CANlib.h: 809: tamp = tamp & 0x000000FF;
  3308  0004D6  0100               	movlb	0	; () banked
  3309  0004D8  5178               	movf	CANSetFilter@tamp& (0+255),w,b
  3310  0004DA  0100               	movlb	0	; () banked
  3311  0004DC  6F78               	movwf	CANSetFilter@tamp& (0+255),b
  3312  0004DE  6B79               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  3313  0004E0  6B7A               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  3314  0004E2  6B7B               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  3315                           
  3316                           ; BSR set to: 0
  3317                           ;inc\CANlib.h: 810: RXF4SIDH = (unsigned char) tamp;
  3318  0004E4  C078  FF10         	movff	CANSetFilter@tamp,3856	;volatile
  3319                           
  3320                           ; BSR set to: 0
  3321                           ;inc\CANlib.h: 812: tamp = filter & 0x00000007;
  3322  0004E8  0E07               	movlw	7
  3323  0004EA  0100               	movlb	0	; () banked
  3324  0004EC  156E               	andwf	CANSetFilter@filter& (0+255),w,b
  3325  0004EE  0100               	movlb	0	; () banked
  3326  0004F0  6F78               	movwf	CANSetFilter@tamp& (0+255),b
  3327  0004F2  0E00               	movlw	0
  3328  0004F4  0100               	movlb	0	; () banked
  3329  0004F6  156F               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  3330  0004F8  0100               	movlb	0	; () banked
  3331  0004FA  6F79               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  3332  0004FC  0E00               	movlw	0
  3333  0004FE  0100               	movlb	0	; () banked
  3334  000500  1570               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  3335  000502  0100               	movlb	0	; () banked
  3336  000504  6F7A               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  3337  000506  0E00               	movlw	0
  3338  000508  0100               	movlb	0	; () banked
  3339  00050A  1571               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  3340  00050C  0100               	movlb	0	; () banked
  3341  00050E  6F7B               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  3342                           
  3343                           ; BSR set to: 0
  3344                           ;inc\CANlib.h: 813: tamp = tamp << 5;
  3345  000510  C078  F073         	movff	CANSetFilter@tamp,??_CANSetFilter
  3346  000514  C079  F074         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  3347  000518  C07A  F075         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  3348  00051C  C07B  F076         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  3349  000520  0E05               	movlw	5
  3350  000522                     u4895:
  3351  000522  90D8               	bcf	status,0,c
  3352  000524  0100               	movlb	0	; () banked
  3353  000526  3773               	rlcf	??_CANSetFilter& (0+255),f,b
  3354  000528  3774               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  3355  00052A  3775               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  3356  00052C  3776               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  3357  00052E  2EE8               	decfsz	wreg,f,c
  3358  000530  D7F8               	goto	u4895
  3359  000532  C073  F078         	movff	??_CANSetFilter,CANSetFilter@tamp
  3360  000536  C074  F079         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  3361  00053A  C075  F07A         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  3362  00053E  C076  F07B         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  3363                           
  3364                           ; BSR set to: 0
  3365                           ;inc\CANlib.h: 814: RXF4SIDL = (unsigned char) tamp;
  3366  000542  C078  FF11         	movff	CANSetFilter@tamp,3857	;volatile
  3367  000546                     l4088:
  3368                           
  3369                           ; BSR set to: 0
  3370                           ;inc\CANlib.h: 815: }
  3371                           ;inc\CANlib.h: 817: if ((numBuffer ==CAN_FILTER_B2_F4) && (type == CAN_CONFIG_STD_MSG))
  3372  000546  0E05               	movlw	5
  3373  000548  0100               	movlb	0	; () banked
  3374  00054A  1977               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  3375  00054C  A4D8               	btfss	status,2,c
  3376  00054E  D058               	goto	l4106
  3377                           
  3378                           ; BSR set to: 0
  3379  000550  0100               	movlb	0	; () banked
  3380  000552  2972               	incf	CANSetFilter@type& (0+255),w,b
  3381  000554  A4D8               	btfss	status,2,c
  3382  000556  D054               	goto	l4106
  3383                           
  3384                           ; BSR set to: 0
  3385                           ;inc\CANlib.h: 818: {
  3386                           ;inc\CANlib.h: 819: RXF5SIDLbits.EXIDEN = 0x00;
  3387  000558  010F               	movlb	15	; () banked
  3388  00055A  9715               	bcf	21,3,b	;volatile
  3389                           
  3390                           ; BSR set to: 15
  3391                           ;inc\CANlib.h: 821: tamp = (filter >> 3);
  3392  00055C  C06E  F073         	movff	CANSetFilter@filter,??_CANSetFilter
  3393  000560  C06F  F074         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  3394  000564  C070  F075         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  3395  000568  C071  F076         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  3396  00056C  0E04               	movlw	4
  3397  00056E  D006               	goto	u4920
  3398  000570                     u4925:
  3399  000570  0100               	movlb	0	; () banked
  3400  000572  90D8               	bcf	status,0,c
  3401  000574  3376               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  3402  000576  3375               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  3403  000578  3374               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  3404  00057A  3373               	rrcf	??_CANSetFilter& (0+255),f,b
  3405  00057C                     u4920:
  3406  00057C  2EE8               	decfsz	wreg,f,c
  3407  00057E  D7F8               	goto	u4925
  3408  000580  C073  F078         	movff	??_CANSetFilter,CANSetFilter@tamp
  3409  000584  C074  F079         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  3410  000588  C075  F07A         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  3411  00058C  C076  F07B         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  3412                           
  3413                           ; BSR set to: 0
  3414                           ;inc\CANlib.h: 822: tamp = tamp & 0x000000FF;
  3415  000590  0100               	movlb	0	; () banked
  3416  000592  5178               	movf	CANSetFilter@tamp& (0+255),w,b
  3417  000594  0100               	movlb	0	; () banked
  3418  000596  6F78               	movwf	CANSetFilter@tamp& (0+255),b
  3419  000598  6B79               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  3420  00059A  6B7A               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  3421  00059C  6B7B               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  3422                           
  3423                           ; BSR set to: 0
  3424                           ;inc\CANlib.h: 823: RXF5SIDH = (unsigned char) tamp;
  3425  00059E  C078  FF14         	movff	CANSetFilter@tamp,3860	;volatile
  3426                           
  3427                           ; BSR set to: 0
  3428                           ;inc\CANlib.h: 825: tamp = filter & 0x00000007;
  3429  0005A2  0E07               	movlw	7
  3430  0005A4  0100               	movlb	0	; () banked
  3431  0005A6  156E               	andwf	CANSetFilter@filter& (0+255),w,b
  3432  0005A8  0100               	movlb	0	; () banked
  3433  0005AA  6F78               	movwf	CANSetFilter@tamp& (0+255),b
  3434  0005AC  0E00               	movlw	0
  3435  0005AE  0100               	movlb	0	; () banked
  3436  0005B0  156F               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  3437  0005B2  0100               	movlb	0	; () banked
  3438  0005B4  6F79               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  3439  0005B6  0E00               	movlw	0
  3440  0005B8  0100               	movlb	0	; () banked
  3441  0005BA  1570               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  3442  0005BC  0100               	movlb	0	; () banked
  3443  0005BE  6F7A               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  3444  0005C0  0E00               	movlw	0
  3445  0005C2  0100               	movlb	0	; () banked
  3446  0005C4  1571               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  3447  0005C6  0100               	movlb	0	; () banked
  3448  0005C8  6F7B               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  3449                           
  3450                           ; BSR set to: 0
  3451                           ;inc\CANlib.h: 826: tamp = tamp << 5;
  3452  0005CA  C078  F073         	movff	CANSetFilter@tamp,??_CANSetFilter
  3453  0005CE  C079  F074         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  3454  0005D2  C07A  F075         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  3455  0005D6  C07B  F076         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  3456  0005DA  0E05               	movlw	5
  3457  0005DC                     u4935:
  3458  0005DC  90D8               	bcf	status,0,c
  3459  0005DE  0100               	movlb	0	; () banked
  3460  0005E0  3773               	rlcf	??_CANSetFilter& (0+255),f,b
  3461  0005E2  3774               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  3462  0005E4  3775               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  3463  0005E6  3776               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  3464  0005E8  2EE8               	decfsz	wreg,f,c
  3465  0005EA  D7F8               	goto	u4935
  3466  0005EC  C073  F078         	movff	??_CANSetFilter,CANSetFilter@tamp
  3467  0005F0  C074  F079         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  3468  0005F4  C075  F07A         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  3469  0005F8  C076  F07B         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  3470                           
  3471                           ; BSR set to: 0
  3472                           ;inc\CANlib.h: 827: RXF5SIDL = (unsigned char) tamp;
  3473  0005FC  C078  FF15         	movff	CANSetFilter@tamp,3861	;volatile
  3474  000600                     l4106:
  3475                           
  3476                           ; BSR set to: 0
  3477                           ;inc\CANlib.h: 828: }
  3478                           ;inc\CANlib.h: 831: if ((numBuffer ==CAN_FILTER_B1_F1) && (type == CAN_CONFIG_XTD_MSG))
  3479  000600  0100               	movlb	0	; () banked
  3480  000602  5177               	movf	CANSetFilter@numBuffer& (0+255),w,b
  3481  000604  0100               	movlb	0	; () banked
  3482  000606  A4D8               	btfss	status,2,c
  3483  000608  D089               	goto	l4140
  3484                           
  3485                           ; BSR set to: 0
  3486  00060A  0EF7               	movlw	247
  3487  00060C  0100               	movlb	0	; () banked
  3488  00060E  1972               	xorwf	CANSetFilter@type& (0+255),w,b
  3489  000610  A4D8               	btfss	status,2,c
  3490  000612  D084               	goto	l4140
  3491                           
  3492                           ; BSR set to: 0
  3493                           ;inc\CANlib.h: 832: {
  3494                           ;inc\CANlib.h: 833: RXF0SIDLbits.EXIDEN = 0x01;
  3495  000614  010F               	movlb	15	; () banked
  3496  000616  8701               	bsf	1,3,b	;volatile
  3497                           
  3498                           ; BSR set to: 15
  3499                           ;inc\CANlib.h: 835: tamp = filter & 0x000000FF;
  3500  000618  0100               	movlb	0	; () banked
  3501  00061A  516E               	movf	CANSetFilter@filter& (0+255),w,b
  3502  00061C  0100               	movlb	0	; () banked
  3503  00061E  6F78               	movwf	CANSetFilter@tamp& (0+255),b
  3504  000620  6B79               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  3505  000622  6B7A               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  3506  000624  6B7B               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  3507                           
  3508                           ; BSR set to: 0
  3509                           ;inc\CANlib.h: 836: RXF0EIDL = (unsigned char) tamp;
  3510  000626  C078  FF03         	movff	CANSetFilter@tamp,3843	;volatile
  3511                           
  3512                           ; BSR set to: 0
  3513                           ;inc\CANlib.h: 838: tamp = filter & 0x0000FF00;
  3514  00062A  0E00               	movlw	0
  3515  00062C  0100               	movlb	0	; () banked
  3516  00062E  156E               	andwf	CANSetFilter@filter& (0+255),w,b
  3517  000630  0100               	movlb	0	; () banked
  3518  000632  6F78               	movwf	CANSetFilter@tamp& (0+255),b
  3519  000634  0EFF               	movlw	255
  3520  000636  0100               	movlb	0	; () banked
  3521  000638  156F               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  3522  00063A  0100               	movlb	0	; () banked
  3523  00063C  6F79               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  3524  00063E  0E00               	movlw	0
  3525  000640  0100               	movlb	0	; () banked
  3526  000642  1570               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  3527  000644  0100               	movlb	0	; () banked
  3528  000646  6F7A               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  3529  000648  0E00               	movlw	0
  3530  00064A  0100               	movlb	0	; () banked
  3531  00064C  1571               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  3532  00064E  0100               	movlb	0	; () banked
  3533  000650  6F7B               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  3534                           
  3535                           ; BSR set to: 0
  3536                           ;inc\CANlib.h: 839: tamp = tamp >> 8;
  3537  000652  C078  F073         	movff	CANSetFilter@tamp,??_CANSetFilter
  3538  000656  C079  F074         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  3539  00065A  C07A  F075         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  3540  00065E  C07B  F076         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  3541  000662  C074  F073         	movff	??_CANSetFilter+1,??_CANSetFilter
  3542  000666  C075  F074         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  3543  00066A  C076  F075         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  3544  00066E  0100               	movlb	0	; () banked
  3545  000670  6B76               	clrf	(??_CANSetFilter+3)& (0+255),b
  3546  000672  C073  F078         	movff	??_CANSetFilter,CANSetFilter@tamp
  3547  000676  C074  F079         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  3548  00067A  C075  F07A         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  3549  00067E  C076  F07B         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  3550                           
  3551                           ; BSR set to: 0
  3552                           ;inc\CANlib.h: 840: RXF0EIDH = (unsigned char) tamp;
  3553  000682  C078  FF02         	movff	CANSetFilter@tamp,3842	;volatile
  3554                           
  3555                           ; BSR set to: 0
  3556                           ;inc\CANlib.h: 842: if (filter & 0x00010000)
  3557  000686  0100               	movlb	0	; () banked
  3558  000688  A170               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
  3559  00068A  D003               	goto	l465
  3560                           
  3561                           ; BSR set to: 0
  3562                           ;inc\CANlib.h: 843: RXF0SIDLbits.EID16 = 0x01;
  3563  00068C  010F               	movlb	15	; () banked
  3564  00068E  8101               	bsf	1,0,b	;volatile
  3565  000690  D002               	goto	l466
  3566  000692                     l465:
  3567                           
  3568                           ; BSR set to: 0
  3569                           ;inc\CANlib.h: 844: else
  3570                           ;inc\CANlib.h: 845: RXF0SIDLbits.EID16 = 0x00;
  3571  000692  010F               	movlb	15	; () banked
  3572  000694  9101               	bcf	1,0,b	;volatile
  3573  000696                     l466:
  3574                           
  3575                           ; BSR set to: 15
  3576                           ;inc\CANlib.h: 847: if (filter & 0x00020000)
  3577  000696  0100               	movlb	0	; () banked
  3578  000698  A370               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
  3579  00069A  D003               	goto	l467
  3580                           
  3581                           ; BSR set to: 0
  3582                           ;inc\CANlib.h: 848: RXF0SIDLbits.EID17 = 0x01;
  3583  00069C  010F               	movlb	15	; () banked
  3584  00069E  8301               	bsf	1,1,b	;volatile
  3585  0006A0  D002               	goto	l468
  3586  0006A2                     l467:
  3587                           
  3588                           ; BSR set to: 0
  3589                           ;inc\CANlib.h: 849: else
  3590                           ;inc\CANlib.h: 850: RXF0SIDLbits.EID17 = 0x00;
  3591  0006A2  010F               	movlb	15	; () banked
  3592  0006A4  9301               	bcf	1,1,b	;volatile
  3593  0006A6                     l468:
  3594                           
  3595                           ; BSR set to: 15
  3596                           ;inc\CANlib.h: 852: if (filter & 0x00040000)
  3597  0006A6  0100               	movlb	0	; () banked
  3598  0006A8  A570               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
  3599  0006AA  D003               	goto	l469
  3600                           
  3601                           ; BSR set to: 0
  3602                           ;inc\CANlib.h: 853: RXF0SIDLbits.SID0 = 0x01;
  3603  0006AC  010F               	movlb	15	; () banked
  3604  0006AE  8B01               	bsf	1,5,b	;volatile
  3605  0006B0  D002               	goto	l470
  3606  0006B2                     l469:
  3607                           
  3608                           ; BSR set to: 0
  3609                           ;inc\CANlib.h: 854: else
  3610                           ;inc\CANlib.h: 855: RXF0SIDLbits.SID0 = 0x00;
  3611  0006B2  010F               	movlb	15	; () banked
  3612  0006B4  9B01               	bcf	1,5,b	;volatile
  3613  0006B6                     l470:
  3614                           
  3615                           ; BSR set to: 15
  3616                           ;inc\CANlib.h: 857: if (filter & 0x00080000)
  3617  0006B6  0100               	movlb	0	; () banked
  3618  0006B8  A770               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
  3619  0006BA  D003               	goto	l471
  3620                           
  3621                           ; BSR set to: 0
  3622                           ;inc\CANlib.h: 858: RXF0SIDLbits.SID1 = 0x01;
  3623  0006BC  010F               	movlb	15	; () banked
  3624  0006BE  8D01               	bsf	1,6,b	;volatile
  3625  0006C0  D002               	goto	l472
  3626  0006C2                     l471:
  3627                           
  3628                           ; BSR set to: 0
  3629                           ;inc\CANlib.h: 859: else
  3630                           ;inc\CANlib.h: 860: RXF0SIDLbits.SID1 = 0x00;
  3631  0006C2  010F               	movlb	15	; () banked
  3632  0006C4  9D01               	bcf	1,6,b	;volatile
  3633  0006C6                     l472:
  3634                           
  3635                           ; BSR set to: 15
  3636                           ;inc\CANlib.h: 862: if (filter & 0x00100000)
  3637  0006C6  0100               	movlb	0	; () banked
  3638  0006C8  A970               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
  3639  0006CA  D003               	goto	l473
  3640                           
  3641                           ; BSR set to: 0
  3642                           ;inc\CANlib.h: 863: RXF0SIDLbits.SID2 = 0x01 ;
  3643  0006CC  010F               	movlb	15	; () banked
  3644  0006CE  8F01               	bsf	1,7,b	;volatile
  3645  0006D0  D002               	goto	l4134
  3646  0006D2                     l473:
  3647                           
  3648                           ; BSR set to: 0
  3649                           ;inc\CANlib.h: 864: else
  3650                           ;inc\CANlib.h: 865: RXF0SIDLbits.SID2 = 0x00 ;
  3651  0006D2  010F               	movlb	15	; () banked
  3652  0006D4  9F01               	bcf	1,7,b	;volatile
  3653  0006D6                     l4134:
  3654                           
  3655                           ; BSR set to: 15
  3656                           ;inc\CANlib.h: 867: tamp = (filter >> 21);
  3657  0006D6  C06E  F073         	movff	CANSetFilter@filter,??_CANSetFilter
  3658  0006DA  C06F  F074         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  3659  0006DE  C070  F075         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  3660  0006E2  C071  F076         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  3661  0006E6  0E16               	movlw	22
  3662  0006E8  D006               	goto	u5010
  3663  0006EA                     u5015:
  3664  0006EA  0100               	movlb	0	; () banked
  3665  0006EC  90D8               	bcf	status,0,c
  3666  0006EE  3376               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  3667  0006F0  3375               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  3668  0006F2  3374               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  3669  0006F4  3373               	rrcf	??_CANSetFilter& (0+255),f,b
  3670  0006F6                     u5010:
  3671  0006F6  2EE8               	decfsz	wreg,f,c
  3672  0006F8  D7F8               	goto	u5015
  3673  0006FA  C073  F078         	movff	??_CANSetFilter,CANSetFilter@tamp
  3674  0006FE  C074  F079         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  3675  000702  C075  F07A         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  3676  000706  C076  F07B         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  3677                           
  3678                           ; BSR set to: 0
  3679                           ;inc\CANlib.h: 868: tamp = tamp & 0x000000FF;
  3680  00070A  0100               	movlb	0	; () banked
  3681  00070C  5178               	movf	CANSetFilter@tamp& (0+255),w,b
  3682  00070E  0100               	movlb	0	; () banked
  3683  000710  6F78               	movwf	CANSetFilter@tamp& (0+255),b
  3684  000712  6B79               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  3685  000714  6B7A               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  3686  000716  6B7B               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  3687                           
  3688                           ; BSR set to: 0
  3689                           ;inc\CANlib.h: 869: RXF0SIDH = (unsigned char) tamp;
  3690  000718  C078  FF00         	movff	CANSetFilter@tamp,3840	;volatile
  3691  00071C                     l4140:
  3692                           
  3693                           ; BSR set to: 0
  3694                           ;inc\CANlib.h: 870: }
  3695                           ;inc\CANlib.h: 872: if ((numBuffer ==CAN_FILTER_B1_F2) && (type == CAN_CONFIG_XTD_MSG))
  3696  00071C  0100               	movlb	0	; () banked
  3697  00071E  0577               	decf	CANSetFilter@numBuffer& (0+255),w,b
  3698  000720  A4D8               	btfss	status,2,c
  3699  000722  D089               	goto	l4174
  3700                           
  3701                           ; BSR set to: 0
  3702  000724  0EF7               	movlw	247
  3703  000726  0100               	movlb	0	; () banked
  3704  000728  1972               	xorwf	CANSetFilter@type& (0+255),w,b
  3705  00072A  A4D8               	btfss	status,2,c
  3706  00072C  D084               	goto	l4174
  3707                           
  3708                           ; BSR set to: 0
  3709                           ;inc\CANlib.h: 873: {
  3710                           ;inc\CANlib.h: 874: RXF1SIDLbits.EXIDEN = 0x01;
  3711  00072E  010F               	movlb	15	; () banked
  3712  000730  8705               	bsf	5,3,b	;volatile
  3713                           
  3714                           ; BSR set to: 15
  3715                           ;inc\CANlib.h: 876: tamp = filter & 0x000000FF;
  3716  000732  0100               	movlb	0	; () banked
  3717  000734  516E               	movf	CANSetFilter@filter& (0+255),w,b
  3718  000736  0100               	movlb	0	; () banked
  3719  000738  6F78               	movwf	CANSetFilter@tamp& (0+255),b
  3720  00073A  6B79               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  3721  00073C  6B7A               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  3722  00073E  6B7B               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  3723                           
  3724                           ; BSR set to: 0
  3725                           ;inc\CANlib.h: 877: RXF1EIDL = (unsigned char) tamp;
  3726  000740  C078  FF07         	movff	CANSetFilter@tamp,3847	;volatile
  3727                           
  3728                           ; BSR set to: 0
  3729                           ;inc\CANlib.h: 879: tamp = filter & 0x0000FF00;
  3730  000744  0E00               	movlw	0
  3731  000746  0100               	movlb	0	; () banked
  3732  000748  156E               	andwf	CANSetFilter@filter& (0+255),w,b
  3733  00074A  0100               	movlb	0	; () banked
  3734  00074C  6F78               	movwf	CANSetFilter@tamp& (0+255),b
  3735  00074E  0EFF               	movlw	255
  3736  000750  0100               	movlb	0	; () banked
  3737  000752  156F               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  3738  000754  0100               	movlb	0	; () banked
  3739  000756  6F79               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  3740  000758  0E00               	movlw	0
  3741  00075A  0100               	movlb	0	; () banked
  3742  00075C  1570               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  3743  00075E  0100               	movlb	0	; () banked
  3744  000760  6F7A               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  3745  000762  0E00               	movlw	0
  3746  000764  0100               	movlb	0	; () banked
  3747  000766  1571               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  3748  000768  0100               	movlb	0	; () banked
  3749  00076A  6F7B               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  3750                           
  3751                           ; BSR set to: 0
  3752                           ;inc\CANlib.h: 880: tamp = tamp >> 8;
  3753  00076C  C078  F073         	movff	CANSetFilter@tamp,??_CANSetFilter
  3754  000770  C079  F074         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  3755  000774  C07A  F075         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  3756  000778  C07B  F076         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  3757  00077C  C074  F073         	movff	??_CANSetFilter+1,??_CANSetFilter
  3758  000780  C075  F074         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  3759  000784  C076  F075         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  3760  000788  0100               	movlb	0	; () banked
  3761  00078A  6B76               	clrf	(??_CANSetFilter+3)& (0+255),b
  3762  00078C  C073  F078         	movff	??_CANSetFilter,CANSetFilter@tamp
  3763  000790  C074  F079         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  3764  000794  C075  F07A         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  3765  000798  C076  F07B         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  3766                           
  3767                           ; BSR set to: 0
  3768                           ;inc\CANlib.h: 881: RXF1EIDH = (unsigned char) tamp;
  3769  00079C  C078  FF06         	movff	CANSetFilter@tamp,3846	;volatile
  3770                           
  3771                           ; BSR set to: 0
  3772                           ;inc\CANlib.h: 883: if (filter & 0x00010000)
  3773  0007A0  0100               	movlb	0	; () banked
  3774  0007A2  A170               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
  3775  0007A4  D003               	goto	l476
  3776                           
  3777                           ; BSR set to: 0
  3778                           ;inc\CANlib.h: 884: RXF1SIDLbits.EID16 = 0x01;
  3779  0007A6  010F               	movlb	15	; () banked
  3780  0007A8  8105               	bsf	5,0,b	;volatile
  3781  0007AA  D002               	goto	l477
  3782  0007AC                     l476:
  3783                           
  3784                           ; BSR set to: 0
  3785                           ;inc\CANlib.h: 885: else
  3786                           ;inc\CANlib.h: 886: RXF1SIDLbits.EID16 = 0x00;
  3787  0007AC  010F               	movlb	15	; () banked
  3788  0007AE  9105               	bcf	5,0,b	;volatile
  3789  0007B0                     l477:
  3790                           
  3791                           ; BSR set to: 15
  3792                           ;inc\CANlib.h: 888: if (filter & 0x00020000)
  3793  0007B0  0100               	movlb	0	; () banked
  3794  0007B2  A370               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
  3795  0007B4  D003               	goto	l478
  3796                           
  3797                           ; BSR set to: 0
  3798                           ;inc\CANlib.h: 889: RXF1SIDLbits.EID17 = 0x01;
  3799  0007B6  010F               	movlb	15	; () banked
  3800  0007B8  8305               	bsf	5,1,b	;volatile
  3801  0007BA  D002               	goto	l479
  3802  0007BC                     l478:
  3803                           
  3804                           ; BSR set to: 0
  3805                           ;inc\CANlib.h: 890: else
  3806                           ;inc\CANlib.h: 891: RXF1SIDLbits.EID17 = 0x00;
  3807  0007BC  010F               	movlb	15	; () banked
  3808  0007BE  9305               	bcf	5,1,b	;volatile
  3809  0007C0                     l479:
  3810                           
  3811                           ; BSR set to: 15
  3812                           ;inc\CANlib.h: 893: if (filter & 0x00040000)
  3813  0007C0  0100               	movlb	0	; () banked
  3814  0007C2  A570               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
  3815  0007C4  D003               	goto	l480
  3816                           
  3817                           ; BSR set to: 0
  3818                           ;inc\CANlib.h: 894: RXF1SIDLbits.SID0 = 0x01;
  3819  0007C6  010F               	movlb	15	; () banked
  3820  0007C8  8B05               	bsf	5,5,b	;volatile
  3821  0007CA  D002               	goto	l481
  3822  0007CC                     l480:
  3823                           
  3824                           ; BSR set to: 0
  3825                           ;inc\CANlib.h: 895: else
  3826                           ;inc\CANlib.h: 896: RXF1SIDLbits.SID0 = 0x00;
  3827  0007CC  010F               	movlb	15	; () banked
  3828  0007CE  9B05               	bcf	5,5,b	;volatile
  3829  0007D0                     l481:
  3830                           
  3831                           ; BSR set to: 15
  3832                           ;inc\CANlib.h: 898: if (filter & 0x00080000)
  3833  0007D0  0100               	movlb	0	; () banked
  3834  0007D2  A770               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
  3835  0007D4  D003               	goto	l482
  3836                           
  3837                           ; BSR set to: 0
  3838                           ;inc\CANlib.h: 899: RXF1SIDLbits.SID1 = 0x01;
  3839  0007D6  010F               	movlb	15	; () banked
  3840  0007D8  8D05               	bsf	5,6,b	;volatile
  3841  0007DA  D002               	goto	l483
  3842  0007DC                     l482:
  3843                           
  3844                           ; BSR set to: 0
  3845                           ;inc\CANlib.h: 900: else
  3846                           ;inc\CANlib.h: 901: RXF1SIDLbits.SID1 = 0x00;
  3847  0007DC  010F               	movlb	15	; () banked
  3848  0007DE  9D05               	bcf	5,6,b	;volatile
  3849  0007E0                     l483:
  3850                           
  3851                           ; BSR set to: 15
  3852                           ;inc\CANlib.h: 903: if (filter & 0x00100000)
  3853  0007E0  0100               	movlb	0	; () banked
  3854  0007E2  A970               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
  3855  0007E4  D003               	goto	l484
  3856                           
  3857                           ; BSR set to: 0
  3858                           ;inc\CANlib.h: 904: RXF1SIDLbits.SID2 = 0x01 ;
  3859  0007E6  010F               	movlb	15	; () banked
  3860  0007E8  8F05               	bsf	5,7,b	;volatile
  3861  0007EA  D002               	goto	l4168
  3862  0007EC                     l484:
  3863                           
  3864                           ; BSR set to: 0
  3865                           ;inc\CANlib.h: 905: else
  3866                           ;inc\CANlib.h: 906: RXF1SIDLbits.SID2 = 0x00 ;
  3867  0007EC  010F               	movlb	15	; () banked
  3868  0007EE  9F05               	bcf	5,7,b	;volatile
  3869  0007F0                     l4168:
  3870                           
  3871                           ; BSR set to: 15
  3872                           ;inc\CANlib.h: 908: tamp = (filter >> 21);
  3873  0007F0  C06E  F073         	movff	CANSetFilter@filter,??_CANSetFilter
  3874  0007F4  C06F  F074         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  3875  0007F8  C070  F075         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  3876  0007FC  C071  F076         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  3877  000800  0E16               	movlw	22
  3878  000802  D006               	goto	u5090
  3879  000804                     u5095:
  3880  000804  0100               	movlb	0	; () banked
  3881  000806  90D8               	bcf	status,0,c
  3882  000808  3376               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  3883  00080A  3375               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  3884  00080C  3374               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  3885  00080E  3373               	rrcf	??_CANSetFilter& (0+255),f,b
  3886  000810                     u5090:
  3887  000810  2EE8               	decfsz	wreg,f,c
  3888  000812  D7F8               	goto	u5095
  3889  000814  C073  F078         	movff	??_CANSetFilter,CANSetFilter@tamp
  3890  000818  C074  F079         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  3891  00081C  C075  F07A         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  3892  000820  C076  F07B         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  3893                           
  3894                           ; BSR set to: 0
  3895                           ;inc\CANlib.h: 909: tamp = tamp & 0x000000FF;
  3896  000824  0100               	movlb	0	; () banked
  3897  000826  5178               	movf	CANSetFilter@tamp& (0+255),w,b
  3898  000828  0100               	movlb	0	; () banked
  3899  00082A  6F78               	movwf	CANSetFilter@tamp& (0+255),b
  3900  00082C  6B79               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  3901  00082E  6B7A               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  3902  000830  6B7B               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  3903                           
  3904                           ; BSR set to: 0
  3905                           ;inc\CANlib.h: 910: RXF1SIDH = (unsigned char) tamp;
  3906  000832  C078  FF04         	movff	CANSetFilter@tamp,3844	;volatile
  3907  000836                     l4174:
  3908                           
  3909                           ; BSR set to: 0
  3910                           ;inc\CANlib.h: 911: }
  3911                           ;inc\CANlib.h: 914: if ((numBuffer ==CAN_FILTER_B2_F1) && (type == CAN_CONFIG_XTD_MSG))
  3912  000836  0E02               	movlw	2
  3913  000838  0100               	movlb	0	; () banked
  3914  00083A  1977               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  3915  00083C  A4D8               	btfss	status,2,c
  3916  00083E  D089               	goto	l4208
  3917                           
  3918                           ; BSR set to: 0
  3919  000840  0EF7               	movlw	247
  3920  000842  0100               	movlb	0	; () banked
  3921  000844  1972               	xorwf	CANSetFilter@type& (0+255),w,b
  3922  000846  A4D8               	btfss	status,2,c
  3923  000848  D084               	goto	l4208
  3924                           
  3925                           ; BSR set to: 0
  3926                           ;inc\CANlib.h: 915: {
  3927                           ;inc\CANlib.h: 916: RXF2SIDLbits.EXIDEN = 0x01;
  3928  00084A  010F               	movlb	15	; () banked
  3929  00084C  8709               	bsf	9,3,b	;volatile
  3930                           
  3931                           ; BSR set to: 15
  3932                           ;inc\CANlib.h: 918: tamp = filter & 0x000000FF;
  3933  00084E  0100               	movlb	0	; () banked
  3934  000850  516E               	movf	CANSetFilter@filter& (0+255),w,b
  3935  000852  0100               	movlb	0	; () banked
  3936  000854  6F78               	movwf	CANSetFilter@tamp& (0+255),b
  3937  000856  6B79               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  3938  000858  6B7A               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  3939  00085A  6B7B               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  3940                           
  3941                           ; BSR set to: 0
  3942                           ;inc\CANlib.h: 919: RXF2EIDL = (unsigned char) tamp;
  3943  00085C  C078  FF0B         	movff	CANSetFilter@tamp,3851	;volatile
  3944                           
  3945                           ; BSR set to: 0
  3946                           ;inc\CANlib.h: 921: tamp = filter & 0x0000FF00;
  3947  000860  0E00               	movlw	0
  3948  000862  0100               	movlb	0	; () banked
  3949  000864  156E               	andwf	CANSetFilter@filter& (0+255),w,b
  3950  000866  0100               	movlb	0	; () banked
  3951  000868  6F78               	movwf	CANSetFilter@tamp& (0+255),b
  3952  00086A  0EFF               	movlw	255
  3953  00086C  0100               	movlb	0	; () banked
  3954  00086E  156F               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  3955  000870  0100               	movlb	0	; () banked
  3956  000872  6F79               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  3957  000874  0E00               	movlw	0
  3958  000876  0100               	movlb	0	; () banked
  3959  000878  1570               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  3960  00087A  0100               	movlb	0	; () banked
  3961  00087C  6F7A               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  3962  00087E  0E00               	movlw	0
  3963  000880  0100               	movlb	0	; () banked
  3964  000882  1571               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  3965  000884  0100               	movlb	0	; () banked
  3966  000886  6F7B               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  3967                           
  3968                           ; BSR set to: 0
  3969                           ;inc\CANlib.h: 922: tamp = tamp >> 8;
  3970  000888  C078  F073         	movff	CANSetFilter@tamp,??_CANSetFilter
  3971  00088C  C079  F074         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  3972  000890  C07A  F075         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  3973  000894  C07B  F076         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  3974  000898  C074  F073         	movff	??_CANSetFilter+1,??_CANSetFilter
  3975  00089C  C075  F074         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  3976  0008A0  C076  F075         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  3977  0008A4  0100               	movlb	0	; () banked
  3978  0008A6  6B76               	clrf	(??_CANSetFilter+3)& (0+255),b
  3979  0008A8  C073  F078         	movff	??_CANSetFilter,CANSetFilter@tamp
  3980  0008AC  C074  F079         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  3981  0008B0  C075  F07A         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  3982  0008B4  C076  F07B         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  3983                           
  3984                           ; BSR set to: 0
  3985                           ;inc\CANlib.h: 923: RXF2EIDH = (unsigned char) tamp;
  3986  0008B8  C078  FF0A         	movff	CANSetFilter@tamp,3850	;volatile
  3987                           
  3988                           ; BSR set to: 0
  3989                           ;inc\CANlib.h: 925: if (filter & 0x00010000)
  3990  0008BC  0100               	movlb	0	; () banked
  3991  0008BE  A170               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
  3992  0008C0  D003               	goto	l487
  3993                           
  3994                           ; BSR set to: 0
  3995                           ;inc\CANlib.h: 926: RXF2SIDLbits.EID16 = 0x01;
  3996  0008C2  010F               	movlb	15	; () banked
  3997  0008C4  8109               	bsf	9,0,b	;volatile
  3998  0008C6  D002               	goto	l488
  3999  0008C8                     l487:
  4000                           
  4001                           ; BSR set to: 0
  4002                           ;inc\CANlib.h: 927: else
  4003                           ;inc\CANlib.h: 928: RXF2SIDLbits.EID16 = 0x00;
  4004  0008C8  010F               	movlb	15	; () banked
  4005  0008CA  9109               	bcf	9,0,b	;volatile
  4006  0008CC                     l488:
  4007                           
  4008                           ; BSR set to: 15
  4009                           ;inc\CANlib.h: 930: if (filter & 0x00020000)
  4010  0008CC  0100               	movlb	0	; () banked
  4011  0008CE  A370               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
  4012  0008D0  D003               	goto	l489
  4013                           
  4014                           ; BSR set to: 0
  4015                           ;inc\CANlib.h: 931: RXF2SIDLbits.EID17 = 0x01;
  4016  0008D2  010F               	movlb	15	; () banked
  4017  0008D4  8309               	bsf	9,1,b	;volatile
  4018  0008D6  D002               	goto	l490
  4019  0008D8                     l489:
  4020                           
  4021                           ; BSR set to: 0
  4022                           ;inc\CANlib.h: 932: else
  4023                           ;inc\CANlib.h: 933: RXF2SIDLbits.EID17 = 0x00;
  4024  0008D8  010F               	movlb	15	; () banked
  4025  0008DA  9309               	bcf	9,1,b	;volatile
  4026  0008DC                     l490:
  4027                           
  4028                           ; BSR set to: 15
  4029                           ;inc\CANlib.h: 935: if (filter & 0x00040000)
  4030  0008DC  0100               	movlb	0	; () banked
  4031  0008DE  A570               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
  4032  0008E0  D003               	goto	l491
  4033                           
  4034                           ; BSR set to: 0
  4035                           ;inc\CANlib.h: 936: RXF2SIDLbits.SID0 = 0x01;
  4036  0008E2  010F               	movlb	15	; () banked
  4037  0008E4  8B09               	bsf	9,5,b	;volatile
  4038  0008E6  D002               	goto	l492
  4039  0008E8                     l491:
  4040                           
  4041                           ; BSR set to: 0
  4042                           ;inc\CANlib.h: 937: else
  4043                           ;inc\CANlib.h: 938: RXF2SIDLbits.SID0 = 0x00;
  4044  0008E8  010F               	movlb	15	; () banked
  4045  0008EA  9B09               	bcf	9,5,b	;volatile
  4046  0008EC                     l492:
  4047                           
  4048                           ; BSR set to: 15
  4049                           ;inc\CANlib.h: 940: if (filter & 0x00080000)
  4050  0008EC  0100               	movlb	0	; () banked
  4051  0008EE  A770               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
  4052  0008F0  D003               	goto	l493
  4053                           
  4054                           ; BSR set to: 0
  4055                           ;inc\CANlib.h: 941: RXF2SIDLbits.SID1 = 0x01;
  4056  0008F2  010F               	movlb	15	; () banked
  4057  0008F4  8D09               	bsf	9,6,b	;volatile
  4058  0008F6  D002               	goto	l494
  4059  0008F8                     l493:
  4060                           
  4061                           ; BSR set to: 0
  4062                           ;inc\CANlib.h: 942: else
  4063                           ;inc\CANlib.h: 943: RXF2SIDLbits.SID1 = 0x00;
  4064  0008F8  010F               	movlb	15	; () banked
  4065  0008FA  9D09               	bcf	9,6,b	;volatile
  4066  0008FC                     l494:
  4067                           
  4068                           ; BSR set to: 15
  4069                           ;inc\CANlib.h: 945: if (filter & 0x00100000)
  4070  0008FC  0100               	movlb	0	; () banked
  4071  0008FE  A970               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
  4072  000900  D003               	goto	l495
  4073                           
  4074                           ; BSR set to: 0
  4075                           ;inc\CANlib.h: 946: RXF2SIDLbits.SID2 = 0x01 ;
  4076  000902  010F               	movlb	15	; () banked
  4077  000904  8F09               	bsf	9,7,b	;volatile
  4078  000906  D002               	goto	l4202
  4079  000908                     l495:
  4080                           
  4081                           ; BSR set to: 0
  4082                           ;inc\CANlib.h: 947: else
  4083                           ;inc\CANlib.h: 948: RXF2SIDLbits.SID2 = 0x00 ;
  4084  000908  010F               	movlb	15	; () banked
  4085  00090A  9F09               	bcf	9,7,b	;volatile
  4086  00090C                     l4202:
  4087                           
  4088                           ; BSR set to: 15
  4089                           ;inc\CANlib.h: 950: tamp = (filter >> 21);
  4090  00090C  C06E  F073         	movff	CANSetFilter@filter,??_CANSetFilter
  4091  000910  C06F  F074         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  4092  000914  C070  F075         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  4093  000918  C071  F076         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  4094  00091C  0E16               	movlw	22
  4095  00091E  D006               	goto	u5170
  4096  000920                     u5175:
  4097  000920  0100               	movlb	0	; () banked
  4098  000922  90D8               	bcf	status,0,c
  4099  000924  3376               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  4100  000926  3375               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  4101  000928  3374               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  4102  00092A  3373               	rrcf	??_CANSetFilter& (0+255),f,b
  4103  00092C                     u5170:
  4104  00092C  2EE8               	decfsz	wreg,f,c
  4105  00092E  D7F8               	goto	u5175
  4106  000930  C073  F078         	movff	??_CANSetFilter,CANSetFilter@tamp
  4107  000934  C074  F079         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4108  000938  C075  F07A         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4109  00093C  C076  F07B         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4110                           
  4111                           ; BSR set to: 0
  4112                           ;inc\CANlib.h: 951: tamp = tamp & 0x000000FF;
  4113  000940  0100               	movlb	0	; () banked
  4114  000942  5178               	movf	CANSetFilter@tamp& (0+255),w,b
  4115  000944  0100               	movlb	0	; () banked
  4116  000946  6F78               	movwf	CANSetFilter@tamp& (0+255),b
  4117  000948  6B79               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4118  00094A  6B7A               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4119  00094C  6B7B               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4120                           
  4121                           ; BSR set to: 0
  4122                           ;inc\CANlib.h: 952: RXF2SIDH = (unsigned char) tamp;
  4123  00094E  C078  FF08         	movff	CANSetFilter@tamp,3848	;volatile
  4124  000952                     l4208:
  4125                           
  4126                           ; BSR set to: 0
  4127                           ;inc\CANlib.h: 953: }
  4128                           ;inc\CANlib.h: 955: if ((numBuffer ==CAN_FILTER_B2_F2) && (type == CAN_CONFIG_XTD_MSG))
  4129  000952  0E03               	movlw	3
  4130  000954  0100               	movlb	0	; () banked
  4131  000956  1977               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  4132  000958  A4D8               	btfss	status,2,c
  4133  00095A  D089               	goto	l4242
  4134                           
  4135                           ; BSR set to: 0
  4136  00095C  0EF7               	movlw	247
  4137  00095E  0100               	movlb	0	; () banked
  4138  000960  1972               	xorwf	CANSetFilter@type& (0+255),w,b
  4139  000962  A4D8               	btfss	status,2,c
  4140  000964  D084               	goto	l4242
  4141                           
  4142                           ; BSR set to: 0
  4143                           ;inc\CANlib.h: 956: {
  4144                           ;inc\CANlib.h: 957: RXF3SIDLbits.EXIDEN = 0x01;
  4145  000966  010F               	movlb	15	; () banked
  4146  000968  870D               	bsf	13,3,b	;volatile
  4147                           
  4148                           ; BSR set to: 15
  4149                           ;inc\CANlib.h: 959: tamp = filter & 0x000000FF;
  4150  00096A  0100               	movlb	0	; () banked
  4151  00096C  516E               	movf	CANSetFilter@filter& (0+255),w,b
  4152  00096E  0100               	movlb	0	; () banked
  4153  000970  6F78               	movwf	CANSetFilter@tamp& (0+255),b
  4154  000972  6B79               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4155  000974  6B7A               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4156  000976  6B7B               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4157                           
  4158                           ; BSR set to: 0
  4159                           ;inc\CANlib.h: 960: RXF3EIDL = (unsigned char) tamp;
  4160  000978  C078  FF0F         	movff	CANSetFilter@tamp,3855	;volatile
  4161                           
  4162                           ; BSR set to: 0
  4163                           ;inc\CANlib.h: 962: tamp = filter & 0x0000FF00;
  4164  00097C  0E00               	movlw	0
  4165  00097E  0100               	movlb	0	; () banked
  4166  000980  156E               	andwf	CANSetFilter@filter& (0+255),w,b
  4167  000982  0100               	movlb	0	; () banked
  4168  000984  6F78               	movwf	CANSetFilter@tamp& (0+255),b
  4169  000986  0EFF               	movlw	255
  4170  000988  0100               	movlb	0	; () banked
  4171  00098A  156F               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  4172  00098C  0100               	movlb	0	; () banked
  4173  00098E  6F79               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  4174  000990  0E00               	movlw	0
  4175  000992  0100               	movlb	0	; () banked
  4176  000994  1570               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  4177  000996  0100               	movlb	0	; () banked
  4178  000998  6F7A               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  4179  00099A  0E00               	movlw	0
  4180  00099C  0100               	movlb	0	; () banked
  4181  00099E  1571               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  4182  0009A0  0100               	movlb	0	; () banked
  4183  0009A2  6F7B               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  4184                           
  4185                           ; BSR set to: 0
  4186                           ;inc\CANlib.h: 963: tamp = tamp >> 8;
  4187  0009A4  C078  F073         	movff	CANSetFilter@tamp,??_CANSetFilter
  4188  0009A8  C079  F074         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  4189  0009AC  C07A  F075         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  4190  0009B0  C07B  F076         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  4191  0009B4  C074  F073         	movff	??_CANSetFilter+1,??_CANSetFilter
  4192  0009B8  C075  F074         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  4193  0009BC  C076  F075         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  4194  0009C0  0100               	movlb	0	; () banked
  4195  0009C2  6B76               	clrf	(??_CANSetFilter+3)& (0+255),b
  4196  0009C4  C073  F078         	movff	??_CANSetFilter,CANSetFilter@tamp
  4197  0009C8  C074  F079         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4198  0009CC  C075  F07A         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4199  0009D0  C076  F07B         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4200                           
  4201                           ; BSR set to: 0
  4202                           ;inc\CANlib.h: 964: RXF3EIDH = (unsigned char) tamp;
  4203  0009D4  C078  FF0E         	movff	CANSetFilter@tamp,3854	;volatile
  4204                           
  4205                           ; BSR set to: 0
  4206                           ;inc\CANlib.h: 966: if (filter & 0x00010000)
  4207  0009D8  0100               	movlb	0	; () banked
  4208  0009DA  A170               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
  4209  0009DC  D003               	goto	l498
  4210                           
  4211                           ; BSR set to: 0
  4212                           ;inc\CANlib.h: 967: RXF3SIDLbits.EID16 = 0x01;
  4213  0009DE  010F               	movlb	15	; () banked
  4214  0009E0  810D               	bsf	13,0,b	;volatile
  4215  0009E2  D002               	goto	l499
  4216  0009E4                     l498:
  4217                           
  4218                           ; BSR set to: 0
  4219                           ;inc\CANlib.h: 968: else
  4220                           ;inc\CANlib.h: 969: RXF3SIDLbits.EID16 = 0x00;
  4221  0009E4  010F               	movlb	15	; () banked
  4222  0009E6  910D               	bcf	13,0,b	;volatile
  4223  0009E8                     l499:
  4224                           
  4225                           ; BSR set to: 15
  4226                           ;inc\CANlib.h: 971: if (filter & 0x00020000)
  4227  0009E8  0100               	movlb	0	; () banked
  4228  0009EA  A370               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
  4229  0009EC  D003               	goto	l500
  4230                           
  4231                           ; BSR set to: 0
  4232                           ;inc\CANlib.h: 972: RXF3SIDLbits.EID17 = 0x01;
  4233  0009EE  010F               	movlb	15	; () banked
  4234  0009F0  830D               	bsf	13,1,b	;volatile
  4235  0009F2  D002               	goto	l501
  4236  0009F4                     l500:
  4237                           
  4238                           ; BSR set to: 0
  4239                           ;inc\CANlib.h: 973: else
  4240                           ;inc\CANlib.h: 974: RXF3SIDLbits.EID17 = 0x00;
  4241  0009F4  010F               	movlb	15	; () banked
  4242  0009F6  930D               	bcf	13,1,b	;volatile
  4243  0009F8                     l501:
  4244                           
  4245                           ; BSR set to: 15
  4246                           ;inc\CANlib.h: 976: if (filter & 0x00040000)
  4247  0009F8  0100               	movlb	0	; () banked
  4248  0009FA  A570               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
  4249  0009FC  D003               	goto	l502
  4250                           
  4251                           ; BSR set to: 0
  4252                           ;inc\CANlib.h: 977: RXF3SIDLbits.SID0 = 0x01;
  4253  0009FE  010F               	movlb	15	; () banked
  4254  000A00  8B0D               	bsf	13,5,b	;volatile
  4255  000A02  D002               	goto	l503
  4256  000A04                     l502:
  4257                           
  4258                           ; BSR set to: 0
  4259                           ;inc\CANlib.h: 978: else
  4260                           ;inc\CANlib.h: 979: RXF3SIDLbits.SID0 = 0x00;
  4261  000A04  010F               	movlb	15	; () banked
  4262  000A06  9B0D               	bcf	13,5,b	;volatile
  4263  000A08                     l503:
  4264                           
  4265                           ; BSR set to: 15
  4266                           ;inc\CANlib.h: 981: if (filter & 0x00080000)
  4267  000A08  0100               	movlb	0	; () banked
  4268  000A0A  A770               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
  4269  000A0C  D003               	goto	l504
  4270                           
  4271                           ; BSR set to: 0
  4272                           ;inc\CANlib.h: 982: RXF3SIDLbits.SID1 = 0x01;
  4273  000A0E  010F               	movlb	15	; () banked
  4274  000A10  8D0D               	bsf	13,6,b	;volatile
  4275  000A12  D002               	goto	l505
  4276  000A14                     l504:
  4277                           
  4278                           ; BSR set to: 0
  4279                           ;inc\CANlib.h: 983: else
  4280                           ;inc\CANlib.h: 984: RXF3SIDLbits.SID1 = 0x00;
  4281  000A14  010F               	movlb	15	; () banked
  4282  000A16  9D0D               	bcf	13,6,b	;volatile
  4283  000A18                     l505:
  4284                           
  4285                           ; BSR set to: 15
  4286                           ;inc\CANlib.h: 986: if (filter & 0x00100000)
  4287  000A18  0100               	movlb	0	; () banked
  4288  000A1A  A970               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
  4289  000A1C  D003               	goto	l506
  4290                           
  4291                           ; BSR set to: 0
  4292                           ;inc\CANlib.h: 987: RXF3SIDLbits.SID2 = 0x01 ;
  4293  000A1E  010F               	movlb	15	; () banked
  4294  000A20  8F0D               	bsf	13,7,b	;volatile
  4295  000A22  D002               	goto	l4236
  4296  000A24                     l506:
  4297                           
  4298                           ; BSR set to: 0
  4299                           ;inc\CANlib.h: 988: else
  4300                           ;inc\CANlib.h: 989: RXF3SIDLbits.SID2 = 0x00 ;
  4301  000A24  010F               	movlb	15	; () banked
  4302  000A26  9F0D               	bcf	13,7,b	;volatile
  4303  000A28                     l4236:
  4304                           
  4305                           ; BSR set to: 15
  4306                           ;inc\CANlib.h: 991: tamp = (filter >> 21);
  4307  000A28  C06E  F073         	movff	CANSetFilter@filter,??_CANSetFilter
  4308  000A2C  C06F  F074         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  4309  000A30  C070  F075         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  4310  000A34  C071  F076         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  4311  000A38  0E16               	movlw	22
  4312  000A3A  D006               	goto	u5250
  4313  000A3C                     u5255:
  4314  000A3C  0100               	movlb	0	; () banked
  4315  000A3E  90D8               	bcf	status,0,c
  4316  000A40  3376               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  4317  000A42  3375               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  4318  000A44  3374               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  4319  000A46  3373               	rrcf	??_CANSetFilter& (0+255),f,b
  4320  000A48                     u5250:
  4321  000A48  2EE8               	decfsz	wreg,f,c
  4322  000A4A  D7F8               	goto	u5255
  4323  000A4C  C073  F078         	movff	??_CANSetFilter,CANSetFilter@tamp
  4324  000A50  C074  F079         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4325  000A54  C075  F07A         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4326  000A58  C076  F07B         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4327                           
  4328                           ; BSR set to: 0
  4329                           ;inc\CANlib.h: 992: tamp = tamp & 0x000000FF;
  4330  000A5C  0100               	movlb	0	; () banked
  4331  000A5E  5178               	movf	CANSetFilter@tamp& (0+255),w,b
  4332  000A60  0100               	movlb	0	; () banked
  4333  000A62  6F78               	movwf	CANSetFilter@tamp& (0+255),b
  4334  000A64  6B79               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4335  000A66  6B7A               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4336  000A68  6B7B               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4337                           
  4338                           ; BSR set to: 0
  4339                           ;inc\CANlib.h: 993: RXF3SIDH = (unsigned char) tamp;
  4340  000A6A  C078  FF0C         	movff	CANSetFilter@tamp,3852	;volatile
  4341  000A6E                     l4242:
  4342                           
  4343                           ; BSR set to: 0
  4344                           ;inc\CANlib.h: 994: }
  4345                           ;inc\CANlib.h: 996: if ((numBuffer ==CAN_FILTER_B2_F3) && (type == CAN_CONFIG_XTD_MSG))
  4346  000A6E  0E04               	movlw	4
  4347  000A70  0100               	movlb	0	; () banked
  4348  000A72  1977               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  4349  000A74  A4D8               	btfss	status,2,c
  4350  000A76  D089               	goto	l4276
  4351                           
  4352                           ; BSR set to: 0
  4353  000A78  0EF7               	movlw	247
  4354  000A7A  0100               	movlb	0	; () banked
  4355  000A7C  1972               	xorwf	CANSetFilter@type& (0+255),w,b
  4356  000A7E  A4D8               	btfss	status,2,c
  4357  000A80  D084               	goto	l4276
  4358                           
  4359                           ; BSR set to: 0
  4360                           ;inc\CANlib.h: 997: {
  4361                           ;inc\CANlib.h: 998: RXF4SIDLbits.EXIDEN = 0x01;
  4362  000A82  010F               	movlb	15	; () banked
  4363  000A84  8711               	bsf	17,3,b	;volatile
  4364                           
  4365                           ; BSR set to: 15
  4366                           ;inc\CANlib.h: 1000: tamp = filter & 0x000000FF;
  4367  000A86  0100               	movlb	0	; () banked
  4368  000A88  516E               	movf	CANSetFilter@filter& (0+255),w,b
  4369  000A8A  0100               	movlb	0	; () banked
  4370  000A8C  6F78               	movwf	CANSetFilter@tamp& (0+255),b
  4371  000A8E  6B79               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4372  000A90  6B7A               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4373  000A92  6B7B               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4374                           
  4375                           ; BSR set to: 0
  4376                           ;inc\CANlib.h: 1001: RXF4EIDL = (unsigned char) tamp;
  4377  000A94  C078  FF13         	movff	CANSetFilter@tamp,3859	;volatile
  4378                           
  4379                           ; BSR set to: 0
  4380                           ;inc\CANlib.h: 1003: tamp = filter & 0x0000FF00;
  4381  000A98  0E00               	movlw	0
  4382  000A9A  0100               	movlb	0	; () banked
  4383  000A9C  156E               	andwf	CANSetFilter@filter& (0+255),w,b
  4384  000A9E  0100               	movlb	0	; () banked
  4385  000AA0  6F78               	movwf	CANSetFilter@tamp& (0+255),b
  4386  000AA2  0EFF               	movlw	255
  4387  000AA4  0100               	movlb	0	; () banked
  4388  000AA6  156F               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  4389  000AA8  0100               	movlb	0	; () banked
  4390  000AAA  6F79               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  4391  000AAC  0E00               	movlw	0
  4392  000AAE  0100               	movlb	0	; () banked
  4393  000AB0  1570               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  4394  000AB2  0100               	movlb	0	; () banked
  4395  000AB4  6F7A               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  4396  000AB6  0E00               	movlw	0
  4397  000AB8  0100               	movlb	0	; () banked
  4398  000ABA  1571               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  4399  000ABC  0100               	movlb	0	; () banked
  4400  000ABE  6F7B               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  4401                           
  4402                           ; BSR set to: 0
  4403                           ;inc\CANlib.h: 1004: tamp = tamp >> 8;
  4404  000AC0  C078  F073         	movff	CANSetFilter@tamp,??_CANSetFilter
  4405  000AC4  C079  F074         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  4406  000AC8  C07A  F075         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  4407  000ACC  C07B  F076         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  4408  000AD0  C074  F073         	movff	??_CANSetFilter+1,??_CANSetFilter
  4409  000AD4  C075  F074         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  4410  000AD8  C076  F075         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  4411  000ADC  0100               	movlb	0	; () banked
  4412  000ADE  6B76               	clrf	(??_CANSetFilter+3)& (0+255),b
  4413  000AE0  C073  F078         	movff	??_CANSetFilter,CANSetFilter@tamp
  4414  000AE4  C074  F079         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4415  000AE8  C075  F07A         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4416  000AEC  C076  F07B         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4417                           
  4418                           ; BSR set to: 0
  4419                           ;inc\CANlib.h: 1005: RXF4EIDH = (unsigned char) tamp;
  4420  000AF0  C078  FF12         	movff	CANSetFilter@tamp,3858	;volatile
  4421                           
  4422                           ; BSR set to: 0
  4423                           ;inc\CANlib.h: 1007: if (filter & 0x00010000)
  4424  000AF4  0100               	movlb	0	; () banked
  4425  000AF6  A170               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
  4426  000AF8  D003               	goto	l509
  4427                           
  4428                           ; BSR set to: 0
  4429                           ;inc\CANlib.h: 1008: RXF4SIDLbits.EID16 = 0x01;
  4430  000AFA  010F               	movlb	15	; () banked
  4431  000AFC  8111               	bsf	17,0,b	;volatile
  4432  000AFE  D002               	goto	l510
  4433  000B00                     l509:
  4434                           
  4435                           ; BSR set to: 0
  4436                           ;inc\CANlib.h: 1009: else
  4437                           ;inc\CANlib.h: 1010: RXF4SIDLbits.EID16 = 0x00;
  4438  000B00  010F               	movlb	15	; () banked
  4439  000B02  9111               	bcf	17,0,b	;volatile
  4440  000B04                     l510:
  4441                           
  4442                           ; BSR set to: 15
  4443                           ;inc\CANlib.h: 1012: if (filter & 0x00020000)
  4444  000B04  0100               	movlb	0	; () banked
  4445  000B06  A370               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
  4446  000B08  D003               	goto	l511
  4447                           
  4448                           ; BSR set to: 0
  4449                           ;inc\CANlib.h: 1013: RXF4SIDLbits.EID17 = 0x01;
  4450  000B0A  010F               	movlb	15	; () banked
  4451  000B0C  8311               	bsf	17,1,b	;volatile
  4452  000B0E  D002               	goto	l512
  4453  000B10                     l511:
  4454                           
  4455                           ; BSR set to: 0
  4456                           ;inc\CANlib.h: 1014: else
  4457                           ;inc\CANlib.h: 1015: RXF4SIDLbits.EID17 = 0x00;
  4458  000B10  010F               	movlb	15	; () banked
  4459  000B12  9311               	bcf	17,1,b	;volatile
  4460  000B14                     l512:
  4461                           
  4462                           ; BSR set to: 15
  4463                           ;inc\CANlib.h: 1017: if (filter & 0x00040000)
  4464  000B14  0100               	movlb	0	; () banked
  4465  000B16  A570               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
  4466  000B18  D003               	goto	l513
  4467                           
  4468                           ; BSR set to: 0
  4469                           ;inc\CANlib.h: 1018: RXF4SIDLbits.SID0 = 0x01;
  4470  000B1A  010F               	movlb	15	; () banked
  4471  000B1C  8B11               	bsf	17,5,b	;volatile
  4472  000B1E  D002               	goto	l514
  4473  000B20                     l513:
  4474                           
  4475                           ; BSR set to: 0
  4476                           ;inc\CANlib.h: 1019: else
  4477                           ;inc\CANlib.h: 1020: RXF4SIDLbits.SID0 = 0x00;
  4478  000B20  010F               	movlb	15	; () banked
  4479  000B22  9B11               	bcf	17,5,b	;volatile
  4480  000B24                     l514:
  4481                           
  4482                           ; BSR set to: 15
  4483                           ;inc\CANlib.h: 1022: if (filter & 0x00080000)
  4484  000B24  0100               	movlb	0	; () banked
  4485  000B26  A770               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
  4486  000B28  D003               	goto	l515
  4487                           
  4488                           ; BSR set to: 0
  4489                           ;inc\CANlib.h: 1023: RXF4SIDLbits.SID1 = 0x01;
  4490  000B2A  010F               	movlb	15	; () banked
  4491  000B2C  8D11               	bsf	17,6,b	;volatile
  4492  000B2E  D002               	goto	l516
  4493  000B30                     l515:
  4494                           
  4495                           ; BSR set to: 0
  4496                           ;inc\CANlib.h: 1024: else
  4497                           ;inc\CANlib.h: 1025: RXF4SIDLbits.SID1 = 0x00;
  4498  000B30  010F               	movlb	15	; () banked
  4499  000B32  9D11               	bcf	17,6,b	;volatile
  4500  000B34                     l516:
  4501                           
  4502                           ; BSR set to: 15
  4503                           ;inc\CANlib.h: 1027: if (filter & 0x00100000)
  4504  000B34  0100               	movlb	0	; () banked
  4505  000B36  A970               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
  4506  000B38  D003               	goto	l517
  4507                           
  4508                           ; BSR set to: 0
  4509                           ;inc\CANlib.h: 1028: RXF4SIDLbits.SID2 = 0x01 ;
  4510  000B3A  010F               	movlb	15	; () banked
  4511  000B3C  8F11               	bsf	17,7,b	;volatile
  4512  000B3E  D002               	goto	l4270
  4513  000B40                     l517:
  4514                           
  4515                           ; BSR set to: 0
  4516                           ;inc\CANlib.h: 1029: else
  4517                           ;inc\CANlib.h: 1030: RXF4SIDLbits.SID2 = 0x00 ;
  4518  000B40  010F               	movlb	15	; () banked
  4519  000B42  9F11               	bcf	17,7,b	;volatile
  4520  000B44                     l4270:
  4521                           
  4522                           ; BSR set to: 15
  4523                           ;inc\CANlib.h: 1032: tamp = (filter >> 21);
  4524  000B44  C06E  F073         	movff	CANSetFilter@filter,??_CANSetFilter
  4525  000B48  C06F  F074         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  4526  000B4C  C070  F075         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  4527  000B50  C071  F076         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  4528  000B54  0E16               	movlw	22
  4529  000B56  D006               	goto	u5330
  4530  000B58                     u5335:
  4531  000B58  0100               	movlb	0	; () banked
  4532  000B5A  90D8               	bcf	status,0,c
  4533  000B5C  3376               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  4534  000B5E  3375               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  4535  000B60  3374               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  4536  000B62  3373               	rrcf	??_CANSetFilter& (0+255),f,b
  4537  000B64                     u5330:
  4538  000B64  2EE8               	decfsz	wreg,f,c
  4539  000B66  D7F8               	goto	u5335
  4540  000B68  C073  F078         	movff	??_CANSetFilter,CANSetFilter@tamp
  4541  000B6C  C074  F079         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4542  000B70  C075  F07A         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4543  000B74  C076  F07B         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4544                           
  4545                           ; BSR set to: 0
  4546                           ;inc\CANlib.h: 1033: tamp = tamp & 0x000000FF;
  4547  000B78  0100               	movlb	0	; () banked
  4548  000B7A  5178               	movf	CANSetFilter@tamp& (0+255),w,b
  4549  000B7C  0100               	movlb	0	; () banked
  4550  000B7E  6F78               	movwf	CANSetFilter@tamp& (0+255),b
  4551  000B80  6B79               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4552  000B82  6B7A               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4553  000B84  6B7B               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4554                           
  4555                           ; BSR set to: 0
  4556                           ;inc\CANlib.h: 1034: RXF4SIDH = (unsigned char) tamp;
  4557  000B86  C078  FF10         	movff	CANSetFilter@tamp,3856	;volatile
  4558  000B8A                     l4276:
  4559                           
  4560                           ; BSR set to: 0
  4561                           ;inc\CANlib.h: 1035: }
  4562                           ;inc\CANlib.h: 1037: if ((numBuffer ==CAN_FILTER_B2_F4) && (type == CAN_CONFIG_XTD_MSG))
  4563  000B8A  0E05               	movlw	5
  4564  000B8C  0100               	movlb	0	; () banked
  4565  000B8E  1977               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  4566  000B90  A4D8               	btfss	status,2,c
  4567  000B92  0012               	return	
  4568                           
  4569                           ; BSR set to: 0
  4570  000B94  0EF7               	movlw	247
  4571  000B96  0100               	movlb	0	; () banked
  4572  000B98  1972               	xorwf	CANSetFilter@type& (0+255),w,b
  4573  000B9A  A4D8               	btfss	status,2,c
  4574  000B9C  0012               	return	
  4575                           
  4576                           ; BSR set to: 0
  4577                           ;inc\CANlib.h: 1038: {
  4578                           ;inc\CANlib.h: 1039: RXF5SIDLbits.EXIDEN = 0x01;
  4579  000B9E  010F               	movlb	15	; () banked
  4580  000BA0  8715               	bsf	21,3,b	;volatile
  4581                           
  4582                           ; BSR set to: 15
  4583                           ;inc\CANlib.h: 1041: tamp = filter & 0x000000FF;
  4584  000BA2  0100               	movlb	0	; () banked
  4585  000BA4  516E               	movf	CANSetFilter@filter& (0+255),w,b
  4586  000BA6  0100               	movlb	0	; () banked
  4587  000BA8  6F78               	movwf	CANSetFilter@tamp& (0+255),b
  4588  000BAA  6B79               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4589  000BAC  6B7A               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4590  000BAE  6B7B               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4591                           
  4592                           ; BSR set to: 0
  4593                           ;inc\CANlib.h: 1042: RXF5EIDL = (unsigned char) tamp;
  4594  000BB0  C078  FF17         	movff	CANSetFilter@tamp,3863	;volatile
  4595                           
  4596                           ; BSR set to: 0
  4597                           ;inc\CANlib.h: 1044: tamp = filter & 0x0000FF00;
  4598  000BB4  0E00               	movlw	0
  4599  000BB6  0100               	movlb	0	; () banked
  4600  000BB8  156E               	andwf	CANSetFilter@filter& (0+255),w,b
  4601  000BBA  0100               	movlb	0	; () banked
  4602  000BBC  6F78               	movwf	CANSetFilter@tamp& (0+255),b
  4603  000BBE  0EFF               	movlw	255
  4604  000BC0  0100               	movlb	0	; () banked
  4605  000BC2  156F               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  4606  000BC4  0100               	movlb	0	; () banked
  4607  000BC6  6F79               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  4608  000BC8  0E00               	movlw	0
  4609  000BCA  0100               	movlb	0	; () banked
  4610  000BCC  1570               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  4611  000BCE  0100               	movlb	0	; () banked
  4612  000BD0  6F7A               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  4613  000BD2  0E00               	movlw	0
  4614  000BD4  0100               	movlb	0	; () banked
  4615  000BD6  1571               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  4616  000BD8  0100               	movlb	0	; () banked
  4617  000BDA  6F7B               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  4618                           
  4619                           ; BSR set to: 0
  4620                           ;inc\CANlib.h: 1045: tamp = tamp >> 8;
  4621  000BDC  C078  F073         	movff	CANSetFilter@tamp,??_CANSetFilter
  4622  000BE0  C079  F074         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  4623  000BE4  C07A  F075         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  4624  000BE8  C07B  F076         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  4625  000BEC  C074  F073         	movff	??_CANSetFilter+1,??_CANSetFilter
  4626  000BF0  C075  F074         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  4627  000BF4  C076  F075         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  4628  000BF8  0100               	movlb	0	; () banked
  4629  000BFA  6B76               	clrf	(??_CANSetFilter+3)& (0+255),b
  4630  000BFC  C073  F078         	movff	??_CANSetFilter,CANSetFilter@tamp
  4631  000C00  C074  F079         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4632  000C04  C075  F07A         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4633  000C08  C076  F07B         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4634                           
  4635                           ; BSR set to: 0
  4636                           ;inc\CANlib.h: 1046: RXF5EIDH = (unsigned char) tamp;
  4637  000C0C  C078  FF16         	movff	CANSetFilter@tamp,3862	;volatile
  4638                           
  4639                           ; BSR set to: 0
  4640                           ;inc\CANlib.h: 1048: if (filter & 0x00010000)
  4641  000C10  0100               	movlb	0	; () banked
  4642  000C12  A170               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
  4643  000C14  D003               	goto	l520
  4644                           
  4645                           ; BSR set to: 0
  4646                           ;inc\CANlib.h: 1049: RXF5SIDLbits.EID16 = 0x01;
  4647  000C16  010F               	movlb	15	; () banked
  4648  000C18  8115               	bsf	21,0,b	;volatile
  4649  000C1A  D002               	goto	l521
  4650  000C1C                     l520:
  4651                           
  4652                           ; BSR set to: 0
  4653                           ;inc\CANlib.h: 1050: else
  4654                           ;inc\CANlib.h: 1051: RXF5SIDLbits.EID16 = 0x00;
  4655  000C1C  010F               	movlb	15	; () banked
  4656  000C1E  9115               	bcf	21,0,b	;volatile
  4657  000C20                     l521:
  4658                           
  4659                           ; BSR set to: 15
  4660                           ;inc\CANlib.h: 1053: if (filter & 0x00020000)
  4661  000C20  0100               	movlb	0	; () banked
  4662  000C22  A370               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
  4663  000C24  D003               	goto	l522
  4664                           
  4665                           ; BSR set to: 0
  4666                           ;inc\CANlib.h: 1054: RXF5SIDLbits.EID17 = 0x01;
  4667  000C26  010F               	movlb	15	; () banked
  4668  000C28  8315               	bsf	21,1,b	;volatile
  4669  000C2A  D002               	goto	l523
  4670  000C2C                     l522:
  4671                           
  4672                           ; BSR set to: 0
  4673                           ;inc\CANlib.h: 1055: else
  4674                           ;inc\CANlib.h: 1056: RXF5SIDLbits.EID17 = 0x00;
  4675  000C2C  010F               	movlb	15	; () banked
  4676  000C2E  9315               	bcf	21,1,b	;volatile
  4677  000C30                     l523:
  4678                           
  4679                           ; BSR set to: 15
  4680                           ;inc\CANlib.h: 1058: if (filter & 0x00040000)
  4681  000C30  0100               	movlb	0	; () banked
  4682  000C32  A570               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
  4683  000C34  D003               	goto	l524
  4684                           
  4685                           ; BSR set to: 0
  4686                           ;inc\CANlib.h: 1059: RXF5SIDLbits.SID0 = 0x01;
  4687  000C36  010F               	movlb	15	; () banked
  4688  000C38  8B15               	bsf	21,5,b	;volatile
  4689  000C3A  D002               	goto	l525
  4690  000C3C                     l524:
  4691                           
  4692                           ; BSR set to: 0
  4693                           ;inc\CANlib.h: 1060: else
  4694                           ;inc\CANlib.h: 1061: RXF5SIDLbits.SID0 = 0x00;
  4695  000C3C  010F               	movlb	15	; () banked
  4696  000C3E  9B15               	bcf	21,5,b	;volatile
  4697  000C40                     l525:
  4698                           
  4699                           ; BSR set to: 15
  4700                           ;inc\CANlib.h: 1063: if (filter & 0x00080000)
  4701  000C40  0100               	movlb	0	; () banked
  4702  000C42  A770               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
  4703  000C44  D003               	goto	l526
  4704                           
  4705                           ; BSR set to: 0
  4706                           ;inc\CANlib.h: 1064: RXF5SIDLbits.SID1 = 0x01;
  4707  000C46  010F               	movlb	15	; () banked
  4708  000C48  8D15               	bsf	21,6,b	;volatile
  4709  000C4A  D002               	goto	l527
  4710  000C4C                     l526:
  4711                           
  4712                           ; BSR set to: 0
  4713                           ;inc\CANlib.h: 1065: else
  4714                           ;inc\CANlib.h: 1066: RXF5SIDLbits.SID1 = 0x00;
  4715  000C4C  010F               	movlb	15	; () banked
  4716  000C4E  9D15               	bcf	21,6,b	;volatile
  4717  000C50                     l527:
  4718                           
  4719                           ; BSR set to: 15
  4720                           ;inc\CANlib.h: 1068: if (filter & 0x00100000)
  4721  000C50  0100               	movlb	0	; () banked
  4722  000C52  A970               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
  4723  000C54  D003               	goto	l528
  4724                           
  4725                           ; BSR set to: 0
  4726                           ;inc\CANlib.h: 1069: RXF5SIDLbits.SID2 = 0x01 ;
  4727  000C56  010F               	movlb	15	; () banked
  4728  000C58  8F15               	bsf	21,7,b	;volatile
  4729  000C5A  D002               	goto	l4304
  4730  000C5C                     l528:
  4731                           
  4732                           ; BSR set to: 0
  4733                           ;inc\CANlib.h: 1070: else
  4734                           ;inc\CANlib.h: 1071: RXF5SIDLbits.SID2 = 0x00 ;
  4735  000C5C  010F               	movlb	15	; () banked
  4736  000C5E  9F15               	bcf	21,7,b	;volatile
  4737  000C60                     l4304:
  4738                           
  4739                           ; BSR set to: 15
  4740                           ;inc\CANlib.h: 1073: tamp = (filter >> 21);
  4741  000C60  C06E  F073         	movff	CANSetFilter@filter,??_CANSetFilter
  4742  000C64  C06F  F074         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  4743  000C68  C070  F075         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  4744  000C6C  C071  F076         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  4745  000C70  0E16               	movlw	22
  4746  000C72  D006               	goto	u5410
  4747  000C74                     u5415:
  4748  000C74  0100               	movlb	0	; () banked
  4749  000C76  90D8               	bcf	status,0,c
  4750  000C78  3376               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  4751  000C7A  3375               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  4752  000C7C  3374               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  4753  000C7E  3373               	rrcf	??_CANSetFilter& (0+255),f,b
  4754  000C80                     u5410:
  4755  000C80  2EE8               	decfsz	wreg,f,c
  4756  000C82  D7F8               	goto	u5415
  4757  000C84  C073  F078         	movff	??_CANSetFilter,CANSetFilter@tamp
  4758  000C88  C074  F079         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4759  000C8C  C075  F07A         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4760  000C90  C076  F07B         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4761                           
  4762                           ; BSR set to: 0
  4763                           ;inc\CANlib.h: 1074: tamp = tamp & 0x000000FF;
  4764  000C94  0100               	movlb	0	; () banked
  4765  000C96  5178               	movf	CANSetFilter@tamp& (0+255),w,b
  4766  000C98  0100               	movlb	0	; () banked
  4767  000C9A  6F78               	movwf	CANSetFilter@tamp& (0+255),b
  4768  000C9C  6B79               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4769  000C9E  6B7A               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4770  000CA0  6B7B               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4771                           
  4772                           ; BSR set to: 0
  4773                           ;inc\CANlib.h: 1075: RXF5SIDH = (unsigned char) tamp;
  4774  000CA2  C078  FF14         	movff	CANSetFilter@tamp,3860	;volatile
  4775  000CA6  0012               	return	
  4776  000CA8                     __end_of_CANSetFilter:
  4777                           	opt stack 0
  4778                           tblptru	equ	0xFF8
  4779                           tblptrh	equ	0xFF7
  4780                           tblptrl	equ	0xFF6
  4781                           tablat	equ	0xFF5
  4782                           intcon	equ	0xFF2
  4783                           intcon2	equ	0xFF1
  4784                           postinc0	equ	0xFEE
  4785                           wreg	equ	0xFE8
  4786                           status	equ	0xFD8
  4787                           
  4788 ;; *************** function _CANOperationMode *****************
  4789 ;; Defined at:
  4790 ;;		line 206 in file "K:/Tesina/LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
  4791 ;; Parameters:    Size  Location     Type
  4792 ;;  mode            1    wreg     enum E16838
  4793 ;; Auto vars:     Size  Location     Type
  4794 ;;  mode            1   14[BANK0 ] enum E16838
  4795 ;; Return value:  Size  Location     Type
  4796 ;;		None               void
  4797 ;; Registers used:
  4798 ;;		wreg, status,2, status,0
  4799 ;; Tracked objects:
  4800 ;;		On entry : 0/0
  4801 ;;		On exit  : 0/0
  4802 ;;		Unchanged: 0/0
  4803 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  4804 ;;      Params:         0       0       0       0
  4805 ;;      Locals:         0       1       0       0
  4806 ;;      Temps:          0       0       0       0
  4807 ;;      Totals:         0       1       0       0
  4808 ;;Total ram usage:        1 bytes
  4809 ;; Hardware stack levels used:    1
  4810 ;; Hardware stack levels required when called:    3
  4811 ;; This function calls:
  4812 ;;		Nothing
  4813 ;; This function is called by:
  4814 ;;		_CANInitialize
  4815 ;; This function uses a non-reentrant model
  4816 ;;
  4817                           
  4818                           	psect	text7
  4819  002742                     __ptext7:
  4820                           	opt stack 0
  4821  002742                     _CANOperationMode:
  4822                           	opt stack 25
  4823                           
  4824                           ; BSR set to: 0
  4825                           ;incstack = 0
  4826                           ;CANOperationMode@mode stored from wreg
  4827  002742  0100               	movlb	0	; () banked
  4828  002744  6F6E               	movwf	CANOperationMode@mode& (0+255),b
  4829                           
  4830                           ;inc\CANlib.h: 208: CANCON = mode;
  4831  002746  C06E  FF6F         	movff	CANOperationMode@mode,3951	;volatile
  4832  00274A                     l3900:
  4833  00274A  506E               	movf	3950,w,c	;volatile
  4834  00274C  0BE0               	andlw	224
  4835  00274E  0100               	movlb	0	; () banked
  4836  002750  196E               	xorwf	CANOperationMode@mode& (0+255),w,b
  4837  002752  B4D8               	btfsc	status,2,c
  4838  002754  0012               	return	
  4839  002756  D7F9               	goto	l3900
  4840  002758                     __end_of_CANOperationMode:
  4841                           	opt stack 0
  4842                           tblptru	equ	0xFF8
  4843                           tblptrh	equ	0xFF7
  4844                           tblptrl	equ	0xFF6
  4845                           tablat	equ	0xFF5
  4846                           intcon	equ	0xFF2
  4847                           intcon2	equ	0xFF1
  4848                           postinc0	equ	0xFEE
  4849                           wreg	equ	0xFE8
  4850                           status	equ	0xFD8
  4851                           
  4852 ;; *************** function _battery_measure *****************
  4853 ;; Defined at:
  4854 ;;		line 214 in file "motore.c"
  4855 ;; Parameters:    Size  Location     Type
  4856 ;;		None
  4857 ;; Auto vars:     Size  Location     Type
  4858 ;;		None
  4859 ;; Return value:  Size  Location     Type
  4860 ;;		None               void
  4861 ;; Registers used:
  4862 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4863 ;; Tracked objects:
  4864 ;;		On entry : 0/0
  4865 ;;		On exit  : 0/0
  4866 ;;		Unchanged: 0/0
  4867 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  4868 ;;      Params:         0       0       0       0
  4869 ;;      Locals:         0       0       0       0
  4870 ;;      Temps:          0       0       0       0
  4871 ;;      Totals:         0       0       0       0
  4872 ;;Total ram usage:        0 bytes
  4873 ;; Hardware stack levels used:    1
  4874 ;; Hardware stack levels required when called:    4
  4875 ;; This function calls:
  4876 ;;		_CANisTxReady
  4877 ;;		_CANsendMessage
  4878 ;;		___awdiv
  4879 ;;		___wmul
  4880 ;; This function is called by:
  4881 ;;		_main
  4882 ;; This function uses a non-reentrant model
  4883 ;;
  4884                           
  4885                           	psect	text8
  4886  0023F4                     __ptext8:
  4887                           	opt stack 0
  4888  0023F4                     _battery_measure:
  4889                           	opt stack 26
  4890                           
  4891                           ;motore.c: 215: ADCON0bits.GO = 1;
  4892                           
  4893                           ; BSR set to: 0
  4894                           ;incstack = 0
  4895  0023F4  82C2               	bsf	4034,1,c	;volatile
  4896  0023F6                     l687:
  4897  0023F6  B2C2               	btfsc	4034,1,c	;volatile
  4898  0023F8  D7FE               	goto	l687
  4899                           
  4900                           ;motore.c: 217: vBatt = ADRESH;
  4901  0023FA  CFC4 F0B1          	movff	4036,_vBatt	;volatile
  4902  0023FE  0100               	movlb	0	; () banked
  4903  002400  6BB2               	clrf	(_vBatt+1)& (0+255),b
  4904                           
  4905                           ; BSR set to: 0
  4906                           ;motore.c: 218: vBatt = (vBatt * 14) / 1024;
  4907  002402  C0B1  F076         	movff	_vBatt,___wmul@multiplier
  4908  002406  C0B2  F077         	movff	_vBatt+1,___wmul@multiplier+1
  4909  00240A  0E00               	movlw	0
  4910  00240C  0100               	movlb	0	; () banked
  4911  00240E  6F79               	movwf	(___wmul@multiplicand+1)& (0+255),b
  4912  002410  0E0E               	movlw	14
  4913  002412  6F78               	movwf	___wmul@multiplicand& (0+255),b
  4914  002414  EC4D  F013         	call	___wmul	;wreg free
  4915  002418  C076  F06E         	movff	?___wmul,___awdiv@dividend
  4916  00241C  C077  F06F         	movff	?___wmul+1,___awdiv@dividend+1
  4917  002420  0E04               	movlw	4
  4918  002422  0100               	movlb	0	; () banked
  4919  002424  6F71               	movwf	(___awdiv@divisor+1)& (0+255),b
  4920  002426  0E00               	movlw	0
  4921  002428  6F70               	movwf	___awdiv@divisor& (0+255),b
  4922  00242A  EC4E  F011         	call	___awdiv	;wreg free
  4923  00242E  C06E  F0B1         	movff	?___awdiv,_vBatt
  4924  002432  C06F  F0B2         	movff	?___awdiv+1,_vBatt+1
  4925                           
  4926                           ;motore.c: 219: if (vBatt < 10) {
  4927  002436  0100               	movlb	0	; () banked
  4928  002438  BFB2               	btfsc	(_vBatt+1)& (0+255),7,b
  4929  00243A  D008               	goto	l4828
  4930  00243C  0100               	movlb	0	; () banked
  4931  00243E  51B2               	movf	(_vBatt+1)& (0+255),w,b
  4932  002440  E122               	bnz	l694
  4933  002442  0E0A               	movlw	10
  4934  002444  0100               	movlb	0	; () banked
  4935  002446  5DB1               	subwf	_vBatt& (0+255),w,b
  4936  002448  B0D8               	btfsc	status,0,c
  4937  00244A  0012               	return	
  4938  00244C                     l4828:
  4939  00244C  EC7E  F013         	call	_CANisTxReady	;wreg free
  4940  002450  0900               	iorlw	0
  4941  002452  B4D8               	btfsc	status,2,c
  4942  002454  D7FB               	goto	l4828
  4943                           
  4944                           ;motore.c: 221: CANsendMessage(0b00000000000000000000000000001, data_array, 8, CAN_CONFI
      +                          G_STD_MSG & CAN_REMOTE_TX_FRAME & CAN_TX_PRIORITY_0);
  4945  002456  0E01               	movlw	1
  4946  002458  0100               	movlb	0	; () banked
  4947  00245A  6F6E               	movwf	CANsendMessage@identifier& (0+255),b
  4948  00245C  0E00               	movlw	0
  4949  00245E  6F6F               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  4950  002460  0E00               	movlw	0
  4951  002462  6F70               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  4952  002464  0E00               	movlw	0
  4953  002466  6F71               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  4954  002468  0E22               	movlw	low _data_array
  4955  00246A  0100               	movlb	0	; () banked
  4956  00246C  6F72               	movwf	CANsendMessage@data& (0+255),b
  4957  00246E  0E00               	movlw	high _data_array
  4958  002470  0100               	movlb	0	; () banked
  4959  002472  6F73               	movwf	(CANsendMessage@data+1)& (0+255),b
  4960  002474  0E08               	movlw	8
  4961  002476  0100               	movlb	0	; () banked
  4962  002478  6F74               	movwf	CANsendMessage@dataLength& (0+255),b
  4963  00247A  0EFC               	movlw	252
  4964  00247C  0100               	movlb	0	; () banked
  4965  00247E  6F75               	movwf	CANsendMessage@flags& (0+255),b
  4966  002480  EC54  F006         	call	_CANsendMessage	;wreg free
  4967  002484  0012               	return	
  4968  002486                     l694:
  4969  002486  0012               	return		;funcret
  4970  002488                     __end_of_battery_measure:
  4971                           	opt stack 0
  4972                           tblptru	equ	0xFF8
  4973                           tblptrh	equ	0xFF7
  4974                           tblptrl	equ	0xFF6
  4975                           tablat	equ	0xFF5
  4976                           intcon	equ	0xFF2
  4977                           intcon2	equ	0xFF1
  4978                           postinc0	equ	0xFEE
  4979                           wreg	equ	0xFE8
  4980                           status	equ	0xFD8
  4981                           
  4982 ;; *************** function ___wmul *****************
  4983 ;; Defined at:
  4984 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\Umul16.c"
  4985 ;; Parameters:    Size  Location     Type
  4986 ;;  multiplier      2   22[BANK0 ] unsigned int 
  4987 ;;  multiplicand    2   24[BANK0 ] unsigned int 
  4988 ;; Auto vars:     Size  Location     Type
  4989 ;;  product         2   26[BANK0 ] unsigned int 
  4990 ;; Return value:  Size  Location     Type
  4991 ;;                  2   22[BANK0 ] unsigned int 
  4992 ;; Registers used:
  4993 ;;		wreg, status,2, status,0, prodl, prodh
  4994 ;; Tracked objects:
  4995 ;;		On entry : 0/0
  4996 ;;		On exit  : 0/0
  4997 ;;		Unchanged: 0/0
  4998 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  4999 ;;      Params:         0       4       0       0
  5000 ;;      Locals:         0       2       0       0
  5001 ;;      Temps:          0       0       0       0
  5002 ;;      Totals:         0       6       0       0
  5003 ;;Total ram usage:        6 bytes
  5004 ;; Hardware stack levels used:    1
  5005 ;; Hardware stack levels required when called:    3
  5006 ;; This function calls:
  5007 ;;		Nothing
  5008 ;; This function is called by:
  5009 ;;		_delay_ms
  5010 ;;		_main
  5011 ;;		_battery_measure
  5012 ;; This function uses a non-reentrant model
  5013 ;;
  5014                           
  5015                           	psect	text9
  5016  00269A                     __ptext9:
  5017                           	opt stack 0
  5018  00269A                     ___wmul:
  5019                           	opt stack 25
  5020                           
  5021                           ;incstack = 0
  5022  00269A  0100               	movlb	0	; () banked
  5023  00269C  5176               	movf	___wmul@multiplier& (0+255),w,b
  5024  00269E  0100               	movlb	0	; () banked
  5025  0026A0  0378               	mulwf	___wmul@multiplicand& (0+255),b
  5026  0026A2  CFF3 F07A          	movff	prodl,___wmul@product
  5027  0026A6  CFF4 F07B          	movff	prodh,___wmul@product+1
  5028  0026AA  0100               	movlb	0	; () banked
  5029  0026AC  5176               	movf	___wmul@multiplier& (0+255),w,b
  5030  0026AE  0100               	movlb	0	; () banked
  5031  0026B0  0379               	mulwf	(___wmul@multiplicand+1)& (0+255),b
  5032  0026B2  50F3               	movf	prodl,w,c
  5033  0026B4  0100               	movlb	0	; () banked
  5034  0026B6  277B               	addwf	(___wmul@product+1)& (0+255),f,b
  5035  0026B8  0100               	movlb	0	; () banked
  5036  0026BA  5177               	movf	(___wmul@multiplier+1)& (0+255),w,b
  5037  0026BC  0100               	movlb	0	; () banked
  5038  0026BE  0378               	mulwf	___wmul@multiplicand& (0+255),b
  5039  0026C0  50F3               	movf	prodl,w,c
  5040  0026C2  0100               	movlb	0	; () banked
  5041  0026C4  277B               	addwf	(___wmul@product+1)& (0+255),f,b
  5042                           
  5043                           ; BSR set to: 0
  5044  0026C6  C07A  F076         	movff	___wmul@product,?___wmul
  5045  0026CA  C07B  F077         	movff	___wmul@product+1,?___wmul+1
  5046  0026CE  0012               	return	
  5047  0026D0                     __end_of___wmul:
  5048                           	opt stack 0
  5049                           tblptru	equ	0xFF8
  5050                           tblptrh	equ	0xFF7
  5051                           tblptrl	equ	0xFF6
  5052                           tablat	equ	0xFF5
  5053                           prodh	equ	0xFF4
  5054                           prodl	equ	0xFF3
  5055                           intcon	equ	0xFF2
  5056                           intcon2	equ	0xFF1
  5057                           postinc0	equ	0xFEE
  5058                           wreg	equ	0xFE8
  5059                           status	equ	0xFD8
  5060                           
  5061 ;; *************** function ___awdiv *****************
  5062 ;; Defined at:
  5063 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\awdiv.c"
  5064 ;; Parameters:    Size  Location     Type
  5065 ;;  dividend        2   14[BANK0 ] int 
  5066 ;;  divisor         2   16[BANK0 ] int 
  5067 ;; Auto vars:     Size  Location     Type
  5068 ;;  quotient        2   20[BANK0 ] int 
  5069 ;;  sign            1   19[BANK0 ] unsigned char 
  5070 ;;  counter         1   18[BANK0 ] unsigned char 
  5071 ;; Return value:  Size  Location     Type
  5072 ;;                  2   14[BANK0 ] int 
  5073 ;; Registers used:
  5074 ;;		wreg, status,2, status,0
  5075 ;; Tracked objects:
  5076 ;;		On entry : 0/0
  5077 ;;		On exit  : 0/0
  5078 ;;		Unchanged: 0/0
  5079 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  5080 ;;      Params:         0       4       0       0
  5081 ;;      Locals:         0       4       0       0
  5082 ;;      Temps:          0       0       0       0
  5083 ;;      Totals:         0       8       0       0
  5084 ;;Total ram usage:        8 bytes
  5085 ;; Hardware stack levels used:    1
  5086 ;; Hardware stack levels required when called:    3
  5087 ;; This function calls:
  5088 ;;		Nothing
  5089 ;; This function is called by:
  5090 ;;		_main
  5091 ;;		_battery_measure
  5092 ;; This function uses a non-reentrant model
  5093 ;;
  5094                           
  5095                           	psect	text10
  5096  00229C                     __ptext10:
  5097                           	opt stack 0
  5098  00229C                     ___awdiv:
  5099                           	opt stack 26
  5100                           
  5101                           ; BSR set to: 0
  5102                           ;incstack = 0
  5103  00229C  0E00               	movlw	0
  5104  00229E  0100               	movlb	0	; () banked
  5105  0022A0  6F73               	movwf	___awdiv@sign& (0+255),b
  5106                           
  5107                           ; BSR set to: 0
  5108  0022A2  0100               	movlb	0	; () banked
  5109  0022A4  AF71               	btfss	(___awdiv@divisor+1)& (0+255),7,b
  5110  0022A6  D008               	goto	l4624
  5111                           
  5112                           ; BSR set to: 0
  5113  0022A8  0100               	movlb	0	; () banked
  5114  0022AA  6D70               	negf	___awdiv@divisor& (0+255),b
  5115  0022AC  1F71               	comf	(___awdiv@divisor+1)& (0+255),f,b
  5116  0022AE  B0D8               	btfsc	status,0,c
  5117  0022B0  2B71               	incf	(___awdiv@divisor+1)& (0+255),f,b
  5118                           
  5119                           ; BSR set to: 0
  5120  0022B2  0E01               	movlw	1
  5121  0022B4  0100               	movlb	0	; () banked
  5122  0022B6  6F73               	movwf	___awdiv@sign& (0+255),b
  5123  0022B8                     l4624:
  5124                           
  5125                           ; BSR set to: 0
  5126  0022B8  0100               	movlb	0	; () banked
  5127  0022BA  AF6F               	btfss	(___awdiv@dividend+1)& (0+255),7,b
  5128  0022BC  D008               	goto	l4630
  5129                           
  5130                           ; BSR set to: 0
  5131  0022BE  0100               	movlb	0	; () banked
  5132  0022C0  6D6E               	negf	___awdiv@dividend& (0+255),b
  5133  0022C2  1F6F               	comf	(___awdiv@dividend+1)& (0+255),f,b
  5134  0022C4  B0D8               	btfsc	status,0,c
  5135  0022C6  2B6F               	incf	(___awdiv@dividend+1)& (0+255),f,b
  5136                           
  5137                           ; BSR set to: 0
  5138  0022C8  0E01               	movlw	1
  5139  0022CA  0100               	movlb	0	; () banked
  5140  0022CC  1B73               	xorwf	___awdiv@sign& (0+255),f,b
  5141  0022CE                     l4630:
  5142                           
  5143                           ; BSR set to: 0
  5144  0022CE  0E00               	movlw	0
  5145  0022D0  0100               	movlb	0	; () banked
  5146  0022D2  6F75               	movwf	(___awdiv@quotient+1)& (0+255),b
  5147  0022D4  0E00               	movlw	0
  5148  0022D6  6F74               	movwf	___awdiv@quotient& (0+255),b
  5149                           
  5150                           ; BSR set to: 0
  5151  0022D8  0100               	movlb	0	; () banked
  5152  0022DA  5170               	movf	___awdiv@divisor& (0+255),w,b
  5153  0022DC  0100               	movlb	0	; () banked
  5154  0022DE  1171               	iorwf	(___awdiv@divisor+1)& (0+255),w,b
  5155  0022E0  B4D8               	btfsc	status,2,c
  5156  0022E2  D02C               	goto	l4652
  5157                           
  5158                           ; BSR set to: 0
  5159  0022E4  0E01               	movlw	1
  5160  0022E6  0100               	movlb	0	; () banked
  5161  0022E8  6F72               	movwf	___awdiv@counter& (0+255),b
  5162  0022EA  D006               	goto	l4638
  5163  0022EC                     l4636:
  5164                           
  5165                           ; BSR set to: 0
  5166  0022EC  0100               	movlb	0	; () banked
  5167  0022EE  90D8               	bcf	status,0,c
  5168  0022F0  3770               	rlcf	___awdiv@divisor& (0+255),f,b
  5169  0022F2  3771               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
  5170  0022F4  0100               	movlb	0	; () banked
  5171  0022F6  2B72               	incf	___awdiv@counter& (0+255),f,b
  5172  0022F8                     l4638:
  5173                           
  5174                           ; BSR set to: 0
  5175  0022F8  0100               	movlb	0	; () banked
  5176  0022FA  AF71               	btfss	(___awdiv@divisor+1)& (0+255),7,b
  5177  0022FC  D7F7               	goto	l4636
  5178  0022FE                     l4640:
  5179                           
  5180                           ; BSR set to: 0
  5181  0022FE  0100               	movlb	0	; () banked
  5182  002300  90D8               	bcf	status,0,c
  5183  002302  3774               	rlcf	___awdiv@quotient& (0+255),f,b
  5184  002304  3775               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
  5185                           
  5186                           ; BSR set to: 0
  5187  002306  0100               	movlb	0	; () banked
  5188  002308  5170               	movf	___awdiv@divisor& (0+255),w,b
  5189  00230A  0100               	movlb	0	; () banked
  5190  00230C  5D6E               	subwf	___awdiv@dividend& (0+255),w,b
  5191  00230E  0100               	movlb	0	; () banked
  5192  002310  5171               	movf	(___awdiv@divisor+1)& (0+255),w,b
  5193  002312  0100               	movlb	0	; () banked
  5194  002314  596F               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
  5195  002316  A0D8               	btfss	status,0,c
  5196  002318  D00A               	goto	l4648
  5197                           
  5198                           ; BSR set to: 0
  5199  00231A  0100               	movlb	0	; () banked
  5200  00231C  5170               	movf	___awdiv@divisor& (0+255),w,b
  5201  00231E  0100               	movlb	0	; () banked
  5202  002320  5F6E               	subwf	___awdiv@dividend& (0+255),f,b
  5203  002322  0100               	movlb	0	; () banked
  5204  002324  5171               	movf	(___awdiv@divisor+1)& (0+255),w,b
  5205  002326  0100               	movlb	0	; () banked
  5206  002328  5B6F               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
  5207                           
  5208                           ; BSR set to: 0
  5209  00232A  0100               	movlb	0	; () banked
  5210  00232C  8174               	bsf	___awdiv@quotient& (0+255),0,b
  5211  00232E                     l4648:
  5212                           
  5213                           ; BSR set to: 0
  5214  00232E  0100               	movlb	0	; () banked
  5215  002330  90D8               	bcf	status,0,c
  5216  002332  3371               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
  5217  002334  3370               	rrcf	___awdiv@divisor& (0+255),f,b
  5218                           
  5219                           ; BSR set to: 0
  5220  002336  0100               	movlb	0	; () banked
  5221  002338  2F72               	decfsz	___awdiv@counter& (0+255),f,b
  5222  00233A  D7E1               	goto	l4640
  5223  00233C                     l4652:
  5224                           
  5225                           ; BSR set to: 0
  5226  00233C  0100               	movlb	0	; () banked
  5227  00233E  5173               	movf	___awdiv@sign& (0+255),w,b
  5228  002340  0100               	movlb	0	; () banked
  5229  002342  B4D8               	btfsc	status,2,c
  5230  002344  D005               	goto	l4656
  5231                           
  5232                           ; BSR set to: 0
  5233  002346  0100               	movlb	0	; () banked
  5234  002348  6D74               	negf	___awdiv@quotient& (0+255),b
  5235  00234A  1F75               	comf	(___awdiv@quotient+1)& (0+255),f,b
  5236  00234C  B0D8               	btfsc	status,0,c
  5237  00234E  2B75               	incf	(___awdiv@quotient+1)& (0+255),f,b
  5238  002350                     l4656:
  5239                           
  5240                           ; BSR set to: 0
  5241  002350  C074  F06E         	movff	___awdiv@quotient,?___awdiv
  5242  002354  C075  F06F         	movff	___awdiv@quotient+1,?___awdiv+1
  5243  002358  0012               	return	
  5244  00235A                     __end_of___awdiv:
  5245                           	opt stack 0
  5246                           tblptru	equ	0xFF8
  5247                           tblptrh	equ	0xFF7
  5248                           tblptrl	equ	0xFF6
  5249                           tablat	equ	0xFF5
  5250                           prodh	equ	0xFF4
  5251                           prodl	equ	0xFF3
  5252                           intcon	equ	0xFF2
  5253                           intcon2	equ	0xFF1
  5254                           postinc0	equ	0xFEE
  5255                           wreg	equ	0xFE8
  5256                           status	equ	0xFD8
  5257                           
  5258 ;; *************** function _CANsendMessage *****************
  5259 ;; Defined at:
  5260 ;;		line 294 in file "K:/Tesina/LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
  5261 ;; Parameters:    Size  Location     Type
  5262 ;;  identifier      4   14[BANK0 ] unsigned long 
  5263 ;;  data            2   18[BANK0 ] PTR unsigned char 
  5264 ;;		 -> NULL(0), data_array(8), 
  5265 ;;  dataLength      1   20[BANK0 ] unsigned char 
  5266 ;;  flags           1   21[BANK0 ] enum E16866
  5267 ;; Auto vars:     Size  Location     Type
  5268 ;;  tamp            4   26[BANK0 ] unsigned long 
  5269 ;; Return value:  Size  Location     Type
  5270 ;;		None               void
  5271 ;; Registers used:
  5272 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5273 ;; Tracked objects:
  5274 ;;		On entry : 0/0
  5275 ;;		On exit  : 0/0
  5276 ;;		Unchanged: 0/0
  5277 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  5278 ;;      Params:         0       8       0       0
  5279 ;;      Locals:         0       4       0       0
  5280 ;;      Temps:          0       4       0       0
  5281 ;;      Totals:         0      16       0       0
  5282 ;;Total ram usage:       16 bytes
  5283 ;; Hardware stack levels used:    1
  5284 ;; Hardware stack levels required when called:    3
  5285 ;; This function calls:
  5286 ;;		Nothing
  5287 ;; This function is called by:
  5288 ;;		_main
  5289 ;;		_send_data
  5290 ;;		_battery_measure
  5291 ;; This function uses a non-reentrant model
  5292 ;;
  5293                           
  5294                           	psect	text11
  5295  000CA8                     __ptext11:
  5296                           	opt stack 0
  5297  000CA8                     _CANsendMessage:
  5298                           	opt stack 26
  5299                           
  5300                           ;inc\CANlib.h: 296: unsigned long tamp;
  5301                           ;inc\CANlib.h: 298: if (TXB0CONbits.TXREQ == 0)
  5302                           
  5303                           ; BSR set to: 0
  5304                           ;incstack = 0
  5305  000CA8  010F               	movlb	15	; () banked
  5306  000CAA  B740               	btfsc	64,3,b	;volatile
  5307  000CAC  D13F               	goto	l365
  5308                           
  5309                           ; BSR set to: 15
  5310                           ;inc\CANlib.h: 299: { TXB0DLC = dataLength;
  5311  000CAE  C074  FF45         	movff	CANsendMessage@dataLength,3909	;volatile
  5312                           
  5313                           ;inc\CANlib.h: 300: if (0b01000000 & flags)
  5314  000CB2  0100               	movlb	0	; () banked
  5315  000CB4  AD75               	btfss	CANsendMessage@flags& (0+255),6,b
  5316  000CB6  D003               	goto	l366
  5317                           
  5318                           ; BSR set to: 0
  5319                           ;inc\CANlib.h: 301: TXB0DLCbits.TXRTR = 0x01;
  5320  000CB8  010F               	movlb	15	; () banked
  5321  000CBA  8D45               	bsf	69,6,b	;volatile
  5322  000CBC  D002               	goto	l367
  5323  000CBE                     l366:
  5324                           
  5325                           ; BSR set to: 0
  5326                           ;inc\CANlib.h: 302: else
  5327                           ;inc\CANlib.h: 303: TXB0DLCbits.TXRTR = 0x00;
  5328  000CBE  010F               	movlb	15	; () banked
  5329  000CC0  9D45               	bcf	69,6,b	;volatile
  5330  000CC2                     l367:
  5331                           
  5332                           ; BSR set to: 15
  5333                           ;inc\CANlib.h: 305: if (CAN_TX_FRAME_MASK & flags)
  5334  000CC2  0100               	movlb	0	; () banked
  5335  000CC4  A775               	btfss	CANsendMessage@flags& (0+255),3,b
  5336  000CC6  D079               	goto	l368
  5337                           
  5338                           ; BSR set to: 0
  5339                           ;inc\CANlib.h: 306: {
  5340                           ;inc\CANlib.h: 308: tamp = identifier & 0x000000FF;
  5341  000CC8  0100               	movlb	0	; () banked
  5342  000CCA  516E               	movf	CANsendMessage@identifier& (0+255),w,b
  5343  000CCC  0100               	movlb	0	; () banked
  5344  000CCE  6F7A               	movwf	CANsendMessage@tamp& (0+255),b
  5345  000CD0  6B7B               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  5346  000CD2  6B7C               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  5347  000CD4  6B7D               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  5348                           
  5349                           ; BSR set to: 0
  5350                           ;inc\CANlib.h: 309: TXB0EIDL = (unsigned char) tamp;
  5351  000CD6  C07A  FF44         	movff	CANsendMessage@tamp,3908	;volatile
  5352                           
  5353                           ; BSR set to: 0
  5354                           ;inc\CANlib.h: 311: tamp = identifier & 0x0000FF00;
  5355  000CDA  0E00               	movlw	0
  5356  000CDC  0100               	movlb	0	; () banked
  5357  000CDE  156E               	andwf	CANsendMessage@identifier& (0+255),w,b
  5358  000CE0  0100               	movlb	0	; () banked
  5359  000CE2  6F7A               	movwf	CANsendMessage@tamp& (0+255),b
  5360  000CE4  0EFF               	movlw	255
  5361  000CE6  0100               	movlb	0	; () banked
  5362  000CE8  156F               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
  5363  000CEA  0100               	movlb	0	; () banked
  5364  000CEC  6F7B               	movwf	(CANsendMessage@tamp+1)& (0+255),b
  5365  000CEE  0E00               	movlw	0
  5366  000CF0  0100               	movlb	0	; () banked
  5367  000CF2  1570               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
  5368  000CF4  0100               	movlb	0	; () banked
  5369  000CF6  6F7C               	movwf	(CANsendMessage@tamp+2)& (0+255),b
  5370  000CF8  0E00               	movlw	0
  5371  000CFA  0100               	movlb	0	; () banked
  5372  000CFC  1571               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
  5373  000CFE  0100               	movlb	0	; () banked
  5374  000D00  6F7D               	movwf	(CANsendMessage@tamp+3)& (0+255),b
  5375                           
  5376                           ; BSR set to: 0
  5377                           ;inc\CANlib.h: 312: tamp = tamp >> 8;
  5378  000D02  C07A  F076         	movff	CANsendMessage@tamp,??_CANsendMessage
  5379  000D06  C07B  F077         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
  5380  000D0A  C07C  F078         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
  5381  000D0E  C07D  F079         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
  5382  000D12  C077  F076         	movff	??_CANsendMessage+1,??_CANsendMessage
  5383  000D16  C078  F077         	movff	??_CANsendMessage+2,??_CANsendMessage+1
  5384  000D1A  C079  F078         	movff	??_CANsendMessage+3,??_CANsendMessage+2
  5385  000D1E  0100               	movlb	0	; () banked
  5386  000D20  6B79               	clrf	(??_CANsendMessage+3)& (0+255),b
  5387  000D22  C076  F07A         	movff	??_CANsendMessage,CANsendMessage@tamp
  5388  000D26  C077  F07B         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  5389  000D2A  C078  F07C         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  5390  000D2E  C079  F07D         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  5391                           
  5392                           ; BSR set to: 0
  5393                           ;inc\CANlib.h: 313: TXB0EIDH = (unsigned char) tamp;
  5394  000D32  C07A  FF43         	movff	CANsendMessage@tamp,3907	;volatile
  5395                           
  5396                           ; BSR set to: 0
  5397                           ;inc\CANlib.h: 315: TXB0SIDL = 0x00;
  5398  000D36  0E00               	movlw	0
  5399  000D38  010F               	movlb	15	; () banked
  5400  000D3A  6F42               	movwf	66,b	;volatile
  5401                           
  5402                           ; BSR set to: 15
  5403                           ;inc\CANlib.h: 316: TXB0SIDLbits.EXIDE = 0x01;
  5404  000D3C  010F               	movlb	15	; () banked
  5405  000D3E  8742               	bsf	66,3,b	;volatile
  5406                           
  5407                           ; BSR set to: 15
  5408                           ;inc\CANlib.h: 318: if (identifier & 0x00010000)
  5409  000D40  0100               	movlb	0	; () banked
  5410  000D42  A170               	btfss	(CANsendMessage@identifier+2)& (0+255),0,b
  5411  000D44  D002               	goto	l369
  5412                           
  5413                           ; BSR set to: 0
  5414                           ;inc\CANlib.h: 319: TXB0SIDLbits.EID16 = 0x01;
  5415  000D46  010F               	movlb	15	; () banked
  5416  000D48  8142               	bsf	66,0,b	;volatile
  5417  000D4A                     l369:
  5418                           
  5419                           ;inc\CANlib.h: 320: if (identifier & 0x00020000)
  5420  000D4A  0100               	movlb	0	; () banked
  5421  000D4C  A370               	btfss	(CANsendMessage@identifier+2)& (0+255),1,b
  5422  000D4E  D002               	goto	l370
  5423                           
  5424                           ; BSR set to: 0
  5425                           ;inc\CANlib.h: 321: TXB0SIDLbits.EID17 = 0x01;
  5426  000D50  010F               	movlb	15	; () banked
  5427  000D52  8342               	bsf	66,1,b	;volatile
  5428  000D54                     l370:
  5429                           
  5430                           ;inc\CANlib.h: 322: if (identifier & 0x00040000)
  5431  000D54  0100               	movlb	0	; () banked
  5432  000D56  A570               	btfss	(CANsendMessage@identifier+2)& (0+255),2,b
  5433  000D58  D002               	goto	l371
  5434                           
  5435                           ; BSR set to: 0
  5436                           ;inc\CANlib.h: 323: TXB0SIDLbits.SID0 = 0x01;
  5437  000D5A  010F               	movlb	15	; () banked
  5438  000D5C  8B42               	bsf	66,5,b	;volatile
  5439  000D5E                     l371:
  5440                           
  5441                           ;inc\CANlib.h: 324: if (identifier & 0x00080000)
  5442  000D5E  0100               	movlb	0	; () banked
  5443  000D60  A770               	btfss	(CANsendMessage@identifier+2)& (0+255),3,b
  5444  000D62  D002               	goto	l372
  5445                           
  5446                           ; BSR set to: 0
  5447                           ;inc\CANlib.h: 325: TXB0SIDLbits.SID1 = 0x01;
  5448  000D64  010F               	movlb	15	; () banked
  5449  000D66  8D42               	bsf	66,6,b	;volatile
  5450  000D68                     l372:
  5451                           
  5452                           ;inc\CANlib.h: 326: if (identifier & 0x00100000)
  5453  000D68  0100               	movlb	0	; () banked
  5454  000D6A  A970               	btfss	(CANsendMessage@identifier+2)& (0+255),4,b
  5455  000D6C  D002               	goto	l4400
  5456                           
  5457                           ; BSR set to: 0
  5458                           ;inc\CANlib.h: 327: TXB0SIDLbits.SID2 = 0x01;
  5459  000D6E  010F               	movlb	15	; () banked
  5460  000D70  8F42               	bsf	66,7,b	;volatile
  5461  000D72                     l4400:
  5462                           
  5463                           ;inc\CANlib.h: 329: tamp = (identifier >> 21);
  5464  000D72  C06E  F076         	movff	CANsendMessage@identifier,??_CANsendMessage
  5465  000D76  C06F  F077         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
  5466  000D7A  C070  F078         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
  5467  000D7E  C071  F079         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
  5468  000D82  0E16               	movlw	22
  5469  000D84  D006               	goto	u5540
  5470  000D86                     u5545:
  5471  000D86  0100               	movlb	0	; () banked
  5472  000D88  90D8               	bcf	status,0,c
  5473  000D8A  3379               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
  5474  000D8C  3378               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
  5475  000D8E  3377               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
  5476  000D90  3376               	rrcf	??_CANsendMessage& (0+255),f,b
  5477  000D92                     u5540:
  5478  000D92  2EE8               	decfsz	wreg,f,c
  5479  000D94  D7F8               	goto	u5545
  5480  000D96  C076  F07A         	movff	??_CANsendMessage,CANsendMessage@tamp
  5481  000D9A  C077  F07B         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  5482  000D9E  C078  F07C         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  5483  000DA2  C079  F07D         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  5484                           
  5485                           ; BSR set to: 0
  5486                           ;inc\CANlib.h: 330: tamp = tamp & 0x000000FF;
  5487  000DA6  0100               	movlb	0	; () banked
  5488  000DA8  517A               	movf	CANsendMessage@tamp& (0+255),w,b
  5489  000DAA  0100               	movlb	0	; () banked
  5490  000DAC  6F7A               	movwf	CANsendMessage@tamp& (0+255),b
  5491  000DAE  6B7B               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  5492  000DB0  6B7C               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  5493  000DB2  6B7D               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  5494                           
  5495                           ; BSR set to: 0
  5496                           ;inc\CANlib.h: 331: TXB0SIDH = (unsigned char) tamp;
  5497  000DB4  C07A  FF41         	movff	CANsendMessage@tamp,3905	;volatile
  5498                           
  5499                           ;inc\CANlib.h: 332: }
  5500  000DB8  D059               	goto	l4420
  5501  000DBA                     l368:
  5502                           
  5503                           ; BSR set to: 0
  5504                           ;inc\CANlib.h: 334: else
  5505                           ;inc\CANlib.h: 336: {
  5506                           ;inc\CANlib.h: 337: TXB0SIDLbits.EXIDE = 0x00;
  5507  000DBA  010F               	movlb	15	; () banked
  5508  000DBC  9742               	bcf	66,3,b	;volatile
  5509                           
  5510                           ; BSR set to: 15
  5511                           ;inc\CANlib.h: 339: tamp = (identifier >> 3);
  5512  000DBE  C06E  F076         	movff	CANsendMessage@identifier,??_CANsendMessage
  5513  000DC2  C06F  F077         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
  5514  000DC6  C070  F078         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
  5515  000DCA  C071  F079         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
  5516  000DCE  0E04               	movlw	4
  5517  000DD0  D006               	goto	u5550
  5518  000DD2                     u5555:
  5519  000DD2  0100               	movlb	0	; () banked
  5520  000DD4  90D8               	bcf	status,0,c
  5521  000DD6  3379               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
  5522  000DD8  3378               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
  5523  000DDA  3377               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
  5524  000DDC  3376               	rrcf	??_CANsendMessage& (0+255),f,b
  5525  000DDE                     u5550:
  5526  000DDE  2EE8               	decfsz	wreg,f,c
  5527  000DE0  D7F8               	goto	u5555
  5528  000DE2  C076  F07A         	movff	??_CANsendMessage,CANsendMessage@tamp
  5529  000DE6  C077  F07B         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  5530  000DEA  C078  F07C         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  5531  000DEE  C079  F07D         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  5532                           
  5533                           ; BSR set to: 0
  5534                           ;inc\CANlib.h: 340: tamp = tamp & 0x000000FF;
  5535  000DF2  0100               	movlb	0	; () banked
  5536  000DF4  517A               	movf	CANsendMessage@tamp& (0+255),w,b
  5537  000DF6  0100               	movlb	0	; () banked
  5538  000DF8  6F7A               	movwf	CANsendMessage@tamp& (0+255),b
  5539  000DFA  6B7B               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  5540  000DFC  6B7C               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  5541  000DFE  6B7D               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  5542                           
  5543                           ; BSR set to: 0
  5544                           ;inc\CANlib.h: 341: TXB0SIDH = (unsigned char) tamp;
  5545  000E00  C07A  FF41         	movff	CANsendMessage@tamp,3905	;volatile
  5546                           
  5547                           ; BSR set to: 0
  5548                           ;inc\CANlib.h: 343: tamp = identifier & 0x00000007;
  5549  000E04  0E07               	movlw	7
  5550  000E06  0100               	movlb	0	; () banked
  5551  000E08  156E               	andwf	CANsendMessage@identifier& (0+255),w,b
  5552  000E0A  0100               	movlb	0	; () banked
  5553  000E0C  6F7A               	movwf	CANsendMessage@tamp& (0+255),b
  5554  000E0E  0E00               	movlw	0
  5555  000E10  0100               	movlb	0	; () banked
  5556  000E12  156F               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
  5557  000E14  0100               	movlb	0	; () banked
  5558  000E16  6F7B               	movwf	(CANsendMessage@tamp+1)& (0+255),b
  5559  000E18  0E00               	movlw	0
  5560  000E1A  0100               	movlb	0	; () banked
  5561  000E1C  1570               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
  5562  000E1E  0100               	movlb	0	; () banked
  5563  000E20  6F7C               	movwf	(CANsendMessage@tamp+2)& (0+255),b
  5564  000E22  0E00               	movlw	0
  5565  000E24  0100               	movlb	0	; () banked
  5566  000E26  1571               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
  5567  000E28  0100               	movlb	0	; () banked
  5568  000E2A  6F7D               	movwf	(CANsendMessage@tamp+3)& (0+255),b
  5569                           
  5570                           ; BSR set to: 0
  5571                           ;inc\CANlib.h: 344: tamp = tamp << 5;
  5572  000E2C  C07A  F076         	movff	CANsendMessage@tamp,??_CANsendMessage
  5573  000E30  C07B  F077         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
  5574  000E34  C07C  F078         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
  5575  000E38  C07D  F079         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
  5576  000E3C  0E05               	movlw	5
  5577  000E3E                     u5565:
  5578  000E3E  90D8               	bcf	status,0,c
  5579  000E40  0100               	movlb	0	; () banked
  5580  000E42  3776               	rlcf	??_CANsendMessage& (0+255),f,b
  5581  000E44  3777               	rlcf	(??_CANsendMessage+1)& (0+255),f,b
  5582  000E46  3778               	rlcf	(??_CANsendMessage+2)& (0+255),f,b
  5583  000E48  3779               	rlcf	(??_CANsendMessage+3)& (0+255),f,b
  5584  000E4A  2EE8               	decfsz	wreg,f,c
  5585  000E4C  D7F8               	goto	u5565
  5586  000E4E  C076  F07A         	movff	??_CANsendMessage,CANsendMessage@tamp
  5587  000E52  C077  F07B         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  5588  000E56  C078  F07C         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  5589  000E5A  C079  F07D         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  5590                           
  5591                           ; BSR set to: 0
  5592                           ;inc\CANlib.h: 345: TXB0SIDL = TXB0SIDL & 0b00011111;
  5593  000E5E  010F               	movlb	15	; () banked
  5594  000E60  5142               	movf	66,w,b	;volatile
  5595  000E62  0B1F               	andlw	31
  5596  000E64  010F               	movlb	15	; () banked
  5597  000E66  6F42               	movwf	66,b	;volatile
  5598                           
  5599                           ; BSR set to: 15
  5600                           ;inc\CANlib.h: 346: TXB0SIDL = (unsigned char) tamp;
  5601  000E68  C07A  FF42         	movff	CANsendMessage@tamp,3906	;volatile
  5602  000E6C                     l4420:
  5603                           
  5604                           ;inc\CANlib.h: 347: }
  5605                           ;inc\CANlib.h: 349: if (0b00000001 & flags)
  5606  000E6C  0100               	movlb	0	; () banked
  5607  000E6E  A175               	btfss	CANsendMessage@flags& (0+255),0,b
  5608  000E70  D003               	goto	l375
  5609                           
  5610                           ; BSR set to: 0
  5611                           ;inc\CANlib.h: 350: TXB0CONbits.TXPRI0 = 0x01;
  5612  000E72  010F               	movlb	15	; () banked
  5613  000E74  8140               	bsf	64,0,b	;volatile
  5614  000E76  D002               	goto	l376
  5615  000E78                     l375:
  5616                           
  5617                           ; BSR set to: 0
  5618                           ;inc\CANlib.h: 351: else
  5619                           ;inc\CANlib.h: 352: TXB0CONbits.TXPRI0 = 0x00;
  5620  000E78  010F               	movlb	15	; () banked
  5621  000E7A  9140               	bcf	64,0,b	;volatile
  5622  000E7C                     l376:
  5623                           
  5624                           ; BSR set to: 15
  5625                           ;inc\CANlib.h: 353: if (0b00000010 & flags)
  5626  000E7C  0100               	movlb	0	; () banked
  5627  000E7E  A375               	btfss	CANsendMessage@flags& (0+255),1,b
  5628  000E80  D003               	goto	l377
  5629                           
  5630                           ; BSR set to: 0
  5631                           ;inc\CANlib.h: 354: TXB0CONbits.TXPRI1 = 0x01;
  5632  000E82  010F               	movlb	15	; () banked
  5633  000E84  8340               	bsf	64,1,b	;volatile
  5634  000E86  D002               	goto	l4426
  5635  000E88                     l377:
  5636                           
  5637                           ; BSR set to: 0
  5638                           ;inc\CANlib.h: 355: else
  5639                           ;inc\CANlib.h: 356: TXB0CONbits.TXPRI1 = 0x00;
  5640  000E88  010F               	movlb	15	; () banked
  5641  000E8A  9340               	bcf	64,1,b	;volatile
  5642  000E8C                     l4426:
  5643                           
  5644                           ; BSR set to: 15
  5645                           ;inc\CANlib.h: 358: TXB0D0 = data[0];
  5646  000E8C  C072  FFD9         	movff	CANsendMessage@data,fsr2l
  5647  000E90  C073  FFDA         	movff	CANsendMessage@data+1,fsr2h
  5648  000E94  50DF               	movf	indf2,w,c
  5649  000E96  010F               	movlb	15	; () banked
  5650  000E98  6F46               	movwf	70,b	;volatile
  5651                           
  5652                           ; BSR set to: 15
  5653                           ;inc\CANlib.h: 359: TXB0D1 = data[1];
  5654  000E9A  0100               	movlb	0	; () banked
  5655  000E9C  EE20 F001          	lfsr	2,1
  5656  000EA0  5172               	movf	CANsendMessage@data& (0+255),w,b
  5657  000EA2  26D9               	addwf	fsr2l,f,c
  5658  000EA4  5173               	movf	(CANsendMessage@data+1)& (0+255),w,b
  5659  000EA6  22DA               	addwfc	fsr2h,f,c
  5660  000EA8  50DF               	movf	indf2,w,c
  5661  000EAA  010F               	movlb	15	; () banked
  5662  000EAC  6F47               	movwf	71,b	;volatile
  5663                           
  5664                           ; BSR set to: 15
  5665                           ;inc\CANlib.h: 360: TXB0D2 = data[2];
  5666  000EAE  0100               	movlb	0	; () banked
  5667  000EB0  EE20 F002          	lfsr	2,2
  5668  000EB4  5172               	movf	CANsendMessage@data& (0+255),w,b
  5669  000EB6  26D9               	addwf	fsr2l,f,c
  5670  000EB8  5173               	movf	(CANsendMessage@data+1)& (0+255),w,b
  5671  000EBA  22DA               	addwfc	fsr2h,f,c
  5672  000EBC  50DF               	movf	indf2,w,c
  5673  000EBE  010F               	movlb	15	; () banked
  5674  000EC0  6F48               	movwf	72,b	;volatile
  5675                           
  5676                           ; BSR set to: 15
  5677                           ;inc\CANlib.h: 361: TXB0D3 = data[3];
  5678  000EC2  0100               	movlb	0	; () banked
  5679  000EC4  EE20 F003          	lfsr	2,3
  5680  000EC8  5172               	movf	CANsendMessage@data& (0+255),w,b
  5681  000ECA  26D9               	addwf	fsr2l,f,c
  5682  000ECC  5173               	movf	(CANsendMessage@data+1)& (0+255),w,b
  5683  000ECE  22DA               	addwfc	fsr2h,f,c
  5684  000ED0  50DF               	movf	indf2,w,c
  5685  000ED2  010F               	movlb	15	; () banked
  5686  000ED4  6F49               	movwf	73,b	;volatile
  5687                           
  5688                           ; BSR set to: 15
  5689                           ;inc\CANlib.h: 362: TXB0D4 = data[4];
  5690  000ED6  0100               	movlb	0	; () banked
  5691  000ED8  EE20 F004          	lfsr	2,4
  5692  000EDC  5172               	movf	CANsendMessage@data& (0+255),w,b
  5693  000EDE  26D9               	addwf	fsr2l,f,c
  5694  000EE0  5173               	movf	(CANsendMessage@data+1)& (0+255),w,b
  5695  000EE2  22DA               	addwfc	fsr2h,f,c
  5696  000EE4  50DF               	movf	indf2,w,c
  5697  000EE6  010F               	movlb	15	; () banked
  5698  000EE8  6F4A               	movwf	74,b	;volatile
  5699                           
  5700                           ; BSR set to: 15
  5701                           ;inc\CANlib.h: 363: TXB0D5 = data[5];
  5702  000EEA  0100               	movlb	0	; () banked
  5703  000EEC  EE20 F005          	lfsr	2,5
  5704  000EF0  5172               	movf	CANsendMessage@data& (0+255),w,b
  5705  000EF2  26D9               	addwf	fsr2l,f,c
  5706  000EF4  5173               	movf	(CANsendMessage@data+1)& (0+255),w,b
  5707  000EF6  22DA               	addwfc	fsr2h,f,c
  5708  000EF8  50DF               	movf	indf2,w,c
  5709  000EFA  010F               	movlb	15	; () banked
  5710  000EFC  6F4B               	movwf	75,b	;volatile
  5711                           
  5712                           ; BSR set to: 15
  5713                           ;inc\CANlib.h: 364: TXB0D6 = data[6];
  5714  000EFE  0100               	movlb	0	; () banked
  5715  000F00  EE20 F006          	lfsr	2,6
  5716  000F04  5172               	movf	CANsendMessage@data& (0+255),w,b
  5717  000F06  26D9               	addwf	fsr2l,f,c
  5718  000F08  5173               	movf	(CANsendMessage@data+1)& (0+255),w,b
  5719  000F0A  22DA               	addwfc	fsr2h,f,c
  5720  000F0C  50DF               	movf	indf2,w,c
  5721  000F0E  010F               	movlb	15	; () banked
  5722  000F10  6F4C               	movwf	76,b	;volatile
  5723                           
  5724                           ; BSR set to: 15
  5725                           ;inc\CANlib.h: 365: TXB0D7 = data[7];
  5726  000F12  0100               	movlb	0	; () banked
  5727  000F14  EE20 F007          	lfsr	2,7
  5728  000F18  5172               	movf	CANsendMessage@data& (0+255),w,b
  5729  000F1A  26D9               	addwf	fsr2l,f,c
  5730  000F1C  5173               	movf	(CANsendMessage@data+1)& (0+255),w,b
  5731  000F1E  22DA               	addwfc	fsr2h,f,c
  5732  000F20  50DF               	movf	indf2,w,c
  5733  000F22  010F               	movlb	15	; () banked
  5734  000F24  6F4D               	movwf	77,b	;volatile
  5735                           
  5736                           ; BSR set to: 15
  5737                           ;inc\CANlib.h: 367: TXB0CONbits.TXREQ = 0x01;
  5738  000F26  010F               	movlb	15	; () banked
  5739  000F28  8740               	bsf	64,3,b	;volatile
  5740                           
  5741                           ; BSR set to: 15
  5742                           ;inc\CANlib.h: 368: return;
  5743  000F2A  0012               	return	
  5744  000F2C                     l365:
  5745                           
  5746                           ; BSR set to: 15
  5747                           ;inc\CANlib.h: 369: }
  5748                           ;inc\CANlib.h: 373: if (TXB1CONbits.TXREQ == 0)
  5749  000F2C  010F               	movlb	15	; () banked
  5750  000F2E  B730               	btfsc	48,3,b	;volatile
  5751  000F30  D13F               	goto	l380
  5752                           
  5753                           ; BSR set to: 15
  5754                           ;inc\CANlib.h: 374: { TXB1DLC = dataLength;
  5755  000F32  C074  FF35         	movff	CANsendMessage@dataLength,3893	;volatile
  5756                           
  5757                           ;inc\CANlib.h: 376: if (0b01000000 & flags)
  5758  000F36  0100               	movlb	0	; () banked
  5759  000F38  AD75               	btfss	CANsendMessage@flags& (0+255),6,b
  5760  000F3A  D003               	goto	l381
  5761                           
  5762                           ; BSR set to: 0
  5763                           ;inc\CANlib.h: 377: TXB1DLCbits.TXRTR = 0x01;
  5764  000F3C  010F               	movlb	15	; () banked
  5765  000F3E  8D35               	bsf	53,6,b	;volatile
  5766  000F40  D002               	goto	l382
  5767  000F42                     l381:
  5768                           
  5769                           ; BSR set to: 0
  5770                           ;inc\CANlib.h: 378: else
  5771                           ;inc\CANlib.h: 379: TXB1DLCbits.TXRTR = 0x00;
  5772  000F42  010F               	movlb	15	; () banked
  5773  000F44  9D35               	bcf	53,6,b	;volatile
  5774  000F46                     l382:
  5775                           
  5776                           ; BSR set to: 15
  5777                           ;inc\CANlib.h: 381: if (CAN_TX_FRAME_MASK & flags)
  5778  000F46  0100               	movlb	0	; () banked
  5779  000F48  A775               	btfss	CANsendMessage@flags& (0+255),3,b
  5780  000F4A  D079               	goto	l383
  5781                           
  5782                           ; BSR set to: 0
  5783                           ;inc\CANlib.h: 382: {
  5784                           ;inc\CANlib.h: 383: tamp = identifier & 0x000000FF;
  5785  000F4C  0100               	movlb	0	; () banked
  5786  000F4E  516E               	movf	CANsendMessage@identifier& (0+255),w,b
  5787  000F50  0100               	movlb	0	; () banked
  5788  000F52  6F7A               	movwf	CANsendMessage@tamp& (0+255),b
  5789  000F54  6B7B               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  5790  000F56  6B7C               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  5791  000F58  6B7D               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  5792                           
  5793                           ; BSR set to: 0
  5794                           ;inc\CANlib.h: 384: TXB1EIDL = (unsigned char) tamp;
  5795  000F5A  C07A  FF34         	movff	CANsendMessage@tamp,3892	;volatile
  5796                           
  5797                           ; BSR set to: 0
  5798                           ;inc\CANlib.h: 386: tamp = identifier & 0x0000FF00;
  5799  000F5E  0E00               	movlw	0
  5800  000F60  0100               	movlb	0	; () banked
  5801  000F62  156E               	andwf	CANsendMessage@identifier& (0+255),w,b
  5802  000F64  0100               	movlb	0	; () banked
  5803  000F66  6F7A               	movwf	CANsendMessage@tamp& (0+255),b
  5804  000F68  0EFF               	movlw	255
  5805  000F6A  0100               	movlb	0	; () banked
  5806  000F6C  156F               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
  5807  000F6E  0100               	movlb	0	; () banked
  5808  000F70  6F7B               	movwf	(CANsendMessage@tamp+1)& (0+255),b
  5809  000F72  0E00               	movlw	0
  5810  000F74  0100               	movlb	0	; () banked
  5811  000F76  1570               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
  5812  000F78  0100               	movlb	0	; () banked
  5813  000F7A  6F7C               	movwf	(CANsendMessage@tamp+2)& (0+255),b
  5814  000F7C  0E00               	movlw	0
  5815  000F7E  0100               	movlb	0	; () banked
  5816  000F80  1571               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
  5817  000F82  0100               	movlb	0	; () banked
  5818  000F84  6F7D               	movwf	(CANsendMessage@tamp+3)& (0+255),b
  5819                           
  5820                           ; BSR set to: 0
  5821                           ;inc\CANlib.h: 387: tamp = tamp >> 8;
  5822  000F86  C07A  F076         	movff	CANsendMessage@tamp,??_CANsendMessage
  5823  000F8A  C07B  F077         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
  5824  000F8E  C07C  F078         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
  5825  000F92  C07D  F079         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
  5826  000F96  C077  F076         	movff	??_CANsendMessage+1,??_CANsendMessage
  5827  000F9A  C078  F077         	movff	??_CANsendMessage+2,??_CANsendMessage+1
  5828  000F9E  C079  F078         	movff	??_CANsendMessage+3,??_CANsendMessage+2
  5829  000FA2  0100               	movlb	0	; () banked
  5830  000FA4  6B79               	clrf	(??_CANsendMessage+3)& (0+255),b
  5831  000FA6  C076  F07A         	movff	??_CANsendMessage,CANsendMessage@tamp
  5832  000FAA  C077  F07B         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  5833  000FAE  C078  F07C         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  5834  000FB2  C079  F07D         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  5835                           
  5836                           ; BSR set to: 0
  5837                           ;inc\CANlib.h: 388: TXB1EIDH = (unsigned char) tamp;
  5838  000FB6  C07A  FF33         	movff	CANsendMessage@tamp,3891	;volatile
  5839                           
  5840                           ; BSR set to: 0
  5841                           ;inc\CANlib.h: 390: TXB1SIDL = 0x00;
  5842  000FBA  0E00               	movlw	0
  5843  000FBC  010F               	movlb	15	; () banked
  5844  000FBE  6F32               	movwf	50,b	;volatile
  5845                           
  5846                           ; BSR set to: 15
  5847                           ;inc\CANlib.h: 391: TXB1SIDLbits.EXIDE = 0x01;
  5848  000FC0  010F               	movlb	15	; () banked
  5849  000FC2  8732               	bsf	50,3,b	;volatile
  5850                           
  5851                           ; BSR set to: 15
  5852                           ;inc\CANlib.h: 393: if (identifier & 0x00010000)
  5853  000FC4  0100               	movlb	0	; () banked
  5854  000FC6  A170               	btfss	(CANsendMessage@identifier+2)& (0+255),0,b
  5855  000FC8  D002               	goto	l384
  5856                           
  5857                           ; BSR set to: 0
  5858                           ;inc\CANlib.h: 394: TXB1SIDLbits.EID16 = 0x01;
  5859  000FCA  010F               	movlb	15	; () banked
  5860  000FCC  8132               	bsf	50,0,b	;volatile
  5861  000FCE                     l384:
  5862                           
  5863                           ;inc\CANlib.h: 395: if (identifier & 0x00020000)
  5864  000FCE  0100               	movlb	0	; () banked
  5865  000FD0  A370               	btfss	(CANsendMessage@identifier+2)& (0+255),1,b
  5866  000FD2  D002               	goto	l385
  5867                           
  5868                           ; BSR set to: 0
  5869                           ;inc\CANlib.h: 396: TXB1SIDLbits.EID17 = 0x01;
  5870  000FD4  010F               	movlb	15	; () banked
  5871  000FD6  8332               	bsf	50,1,b	;volatile
  5872  000FD8                     l385:
  5873                           
  5874                           ;inc\CANlib.h: 397: if (identifier & 0x00040000)
  5875  000FD8  0100               	movlb	0	; () banked
  5876  000FDA  A570               	btfss	(CANsendMessage@identifier+2)& (0+255),2,b
  5877  000FDC  D002               	goto	l386
  5878                           
  5879                           ; BSR set to: 0
  5880                           ;inc\CANlib.h: 398: TXB1SIDLbits.SID0 = 0x01;
  5881  000FDE  010F               	movlb	15	; () banked
  5882  000FE0  8B32               	bsf	50,5,b	;volatile
  5883  000FE2                     l386:
  5884                           
  5885                           ;inc\CANlib.h: 399: if (identifier & 0x00080000)
  5886  000FE2  0100               	movlb	0	; () banked
  5887  000FE4  A770               	btfss	(CANsendMessage@identifier+2)& (0+255),3,b
  5888  000FE6  D002               	goto	l387
  5889                           
  5890                           ; BSR set to: 0
  5891                           ;inc\CANlib.h: 400: TXB1SIDLbits.SID1 = 0x01;
  5892  000FE8  010F               	movlb	15	; () banked
  5893  000FEA  8D32               	bsf	50,6,b	;volatile
  5894  000FEC                     l387:
  5895                           
  5896                           ;inc\CANlib.h: 401: if (identifier & 0x00100000)
  5897  000FEC  0100               	movlb	0	; () banked
  5898  000FEE  A970               	btfss	(CANsendMessage@identifier+2)& (0+255),4,b
  5899  000FF0  D002               	goto	l4476
  5900                           
  5901                           ; BSR set to: 0
  5902                           ;inc\CANlib.h: 402: TXB1SIDLbits.SID2 = 0x01;
  5903  000FF2  010F               	movlb	15	; () banked
  5904  000FF4  8F32               	bsf	50,7,b	;volatile
  5905  000FF6                     l4476:
  5906                           
  5907                           ;inc\CANlib.h: 404: tamp = (identifier >> 21);
  5908  000FF6  C06E  F076         	movff	CANsendMessage@identifier,??_CANsendMessage
  5909  000FFA  C06F  F077         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
  5910  000FFE  C070  F078         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
  5911  001002  C071  F079         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
  5912  001006  0E16               	movlw	22
  5913  001008  D006               	goto	u5670
  5914  00100A                     u5675:
  5915  00100A  0100               	movlb	0	; () banked
  5916  00100C  90D8               	bcf	status,0,c
  5917  00100E  3379               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
  5918  001010  3378               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
  5919  001012  3377               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
  5920  001014  3376               	rrcf	??_CANsendMessage& (0+255),f,b
  5921  001016                     u5670:
  5922  001016  2EE8               	decfsz	wreg,f,c
  5923  001018  D7F8               	goto	u5675
  5924  00101A  C076  F07A         	movff	??_CANsendMessage,CANsendMessage@tamp
  5925  00101E  C077  F07B         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  5926  001022  C078  F07C         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  5927  001026  C079  F07D         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  5928                           
  5929                           ; BSR set to: 0
  5930                           ;inc\CANlib.h: 405: tamp = tamp & 0x000000FF;
  5931  00102A  0100               	movlb	0	; () banked
  5932  00102C  517A               	movf	CANsendMessage@tamp& (0+255),w,b
  5933  00102E  0100               	movlb	0	; () banked
  5934  001030  6F7A               	movwf	CANsendMessage@tamp& (0+255),b
  5935  001032  6B7B               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  5936  001034  6B7C               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  5937  001036  6B7D               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  5938                           
  5939                           ; BSR set to: 0
  5940                           ;inc\CANlib.h: 406: TXB1SIDH = (unsigned char) tamp;
  5941  001038  C07A  FF31         	movff	CANsendMessage@tamp,3889	;volatile
  5942                           
  5943                           ;inc\CANlib.h: 407: }
  5944  00103C  D059               	goto	l4496
  5945  00103E                     l383:
  5946                           
  5947                           ; BSR set to: 0
  5948                           ;inc\CANlib.h: 409: else
  5949                           ;inc\CANlib.h: 411: {
  5950                           ;inc\CANlib.h: 412: TXB1SIDLbits.EXIDE = 0x00;
  5951  00103E  010F               	movlb	15	; () banked
  5952  001040  9732               	bcf	50,3,b	;volatile
  5953                           
  5954                           ; BSR set to: 15
  5955                           ;inc\CANlib.h: 414: tamp = (identifier >> 3);
  5956  001042  C06E  F076         	movff	CANsendMessage@identifier,??_CANsendMessage
  5957  001046  C06F  F077         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
  5958  00104A  C070  F078         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
  5959  00104E  C071  F079         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
  5960  001052  0E04               	movlw	4
  5961  001054  D006               	goto	u5680
  5962  001056                     u5685:
  5963  001056  0100               	movlb	0	; () banked
  5964  001058  90D8               	bcf	status,0,c
  5965  00105A  3379               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
  5966  00105C  3378               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
  5967  00105E  3377               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
  5968  001060  3376               	rrcf	??_CANsendMessage& (0+255),f,b
  5969  001062                     u5680:
  5970  001062  2EE8               	decfsz	wreg,f,c
  5971  001064  D7F8               	goto	u5685
  5972  001066  C076  F07A         	movff	??_CANsendMessage,CANsendMessage@tamp
  5973  00106A  C077  F07B         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  5974  00106E  C078  F07C         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  5975  001072  C079  F07D         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  5976                           
  5977                           ; BSR set to: 0
  5978                           ;inc\CANlib.h: 415: tamp = tamp & 0x000000FF;
  5979  001076  0100               	movlb	0	; () banked
  5980  001078  517A               	movf	CANsendMessage@tamp& (0+255),w,b
  5981  00107A  0100               	movlb	0	; () banked
  5982  00107C  6F7A               	movwf	CANsendMessage@tamp& (0+255),b
  5983  00107E  6B7B               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  5984  001080  6B7C               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  5985  001082  6B7D               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  5986                           
  5987                           ; BSR set to: 0
  5988                           ;inc\CANlib.h: 416: TXB1SIDH = (unsigned char) tamp;
  5989  001084  C07A  FF31         	movff	CANsendMessage@tamp,3889	;volatile
  5990                           
  5991                           ; BSR set to: 0
  5992                           ;inc\CANlib.h: 418: tamp = identifier & 0x00000007;
  5993  001088  0E07               	movlw	7
  5994  00108A  0100               	movlb	0	; () banked
  5995  00108C  156E               	andwf	CANsendMessage@identifier& (0+255),w,b
  5996  00108E  0100               	movlb	0	; () banked
  5997  001090  6F7A               	movwf	CANsendMessage@tamp& (0+255),b
  5998  001092  0E00               	movlw	0
  5999  001094  0100               	movlb	0	; () banked
  6000  001096  156F               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
  6001  001098  0100               	movlb	0	; () banked
  6002  00109A  6F7B               	movwf	(CANsendMessage@tamp+1)& (0+255),b
  6003  00109C  0E00               	movlw	0
  6004  00109E  0100               	movlb	0	; () banked
  6005  0010A0  1570               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
  6006  0010A2  0100               	movlb	0	; () banked
  6007  0010A4  6F7C               	movwf	(CANsendMessage@tamp+2)& (0+255),b
  6008  0010A6  0E00               	movlw	0
  6009  0010A8  0100               	movlb	0	; () banked
  6010  0010AA  1571               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
  6011  0010AC  0100               	movlb	0	; () banked
  6012  0010AE  6F7D               	movwf	(CANsendMessage@tamp+3)& (0+255),b
  6013                           
  6014                           ; BSR set to: 0
  6015                           ;inc\CANlib.h: 419: tamp = tamp << 5;
  6016  0010B0  C07A  F076         	movff	CANsendMessage@tamp,??_CANsendMessage
  6017  0010B4  C07B  F077         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
  6018  0010B8  C07C  F078         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
  6019  0010BC  C07D  F079         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
  6020  0010C0  0E05               	movlw	5
  6021  0010C2                     u5695:
  6022  0010C2  90D8               	bcf	status,0,c
  6023  0010C4  0100               	movlb	0	; () banked
  6024  0010C6  3776               	rlcf	??_CANsendMessage& (0+255),f,b
  6025  0010C8  3777               	rlcf	(??_CANsendMessage+1)& (0+255),f,b
  6026  0010CA  3778               	rlcf	(??_CANsendMessage+2)& (0+255),f,b
  6027  0010CC  3779               	rlcf	(??_CANsendMessage+3)& (0+255),f,b
  6028  0010CE  2EE8               	decfsz	wreg,f,c
  6029  0010D0  D7F8               	goto	u5695
  6030  0010D2  C076  F07A         	movff	??_CANsendMessage,CANsendMessage@tamp
  6031  0010D6  C077  F07B         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  6032  0010DA  C078  F07C         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  6033  0010DE  C079  F07D         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  6034                           
  6035                           ; BSR set to: 0
  6036                           ;inc\CANlib.h: 420: TXB1SIDL = TXB1SIDL & 0b00011111;
  6037  0010E2  010F               	movlb	15	; () banked
  6038  0010E4  5132               	movf	50,w,b	;volatile
  6039  0010E6  0B1F               	andlw	31
  6040  0010E8  010F               	movlb	15	; () banked
  6041  0010EA  6F32               	movwf	50,b	;volatile
  6042                           
  6043                           ; BSR set to: 15
  6044                           ;inc\CANlib.h: 421: TXB1SIDL = (unsigned char) tamp;
  6045  0010EC  C07A  FF32         	movff	CANsendMessage@tamp,3890	;volatile
  6046  0010F0                     l4496:
  6047                           
  6048                           ;inc\CANlib.h: 422: }
  6049                           ;inc\CANlib.h: 424: if (0b00000001 & flags)
  6050  0010F0  0100               	movlb	0	; () banked
  6051  0010F2  A175               	btfss	CANsendMessage@flags& (0+255),0,b
  6052  0010F4  D003               	goto	l390
  6053                           
  6054                           ; BSR set to: 0
  6055                           ;inc\CANlib.h: 425: TXB1CONbits.TXPRI0 = 0x01;
  6056  0010F6  010F               	movlb	15	; () banked
  6057  0010F8  8130               	bsf	48,0,b	;volatile
  6058  0010FA  D002               	goto	l391
  6059  0010FC                     l390:
  6060                           
  6061                           ; BSR set to: 0
  6062                           ;inc\CANlib.h: 426: else
  6063                           ;inc\CANlib.h: 427: TXB1CONbits.TXPRI0 = 0x00;
  6064  0010FC  010F               	movlb	15	; () banked
  6065  0010FE  9130               	bcf	48,0,b	;volatile
  6066  001100                     l391:
  6067                           
  6068                           ; BSR set to: 15
  6069                           ;inc\CANlib.h: 428: if (0b00000010 & flags)
  6070  001100  0100               	movlb	0	; () banked
  6071  001102  A375               	btfss	CANsendMessage@flags& (0+255),1,b
  6072  001104  D003               	goto	l392
  6073                           
  6074                           ; BSR set to: 0
  6075                           ;inc\CANlib.h: 429: TXB1CONbits.TXPRI1 = 0x01;
  6076  001106  010F               	movlb	15	; () banked
  6077  001108  8330               	bsf	48,1,b	;volatile
  6078  00110A  D002               	goto	l4502
  6079  00110C                     l392:
  6080                           
  6081                           ; BSR set to: 0
  6082                           ;inc\CANlib.h: 430: else
  6083                           ;inc\CANlib.h: 431: TXB1CONbits.TXPRI1 = 0x00;
  6084  00110C  010F               	movlb	15	; () banked
  6085  00110E  9330               	bcf	48,1,b	;volatile
  6086  001110                     l4502:
  6087                           
  6088                           ; BSR set to: 15
  6089                           ;inc\CANlib.h: 433: TXB1D0 = data[0];
  6090  001110  C072  FFD9         	movff	CANsendMessage@data,fsr2l
  6091  001114  C073  FFDA         	movff	CANsendMessage@data+1,fsr2h
  6092  001118  50DF               	movf	indf2,w,c
  6093  00111A  010F               	movlb	15	; () banked
  6094  00111C  6F36               	movwf	54,b	;volatile
  6095                           
  6096                           ; BSR set to: 15
  6097                           ;inc\CANlib.h: 434: TXB1D1 = data[1];
  6098  00111E  0100               	movlb	0	; () banked
  6099  001120  EE20 F001          	lfsr	2,1
  6100  001124  5172               	movf	CANsendMessage@data& (0+255),w,b
  6101  001126  26D9               	addwf	fsr2l,f,c
  6102  001128  5173               	movf	(CANsendMessage@data+1)& (0+255),w,b
  6103  00112A  22DA               	addwfc	fsr2h,f,c
  6104  00112C  50DF               	movf	indf2,w,c
  6105  00112E  010F               	movlb	15	; () banked
  6106  001130  6F37               	movwf	55,b	;volatile
  6107                           
  6108                           ; BSR set to: 15
  6109                           ;inc\CANlib.h: 435: TXB1D2 = data[2];
  6110  001132  0100               	movlb	0	; () banked
  6111  001134  EE20 F002          	lfsr	2,2
  6112  001138  5172               	movf	CANsendMessage@data& (0+255),w,b
  6113  00113A  26D9               	addwf	fsr2l,f,c
  6114  00113C  5173               	movf	(CANsendMessage@data+1)& (0+255),w,b
  6115  00113E  22DA               	addwfc	fsr2h,f,c
  6116  001140  50DF               	movf	indf2,w,c
  6117  001142  010F               	movlb	15	; () banked
  6118  001144  6F38               	movwf	56,b	;volatile
  6119                           
  6120                           ; BSR set to: 15
  6121                           ;inc\CANlib.h: 436: TXB1D3 = data[3];
  6122  001146  0100               	movlb	0	; () banked
  6123  001148  EE20 F003          	lfsr	2,3
  6124  00114C  5172               	movf	CANsendMessage@data& (0+255),w,b
  6125  00114E  26D9               	addwf	fsr2l,f,c
  6126  001150  5173               	movf	(CANsendMessage@data+1)& (0+255),w,b
  6127  001152  22DA               	addwfc	fsr2h,f,c
  6128  001154  50DF               	movf	indf2,w,c
  6129  001156  010F               	movlb	15	; () banked
  6130  001158  6F39               	movwf	57,b	;volatile
  6131                           
  6132                           ; BSR set to: 15
  6133                           ;inc\CANlib.h: 437: TXB1D4 = data[4];
  6134  00115A  0100               	movlb	0	; () banked
  6135  00115C  EE20 F004          	lfsr	2,4
  6136  001160  5172               	movf	CANsendMessage@data& (0+255),w,b
  6137  001162  26D9               	addwf	fsr2l,f,c
  6138  001164  5173               	movf	(CANsendMessage@data+1)& (0+255),w,b
  6139  001166  22DA               	addwfc	fsr2h,f,c
  6140  001168  50DF               	movf	indf2,w,c
  6141  00116A  010F               	movlb	15	; () banked
  6142  00116C  6F3A               	movwf	58,b	;volatile
  6143                           
  6144                           ; BSR set to: 15
  6145                           ;inc\CANlib.h: 438: TXB1D5 = data[5];
  6146  00116E  0100               	movlb	0	; () banked
  6147  001170  EE20 F005          	lfsr	2,5
  6148  001174  5172               	movf	CANsendMessage@data& (0+255),w,b
  6149  001176  26D9               	addwf	fsr2l,f,c
  6150  001178  5173               	movf	(CANsendMessage@data+1)& (0+255),w,b
  6151  00117A  22DA               	addwfc	fsr2h,f,c
  6152  00117C  50DF               	movf	indf2,w,c
  6153  00117E  010F               	movlb	15	; () banked
  6154  001180  6F3B               	movwf	59,b	;volatile
  6155                           
  6156                           ; BSR set to: 15
  6157                           ;inc\CANlib.h: 439: TXB1D6 = data[6];
  6158  001182  0100               	movlb	0	; () banked
  6159  001184  EE20 F006          	lfsr	2,6
  6160  001188  5172               	movf	CANsendMessage@data& (0+255),w,b
  6161  00118A  26D9               	addwf	fsr2l,f,c
  6162  00118C  5173               	movf	(CANsendMessage@data+1)& (0+255),w,b
  6163  00118E  22DA               	addwfc	fsr2h,f,c
  6164  001190  50DF               	movf	indf2,w,c
  6165  001192  010F               	movlb	15	; () banked
  6166  001194  6F3C               	movwf	60,b	;volatile
  6167                           
  6168                           ; BSR set to: 15
  6169                           ;inc\CANlib.h: 440: TXB1D7 = data[7];
  6170  001196  0100               	movlb	0	; () banked
  6171  001198  EE20 F007          	lfsr	2,7
  6172  00119C  5172               	movf	CANsendMessage@data& (0+255),w,b
  6173  00119E  26D9               	addwf	fsr2l,f,c
  6174  0011A0  5173               	movf	(CANsendMessage@data+1)& (0+255),w,b
  6175  0011A2  22DA               	addwfc	fsr2h,f,c
  6176  0011A4  50DF               	movf	indf2,w,c
  6177  0011A6  010F               	movlb	15	; () banked
  6178  0011A8  6F3D               	movwf	61,b	;volatile
  6179                           
  6180                           ; BSR set to: 15
  6181                           ;inc\CANlib.h: 442: TXB1CONbits.TXREQ = 0x01;
  6182  0011AA  010F               	movlb	15	; () banked
  6183  0011AC  8730               	bsf	48,3,b	;volatile
  6184                           
  6185                           ; BSR set to: 15
  6186                           ;inc\CANlib.h: 444: return;
  6187  0011AE  0012               	return	
  6188  0011B0                     l380:
  6189                           
  6190                           ; BSR set to: 15
  6191                           ;inc\CANlib.h: 445: }
  6192                           ;inc\CANlib.h: 449: if (TXB2CONbits.TXREQ == 0)
  6193  0011B0  010F               	movlb	15	; () banked
  6194  0011B2  B720               	btfsc	32,3,b	;volatile
  6195  0011B4  0012               	return	
  6196                           
  6197                           ; BSR set to: 15
  6198                           ;inc\CANlib.h: 450: { TXB2DLC = dataLength;
  6199  0011B6  C074  FF25         	movff	CANsendMessage@dataLength,3877	;volatile
  6200                           
  6201                           ;inc\CANlib.h: 452: if (0b01000000 & flags)
  6202  0011BA  0100               	movlb	0	; () banked
  6203  0011BC  AD75               	btfss	CANsendMessage@flags& (0+255),6,b
  6204  0011BE  D003               	goto	l395
  6205                           
  6206                           ; BSR set to: 0
  6207                           ;inc\CANlib.h: 453: TXB2DLCbits.TXRTR = 0x01;
  6208  0011C0  010F               	movlb	15	; () banked
  6209  0011C2  8D25               	bsf	37,6,b	;volatile
  6210  0011C4  D002               	goto	l396
  6211  0011C6                     l395:
  6212                           
  6213                           ; BSR set to: 0
  6214                           ;inc\CANlib.h: 454: else
  6215                           ;inc\CANlib.h: 455: TXB2DLCbits.TXRTR = 0x00;
  6216  0011C6  010F               	movlb	15	; () banked
  6217  0011C8  9D25               	bcf	37,6,b	;volatile
  6218  0011CA                     l396:
  6219                           
  6220                           ; BSR set to: 15
  6221                           ;inc\CANlib.h: 457: if (CAN_TX_FRAME_MASK & flags)
  6222  0011CA  0100               	movlb	0	; () banked
  6223  0011CC  A775               	btfss	CANsendMessage@flags& (0+255),3,b
  6224  0011CE  D079               	goto	l397
  6225                           
  6226                           ; BSR set to: 0
  6227                           ;inc\CANlib.h: 458: {
  6228                           ;inc\CANlib.h: 459: tamp = identifier & 0x000000FF;
  6229  0011D0  0100               	movlb	0	; () banked
  6230  0011D2  516E               	movf	CANsendMessage@identifier& (0+255),w,b
  6231  0011D4  0100               	movlb	0	; () banked
  6232  0011D6  6F7A               	movwf	CANsendMessage@tamp& (0+255),b
  6233  0011D8  6B7B               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  6234  0011DA  6B7C               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  6235  0011DC  6B7D               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  6236                           
  6237                           ; BSR set to: 0
  6238                           ;inc\CANlib.h: 460: TXB2EIDL = (unsigned char) tamp;
  6239  0011DE  C07A  FF24         	movff	CANsendMessage@tamp,3876	;volatile
  6240                           
  6241                           ; BSR set to: 0
  6242                           ;inc\CANlib.h: 462: tamp = identifier & 0x0000FF00;
  6243  0011E2  0E00               	movlw	0
  6244  0011E4  0100               	movlb	0	; () banked
  6245  0011E6  156E               	andwf	CANsendMessage@identifier& (0+255),w,b
  6246  0011E8  0100               	movlb	0	; () banked
  6247  0011EA  6F7A               	movwf	CANsendMessage@tamp& (0+255),b
  6248  0011EC  0EFF               	movlw	255
  6249  0011EE  0100               	movlb	0	; () banked
  6250  0011F0  156F               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
  6251  0011F2  0100               	movlb	0	; () banked
  6252  0011F4  6F7B               	movwf	(CANsendMessage@tamp+1)& (0+255),b
  6253  0011F6  0E00               	movlw	0
  6254  0011F8  0100               	movlb	0	; () banked
  6255  0011FA  1570               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
  6256  0011FC  0100               	movlb	0	; () banked
  6257  0011FE  6F7C               	movwf	(CANsendMessage@tamp+2)& (0+255),b
  6258  001200  0E00               	movlw	0
  6259  001202  0100               	movlb	0	; () banked
  6260  001204  1571               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
  6261  001206  0100               	movlb	0	; () banked
  6262  001208  6F7D               	movwf	(CANsendMessage@tamp+3)& (0+255),b
  6263                           
  6264                           ; BSR set to: 0
  6265                           ;inc\CANlib.h: 463: tamp = tamp >> 8;
  6266  00120A  C07A  F076         	movff	CANsendMessage@tamp,??_CANsendMessage
  6267  00120E  C07B  F077         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
  6268  001212  C07C  F078         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
  6269  001216  C07D  F079         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
  6270  00121A  C077  F076         	movff	??_CANsendMessage+1,??_CANsendMessage
  6271  00121E  C078  F077         	movff	??_CANsendMessage+2,??_CANsendMessage+1
  6272  001222  C079  F078         	movff	??_CANsendMessage+3,??_CANsendMessage+2
  6273  001226  0100               	movlb	0	; () banked
  6274  001228  6B79               	clrf	(??_CANsendMessage+3)& (0+255),b
  6275  00122A  C076  F07A         	movff	??_CANsendMessage,CANsendMessage@tamp
  6276  00122E  C077  F07B         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  6277  001232  C078  F07C         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  6278  001236  C079  F07D         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  6279                           
  6280                           ; BSR set to: 0
  6281                           ;inc\CANlib.h: 464: TXB2EIDH = (unsigned char) tamp;
  6282  00123A  C07A  FF23         	movff	CANsendMessage@tamp,3875	;volatile
  6283                           
  6284                           ; BSR set to: 0
  6285                           ;inc\CANlib.h: 466: TXB2SIDL = 0x00;
  6286  00123E  0E00               	movlw	0
  6287  001240  010F               	movlb	15	; () banked
  6288  001242  6F22               	movwf	34,b	;volatile
  6289                           
  6290                           ; BSR set to: 15
  6291                           ;inc\CANlib.h: 467: TXB2SIDLbits.EXIDE = 0x01;
  6292  001244  010F               	movlb	15	; () banked
  6293  001246  8722               	bsf	34,3,b	;volatile
  6294                           
  6295                           ; BSR set to: 15
  6296                           ;inc\CANlib.h: 469: if (identifier & 0x00010000)
  6297  001248  0100               	movlb	0	; () banked
  6298  00124A  A170               	btfss	(CANsendMessage@identifier+2)& (0+255),0,b
  6299  00124C  D002               	goto	l398
  6300                           
  6301                           ; BSR set to: 0
  6302                           ;inc\CANlib.h: 470: TXB2SIDLbits.EID16 = 0x01;
  6303  00124E  010F               	movlb	15	; () banked
  6304  001250  8122               	bsf	34,0,b	;volatile
  6305  001252                     l398:
  6306                           
  6307                           ;inc\CANlib.h: 471: if (identifier & 0x00020000)
  6308  001252  0100               	movlb	0	; () banked
  6309  001254  A370               	btfss	(CANsendMessage@identifier+2)& (0+255),1,b
  6310  001256  D002               	goto	l399
  6311                           
  6312                           ; BSR set to: 0
  6313                           ;inc\CANlib.h: 472: TXB2SIDLbits.EID17 = 0x01;
  6314  001258  010F               	movlb	15	; () banked
  6315  00125A  8322               	bsf	34,1,b	;volatile
  6316  00125C                     l399:
  6317                           
  6318                           ;inc\CANlib.h: 473: if (identifier & 0x00040000)
  6319  00125C  0100               	movlb	0	; () banked
  6320  00125E  A570               	btfss	(CANsendMessage@identifier+2)& (0+255),2,b
  6321  001260  D002               	goto	l400
  6322                           
  6323                           ; BSR set to: 0
  6324                           ;inc\CANlib.h: 474: TXB2SIDLbits.SID0 = 0x01;
  6325  001262  010F               	movlb	15	; () banked
  6326  001264  8B22               	bsf	34,5,b	;volatile
  6327  001266                     l400:
  6328                           
  6329                           ;inc\CANlib.h: 475: if (identifier & 0x00080000)
  6330  001266  0100               	movlb	0	; () banked
  6331  001268  A770               	btfss	(CANsendMessage@identifier+2)& (0+255),3,b
  6332  00126A  D002               	goto	l401
  6333                           
  6334                           ; BSR set to: 0
  6335                           ;inc\CANlib.h: 476: TXB2SIDLbits.SID1 = 0x01;
  6336  00126C  010F               	movlb	15	; () banked
  6337  00126E  8D22               	bsf	34,6,b	;volatile
  6338  001270                     l401:
  6339                           
  6340                           ;inc\CANlib.h: 477: if (identifier & 0x00100000)
  6341  001270  0100               	movlb	0	; () banked
  6342  001272  A970               	btfss	(CANsendMessage@identifier+2)& (0+255),4,b
  6343  001274  D002               	goto	l4552
  6344                           
  6345                           ; BSR set to: 0
  6346                           ;inc\CANlib.h: 478: TXB2SIDLbits.SID2 = 0x01;
  6347  001276  010F               	movlb	15	; () banked
  6348  001278  8F22               	bsf	34,7,b	;volatile
  6349  00127A                     l4552:
  6350                           
  6351                           ;inc\CANlib.h: 480: tamp = (identifier >> 21);
  6352  00127A  C06E  F076         	movff	CANsendMessage@identifier,??_CANsendMessage
  6353  00127E  C06F  F077         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
  6354  001282  C070  F078         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
  6355  001286  C071  F079         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
  6356  00128A  0E16               	movlw	22
  6357  00128C  D006               	goto	u5800
  6358  00128E                     u5805:
  6359  00128E  0100               	movlb	0	; () banked
  6360  001290  90D8               	bcf	status,0,c
  6361  001292  3379               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
  6362  001294  3378               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
  6363  001296  3377               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
  6364  001298  3376               	rrcf	??_CANsendMessage& (0+255),f,b
  6365  00129A                     u5800:
  6366  00129A  2EE8               	decfsz	wreg,f,c
  6367  00129C  D7F8               	goto	u5805
  6368  00129E  C076  F07A         	movff	??_CANsendMessage,CANsendMessage@tamp
  6369  0012A2  C077  F07B         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  6370  0012A6  C078  F07C         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  6371  0012AA  C079  F07D         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  6372                           
  6373                           ; BSR set to: 0
  6374                           ;inc\CANlib.h: 481: tamp = tamp & 0x000000FF;
  6375  0012AE  0100               	movlb	0	; () banked
  6376  0012B0  517A               	movf	CANsendMessage@tamp& (0+255),w,b
  6377  0012B2  0100               	movlb	0	; () banked
  6378  0012B4  6F7A               	movwf	CANsendMessage@tamp& (0+255),b
  6379  0012B6  6B7B               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  6380  0012B8  6B7C               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  6381  0012BA  6B7D               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  6382                           
  6383                           ; BSR set to: 0
  6384                           ;inc\CANlib.h: 482: TXB2SIDH = (unsigned char) tamp;
  6385  0012BC  C07A  FF21         	movff	CANsendMessage@tamp,3873	;volatile
  6386                           
  6387                           ;inc\CANlib.h: 483: }
  6388  0012C0  D059               	goto	l4572
  6389  0012C2                     l397:
  6390                           
  6391                           ; BSR set to: 0
  6392                           ;inc\CANlib.h: 485: else
  6393                           ;inc\CANlib.h: 487: {
  6394                           ;inc\CANlib.h: 488: TXB2SIDLbits.EXIDE = 0x00;
  6395  0012C2  010F               	movlb	15	; () banked
  6396  0012C4  9722               	bcf	34,3,b	;volatile
  6397                           
  6398                           ; BSR set to: 15
  6399                           ;inc\CANlib.h: 490: tamp = (identifier >> 3);
  6400  0012C6  C06E  F076         	movff	CANsendMessage@identifier,??_CANsendMessage
  6401  0012CA  C06F  F077         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
  6402  0012CE  C070  F078         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
  6403  0012D2  C071  F079         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
  6404  0012D6  0E04               	movlw	4
  6405  0012D8  D006               	goto	u5810
  6406  0012DA                     u5815:
  6407  0012DA  0100               	movlb	0	; () banked
  6408  0012DC  90D8               	bcf	status,0,c
  6409  0012DE  3379               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
  6410  0012E0  3378               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
  6411  0012E2  3377               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
  6412  0012E4  3376               	rrcf	??_CANsendMessage& (0+255),f,b
  6413  0012E6                     u5810:
  6414  0012E6  2EE8               	decfsz	wreg,f,c
  6415  0012E8  D7F8               	goto	u5815
  6416  0012EA  C076  F07A         	movff	??_CANsendMessage,CANsendMessage@tamp
  6417  0012EE  C077  F07B         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  6418  0012F2  C078  F07C         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  6419  0012F6  C079  F07D         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  6420                           
  6421                           ; BSR set to: 0
  6422                           ;inc\CANlib.h: 491: tamp = tamp & 0x000000FF;
  6423  0012FA  0100               	movlb	0	; () banked
  6424  0012FC  517A               	movf	CANsendMessage@tamp& (0+255),w,b
  6425  0012FE  0100               	movlb	0	; () banked
  6426  001300  6F7A               	movwf	CANsendMessage@tamp& (0+255),b
  6427  001302  6B7B               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  6428  001304  6B7C               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  6429  001306  6B7D               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  6430                           
  6431                           ; BSR set to: 0
  6432                           ;inc\CANlib.h: 492: TXB2SIDH = (unsigned char) tamp;
  6433  001308  C07A  FF21         	movff	CANsendMessage@tamp,3873	;volatile
  6434                           
  6435                           ; BSR set to: 0
  6436                           ;inc\CANlib.h: 494: tamp = identifier & 0x00000007;
  6437  00130C  0E07               	movlw	7
  6438  00130E  0100               	movlb	0	; () banked
  6439  001310  156E               	andwf	CANsendMessage@identifier& (0+255),w,b
  6440  001312  0100               	movlb	0	; () banked
  6441  001314  6F7A               	movwf	CANsendMessage@tamp& (0+255),b
  6442  001316  0E00               	movlw	0
  6443  001318  0100               	movlb	0	; () banked
  6444  00131A  156F               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
  6445  00131C  0100               	movlb	0	; () banked
  6446  00131E  6F7B               	movwf	(CANsendMessage@tamp+1)& (0+255),b
  6447  001320  0E00               	movlw	0
  6448  001322  0100               	movlb	0	; () banked
  6449  001324  1570               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
  6450  001326  0100               	movlb	0	; () banked
  6451  001328  6F7C               	movwf	(CANsendMessage@tamp+2)& (0+255),b
  6452  00132A  0E00               	movlw	0
  6453  00132C  0100               	movlb	0	; () banked
  6454  00132E  1571               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
  6455  001330  0100               	movlb	0	; () banked
  6456  001332  6F7D               	movwf	(CANsendMessage@tamp+3)& (0+255),b
  6457                           
  6458                           ; BSR set to: 0
  6459                           ;inc\CANlib.h: 495: tamp = tamp << 5;
  6460  001334  C07A  F076         	movff	CANsendMessage@tamp,??_CANsendMessage
  6461  001338  C07B  F077         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
  6462  00133C  C07C  F078         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
  6463  001340  C07D  F079         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
  6464  001344  0E05               	movlw	5
  6465  001346                     u5825:
  6466  001346  90D8               	bcf	status,0,c
  6467  001348  0100               	movlb	0	; () banked
  6468  00134A  3776               	rlcf	??_CANsendMessage& (0+255),f,b
  6469  00134C  3777               	rlcf	(??_CANsendMessage+1)& (0+255),f,b
  6470  00134E  3778               	rlcf	(??_CANsendMessage+2)& (0+255),f,b
  6471  001350  3779               	rlcf	(??_CANsendMessage+3)& (0+255),f,b
  6472  001352  2EE8               	decfsz	wreg,f,c
  6473  001354  D7F8               	goto	u5825
  6474  001356  C076  F07A         	movff	??_CANsendMessage,CANsendMessage@tamp
  6475  00135A  C077  F07B         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  6476  00135E  C078  F07C         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  6477  001362  C079  F07D         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  6478                           
  6479                           ; BSR set to: 0
  6480                           ;inc\CANlib.h: 496: TXB2SIDL = TXB2SIDL & 0b00011111;
  6481  001366  010F               	movlb	15	; () banked
  6482  001368  5122               	movf	34,w,b	;volatile
  6483  00136A  0B1F               	andlw	31
  6484  00136C  010F               	movlb	15	; () banked
  6485  00136E  6F22               	movwf	34,b	;volatile
  6486                           
  6487                           ; BSR set to: 15
  6488                           ;inc\CANlib.h: 497: TXB2SIDL = (unsigned char) tamp;
  6489  001370  C07A  FF22         	movff	CANsendMessage@tamp,3874	;volatile
  6490  001374                     l4572:
  6491                           
  6492                           ;inc\CANlib.h: 498: }
  6493                           ;inc\CANlib.h: 500: if (0b00000001 & flags)
  6494  001374  0100               	movlb	0	; () banked
  6495  001376  A175               	btfss	CANsendMessage@flags& (0+255),0,b
  6496  001378  D003               	goto	l404
  6497                           
  6498                           ; BSR set to: 0
  6499                           ;inc\CANlib.h: 501: TXB2CONbits.TXPRI0 = 0x01;
  6500  00137A  010F               	movlb	15	; () banked
  6501  00137C  8120               	bsf	32,0,b	;volatile
  6502  00137E  D002               	goto	l405
  6503  001380                     l404:
  6504                           
  6505                           ; BSR set to: 0
  6506                           ;inc\CANlib.h: 502: else
  6507                           ;inc\CANlib.h: 503: TXB2CONbits.TXPRI0 = 0x00;
  6508  001380  010F               	movlb	15	; () banked
  6509  001382  9120               	bcf	32,0,b	;volatile
  6510  001384                     l405:
  6511                           
  6512                           ; BSR set to: 15
  6513                           ;inc\CANlib.h: 504: if (0b00000010 & flags)
  6514  001384  0100               	movlb	0	; () banked
  6515  001386  A375               	btfss	CANsendMessage@flags& (0+255),1,b
  6516  001388  D003               	goto	l406
  6517                           
  6518                           ; BSR set to: 0
  6519                           ;inc\CANlib.h: 505: TXB2CONbits.TXPRI1 = 0x01;
  6520  00138A  010F               	movlb	15	; () banked
  6521  00138C  8320               	bsf	32,1,b	;volatile
  6522  00138E  D002               	goto	l4578
  6523  001390                     l406:
  6524                           
  6525                           ; BSR set to: 0
  6526                           ;inc\CANlib.h: 506: else
  6527                           ;inc\CANlib.h: 507: TXB2CONbits.TXPRI1 = 0x00;
  6528  001390  010F               	movlb	15	; () banked
  6529  001392  9320               	bcf	32,1,b	;volatile
  6530  001394                     l4578:
  6531                           
  6532                           ; BSR set to: 15
  6533                           ;inc\CANlib.h: 509: TXB2D0 = data[0];
  6534  001394  C072  FFD9         	movff	CANsendMessage@data,fsr2l
  6535  001398  C073  FFDA         	movff	CANsendMessage@data+1,fsr2h
  6536  00139C  50DF               	movf	indf2,w,c
  6537  00139E  010F               	movlb	15	; () banked
  6538  0013A0  6F26               	movwf	38,b	;volatile
  6539                           
  6540                           ; BSR set to: 15
  6541                           ;inc\CANlib.h: 510: TXB2D1 = data[1];
  6542  0013A2  0100               	movlb	0	; () banked
  6543  0013A4  EE20 F001          	lfsr	2,1
  6544  0013A8  5172               	movf	CANsendMessage@data& (0+255),w,b
  6545  0013AA  26D9               	addwf	fsr2l,f,c
  6546  0013AC  5173               	movf	(CANsendMessage@data+1)& (0+255),w,b
  6547  0013AE  22DA               	addwfc	fsr2h,f,c
  6548  0013B0  50DF               	movf	indf2,w,c
  6549  0013B2  010F               	movlb	15	; () banked
  6550  0013B4  6F27               	movwf	39,b	;volatile
  6551                           
  6552                           ; BSR set to: 15
  6553                           ;inc\CANlib.h: 511: TXB2D2 = data[2];
  6554  0013B6  0100               	movlb	0	; () banked
  6555  0013B8  EE20 F002          	lfsr	2,2
  6556  0013BC  5172               	movf	CANsendMessage@data& (0+255),w,b
  6557  0013BE  26D9               	addwf	fsr2l,f,c
  6558  0013C0  5173               	movf	(CANsendMessage@data+1)& (0+255),w,b
  6559  0013C2  22DA               	addwfc	fsr2h,f,c
  6560  0013C4  50DF               	movf	indf2,w,c
  6561  0013C6  010F               	movlb	15	; () banked
  6562  0013C8  6F28               	movwf	40,b	;volatile
  6563                           
  6564                           ; BSR set to: 15
  6565                           ;inc\CANlib.h: 512: TXB2D3 = data[3];
  6566  0013CA  0100               	movlb	0	; () banked
  6567  0013CC  EE20 F003          	lfsr	2,3
  6568  0013D0  5172               	movf	CANsendMessage@data& (0+255),w,b
  6569  0013D2  26D9               	addwf	fsr2l,f,c
  6570  0013D4  5173               	movf	(CANsendMessage@data+1)& (0+255),w,b
  6571  0013D6  22DA               	addwfc	fsr2h,f,c
  6572  0013D8  50DF               	movf	indf2,w,c
  6573  0013DA  010F               	movlb	15	; () banked
  6574  0013DC  6F29               	movwf	41,b	;volatile
  6575                           
  6576                           ; BSR set to: 15
  6577                           ;inc\CANlib.h: 513: TXB2D4 = data[4];
  6578  0013DE  0100               	movlb	0	; () banked
  6579  0013E0  EE20 F004          	lfsr	2,4
  6580  0013E4  5172               	movf	CANsendMessage@data& (0+255),w,b
  6581  0013E6  26D9               	addwf	fsr2l,f,c
  6582  0013E8  5173               	movf	(CANsendMessage@data+1)& (0+255),w,b
  6583  0013EA  22DA               	addwfc	fsr2h,f,c
  6584  0013EC  50DF               	movf	indf2,w,c
  6585  0013EE  010F               	movlb	15	; () banked
  6586  0013F0  6F2A               	movwf	42,b	;volatile
  6587                           
  6588                           ; BSR set to: 15
  6589                           ;inc\CANlib.h: 514: TXB2D5 = data[5];
  6590  0013F2  0100               	movlb	0	; () banked
  6591  0013F4  EE20 F005          	lfsr	2,5
  6592  0013F8  5172               	movf	CANsendMessage@data& (0+255),w,b
  6593  0013FA  26D9               	addwf	fsr2l,f,c
  6594  0013FC  5173               	movf	(CANsendMessage@data+1)& (0+255),w,b
  6595  0013FE  22DA               	addwfc	fsr2h,f,c
  6596  001400  50DF               	movf	indf2,w,c
  6597  001402  010F               	movlb	15	; () banked
  6598  001404  6F2B               	movwf	43,b	;volatile
  6599                           
  6600                           ; BSR set to: 15
  6601                           ;inc\CANlib.h: 515: TXB2D6 = data[6];
  6602  001406  0100               	movlb	0	; () banked
  6603  001408  EE20 F006          	lfsr	2,6
  6604  00140C  5172               	movf	CANsendMessage@data& (0+255),w,b
  6605  00140E  26D9               	addwf	fsr2l,f,c
  6606  001410  5173               	movf	(CANsendMessage@data+1)& (0+255),w,b
  6607  001412  22DA               	addwfc	fsr2h,f,c
  6608  001414  50DF               	movf	indf2,w,c
  6609  001416  010F               	movlb	15	; () banked
  6610  001418  6F2C               	movwf	44,b	;volatile
  6611                           
  6612                           ; BSR set to: 15
  6613                           ;inc\CANlib.h: 516: TXB2D7 = data[7];
  6614  00141A  0100               	movlb	0	; () banked
  6615  00141C  EE20 F007          	lfsr	2,7
  6616  001420  5172               	movf	CANsendMessage@data& (0+255),w,b
  6617  001422  26D9               	addwf	fsr2l,f,c
  6618  001424  5173               	movf	(CANsendMessage@data+1)& (0+255),w,b
  6619  001426  22DA               	addwfc	fsr2h,f,c
  6620  001428  50DF               	movf	indf2,w,c
  6621  00142A  010F               	movlb	15	; () banked
  6622  00142C  6F2D               	movwf	45,b	;volatile
  6623                           
  6624                           ; BSR set to: 15
  6625                           ;inc\CANlib.h: 518: TXB2CONbits.TXREQ = 0x01;
  6626  00142E  010F               	movlb	15	; () banked
  6627  001430  8720               	bsf	32,3,b	;volatile
  6628                           
  6629                           ; BSR set to: 15
  6630                           ;inc\CANlib.h: 520: return;
  6631  001432  0012               	return	
  6632  001434                     __end_of_CANsendMessage:
  6633                           	opt stack 0
  6634                           tblptru	equ	0xFF8
  6635                           tblptrh	equ	0xFF7
  6636                           tblptrl	equ	0xFF6
  6637                           tablat	equ	0xFF5
  6638                           prodh	equ	0xFF4
  6639                           prodl	equ	0xFF3
  6640                           intcon	equ	0xFF2
  6641                           intcon2	equ	0xFF1
  6642                           postinc0	equ	0xFEE
  6643                           wreg	equ	0xFE8
  6644                           indf2	equ	0xFDF
  6645                           fsr2h	equ	0xFDA
  6646                           fsr2l	equ	0xFD9
  6647                           status	equ	0xFD8
  6648                           
  6649 ;; *************** function _CANisTxReady *****************
  6650 ;; Defined at:
  6651 ;;		line 1154 in file "K:/Tesina/LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
  6652 ;; Parameters:    Size  Location     Type
  6653 ;;		None
  6654 ;; Auto vars:     Size  Location     Type
  6655 ;;		None
  6656 ;; Return value:  Size  Location     Type
  6657 ;;                  1    wreg      unsigned char 
  6658 ;; Registers used:
  6659 ;;		wreg, status,2
  6660 ;; Tracked objects:
  6661 ;;		On entry : 0/0
  6662 ;;		On exit  : 0/0
  6663 ;;		Unchanged: 0/0
  6664 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  6665 ;;      Params:         0       0       0       0
  6666 ;;      Locals:         0       1       0       0
  6667 ;;      Temps:          0       0       0       0
  6668 ;;      Totals:         0       1       0       0
  6669 ;;Total ram usage:        1 bytes
  6670 ;; Hardware stack levels used:    1
  6671 ;; Hardware stack levels required when called:    3
  6672 ;; This function calls:
  6673 ;;		Nothing
  6674 ;; This function is called by:
  6675 ;;		_main
  6676 ;;		_send_data
  6677 ;;		_battery_measure
  6678 ;; This function uses a non-reentrant model
  6679 ;;
  6680                           
  6681                           	psect	text12
  6682  0026FC                     __ptext12:
  6683                           	opt stack 0
  6684  0026FC                     _CANisTxReady:
  6685                           	opt stack 26
  6686                           
  6687                           ;inc\CANlib.h: 1156: return (!TXB0CONbits.TXREQ || !TXB1CONbits.TXREQ || !TXB2CONbits.TX
      +                          REQ);
  6688                           
  6689                           ; BSR set to: 15
  6690                           ;incstack = 0
  6691  0026FC  0E01               	movlw	1
  6692  0026FE  0100               	movlb	0	; () banked
  6693  002700  6F6E               	movwf	_CANisTxReady$2955& (0+255),b
  6694                           
  6695                           ; BSR set to: 0
  6696  002702  010F               	movlb	15	; () banked
  6697  002704  A740               	btfss	64,3,b	;volatile
  6698  002706  D009               	goto	l558
  6699                           
  6700                           ; BSR set to: 15
  6701  002708  010F               	movlb	15	; () banked
  6702  00270A  A730               	btfss	48,3,b	;volatile
  6703  00270C  D006               	goto	l558
  6704                           
  6705                           ; BSR set to: 15
  6706  00270E  010F               	movlb	15	; () banked
  6707  002710  A720               	btfss	32,3,b	;volatile
  6708  002712  D003               	goto	l558
  6709                           
  6710                           ; BSR set to: 15
  6711  002714  0E00               	movlw	0
  6712  002716  0100               	movlb	0	; () banked
  6713  002718  6F6E               	movwf	_CANisTxReady$2955& (0+255),b
  6714  00271A                     l558:
  6715  00271A  0100               	movlb	0	; () banked
  6716  00271C  516E               	movf	_CANisTxReady$2955& (0+255),w,b
  6717  00271E  0012               	return	
  6718  002720                     __end_of_CANisTxReady:
  6719                           	opt stack 0
  6720                           tblptru	equ	0xFF8
  6721                           tblptrh	equ	0xFF7
  6722                           tblptrl	equ	0xFF6
  6723                           tablat	equ	0xFF5
  6724                           prodh	equ	0xFF4
  6725                           prodl	equ	0xFF3
  6726                           intcon	equ	0xFF2
  6727                           intcon2	equ	0xFF1
  6728                           postinc0	equ	0xFEE
  6729                           wreg	equ	0xFE8
  6730                           indf2	equ	0xFDF
  6731                           fsr2h	equ	0xFDA
  6732                           fsr2l	equ	0xFD9
  6733                           status	equ	0xFD8
  6734                           
  6735 ;; *************** function _abs *****************
  6736 ;; Defined at:
  6737 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\abs.c"
  6738 ;; Parameters:    Size  Location     Type
  6739 ;;  a               2   14[BANK0 ] int 
  6740 ;; Auto vars:     Size  Location     Type
  6741 ;;		None
  6742 ;; Return value:  Size  Location     Type
  6743 ;;                  2   14[BANK0 ] int 
  6744 ;; Registers used:
  6745 ;;		wreg, status,2, status,0
  6746 ;; Tracked objects:
  6747 ;;		On entry : 0/0
  6748 ;;		On exit  : 0/0
  6749 ;;		Unchanged: 0/0
  6750 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  6751 ;;      Params:         0       2       0       0
  6752 ;;      Locals:         0       0       0       0
  6753 ;;      Temps:          0       2       0       0
  6754 ;;      Totals:         0       4       0       0
  6755 ;;Total ram usage:        4 bytes
  6756 ;; Hardware stack levels used:    1
  6757 ;; Hardware stack levels required when called:    3
  6758 ;; This function calls:
  6759 ;;		Nothing
  6760 ;; This function is called by:
  6761 ;;		_main
  6762 ;; This function uses a non-reentrant model
  6763 ;;
  6764                           
  6765                           	psect	text13
  6766  0026D0                     __ptext13:
  6767                           	opt stack 0
  6768  0026D0                     _abs:
  6769                           	opt stack 27
  6770                           
  6771                           ; BSR set to: 0
  6772                           ;incstack = 0
  6773  0026D0  0100               	movlb	0	; () banked
  6774  0026D2  AF6F               	btfss	(abs@a+1)& (0+255),7,b
  6775  0026D4  D00E               	goto	l792
  6776                           
  6777                           ; BSR set to: 0
  6778  0026D6  C06E  F070         	movff	abs@a,??_abs
  6779  0026DA  C06F  F071         	movff	abs@a+1,??_abs+1
  6780  0026DE  0100               	movlb	0	; () banked
  6781  0026E0  1F70               	comf	??_abs& (0+255),f,b
  6782  0026E2  1F71               	comf	(??_abs+1)& (0+255),f,b
  6783  0026E4  4B70               	infsnz	??_abs& (0+255),f,b
  6784  0026E6  2B71               	incf	(??_abs+1)& (0+255),f,b
  6785  0026E8  C070  F06E         	movff	??_abs,?_abs
  6786  0026EC  C071  F06F         	movff	??_abs+1,?_abs+1
  6787  0026F0  0012               	return	
  6788  0026F2                     l792:
  6789                           
  6790                           ; BSR set to: 0
  6791  0026F2  C06E  F06E         	movff	abs@a,?_abs
  6792  0026F6  C06F  F06F         	movff	abs@a+1,?_abs+1
  6793                           
  6794                           ; BSR set to: 0
  6795  0026FA  0012               	return		;funcret
  6796  0026FC                     __end_of_abs:
  6797                           	opt stack 0
  6798                           tblptru	equ	0xFF8
  6799                           tblptrh	equ	0xFF7
  6800                           tblptrl	equ	0xFF6
  6801                           tablat	equ	0xFF5
  6802                           prodh	equ	0xFF4
  6803                           prodl	equ	0xFF3
  6804                           intcon	equ	0xFF2
  6805                           intcon2	equ	0xFF1
  6806                           postinc0	equ	0xFEE
  6807                           wreg	equ	0xFE8
  6808                           indf2	equ	0xFDF
  6809                           fsr2h	equ	0xFDA
  6810                           fsr2l	equ	0xFD9
  6811                           status	equ	0xFD8
  6812                           
  6813 ;; *************** function _SetOutputEPWM1 *****************
  6814 ;; Defined at:
  6815 ;;		line 18 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\pic18\plib\PWM\ew1setoc.c"
  6816 ;; Parameters:    Size  Location     Type
  6817 ;;  outputconfig    1    wreg     unsigned char 
  6818 ;;  outputmode      1   14[BANK0 ] unsigned char 
  6819 ;; Auto vars:     Size  Location     Type
  6820 ;;  outputconfig    1   15[BANK0 ] unsigned char 
  6821 ;; Return value:  Size  Location     Type
  6822 ;;		None               void
  6823 ;; Registers used:
  6824 ;;		wreg, status,2, status,0
  6825 ;; Tracked objects:
  6826 ;;		On entry : 0/0
  6827 ;;		On exit  : 0/0
  6828 ;;		Unchanged: 0/0
  6829 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  6830 ;;      Params:         0       1       0       0
  6831 ;;      Locals:         0       1       0       0
  6832 ;;      Temps:          0       0       0       0
  6833 ;;      Totals:         0       2       0       0
  6834 ;;Total ram usage:        2 bytes
  6835 ;; Hardware stack levels used:    1
  6836 ;; Hardware stack levels required when called:    3
  6837 ;; This function calls:
  6838 ;;		Nothing
  6839 ;; This function is called by:
  6840 ;;		_main
  6841 ;; This function uses a non-reentrant model
  6842 ;;
  6843                           
  6844                           	psect	text14
  6845  00257E                     __ptext14:
  6846                           	opt stack 0
  6847  00257E                     _SetOutputEPWM1:
  6848                           	opt stack 27
  6849                           
  6850                           ; BSR set to: 0
  6851                           ;incstack = 0
  6852                           ;SetOutputEPWM1@outputconfig stored from wreg
  6853  00257E  0100               	movlb	0	; () banked
  6854  002580  6F6F               	movwf	SetOutputEPWM1@outputconfig& (0+255),b
  6855  002582  50BA               	movf	4026,w,c	;volatile
  6856  002584  09C0               	iorlw	192
  6857  002586  0100               	movlb	0	; () banked
  6858  002588  156F               	andwf	SetOutputEPWM1@outputconfig& (0+255),w,b
  6859  00258A  6EBA               	movwf	4026,c	;volatile
  6860  00258C  50BA               	movf	4026,w,c	;volatile
  6861  00258E  090F               	iorlw	15
  6862  002590  0100               	movlb	0	; () banked
  6863  002592  156E               	andwf	SetOutputEPWM1@outputmode& (0+255),w,b
  6864  002594  6EBA               	movwf	4026,c	;volatile
  6865  002596  0E3F               	movlw	63
  6866  002598  0100               	movlb	0	; () banked
  6867  00259A  196F               	xorwf	SetOutputEPWM1@outputconfig& (0+255),w,b
  6868  00259C  A4D8               	btfss	status,2,c
  6869  00259E  D002               	goto	l4784
  6870                           
  6871                           ; BSR set to: 0
  6872  0025A0  9895               	bcf	3989,4,c	;volatile
  6873  0025A2  0012               	return	
  6874  0025A4                     l4784:
  6875                           
  6876                           ; BSR set to: 0
  6877  0025A4  0EBF               	movlw	191
  6878  0025A6  0100               	movlb	0	; () banked
  6879  0025A8  196F               	xorwf	SetOutputEPWM1@outputconfig& (0+255),w,b
  6880  0025AA  A4D8               	btfss	status,2,c
  6881  0025AC  D003               	goto	l4788
  6882                           
  6883                           ; BSR set to: 0
  6884  0025AE  9895               	bcf	3989,4,c	;volatile
  6885  0025B0  9A95               	bcf	3989,5,c	;volatile
  6886  0025B2  0012               	return	
  6887  0025B4                     l4788:
  6888                           
  6889                           ; BSR set to: 0
  6890  0025B4  0E7F               	movlw	127
  6891  0025B6  0100               	movlb	0	; () banked
  6892  0025B8  196F               	xorwf	SetOutputEPWM1@outputconfig& (0+255),w,b
  6893  0025BA  B4D8               	btfsc	status,2,c
  6894  0025BC  D004               	goto	l726
  6895                           
  6896                           ; BSR set to: 0
  6897  0025BE  0100               	movlb	0	; () banked
  6898  0025C0  296F               	incf	SetOutputEPWM1@outputconfig& (0+255),w,b
  6899  0025C2  A4D8               	btfss	status,2,c
  6900  0025C4  0012               	return	
  6901  0025C6                     l726:
  6902                           
  6903                           ; BSR set to: 0
  6904  0025C6  9895               	bcf	3989,4,c	;volatile
  6905  0025C8  9A95               	bcf	3989,5,c	;volatile
  6906  0025CA  9C95               	bcf	3989,6,c	;volatile
  6907  0025CC  9E95               	bcf	3989,7,c	;volatile
  6908                           
  6909                           ; BSR set to: 0
  6910                           
  6911                           ; BSR set to: 0
  6912  0025CE  0012               	return	
  6913  0025D0                     __end_of_SetOutputEPWM1:
  6914                           	opt stack 0
  6915                           tblptru	equ	0xFF8
  6916                           tblptrh	equ	0xFF7
  6917                           tblptrl	equ	0xFF6
  6918                           tablat	equ	0xFF5
  6919                           prodh	equ	0xFF4
  6920                           prodl	equ	0xFF3
  6921                           intcon	equ	0xFF2
  6922                           intcon2	equ	0xFF1
  6923                           postinc0	equ	0xFEE
  6924                           wreg	equ	0xFE8
  6925                           indf2	equ	0xFDF
  6926                           fsr2h	equ	0xFDA
  6927                           fsr2l	equ	0xFD9
  6928                           status	equ	0xFD8
  6929                           
  6930 ;; *************** function _SetDCEPWM1 *****************
  6931 ;; Defined at:
  6932 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\pic18\plib\PWM\ew1setdc.c"
  6933 ;; Parameters:    Size  Location     Type
  6934 ;;  dutycycle       2   14[BANK0 ] unsigned int 
  6935 ;; Auto vars:     Size  Location     Type
  6936 ;;  DCycle          2   18[BANK0 ] struct PWMDC
  6937 ;; Return value:  Size  Location     Type
  6938 ;;		None               void
  6939 ;; Registers used:
  6940 ;;		wreg, status,2, status,0
  6941 ;; Tracked objects:
  6942 ;;		On entry : 0/0
  6943 ;;		On exit  : 0/0
  6944 ;;		Unchanged: 0/0
  6945 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  6946 ;;      Params:         0       2       0       0
  6947 ;;      Locals:         0       2       0       0
  6948 ;;      Temps:          0       2       0       0
  6949 ;;      Totals:         0       6       0       0
  6950 ;;Total ram usage:        6 bytes
  6951 ;; Hardware stack levels used:    1
  6952 ;; Hardware stack levels required when called:    3
  6953 ;; This function calls:
  6954 ;;		Nothing
  6955 ;; This function is called by:
  6956 ;;		_main
  6957 ;; This function uses a non-reentrant model
  6958 ;;
  6959                           
  6960                           	psect	text15
  6961  00261C                     __ptext15:
  6962                           	opt stack 0
  6963  00261C                     _SetDCEPWM1:
  6964                           	opt stack 27
  6965                           
  6966                           ; BSR set to: 0
  6967                           ;incstack = 0
  6968  00261C  C06E  F070         	movff	SetDCEPWM1@dutycycle,??_SetDCEPWM1
  6969  002620  C06F  F071         	movff	SetDCEPWM1@dutycycle+1,??_SetDCEPWM1+1
  6970  002624  0E06               	movlw	6
  6971  002626                     u6035:
  6972  002626  90D8               	bcf	status,0,c
  6973  002628  0100               	movlb	0	; () banked
  6974  00262A  3770               	rlcf	??_SetDCEPWM1& (0+255),f,b
  6975  00262C  3771               	rlcf	(??_SetDCEPWM1+1)& (0+255),f,b
  6976  00262E  2EE8               	decfsz	wreg,f,c
  6977  002630  D7FA               	goto	u6035
  6978  002632  C070  F072         	movff	??_SetDCEPWM1,SetDCEPWM1@DCycle
  6979  002636  C071  F073         	movff	??_SetDCEPWM1+1,SetDCEPWM1@DCycle+1
  6980                           
  6981                           ; BSR set to: 0
  6982  00263A  C073  FFBB         	movff	SetDCEPWM1@DCycle+1,4027	;volatile
  6983  00263E  C072  F070         	movff	SetDCEPWM1@DCycle,??_SetDCEPWM1
  6984  002642  0100               	movlb	0	; () banked
  6985  002644  90D8               	bcf	status,0,c
  6986  002646  3370               	rrcf	??_SetDCEPWM1& (0+255),f,b
  6987  002648  0100               	movlb	0	; () banked
  6988  00264A  90D8               	bcf	status,0,c
  6989  00264C  3370               	rrcf	??_SetDCEPWM1& (0+255),f,b
  6990  00264E  0E30               	movlw	48
  6991  002650  0100               	movlb	0	; () banked
  6992  002652  1770               	andwf	??_SetDCEPWM1& (0+255),f,b
  6993  002654  50BA               	movf	4026,w,c	;volatile
  6994  002656  0BCF               	andlw	207
  6995  002658  0100               	movlb	0	; () banked
  6996  00265A  1170               	iorwf	??_SetDCEPWM1& (0+255),w,b
  6997  00265C  6EBA               	movwf	4026,c	;volatile
  6998                           
  6999                           ; BSR set to: 0
  7000  00265E  0012               	return		;funcret
  7001  002660                     __end_of_SetDCEPWM1:
  7002                           	opt stack 0
  7003                           tblptru	equ	0xFF8
  7004                           tblptrh	equ	0xFF7
  7005                           tblptrl	equ	0xFF6
  7006                           tablat	equ	0xFF5
  7007                           prodh	equ	0xFF4
  7008                           prodl	equ	0xFF3
  7009                           intcon	equ	0xFF2
  7010                           intcon2	equ	0xFF1
  7011                           postinc0	equ	0xFEE
  7012                           wreg	equ	0xFE8
  7013                           indf2	equ	0xFDF
  7014                           fsr2h	equ	0xFDA
  7015                           fsr2l	equ	0xFD9
  7016                           status	equ	0xFD8
  7017                           
  7018 ;; *************** function _OpenTimer2 *****************
  7019 ;; Defined at:
  7020 ;;		line 17 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\pic18\plib\Timers\t2open.c"
  7021 ;; Parameters:    Size  Location     Type
  7022 ;;  config          1    wreg     unsigned char 
  7023 ;; Auto vars:     Size  Location     Type
  7024 ;;  config          1   14[BANK0 ] unsigned char 
  7025 ;; Return value:  Size  Location     Type
  7026 ;;		None               void
  7027 ;; Registers used:
  7028 ;;		wreg, status,2, status,0
  7029 ;; Tracked objects:
  7030 ;;		On entry : 0/0
  7031 ;;		On exit  : 0/0
  7032 ;;		Unchanged: 0/0
  7033 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  7034 ;;      Params:         0       0       0       0
  7035 ;;      Locals:         0       1       0       0
  7036 ;;      Temps:          0       0       0       0
  7037 ;;      Totals:         0       1       0       0
  7038 ;;Total ram usage:        1 bytes
  7039 ;; Hardware stack levels used:    1
  7040 ;; Hardware stack levels required when called:    3
  7041 ;; This function calls:
  7042 ;;		Nothing
  7043 ;; This function is called by:
  7044 ;;		_main
  7045 ;; This function uses a non-reentrant model
  7046 ;;
  7047                           
  7048                           	psect	text16
  7049  002720                     __ptext16:
  7050                           	opt stack 0
  7051  002720                     _OpenTimer2:
  7052                           	opt stack 27
  7053                           
  7054                           ; BSR set to: 0
  7055                           ;incstack = 0
  7056                           ;OpenTimer2@config stored from wreg
  7057  002720  0100               	movlb	0	; () banked
  7058  002722  6F6E               	movwf	OpenTimer2@config& (0+255),b
  7059  002724  0100               	movlb	0	; () banked
  7060  002726  516E               	movf	OpenTimer2@config& (0+255),w,b
  7061  002728  0BFB               	andlw	251
  7062  00272A  6ECA               	movwf	4042,c	;volatile
  7063                           
  7064                           ; BSR set to: 0
  7065  00272C  0E00               	movlw	0
  7066  00272E  6ECC               	movwf	4044,c	;volatile
  7067                           
  7068                           ; BSR set to: 0
  7069  002730  929E               	bcf	3998,1,c	;volatile
  7070                           
  7071                           ; BSR set to: 0
  7072  002732  0100               	movlb	0	; () banked
  7073  002734  AF6E               	btfss	OpenTimer2@config& (0+255),7,b
  7074  002736  D002               	goto	l740
  7075                           
  7076                           ; BSR set to: 0
  7077  002738  829D               	bsf	3997,1,c	;volatile
  7078  00273A  D001               	goto	l741
  7079  00273C                     l740:
  7080                           
  7081                           ; BSR set to: 0
  7082  00273C  929D               	bcf	3997,1,c	;volatile
  7083  00273E                     l741:
  7084                           
  7085                           ; BSR set to: 0
  7086  00273E  84CA               	bsf	4042,2,c	;volatile
  7087                           
  7088                           ; BSR set to: 0
  7089  002740  0012               	return		;funcret
  7090  002742                     __end_of_OpenTimer2:
  7091                           	opt stack 0
  7092                           tblptru	equ	0xFF8
  7093                           tblptrh	equ	0xFF7
  7094                           tblptrl	equ	0xFF6
  7095                           tablat	equ	0xFF5
  7096                           prodh	equ	0xFF4
  7097                           prodl	equ	0xFF3
  7098                           intcon	equ	0xFF2
  7099                           intcon2	equ	0xFF1
  7100                           postinc0	equ	0xFEE
  7101                           wreg	equ	0xFE8
  7102                           indf2	equ	0xFDF
  7103                           fsr2h	equ	0xFDA
  7104                           fsr2l	equ	0xFD9
  7105                           status	equ	0xFD8
  7106                           
  7107 ;; *************** function _OpenEPWM1 *****************
  7108 ;; Defined at:
  7109 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\pic18\plib\PWM\ew1open.c"
  7110 ;; Parameters:    Size  Location     Type
  7111 ;;  period          1    wreg     unsigned char 
  7112 ;; Auto vars:     Size  Location     Type
  7113 ;;  period          1   14[BANK0 ] unsigned char 
  7114 ;; Return value:  Size  Location     Type
  7115 ;;		None               void
  7116 ;; Registers used:
  7117 ;;		wreg, status,2
  7118 ;; Tracked objects:
  7119 ;;		On entry : 0/0
  7120 ;;		On exit  : 0/0
  7121 ;;		Unchanged: 0/0
  7122 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  7123 ;;      Params:         0       0       0       0
  7124 ;;      Locals:         0       1       0       0
  7125 ;;      Temps:          0       0       0       0
  7126 ;;      Totals:         0       1       0       0
  7127 ;;Total ram usage:        1 bytes
  7128 ;; Hardware stack levels used:    1
  7129 ;; Hardware stack levels required when called:    3
  7130 ;; This function calls:
  7131 ;;		Nothing
  7132 ;; This function is called by:
  7133 ;;		_main
  7134 ;; This function uses a non-reentrant model
  7135 ;;
  7136                           
  7137                           	psect	text17
  7138  00276E                     __ptext17:
  7139                           	opt stack 0
  7140  00276E                     _OpenEPWM1:
  7141                           	opt stack 27
  7142                           
  7143                           ; BSR set to: 0
  7144                           ;incstack = 0
  7145                           ;OpenEPWM1@period stored from wreg
  7146  00276E  0100               	movlb	0	; () banked
  7147  002770  6F6E               	movwf	OpenEPWM1@period& (0+255),b
  7148  002772  0E0C               	movlw	12
  7149  002774  6EBA               	movwf	4026,c	;volatile
  7150  002776  94CA               	bcf	4042,2,c	;volatile
  7151  002778  C06E  FFCB         	movff	OpenEPWM1@period,4043	;volatile
  7152  00277C  84CA               	bsf	4042,2,c	;volatile
  7153  00277E  0012               	return		;funcret
  7154  002780                     __end_of_OpenEPWM1:
  7155                           	opt stack 0
  7156                           tblptru	equ	0xFF8
  7157                           tblptrh	equ	0xFF7
  7158                           tblptrl	equ	0xFF6
  7159                           tablat	equ	0xFF5
  7160                           prodh	equ	0xFF4
  7161                           prodl	equ	0xFF3
  7162                           intcon	equ	0xFF2
  7163                           intcon2	equ	0xFF1
  7164                           postinc0	equ	0xFEE
  7165                           wreg	equ	0xFE8
  7166                           indf2	equ	0xFDF
  7167                           fsr2h	equ	0xFDA
  7168                           fsr2l	equ	0xFD9
  7169                           status	equ	0xFD8
  7170                           
  7171 ;; *************** function _CANisTXwarningON *****************
  7172 ;; Defined at:
  7173 ;;		line 1119 in file "K:/Tesina/LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
  7174 ;; Parameters:    Size  Location     Type
  7175 ;;		None
  7176 ;; Auto vars:     Size  Location     Type
  7177 ;;		None
  7178 ;; Return value:  Size  Location     Type
  7179 ;;                  1    wreg      unsigned char 
  7180 ;; Registers used:
  7181 ;;		wreg
  7182 ;; Tracked objects:
  7183 ;;		On entry : 0/0
  7184 ;;		On exit  : 0/0
  7185 ;;		Unchanged: 0/0
  7186 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  7187 ;;      Params:         0       0       0       0
  7188 ;;      Locals:         0       0       0       0
  7189 ;;      Temps:          0       0       0       0
  7190 ;;      Totals:         0       0       0       0
  7191 ;;Total ram usage:        0 bytes
  7192 ;; Hardware stack levels used:    1
  7193 ;; Hardware stack levels required when called:    3
  7194 ;; This function calls:
  7195 ;;		Nothing
  7196 ;; This function is called by:
  7197 ;;		_main
  7198 ;; This function uses a non-reentrant model
  7199 ;;
  7200                           
  7201                           	psect	text18
  7202  002780                     __ptext18:
  7203                           	opt stack 0
  7204  002780                     _CANisTXwarningON:
  7205                           	opt stack 27
  7206                           
  7207                           ;inc\CANlib.h: 1121: return (COMSTATbits.TXWARN);
  7208                           
  7209                           ;incstack = 0
  7210  002780  A474               	btfss	3956,2,c	;volatile
  7211  002782  D002               	goto	u5950
  7212  002784  0E01               	movlw	1
  7213  002786  0012               	return	
  7214  002788                     u5950:
  7215  002788  0E00               	movlw	0
  7216  00278A  0012               	return	
  7217  00278C                     __end_of_CANisTXwarningON:
  7218                           	opt stack 0
  7219                           tblptru	equ	0xFF8
  7220                           tblptrh	equ	0xFF7
  7221                           tblptrl	equ	0xFF6
  7222                           tablat	equ	0xFF5
  7223                           prodh	equ	0xFF4
  7224                           prodl	equ	0xFF3
  7225                           intcon	equ	0xFF2
  7226                           intcon2	equ	0xFF1
  7227                           postinc0	equ	0xFEE
  7228                           wreg	equ	0xFE8
  7229                           indf2	equ	0xFDF
  7230                           fsr2h	equ	0xFDA
  7231                           fsr2l	equ	0xFD9
  7232                           status	equ	0xFD8
  7233                           
  7234 ;; *************** function _CANisRXwarningON *****************
  7235 ;; Defined at:
  7236 ;;		line 1127 in file "K:/Tesina/LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
  7237 ;; Parameters:    Size  Location     Type
  7238 ;;		None
  7239 ;; Auto vars:     Size  Location     Type
  7240 ;;		None
  7241 ;; Return value:  Size  Location     Type
  7242 ;;                  1    wreg      unsigned char 
  7243 ;; Registers used:
  7244 ;;		wreg
  7245 ;; Tracked objects:
  7246 ;;		On entry : 0/0
  7247 ;;		On exit  : 0/0
  7248 ;;		Unchanged: 0/0
  7249 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  7250 ;;      Params:         0       0       0       0
  7251 ;;      Locals:         0       0       0       0
  7252 ;;      Temps:          0       0       0       0
  7253 ;;      Totals:         0       0       0       0
  7254 ;;Total ram usage:        0 bytes
  7255 ;; Hardware stack levels used:    1
  7256 ;; Hardware stack levels required when called:    3
  7257 ;; This function calls:
  7258 ;;		Nothing
  7259 ;; This function is called by:
  7260 ;;		_main
  7261 ;; This function uses a non-reentrant model
  7262 ;;
  7263                           
  7264                           	psect	text19
  7265  00278C                     __ptext19:
  7266                           	opt stack 0
  7267  00278C                     _CANisRXwarningON:
  7268                           	opt stack 27
  7269                           
  7270                           ;inc\CANlib.h: 1129: return (COMSTATbits.RXWARN);
  7271                           
  7272                           ;incstack = 0
  7273  00278C  A274               	btfss	3956,1,c	;volatile
  7274  00278E  D002               	goto	u5960
  7275  002790  0E01               	movlw	1
  7276  002792  0012               	return	
  7277  002794                     u5960:
  7278  002794  0E00               	movlw	0
  7279  002796  0012               	return	
  7280  002798                     __end_of_CANisRXwarningON:
  7281                           	opt stack 0
  7282                           tblptru	equ	0xFF8
  7283                           tblptrh	equ	0xFF7
  7284                           tblptrl	equ	0xFF6
  7285                           tablat	equ	0xFF5
  7286                           prodh	equ	0xFF4
  7287                           prodl	equ	0xFF3
  7288                           intcon	equ	0xFF2
  7289                           intcon2	equ	0xFF1
  7290                           postinc0	equ	0xFEE
  7291                           wreg	equ	0xFE8
  7292                           indf2	equ	0xFDF
  7293                           fsr2h	equ	0xFDA
  7294                           fsr2l	equ	0xFD9
  7295                           status	equ	0xFD8
  7296                           
  7297 ;; *************** function _ISR_bassa *****************
  7298 ;; Defined at:
  7299 ;;		line 68 in file "motore.c"
  7300 ;; Parameters:    Size  Location     Type
  7301 ;;		None
  7302 ;; Auto vars:     Size  Location     Type
  7303 ;;		None
  7304 ;; Return value:  Size  Location     Type
  7305 ;;		None               void
  7306 ;; Registers used:
  7307 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7308 ;; Tracked objects:
  7309 ;;		On entry : 0/0
  7310 ;;		On exit  : 0/0
  7311 ;;		Unchanged: 0/0
  7312 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  7313 ;;      Params:         0       0       0       0
  7314 ;;      Locals:         0       0       0       0
  7315 ;;      Temps:         17       0       0       0
  7316 ;;      Totals:        17       0       0       0
  7317 ;;Total ram usage:       17 bytes
  7318 ;; Hardware stack levels used:    1
  7319 ;; Hardware stack levels required when called:    2
  7320 ;; This function calls:
  7321 ;;		_CANisRxReady
  7322 ;;		_CANreceiveMessage
  7323 ;; This function is called by:
  7324 ;;		Interrupt level 1
  7325 ;; This function uses a non-reentrant model
  7326 ;;
  7327                           
  7328                           	psect	intcodelo
  7329  000018                     __pintcodelo:
  7330                           	opt stack 0
  7331  000018                     _ISR_bassa:
  7332                           	opt stack 25
  7333                           
  7334                           ;incstack = 0
  7335  000018  8049               	bsf	btemp,0,c	;set compiler interrupt flag (level 1)
  7336  00001A  CFD8 F036          	movff	status,??_ISR_bassa
  7337  00001E  CFE8 F037          	movff	wreg,??_ISR_bassa+1
  7338  000022  CFE0 F038          	movff	bsr,??_ISR_bassa+2
  7339  000026  CFFA F039          	movff	pclath,??_ISR_bassa+3
  7340  00002A  CFFB F03A          	movff	pclatu,??_ISR_bassa+4
  7341  00002E  CFE9 F03B          	movff	fsr0l,??_ISR_bassa+5
  7342  000032  CFEA F03C          	movff	fsr0h,??_ISR_bassa+6
  7343  000036  CFE1 F03D          	movff	fsr1l,??_ISR_bassa+7
  7344  00003A  CFE2 F03E          	movff	fsr1h,??_ISR_bassa+8
  7345  00003E  CFD9 F03F          	movff	fsr2l,??_ISR_bassa+9
  7346  000042  CFDA F040          	movff	fsr2h,??_ISR_bassa+10
  7347  000046  CFF3 F041          	movff	prodl,??_ISR_bassa+11
  7348  00004A  CFF4 F042          	movff	prodh,??_ISR_bassa+12
  7349  00004E  CFF6 F043          	movff	tblptrl,??_ISR_bassa+13
  7350  000052  CFF7 F044          	movff	tblptrh,??_ISR_bassa+14
  7351  000056  CFF8 F045          	movff	tblptru,??_ISR_bassa+15
  7352  00005A  CFF5 F046          	movff	tablat,??_ISR_bassa+16
  7353                           
  7354                           ;motore.c: 69: if ((PIR3bits.RXB0IF == 1) || (PIR3bits.RXB1IF == 1)) {
  7355  00005E  A0A4               	btfss	4004,0,c	;volatile
  7356  000060  B2A4               	btfsc	4004,1,c	;volatile
  7357  000062  D001               	goto	i1l3730
  7358  000064  D078               	goto	i1l648
  7359  000066                     i1l3730:
  7360                           
  7361                           ;motore.c: 70: if (CANisRxReady()) {
  7362  000066  ECAC  F013         	call	_CANisRxReady	;wreg free
  7363  00006A  0900               	iorlw	0
  7364  00006C  B4D8               	btfsc	status,2,c
  7365  00006E  D066               	goto	i1l638
  7366                           
  7367                           ;motore.c: 71: CANreceiveMessage(&msg);
  7368  000070  0E13               	movlw	low _msg
  7369  000072  6E2A               	movwf	CANreceiveMessage@msg,c
  7370  000074  0E00               	movlw	high _msg
  7371  000076  6E2B               	movwf	CANreceiveMessage@msg+1,c
  7372  000078  EC1A  F00A         	call	_CANreceiveMessage	;wreg free
  7373                           
  7374                           ;motore.c: 72: if (msg.RTR == 1) {
  7375  00007C  0421               	decf	_msg+14,w,c
  7376  00007E  A4D8               	btfss	status,2,c
  7377  000080  D00D               	goto	i1l3738
  7378                           
  7379                           ;motore.c: 73: id = msg.identifier;
  7380  000082  C013  F099         	movff	_msg,_id
  7381  000086  C014  F09A         	movff	_msg+1,_id+1
  7382  00008A  C015  F09B         	movff	_msg+2,_id+2
  7383  00008E  C016  F09C         	movff	_msg+3,_id+3
  7384                           
  7385                           ;motore.c: 74: remote_frame = msg.RTR;
  7386  000092  A021               	btfss	_msg+14,0,c
  7387  000094  D002               	goto	i1u421_20
  7388  000096  8247               	bsf	_remote_frame/(0+8),_remote_frame& (0+7),c
  7389  000098  D001               	goto	i1l3738
  7390  00009A                     i1u421_20:
  7391  00009A  9247               	bcf	_remote_frame/(0+8),_remote_frame& (0+7),c
  7392  00009C                     i1l3738:
  7393                           
  7394                           ;motore.c: 75: }
  7395                           ;motore.c: 76: if (msg.identifier == 0b00000000000000000000000000110) {
  7396  00009C  0E06               	movlw	6
  7397  00009E  1813               	xorwf	_msg,w,c
  7398  0000A0  1014               	iorwf	_msg+1,w,c
  7399  0000A2  1015               	iorwf	_msg+2,w,c
  7400  0000A4  1016               	iorwf	_msg+3,w,c
  7401  0000A6  B4D8               	btfsc	status,2,c
  7402                           
  7403                           ;motore.c: 77: misura = 1;
  7404  0000A8  8047               	bsf	_misura/(0+8),_misura& (0+7),c
  7405                           
  7406                           ;motore.c: 78: }
  7407                           ;motore.c: 79: if (msg.identifier == 0b00000000000000000000000000101) {
  7408  0000AA  0E05               	movlw	5
  7409  0000AC  1813               	xorwf	_msg,w,c
  7410  0000AE  1014               	iorwf	_msg+1,w,c
  7411  0000B0  1015               	iorwf	_msg+2,w,c
  7412  0000B2  1016               	iorwf	_msg+3,w,c
  7413  0000B4  A4D8               	btfss	status,2,c
  7414  0000B6  D00F               	goto	i1l3748
  7415                           
  7416                           ;motore.c: 80: misura = 0;
  7417  0000B8  9047               	bcf	_misura/(0+8),_misura& (0+7),c
  7418                           
  7419                           ;motore.c: 81: data_array[0] = counter;
  7420  0000BA  C009  F022         	movff	_counter,_data_array
  7421                           
  7422                           ;motore.c: 82: data_array[1] = counter >> 8;
  7423  0000BE  C00A  F023         	movff	_counter+1,_data_array+1
  7424                           
  7425                           ;motore.c: 83: data_array[2] = counter >> 8;
  7426  0000C2  C00A  F024         	movff	_counter+1,_data_array+2
  7427                           
  7428                           ;motore.c: 84: counter = 0;
  7429  0000C6  0E00               	movlw	0
  7430  0000C8  6E09               	movwf	_counter,c
  7431  0000CA  0E00               	movlw	0
  7432  0000CC  6E0A               	movwf	_counter+1,c
  7433  0000CE  0E00               	movlw	0
  7434  0000D0  6E0B               	movwf	_counter+2,c
  7435  0000D2  0E00               	movlw	0
  7436  0000D4  6E0C               	movwf	_counter+3,c
  7437  0000D6                     i1l3748:
  7438                           
  7439                           ;motore.c: 85: }
  7440                           ;motore.c: 86: if (msg.identifier == 0b00000000000000000000000001000) {
  7441  0000D6  0E08               	movlw	8
  7442  0000D8  1813               	xorwf	_msg,w,c
  7443  0000DA  1014               	iorwf	_msg+1,w,c
  7444  0000DC  1015               	iorwf	_msg+2,w,c
  7445  0000DE  1016               	iorwf	_msg+3,w,c
  7446  0000E0  B4D8               	btfsc	status,2,c
  7447                           
  7448                           ;motore.c: 87: data_array[0] = currentSpeed;
  7449  0000E2  C048  F022         	movff	_currentSpeed,_data_array
  7450                           
  7451                           ;motore.c: 88: }
  7452                           ;motore.c: 89: if (msg.identifier == 0b00000000000000000000000000010) {
  7453  0000E6  0E02               	movlw	2
  7454  0000E8  1813               	xorwf	_msg,w,c
  7455  0000EA  1014               	iorwf	_msg+1,w,c
  7456  0000EC  1015               	iorwf	_msg+2,w,c
  7457  0000EE  1016               	iorwf	_msg+3,w,c
  7458  0000F0  A4D8               	btfss	status,2,c
  7459  0000F2  D00E               	goto	i1l3756
  7460                           
  7461                           ;motore.c: 90: currentSpeed = msg.data[0];
  7462  0000F4  C017  F048         	movff	_msg+4,_currentSpeed
  7463                           
  7464                           ;motore.c: 91: dir = msg.data[1];
  7465  0000F8  C018  F0AD         	movff	_msg+5,_dir
  7466  0000FC  0100               	movlb	0	; () banked
  7467  0000FE  6BAE               	clrf	(_dir+1)& (0+255),b
  7468                           
  7469                           ;motore.c: 92: previousTimeCounter = timeCounter;
  7470  000100  C00D  F09D         	movff	_timeCounter,_previousTimeCounter
  7471  000104  C00E  F09E         	movff	_timeCounter+1,_previousTimeCounter+1
  7472  000108  C00F  F09F         	movff	_timeCounter+2,_previousTimeCounter+2
  7473  00010C  C010  F0A0         	movff	_timeCounter+3,_previousTimeCounter+3
  7474  000110                     i1l3756:
  7475                           
  7476                           ;motore.c: 93: }
  7477                           ;motore.c: 94: if (msg.identifier == 0b00000000000000000000000000001) {
  7478  000110  0413               	decf	_msg,w,c
  7479  000112  1014               	iorwf	_msg+1,w,c
  7480  000114  1015               	iorwf	_msg+2,w,c
  7481  000116  1016               	iorwf	_msg+3,w,c
  7482  000118  A4D8               	btfss	status,2,c
  7483  00011A  D003               	goto	i1l3762
  7484                           
  7485                           ;motore.c: 95: currentSpeed = 0;
  7486  00011C  0E00               	movlw	0
  7487  00011E  6E48               	movwf	_currentSpeed,c
  7488                           
  7489                           ;motore.c: 96: PORTAbits.RA1 = 1;
  7490  000120  8280               	bsf	3968,1,c	;volatile
  7491  000122                     i1l3762:
  7492                           
  7493                           ;motore.c: 97: }
  7494                           ;motore.c: 98: if (msg.identifier == 0b00000000000000000000000000010) {
  7495  000122  0E02               	movlw	2
  7496  000124  1813               	xorwf	_msg,w,c
  7497  000126  1014               	iorwf	_msg+1,w,c
  7498  000128  1015               	iorwf	_msg+2,w,c
  7499  00012A  1016               	iorwf	_msg+3,w,c
  7500  00012C  A4D8               	btfss	status,2,c
  7501  00012E  D004               	goto	i1l646
  7502                           
  7503                           ;motore.c: 99: left_speed = msg.data[0];
  7504  000130  C017  F0B4         	movff	_msg+4,_left_speed
  7505                           
  7506                           ;motore.c: 100: right_speed = msg.data[1];
  7507  000134  C018  F0B7         	movff	_msg+5,_right_speed
  7508  000138                     i1l646:
  7509                           
  7510                           ;motore.c: 104: }
  7511                           ;motore.c: 105: PIR3bits.RXB0IF = 0;
  7512  000138  90A4               	bcf	4004,0,c	;volatile
  7513                           
  7514                           ;motore.c: 106: PIR3bits.RXB1IF = 0;
  7515  00013A  92A4               	bcf	4004,1,c	;volatile
  7516  00013C                     i1l638:
  7517                           
  7518                           ;motore.c: 107: }
  7519                           ;motore.c: 108: if (PIR2bits.TMR3IF) {
  7520  00013C  A2A1               	btfss	4001,1,c	;volatile
  7521  00013E  D00B               	goto	i1l648
  7522                           
  7523                           ;motore.c: 109: timeCounter++;
  7524  000140  0E01               	movlw	1
  7525  000142  260D               	addwf	_timeCounter,f,c
  7526  000144  0E00               	movlw	0
  7527  000146  220E               	addwfc	_timeCounter+1,f,c
  7528  000148  220F               	addwfc	_timeCounter+2,f,c
  7529  00014A  2210               	addwfc	_timeCounter+3,f,c
  7530                           
  7531                           ;motore.c: 110: TMR3H = 0x63;
  7532  00014C  0E63               	movlw	99
  7533  00014E  6EB3               	movwf	4019,c	;volatile
  7534                           
  7535                           ;motore.c: 111: TMR3L = 0xC0;
  7536  000150  0EC0               	movlw	192
  7537  000152  6EB2               	movwf	4018,c	;volatile
  7538                           
  7539                           ;motore.c: 112: PIR2bits.TMR3IF = 0;
  7540  000154  92A1               	bcf	4001,1,c	;volatile
  7541  000156                     i1l648:
  7542  000156  C046  FFF5         	movff	??_ISR_bassa+16,tablat
  7543  00015A  C045  FFF8         	movff	??_ISR_bassa+15,tblptru
  7544  00015E  C044  FFF7         	movff	??_ISR_bassa+14,tblptrh
  7545  000162  C043  FFF6         	movff	??_ISR_bassa+13,tblptrl
  7546  000166  C042  FFF4         	movff	??_ISR_bassa+12,prodh
  7547  00016A  C041  FFF3         	movff	??_ISR_bassa+11,prodl
  7548  00016E  C040  FFDA         	movff	??_ISR_bassa+10,fsr2h
  7549  000172  C03F  FFD9         	movff	??_ISR_bassa+9,fsr2l
  7550  000176  C03E  FFE2         	movff	??_ISR_bassa+8,fsr1h
  7551  00017A  C03D  FFE1         	movff	??_ISR_bassa+7,fsr1l
  7552  00017E  C03C  FFEA         	movff	??_ISR_bassa+6,fsr0h
  7553  000182  C03B  FFE9         	movff	??_ISR_bassa+5,fsr0l
  7554  000186  C03A  FFFB         	movff	??_ISR_bassa+4,pclatu
  7555  00018A  C039  FFFA         	movff	??_ISR_bassa+3,pclath
  7556  00018E  C038  FFE0         	movff	??_ISR_bassa+2,bsr
  7557  000192  C037  FFE8         	movff	??_ISR_bassa+1,wreg
  7558  000196  C036  FFD8         	movff	??_ISR_bassa,status
  7559  00019A  9049               	bcf	btemp,0,c	;clear compiler interrupt flag (level 1)
  7560  00019C  0010               	retfie	
  7561  00019E                     __end_of_ISR_bassa:
  7562                           	opt stack 0
  7563                           pclatu	equ	0xFFB
  7564                           pclath	equ	0xFFA
  7565                           tblptru	equ	0xFF8
  7566                           tblptrh	equ	0xFF7
  7567                           tblptrl	equ	0xFF6
  7568                           tablat	equ	0xFF5
  7569                           prodh	equ	0xFF4
  7570                           prodl	equ	0xFF3
  7571                           intcon	equ	0xFF2
  7572                           intcon2	equ	0xFF1
  7573                           postinc0	equ	0xFEE
  7574                           fsr0h	equ	0xFEA
  7575                           fsr0l	equ	0xFE9
  7576                           wreg	equ	0xFE8
  7577                           fsr1h	equ	0xFE2
  7578                           fsr1l	equ	0xFE1
  7579                           bsr	equ	0xFE0
  7580                           indf2	equ	0xFDF
  7581                           fsr2h	equ	0xFDA
  7582                           fsr2l	equ	0xFD9
  7583                           status	equ	0xFD8
  7584                           
  7585 ;; *************** function _CANreceiveMessage *****************
  7586 ;; Defined at:
  7587 ;;		line 528 in file "K:/Tesina/LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
  7588 ;; Parameters:    Size  Location     Type
  7589 ;;  msg             2    0[COMRAM] PTR struct .
  7590 ;;		 -> msg(15), 
  7591 ;; Auto vars:     Size  Location     Type
  7592 ;;  tamp            1   11[COMRAM] unsigned char 
  7593 ;;  error           1   10[COMRAM] unsigned char 
  7594 ;; Return value:  Size  Location     Type
  7595 ;;                  1    wreg      unsigned char 
  7596 ;; Registers used:
  7597 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7598 ;; Tracked objects:
  7599 ;;		On entry : 0/0
  7600 ;;		On exit  : 0/0
  7601 ;;		Unchanged: 0/0
  7602 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  7603 ;;      Params:         2       0       0       0
  7604 ;;      Locals:         2       0       0       0
  7605 ;;      Temps:          8       0       0       0
  7606 ;;      Totals:        12       0       0       0
  7607 ;;Total ram usage:       12 bytes
  7608 ;; Hardware stack levels used:    1
  7609 ;; Hardware stack levels required when called:    1
  7610 ;; This function calls:
  7611 ;;		Nothing
  7612 ;; This function is called by:
  7613 ;;		_ISR_bassa
  7614 ;; This function uses a non-reentrant model
  7615 ;;
  7616                           
  7617                           	psect	text21
  7618  001434                     __ptext21:
  7619                           	opt stack 0
  7620  001434                     _CANreceiveMessage:
  7621                           	opt stack 25
  7622                           
  7623                           ;inc\CANlib.h: 530: BYTE tamp;
  7624                           ;inc\CANlib.h: 531: BYTE error = 0;
  7625                           
  7626                           ;incstack = 0
  7627  001434  0E00               	movlw	0
  7628  001436  6E34               	movwf	CANreceiveMessage@error,c
  7629                           
  7630                           ;inc\CANlib.h: 533: if (COMSTATbits.RXB0OVFL == 0x01)
  7631  001438  BE74               	btfsc	3956,7,c	;volatile
  7632                           
  7633                           ;inc\CANlib.h: 534: error |= CAN_RX_BUFFER_1_OVFL;
  7634  00143A  8034               	bsf	CANreceiveMessage@error,0,c
  7635                           
  7636                           ;inc\CANlib.h: 536: if (COMSTATbits.RXB1OVFL == 0x01)
  7637  00143C  BC74               	btfsc	3956,6,c	;volatile
  7638                           
  7639                           ;inc\CANlib.h: 537: error |= CAN_RX_BUFFER_2_OVFL;
  7640  00143E  8234               	bsf	CANreceiveMessage@error,1,c
  7641                           
  7642                           ;inc\CANlib.h: 540: if (RXB1CONbits.RXFUL ==0x01)
  7643  001440  010F               	movlb	15	; () banked
  7644  001442  AF50               	btfss	80,7,b	;volatile
  7645  001444  D143               	goto	i1l412
  7646                           
  7647                           ; BSR set to: 15
  7648                           ;inc\CANlib.h: 541: {
  7649                           ;inc\CANlib.h: 542: msg->identifier = 0;
  7650  001446  C02A  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7651  00144A  C02B  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7652  00144E  6ADE               	clrf	postinc2,c
  7653  001450  6ADE               	clrf	postinc2,c
  7654  001452  6ADE               	clrf	postinc2,c
  7655  001454  6ADD               	clrf	postdec2,c
  7656                           
  7657                           ; BSR set to: 15
  7658                           ;inc\CANlib.h: 543: msg->data[0] =RXB1D0;
  7659  001456  EE20 F004          	lfsr	2,4
  7660  00145A  502A               	movf	CANreceiveMessage@msg,w,c
  7661  00145C  26D9               	addwf	fsr2l,f,c
  7662  00145E  502B               	movf	CANreceiveMessage@msg+1,w,c
  7663  001460  22DA               	addwfc	fsr2h,f,c
  7664  001462  CF56 FFDF          	movff	3926,indf2	;volatile
  7665                           
  7666                           ; BSR set to: 15
  7667                           ;inc\CANlib.h: 544: msg->data[1] =RXB1D1;
  7668  001466  EE20 F005          	lfsr	2,5
  7669  00146A  502A               	movf	CANreceiveMessage@msg,w,c
  7670  00146C  26D9               	addwf	fsr2l,f,c
  7671  00146E  502B               	movf	CANreceiveMessage@msg+1,w,c
  7672  001470  22DA               	addwfc	fsr2h,f,c
  7673  001472  CF57 FFDF          	movff	3927,indf2	;volatile
  7674                           
  7675                           ; BSR set to: 15
  7676                           ;inc\CANlib.h: 545: msg->data[2] =RXB1D2;
  7677  001476  EE20 F006          	lfsr	2,6
  7678  00147A  502A               	movf	CANreceiveMessage@msg,w,c
  7679  00147C  26D9               	addwf	fsr2l,f,c
  7680  00147E  502B               	movf	CANreceiveMessage@msg+1,w,c
  7681  001480  22DA               	addwfc	fsr2h,f,c
  7682  001482  CF58 FFDF          	movff	3928,indf2	;volatile
  7683                           
  7684                           ; BSR set to: 15
  7685                           ;inc\CANlib.h: 546: msg->data[3] =RXB1D3;
  7686  001486  EE20 F007          	lfsr	2,7
  7687  00148A  502A               	movf	CANreceiveMessage@msg,w,c
  7688  00148C  26D9               	addwf	fsr2l,f,c
  7689  00148E  502B               	movf	CANreceiveMessage@msg+1,w,c
  7690  001490  22DA               	addwfc	fsr2h,f,c
  7691  001492  CF59 FFDF          	movff	3929,indf2	;volatile
  7692                           
  7693                           ; BSR set to: 15
  7694                           ;inc\CANlib.h: 547: msg->data[4] =RXB1D4;
  7695  001496  EE20 F008          	lfsr	2,8
  7696  00149A  502A               	movf	CANreceiveMessage@msg,w,c
  7697  00149C  26D9               	addwf	fsr2l,f,c
  7698  00149E  502B               	movf	CANreceiveMessage@msg+1,w,c
  7699  0014A0  22DA               	addwfc	fsr2h,f,c
  7700  0014A2  CF5A FFDF          	movff	3930,indf2	;volatile
  7701                           
  7702                           ; BSR set to: 15
  7703                           ;inc\CANlib.h: 548: msg->data[5] =RXB1D5;
  7704  0014A6  EE20 F009          	lfsr	2,9
  7705  0014AA  502A               	movf	CANreceiveMessage@msg,w,c
  7706  0014AC  26D9               	addwf	fsr2l,f,c
  7707  0014AE  502B               	movf	CANreceiveMessage@msg+1,w,c
  7708  0014B0  22DA               	addwfc	fsr2h,f,c
  7709  0014B2  CF5B FFDF          	movff	3931,indf2	;volatile
  7710                           
  7711                           ; BSR set to: 15
  7712                           ;inc\CANlib.h: 549: msg->data[6] =RXB1D6;
  7713  0014B6  EE20 F00A          	lfsr	2,10
  7714  0014BA  502A               	movf	CANreceiveMessage@msg,w,c
  7715  0014BC  26D9               	addwf	fsr2l,f,c
  7716  0014BE  502B               	movf	CANreceiveMessage@msg+1,w,c
  7717  0014C0  22DA               	addwfc	fsr2h,f,c
  7718  0014C2  CF5C FFDF          	movff	3932,indf2	;volatile
  7719                           
  7720                           ; BSR set to: 15
  7721                           ;inc\CANlib.h: 550: msg->data[7] =RXB1D7;
  7722  0014C6  EE20 F00B          	lfsr	2,11
  7723  0014CA  502A               	movf	CANreceiveMessage@msg,w,c
  7724  0014CC  26D9               	addwf	fsr2l,f,c
  7725  0014CE  502B               	movf	CANreceiveMessage@msg+1,w,c
  7726  0014D0  22DA               	addwfc	fsr2h,f,c
  7727  0014D2  CF5D FFDF          	movff	3933,indf2	;volatile
  7728                           
  7729                           ; BSR set to: 15
  7730                           ;inc\CANlib.h: 552: msg->RTR = RXB1DLCbits.RXRTR;
  7731  0014D6  EE20 F00E          	lfsr	2,14
  7732  0014DA  502A               	movf	CANreceiveMessage@msg,w,c
  7733  0014DC  26D9               	addwf	fsr2l,f,c
  7734  0014DE  502B               	movf	CANreceiveMessage@msg+1,w,c
  7735  0014E0  22DA               	addwfc	fsr2h,f,c
  7736  0014E2  010F               	movlb	15	; () banked
  7737  0014E4  AD55               	btfss	85,6,b	;volatile
  7738  0014E6  D002               	goto	i1u376_20
  7739  0014E8  0E01               	movlw	1
  7740  0014EA  D001               	goto	i1u376_26
  7741  0014EC                     i1u376_20:
  7742  0014EC  0E00               	movlw	0
  7743  0014EE                     i1u376_26:
  7744  0014EE  6EDF               	movwf	indf2,c
  7745                           
  7746                           ; BSR set to: 15
  7747                           ;inc\CANlib.h: 554: msg->length = RXB1DLC & 0x0F;
  7748  0014F0  EE20 F00D          	lfsr	2,13
  7749  0014F4  502A               	movf	CANreceiveMessage@msg,w,c
  7750  0014F6  26D9               	addwf	fsr2l,f,c
  7751  0014F8  502B               	movf	CANreceiveMessage@msg+1,w,c
  7752  0014FA  22DA               	addwfc	fsr2h,f,c
  7753  0014FC  010F               	movlb	15	; () banked
  7754  0014FE  5155               	movf	85,w,b	;volatile
  7755  001500  0B0F               	andlw	15
  7756  001502  6EDF               	movwf	indf2,c
  7757                           
  7758                           ; BSR set to: 15
  7759                           ;inc\CANlib.h: 556: msg->type = RXB1SIDLbits.EXID;
  7760  001504  EE20 F00C          	lfsr	2,12
  7761  001508  502A               	movf	CANreceiveMessage@msg,w,c
  7762  00150A  26D9               	addwf	fsr2l,f,c
  7763  00150C  502B               	movf	CANreceiveMessage@msg+1,w,c
  7764  00150E  22DA               	addwfc	fsr2h,f,c
  7765  001510  010F               	movlb	15	; () banked
  7766  001512  A752               	btfss	82,3,b	;volatile
  7767  001514  D002               	goto	i1u377_20
  7768  001516  0E01               	movlw	1
  7769  001518  D001               	goto	i1u377_26
  7770  00151A                     i1u377_20:
  7771  00151A  0E00               	movlw	0
  7772  00151C                     i1u377_26:
  7773  00151C  6EDF               	movwf	indf2,c
  7774                           
  7775                           ; BSR set to: 15
  7776                           ;inc\CANlib.h: 558: if (RXB1SIDLbits.EXID == 0)
  7777  00151E  010F               	movlb	15	; () banked
  7778  001520  B752               	btfsc	82,3,b	;volatile
  7779  001522  D044               	goto	i1l3442
  7780                           
  7781                           ; BSR set to: 15
  7782                           ;inc\CANlib.h: 559: {
  7783                           ;inc\CANlib.h: 560: msg->identifier = ((unsigned long)RXB1SIDH)<< 3;
  7784  001524  CF51 F02C          	movff	3921,??_CANreceiveMessage	;volatile
  7785  001528  6A2D               	clrf	(??_CANreceiveMessage+1)& (0+255),c
  7786  00152A  6A2E               	clrf	(??_CANreceiveMessage+2)& (0+255),c
  7787  00152C  6A2F               	clrf	(??_CANreceiveMessage+3)& (0+255),c
  7788  00152E  0E03               	movlw	3
  7789  001530                     i1u379_25:
  7790  001530  90D8               	bcf	status,0,c
  7791  001532  362C               	rlcf	??_CANreceiveMessage,f,c
  7792  001534  362D               	rlcf	??_CANreceiveMessage+1,f,c
  7793  001536  362E               	rlcf	??_CANreceiveMessage+2,f,c
  7794  001538  362F               	rlcf	??_CANreceiveMessage+3,f,c
  7795  00153A  2EE8               	decfsz	wreg,f,c
  7796  00153C  D7F9               	goto	i1u379_25
  7797  00153E  C02A  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7798  001542  C02B  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7799  001546  C02C  FFDE         	movff	??_CANreceiveMessage,postinc2
  7800  00154A  C02D  FFDE         	movff	??_CANreceiveMessage+1,postinc2
  7801  00154E  C02E  FFDE         	movff	??_CANreceiveMessage+2,postinc2
  7802  001552  C02F  FFDE         	movff	??_CANreceiveMessage+3,postinc2
  7803                           
  7804                           ; BSR set to: 15
  7805                           ;inc\CANlib.h: 561: tamp = (RXB1SIDL >> 5 ) & 0x07;
  7806  001556  010F               	movlb	15	; () banked
  7807  001558  3952               	swapf	82,w,b	;volatile
  7808  00155A  42E8               	rrncf	wreg,f,c
  7809  00155C  0B07               	andlw	7
  7810  00155E  0B07               	andlw	7
  7811  001560  6E35               	movwf	CANreceiveMessage@tamp,c
  7812                           
  7813                           ; BSR set to: 15
  7814                           ;inc\CANlib.h: 562: msg->identifier = msg->identifier + tamp;
  7815  001562  C02A  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7816  001566  C02B  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7817  00156A  CFDE F02C          	movff	postinc2,??_CANreceiveMessage
  7818  00156E  CFDE F02D          	movff	postinc2,??_CANreceiveMessage+1
  7819  001572  CFDE F02E          	movff	postinc2,??_CANreceiveMessage+2
  7820  001576  CFDE F02F          	movff	postinc2,??_CANreceiveMessage+3
  7821  00157A  5035               	movf	CANreceiveMessage@tamp,w,c
  7822  00157C  242C               	addwf	??_CANreceiveMessage,w,c
  7823  00157E  6E30               	movwf	(??_CANreceiveMessage+4)& (0+255),c
  7824  001580  0E00               	movlw	0
  7825  001582  202D               	addwfc	??_CANreceiveMessage+1,w,c
  7826  001584  6E31               	movwf	(??_CANreceiveMessage+5)& (0+255),c
  7827  001586  0E00               	movlw	0
  7828  001588  202E               	addwfc	??_CANreceiveMessage+2,w,c
  7829  00158A  6E32               	movwf	(??_CANreceiveMessage+6)& (0+255),c
  7830  00158C  0E00               	movlw	0
  7831  00158E  202F               	addwfc	??_CANreceiveMessage+3,w,c
  7832  001590  6E33               	movwf	(??_CANreceiveMessage+7)& (0+255),c
  7833  001592  C02A  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7834  001596  C02B  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7835  00159A  C030  FFDE         	movff	??_CANreceiveMessage+4,postinc2
  7836  00159E  C031  FFDE         	movff	??_CANreceiveMessage+5,postinc2
  7837  0015A2  C032  FFDE         	movff	??_CANreceiveMessage+6,postinc2
  7838  0015A6  C033  FFDE         	movff	??_CANreceiveMessage+7,postinc2
  7839                           
  7840                           ;inc\CANlib.h: 563: }
  7841  0015AA  D08D               	goto	i1l3468
  7842  0015AC                     i1l3442:
  7843                           
  7844                           ; BSR set to: 15
  7845                           ;inc\CANlib.h: 564: else
  7846                           ;inc\CANlib.h: 565: {
  7847                           ;inc\CANlib.h: 566: msg->identifier = (unsigned long) RXB1EIDL;
  7848  0015AC  CF54 F02C          	movff	3924,??_CANreceiveMessage	;volatile
  7849  0015B0  6A2D               	clrf	(??_CANreceiveMessage+1)& (0+255),c
  7850  0015B2  6A2E               	clrf	(??_CANreceiveMessage+2)& (0+255),c
  7851  0015B4  6A2F               	clrf	(??_CANreceiveMessage+3)& (0+255),c
  7852  0015B6  C02A  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7853  0015BA  C02B  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7854  0015BE  C02C  FFDE         	movff	??_CANreceiveMessage,postinc2
  7855  0015C2  C02D  FFDE         	movff	??_CANreceiveMessage+1,postinc2
  7856  0015C6  C02E  FFDE         	movff	??_CANreceiveMessage+2,postinc2
  7857  0015CA  C02F  FFDE         	movff	??_CANreceiveMessage+3,postinc2
  7858                           
  7859                           ; BSR set to: 15
  7860                           ;inc\CANlib.h: 567: msg->identifier += ((unsigned long) RXB1EIDH) << 8;
  7861  0015CE  CF53 F02C          	movff	3923,??_CANreceiveMessage	;volatile
  7862  0015D2  6A2D               	clrf	(??_CANreceiveMessage+1)& (0+255),c
  7863  0015D4  6A2E               	clrf	(??_CANreceiveMessage+2)& (0+255),c
  7864  0015D6  6A2F               	clrf	(??_CANreceiveMessage+3)& (0+255),c
  7865  0015D8  C02E  F02F         	movff	??_CANreceiveMessage+2,??_CANreceiveMessage+3
  7866  0015DC  C02D  F02E         	movff	??_CANreceiveMessage+1,??_CANreceiveMessage+2
  7867  0015E0  C02C  F02D         	movff	??_CANreceiveMessage,??_CANreceiveMessage+1
  7868  0015E4  6A2C               	clrf	??_CANreceiveMessage,c
  7869  0015E6  C02A  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7870  0015EA  C02B  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7871  0015EE  502C               	movf	??_CANreceiveMessage,w,c
  7872  0015F0  26DE               	addwf	postinc2,f,c
  7873  0015F2  502D               	movf	??_CANreceiveMessage+1,w,c
  7874  0015F4  22DE               	addwfc	postinc2,f,c
  7875  0015F6  502E               	movf	??_CANreceiveMessage+2,w,c
  7876  0015F8  22DE               	addwfc	postinc2,f,c
  7877  0015FA  502F               	movf	??_CANreceiveMessage+3,w,c
  7878  0015FC  22DE               	addwfc	postinc2,f,c
  7879                           
  7880                           ; BSR set to: 15
  7881                           ;inc\CANlib.h: 569: if (RXB1SIDLbits.EID16)
  7882  0015FE  010F               	movlb	15	; () banked
  7883  001600  A152               	btfss	82,0,b	;volatile
  7884  001602  D00C               	goto	i1l3450
  7885                           
  7886                           ; BSR set to: 15
  7887                           ;inc\CANlib.h: 570: msg->identifier |= 0x00010000;
  7888  001604  C02A  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7889  001608  C02B  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7890  00160C  0E00               	movlw	0
  7891  00160E  12DE               	iorwf	postinc2,f,c
  7892  001610  0E00               	movlw	0
  7893  001612  12DE               	iorwf	postinc2,f,c
  7894  001614  0E01               	movlw	1
  7895  001616  12DE               	iorwf	postinc2,f,c
  7896  001618  0E00               	movlw	0
  7897  00161A  12DE               	iorwf	postinc2,f,c
  7898  00161C                     i1l3450:
  7899                           
  7900                           ; BSR set to: 15
  7901                           ;inc\CANlib.h: 571: if (RXB1SIDLbits.EID17)
  7902  00161C  010F               	movlb	15	; () banked
  7903  00161E  A352               	btfss	82,1,b	;volatile
  7904  001620  D00C               	goto	i1l3454
  7905                           
  7906                           ; BSR set to: 15
  7907                           ;inc\CANlib.h: 572: msg->identifier |= 0x00020000;
  7908  001622  C02A  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7909  001626  C02B  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7910  00162A  0E00               	movlw	0
  7911  00162C  12DE               	iorwf	postinc2,f,c
  7912  00162E  0E00               	movlw	0
  7913  001630  12DE               	iorwf	postinc2,f,c
  7914  001632  0E02               	movlw	2
  7915  001634  12DE               	iorwf	postinc2,f,c
  7916  001636  0E00               	movlw	0
  7917  001638  12DE               	iorwf	postinc2,f,c
  7918  00163A                     i1l3454:
  7919                           
  7920                           ; BSR set to: 15
  7921                           ;inc\CANlib.h: 573: if (RXB1SIDLbits.SID0)
  7922  00163A  010F               	movlb	15	; () banked
  7923  00163C  AB52               	btfss	82,5,b	;volatile
  7924  00163E  D00C               	goto	i1l3458
  7925                           
  7926                           ; BSR set to: 15
  7927                           ;inc\CANlib.h: 574: msg->identifier |= 0x00040000;
  7928  001640  C02A  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7929  001644  C02B  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7930  001648  0E00               	movlw	0
  7931  00164A  12DE               	iorwf	postinc2,f,c
  7932  00164C  0E00               	movlw	0
  7933  00164E  12DE               	iorwf	postinc2,f,c
  7934  001650  0E04               	movlw	4
  7935  001652  12DE               	iorwf	postinc2,f,c
  7936  001654  0E00               	movlw	0
  7937  001656  12DE               	iorwf	postinc2,f,c
  7938  001658                     i1l3458:
  7939                           
  7940                           ; BSR set to: 15
  7941                           ;inc\CANlib.h: 575: if (RXB1SIDLbits.SID1)
  7942  001658  010F               	movlb	15	; () banked
  7943  00165A  AD52               	btfss	82,6,b	;volatile
  7944  00165C  D00C               	goto	i1l3462
  7945                           
  7946                           ; BSR set to: 15
  7947                           ;inc\CANlib.h: 576: msg->identifier |= 0x00080000;
  7948  00165E  C02A  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7949  001662  C02B  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7950  001666  0E00               	movlw	0
  7951  001668  12DE               	iorwf	postinc2,f,c
  7952  00166A  0E00               	movlw	0
  7953  00166C  12DE               	iorwf	postinc2,f,c
  7954  00166E  0E08               	movlw	8
  7955  001670  12DE               	iorwf	postinc2,f,c
  7956  001672  0E00               	movlw	0
  7957  001674  12DE               	iorwf	postinc2,f,c
  7958  001676                     i1l3462:
  7959                           
  7960                           ; BSR set to: 15
  7961                           ;inc\CANlib.h: 577: if (RXB1SIDLbits.SID2)
  7962  001676  010F               	movlb	15	; () banked
  7963  001678  AF52               	btfss	82,7,b	;volatile
  7964  00167A  D00C               	goto	i1l3466
  7965                           
  7966                           ; BSR set to: 15
  7967                           ;inc\CANlib.h: 578: msg->identifier |= 0x00100000;
  7968  00167C  C02A  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7969  001680  C02B  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7970  001684  0E00               	movlw	0
  7971  001686  12DE               	iorwf	postinc2,f,c
  7972  001688  0E00               	movlw	0
  7973  00168A  12DE               	iorwf	postinc2,f,c
  7974  00168C  0E10               	movlw	16
  7975  00168E  12DE               	iorwf	postinc2,f,c
  7976  001690  0E00               	movlw	0
  7977  001692  12DE               	iorwf	postinc2,f,c
  7978  001694                     i1l3466:
  7979                           
  7980                           ; BSR set to: 15
  7981                           ;inc\CANlib.h: 580: msg->identifier |= ((unsigned long) RXB1SIDH) << 21;
  7982  001694  CF51 F02C          	movff	3921,??_CANreceiveMessage	;volatile
  7983  001698  6A2D               	clrf	(??_CANreceiveMessage+1)& (0+255),c
  7984  00169A  6A2E               	clrf	(??_CANreceiveMessage+2)& (0+255),c
  7985  00169C  6A2F               	clrf	(??_CANreceiveMessage+3)& (0+255),c
  7986  00169E  0E15               	movlw	21
  7987  0016A0                     i1u385_25:
  7988  0016A0  90D8               	bcf	status,0,c
  7989  0016A2  362C               	rlcf	??_CANreceiveMessage,f,c
  7990  0016A4  362D               	rlcf	??_CANreceiveMessage+1,f,c
  7991  0016A6  362E               	rlcf	??_CANreceiveMessage+2,f,c
  7992  0016A8  362F               	rlcf	??_CANreceiveMessage+3,f,c
  7993  0016AA  2EE8               	decfsz	wreg,f,c
  7994  0016AC  D7F9               	goto	i1u385_25
  7995  0016AE  C02A  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7996  0016B2  C02B  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7997  0016B6  502C               	movf	??_CANreceiveMessage,w,c
  7998  0016B8  12DE               	iorwf	postinc2,f,c
  7999  0016BA  502D               	movf	??_CANreceiveMessage+1,w,c
  8000  0016BC  12DE               	iorwf	postinc2,f,c
  8001  0016BE  502E               	movf	??_CANreceiveMessage+2,w,c
  8002  0016C0  12DE               	iorwf	postinc2,f,c
  8003  0016C2  502F               	movf	??_CANreceiveMessage+3,w,c
  8004  0016C4  12DE               	iorwf	postinc2,f,c
  8005  0016C6                     i1l3468:
  8006                           
  8007                           ; BSR set to: 15
  8008                           ;inc\CANlib.h: 581: }
  8009                           ;inc\CANlib.h: 583: RXB1CONbits.RXFUL = 0x00;
  8010  0016C6  010F               	movlb	15	; () banked
  8011  0016C8  9F50               	bcf	80,7,b	;volatile
  8012                           
  8013                           ; BSR set to: 15
  8014                           ;inc\CANlib.h: 584: return (error);
  8015                           ;	Return value of _CANreceiveMessage is never used
  8016  0016CA  0012               	return	
  8017  0016CC                     i1l412:
  8018                           
  8019                           ; BSR set to: 15
  8020                           ;inc\CANlib.h: 585: }
  8021                           ;inc\CANlib.h: 587: if (RXB0CONbits.RXFUL ==0x01)
  8022  0016CC  AE60               	btfss	3936,7,c	;volatile
  8023  0016CE  0012               	return	
  8024                           
  8025                           ; BSR set to: 15
  8026                           ;inc\CANlib.h: 588: {
  8027                           ;inc\CANlib.h: 589: msg->identifier = 0;
  8028  0016D0  C02A  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8029  0016D4  C02B  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8030  0016D8  6ADE               	clrf	postinc2,c
  8031  0016DA  6ADE               	clrf	postinc2,c
  8032  0016DC  6ADE               	clrf	postinc2,c
  8033  0016DE  6ADD               	clrf	postdec2,c
  8034                           
  8035                           ; BSR set to: 15
  8036                           ;inc\CANlib.h: 590: msg->data[0] =RXB0D0;
  8037  0016E0  EE20 F004          	lfsr	2,4
  8038  0016E4  502A               	movf	CANreceiveMessage@msg,w,c
  8039  0016E6  26D9               	addwf	fsr2l,f,c
  8040  0016E8  502B               	movf	CANreceiveMessage@msg+1,w,c
  8041  0016EA  22DA               	addwfc	fsr2h,f,c
  8042  0016EC  CF66 FFDF          	movff	3942,indf2	;volatile
  8043                           
  8044                           ; BSR set to: 15
  8045                           ;inc\CANlib.h: 591: msg->data[1] =RXB0D1;
  8046  0016F0  EE20 F005          	lfsr	2,5
  8047  0016F4  502A               	movf	CANreceiveMessage@msg,w,c
  8048  0016F6  26D9               	addwf	fsr2l,f,c
  8049  0016F8  502B               	movf	CANreceiveMessage@msg+1,w,c
  8050  0016FA  22DA               	addwfc	fsr2h,f,c
  8051  0016FC  CF67 FFDF          	movff	3943,indf2	;volatile
  8052                           
  8053                           ; BSR set to: 15
  8054                           ;inc\CANlib.h: 592: msg->data[2] =RXB0D2;
  8055  001700  EE20 F006          	lfsr	2,6
  8056  001704  502A               	movf	CANreceiveMessage@msg,w,c
  8057  001706  26D9               	addwf	fsr2l,f,c
  8058  001708  502B               	movf	CANreceiveMessage@msg+1,w,c
  8059  00170A  22DA               	addwfc	fsr2h,f,c
  8060  00170C  CF68 FFDF          	movff	3944,indf2	;volatile
  8061                           
  8062                           ; BSR set to: 15
  8063                           ;inc\CANlib.h: 593: msg->data[3] =RXB0D3;
  8064  001710  EE20 F007          	lfsr	2,7
  8065  001714  502A               	movf	CANreceiveMessage@msg,w,c
  8066  001716  26D9               	addwf	fsr2l,f,c
  8067  001718  502B               	movf	CANreceiveMessage@msg+1,w,c
  8068  00171A  22DA               	addwfc	fsr2h,f,c
  8069  00171C  CF69 FFDF          	movff	3945,indf2	;volatile
  8070                           
  8071                           ; BSR set to: 15
  8072                           ;inc\CANlib.h: 594: msg->data[4] =RXB0D4;
  8073  001720  EE20 F008          	lfsr	2,8
  8074  001724  502A               	movf	CANreceiveMessage@msg,w,c
  8075  001726  26D9               	addwf	fsr2l,f,c
  8076  001728  502B               	movf	CANreceiveMessage@msg+1,w,c
  8077  00172A  22DA               	addwfc	fsr2h,f,c
  8078  00172C  CF6A FFDF          	movff	3946,indf2	;volatile
  8079                           
  8080                           ; BSR set to: 15
  8081                           ;inc\CANlib.h: 595: msg->data[5] =RXB0D5;
  8082  001730  EE20 F009          	lfsr	2,9
  8083  001734  502A               	movf	CANreceiveMessage@msg,w,c
  8084  001736  26D9               	addwf	fsr2l,f,c
  8085  001738  502B               	movf	CANreceiveMessage@msg+1,w,c
  8086  00173A  22DA               	addwfc	fsr2h,f,c
  8087  00173C  CF6B FFDF          	movff	3947,indf2	;volatile
  8088                           
  8089                           ; BSR set to: 15
  8090                           ;inc\CANlib.h: 596: msg->data[6] =RXB0D6;
  8091  001740  EE20 F00A          	lfsr	2,10
  8092  001744  502A               	movf	CANreceiveMessage@msg,w,c
  8093  001746  26D9               	addwf	fsr2l,f,c
  8094  001748  502B               	movf	CANreceiveMessage@msg+1,w,c
  8095  00174A  22DA               	addwfc	fsr2h,f,c
  8096  00174C  CF6C FFDF          	movff	3948,indf2	;volatile
  8097                           
  8098                           ; BSR set to: 15
  8099                           ;inc\CANlib.h: 597: msg->data[7] =RXB0D7;
  8100  001750  EE20 F00B          	lfsr	2,11
  8101  001754  502A               	movf	CANreceiveMessage@msg,w,c
  8102  001756  26D9               	addwf	fsr2l,f,c
  8103  001758  502B               	movf	CANreceiveMessage@msg+1,w,c
  8104  00175A  22DA               	addwfc	fsr2h,f,c
  8105  00175C  CF6D FFDF          	movff	3949,indf2	;volatile
  8106                           
  8107                           ; BSR set to: 15
  8108                           ;inc\CANlib.h: 599: msg->RTR = RXB0DLCbits.RXRTR;
  8109  001760  EE20 F00E          	lfsr	2,14
  8110  001764  502A               	movf	CANreceiveMessage@msg,w,c
  8111  001766  26D9               	addwf	fsr2l,f,c
  8112  001768  502B               	movf	CANreceiveMessage@msg+1,w,c
  8113  00176A  22DA               	addwfc	fsr2h,f,c
  8114  00176C  AC65               	btfss	3941,6,c	;volatile
  8115  00176E  D002               	goto	i1u387_20
  8116  001770  0E01               	movlw	1
  8117  001772  D001               	goto	i1u387_26
  8118  001774                     i1u387_20:
  8119  001774  0E00               	movlw	0
  8120  001776                     i1u387_26:
  8121  001776  6EDF               	movwf	indf2,c
  8122                           
  8123                           ; BSR set to: 15
  8124                           ;inc\CANlib.h: 601: msg->length = RXB0DLC & 0x0F;
  8125  001778  EE20 F00D          	lfsr	2,13
  8126  00177C  502A               	movf	CANreceiveMessage@msg,w,c
  8127  00177E  26D9               	addwf	fsr2l,f,c
  8128  001780  502B               	movf	CANreceiveMessage@msg+1,w,c
  8129  001782  22DA               	addwfc	fsr2h,f,c
  8130  001784  5065               	movf	3941,w,c	;volatile
  8131  001786  0B0F               	andlw	15
  8132  001788  6EDF               	movwf	indf2,c
  8133                           
  8134                           ; BSR set to: 15
  8135                           ;inc\CANlib.h: 603: msg->type = RXB0SIDLbits.EXID;
  8136  00178A  EE20 F00C          	lfsr	2,12
  8137  00178E  502A               	movf	CANreceiveMessage@msg,w,c
  8138  001790  26D9               	addwf	fsr2l,f,c
  8139  001792  502B               	movf	CANreceiveMessage@msg+1,w,c
  8140  001794  22DA               	addwfc	fsr2h,f,c
  8141  001796  A662               	btfss	3938,3,c	;volatile
  8142  001798  D002               	goto	i1u388_20
  8143  00179A  0E01               	movlw	1
  8144  00179C  D001               	goto	i1u388_26
  8145  00179E                     i1u388_20:
  8146  00179E  0E00               	movlw	0
  8147  0017A0                     i1u388_26:
  8148  0017A0  6EDF               	movwf	indf2,c
  8149                           
  8150                           ; BSR set to: 15
  8151                           ;inc\CANlib.h: 605: if (RXB0SIDLbits.EXID == 0)
  8152  0017A2  B662               	btfsc	3938,3,c	;volatile
  8153  0017A4  D043               	goto	i1l3504
  8154                           
  8155                           ; BSR set to: 15
  8156                           ;inc\CANlib.h: 606: {
  8157                           ;inc\CANlib.h: 607: msg->identifier = ((unsigned long)RXB0SIDH)<< 3;
  8158  0017A6  CF61 F02C          	movff	3937,??_CANreceiveMessage	;volatile
  8159  0017AA  6A2D               	clrf	(??_CANreceiveMessage+1)& (0+255),c
  8160  0017AC  6A2E               	clrf	(??_CANreceiveMessage+2)& (0+255),c
  8161  0017AE  6A2F               	clrf	(??_CANreceiveMessage+3)& (0+255),c
  8162  0017B0  0E03               	movlw	3
  8163  0017B2                     i1u390_25:
  8164  0017B2  90D8               	bcf	status,0,c
  8165  0017B4  362C               	rlcf	??_CANreceiveMessage,f,c
  8166  0017B6  362D               	rlcf	??_CANreceiveMessage+1,f,c
  8167  0017B8  362E               	rlcf	??_CANreceiveMessage+2,f,c
  8168  0017BA  362F               	rlcf	??_CANreceiveMessage+3,f,c
  8169  0017BC  2EE8               	decfsz	wreg,f,c
  8170  0017BE  D7F9               	goto	i1u390_25
  8171  0017C0  C02A  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8172  0017C4  C02B  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8173  0017C8  C02C  FFDE         	movff	??_CANreceiveMessage,postinc2
  8174  0017CC  C02D  FFDE         	movff	??_CANreceiveMessage+1,postinc2
  8175  0017D0  C02E  FFDE         	movff	??_CANreceiveMessage+2,postinc2
  8176  0017D4  C02F  FFDE         	movff	??_CANreceiveMessage+3,postinc2
  8177                           
  8178                           ; BSR set to: 15
  8179                           ;inc\CANlib.h: 608: tamp = (RXB0SIDL >> 5 ) & 0x07;
  8180  0017D8  3862               	swapf	3938,w,c	;volatile
  8181  0017DA  42E8               	rrncf	wreg,f,c
  8182  0017DC  0B07               	andlw	7
  8183  0017DE  0B07               	andlw	7
  8184  0017E0  6E35               	movwf	CANreceiveMessage@tamp,c
  8185                           
  8186                           ; BSR set to: 15
  8187                           ;inc\CANlib.h: 609: msg->identifier = msg->identifier + tamp;
  8188  0017E2  C02A  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8189  0017E6  C02B  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8190  0017EA  CFDE F02C          	movff	postinc2,??_CANreceiveMessage
  8191  0017EE  CFDE F02D          	movff	postinc2,??_CANreceiveMessage+1
  8192  0017F2  CFDE F02E          	movff	postinc2,??_CANreceiveMessage+2
  8193  0017F6  CFDE F02F          	movff	postinc2,??_CANreceiveMessage+3
  8194  0017FA  5035               	movf	CANreceiveMessage@tamp,w,c
  8195  0017FC  242C               	addwf	??_CANreceiveMessage,w,c
  8196  0017FE  6E30               	movwf	(??_CANreceiveMessage+4)& (0+255),c
  8197  001800  0E00               	movlw	0
  8198  001802  202D               	addwfc	??_CANreceiveMessage+1,w,c
  8199  001804  6E31               	movwf	(??_CANreceiveMessage+5)& (0+255),c
  8200  001806  0E00               	movlw	0
  8201  001808  202E               	addwfc	??_CANreceiveMessage+2,w,c
  8202  00180A  6E32               	movwf	(??_CANreceiveMessage+6)& (0+255),c
  8203  00180C  0E00               	movlw	0
  8204  00180E  202F               	addwfc	??_CANreceiveMessage+3,w,c
  8205  001810  6E33               	movwf	(??_CANreceiveMessage+7)& (0+255),c
  8206  001812  C02A  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8207  001816  C02B  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8208  00181A  C030  FFDE         	movff	??_CANreceiveMessage+4,postinc2
  8209  00181E  C031  FFDE         	movff	??_CANreceiveMessage+5,postinc2
  8210  001822  C032  FFDE         	movff	??_CANreceiveMessage+6,postinc2
  8211  001826  C033  FFDE         	movff	??_CANreceiveMessage+7,postinc2
  8212                           
  8213                           ;inc\CANlib.h: 610: }
  8214  00182A  D088               	goto	i1l3530
  8215  00182C                     i1l3504:
  8216                           
  8217                           ; BSR set to: 15
  8218                           ;inc\CANlib.h: 611: else
  8219                           ;inc\CANlib.h: 612: {
  8220                           ;inc\CANlib.h: 613: msg->identifier = (unsigned long) RXB0EIDL;
  8221  00182C  CF64 F02C          	movff	3940,??_CANreceiveMessage	;volatile
  8222  001830  6A2D               	clrf	(??_CANreceiveMessage+1)& (0+255),c
  8223  001832  6A2E               	clrf	(??_CANreceiveMessage+2)& (0+255),c
  8224  001834  6A2F               	clrf	(??_CANreceiveMessage+3)& (0+255),c
  8225  001836  C02A  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8226  00183A  C02B  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8227  00183E  C02C  FFDE         	movff	??_CANreceiveMessage,postinc2
  8228  001842  C02D  FFDE         	movff	??_CANreceiveMessage+1,postinc2
  8229  001846  C02E  FFDE         	movff	??_CANreceiveMessage+2,postinc2
  8230  00184A  C02F  FFDE         	movff	??_CANreceiveMessage+3,postinc2
  8231                           
  8232                           ; BSR set to: 15
  8233                           ;inc\CANlib.h: 614: msg->identifier += ((unsigned long) RXB0EIDH) << 8;
  8234  00184E  CF63 F02C          	movff	3939,??_CANreceiveMessage	;volatile
  8235  001852  6A2D               	clrf	(??_CANreceiveMessage+1)& (0+255),c
  8236  001854  6A2E               	clrf	(??_CANreceiveMessage+2)& (0+255),c
  8237  001856  6A2F               	clrf	(??_CANreceiveMessage+3)& (0+255),c
  8238  001858  C02E  F02F         	movff	??_CANreceiveMessage+2,??_CANreceiveMessage+3
  8239  00185C  C02D  F02E         	movff	??_CANreceiveMessage+1,??_CANreceiveMessage+2
  8240  001860  C02C  F02D         	movff	??_CANreceiveMessage,??_CANreceiveMessage+1
  8241  001864  6A2C               	clrf	??_CANreceiveMessage,c
  8242  001866  C02A  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8243  00186A  C02B  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8244  00186E  502C               	movf	??_CANreceiveMessage,w,c
  8245  001870  26DE               	addwf	postinc2,f,c
  8246  001872  502D               	movf	??_CANreceiveMessage+1,w,c
  8247  001874  22DE               	addwfc	postinc2,f,c
  8248  001876  502E               	movf	??_CANreceiveMessage+2,w,c
  8249  001878  22DE               	addwfc	postinc2,f,c
  8250  00187A  502F               	movf	??_CANreceiveMessage+3,w,c
  8251  00187C  22DE               	addwfc	postinc2,f,c
  8252                           
  8253                           ; BSR set to: 15
  8254                           ;inc\CANlib.h: 616: if (RXB0SIDLbits.EID16)
  8255  00187E  A062               	btfss	3938,0,c	;volatile
  8256  001880  D00C               	goto	i1l3512
  8257                           
  8258                           ; BSR set to: 15
  8259                           ;inc\CANlib.h: 617: msg->identifier |= 0x00010000;
  8260  001882  C02A  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8261  001886  C02B  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8262  00188A  0E00               	movlw	0
  8263  00188C  12DE               	iorwf	postinc2,f,c
  8264  00188E  0E00               	movlw	0
  8265  001890  12DE               	iorwf	postinc2,f,c
  8266  001892  0E01               	movlw	1
  8267  001894  12DE               	iorwf	postinc2,f,c
  8268  001896  0E00               	movlw	0
  8269  001898  12DE               	iorwf	postinc2,f,c
  8270  00189A                     i1l3512:
  8271                           
  8272                           ; BSR set to: 15
  8273                           ;inc\CANlib.h: 618: if (RXB0SIDLbits.EID17)
  8274  00189A  A262               	btfss	3938,1,c	;volatile
  8275  00189C  D00C               	goto	i1l3516
  8276                           
  8277                           ; BSR set to: 15
  8278                           ;inc\CANlib.h: 619: msg->identifier |= 0x00020000;
  8279  00189E  C02A  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8280  0018A2  C02B  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8281  0018A6  0E00               	movlw	0
  8282  0018A8  12DE               	iorwf	postinc2,f,c
  8283  0018AA  0E00               	movlw	0
  8284  0018AC  12DE               	iorwf	postinc2,f,c
  8285  0018AE  0E02               	movlw	2
  8286  0018B0  12DE               	iorwf	postinc2,f,c
  8287  0018B2  0E00               	movlw	0
  8288  0018B4  12DE               	iorwf	postinc2,f,c
  8289  0018B6                     i1l3516:
  8290                           
  8291                           ; BSR set to: 15
  8292                           ;inc\CANlib.h: 620: if (RXB0SIDLbits.SID0)
  8293  0018B6  AA62               	btfss	3938,5,c	;volatile
  8294  0018B8  D00C               	goto	i1l3520
  8295                           
  8296                           ; BSR set to: 15
  8297                           ;inc\CANlib.h: 621: msg->identifier |= 0x00040000;
  8298  0018BA  C02A  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8299  0018BE  C02B  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8300  0018C2  0E00               	movlw	0
  8301  0018C4  12DE               	iorwf	postinc2,f,c
  8302  0018C6  0E00               	movlw	0
  8303  0018C8  12DE               	iorwf	postinc2,f,c
  8304  0018CA  0E04               	movlw	4
  8305  0018CC  12DE               	iorwf	postinc2,f,c
  8306  0018CE  0E00               	movlw	0
  8307  0018D0  12DE               	iorwf	postinc2,f,c
  8308  0018D2                     i1l3520:
  8309                           
  8310                           ; BSR set to: 15
  8311                           ;inc\CANlib.h: 622: if (RXB0SIDLbits.SID1)
  8312  0018D2  AC62               	btfss	3938,6,c	;volatile
  8313  0018D4  D00C               	goto	i1l3524
  8314                           
  8315                           ; BSR set to: 15
  8316                           ;inc\CANlib.h: 623: msg->identifier |= 0x00080000;
  8317  0018D6  C02A  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8318  0018DA  C02B  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8319  0018DE  0E00               	movlw	0
  8320  0018E0  12DE               	iorwf	postinc2,f,c
  8321  0018E2  0E00               	movlw	0
  8322  0018E4  12DE               	iorwf	postinc2,f,c
  8323  0018E6  0E08               	movlw	8
  8324  0018E8  12DE               	iorwf	postinc2,f,c
  8325  0018EA  0E00               	movlw	0
  8326  0018EC  12DE               	iorwf	postinc2,f,c
  8327  0018EE                     i1l3524:
  8328                           
  8329                           ; BSR set to: 15
  8330                           ;inc\CANlib.h: 624: if (RXB0SIDLbits.SID2)
  8331  0018EE  AE62               	btfss	3938,7,c	;volatile
  8332  0018F0  D00C               	goto	i1l3528
  8333                           
  8334                           ; BSR set to: 15
  8335                           ;inc\CANlib.h: 625: msg->identifier |= 0x00100000;
  8336  0018F2  C02A  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8337  0018F6  C02B  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8338  0018FA  0E00               	movlw	0
  8339  0018FC  12DE               	iorwf	postinc2,f,c
  8340  0018FE  0E00               	movlw	0
  8341  001900  12DE               	iorwf	postinc2,f,c
  8342  001902  0E10               	movlw	16
  8343  001904  12DE               	iorwf	postinc2,f,c
  8344  001906  0E00               	movlw	0
  8345  001908  12DE               	iorwf	postinc2,f,c
  8346  00190A                     i1l3528:
  8347                           
  8348                           ; BSR set to: 15
  8349                           ;inc\CANlib.h: 627: msg->identifier |= ((unsigned long) RXB0SIDH) << 21;
  8350  00190A  CF61 F02C          	movff	3937,??_CANreceiveMessage	;volatile
  8351  00190E  6A2D               	clrf	(??_CANreceiveMessage+1)& (0+255),c
  8352  001910  6A2E               	clrf	(??_CANreceiveMessage+2)& (0+255),c
  8353  001912  6A2F               	clrf	(??_CANreceiveMessage+3)& (0+255),c
  8354  001914  0E15               	movlw	21
  8355  001916                     i1u396_25:
  8356  001916  90D8               	bcf	status,0,c
  8357  001918  362C               	rlcf	??_CANreceiveMessage,f,c
  8358  00191A  362D               	rlcf	??_CANreceiveMessage+1,f,c
  8359  00191C  362E               	rlcf	??_CANreceiveMessage+2,f,c
  8360  00191E  362F               	rlcf	??_CANreceiveMessage+3,f,c
  8361  001920  2EE8               	decfsz	wreg,f,c
  8362  001922  D7F9               	goto	i1u396_25
  8363  001924  C02A  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8364  001928  C02B  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8365  00192C  502C               	movf	??_CANreceiveMessage,w,c
  8366  00192E  12DE               	iorwf	postinc2,f,c
  8367  001930  502D               	movf	??_CANreceiveMessage+1,w,c
  8368  001932  12DE               	iorwf	postinc2,f,c
  8369  001934  502E               	movf	??_CANreceiveMessage+2,w,c
  8370  001936  12DE               	iorwf	postinc2,f,c
  8371  001938  502F               	movf	??_CANreceiveMessage+3,w,c
  8372  00193A  12DE               	iorwf	postinc2,f,c
  8373  00193C                     i1l3530:
  8374                           
  8375                           ; BSR set to: 15
  8376                           ;inc\CANlib.h: 629: }
  8377                           ;inc\CANlib.h: 630: RXB0CONbits.RXFUL = 0x00;
  8378  00193C  9E60               	bcf	3936,7,c	;volatile
  8379                           
  8380                           ; BSR set to: 15
  8381                           ;inc\CANlib.h: 632: return (error);
  8382                           ;	Return value of _CANreceiveMessage is never used
  8383  00193E  0012               	return	
  8384  001940                     __end_of_CANreceiveMessage:
  8385                           	opt stack 0
  8386                           pclatu	equ	0xFFB
  8387                           pclath	equ	0xFFA
  8388                           tblptru	equ	0xFF8
  8389                           tblptrh	equ	0xFF7
  8390                           tblptrl	equ	0xFF6
  8391                           tablat	equ	0xFF5
  8392                           prodh	equ	0xFF4
  8393                           prodl	equ	0xFF3
  8394                           intcon	equ	0xFF2
  8395                           intcon2	equ	0xFF1
  8396                           postinc0	equ	0xFEE
  8397                           fsr0h	equ	0xFEA
  8398                           fsr0l	equ	0xFE9
  8399                           wreg	equ	0xFE8
  8400                           fsr1h	equ	0xFE2
  8401                           fsr1l	equ	0xFE1
  8402                           bsr	equ	0xFE0
  8403                           indf2	equ	0xFDF
  8404                           postinc2	equ	0xFDE
  8405                           postdec2	equ	0xFDD
  8406                           fsr2h	equ	0xFDA
  8407                           fsr2l	equ	0xFD9
  8408                           status	equ	0xFD8
  8409                           
  8410 ;; *************** function _CANisRxReady *****************
  8411 ;; Defined at:
  8412 ;;		line 1163 in file "K:/Tesina/LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
  8413 ;; Parameters:    Size  Location     Type
  8414 ;;		None
  8415 ;; Auto vars:     Size  Location     Type
  8416 ;;		None
  8417 ;; Return value:  Size  Location     Type
  8418 ;;                  1    wreg      unsigned char 
  8419 ;; Registers used:
  8420 ;;		wreg, status,2
  8421 ;; Tracked objects:
  8422 ;;		On entry : 0/0
  8423 ;;		On exit  : 0/0
  8424 ;;		Unchanged: 0/0
  8425 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  8426 ;;      Params:         0       0       0       0
  8427 ;;      Locals:         1       0       0       0
  8428 ;;      Temps:          0       0       0       0
  8429 ;;      Totals:         1       0       0       0
  8430 ;;Total ram usage:        1 bytes
  8431 ;; Hardware stack levels used:    1
  8432 ;; Hardware stack levels required when called:    1
  8433 ;; This function calls:
  8434 ;;		Nothing
  8435 ;; This function is called by:
  8436 ;;		_ISR_bassa
  8437 ;; This function uses a non-reentrant model
  8438 ;;
  8439                           
  8440                           	psect	text22
  8441  002758                     __ptext22:
  8442                           	opt stack 0
  8443  002758                     _CANisRxReady:
  8444                           	opt stack 25
  8445                           
  8446                           ;inc\CANlib.h: 1165: return (RXB0CONbits.RXFUL || RXB1CONbits.RXFUL);
  8447                           
  8448                           ; BSR set to: 15
  8449                           ;incstack = 0
  8450  002758  0E01               	movlw	1
  8451  00275A  6E2A               	movwf	_CANisRxReady$2957,c
  8452  00275C  BE60               	btfsc	3936,7,c	;volatile
  8453  00275E  D005               	goto	i1l563
  8454  002760  010F               	movlb	15	; () banked
  8455  002762  BF50               	btfsc	80,7,b	;volatile
  8456  002764  D002               	goto	i1l563
  8457                           
  8458                           ; BSR set to: 15
  8459  002766  0E00               	movlw	0
  8460  002768  6E2A               	movwf	_CANisRxReady$2957,c
  8461  00276A                     i1l563:
  8462  00276A  502A               	movf	_CANisRxReady$2957,w,c
  8463  00276C  0012               	return	
  8464  00276E                     __end_of_CANisRxReady:
  8465                           	opt stack 0
  8466                           pclatu	equ	0xFFB
  8467                           pclath	equ	0xFFA
  8468                           tblptru	equ	0xFF8
  8469                           tblptrh	equ	0xFF7
  8470                           tblptrl	equ	0xFF6
  8471                           tablat	equ	0xFF5
  8472                           prodh	equ	0xFF4
  8473                           prodl	equ	0xFF3
  8474                           intcon	equ	0xFF2
  8475                           intcon2	equ	0xFF1
  8476                           postinc0	equ	0xFEE
  8477                           fsr0h	equ	0xFEA
  8478                           fsr0l	equ	0xFE9
  8479                           wreg	equ	0xFE8
  8480                           fsr1h	equ	0xFE2
  8481                           fsr1l	equ	0xFE1
  8482                           bsr	equ	0xFE0
  8483                           indf2	equ	0xFDF
  8484                           postinc2	equ	0xFDE
  8485                           postdec2	equ	0xFDD
  8486                           fsr2h	equ	0xFDA
  8487                           fsr2l	equ	0xFD9
  8488                           status	equ	0xFD8
  8489                           
  8490 ;; *************** function _ISR_alta *****************
  8491 ;; Defined at:
  8492 ;;		line 60 in file "motore.c"
  8493 ;; Parameters:    Size  Location     Type
  8494 ;;		None
  8495 ;; Auto vars:     Size  Location     Type
  8496 ;;		None
  8497 ;; Return value:  Size  Location     Type
  8498 ;;		None               void
  8499 ;; Registers used:
  8500 ;;		None
  8501 ;; Tracked objects:
  8502 ;;		On entry : 0/0
  8503 ;;		On exit  : 0/0
  8504 ;;		Unchanged: 0/0
  8505 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  8506 ;;      Params:         0       0       0       0
  8507 ;;      Locals:         0       0       0       0
  8508 ;;      Temps:          0      14       0       0
  8509 ;;      Totals:         0      14       0       0
  8510 ;;Total ram usage:       14 bytes
  8511 ;; Hardware stack levels used:    1
  8512 ;; This function calls:
  8513 ;;		Nothing
  8514 ;; This function is called by:
  8515 ;;		Interrupt level 2
  8516 ;; This function uses a non-reentrant model
  8517 ;;
  8518                           
  8519                           	psect	intcode
  8520  000008                     __pintcode:
  8521                           	opt stack 0
  8522  000008                     _ISR_alta:
  8523                           	opt stack 25
  8524                           
  8525                           ;incstack = 0
  8526  000008  8249               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  8527  00000A  CFFA F060          	movff	pclath,??_ISR_alta
  8528  00000E  CFFB F061          	movff	pclatu,??_ISR_alta+1
  8529  000012  ED88  F012         	call	int_func,f	;refresh shadow registers
  8530                           pclatu	equ	0xFFB
  8531                           pclath	equ	0xFFA
  8532                           tblptru	equ	0xFF8
  8533                           tblptrh	equ	0xFF7
  8534                           tblptrl	equ	0xFF6
  8535                           tablat	equ	0xFF5
  8536                           prodh	equ	0xFF4
  8537                           prodl	equ	0xFF3
  8538                           intcon	equ	0xFF2
  8539                           intcon2	equ	0xFF1
  8540                           postinc0	equ	0xFEE
  8541                           fsr0h	equ	0xFEA
  8542                           fsr0l	equ	0xFE9
  8543                           wreg	equ	0xFE8
  8544                           fsr1h	equ	0xFE2
  8545                           fsr1l	equ	0xFE1
  8546                           bsr	equ	0xFE0
  8547                           indf2	equ	0xFDF
  8548                           postinc2	equ	0xFDE
  8549                           postdec2	equ	0xFDD
  8550                           fsr2h	equ	0xFDA
  8551                           fsr2l	equ	0xFD9
  8552                           status	equ	0xFD8
  8553                           
  8554                           	psect	intcode_body
  8555  002510                     __pintcode_body:
  8556                           	opt stack 25
  8557  002510                     int_func:
  8558                           	opt stack 25
  8559  002510  0006               	pop		; remove dummy address from shadow register refresh
  8560  002512  CFE9 F062          	movff	fsr0l,??_ISR_alta+2
  8561  002516  CFEA F063          	movff	fsr0h,??_ISR_alta+3
  8562  00251A  CFE1 F064          	movff	fsr1l,??_ISR_alta+4
  8563  00251E  CFE2 F065          	movff	fsr1h,??_ISR_alta+5
  8564  002522  CFD9 F066          	movff	fsr2l,??_ISR_alta+6
  8565  002526  CFDA F067          	movff	fsr2h,??_ISR_alta+7
  8566  00252A  CFF3 F068          	movff	prodl,??_ISR_alta+8
  8567  00252E  CFF4 F069          	movff	prodh,??_ISR_alta+9
  8568  002532  CFF6 F06A          	movff	tblptrl,??_ISR_alta+10
  8569  002536  CFF7 F06B          	movff	tblptrh,??_ISR_alta+11
  8570  00253A  CFF8 F06C          	movff	tblptru,??_ISR_alta+12
  8571  00253E  CFF5 F06D          	movff	tablat,??_ISR_alta+13
  8572  002542  C06D  FFF5         	movff	??_ISR_alta+13,tablat
  8573  002546  C06C  FFF8         	movff	??_ISR_alta+12,tblptru
  8574  00254A  C06B  FFF7         	movff	??_ISR_alta+11,tblptrh
  8575  00254E  C06A  FFF6         	movff	??_ISR_alta+10,tblptrl
  8576  002552  C069  FFF4         	movff	??_ISR_alta+9,prodh
  8577  002556  C068  FFF3         	movff	??_ISR_alta+8,prodl
  8578  00255A  C067  FFDA         	movff	??_ISR_alta+7,fsr2h
  8579  00255E  C066  FFD9         	movff	??_ISR_alta+6,fsr2l
  8580  002562  C065  FFE2         	movff	??_ISR_alta+5,fsr1h
  8581  002566  C064  FFE1         	movff	??_ISR_alta+4,fsr1l
  8582  00256A  C063  FFEA         	movff	??_ISR_alta+3,fsr0h
  8583  00256E  C062  FFE9         	movff	??_ISR_alta+2,fsr0l
  8584  002572  C061  FFFB         	movff	??_ISR_alta+1,pclatu
  8585  002576  C060  FFFA         	movff	??_ISR_alta,pclath
  8586  00257A  9249               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  8587  00257C  0011               	retfie		f
  8588  00257E                     __end_of_ISR_alta:
  8589                           	opt stack 0
  8590  0000                     pclatu	equ	0xFFB
  8591                           pclath	equ	0xFFA
  8592                           tblptru	equ	0xFF8
  8593                           tblptrh	equ	0xFF7
  8594                           tblptrl	equ	0xFF6
  8595                           tablat	equ	0xFF5
  8596                           prodh	equ	0xFF4
  8597                           prodl	equ	0xFF3
  8598                           intcon	equ	0xFF2
  8599                           intcon2	equ	0xFF1
  8600                           postinc0	equ	0xFEE
  8601                           fsr0h	equ	0xFEA
  8602                           fsr0l	equ	0xFE9
  8603                           wreg	equ	0xFE8
  8604                           fsr1h	equ	0xFE2
  8605                           fsr1l	equ	0xFE1
  8606                           bsr	equ	0xFE0
  8607                           indf2	equ	0xFDF
  8608                           postinc2	equ	0xFDE
  8609                           postdec2	equ	0xFDD
  8610                           fsr2h	equ	0xFDA
  8611                           fsr2l	equ	0xFD9
  8612                           status	equ	0xFD8
  8613                           pclatu	equ	0xFFB
  8614                           pclath	equ	0xFFA
  8615                           tblptru	equ	0xFF8
  8616                           tblptrh	equ	0xFF7
  8617                           tblptrl	equ	0xFF6
  8618                           tablat	equ	0xFF5
  8619                           prodh	equ	0xFF4
  8620                           prodl	equ	0xFF3
  8621                           intcon	equ	0xFF2
  8622                           intcon2	equ	0xFF1
  8623                           postinc0	equ	0xFEE
  8624                           fsr0h	equ	0xFEA
  8625                           fsr0l	equ	0xFE9
  8626                           wreg	equ	0xFE8
  8627                           fsr1h	equ	0xFE2
  8628                           fsr1l	equ	0xFE1
  8629                           bsr	equ	0xFE0
  8630                           indf2	equ	0xFDF
  8631                           postinc2	equ	0xFDE
  8632                           postdec2	equ	0xFDD
  8633                           fsr2h	equ	0xFDA
  8634                           fsr2l	equ	0xFD9
  8635                           status	equ	0xFD8
  8636                           
  8637                           	psect	param0
  8638  0000                     pclatu	equ	0xFFB
  8639                           pclath	equ	0xFFA
  8640                           tblptru	equ	0xFF8
  8641                           tblptrh	equ	0xFF7
  8642                           tblptrl	equ	0xFF6
  8643                           tablat	equ	0xFF5
  8644                           prodh	equ	0xFF4
  8645                           prodl	equ	0xFF3
  8646                           intcon	equ	0xFF2
  8647                           intcon2	equ	0xFF1
  8648                           postinc0	equ	0xFEE
  8649                           fsr0h	equ	0xFEA
  8650                           fsr0l	equ	0xFE9
  8651                           wreg	equ	0xFE8
  8652                           fsr1h	equ	0xFE2
  8653                           fsr1l	equ	0xFE1
  8654                           bsr	equ	0xFE0
  8655                           indf2	equ	0xFDF
  8656                           postinc2	equ	0xFDE
  8657                           postdec2	equ	0xFDD
  8658                           fsr2h	equ	0xFDA
  8659                           fsr2l	equ	0xFD9
  8660                           status	equ	0xFD8
  8661                           
  8662                           	psect	temp
  8663  000049                     btemp:
  8664                           	opt stack 0
  8665  000049                     	ds	1
  8666  0000                     int$flags	set	btemp
  8667                           pclatu	equ	0xFFB
  8668                           pclath	equ	0xFFA
  8669                           tblptru	equ	0xFF8
  8670                           tblptrh	equ	0xFF7
  8671                           tblptrl	equ	0xFF6
  8672                           tablat	equ	0xFF5
  8673                           prodh	equ	0xFF4
  8674                           prodl	equ	0xFF3
  8675                           intcon	equ	0xFF2
  8676                           intcon2	equ	0xFF1
  8677                           postinc0	equ	0xFEE
  8678                           fsr0h	equ	0xFEA
  8679                           fsr0l	equ	0xFE9
  8680                           wreg	equ	0xFE8
  8681                           fsr1h	equ	0xFE2
  8682                           fsr1l	equ	0xFE1
  8683                           bsr	equ	0xFE0
  8684                           indf2	equ	0xFDF
  8685                           postinc2	equ	0xFDE
  8686                           postdec2	equ	0xFDD
  8687                           fsr2h	equ	0xFDA
  8688                           fsr2l	equ	0xFD9
  8689                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        2
    BSS         80
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     29      72
    BANK0           160     49      89
    BANK1           256      0       0
    BANK2           256      0       0

Pointer List with Targets:

    CANreceiveMessage@msg	PTR struct . size(2) Largest target is 15
		 -> msg(COMRAM[15]), 

    CANsendMessage@data	PTR unsigned char  size(2) Largest target is 8
		 -> NULL(NULL[0]), data_array(COMRAM[8]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _ISR_alta in COMRAM

    None.

Critical Paths under _ISR_bassa in COMRAM

    _ISR_bassa->_CANreceiveMessage

Critical Paths under _main in BANK0

    _send_data->_CANsendMessage
    _send_data->_delay_ms
    _delay_ms->___wmul
    _configurazione_iniziale->_CANInitialize
    _CANInitialize->_CANSetFilter
    _CANInitialize->_CANSetMask
    _battery_measure->_CANsendMessage
    ___wmul->___awdiv

Critical Paths under _ISR_alta in BANK0

    None.

Critical Paths under _ISR_bassa in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR_alta in BANK1

    None.

Critical Paths under _ISR_bassa in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR_alta in BANK2

    None.

Critical Paths under _ISR_bassa in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 9     9      0   29273
                                             40 BANK0      9     9      0
                   _CANisRXwarningON
                   _CANisTXwarningON
                       _CANisTxReady
                     _CANsendMessage
                          _OpenEPWM1
                         _OpenTimer2
                         _SetDCEPWM1
                     _SetOutputEPWM1
                            ___awdiv
                             ___wmul
                                _abs
                    _battery_measure
            _configurazione_iniziale
                           _delay_ms
                          _send_data
 ---------------------------------------------------------------------------------
 (1) _send_data                                            0     0      0    5975
                       _CANisTxReady
                     _CANsendMessage
                           _delay_ms
 ---------------------------------------------------------------------------------
 (2) _delay_ms                                             2     0      2    1341
                                             28 BANK0      2     0      2
                             ___wmul
 ---------------------------------------------------------------------------------
 (1) _configurazione_iniziale                              0     0      0    8212
                      _CANInitialize
 ---------------------------------------------------------------------------------
 (2) _CANInitialize                                       12     7      5    8212
                                             28 BANK0     12     7      5
                   _CANOperationMode
                       _CANSetFilter
                         _CANSetMask
 ---------------------------------------------------------------------------------
 (3) _CANSetMask                                          14     9      5    1788
                                             14 BANK0     14     9      5
 ---------------------------------------------------------------------------------
 (3) _CANSetFilter                                        14     9      5    5364
                                             14 BANK0     14     9      5
 ---------------------------------------------------------------------------------
 (3) _CANOperationMode                                     1     1      0      62
                                             14 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _battery_measure                                      0     0      0    6389
                       _CANisTxReady
                     _CANsendMessage
                            ___awdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     694
                                             22 BANK0      6     2      4
                            ___awdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              8     4      4    1061
                                             14 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (2) _CANsendMessage                                      16     8      8    4597
                                             14 BANK0     16     8      8
 ---------------------------------------------------------------------------------
 (2) _CANisTxReady                                         1     1      0      37
                                             14 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _abs                                                  4     2      2     170
                                             14 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (1) _SetOutputEPWM1                                       2     1      1     340
                                             14 BANK0      2     1      1
 ---------------------------------------------------------------------------------
 (1) _SetDCEPWM1                                           6     4      2     330
                                             14 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (1) _OpenTimer2                                           1     1      0      62
                                             14 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _OpenEPWM1                                            1     1      0      31
                                             14 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _CANisTXwarningON                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _CANisRXwarningON                                     0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _ISR_bassa                                           17    17      0    1161
                                             12 COMRAM    17    17      0
                       _CANisRxReady
                  _CANreceiveMessage
 ---------------------------------------------------------------------------------
 (5) _CANreceiveMessage                                   12    10      2    1137
                                              0 COMRAM    12    10      2
 ---------------------------------------------------------------------------------
 (5) _CANisRxReady                                         1     1      0      24
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _ISR_alta                                            14    14      0       0
                                              0 BANK0     14    14      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _CANisRXwarningON
   _CANisTXwarningON
   _CANisTxReady
   _CANsendMessage
   _OpenEPWM1
   _OpenTimer2
   _SetDCEPWM1
   _SetOutputEPWM1
   ___awdiv
   ___wmul
     ___awdiv (ARG)
   _abs
   _battery_measure
     _CANisTxReady
     _CANsendMessage
     ___awdiv
     ___wmul
       ___awdiv (ARG)
   _configurazione_iniziale
     _CANInitialize
       _CANOperationMode
       _CANSetFilter
       _CANSetMask
   _delay_ms
     ___wmul
       ___awdiv (ARG)
   _send_data
     _CANisTxReady
     _CANsendMessage
     _delay_ms
       ___wmul
         ___awdiv (ARG)

 _ISR_bassa (ROOT)
   _CANisRxReady
   _CANreceiveMessage

 _ISR_alta (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             2FF      0       0      10        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0       0       8        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100      0       0       6        0.0%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0     31      59       4       55.6%
BITCOMRAM           5E      0       1       0        1.1%
COMRAM              5E     1D      48       1       76.6%
BITSFR_3             0      0       0      40        0.0%
SFR_3                0      0       0      40        0.0%
BITSFR_2             0      0       0      40        0.0%
SFR_2                0      0       0      40        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      A1       9        0.0%
DATA                 0      0      A1      11        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.35 build -356382666 
Symbol Table                                                                                   Sat Dec 26 09:48:22 2015

              ??_CANisTXwarningON 006E              __end_of_CANSetFilter 0CA8  
                    ___awdiv@sign 0073                                _id 0099  
                              bsr 000FE0               ___wmul@multiplicand 0078  
                     __CFG_BORV$3 000000                    _SetOutputEPWM1 257E  
                    __CFG_CP0$OFF 000000                      __CFG_CP1$OFF 000000  
                     __CFG_OSC$HS 000000              _previousTimeCounter1 00A1  
            _previousTimeCounter2 00A5                               l400 1266  
                             l401 1270                               l404 1380  
                             l500 09F4                               l405 1384  
                             l501 09F8                               l406 1390  
                             l510 0B04                               l502 0A04  
                             l511 0B10                               l503 0A08  
                             l520 0C1C                               l512 0B14  
                             l504 0A14                               l440 1F62  
                             l360 2192                               l521 0C20  
                             l513 0B20                               l505 0A18  
                             l441 1F66                               l361 219C  
                             l370 0D54                               l522 0C2C  
                             l514 0B24                               l506 0A24  
                             l450 206E                               l442 1F72  
                             l434 1F32                               l371 0D5E  
                             l523 0C30                               l515 0B30  
                             l451 207A                               l435 1F36  
                             l380 11B0                               l372 0D68  
                             l524 0C3C                               l516 0B34  
                             l452 207E                               l436 1F42  
                             l381 0F42                               l365 0F2C  
                             l525 0C40                               l517 0B40  
                             l509 0B00                               l453 208A  
                             l445 204A                               l437 1F46  
                             l390 10FC                               l382 0F46  
                             l366 0CBE                               l526 0C4C  
                             l470 06B6                               l446 204E  
                             l438 1F52                               l391 1100  
                             l383 103E                               l375 0E78  
                             l367 0CC2                               l527 0C50  
                             l471 06C2                               l447 205A  
                             l439 1F56                               l392 110C  
                             l384 0FCE                               l376 0E7C  
                             l368 0DBA                               l528 0C5C  
                             l480 07CC                               l472 06C6  
                             l448 205E                               l385 0FD8  
                             l377 0E88                               l369 0D4A  
                             l481 07D0                               l473 06D2  
                             l465 0692                               l449 206A  
                             l386 0FE2                               l490 08DC  
                             l482 07DC                               l466 0696  
                             l395 11C6                               l387 0FEC  
                             l491 08E8                               l483 07E0  
                             l467 06A2                               l571 268C  
                             l651 199C                               l740 273C  
                             l396 11CA                               l492 08EC  
                             l484 07EC                               l476 07AC  
                             l468 06A6                               l741 273E  
                             l397 12C2                               l493 08F8  
                             l477 07B0                               l469 06B2  
                             l726 25C6                               l558 271A  
                             l398 1252                               l494 08FC  
                             l478 07BC                               l662 1C58  
                             l399 125C                               l495 0908  
                             l487 08C8                               l479 07C0  
                             l488 08CC                               l656 1C0C  
                             l489 08D8                               l657 1BFE  
                             l498 09E4                               l658 1BC0  
                             l499 09E8                               l694 2486  
                             l687 23F6                               l792 26F2  
                    __CFG_CPB$OFF 000000                               _PR2 000FCB  
                    __CFG_CPD$OFF 000000                               _abs 26D0  
                             _dir 00AD                               _msg 0013  
                             wreg 000FE8                      __CFG_LVP$OFF 000000  
                    __CFG_WDT$OFF 000000                              ?_abs 006E  
                            l4016 0260                              l4202 090C  
                            l4106 0600                              l4034 0318  
                            l4140 071C                              l4052 03D2  
                            l4134 06D6                              l4070 048C  
                            l4400 0D72                              l4304 0C60  
                            l4208 0952                              l4242 0A6E  
                            l4420 0E6C                              l4236 0A28  
                            l4502 1110                              l4270 0B44  
                            l4174 0836                              l4168 07F0  
                            l4088 0546                              l4360 21A8  
                            l4426 0E8C                              l4362 21EC  
                            l4354 218A                              l3900 274A  
                            l4276 0B8A                              l4356 21A0  
                            l4612 267E                              l4630 22CE  
                            l4552 127A                              l4640 22FE  
                            l4624 22B8                              l4572 1374  
                            l4476 0FF6                              l4636 22EC  
                            l4652 233C                              l4812 24CE  
                            l4900 1C32                              l4638 22F8  
                            l3934 1EA6                              l3918 1DF0  
                            l4496 10F0                              l4656 2350  
                            l4648 232E                              l3960 1F76  
                            l4808 24C2                              l4920 1C9A  
                            l4904 1C46                              l4578 1394  
                            l4828 244C                              l4908 1C5C  
                            l4924 1CD2                              l3966 1FBC  
                            l4784 25A4                              l3992 208E  
                            l4864 19B4                              l4788 25B4  
                            l4868 19CC                              _LATA 000F89  
                            _LATB 000F8A                              _LATC 000F8B  
                            _LATD 000F8C                              _LATE 000F8D  
                            u5010 06F6                              u5015 06EA  
                            u4520 1E22                              u5410 0C80  
                            u5330 0B64                              u5250 0A48  
                            u5170 092C                              u5090 0810  
                            u4610 1F96                              u6035 2626  
                            u4525 1E16                              u6150 1A30  
                            u5415 0C74                              u5335 0B58  
                            u5255 0A3C                              u5175 0920  
                            u5095 0804                              u4615 1F8A  
                            u4535 1E82                              u4800 034E  
                            u4720 01DC                              u4480 1D6C  
                            u6160 1AC6                              u6170 1B62  
                            u5540 0D92                              u6180 1BA2  
                            u4805 0342                              u4725 01D0  
                            u4485 1D60                              u5550 0DDE  
                            u4815 03AE                              u4735 023C  
                            u4495 1DCC                              u5800 129A  
                            u4920 057C                              u4840 0408  
                            u4760 0294                              u5545 0D86  
                            u5810 12E6                              u4690 20AE  
                            u5555 0DD2                              u5805 128E  
                            u5565 0E3E                              u4925 0570  
                            u4845 03FC                              u4765 0288  
                            u5670 1016                              u5815 12DA  
                            u4935 05DC                              u4855 0468  
                            u4775 02F4                              u4695 20A2  
                            u6287 2680                              u5680 1062  
                            u4880 04C2                              u5825 1346  
                            u5675 100A                              u5685 1056  
                            u4885 04B6                              u5950 2788  
                            u5695 10C2                              u4895 0522  
                            u5960 2794                              _TMR2 000FCC  
             __size_of_CANSetMask 039E                              abs@a 006E  
                            _main 1940                              fsr0h 000FEA  
                            fsr1h 000FE2                              fsr0l 000FE9  
                            fsr2h 000FDA                              fsr1l 000FE1  
                            indf2 000FDF                              fsr2l 000FD9  
                            btemp 0049                              pclat 000FFA  
                            prodh 000FF4                              prodl 000FF3  
                            start 019E                     __CFG_IESO$OFF 000000  
                   __CFG_MCLRE$ON 000000                      ___param_bank 000000  
                _CANOperationMode 2742            __end_of_SetOutputEPWM1 25D0  
                           ??_abs 0070        __size_of_CANreceiveMessage 050C  
                           ?_main 002A                   __end_of___awdiv 235A  
                 ___awdiv@divisor 0070                             _T2CON 000FCA  
                           _T3CON 000FB1                             i1l412 16CC  
                           i1l563 276A                             i1l646 0138  
                           i1l638 013C                             i1l648 0156  
                 ___awdiv@counter 0072                             _TMR3H 000FB3  
                           _TMR3L 000FB2                             _PORTD 000F83  
                           _TRISA 000F92                             _TRISB 000F93  
                           _TRISC 000F94                             _TRISD 000F95  
                           _TRISE 000F96                 _CANisRxReady$2957 002A  
                   __CFG_PWRT$OFF 000000                     __CFG_WRT0$OFF 000000  
                   __CFG_WRT1$OFF 000000                __size_of_ISR_bassa 0186  
                  __CFG_EBTR0$OFF 000000                    __CFG_FCMEN$OFF 000000  
                  __CFG_EBTR1$OFF 000000                CANInitialize@flags 0080  
                __end_of_ISR_alta 257E                     __CFG_WRTB$OFF 000000  
                   __CFG_WRTC$OFF 000000                     __CFG_WRTD$OFF 000000  
                  __CFG_EBTRB$OFF 000000                             _vBatt 00B1  
                  __pbitbssCOMRAM 0238              __end_of_CANisRxReady 276E  
                           tablat 000FF5              __end_of_CANisTxReady 2720  
                           status 000FD8                    __CFG_PBADEN$ON 000000  
                      _SetDCEPWM1 261C                   __initialization 25D0  
        __size_of_battery_measure 0094                      __end_of_main 1D38  
                 ?_SetOutputEPWM1 006E                            ??_main 0088  
                   __activetblptr 000002                 _CANisTxReady$2955 006E  
                   _counter_array 0001                            _CANCON 000F6F  
                          _ADRESH 000FC4                  ___awdiv@dividend 006E  
                 __CFG_BBSIZ$1024 000000                            i1l3520 18D2  
                          i1l3512 189A                            i1l3504 182C  
                          i1l3530 193C                            i1l3450 161C  
                          i1l3442 15AC                            i1l3524 18EE  
                          i1l3516 18B6                            i1l3462 1676  
                          i1l3454 163A                            i1l3528 190A  
                          i1l3466 1694                            i1l3458 1658  
                          i1l3730 0066                            i1l3468 16C6  
                          i1l3762 0122                            i1l3738 009C  
                          i1l3756 0110                            i1l3748 00D6  
                      _OpenTimer2 2720                            _RXB0D0 000F66  
                          _RXB0D1 000F67                            _RXB0D2 000F68  
                          _RXB0D3 000F69                            _RXB0D4 000F6A  
                          _RXB1D0 000F56                            _RXB0D5 000F6B  
                          _RXB1D1 000F57                            _RXB0D6 000F6C  
                          _RXB1D2 000F58                            _RXB0D7 000F6D  
                          _RXB1D3 000F59                            _RXB1D4 000F5A  
                          _RXB1D5 000F5B                            _RXB1D6 000F5C  
                          _RXB1D7 000F5D                            _TXB0D0 000F46  
                          _TXB0D1 000F47                            _TXB0D2 000F48  
                          _TXB0D3 000F49                            _TXB1D0 000F36  
                          _TXB0D4 000F4A                            _TXB1D1 000F37  
                          _TXB0D5 000F4B                            _TXB1D2 000F38  
                          _TXB0D6 000F4C                            _TXB1D3 000F39  
                          _TXB0D7 000F4D                            _TXB2D0 000F26  
                          _TXB1D4 000F3A                            _TXB2D1 000F27  
                          _TXB1D5 000F3B                            _TXB2D2 000F28  
                          _TXB1D6 000F3C                            _TXB2D3 000F29  
                          _TXB1D7 000F3D                            _TXB2D4 000F2A  
                          _TXB2D5 000F2B                            _TXB2D6 000F2C  
                          _TXB2D7 000F2D                CANsendMessage@data 0072  
              CANsendMessage@tamp 007A                  __end_of_delay_ms 269A  
           __size_of_CANSetFilter 0B06                    __CFG_XINST$OFF 000000  
              __size_of_OpenEPWM1 0012                 __end_of_ISR_bassa 019E  
                          ___wmul 269A                         ??___awdiv 0072  
                  __CFG_STVREN$ON 000000                      ??_CANSetMask 0073  
                          _errore 00AF                  OpenTimer2@config 006E  
                          clear_0 25D6                            clear_1 25E4  
                ___awdiv@quotient 0074                            _misura 0238  
        ?_configurazione_iniziale 002A                   __CFG_BOREN$BOHW 000000  
                    __pdataCOMRAM 0048                            tblptrh 000FF7  
                          tblptrl 000FF6                            tblptru 000FF8  
                    _CANSetFilter 01A2                        __accesstop 0060  
         __end_of__initialization 260E                __end_of_CANSetMask 20D6  
                   ___rparam_used 000000         __size_of_CANisRXwarningON 000C  
                     ?_SetDCEPWM1 006E                    __pcstackCOMRAM 002A  
                    __pidataBANK0 2799                         ?_ISR_alta 002A  
               ??_battery_measure 007E             CANSetFilter@numBuffer 0077  
                 OpenEPWM1@period 006E         __size_of_CANisTXwarningON 000C  
           __size_of_CANisRxReady 0016             __size_of_CANisTxReady 0024  
               __end_of_OpenEPWM1 2780          __end_of_CANOperationMode 2758  
                      __pbssBANK0 0091                       ?_OpenTimer2 002A  
                      _data_array 0022           __size_of_CANsendMessage 078C  
                         ?___wmul 0076                        ??_ISR_alta 0060  
              __size_of_send_data 0088                      _CANisRxReady 2758  
                         _ECCPR1L 000FBB                           _CANSTAT 000F6E  
                    _CANisTxReady 26FC                           _BRGCON1 000F70  
                         _BRGCON2 000F71                           _BRGCON3 000F72  
          __size_of_CANInitialize 01C6                         ?_delay_ms 007C  
                         _RXB0DLC 000F65                           _RXB1DLC 000F55  
                         _RXB0CON 000F60               __size_of_SetDCEPWM1 0044  
                         _RXB1CON 000F50                           _TXB0DLC 000F45  
                         _TXB1DLC 000F35                           _TXB2DLC 000F25  
             CANsendMessage@flags 0075          SetOutputEPWM1@outputmode 006E  
                      _correzione 00AB                  ??_SetOutputEPWM1 006F  
                         __Hparam 0000                        _left_speed 00B4  
                         __Lparam 0000                  delay_ms@value_ms 007C  
                         ___awdiv 229C                   __size_of___wmul 0036  
            CANInitialize@propSeg 0085                           __pcinit 25D0  
                         __ramtop 0300               __size_of_OpenTimer2 0022  
                         __ptext0 1940                           __ptext1 2488  
                         __ptext2 2660                           __ptext3 235A  
                         __ptext4 20D6                           __ptext5 1D38  
                         __ptext6 01A2                           __ptext7 2742  
                         __ptext8 23F4                           __ptext9 269A  
                         _counter 0009                         _T2CONbits 000FCA  
                    __size_of_abs 002C                        _duty_cycle 0011  
                      ??_delay_ms 007E            CANreceiveMessage@error 0034  
                  __pintcode_body 2510              end_of_initialization 260E  
               __end_of_send_data 2510                     __Lmediumconst 0000  
                         int_func 2510                  _CANisRXwarningON 278C  
                   _CANInitialize 20D6                           postdec2 000FDD  
                         postinc0 000FEE                           postinc2 000FDE  
                       _ISR_bassa 0018                         _PORTAbits 000F80  
                  CANSetMask@mask 006E                    CANSetMask@tamp 0078  
                  CANSetMask@type 0072                  _CANisTXwarningON 2780  
                       _TRISDbits 000F95  __size_of_configurazione_iniziale 009A  
             _previousTimeCounter 009D           _clock_counter_reference 00A9  
                  _CANsendMessage 0CA8                  CANInitialize@BRP 007F  
                CANInitialize@SJW 007E                    ?_CANInitialize 007C  
                      main@period 0090                      ??_SetDCEPWM1 0070  
                 _battery_measure 23F4                        ?_ISR_bassa 002A  
                  __end_of___wmul 26D0                     __pidataCOMRAM 2798  
               __size_of_ISR_alta 2576               start_initialization 25D0  
                     __end_of_abs 26FC                __end_of_SetDCEPWM1 2660  
             CANSetMask@numBuffer 0077            __end_of_CANsendMessage 1434  
               ?_CANOperationMode 002A                      ??_OpenTimer2 006E  
                       _OpenEPWM1 276E                ??_CANOperationMode 006E  
      CANInitialize@FilterConfig1 0086        CANInitialize@FilterConfig2 0087  
                        ??___wmul 007A                       __pdataBANK0 00B8  
                __CFG_LPT1OSC$OFF 000000                __end_of_OpenTimer2 2742  
          CANInitialize@phaseSeg1 007C            CANInitialize@phaseSeg2 007D  
                     __pbssCOMRAM 0001                     __pcstackBANK0 0060  
                     _BRGCON2bits 000F71                       _BRGCON3bits 000F72  
             SetDCEPWM1@dutycycle 006E                 __size_of_delay_ms 003A  
                 ?_CANsendMessage 006E                        ?_OpenEPWM1 002A  
         __end_of_battery_measure 2488                   ??_CANInitialize 0081  
                    _currentSpeed 0048                CANSetFilter@filter 006E  
                       __pintcode 0008                          ?___awdiv 006E  
                     ??_ISR_bassa 0036                       __pintcodelo 0018  
                        _ECCP1CON 000FBA          __end_of_CANisRXwarningON 2798  
                     _COMSTATbits 000F74        SetOutputEPWM1@outputconfig 006F  
         _configurazione_iniziale 235A             CANreceiveMessage@tamp 0035  
                  ___wmul@product 007A                          _IPR2bits 000FA2  
    _delay_quartz_frequency_value 00B8                          _PIE1bits 000F9D  
                        _IPR3bits 000FA5                          _PIE2bits 000FA0  
                       _send_data 2488                          _PIE3bits 000FA3  
        __end_of_CANisTXwarningON 278C                          i1u421_20 009A  
                        i1u390_25 17B2                          i1u376_20 14EC  
                        i1u376_26 14EE                          i1u377_20 151A  
                        i1u385_25 16A0                          i1u377_26 151C  
                        i1u387_20 1774                          i1u379_25 1530  
                        i1u387_26 1776                          i1u388_20 179E  
                        i1u396_25 1916                          i1u388_26 17A0  
                        _PIR1bits 000F9E                          _PIR2bits 000FA1  
                        _PIR3bits 000FA4                          _RXB0EIDH 000F63  
                        _RXB0EIDL 000F64                          _RXB1EIDH 000F53  
                        _RXB1EIDL 000F54                          _RCONbits 000FD0  
                __CFG_WDTPS$32768 000000                          _RXB0SIDH 000F61  
                        _RXB0SIDL 000F62                          _RXF0EIDH 000F02  
                        _RXB1SIDH 000F51                          _RXF0EIDL 000F03  
                        _RXB1SIDL 000F52                          _RXF1EIDH 000F06  
                        _RXF1EIDL 000F07                          _RXF2EIDH 000F0A  
                        _RXF2EIDL 000F0B                          _RXF3EIDH 000F0E  
                        _RXF3EIDL 000F0F                          _RXF4EIDH 000F12  
                        _RXF4EIDL 000F13                          _RXF5EIDH 000F16  
                        _RXF5EIDL 000F17                          _RXF0SIDH 000F00  
                        _RXF0SIDL 000F01                          _TXB0EIDH 000F43  
                        _RXF1SIDH 000F04                          _TXB0EIDL 000F44  
                        _RXF1SIDL 000F05                          _TXB1EIDH 000F33  
                        _RXF2SIDH 000F08                          _TXB1EIDL 000F34  
                        _RXF2SIDL 000F09                          _ISR_alta 0008  
                        _TXB2EIDH 000F23                          _RXF3SIDH 000F0C  
                        _TXB2EIDL 000F24                          _RXF3SIDL 000F0D  
                        _RXF4SIDH 000F10                          _RXF4SIDL 000F11  
                        _RXF5SIDH 000F14                          _RXF5SIDL 000F15  
                        _RXM0EIDH 000F1A                          _RXM0EIDL 000F1B  
                        _TXB0SIDH 000F41                          _RXM1EIDH 000F1E  
                        _TXB0SIDL 000F42                          _RXM1EIDL 000F1F  
                        _TXB1SIDH 000F31                          _TXB1SIDL 000F32  
                        _TXB2SIDH 000F21                          _TXB2SIDL 000F22  
                        _RXM0SIDH 000F18                          _RXM0SIDL 000F19  
                        _RXM1SIDH 000F1C                          _RXM1SIDL 000F1D  
                        _RXERRCNT 000F75                          _TXERRCNT 000F76  
                      _ADCON0bits 000FC2                        _ADCON1bits 000FC1  
                      _ADCON2bits 000FC0                 ___wmul@multiplier 0076  
                   ?_CANSetFilter 006E                       _INTCON2bits 000FF1  
                      _CANCONbits 000F6F                       ??_OpenEPWM1 006E  
                ?_battery_measure 002A                          __Hparam0 0000  
                      ?_send_data 002A                          __Lparam0 0000  
                    _RXB0SIDLbits 000F62                  SetDCEPWM1@DCycle 0072  
                    _RXB1SIDLbits 000F52                        _CANSetMask 1D38  
                __size_of___awdiv 00BE           __size_of_SetOutputEPWM1 0052  
              _currentSpeed_array 0091         ??_configurazione_iniziale 0088  
                    _RXF0SIDLbits 000F01                          _delay_ms 2660  
                    _RXF1SIDLbits 000F05                    ??_CANSetFilter 0073  
                        __ptext10 229C                          __ptext11 0CA8  
                        __ptext12 26FC                          __ptext21 1434  
                        __ptext13 26D0                          __ptext22 2758  
                        __ptext14 257E                          __ptext15 261C  
                        __ptext16 2720                          __ptext17 276E  
                        __ptext18 2780                          __ptext19 278C  
                    _RXF2SIDLbits 000F09                      _RXF3SIDLbits 000F0D  
                    _RXF4SIDLbits 000F11                      _RXF5SIDLbits 000F15  
        CANsendMessage@dataLength 0074                      _remote_frame 0239  
                   __size_of_main 03F8                          _duty_set 00B3  
            CANreceiveMessage@msg 002A                      _TXB0SIDLbits 000F42  
                    _TXB1SIDLbits 000F32                      _TXB2SIDLbits 000F22  
                        int$flags 0049         __size_of_CANOperationMode 0016  
                   ?_CANisRxReady 002A                     ?_CANisTxReady 002A  
                     _RXB0DLCbits 000F65                       _RXB1DLCbits 000F55  
                    _RXM0SIDLbits 000F19                       _RXB0CONbits 000F60  
                     _RXB1CONbits 000F50                 _CANreceiveMessage 1434  
                    _RXM1SIDLbits 000F1D                        _INTCONbits 000FF2  
                ??_CANsendMessage 0076                      _requestSpeed 00B6  
              ?_CANreceiveMessage 002A          CANsendMessage@identifier 006E  
                        intlevel1 0000                          intlevel2 0000  
                CANSetFilter@tamp 0078                  CANSetFilter@type 0072  
             ??_CANreceiveMessage 002C                       _TXB0DLCbits 000F45  
                     _right_speed 00B7                       _TXB1DLCbits 000F35  
                     _TXB0CONbits 000F40                       ??_send_data 007E  
                     _TXB2DLCbits 000F25   __end_of_configurazione_iniziale 23F4  
                     _TXB1CONbits 000F30                       _TXB2CONbits 000F20  
                     _timeCounter 000D              CANOperationMode@mode 006E  
                  ??_CANisRxReady 002A                       ?_CANSetMask 006E  
                  ??_CANisTxReady 006E         __end_of_CANreceiveMessage 1940  
               ?_CANisRXwarningON 002A                ??_CANisRXwarningON 006E  
                     _previousPwm 00B5             __end_of_CANInitialize 229C  
               ?_CANisTXwarningON 002A  
