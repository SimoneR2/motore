

Microchip Technology PIC18 LITE Macro Assembler V1.35 build -356382666 
                                                                                               Thu Feb 04 20:25:04 2016

Microchip Technology Omniscient Code Generator v1.35 (Free mode) build 201507080246
     1                           	processor	18F4480
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bitbssCOMRAM,global,bit,class=COMRAM,space=1,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1
    18                           	psect	text5,global,reloc=2,class=CODE,delta=1
    19                           	psect	text6,global,reloc=2,class=CODE,delta=1
    20                           	psect	text7,global,reloc=2,class=CODE,delta=1
    21                           	psect	text8,global,reloc=2,class=CODE,delta=1
    22                           	psect	text9,global,reloc=2,class=CODE,delta=1
    23                           	psect	text10,global,reloc=2,class=CODE,delta=1
    24                           	psect	text11,global,reloc=2,class=CODE,delta=1
    25                           	psect	text12,global,reloc=2,class=CODE,delta=1
    26                           	psect	text13,global,reloc=2,class=CODE,delta=1
    27                           	psect	text14,global,reloc=2,class=CODE,delta=1
    28                           	psect	text15,global,reloc=2,class=CODE,delta=1
    29                           	psect	text16,global,reloc=2,class=CODE,delta=1
    30                           	psect	text17,global,reloc=2,class=CODE,delta=1
    31                           	psect	text18,global,reloc=2,class=CODE,delta=1
    32                           	psect	text19,global,reloc=2,class=CODE,delta=1
    33                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    34                           	psect	text21,global,reloc=2,class=CODE,delta=1
    35                           	psect	text22,global,reloc=2,class=CODE,delta=1
    36                           	psect	text23,global,reloc=2,class=CODE,delta=1
    37                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    38                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    39                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    40  0000                     
    41                           	psect	idataCOMRAM
    42  002846                     __pidataCOMRAM:
    43                           	opt stack 0
    44                           
    45                           ;initializer for _dir
    46  002846  0001               	dw	1
    47                           
    48                           ;initializer for _duty_set
    49  002848  00C8               	dw	200
    50                           
    51                           ;initializer for _previousPwm
    52  00284A  00C8               	dw	200
    53                           
    54                           ;initializer for _currentSpeed
    55  00284C  01                 	db	1
    56                           
    57                           ;initializer for _delay_quartz_frequency_value
    58  00284D  10                 	db	16
    59  0000                     _RXB1CON	set	3920
    60  0000                     _RXB1CONbits	set	3920
    61  0000                     _RXB1D0	set	3926
    62  0000                     _RXB1D1	set	3927
    63  0000                     _RXB1D2	set	3928
    64  0000                     _RXB1D3	set	3929
    65  0000                     _RXB1D4	set	3930
    66  0000                     _RXB1D5	set	3931
    67  0000                     _RXB1D6	set	3932
    68  0000                     _RXB1D7	set	3933
    69  0000                     _RXB1DLC	set	3925
    70  0000                     _RXB1DLCbits	set	3925
    71  0000                     _RXB1EIDH	set	3923
    72  0000                     _RXB1EIDL	set	3924
    73  0000                     _RXB1SIDH	set	3921
    74  0000                     _RXB1SIDL	set	3922
    75  0000                     _RXB1SIDLbits	set	3922
    76  0000                     _RXF0EIDH	set	3842
    77  0000                     _RXF0EIDL	set	3843
    78  0000                     _RXF0SIDH	set	3840
    79  0000                     _RXF0SIDL	set	3841
    80  0000                     _RXF0SIDLbits	set	3841
    81  0000                     _RXF1EIDH	set	3846
    82  0000                     _RXF1EIDL	set	3847
    83  0000                     _RXF1SIDH	set	3844
    84  0000                     _RXF1SIDL	set	3845
    85  0000                     _RXF1SIDLbits	set	3845
    86  0000                     _RXF2EIDH	set	3850
    87  0000                     _RXF2EIDL	set	3851
    88  0000                     _RXF2SIDH	set	3848
    89  0000                     _RXF2SIDL	set	3849
    90  0000                     _RXF2SIDLbits	set	3849
    91  0000                     _RXF3EIDH	set	3854
    92  0000                     _RXF3EIDL	set	3855
    93  0000                     _RXF3SIDH	set	3852
    94  0000                     _RXF3SIDL	set	3853
    95  0000                     _RXF3SIDLbits	set	3853
    96  0000                     _RXF4EIDH	set	3858
    97  0000                     _RXF4EIDL	set	3859
    98  0000                     _RXF4SIDH	set	3856
    99  0000                     _RXF4SIDL	set	3857
   100  0000                     _RXF4SIDLbits	set	3857
   101  0000                     _RXF5EIDH	set	3862
   102  0000                     _RXF5EIDL	set	3863
   103  0000                     _RXF5SIDH	set	3860
   104  0000                     _RXF5SIDL	set	3861
   105  0000                     _RXF5SIDLbits	set	3861
   106  0000                     _RXM0EIDH	set	3866
   107  0000                     _RXM0EIDL	set	3867
   108  0000                     _RXM0SIDH	set	3864
   109  0000                     _RXM0SIDL	set	3865
   110  0000                     _RXM0SIDLbits	set	3865
   111  0000                     _RXM1EIDH	set	3870
   112  0000                     _RXM1EIDL	set	3871
   113  0000                     _RXM1SIDH	set	3868
   114  0000                     _RXM1SIDL	set	3869
   115  0000                     _RXM1SIDLbits	set	3869
   116  0000                     _TXB0CONbits	set	3904
   117  0000                     _TXB0D0	set	3910
   118  0000                     _TXB0D1	set	3911
   119  0000                     _TXB0D2	set	3912
   120  0000                     _TXB0D3	set	3913
   121  0000                     _TXB0D4	set	3914
   122  0000                     _TXB0D5	set	3915
   123  0000                     _TXB0D6	set	3916
   124  0000                     _TXB0D7	set	3917
   125  0000                     _TXB0DLC	set	3909
   126  0000                     _TXB0DLCbits	set	3909
   127  0000                     _TXB0EIDH	set	3907
   128  0000                     _TXB0EIDL	set	3908
   129  0000                     _TXB0SIDH	set	3905
   130  0000                     _TXB0SIDL	set	3906
   131  0000                     _TXB0SIDLbits	set	3906
   132  0000                     _TXB1CONbits	set	3888
   133  0000                     _TXB1D0	set	3894
   134  0000                     _TXB1D1	set	3895
   135  0000                     _TXB1D2	set	3896
   136  0000                     _TXB1D3	set	3897
   137  0000                     _TXB1D4	set	3898
   138  0000                     _TXB1D5	set	3899
   139  0000                     _TXB1D6	set	3900
   140  0000                     _TXB1D7	set	3901
   141  0000                     _TXB1DLC	set	3893
   142  0000                     _TXB1DLCbits	set	3893
   143  0000                     _TXB1EIDH	set	3891
   144  0000                     _TXB1EIDL	set	3892
   145  0000                     _TXB1SIDH	set	3889
   146  0000                     _TXB1SIDL	set	3890
   147  0000                     _TXB1SIDLbits	set	3890
   148  0000                     _TXB2CONbits	set	3872
   149  0000                     _TXB2D0	set	3878
   150  0000                     _TXB2D1	set	3879
   151  0000                     _TXB2D2	set	3880
   152  0000                     _TXB2D3	set	3881
   153  0000                     _TXB2D4	set	3882
   154  0000                     _TXB2D5	set	3883
   155  0000                     _TXB2D6	set	3884
   156  0000                     _TXB2D7	set	3885
   157  0000                     _TXB2DLC	set	3877
   158  0000                     _TXB2DLCbits	set	3877
   159  0000                     _TXB2EIDH	set	3875
   160  0000                     _TXB2EIDL	set	3876
   161  0000                     _TXB2SIDH	set	3873
   162  0000                     _TXB2SIDL	set	3874
   163  0000                     _TXB2SIDLbits	set	3874
   164  0000                     _ADCON0bits	set	4034
   165  0000                     _ADCON1bits	set	4033
   166  0000                     _ADCON2bits	set	4032
   167  0000                     _ADRESH	set	4036
   168  0000                     _BRGCON1	set	3952
   169  0000                     _BRGCON2	set	3953
   170  0000                     _BRGCON2bits	set	3953
   171  0000                     _BRGCON3	set	3954
   172  0000                     _BRGCON3bits	set	3954
   173  0000                     _CANCON	set	3951
   174  0000                     _CANCONbits	set	3951
   175  0000                     _CANSTAT	set	3950
   176  0000                     _COMSTATbits	set	3956
   177  0000                     _ECCP1CON	set	4026
   178  0000                     _ECCPR1L	set	4027
   179  0000                     _INTCONbits	set	4082
   180  0000                     _IPR2bits	set	4002
   181  0000                     _IPR3bits	set	4005
   182  0000                     _LATA	set	3977
   183  0000                     _LATB	set	3978
   184  0000                     _LATC	set	3979
   185  0000                     _LATD	set	3980
   186  0000                     _LATE	set	3981
   187  0000                     _PIE1bits	set	3997
   188  0000                     _PIE2bits	set	4000
   189  0000                     _PIE3bits	set	4003
   190  0000                     _PIR1bits	set	3998
   191  0000                     _PIR2bits	set	4001
   192  0000                     _PIR3bits	set	4004
   193  0000                     _PORTAbits	set	3968
   194  0000                     _PORTCbits	set	3970
   195  0000                     _PR2	set	4043
   196  0000                     _RCONbits	set	4048
   197  0000                     _RXB0CON	set	3936
   198  0000                     _RXB0CONbits	set	3936
   199  0000                     _RXB0D0	set	3942
   200  0000                     _RXB0D1	set	3943
   201  0000                     _RXB0D2	set	3944
   202  0000                     _RXB0D3	set	3945
   203  0000                     _RXB0D4	set	3946
   204  0000                     _RXB0D5	set	3947
   205  0000                     _RXB0D6	set	3948
   206  0000                     _RXB0D7	set	3949
   207  0000                     _RXB0DLC	set	3941
   208  0000                     _RXB0DLCbits	set	3941
   209  0000                     _RXB0EIDH	set	3939
   210  0000                     _RXB0EIDL	set	3940
   211  0000                     _RXB0SIDH	set	3937
   212  0000                     _RXB0SIDL	set	3938
   213  0000                     _RXB0SIDLbits	set	3938
   214  0000                     _RXERRCNT	set	3957
   215  0000                     _T2CON	set	4042
   216  0000                     _T2CONbits	set	4042
   217  0000                     _T3CON	set	4017
   218  0000                     _TMR2	set	4044
   219  0000                     _TMR3H	set	4019
   220  0000                     _TMR3L	set	4018
   221  0000                     _TRISA	set	3986
   222  0000                     _TRISB	set	3987
   223  0000                     _TRISC	set	3988
   224  0000                     _TRISD	set	3989
   225  0000                     _TRISDbits	set	3989
   226  0000                     _TRISE	set	3990
   227  0000                     _TXERRCNT	set	3958
   228                           
   229                           ; #config settings
   230  0000                     
   231                           	psect	cinit
   232  002642                     __pcinit:
   233                           	opt stack 0
   234  002642                     start_initialization:
   235                           	opt stack 0
   236  002642                     __initialization:
   237                           	opt stack 0
   238                           
   239                           ; Clear objects allocated to BANK0 (73 bytes)
   240  002642  EE00  F060         	lfsr	0,__pbssBANK0
   241  002646  0E49               	movlw	73
   242  002648                     clear_0:
   243  002648  6AEE               	clrf	postinc0,c
   244  00264A  06E8               	decf	wreg,f,c
   245  00264C  E1FD               	bnz	clear_0
   246                           
   247                           ; Clear objects allocated to BITCOMRAM (2 bytes)
   248  00264E  6A3A               	clrf	((__pbitbssCOMRAM/(0+8)+1))& (0+255),c
   249  002650  6A39               	clrf	(__pbitbssCOMRAM/(0+8))& (0+255),c
   250                           
   251                           ; Clear objects allocated to COMRAM (25 bytes)
   252  002652  EE00  F020         	lfsr	0,__pbssCOMRAM
   253  002656  0E19               	movlw	25
   254  002658                     clear_1:
   255  002658  6AEE               	clrf	postinc0,c
   256  00265A  06E8               	decf	wreg,f,c
   257  00265C  E1FD               	bnz	clear_1
   258                           
   259                           ; Initialize objects allocated to COMRAM (8 bytes)
   260                           ; load TBLPTR registers with __pidataCOMRAM
   261  00265E  0E46               	movlw	low __pidataCOMRAM
   262  002660  6EF6               	movwf	tblptrl,c
   263  002662  0E28               	movlw	high __pidataCOMRAM
   264  002664  6EF7               	movwf	tblptrh,c
   265  002666  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   266  002668  6EF8               	movwf	tblptru,c
   267  00266A  EE00  F03B         	lfsr	0,__pdataCOMRAM
   268  00266E  EE10 F008          	lfsr	1,8
   269  002672                     copy_data0:
   270  002672  0009               	tblrd		*+
   271  002674  CFF5 FFEE          	movff	tablat,postinc0
   272  002678  50E5               	movf	postdec1,w,c
   273  00267A  50E1               	movf	fsr1l,w,c
   274  00267C  E1FA               	bnz	copy_data0
   275  00267E                     end_of_initialization:
   276                           	opt stack 0
   277  00267E                     __end_of__initialization:
   278                           	opt stack 0
   279  00267E  9043               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   280  002680  9243               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   281  002682  0E00               	movlw	low (__Lmediumconst shr (0+16))
   282  002684  6EF8               	movwf	tblptru,c
   283  002686  0100               	movlb	0
   284  002688  EFA6  F00C         	goto	_main	;jump to C main() function
   285                           tblptru	equ	0xFF8
   286                           tblptrh	equ	0xFF7
   287                           tblptrl	equ	0xFF6
   288                           tablat	equ	0xFF5
   289                           postinc0	equ	0xFEE
   290                           wreg	equ	0xFE8
   291                           postdec1	equ	0xFE5
   292                           fsr1l	equ	0xFE1
   293                           
   294                           	psect	bitbssCOMRAM
   295  0001C8                     __pbitbssCOMRAM:
   296                           	opt stack 0
   297  0001C8                     _can_retry:
   298                           	opt stack 0
   299  0001C8                     	ds	1
   300  0001C9                     _centralina_abs:
   301                           	opt stack 0
   302  0001C9                     	ds	1
   303  0001CA                     _centralina_comando:
   304                           	opt stack 0
   305  0001CA                     	ds	1
   306  0001CB                     _centralina_sterzo:
   307                           	opt stack 0
   308  0001CB                     	ds	1
   309  0001CC                     _message_sent:
   310                           	opt stack 0
   311  0001CC                     	ds	1
   312  0001CD                     _remote_frame:
   313                           	opt stack 0
   314  0001CD                     	ds	1
   315  0001CE                     _remote_frame1:
   316                           	opt stack 0
   317  0001CE                     	ds	1
   318  0001CF                     _request_sent:
   319                           	opt stack 0
   320  0001CF                     	ds	1
   321  0001D0                     _speed_fetched:
   322                           	opt stack 0
   323  0001D0                     	ds	1
   324                           tblptru	equ	0xFF8
   325                           tblptrh	equ	0xFF7
   326                           tblptrl	equ	0xFF6
   327                           tablat	equ	0xFF5
   328                           postinc0	equ	0xFEE
   329                           wreg	equ	0xFE8
   330                           postdec1	equ	0xFE5
   331                           fsr1l	equ	0xFE1
   332                           
   333                           	psect	bssCOMRAM
   334  000020                     __pbssCOMRAM:
   335                           	opt stack 0
   336  000020                     _id:
   337                           	opt stack 0
   338  000020                     	ds	4
   339  000024                     _id1:
   340                           	opt stack 0
   341  000024                     	ds	4
   342  000028                     _timeCounter:
   343                           	opt stack 0
   344  000028                     	ds	4
   345  00002C                     _clock_counter_reference:
   346                           	opt stack 0
   347  00002C                     	ds	2
   348  00002E                     _correzione:
   349                           	opt stack 0
   350  00002E                     	ds	2
   351  000030                     _errore:
   352                           	opt stack 0
   353  000030                     	ds	2
   354  000032                     _left_speed:
   355                           	opt stack 0
   356  000032                     	ds	2
   357  000034                     _right_speed:
   358                           	opt stack 0
   359  000034                     	ds	2
   360  000036                     _vBatt:
   361                           	opt stack 0
   362  000036                     	ds	2
   363  000038                     _requestSpeed:
   364                           	opt stack 0
   365  000038                     	ds	1
   366                           tblptru	equ	0xFF8
   367                           tblptrh	equ	0xFF7
   368                           tblptrl	equ	0xFF6
   369                           tablat	equ	0xFF5
   370                           postinc0	equ	0xFEE
   371                           wreg	equ	0xFE8
   372                           postdec1	equ	0xFE5
   373                           fsr1l	equ	0xFE1
   374                           
   375                           	psect	dataCOMRAM
   376  00003B                     __pdataCOMRAM:
   377                           	opt stack 0
   378  00003B                     _dir:
   379                           	opt stack 0
   380  00003B                     	ds	2
   381  00003D                     _duty_set:
   382                           	opt stack 0
   383  00003D                     	ds	2
   384  00003F                     _previousPwm:
   385                           	opt stack 0
   386  00003F                     	ds	2
   387  000041                     _currentSpeed:
   388                           	opt stack 0
   389  000041                     	ds	1
   390  000042                     _delay_quartz_frequency_value:
   391                           	opt stack 0
   392  000042                     	ds	1
   393                           tblptru	equ	0xFF8
   394                           tblptrh	equ	0xFF7
   395                           tblptrl	equ	0xFF6
   396                           tablat	equ	0xFF5
   397                           postinc0	equ	0xFEE
   398                           wreg	equ	0xFE8
   399                           postdec1	equ	0xFE5
   400                           fsr1l	equ	0xFE1
   401                           
   402                           	psect	bssBANK0
   403  000060                     __pbssBANK0:
   404                           	opt stack 0
   405  000060                     _counter_array:
   406                           	opt stack 0
   407  000060                     	ds	8
   408  000068                     _currentSpeed_array:
   409                           	opt stack 0
   410  000068                     	ds	8
   411  000070                     _counter:
   412                           	opt stack 0
   413  000070                     	ds	4
   414  000074                     _previousTimeCounter:
   415                           	opt stack 0
   416  000074                     	ds	4
   417  000078                     _previousTimeCounter1:
   418                           	opt stack 0
   419  000078                     	ds	4
   420  00007C                     _previousTimeCounter2:
   421                           	opt stack 0
   422  00007C                     	ds	4
   423  000080                     _duty_cycle:
   424                           	opt stack 0
   425  000080                     	ds	2
   426  000082                     _msg:
   427                           	opt stack 0
   428  000082                     	ds	15
   429  000091                     _data_array:
   430                           	opt stack 0
   431  000091                     	ds	8
   432  000099                     _data_array1:
   433                           	opt stack 0
   434  000099                     	ds	8
   435  0000A1                     _data_array_debug:
   436                           	opt stack 0
   437  0000A1                     	ds	8
   438                           tblptru	equ	0xFF8
   439                           tblptrh	equ	0xFF7
   440                           tblptrl	equ	0xFF6
   441                           tablat	equ	0xFF5
   442                           postinc0	equ	0xFEE
   443                           wreg	equ	0xFE8
   444                           postdec1	equ	0xFE5
   445                           fsr1l	equ	0xFE1
   446                           
   447                           	psect	cstackBANK0
   448  0000A9                     __pcstackBANK0:
   449                           	opt stack 0
   450  0000A9                     ?___awdiv:
   451                           	opt stack 0
   452  0000A9                     CANOperationMode@mode:
   453                           	opt stack 0
   454  0000A9                     _CANisTxReady$2993:
   455                           	opt stack 0
   456  0000A9                     OpenEPWM1@period:
   457                           	opt stack 0
   458  0000A9                     SetOutputEPWM1@outputmode:
   459                           	opt stack 0
   460  0000A9                     OpenTimer2@config:
   461                           	opt stack 0
   462  0000A9                     SetDCEPWM1@dutycycle:
   463                           	opt stack 0
   464  0000A9                     ___awdiv@dividend:
   465                           	opt stack 0
   466  0000A9                     CANsendMessage@identifier:
   467                           	opt stack 0
   468  0000A9                     CANSetMask@mask:
   469                           	opt stack 0
   470  0000A9                     CANSetFilter@filter:
   471                           	opt stack 0
   472                           
   473                           ; 4 bytes @ 0x0
   474  0000A9                     	ds	1
   475  0000AA                     SetOutputEPWM1@outputconfig:
   476                           	opt stack 0
   477                           
   478                           ; 1 bytes @ 0x1
   479  0000AA                     	ds	1
   480  0000AB                     ??_SetDCEPWM1:
   481  0000AB                     ___awdiv@divisor:
   482                           	opt stack 0
   483                           
   484                           ; 2 bytes @ 0x2
   485  0000AB                     	ds	2
   486  0000AD                     CANSetMask@type:
   487                           	opt stack 0
   488  0000AD                     CANSetFilter@type:
   489                           	opt stack 0
   490  0000AD                     ___awdiv@counter:
   491                           	opt stack 0
   492  0000AD                     CANsendMessage@data:
   493                           	opt stack 0
   494  0000AD                     SetDCEPWM1@DCycle:
   495                           	opt stack 0
   496                           
   497                           ; 2 bytes @ 0x4
   498  0000AD                     	ds	1
   499  0000AE                     ??_CANSetMask:
   500  0000AE                     ??_CANSetFilter:
   501  0000AE                     ___awdiv@sign:
   502                           	opt stack 0
   503                           
   504                           ; 1 bytes @ 0x5
   505  0000AE                     	ds	1
   506  0000AF                     CANsendMessage@dataLength:
   507                           	opt stack 0
   508  0000AF                     ___awdiv@quotient:
   509                           	opt stack 0
   510                           
   511                           ; 2 bytes @ 0x6
   512  0000AF                     	ds	1
   513  0000B0                     CANsendMessage@flags:
   514                           	opt stack 0
   515                           
   516                           ; 1 bytes @ 0x7
   517  0000B0                     	ds	1
   518  0000B1                     ??_CANsendMessage:
   519  0000B1                     ?___wmul:
   520                           	opt stack 0
   521  0000B1                     ___wmul@multiplier:
   522                           	opt stack 0
   523                           
   524                           ; 2 bytes @ 0x8
   525  0000B1                     	ds	1
   526  0000B2                     CANSetMask@numBuffer:
   527                           	opt stack 0
   528  0000B2                     CANSetFilter@numBuffer:
   529                           	opt stack 0
   530                           
   531                           ; 1 bytes @ 0x9
   532  0000B2                     	ds	1
   533  0000B3                     ___wmul@multiplicand:
   534                           	opt stack 0
   535  0000B3                     CANSetMask@tamp:
   536                           	opt stack 0
   537  0000B3                     CANSetFilter@tamp:
   538                           	opt stack 0
   539                           
   540                           ; 4 bytes @ 0xA
   541  0000B3                     	ds	2
   542  0000B5                     ___wmul@product:
   543                           	opt stack 0
   544  0000B5                     CANsendMessage@tamp:
   545                           	opt stack 0
   546                           
   547                           ; 4 bytes @ 0xC
   548  0000B5                     	ds	2
   549  0000B7                     ?_abs:
   550                           	opt stack 0
   551  0000B7                     CANInitialize@phaseSeg1:
   552                           	opt stack 0
   553  0000B7                     delay_ms@value_ms:
   554                           	opt stack 0
   555  0000B7                     abs@a:
   556                           	opt stack 0
   557                           
   558                           ; 2 bytes @ 0xE
   559  0000B7                     	ds	1
   560  0000B8                     CANInitialize@phaseSeg2:
   561                           	opt stack 0
   562                           
   563                           ; 1 bytes @ 0xF
   564  0000B8                     	ds	1
   565  0000B9                     ??_abs:
   566  0000B9                     CANInitialize@SJW:
   567                           	opt stack 0
   568  0000B9                     send_data@i:
   569                           	opt stack 0
   570                           
   571                           ; 1 bytes @ 0x10
   572  0000B9                     	ds	1
   573  0000BA                     CANInitialize@BRP:
   574                           	opt stack 0
   575                           
   576                           ; 1 bytes @ 0x11
   577  0000BA                     	ds	1
   578  0000BB                     CANInitialize@flags:
   579                           	opt stack 0
   580                           
   581                           ; 1 bytes @ 0x12
   582  0000BB                     	ds	1
   583  0000BC                     ??_CANInitialize:
   584                           
   585                           ; 0 bytes @ 0x13
   586  0000BC                     	ds	4
   587  0000C0                     CANInitialize@propSeg:
   588                           	opt stack 0
   589                           
   590                           ; 1 bytes @ 0x17
   591  0000C0                     	ds	1
   592  0000C1                     CANInitialize@FilterConfig1:
   593                           	opt stack 0
   594                           
   595                           ; 1 bytes @ 0x18
   596  0000C1                     	ds	1
   597  0000C2                     CANInitialize@FilterConfig2:
   598                           	opt stack 0
   599                           
   600                           ; 1 bytes @ 0x19
   601  0000C2                     	ds	1
   602  0000C3                     ??_main:
   603                           
   604                           ; 0 bytes @ 0x1A
   605  0000C3                     	ds	8
   606  0000CB                     main@period:
   607                           	opt stack 0
   608                           
   609                           ; 1 bytes @ 0x22
   610  0000CB                     	ds	1
   611                           tblptru	equ	0xFF8
   612                           tblptrh	equ	0xFF7
   613                           tblptrl	equ	0xFF6
   614                           tablat	equ	0xFF5
   615                           postinc0	equ	0xFEE
   616                           wreg	equ	0xFE8
   617                           postdec1	equ	0xFE5
   618                           fsr1l	equ	0xFE1
   619                           
   620                           	psect	cstackCOMRAM
   621  000001                     __pcstackCOMRAM:
   622                           	opt stack 0
   623  000001                     _CANisRxReady$2995:
   624                           	opt stack 0
   625  000001                     i1SetOutputEPWM1@outputmode:
   626                           	opt stack 0
   627  000001                     CANreceiveMessage@msg:
   628                           	opt stack 0
   629                           
   630                           ; 2 bytes @ 0x0
   631  000001                     	ds	1
   632  000002                     i1SetOutputEPWM1@outputconfig:
   633                           	opt stack 0
   634                           
   635                           ; 1 bytes @ 0x1
   636  000002                     	ds	1
   637  000003                     ??_CANreceiveMessage:
   638                           
   639                           ; 0 bytes @ 0x2
   640  000003                     	ds	8
   641  00000B                     CANreceiveMessage@error:
   642                           	opt stack 0
   643                           
   644                           ; 1 bytes @ 0xA
   645  00000B                     	ds	1
   646  00000C                     CANreceiveMessage@tamp:
   647                           	opt stack 0
   648                           
   649                           ; 1 bytes @ 0xB
   650  00000C                     	ds	1
   651  00000D                     ??_ISR_bassa:
   652                           
   653                           ; 0 bytes @ 0xC
   654  00000D                     	ds	19
   655                           tblptru	equ	0xFF8
   656                           tblptrh	equ	0xFF7
   657                           tblptrl	equ	0xFF6
   658                           tablat	equ	0xFF5
   659                           postinc0	equ	0xFEE
   660                           wreg	equ	0xFE8
   661                           postdec1	equ	0xFE5
   662                           fsr1l	equ	0xFE1
   663                           
   664 ;;
   665 ;;Main: autosize = 0, tempsize = 8, incstack = 0, save=0
   666 ;;
   667 ;; *************** function _main *****************
   668 ;; Defined at:
   669 ;;		line 143 in file "motore.c"
   670 ;; Parameters:    Size  Location     Type
   671 ;;		None
   672 ;; Auto vars:     Size  Location     Type
   673 ;;  period          1   34[BANK0 ] unsigned char 
   674 ;; Return value:  Size  Location     Type
   675 ;;                  2  668[None  ] int 
   676 ;; Registers used:
   677 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   678 ;; Tracked objects:
   679 ;;		On entry : 0/0
   680 ;;		On exit  : 0/0
   681 ;;		Unchanged: 0/0
   682 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   683 ;;      Params:         0       0       0       0
   684 ;;      Locals:         0       1       0       0
   685 ;;      Temps:          0       8       0       0
   686 ;;      Totals:         0       9       0       0
   687 ;;Total ram usage:        9 bytes
   688 ;; Hardware stack levels required when called:    5
   689 ;; This function calls:
   690 ;;		_CANisRXwarningON
   691 ;;		_CANisTXwarningON
   692 ;;		_CANsendMessage
   693 ;;		_OpenEPWM1
   694 ;;		_OpenTimer2
   695 ;;		_SetDCEPWM1
   696 ;;		_SetOutputEPWM1
   697 ;;		___awdiv
   698 ;;		___wmul
   699 ;;		_abs
   700 ;;		_battery_measure
   701 ;;		_configurazione_iniziale
   702 ;;		_delay_ms
   703 ;;		_send_data
   704 ;; This function is called by:
   705 ;;		Startup code after reset
   706 ;; This function uses a non-reentrant model
   707 ;;
   708                           
   709                           	psect	text0
   710  00194C                     __ptext0:
   711                           	opt stack 0
   712  00194C                     _main:
   713                           	opt stack 26
   714                           
   715                           ;motore.c: 144: unsigned char period;
   716                           ;motore.c: 145: configurazione_iniziale();
   717                           
   718                           ;incstack = 0
   719  00194C  EC59  F012         	call	_configurazione_iniziale	;wreg free
   720                           
   721                           ;motore.c: 146: PORTAbits.RA1 = 1;
   722  001950  8280               	bsf	3968,1,c	;volatile
   723                           
   724                           ;motore.c: 147: PORTCbits.RC1 = 1;
   725  001952  8282               	bsf	3970,1,c	;volatile
   726                           
   727                           ;motore.c: 148: delay_ms(500);
   728  001954  0E01               	movlw	1
   729  001956  0100               	movlb	0	; () banked
   730  001958  6FB8               	movwf	(delay_ms@value_ms+1)& (0+255),b
   731  00195A  0EF4               	movlw	244
   732  00195C  6FB7               	movwf	delay_ms@value_ms& (0+255),b
   733  00195E  ECA5  F013         	call	_delay_ms	;wreg free
   734                           
   735                           ;motore.c: 149: PORTAbits.RA1 = 0;
   736  001962  9280               	bcf	3968,1,c	;volatile
   737                           
   738                           ;motore.c: 150: PORTCbits.RC1 = 0;
   739  001964  9282               	bcf	3970,1,c	;volatile
   740                           
   741                           ;motore.c: 151: OpenTimer2(0b01111111 & 0b11111110 & 0b10000111);
   742  001966  0E06               	movlw	6
   743  001968  ECE7  F013         	call	_OpenTimer2
   744                           
   745                           ;motore.c: 152: period = 0xFE;
   746  00196C  0EFE               	movlw	254
   747  00196E  0100               	movlb	0	; () banked
   748  001970  6FCB               	movwf	main@period& (0+255),b
   749                           
   750                           ; BSR set to: 0
   751                           ;motore.c: 153: OpenEPWM1(period);
   752  001972  0100               	movlb	0	; () banked
   753  001974  51CB               	movf	main@period& (0+255),w,b
   754  001976  EC0E  F014         	call	_OpenEPWM1
   755                           
   756                           ;motore.c: 154: speed_fetched = 1;
   757  00197A  803A               	bsf	_speed_fetched/(0+8),_speed_fetched& (0+7),c
   758                           
   759                           ;motore.c: 155: SetOutputEPWM1(0b01111111, 0b11111100);
   760  00197C  0EFC               	movlw	252
   761  00197E  0100               	movlb	0	; () banked
   762  001980  6FA9               	movwf	SetOutputEPWM1@outputmode& (0+255),b
   763  001982  0E7F               	movlw	127
   764  001984  ECF8  F012         	call	_SetOutputEPWM1
   765                           
   766                           ;motore.c: 156: SetDCEPWM1(300);
   767  001988  0E01               	movlw	1
   768  00198A  0100               	movlb	0	; () banked
   769  00198C  6FAA               	movwf	(SetDCEPWM1@dutycycle+1)& (0+255),b
   770  00198E  0E2C               	movlw	44
   771  001990  6FA9               	movwf	SetDCEPWM1@dutycycle& (0+255),b
   772  001992  EC46  F013         	call	_SetDCEPWM1	;wreg free
   773                           
   774                           ;motore.c: 157: delay_ms(500);
   775  001996  0E01               	movlw	1
   776  001998  0100               	movlb	0	; () banked
   777  00199A  6FB8               	movwf	(delay_ms@value_ms+1)& (0+255),b
   778  00199C  0EF4               	movlw	244
   779  00199E  6FB7               	movwf	delay_ms@value_ms& (0+255),b
   780  0019A0  ECA5  F013         	call	_delay_ms	;wreg free
   781                           
   782                           ;motore.c: 158: SetDCEPWM1(0);
   783  0019A4  0E00               	movlw	0
   784  0019A6  0100               	movlb	0	; () banked
   785  0019A8  6FAA               	movwf	(SetDCEPWM1@dutycycle+1)& (0+255),b
   786  0019AA  0E00               	movlw	0
   787  0019AC  6FA9               	movwf	SetDCEPWM1@dutycycle& (0+255),b
   788  0019AE  EC46  F013         	call	_SetDCEPWM1	;wreg free
   789  0019B2                     l4976:
   790                           
   791                           ;motore.c: 161: if ((timeCounter - previousTimeCounter1 >= 15)) {
   792  0019B2  C078  F0C3         	movff	_previousTimeCounter1,??_main
   793  0019B6  C079  F0C4         	movff	_previousTimeCounter1+1,??_main+1
   794  0019BA  C07A  F0C5         	movff	_previousTimeCounter1+2,??_main+2
   795  0019BE  C07B  F0C6         	movff	_previousTimeCounter1+3,??_main+3
   796  0019C2  0100               	movlb	0	; () banked
   797  0019C4  1FC3               	comf	??_main& (0+255),f,b
   798  0019C6  1FC4               	comf	(??_main+1)& (0+255),f,b
   799  0019C8  1FC5               	comf	(??_main+2)& (0+255),f,b
   800  0019CA  1FC6               	comf	(??_main+3)& (0+255),f,b
   801  0019CC  2BC3               	incf	??_main& (0+255),f,b
   802  0019CE  0E00               	movlw	0
   803  0019D0  23C4               	addwfc	(??_main+1)& (0+255),f,b
   804  0019D2  23C5               	addwfc	(??_main+2)& (0+255),f,b
   805  0019D4  23C6               	addwfc	(??_main+3)& (0+255),f,b
   806  0019D6  5028               	movf	_timeCounter,w,c
   807  0019D8  0100               	movlb	0	; () banked
   808  0019DA  25C3               	addwf	??_main& (0+255),w,b
   809  0019DC  0100               	movlb	0	; () banked
   810  0019DE  6FC7               	movwf	(??_main+4)& (0+255),b
   811  0019E0  5029               	movf	_timeCounter+1,w,c
   812  0019E2  0100               	movlb	0	; () banked
   813  0019E4  21C4               	addwfc	(??_main+1)& (0+255),w,b
   814  0019E6  0100               	movlb	0	; () banked
   815  0019E8  6FC8               	movwf	(??_main+5)& (0+255),b
   816  0019EA  502A               	movf	_timeCounter+2,w,c
   817  0019EC  0100               	movlb	0	; () banked
   818  0019EE  21C5               	addwfc	(??_main+2)& (0+255),w,b
   819  0019F0  0100               	movlb	0	; () banked
   820  0019F2  6FC9               	movwf	(??_main+6)& (0+255),b
   821  0019F4  502B               	movf	_timeCounter+3,w,c
   822  0019F6  0100               	movlb	0	; () banked
   823  0019F8  21C6               	addwfc	(??_main+3)& (0+255),w,b
   824  0019FA  0100               	movlb	0	; () banked
   825  0019FC  6FCA               	movwf	(??_main+7)& (0+255),b
   826  0019FE  0100               	movlb	0	; () banked
   827  001A00  51CA               	movf	(??_main+7)& (0+255),w,b
   828  001A02  0100               	movlb	0	; () banked
   829  001A04  11C9               	iorwf	(??_main+6)& (0+255),w,b
   830  001A06  0100               	movlb	0	; () banked
   831  001A08  11C8               	iorwf	(??_main+5)& (0+255),w,b
   832  001A0A  E105               	bnz	u6420
   833  001A0C  0E0F               	movlw	15
   834  001A0E  0100               	movlb	0	; () banked
   835  001A10  5DC7               	subwf	(??_main+4)& (0+255),w,b
   836  001A12  A0D8               	btfss	status,0,c
   837  001A14  D0EF               	goto	l5006
   838  001A16                     u6420:
   839                           
   840                           ; BSR set to: 0
   841                           ;motore.c: 162: CANsendMessage(0b00000000000000000000000000110, data_array_debug, 8, CAN
      +                          _CONFIG_STD_MSG & CAN_REMOTE_TX_FRAME & CAN_TX_PRIORITY_0);
   842  001A16  0E06               	movlw	6
   843  001A18  0100               	movlb	0	; () banked
   844  001A1A  6FA9               	movwf	CANsendMessage@identifier& (0+255),b
   845  001A1C  0E00               	movlw	0
   846  001A1E  6FAA               	movwf	(CANsendMessage@identifier+1)& (0+255),b
   847  001A20  0E00               	movlw	0
   848  001A22  6FAB               	movwf	(CANsendMessage@identifier+2)& (0+255),b
   849  001A24  0E00               	movlw	0
   850  001A26  6FAC               	movwf	(CANsendMessage@identifier+3)& (0+255),b
   851  001A28  0EA1               	movlw	low _data_array_debug
   852  001A2A  0100               	movlb	0	; () banked
   853  001A2C  6FAD               	movwf	CANsendMessage@data& (0+255),b
   854  001A2E  0E00               	movlw	high _data_array_debug
   855  001A30  0100               	movlb	0	; () banked
   856  001A32  6FAE               	movwf	(CANsendMessage@data+1)& (0+255),b
   857  001A34  0E08               	movlw	8
   858  001A36  0100               	movlb	0	; () banked
   859  001A38  6FAF               	movwf	CANsendMessage@dataLength& (0+255),b
   860  001A3A  0EFC               	movlw	252
   861  001A3C  0100               	movlb	0	; () banked
   862  001A3E  6FB0               	movwf	CANsendMessage@flags& (0+255),b
   863  001A40  EC5A  F006         	call	_CANsendMessage	;wreg free
   864                           
   865                           ;motore.c: 163: if (speed_fetched == 1) {
   866  001A44  A03A               	btfss	_speed_fetched/(0+8),_speed_fetched& (0+7),c
   867  001A46  D0C8               	goto	l671
   868                           
   869                           ;motore.c: 164: PORTCbits.RC1 = ~PORTCbits.RC1;
   870  001A48  A282               	btfss	3970,1,c	;volatile
   871  001A4A  D002               	goto	u6440
   872  001A4C  0E01               	movlw	1
   873  001A4E  D001               	goto	u6446
   874  001A50                     u6440:
   875  001A50  0E00               	movlw	0
   876  001A52                     u6446:
   877  001A52  0AFF               	xorlw	255
   878  001A54  0100               	movlb	0	; () banked
   879  001A56  6FC3               	movwf	??_main& (0+255),b
   880  001A58  0100               	movlb	0	; () banked
   881  001A5A  47C3               	rlncf	??_main& (0+255),f,b
   882  001A5C  5082               	movf	3970,w,c	;volatile
   883  001A5E  0100               	movlb	0	; () banked
   884  001A60  19C3               	xorwf	??_main& (0+255),w,b
   885  001A62  0BFD               	andlw	-3
   886  001A64  19C3               	xorwf	??_main& (0+255),w,b
   887  001A66  6E82               	movwf	3970,c	;volatile
   888                           
   889                           ; BSR set to: 0
   890                           ;motore.c: 165: speed_fetched = 0;
   891  001A68  903A               	bcf	_speed_fetched/(0+8),_speed_fetched& (0+7),c
   892                           
   893                           ;motore.c: 166: currentSpeed = ((left_speed + right_speed) / 2);
   894  001A6A  5034               	movf	_right_speed,w,c
   895  001A6C  2432               	addwf	_left_speed,w,c
   896  001A6E  0100               	movlb	0	; () banked
   897  001A70  6FC3               	movwf	??_main& (0+255),b
   898  001A72  5035               	movf	_right_speed+1,w,c
   899  001A74  2033               	addwfc	_left_speed+1,w,c
   900  001A76  0100               	movlb	0	; () banked
   901  001A78  6FC4               	movwf	(??_main+1)& (0+255),b
   902  001A7A  90D8               	bcf	status,0,c
   903  001A7C  0100               	movlb	0	; () banked
   904  001A7E  31C4               	rrcf	(??_main+1)& (0+255),w,b
   905  001A80  0100               	movlb	0	; () banked
   906  001A82  6FC6               	movwf	(??_main+3)& (0+255),b
   907  001A84  0100               	movlb	0	; () banked
   908  001A86  31C3               	rrcf	??_main& (0+255),w,b
   909  001A88  0100               	movlb	0	; () banked
   910  001A8A  6FC5               	movwf	(??_main+2)& (0+255),b
   911  001A8C  0100               	movlb	0	; () banked
   912  001A8E  51C5               	movf	(??_main+2)& (0+255),w,b
   913  001A90  6E41               	movwf	_currentSpeed,c	;volatile
   914                           
   915                           ; BSR set to: 0
   916                           ;motore.c: 167: requestSpeed = 25;
   917  001A92  0E19               	movlw	25
   918  001A94  6E38               	movwf	_requestSpeed,c	;volatile
   919                           
   920                           ; BSR set to: 0
   921                           ;motore.c: 168: errore = abs((currentSpeed - requestSpeed)*10);
   922  001A96  5038               	movf	_requestSpeed,w,c	;volatile
   923  001A98  0100               	movlb	0	; () banked
   924  001A9A  6FC3               	movwf	??_main& (0+255),b
   925  001A9C  6BC4               	clrf	(??_main+1)& (0+255),b
   926  001A9E  0100               	movlb	0	; () banked
   927  001AA0  1FC3               	comf	??_main& (0+255),f,b
   928  001AA2  1FC4               	comf	(??_main+1)& (0+255),f,b
   929  001AA4  4BC3               	infsnz	??_main& (0+255),f,b
   930  001AA6  2BC4               	incf	(??_main+1)& (0+255),f,b
   931  001AA8  5041               	movf	_currentSpeed,w,c	;volatile
   932  001AAA  0100               	movlb	0	; () banked
   933  001AAC  25C3               	addwf	??_main& (0+255),w,b
   934  001AAE  0100               	movlb	0	; () banked
   935  001AB0  6FB1               	movwf	___wmul@multiplier& (0+255),b
   936  001AB2  0E00               	movlw	0
   937  001AB4  0100               	movlb	0	; () banked
   938  001AB6  21C4               	addwfc	(??_main+1)& (0+255),w,b
   939  001AB8  0100               	movlb	0	; () banked
   940  001ABA  6FB2               	movwf	(___wmul@multiplier+1)& (0+255),b
   941  001ABC  0E00               	movlw	0
   942  001ABE  0100               	movlb	0	; () banked
   943  001AC0  6FB4               	movwf	(___wmul@multiplicand+1)& (0+255),b
   944  001AC2  0E0A               	movlw	10
   945  001AC4  6FB3               	movwf	___wmul@multiplicand& (0+255),b
   946  001AC6  EC8A  F013         	call	___wmul	;wreg free
   947  001ACA  C0B1  F0B7         	movff	?___wmul,abs@a
   948  001ACE  C0B2  F0B8         	movff	?___wmul+1,abs@a+1
   949  001AD2  ECBF  F013         	call	_abs	;wreg free
   950  001AD6  C0B7  F030         	movff	?_abs,_errore
   951  001ADA  C0B8  F031         	movff	?_abs+1,_errore+1
   952                           
   953                           ;motore.c: 169: correzione = ((errore / 17)*(errore / 17))*2;
   954  001ADE  0E00               	movlw	0
   955  001AE0  0100               	movlb	0	; () banked
   956  001AE2  6FAC               	movwf	(___awdiv@divisor+1)& (0+255),b
   957  001AE4  0E11               	movlw	17
   958  001AE6  6FAB               	movwf	___awdiv@divisor& (0+255),b
   959  001AE8  C030  F0A9         	movff	_errore,___awdiv@dividend
   960  001AEC  C031  F0AA         	movff	_errore+1,___awdiv@dividend+1
   961  001AF0  ECFA  F011         	call	___awdiv	;wreg free
   962  001AF4  C0A9  F0B1         	movff	?___awdiv,___wmul@multiplier
   963  001AF8  C0AA  F0B2         	movff	?___awdiv+1,___wmul@multiplier+1
   964  001AFC  0E00               	movlw	0
   965  001AFE  0100               	movlb	0	; () banked
   966  001B00  6FAC               	movwf	(___awdiv@divisor+1)& (0+255),b
   967  001B02  0E11               	movlw	17
   968  001B04  6FAB               	movwf	___awdiv@divisor& (0+255),b
   969  001B06  C030  F0A9         	movff	_errore,___awdiv@dividend
   970  001B0A  C031  F0AA         	movff	_errore+1,___awdiv@dividend+1
   971  001B0E  ECFA  F011         	call	___awdiv	;wreg free
   972  001B12  C0A9  F0B3         	movff	?___awdiv,___wmul@multiplicand
   973  001B16  C0AA  F0B4         	movff	?___awdiv+1,___wmul@multiplicand+1
   974  001B1A  EC8A  F013         	call	___wmul	;wreg free
   975  001B1E  90D8               	bcf	status,0,c
   976  001B20  0100               	movlb	0	; () banked
   977  001B22  35B1               	rlcf	?___wmul& (0+255),w,b
   978  001B24  6E2E               	movwf	_correzione,c
   979  001B26  0100               	movlb	0	; () banked
   980  001B28  35B2               	rlcf	(?___wmul+1)& (0+255),w,b
   981  001B2A  6E2F               	movwf	_correzione+1,c
   982                           
   983                           ; BSR set to: 0
   984                           ;motore.c: 170: if (correzione > 3) {
   985  001B2C  502F               	movf	_correzione+1,w,c
   986  001B2E  E104               	bnz	u6450
   987  001B30  0E04               	movlw	4
   988  001B32  5C2E               	subwf	_correzione,w,c
   989  001B34  A0D8               	btfss	status,0,c
   990  001B36  D048               	goto	l672
   991  001B38                     u6450:
   992                           
   993                           ; BSR set to: 0
   994                           ;motore.c: 171: if ((currentSpeed - requestSpeed) > 0) {
   995  001B38  5038               	movf	_requestSpeed,w,c	;volatile
   996  001B3A  0100               	movlb	0	; () banked
   997  001B3C  6FC3               	movwf	??_main& (0+255),b
   998  001B3E  6BC4               	clrf	(??_main+1)& (0+255),b
   999  001B40  0100               	movlb	0	; () banked
  1000  001B42  1FC3               	comf	??_main& (0+255),f,b
  1001  001B44  1FC4               	comf	(??_main+1)& (0+255),f,b
  1002  001B46  4BC3               	infsnz	??_main& (0+255),f,b
  1003  001B48  2BC4               	incf	(??_main+1)& (0+255),f,b
  1004  001B4A  5041               	movf	_currentSpeed,w,c	;volatile
  1005  001B4C  0100               	movlb	0	; () banked
  1006  001B4E  6FC5               	movwf	(??_main+2)& (0+255),b
  1007  001B50  6BC6               	clrf	(??_main+3)& (0+255),b
  1008  001B52  0100               	movlb	0	; () banked
  1009  001B54  51C3               	movf	??_main& (0+255),w,b
  1010  001B56  0100               	movlb	0	; () banked
  1011  001B58  27C5               	addwf	(??_main+2)& (0+255),f,b
  1012  001B5A  0100               	movlb	0	; () banked
  1013  001B5C  51C4               	movf	(??_main+1)& (0+255),w,b
  1014  001B5E  0100               	movlb	0	; () banked
  1015  001B60  23C6               	addwfc	(??_main+3)& (0+255),f,b
  1016  001B62  0100               	movlb	0	; () banked
  1017  001B64  BFC6               	btfsc	(??_main+3)& (0+255),7,b
  1018  001B66  D01F               	goto	l5000
  1019  001B68  0100               	movlb	0	; () banked
  1020  001B6A  51C6               	movf	(??_main+3)& (0+255),w,b
  1021  001B6C  E104               	bnz	u6460
  1022  001B6E  0100               	movlb	0	; () banked
  1023  001B70  05C5               	decf	(??_main+2)& (0+255),w,b
  1024  001B72  A0D8               	btfss	status,0,c
  1025  001B74  D018               	goto	l5000
  1026  001B76                     u6460:
  1027                           
  1028                           ; BSR set to: 0
  1029                           ;motore.c: 172: duty_set = previousPwm - correzione;
  1030  001B76  C02E  F0C3         	movff	_correzione,??_main
  1031  001B7A  C02F  F0C4         	movff	_correzione+1,??_main+1
  1032  001B7E  0100               	movlb	0	; () banked
  1033  001B80  1FC3               	comf	??_main& (0+255),f,b
  1034  001B82  1FC4               	comf	(??_main+1)& (0+255),f,b
  1035  001B84  4BC3               	infsnz	??_main& (0+255),f,b
  1036  001B86  2BC4               	incf	(??_main+1)& (0+255),f,b
  1037  001B88  503F               	movf	_previousPwm,w,c
  1038  001B8A  0100               	movlb	0	; () banked
  1039  001B8C  25C3               	addwf	??_main& (0+255),w,b
  1040  001B8E  6E3D               	movwf	_duty_set,c
  1041  001B90  5040               	movf	_previousPwm+1,w,c
  1042  001B92  0100               	movlb	0	; () banked
  1043  001B94  21C4               	addwfc	(??_main+1)& (0+255),w,b
  1044  001B96  6E3E               	movwf	_duty_set+1,c
  1045                           
  1046                           ;motore.c: 173: if (duty_set < 0) {
  1047  001B98  AE3E               	btfss	_duty_set+1,7,c
  1048  001B9A  D01A               	goto	l677
  1049                           
  1050                           ; BSR set to: 0
  1051                           ;motore.c: 174: duty_set = 0;
  1052  001B9C  0E00               	movlw	0
  1053  001B9E  6E3E               	movwf	_duty_set+1,c
  1054  001BA0  0E00               	movlw	0
  1055  001BA2  6E3D               	movwf	_duty_set,c
  1056                           
  1057                           ; BSR set to: 0
  1058                           ;motore.c: 175: }
  1059                           ;motore.c: 176: } else {
  1060  001BA4  D015               	goto	l677
  1061  001BA6                     l5000:
  1062                           
  1063                           ; BSR set to: 0
  1064                           ;motore.c: 177: duty_set = previousPwm + correzione;
  1065  001BA6  502E               	movf	_correzione,w,c
  1066  001BA8  243F               	addwf	_previousPwm,w,c
  1067  001BAA  6E3D               	movwf	_duty_set,c
  1068  001BAC  502F               	movf	_correzione+1,w,c
  1069  001BAE  2040               	addwfc	_previousPwm+1,w,c
  1070  001BB0  6E3E               	movwf	_duty_set+1,c
  1071                           
  1072                           ;motore.c: 178: if (duty_set > 1024) {
  1073  001BB2  BE3E               	btfsc	_duty_set+1,7,c
  1074  001BB4  D00D               	goto	l677
  1075  001BB6  043D               	decf	_duty_set,w,c
  1076  001BB8  0E04               	movlw	4
  1077  001BBA  583E               	subwfb	_duty_set+1,w,c
  1078  001BBC  A0D8               	btfss	status,0,c
  1079  001BBE  D008               	goto	l677
  1080                           
  1081                           ; BSR set to: 0
  1082                           ;motore.c: 179: duty_set = 1023;
  1083  001BC0  0E03               	movlw	3
  1084  001BC2  6E3E               	movwf	_duty_set+1,c
  1085  001BC4  683D               	setf	_duty_set,c
  1086                           
  1087                           ; BSR set to: 0
  1088                           ;motore.c: 180: }
  1089                           ;motore.c: 181: }
  1090                           ;motore.c: 182: } else {
  1091                           
  1092                           ; BSR set to: 0
  1093  001BC6  D004               	goto	l677
  1094  001BC8                     l672:
  1095                           
  1096                           ; BSR set to: 0
  1097                           ;motore.c: 183: duty_set = previousPwm;
  1098  001BC8  C03F  F03D         	movff	_previousPwm,_duty_set
  1099  001BCC  C040  F03E         	movff	_previousPwm+1,_duty_set+1
  1100  001BD0                     l677:
  1101                           
  1102                           ; BSR set to: 0
  1103                           ;motore.c: 184: }
  1104                           ;motore.c: 185: previousPwm = duty_set;
  1105  001BD0  C03D  F03F         	movff	_duty_set,_previousPwm
  1106  001BD4  C03E  F040         	movff	_duty_set+1,_previousPwm+1
  1107  001BD8                     l671:
  1108                           
  1109                           ;motore.c: 186: }
  1110                           ;motore.c: 187: previousTimeCounter1 = timeCounter;
  1111  001BD8  C028  F078         	movff	_timeCounter,_previousTimeCounter1
  1112  001BDC  C029  F079         	movff	_timeCounter+1,_previousTimeCounter1+1
  1113  001BE0  C02A  F07A         	movff	_timeCounter+2,_previousTimeCounter1+2
  1114  001BE4  C02B  F07B         	movff	_timeCounter+3,_previousTimeCounter1+3
  1115                           
  1116                           ;motore.c: 188: SetDCEPWM1(duty_set);
  1117  001BE8  C03D  F0A9         	movff	_duty_set,SetDCEPWM1@dutycycle
  1118  001BEC  C03E  F0AA         	movff	_duty_set+1,SetDCEPWM1@dutycycle+1
  1119  001BF0  EC46  F013         	call	_SetDCEPWM1	;wreg free
  1120  001BF4                     l5006:
  1121                           
  1122                           ;motore.c: 189: }
  1123                           ;motore.c: 191: if ((remote_frame == 1) || (can_retry == 1)) {
  1124  001BF4  AA39               	btfss	_remote_frame/(0+8),_remote_frame& (0+7),c
  1125  001BF6  B039               	btfsc	_can_retry/(0+8),_can_retry& (0+7),c
  1126  001BF8  D001               	goto	l5010
  1127  001BFA  D002               	goto	l5012
  1128  001BFC                     l5010:
  1129                           
  1130                           ;motore.c: 192: send_data();
  1131  001BFC  EC77  F011         	call	_send_data	;wreg free
  1132  001C00                     l5012:
  1133                           
  1134                           ;motore.c: 193: }
  1135                           ;motore.c: 194: if ((CANisTXwarningON() == 1) || (CANisRXwarningON() == 1)) {
  1136  001C00  EC17  F014         	call	_CANisTXwarningON	;wreg free
  1137  001C04  06E8               	decf	wreg,f,c
  1138  001C06  B4D8               	btfsc	status,2,c
  1139  001C08  D005               	goto	l683
  1140  001C0A  EC1D  F014         	call	_CANisRXwarningON	;wreg free
  1141  001C0E  06E8               	decf	wreg,f,c
  1142  001C10  A4D8               	btfss	status,2,c
  1143  001C12  D014               	goto	l681
  1144  001C14                     l683:
  1145                           
  1146                           ;motore.c: 196: PORTAbits.RA1 = 1;
  1147  001C14  8280               	bsf	3968,1,c	;volatile
  1148                           
  1149                           ;motore.c: 197: delay_ms(200);
  1150  001C16  0E00               	movlw	0
  1151  001C18  0100               	movlb	0	; () banked
  1152  001C1A  6FB8               	movwf	(delay_ms@value_ms+1)& (0+255),b
  1153  001C1C  0EC8               	movlw	200
  1154  001C1E  6FB7               	movwf	delay_ms@value_ms& (0+255),b
  1155  001C20  ECA5  F013         	call	_delay_ms	;wreg free
  1156                           
  1157                           ;motore.c: 198: PORTAbits.RA1 = 0;
  1158  001C24  9280               	bcf	3968,1,c	;volatile
  1159                           
  1160                           ;motore.c: 199: delay_ms(200);
  1161  001C26  0E00               	movlw	0
  1162  001C28  0100               	movlb	0	; () banked
  1163  001C2A  6FB8               	movwf	(delay_ms@value_ms+1)& (0+255),b
  1164  001C2C  0EC8               	movlw	200
  1165  001C2E  6FB7               	movwf	delay_ms@value_ms& (0+255),b
  1166  001C30  ECA5  F013         	call	_delay_ms	;wreg free
  1167                           
  1168                           ;motore.c: 200: PORTAbits.RA1 = 1;
  1169  001C34  8280               	bsf	3968,1,c	;volatile
  1170                           
  1171                           ;motore.c: 201: COMSTATbits.TXWARN = 0;
  1172  001C36  9474               	bcf	3956,2,c	;volatile
  1173                           
  1174                           ;motore.c: 202: COMSTATbits.RXWARN = 0;
  1175  001C38  9274               	bcf	3956,1,c	;volatile
  1176                           
  1177                           ;motore.c: 203: } else {
  1178  001C3A  D001               	goto	l5026
  1179  001C3C                     l681:
  1180                           
  1181                           ;motore.c: 204: PORTAbits.RA1 = 0;
  1182  001C3C  9280               	bcf	3968,1,c	;volatile
  1183  001C3E                     l5026:
  1184                           
  1185                           ;motore.c: 205: }
  1186                           ;motore.c: 208: if ((timeCounter - previousTimeCounter) > 500) {
  1187  001C3E  C074  F0C3         	movff	_previousTimeCounter,??_main
  1188  001C42  C075  F0C4         	movff	_previousTimeCounter+1,??_main+1
  1189  001C46  C076  F0C5         	movff	_previousTimeCounter+2,??_main+2
  1190  001C4A  C077  F0C6         	movff	_previousTimeCounter+3,??_main+3
  1191  001C4E  0100               	movlb	0	; () banked
  1192  001C50  1FC3               	comf	??_main& (0+255),f,b
  1193  001C52  1FC4               	comf	(??_main+1)& (0+255),f,b
  1194  001C54  1FC5               	comf	(??_main+2)& (0+255),f,b
  1195  001C56  1FC6               	comf	(??_main+3)& (0+255),f,b
  1196  001C58  2BC3               	incf	??_main& (0+255),f,b
  1197  001C5A  0E00               	movlw	0
  1198  001C5C  23C4               	addwfc	(??_main+1)& (0+255),f,b
  1199  001C5E  23C5               	addwfc	(??_main+2)& (0+255),f,b
  1200  001C60  23C6               	addwfc	(??_main+3)& (0+255),f,b
  1201  001C62  5028               	movf	_timeCounter,w,c
  1202  001C64  0100               	movlb	0	; () banked
  1203  001C66  25C3               	addwf	??_main& (0+255),w,b
  1204  001C68  0100               	movlb	0	; () banked
  1205  001C6A  6FC7               	movwf	(??_main+4)& (0+255),b
  1206  001C6C  5029               	movf	_timeCounter+1,w,c
  1207  001C6E  0100               	movlb	0	; () banked
  1208  001C70  21C4               	addwfc	(??_main+1)& (0+255),w,b
  1209  001C72  0100               	movlb	0	; () banked
  1210  001C74  6FC8               	movwf	(??_main+5)& (0+255),b
  1211  001C76  502A               	movf	_timeCounter+2,w,c
  1212  001C78  0100               	movlb	0	; () banked
  1213  001C7A  21C5               	addwfc	(??_main+2)& (0+255),w,b
  1214  001C7C  0100               	movlb	0	; () banked
  1215  001C7E  6FC9               	movwf	(??_main+6)& (0+255),b
  1216  001C80  502B               	movf	_timeCounter+3,w,c
  1217  001C82  0100               	movlb	0	; () banked
  1218  001C84  21C6               	addwfc	(??_main+3)& (0+255),w,b
  1219  001C86  0100               	movlb	0	; () banked
  1220  001C88  6FCA               	movwf	(??_main+7)& (0+255),b
  1221  001C8A  0100               	movlb	0	; () banked
  1222  001C8C  51CA               	movf	(??_main+7)& (0+255),w,b
  1223  001C8E  0100               	movlb	0	; () banked
  1224  001C90  11C9               	iorwf	(??_main+6)& (0+255),w,b
  1225  001C92  E108               	bnz	u6530
  1226  001C94  0EF5               	movlw	245
  1227  001C96  0100               	movlb	0	; () banked
  1228  001C98  5DC7               	subwf	(??_main+4)& (0+255),w,b
  1229  001C9A  0E01               	movlw	1
  1230  001C9C  0100               	movlb	0	; () banked
  1231  001C9E  59C8               	subwfb	(??_main+5)& (0+255),w,b
  1232  001CA0  A0D8               	btfss	status,0,c
  1233  001CA2  D036               	goto	l5048
  1234  001CA4                     u6530:
  1235                           
  1236                           ; BSR set to: 0
  1237                           ;motore.c: 209: if (request_sent == 0) {
  1238  001CA4  BE39               	btfsc	_request_sent/(0+8),_request_sent& (0+7),c
  1239  001CA6  D018               	goto	l5034
  1240                           
  1241                           ; BSR set to: 0
  1242                           ;motore.c: 210: CANsendMessage(0b00000000000000000000000000010, data_array, 8, CAN_CONFI
      +                          G_STD_MSG & CAN_REMOTE_TX_FRAME & CAN_TX_PRIORITY_0);
  1243  001CA8  0E02               	movlw	2
  1244  001CAA  0100               	movlb	0	; () banked
  1245  001CAC  6FA9               	movwf	CANsendMessage@identifier& (0+255),b
  1246  001CAE  0E00               	movlw	0
  1247  001CB0  6FAA               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  1248  001CB2  0E00               	movlw	0
  1249  001CB4  6FAB               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  1250  001CB6  0E00               	movlw	0
  1251  001CB8  6FAC               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  1252  001CBA  0E91               	movlw	low _data_array
  1253  001CBC  0100               	movlb	0	; () banked
  1254  001CBE  6FAD               	movwf	CANsendMessage@data& (0+255),b
  1255  001CC0  0E00               	movlw	high _data_array
  1256  001CC2  0100               	movlb	0	; () banked
  1257  001CC4  6FAE               	movwf	(CANsendMessage@data+1)& (0+255),b
  1258  001CC6  0E08               	movlw	8
  1259  001CC8  0100               	movlb	0	; () banked
  1260  001CCA  6FAF               	movwf	CANsendMessage@dataLength& (0+255),b
  1261  001CCC  0EFC               	movlw	252
  1262  001CCE  0100               	movlb	0	; () banked
  1263  001CD0  6FB0               	movwf	CANsendMessage@flags& (0+255),b
  1264  001CD2  EC5A  F006         	call	_CANsendMessage	;wreg free
  1265                           
  1266                           ;motore.c: 211: request_sent = 1;
  1267  001CD6  8E39               	bsf	_request_sent/(0+8),_request_sent& (0+7),c
  1268  001CD8                     l5034:
  1269                           
  1270                           ;motore.c: 212: }
  1271                           ;motore.c: 213: if (request_sent == 1) {
  1272  001CD8  AE39               	btfss	_request_sent/(0+8),_request_sent& (0+7),c
  1273  001CDA  D012               	goto	l5046
  1274                           
  1275                           ;motore.c: 215: if ((centralina_abs == 1)&&(centralina_sterzo == 1)&&(centralina_comando
      +                           == 1)) {
  1276  001CDC  B239               	btfsc	_centralina_abs/(0+8),_centralina_abs& (0+7),c
  1277  001CDE  A639               	btfss	_centralina_sterzo/(0+8),_centralina_sterzo& (0+7),c
  1278  001CE0  D007               	goto	l688
  1279  001CE2  A439               	btfss	_centralina_comando/(0+8),_centralina_comando& (0+7),c
  1280  001CE4  D005               	goto	l688
  1281                           
  1282                           ;motore.c: 216: centralina_abs = 0;
  1283  001CE6  9239               	bcf	_centralina_abs/(0+8),_centralina_abs& (0+7),c
  1284                           
  1285                           ;motore.c: 217: centralina_sterzo = 0;
  1286  001CE8  9639               	bcf	_centralina_sterzo/(0+8),_centralina_sterzo& (0+7),c
  1287                           
  1288                           ;motore.c: 218: centralina_comando = 0;
  1289  001CEA  9439               	bcf	_centralina_comando/(0+8),_centralina_comando& (0+7),c
  1290                           
  1291                           ;motore.c: 219: PORTAbits.RA1 = 0;
  1292  001CEC  9280               	bcf	3968,1,c	;volatile
  1293                           
  1294                           ;motore.c: 220: } else {
  1295  001CEE  D008               	goto	l5046
  1296  001CF0                     l688:
  1297                           
  1298                           ;motore.c: 222: PORTAbits.RA1 = 1;
  1299  001CF0  8280               	bsf	3968,1,c	;volatile
  1300                           
  1301                           ;motore.c: 223: delay_ms(200);
  1302  001CF2  0E00               	movlw	0
  1303  001CF4  0100               	movlb	0	; () banked
  1304  001CF6  6FB8               	movwf	(delay_ms@value_ms+1)& (0+255),b
  1305  001CF8  0EC8               	movlw	200
  1306  001CFA  6FB7               	movwf	delay_ms@value_ms& (0+255),b
  1307  001CFC  ECA5  F013         	call	_delay_ms	;wreg free
  1308  001D00                     l5046:
  1309                           
  1310                           ;motore.c: 224: }
  1311                           ;motore.c: 225: }
  1312                           ;motore.c: 226: previousTimeCounter = timeCounter;
  1313  001D00  C028  F074         	movff	_timeCounter,_previousTimeCounter
  1314  001D04  C029  F075         	movff	_timeCounter+1,_previousTimeCounter+1
  1315  001D08  C02A  F076         	movff	_timeCounter+2,_previousTimeCounter+2
  1316  001D0C  C02B  F077         	movff	_timeCounter+3,_previousTimeCounter+3
  1317  001D10                     l5048:
  1318                           
  1319                           ;motore.c: 227: }
  1320                           ;motore.c: 228: if ((timeCounter - previousTimeCounter2 >= 100)) {
  1321  001D10  C07C  F0C3         	movff	_previousTimeCounter2,??_main
  1322  001D14  C07D  F0C4         	movff	_previousTimeCounter2+1,??_main+1
  1323  001D18  C07E  F0C5         	movff	_previousTimeCounter2+2,??_main+2
  1324  001D1C  C07F  F0C6         	movff	_previousTimeCounter2+3,??_main+3
  1325  001D20  0100               	movlb	0	; () banked
  1326  001D22  1FC3               	comf	??_main& (0+255),f,b
  1327  001D24  1FC4               	comf	(??_main+1)& (0+255),f,b
  1328  001D26  1FC5               	comf	(??_main+2)& (0+255),f,b
  1329  001D28  1FC6               	comf	(??_main+3)& (0+255),f,b
  1330  001D2A  2BC3               	incf	??_main& (0+255),f,b
  1331  001D2C  0E00               	movlw	0
  1332  001D2E  23C4               	addwfc	(??_main+1)& (0+255),f,b
  1333  001D30  23C5               	addwfc	(??_main+2)& (0+255),f,b
  1334  001D32  23C6               	addwfc	(??_main+3)& (0+255),f,b
  1335  001D34  5028               	movf	_timeCounter,w,c
  1336  001D36  0100               	movlb	0	; () banked
  1337  001D38  25C3               	addwf	??_main& (0+255),w,b
  1338  001D3A  0100               	movlb	0	; () banked
  1339  001D3C  6FC7               	movwf	(??_main+4)& (0+255),b
  1340  001D3E  5029               	movf	_timeCounter+1,w,c
  1341  001D40  0100               	movlb	0	; () banked
  1342  001D42  21C4               	addwfc	(??_main+1)& (0+255),w,b
  1343  001D44  0100               	movlb	0	; () banked
  1344  001D46  6FC8               	movwf	(??_main+5)& (0+255),b
  1345  001D48  502A               	movf	_timeCounter+2,w,c
  1346  001D4A  0100               	movlb	0	; () banked
  1347  001D4C  21C5               	addwfc	(??_main+2)& (0+255),w,b
  1348  001D4E  0100               	movlb	0	; () banked
  1349  001D50  6FC9               	movwf	(??_main+6)& (0+255),b
  1350  001D52  502B               	movf	_timeCounter+3,w,c
  1351  001D54  0100               	movlb	0	; () banked
  1352  001D56  21C6               	addwfc	(??_main+3)& (0+255),w,b
  1353  001D58  0100               	movlb	0	; () banked
  1354  001D5A  6FCA               	movwf	(??_main+7)& (0+255),b
  1355  001D5C  0100               	movlb	0	; () banked
  1356  001D5E  51CA               	movf	(??_main+7)& (0+255),w,b
  1357  001D60  0100               	movlb	0	; () banked
  1358  001D62  11C9               	iorwf	(??_main+6)& (0+255),w,b
  1359  001D64  0100               	movlb	0	; () banked
  1360  001D66  11C8               	iorwf	(??_main+5)& (0+255),w,b
  1361  001D68  E105               	bnz	u6590
  1362  001D6A  0E64               	movlw	100
  1363  001D6C  0100               	movlb	0	; () banked
  1364  001D6E  5DC7               	subwf	(??_main+4)& (0+255),w,b
  1365  001D70  A0D8               	btfss	status,0,c
  1366  001D72  D61F               	goto	l4976
  1367  001D74                     u6590:
  1368                           
  1369                           ; BSR set to: 0
  1370                           ;motore.c: 230: battery_measure();
  1371  001D74  ECB1  F012         	call	_battery_measure	;wreg free
  1372                           
  1373                           ;motore.c: 231: previousTimeCounter2 = timeCounter;
  1374  001D78  C028  F07C         	movff	_timeCounter,_previousTimeCounter2
  1375  001D7C  C029  F07D         	movff	_timeCounter+1,_previousTimeCounter2+1
  1376  001D80  C02A  F07E         	movff	_timeCounter+2,_previousTimeCounter2+2
  1377  001D84  C02B  F07F         	movff	_timeCounter+3,_previousTimeCounter2+3
  1378  001D88  D614               	goto	l4976
  1379  001D8A                     __end_of_main:
  1380                           	opt stack 0
  1381                           tblptru	equ	0xFF8
  1382                           tblptrh	equ	0xFF7
  1383                           tblptrl	equ	0xFF6
  1384                           tablat	equ	0xFF5
  1385                           postinc0	equ	0xFEE
  1386                           wreg	equ	0xFE8
  1387                           postdec1	equ	0xFE5
  1388                           fsr1l	equ	0xFE1
  1389                           status	equ	0xFD8
  1390                           
  1391 ;; *************** function _send_data *****************
  1392 ;; Defined at:
  1393 ;;		line 236 in file "motore.c"
  1394 ;; Parameters:    Size  Location     Type
  1395 ;;		None
  1396 ;; Auto vars:     Size  Location     Type
  1397 ;;  i               1   16[BANK0 ] unsigned char 
  1398 ;; Return value:  Size  Location     Type
  1399 ;;		None               void
  1400 ;; Registers used:
  1401 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1402 ;; Tracked objects:
  1403 ;;		On entry : 0/0
  1404 ;;		On exit  : 0/0
  1405 ;;		Unchanged: 0/0
  1406 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1407 ;;      Params:         0       0       0       0
  1408 ;;      Locals:         0       1       0       0
  1409 ;;      Temps:          0       0       0       0
  1410 ;;      Totals:         0       1       0       0
  1411 ;;Total ram usage:        1 bytes
  1412 ;; Hardware stack levels used:    1
  1413 ;; Hardware stack levels required when called:    3
  1414 ;; This function calls:
  1415 ;;		_CANisTxReady
  1416 ;;		_CANsendMessage
  1417 ;; This function is called by:
  1418 ;;		_main
  1419 ;; This function uses a non-reentrant model
  1420 ;;
  1421                           
  1422                           	psect	text1
  1423  0022EE                     __ptext1:
  1424                           	opt stack 0
  1425  0022EE                     _send_data:
  1426                           	opt stack 27
  1427                           
  1428                           ;motore.c: 237: if (CANisTxReady()) {
  1429                           
  1430                           ;incstack = 0
  1431  0022EE  ECD5  F013         	call	_CANisTxReady	;wreg free
  1432  0022F2  0900               	iorlw	0
  1433  0022F4  B4D8               	btfsc	status,2,c
  1434  0022F6  D031               	goto	l4906
  1435                           
  1436                           ;motore.c: 238: if (remote_frame == 1) {
  1437  0022F8  AA39               	btfss	_remote_frame/(0+8),_remote_frame& (0+7),c
  1438  0022FA  D017               	goto	l4902
  1439                           
  1440                           ;motore.c: 239: CANsendMessage(id, data_array, 8, CAN_CONFIG_STD_MSG & CAN_NORMAL_TX_FRA
      +                          ME & CAN_TX_PRIORITY_0);
  1441  0022FC  C020  F0A9         	movff	_id,CANsendMessage@identifier
  1442  002300  C021  F0AA         	movff	_id+1,CANsendMessage@identifier+1
  1443  002304  C022  F0AB         	movff	_id+2,CANsendMessage@identifier+2
  1444  002308  C023  F0AC         	movff	_id+3,CANsendMessage@identifier+3
  1445  00230C  0E91               	movlw	low _data_array
  1446  00230E  0100               	movlb	0	; () banked
  1447  002310  6FAD               	movwf	CANsendMessage@data& (0+255),b
  1448  002312  0E00               	movlw	high _data_array
  1449  002314  0100               	movlb	0	; () banked
  1450  002316  6FAE               	movwf	(CANsendMessage@data+1)& (0+255),b
  1451  002318  0E08               	movlw	8
  1452  00231A  0100               	movlb	0	; () banked
  1453  00231C  6FAF               	movwf	CANsendMessage@dataLength& (0+255),b
  1454  00231E  0EBC               	movlw	188
  1455  002320  0100               	movlb	0	; () banked
  1456  002322  6FB0               	movwf	CANsendMessage@flags& (0+255),b
  1457  002324  EC5A  F006         	call	_CANsendMessage	;wreg free
  1458                           
  1459                           ;motore.c: 240: remote_frame = 0;
  1460  002328  9A39               	bcf	_remote_frame/(0+8),_remote_frame& (0+7),c
  1461  00232A                     l4902:
  1462                           
  1463                           ;motore.c: 241: }
  1464                           ;motore.c: 242: if (can_retry == 1) {
  1465  00232A  A039               	btfss	_can_retry/(0+8),_can_retry& (0+7),c
  1466  00232C  D016               	goto	l4906
  1467                           
  1468                           ;motore.c: 243: CANsendMessage(id1, data_array1, 8, CAN_CONFIG_STD_MSG & CAN_NORMAL_TX_F
      +                          RAME & CAN_TX_PRIORITY_0);
  1469  00232E  C024  F0A9         	movff	_id1,CANsendMessage@identifier
  1470  002332  C025  F0AA         	movff	_id1+1,CANsendMessage@identifier+1
  1471  002336  C026  F0AB         	movff	_id1+2,CANsendMessage@identifier+2
  1472  00233A  C027  F0AC         	movff	_id1+3,CANsendMessage@identifier+3
  1473  00233E  0E99               	movlw	low _data_array1
  1474  002340  0100               	movlb	0	; () banked
  1475  002342  6FAD               	movwf	CANsendMessage@data& (0+255),b
  1476  002344  0E00               	movlw	high _data_array1
  1477  002346  0100               	movlb	0	; () banked
  1478  002348  6FAE               	movwf	(CANsendMessage@data+1)& (0+255),b
  1479  00234A  0E08               	movlw	8
  1480  00234C  0100               	movlb	0	; () banked
  1481  00234E  6FAF               	movwf	CANsendMessage@dataLength& (0+255),b
  1482  002350  0EBC               	movlw	188
  1483  002352  0100               	movlb	0	; () banked
  1484  002354  6FB0               	movwf	CANsendMessage@flags& (0+255),b
  1485  002356  EC5A  F006         	call	_CANsendMessage	;wreg free
  1486  00235A                     l4906:
  1487                           
  1488                           ;motore.c: 244: }
  1489                           ;motore.c: 245: }
  1490                           ;motore.c: 246: if ((TXB0CONbits.TXABT) || (TXB1CONbits.TXABT)) {
  1491  00235A  010F               	movlb	15	; () banked
  1492  00235C  BD40               	btfsc	64,6,b	;volatile
  1493  00235E  D003               	goto	l701
  1494                           
  1495                           ; BSR set to: 15
  1496  002360  010F               	movlb	15	; () banked
  1497  002362  AD30               	btfss	48,6,b	;volatile
  1498  002364  D031               	goto	l699
  1499  002366                     l701:
  1500                           
  1501                           ; BSR set to: 15
  1502                           ;motore.c: 247: can_retry = 1;
  1503  002366  8039               	bsf	_can_retry/(0+8),_can_retry& (0+7),c
  1504                           
  1505                           ;motore.c: 248: id1 = id;
  1506  002368  C020  F024         	movff	_id,_id1
  1507  00236C  C021  F025         	movff	_id+1,_id1+1
  1508  002370  C022  F026         	movff	_id+2,_id1+2
  1509  002374  C023  F027         	movff	_id+3,_id1+3
  1510                           
  1511                           ;motore.c: 249: remote_frame1 = remote_frame;
  1512  002378  AA39               	btfss	_remote_frame/(0+8),_remote_frame& (0+7),c
  1513  00237A  D002               	goto	u6310
  1514  00237C  8C39               	bsf	_remote_frame1/(0+8),_remote_frame1& (0+7),c
  1515  00237E  D001               	goto	l4910
  1516  002380                     u6310:
  1517  002380  9C39               	bcf	_remote_frame1/(0+8),_remote_frame1& (0+7),c
  1518  002382                     l4910:
  1519                           
  1520                           ;motore.c: 250: for (char i = 0; i < 8; i++) {
  1521  002382  0E00               	movlw	0
  1522  002384  0100               	movlb	0	; () banked
  1523  002386  6FB9               	movwf	send_data@i& (0+255),b
  1524  002388                     l4912:
  1525                           
  1526                           ; BSR set to: 0
  1527  002388  0E07               	movlw	7
  1528  00238A  0100               	movlb	0	; () banked
  1529  00238C  65B9               	cpfsgt	send_data@i& (0+255),b
  1530  00238E  D001               	goto	l4916
  1531  002390  D02F               	goto	l704
  1532  002392                     l4916:
  1533                           
  1534                           ; BSR set to: 0
  1535                           ;motore.c: 251: data_array1[i] = data_array[i];
  1536  002392  0100               	movlb	0	; () banked
  1537  002394  51B9               	movf	send_data@i& (0+255),w,b
  1538  002396  0D01               	mullw	1
  1539  002398  0E91               	movlw	low _data_array
  1540  00239A  24F3               	addwf	prodl,w,c
  1541  00239C  6ED9               	movwf	fsr2l,c
  1542  00239E  0E00               	movlw	high _data_array
  1543  0023A0  20F4               	addwfc	prodh,w,c
  1544  0023A2  6EDA               	movwf	fsr2h,c
  1545  0023A4  0100               	movlb	0	; () banked
  1546  0023A6  51B9               	movf	send_data@i& (0+255),w,b
  1547  0023A8  0D01               	mullw	1
  1548  0023AA  0E99               	movlw	low _data_array1
  1549  0023AC  24F3               	addwf	prodl,w,c
  1550  0023AE  6EE1               	movwf	fsr1l,c
  1551  0023B0  0E00               	movlw	high _data_array1
  1552  0023B2  20F4               	addwfc	prodh,w,c
  1553  0023B4  6EE2               	movwf	fsr1h,c
  1554  0023B6  CFDF FFE7          	movff	indf2,indf1
  1555                           
  1556                           ; BSR set to: 0
  1557                           ;motore.c: 252: TXB0CONbits.TXABT = 0;
  1558  0023BA  010F               	movlb	15	; () banked
  1559  0023BC  9D40               	bcf	64,6,b	;volatile
  1560                           
  1561                           ; BSR set to: 15
  1562                           ;motore.c: 253: TXB1CONbits.TXABT = 0;
  1563  0023BE  010F               	movlb	15	; () banked
  1564  0023C0  9D30               	bcf	48,6,b	;volatile
  1565                           
  1566                           ; BSR set to: 15
  1567  0023C2  0100               	movlb	0	; () banked
  1568  0023C4  2BB9               	incf	send_data@i& (0+255),f,b
  1569  0023C6  D7E0               	goto	l4912
  1570  0023C8                     l699:
  1571                           
  1572                           ; BSR set to: 15
  1573                           ;motore.c: 256: can_retry = 0;
  1574  0023C8  9039               	bcf	_can_retry/(0+8),_can_retry& (0+7),c
  1575                           
  1576                           ;motore.c: 257: if (remote_frame1 != 0) {
  1577  0023CA  AC39               	btfss	_remote_frame1/(0+8),_remote_frame1& (0+7),c
  1578  0023CC  D010               	goto	l705
  1579                           
  1580                           ; BSR set to: 15
  1581                           ;motore.c: 258: remote_frame = remote_frame1;
  1582  0023CE  AC39               	btfss	_remote_frame1/(0+8),_remote_frame1& (0+7),c
  1583  0023D0  D002               	goto	u6360
  1584  0023D2  8A39               	bsf	_remote_frame/(0+8),_remote_frame& (0+7),c
  1585  0023D4  D001               	goto	u6375
  1586  0023D6                     u6360:
  1587  0023D6  9A39               	bcf	_remote_frame/(0+8),_remote_frame& (0+7),c
  1588  0023D8                     u6375:
  1589                           
  1590                           ;motore.c: 259: id = id1;
  1591  0023D8  C024  F020         	movff	_id1,_id
  1592  0023DC  C025  F021         	movff	_id1+1,_id+1
  1593  0023E0  C026  F022         	movff	_id1+2,_id+2
  1594  0023E4  C027  F023         	movff	_id1+3,_id+3
  1595                           
  1596                           ;motore.c: 260: message_sent = 1;
  1597  0023E8  8839               	bsf	_message_sent/(0+8),_message_sent& (0+7),c
  1598                           
  1599                           ;motore.c: 261: remote_frame1 = 0;
  1600  0023EA  9C39               	bcf	_remote_frame1/(0+8),_remote_frame1& (0+7),c
  1601                           
  1602                           ;motore.c: 262: } else {
  1603  0023EC  D001               	goto	l704
  1604  0023EE                     l705:
  1605                           
  1606                           ; BSR set to: 15
  1607                           ;motore.c: 264: message_sent = 0;
  1608  0023EE  9839               	bcf	_message_sent/(0+8),_message_sent& (0+7),c
  1609  0023F0                     l704:
  1610                           
  1611                           ;motore.c: 265: }
  1612                           ;motore.c: 266: }
  1613                           ;motore.c: 267: remote_frame = 0;
  1614  0023F0  9A39               	bcf	_remote_frame/(0+8),_remote_frame& (0+7),c
  1615  0023F2  0012               	return		;funcret
  1616  0023F4                     __end_of_send_data:
  1617                           	opt stack 0
  1618                           tblptru	equ	0xFF8
  1619                           tblptrh	equ	0xFF7
  1620                           tblptrl	equ	0xFF6
  1621                           tablat	equ	0xFF5
  1622                           prodh	equ	0xFF4
  1623                           prodl	equ	0xFF3
  1624                           postinc0	equ	0xFEE
  1625                           wreg	equ	0xFE8
  1626                           indf1	equ	0xFE7
  1627                           postdec1	equ	0xFE5
  1628                           fsr1h	equ	0xFE2
  1629                           fsr1l	equ	0xFE1
  1630                           indf2	equ	0xFDF
  1631                           fsr2h	equ	0xFDA
  1632                           fsr2l	equ	0xFD9
  1633                           status	equ	0xFD8
  1634                           
  1635 ;; *************** function _configurazione_iniziale *****************
  1636 ;; Defined at:
  1637 ;;		line 285 in file "motore.c"
  1638 ;; Parameters:    Size  Location     Type
  1639 ;;		None
  1640 ;; Auto vars:     Size  Location     Type
  1641 ;;		None
  1642 ;; Return value:  Size  Location     Type
  1643 ;;		None               void
  1644 ;; Registers used:
  1645 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  1646 ;; Tracked objects:
  1647 ;;		On entry : 0/0
  1648 ;;		On exit  : 0/0
  1649 ;;		Unchanged: 0/0
  1650 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1651 ;;      Params:         0       0       0       0
  1652 ;;      Locals:         0       0       0       0
  1653 ;;      Temps:          0       0       0       0
  1654 ;;      Totals:         0       0       0       0
  1655 ;;Total ram usage:        0 bytes
  1656 ;; Hardware stack levels used:    1
  1657 ;; Hardware stack levels required when called:    4
  1658 ;; This function calls:
  1659 ;;		_CANInitialize
  1660 ;;		_SetOutputEPWM1
  1661 ;;		_delay_ms
  1662 ;; This function is called by:
  1663 ;;		_main
  1664 ;; This function uses a non-reentrant model
  1665 ;;
  1666                           
  1667                           	psect	text2
  1668  0024B2                     __ptext2:
  1669                           	opt stack 0
  1670  0024B2                     _configurazione_iniziale:
  1671                           	opt stack 26
  1672                           
  1673                           ;motore.c: 288: CANInitialize(4, 6, 5, 1, 3, CAN_CONFIG_LINE_FILTER_OFF & CAN_CONFIG_SAM
      +                          PLE_ONCE & CAN_CONFIG_ALL_VALID_MSG & CAN_CONFIG_DBL_BUFFER_ON);
  1674                           
  1675                           ;incstack = 0
  1676  0024B2  0E06               	movlw	6
  1677  0024B4  0100               	movlb	0	; () banked
  1678  0024B6  6FB7               	movwf	CANInitialize@phaseSeg1& (0+255),b
  1679  0024B8  0E05               	movlw	5
  1680  0024BA  0100               	movlb	0	; () banked
  1681  0024BC  6FB8               	movwf	CANInitialize@phaseSeg2& (0+255),b
  1682  0024BE  0E01               	movlw	1
  1683  0024C0  0100               	movlb	0	; () banked
  1684  0024C2  6FB9               	movwf	CANInitialize@SJW& (0+255),b
  1685  0024C4  0E03               	movlw	3
  1686  0024C6  0100               	movlb	0	; () banked
  1687  0024C8  6FBA               	movwf	CANInitialize@BRP& (0+255),b
  1688  0024CA  0E9D               	movlw	157
  1689  0024CC  0100               	movlb	0	; () banked
  1690  0024CE  6FBB               	movwf	CANInitialize@flags& (0+255),b
  1691  0024D0  0E04               	movlw	4
  1692  0024D2  EC94  F010         	call	_CANInitialize
  1693                           
  1694                           ;motore.c: 289: RCONbits.IPEN = 1;
  1695  0024D6  8ED0               	bsf	4048,7,c	;volatile
  1696                           
  1697                           ;motore.c: 290: INTCONbits.INT0IF = 0;
  1698  0024D8  92F2               	bcf	intcon,1,c	;volatile
  1699                           
  1700                           ;motore.c: 291: PIR3bits.RXB1IF = 0;
  1701  0024DA  92A4               	bcf	4004,1,c	;volatile
  1702                           
  1703                           ;motore.c: 292: PIR3bits.RXB0IF = 0;
  1704  0024DC  90A4               	bcf	4004,0,c	;volatile
  1705                           
  1706                           ;motore.c: 294: IPR3bits.RXB1IP = 0;
  1707  0024DE  92A5               	bcf	4005,1,c	;volatile
  1708                           
  1709                           ;motore.c: 295: IPR3bits.RXB0IP = 0;
  1710  0024E0  90A5               	bcf	4005,0,c	;volatile
  1711                           
  1712                           ;motore.c: 296: INTCONbits.GIEH = 1;
  1713  0024E2  8EF2               	bsf	intcon,7,c	;volatile
  1714                           
  1715                           ;motore.c: 297: INTCONbits.GIEL = 1;
  1716  0024E4  8CF2               	bsf	intcon,6,c	;volatile
  1717                           
  1718                           ;motore.c: 300: T3CON = 0x01;
  1719  0024E6  0E01               	movlw	1
  1720  0024E8  6EB1               	movwf	4017,c	;volatile
  1721                           
  1722                           ;motore.c: 301: PIR2bits.TMR3IF = 0;
  1723  0024EA  92A1               	bcf	4001,1,c	;volatile
  1724                           
  1725                           ;motore.c: 302: IPR2bits.TMR3IP = 0;
  1726  0024EC  92A2               	bcf	4002,1,c	;volatile
  1727                           
  1728                           ;motore.c: 303: TMR3H = 0x63;
  1729  0024EE  0E63               	movlw	99
  1730  0024F0  6EB3               	movwf	4019,c	;volatile
  1731                           
  1732                           ;motore.c: 304: TMR3L = 0xC0;
  1733  0024F2  0EC0               	movlw	192
  1734  0024F4  6EB2               	movwf	4018,c	;volatile
  1735                           
  1736                           ;motore.c: 309: ADCON0bits.ADON = 1;
  1737  0024F6  80C2               	bsf	4034,0,c	;volatile
  1738                           
  1739                           ;motore.c: 310: ADCON0bits.CHS0 = 0;
  1740  0024F8  94C2               	bcf	4034,2,c	;volatile
  1741                           
  1742                           ;motore.c: 311: ADCON0bits.CHS1 = 0;
  1743  0024FA  96C2               	bcf	4034,3,c	;volatile
  1744                           
  1745                           ;motore.c: 312: ADCON0bits.CHS2 = 0;
  1746  0024FC  98C2               	bcf	4034,4,c	;volatile
  1747                           
  1748                           ;motore.c: 313: ADCON0bits.CHS3 = 0;
  1749  0024FE  9AC2               	bcf	4034,5,c	;volatile
  1750                           
  1751                           ;motore.c: 314: ADCON1bits.PCFG0 = 0;
  1752  002500  90C1               	bcf	4033,0,c	;volatile
  1753                           
  1754                           ;motore.c: 315: ADCON1bits.PCFG1 = 1;
  1755  002502  82C1               	bsf	4033,1,c	;volatile
  1756                           
  1757                           ;motore.c: 316: ADCON1bits.PCFG2 = 1;
  1758  002504  84C1               	bsf	4033,2,c	;volatile
  1759                           
  1760                           ;motore.c: 317: ADCON1bits.PCFG3 = 1;
  1761  002506  86C1               	bsf	4033,3,c	;volatile
  1762                           
  1763                           ;motore.c: 318: ADCON1bits.VCFG0 = 0;
  1764  002508  98C1               	bcf	4033,4,c	;volatile
  1765                           
  1766                           ;motore.c: 319: ADCON1bits.VCFG1 = 0;
  1767  00250A  9AC1               	bcf	4033,5,c	;volatile
  1768                           
  1769                           ;motore.c: 320: ADCON2bits.ADCS0 = 1;
  1770  00250C  80C0               	bsf	4032,0,c	;volatile
  1771                           
  1772                           ;motore.c: 321: ADCON2bits.ADCS1 = 0;
  1773  00250E  92C0               	bcf	4032,1,c	;volatile
  1774                           
  1775                           ;motore.c: 322: ADCON2bits.ADCS2 = 1;
  1776  002510  84C0               	bsf	4032,2,c	;volatile
  1777                           
  1778                           ;motore.c: 323: ADCON2bits.ACQT0 = 0;
  1779  002512  96C0               	bcf	4032,3,c	;volatile
  1780                           
  1781                           ;motore.c: 324: ADCON2bits.ACQT1 = 1;
  1782  002514  88C0               	bsf	4032,4,c	;volatile
  1783                           
  1784                           ;motore.c: 325: ADCON2bits.ACQT2 = 1;
  1785  002516  8AC0               	bsf	4032,5,c	;volatile
  1786                           
  1787                           ;motore.c: 326: ADCON2bits.ADFM = 0;
  1788  002518  9EC0               	bcf	4032,7,c	;volatile
  1789                           
  1790                           ;motore.c: 329: PIE3bits.RXB1IE = 1;
  1791  00251A  82A3               	bsf	4003,1,c	;volatile
  1792                           
  1793                           ;motore.c: 330: PIE3bits.RXB0IE = 1;
  1794  00251C  80A3               	bsf	4003,0,c	;volatile
  1795                           
  1796                           ;motore.c: 331: PIE2bits.TMR3IE = 1;
  1797  00251E  82A0               	bsf	4000,1,c	;volatile
  1798                           
  1799                           ;motore.c: 333: LATA = 0x00;
  1800  002520  0E00               	movlw	0
  1801  002522  6E89               	movwf	3977,c	;volatile
  1802                           
  1803                           ;motore.c: 334: TRISA = 0b01111101;
  1804  002524  0E7D               	movlw	125
  1805  002526  6E92               	movwf	3986,c	;volatile
  1806                           
  1807                           ;motore.c: 336: LATB = 0x00;
  1808  002528  0E00               	movlw	0
  1809  00252A  6E8A               	movwf	3978,c	;volatile
  1810                           
  1811                           ;motore.c: 337: TRISB = 0b11111011;
  1812  00252C  0EFB               	movlw	251
  1813  00252E  6E93               	movwf	3987,c	;volatile
  1814                           
  1815                           ;motore.c: 339: LATC = 0x00;
  1816  002530  0E00               	movlw	0
  1817  002532  6E8B               	movwf	3979,c	;volatile
  1818                           
  1819                           ;motore.c: 340: TRISC = 0x00;
  1820  002534  0E00               	movlw	0
  1821  002536  6E94               	movwf	3988,c	;volatile
  1822                           
  1823                           ;motore.c: 342: LATD = 0x00;
  1824  002538  0E00               	movlw	0
  1825  00253A  6E8C               	movwf	3980,c	;volatile
  1826                           
  1827                           ;motore.c: 343: TRISD = 0x00;
  1828  00253C  0E00               	movlw	0
  1829  00253E  6E95               	movwf	3989,c	;volatile
  1830                           
  1831                           ;motore.c: 345: LATE = 0x00;
  1832  002540  0E00               	movlw	0
  1833  002542  6E8D               	movwf	3981,c	;volatile
  1834                           
  1835                           ;motore.c: 346: TRISE = 0xFF;
  1836  002544  6896               	setf	3990,c	;volatile
  1837                           
  1838                           ;motore.c: 347: delay_ms(2);
  1839  002546  0E00               	movlw	0
  1840  002548  0100               	movlb	0	; () banked
  1841  00254A  6FB8               	movwf	(delay_ms@value_ms+1)& (0+255),b
  1842  00254C  0E02               	movlw	2
  1843  00254E  6FB7               	movwf	delay_ms@value_ms& (0+255),b
  1844  002550  ECA5  F013         	call	_delay_ms	;wreg free
  1845                           
  1846                           ;motore.c: 348: SetOutputEPWM1(0b01111111, 0b11111100);
  1847  002554  0EFC               	movlw	252
  1848  002556  0100               	movlb	0	; () banked
  1849  002558  6FA9               	movwf	SetOutputEPWM1@outputmode& (0+255),b
  1850  00255A  0E7F               	movlw	127
  1851  00255C  ECF8  F012         	call	_SetOutputEPWM1
  1852  002560  0012               	return		;funcret
  1853  002562                     __end_of_configurazione_iniziale:
  1854                           	opt stack 0
  1855                           tblptru	equ	0xFF8
  1856                           tblptrh	equ	0xFF7
  1857                           tblptrl	equ	0xFF6
  1858                           tablat	equ	0xFF5
  1859                           prodh	equ	0xFF4
  1860                           prodl	equ	0xFF3
  1861                           intcon	equ	0xFF2
  1862                           postinc0	equ	0xFEE
  1863                           wreg	equ	0xFE8
  1864                           indf1	equ	0xFE7
  1865                           postdec1	equ	0xFE5
  1866                           fsr1h	equ	0xFE2
  1867                           fsr1l	equ	0xFE1
  1868                           indf2	equ	0xFDF
  1869                           fsr2h	equ	0xFDA
  1870                           fsr2l	equ	0xFD9
  1871                           status	equ	0xFD8
  1872                           
  1873 ;; *************** function _delay_ms *****************
  1874 ;; Defined at:
  1875 ;;		line 61 in file "delay.c"
  1876 ;; Parameters:    Size  Location     Type
  1877 ;;  value_ms        2   14[BANK0 ] unsigned int 
  1878 ;; Auto vars:     Size  Location     Type
  1879 ;;		None
  1880 ;; Return value:  Size  Location     Type
  1881 ;;		None               void
  1882 ;; Registers used:
  1883 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  1884 ;; Tracked objects:
  1885 ;;		On entry : 0/0
  1886 ;;		On exit  : 0/0
  1887 ;;		Unchanged: 0/0
  1888 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1889 ;;      Params:         0       2       0       0
  1890 ;;      Locals:         0       0       0       0
  1891 ;;      Temps:          0       0       0       0
  1892 ;;      Totals:         0       2       0       0
  1893 ;;Total ram usage:        2 bytes
  1894 ;; Hardware stack levels used:    1
  1895 ;; Hardware stack levels required when called:    3
  1896 ;; This function calls:
  1897 ;;		___wmul
  1898 ;; This function is called by:
  1899 ;;		_main
  1900 ;;		_configurazione_iniziale
  1901 ;;		_delay_s
  1902 ;; This function uses a non-reentrant model
  1903 ;;
  1904                           
  1905                           	psect	text3
  1906  00274A                     __ptext3:
  1907                           	opt stack 0
  1908  00274A                     _delay_ms:
  1909                           	opt stack 27
  1910                           
  1911                           ;delay.c: 73: clock_counter_reference = value_ms * delay_quartz_frequency_value;
  1912                           
  1913                           ;incstack = 0
  1914  00274A  C042  F0B1         	movff	_delay_quartz_frequency_value,___wmul@multiplier	;volatile
  1915  00274E  0100               	movlb	0	; () banked
  1916  002750  6BB2               	clrf	(___wmul@multiplier+1)& (0+255),b
  1917  002752  C0B7  F0B3         	movff	delay_ms@value_ms,___wmul@multiplicand
  1918  002756  C0B8  F0B4         	movff	delay_ms@value_ms+1,___wmul@multiplicand+1
  1919  00275A  EC8A  F013         	call	___wmul	;wreg free
  1920  00275E  C0B1  F02C         	movff	?___wmul,_clock_counter_reference	;volatile
  1921  002762  C0B2  F02D         	movff	?___wmul+1,_clock_counter_reference+1	;volatile
  1922                           
  1923                           ;delay.c: 75: while (clock_counter_reference) {
  1924  002766  D006               	goto	l569
  1925  002768                     l4706:
  1926                           
  1927                           ;delay.c: 85: _delay(240);
  1928  002768  0E50               	movlw	80
  1929  00276A                     u6607:
  1930  00276A  2EE8               	decfsz	wreg,f,c
  1931  00276C  D7FE               	goto	u6607
  1932                           
  1933                           ;delay.c: 88: clock_counter_reference--;
  1934  00276E  062C               	decf	_clock_counter_reference,f,c	;volatile
  1935  002770  A0D8               	btfss	status,0,c
  1936  002772  062D               	decf	_clock_counter_reference+1,f,c	;volatile
  1937  002774                     l569:
  1938  002774  502C               	movf	_clock_counter_reference,w,c	;volatile
  1939  002776  102D               	iorwf	_clock_counter_reference+1,w,c	;volatile
  1940  002778  B4D8               	btfsc	status,2,c
  1941  00277A  0012               	return	
  1942  00277C  D7F5               	goto	l4706
  1943  00277E                     __end_of_delay_ms:
  1944                           	opt stack 0
  1945                           tblptru	equ	0xFF8
  1946                           tblptrh	equ	0xFF7
  1947                           tblptrl	equ	0xFF6
  1948                           tablat	equ	0xFF5
  1949                           prodh	equ	0xFF4
  1950                           prodl	equ	0xFF3
  1951                           intcon	equ	0xFF2
  1952                           postinc0	equ	0xFEE
  1953                           wreg	equ	0xFE8
  1954                           indf1	equ	0xFE7
  1955                           postdec1	equ	0xFE5
  1956                           fsr1h	equ	0xFE2
  1957                           fsr1l	equ	0xFE1
  1958                           indf2	equ	0xFDF
  1959                           fsr2h	equ	0xFDA
  1960                           fsr2l	equ	0xFD9
  1961                           status	equ	0xFD8
  1962                           
  1963 ;; *************** function _SetOutputEPWM1 *****************
  1964 ;; Defined at:
  1965 ;;		line 18 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\pic18\plib\PWM\ew1setoc.c"
  1966 ;; Parameters:    Size  Location     Type
  1967 ;;  outputconfig    1    wreg     unsigned char 
  1968 ;;  outputmode      1    0[BANK0 ] unsigned char 
  1969 ;; Auto vars:     Size  Location     Type
  1970 ;;  outputconfig    1    1[BANK0 ] unsigned char 
  1971 ;; Return value:  Size  Location     Type
  1972 ;;		None               void
  1973 ;; Registers used:
  1974 ;;		wreg, status,2, status,0
  1975 ;; Tracked objects:
  1976 ;;		On entry : 0/0
  1977 ;;		On exit  : 0/0
  1978 ;;		Unchanged: 0/0
  1979 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1980 ;;      Params:         0       1       0       0
  1981 ;;      Locals:         0       1       0       0
  1982 ;;      Temps:          0       0       0       0
  1983 ;;      Totals:         0       2       0       0
  1984 ;;Total ram usage:        2 bytes
  1985 ;; Hardware stack levels used:    1
  1986 ;; Hardware stack levels required when called:    2
  1987 ;; This function calls:
  1988 ;;		Nothing
  1989 ;; This function is called by:
  1990 ;;		_main
  1991 ;;		_configurazione_iniziale
  1992 ;; This function uses a non-reentrant model
  1993 ;;
  1994                           
  1995                           	psect	text4
  1996  0025F0                     __ptext4:
  1997                           	opt stack 0
  1998  0025F0                     _SetOutputEPWM1:
  1999                           	opt stack 27
  2000                           
  2001                           ;incstack = 0
  2002                           ;SetOutputEPWM1@outputconfig stored from wreg
  2003  0025F0  0100               	movlb	0	; () banked
  2004  0025F2  6FAA               	movwf	SetOutputEPWM1@outputconfig& (0+255),b
  2005  0025F4  50BA               	movf	4026,w,c	;volatile
  2006  0025F6  09C0               	iorlw	192
  2007  0025F8  0100               	movlb	0	; () banked
  2008  0025FA  15AA               	andwf	SetOutputEPWM1@outputconfig& (0+255),w,b
  2009  0025FC  6EBA               	movwf	4026,c	;volatile
  2010  0025FE  50BA               	movf	4026,w,c	;volatile
  2011  002600  090F               	iorlw	15
  2012  002602  0100               	movlb	0	; () banked
  2013  002604  15A9               	andwf	SetOutputEPWM1@outputmode& (0+255),w,b
  2014  002606  6EBA               	movwf	4026,c	;volatile
  2015  002608  0E3F               	movlw	63
  2016  00260A  0100               	movlb	0	; () banked
  2017  00260C  19AA               	xorwf	SetOutputEPWM1@outputconfig& (0+255),w,b
  2018  00260E  A4D8               	btfss	status,2,c
  2019  002610  D002               	goto	l4714
  2020                           
  2021                           ; BSR set to: 0
  2022  002612  9895               	bcf	3989,4,c	;volatile
  2023  002614  0012               	return	
  2024  002616                     l4714:
  2025                           
  2026                           ; BSR set to: 0
  2027  002616  0EBF               	movlw	191
  2028  002618  0100               	movlb	0	; () banked
  2029  00261A  19AA               	xorwf	SetOutputEPWM1@outputconfig& (0+255),w,b
  2030  00261C  A4D8               	btfss	status,2,c
  2031  00261E  D003               	goto	l4718
  2032                           
  2033                           ; BSR set to: 0
  2034  002620  9895               	bcf	3989,4,c	;volatile
  2035  002622  9A95               	bcf	3989,5,c	;volatile
  2036  002624  0012               	return	
  2037  002626                     l4718:
  2038                           
  2039                           ; BSR set to: 0
  2040  002626  0E7F               	movlw	127
  2041  002628  0100               	movlb	0	; () banked
  2042  00262A  19AA               	xorwf	SetOutputEPWM1@outputconfig& (0+255),w,b
  2043  00262C  B4D8               	btfsc	status,2,c
  2044  00262E  D004               	goto	l750
  2045                           
  2046                           ; BSR set to: 0
  2047  002630  0100               	movlb	0	; () banked
  2048  002632  29AA               	incf	SetOutputEPWM1@outputconfig& (0+255),w,b
  2049  002634  A4D8               	btfss	status,2,c
  2050  002636  0012               	return	
  2051  002638                     l750:
  2052                           
  2053                           ; BSR set to: 0
  2054  002638  9895               	bcf	3989,4,c	;volatile
  2055  00263A  9A95               	bcf	3989,5,c	;volatile
  2056  00263C  9C95               	bcf	3989,6,c	;volatile
  2057  00263E  9E95               	bcf	3989,7,c	;volatile
  2058                           
  2059                           ; BSR set to: 0
  2060                           
  2061                           ; BSR set to: 0
  2062  002640  0012               	return	
  2063  002642                     __end_of_SetOutputEPWM1:
  2064                           	opt stack 0
  2065                           tblptru	equ	0xFF8
  2066                           tblptrh	equ	0xFF7
  2067                           tblptrl	equ	0xFF6
  2068                           tablat	equ	0xFF5
  2069                           prodh	equ	0xFF4
  2070                           prodl	equ	0xFF3
  2071                           intcon	equ	0xFF2
  2072                           postinc0	equ	0xFEE
  2073                           wreg	equ	0xFE8
  2074                           indf1	equ	0xFE7
  2075                           postdec1	equ	0xFE5
  2076                           fsr1h	equ	0xFE2
  2077                           fsr1l	equ	0xFE1
  2078                           indf2	equ	0xFDF
  2079                           fsr2h	equ	0xFDA
  2080                           fsr2l	equ	0xFD9
  2081                           status	equ	0xFD8
  2082                           
  2083 ;; *************** function _CANInitialize *****************
  2084 ;; Defined at:
  2085 ;;		line 218 in file "CANlib.h"
  2086 ;; Parameters:    Size  Location     Type
  2087 ;;  propSeg         1    wreg     unsigned char 
  2088 ;;  phaseSeg1       1   14[BANK0 ] unsigned char 
  2089 ;;  phaseSeg2       1   15[BANK0 ] unsigned char 
  2090 ;;  SJW             1   16[BANK0 ] unsigned char 
  2091 ;;  BRP             1   17[BANK0 ] unsigned char 
  2092 ;;  flags           1   18[BANK0 ] enum E16844
  2093 ;; Auto vars:     Size  Location     Type
  2094 ;;  propSeg         1   23[BANK0 ] unsigned char 
  2095 ;;  FilterConfig    1   25[BANK0 ] unsigned char 
  2096 ;;  FilterConfig    1   24[BANK0 ] unsigned char 
  2097 ;; Return value:  Size  Location     Type
  2098 ;;		None               void
  2099 ;; Registers used:
  2100 ;;		wreg, status,2, status,0, cstack
  2101 ;; Tracked objects:
  2102 ;;		On entry : 0/0
  2103 ;;		On exit  : 0/0
  2104 ;;		Unchanged: 0/0
  2105 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2106 ;;      Params:         0       5       0       0
  2107 ;;      Locals:         0       3       0       0
  2108 ;;      Temps:          0       4       0       0
  2109 ;;      Totals:         0      12       0       0
  2110 ;;Total ram usage:       12 bytes
  2111 ;; Hardware stack levels used:    1
  2112 ;; Hardware stack levels required when called:    3
  2113 ;; This function calls:
  2114 ;;		_CANOperationMode
  2115 ;;		_CANSetFilter
  2116 ;;		_CANSetMask
  2117 ;; This function is called by:
  2118 ;;		_configurazione_iniziale
  2119 ;; This function uses a non-reentrant model
  2120 ;;
  2121                           
  2122                           	psect	text5
  2123  002128                     __ptext5:
  2124                           	opt stack 0
  2125  002128                     _CANInitialize:
  2126                           	opt stack 26
  2127                           
  2128                           ; BSR set to: 0
  2129                           ;incstack = 0
  2130                           ;CANInitialize@propSeg stored from wreg
  2131  002128  0100               	movlb	0	; () banked
  2132  00212A  6FC0               	movwf	CANInitialize@propSeg& (0+255),b
  2133                           
  2134                           ;CANlib.h: 220: BYTE FilterConfig1;
  2135                           ;CANlib.h: 221: BYTE FilterConfig2;
  2136                           ;CANlib.h: 223: CANOperationMode(CAN_OP_MODE_CONFIG);
  2137  00212C  0E80               	movlw	128
  2138  00212E  ECF8  F013         	call	_CANOperationMode
  2139                           
  2140                           ;CANlib.h: 225: BRGCON1 = 0x00;
  2141  002132  0E00               	movlw	0
  2142  002134  6E70               	movwf	3952,c	;volatile
  2143                           
  2144                           ;CANlib.h: 226: BRGCON2 = 0x00;
  2145  002136  0E00               	movlw	0
  2146  002138  6E71               	movwf	3953,c	;volatile
  2147                           
  2148                           ;CANlib.h: 227: BRGCON3 = 0x00;
  2149  00213A  0E00               	movlw	0
  2150  00213C  6E72               	movwf	3954,c	;volatile
  2151                           
  2152                           ;CANlib.h: 229: SJW= SJW << 6;
  2153  00213E  0100               	movlb	0	; () banked
  2154  002140  41B9               	rrncf	CANInitialize@SJW& (0+255),w,b
  2155  002142  42E8               	rrncf	wreg,f,c
  2156  002144  0BC0               	andlw	192
  2157  002146  0100               	movlb	0	; () banked
  2158  002148  6FB9               	movwf	CANInitialize@SJW& (0+255),b
  2159                           
  2160                           ; BSR set to: 0
  2161                           ;CANlib.h: 230: BRGCON1 |= SJW;
  2162  00214A  0100               	movlb	0	; () banked
  2163  00214C  51B9               	movf	CANInitialize@SJW& (0+255),w,b
  2164  00214E  1270               	iorwf	3952,f,c	;volatile
  2165                           
  2166                           ; BSR set to: 0
  2167                           ;CANlib.h: 231: BRGCON1 |= BRP;
  2168  002150  0100               	movlb	0	; () banked
  2169  002152  51BA               	movf	CANInitialize@BRP& (0+255),w,b
  2170  002154  1270               	iorwf	3952,f,c	;volatile
  2171                           
  2172                           ; BSR set to: 0
  2173                           ;CANlib.h: 233: BRGCON2 |= propSeg;
  2174  002156  0100               	movlb	0	; () banked
  2175  002158  51C0               	movf	CANInitialize@propSeg& (0+255),w,b
  2176  00215A  1271               	iorwf	3953,f,c	;volatile
  2177                           
  2178                           ; BSR set to: 0
  2179                           ;CANlib.h: 234: phaseSeg1 = phaseSeg1 <<3;
  2180  00215C  0100               	movlb	0	; () banked
  2181  00215E  39B7               	swapf	CANInitialize@phaseSeg1& (0+255),w,b
  2182  002160  42E8               	rrncf	wreg,f,c
  2183  002162  0BF8               	andlw	248
  2184  002164  0100               	movlb	0	; () banked
  2185  002166  6FB7               	movwf	CANInitialize@phaseSeg1& (0+255),b
  2186                           
  2187                           ; BSR set to: 0
  2188                           ;CANlib.h: 235: BRGCON2 |= phaseSeg1;
  2189  002168  0100               	movlb	0	; () banked
  2190  00216A  51B7               	movf	CANInitialize@phaseSeg1& (0+255),w,b
  2191  00216C  1271               	iorwf	3953,f,c	;volatile
  2192                           
  2193                           ; BSR set to: 0
  2194                           ;CANlib.h: 237: if ( !(flags & CAN_CONFIG_SAMPLE_BIT) )
  2195  00216E  0100               	movlb	0	; () banked
  2196  002170  A5BB               	btfss	CANInitialize@flags& (0+255),2,b
  2197                           
  2198                           ; BSR set to: 0
  2199                           ;CANlib.h: 238: BRGCON2bits.SAM= 1;
  2200  002172  8C71               	bsf	3953,6,c	;volatile
  2201                           
  2202                           ; BSR set to: 0
  2203                           ;CANlib.h: 240: if ( flags & CAN_CONFIG_PHSEG2_PRG_BIT )
  2204  002174  0100               	movlb	0	; () banked
  2205  002176  B1BB               	btfsc	CANInitialize@flags& (0+255),0,b
  2206                           
  2207                           ; BSR set to: 0
  2208                           ;CANlib.h: 241: BRGCON2bits.SEG2PHTS = 1;
  2209  002178  8E71               	bsf	3953,7,c	;volatile
  2210                           
  2211                           ; BSR set to: 0
  2212                           ;CANlib.h: 243: BRGCON3 |= phaseSeg2;
  2213                           
  2214                           ; BSR set to: 0
  2215  00217A  0100               	movlb	0	; () banked
  2216  00217C  51B8               	movf	CANInitialize@phaseSeg2& (0+255),w,b
  2217  00217E  1272               	iorwf	3954,f,c	;volatile
  2218                           
  2219                           ; BSR set to: 0
  2220                           ;CANlib.h: 245: if ( flags & CAN_CONFIG_LINE_FILTER_BIT )
  2221  002180  0100               	movlb	0	; () banked
  2222  002182  B3BB               	btfsc	CANInitialize@flags& (0+255),1,b
  2223                           
  2224                           ; BSR set to: 0
  2225                           ;CANlib.h: 246: BRGCON3bits.WAKFIL = 1;
  2226  002184  8C72               	bsf	3954,6,c	;volatile
  2227                           
  2228                           ; BSR set to: 0
  2229                           ;CANlib.h: 251: RXB0CON = flags & CAN_CONFIG_MSG_BITS;
  2230                           
  2231                           ; BSR set to: 0
  2232  002186  0100               	movlb	0	; () banked
  2233  002188  51BB               	movf	CANInitialize@flags& (0+255),w,b
  2234  00218A  0B60               	andlw	96
  2235  00218C  6E60               	movwf	3936,c	;volatile
  2236                           
  2237                           ;CANlib.h: 252: if ( (flags & CAN_CONFIG_DBL_BUFFER_BIT)== CAN_CONFIG_DBL_BUFFER_ON )
  2238  00218E  0100               	movlb	0	; () banked
  2239  002190  51BB               	movf	CANInitialize@flags& (0+255),w,b
  2240  002192  0B10               	andlw	16
  2241  002194  0AFF               	xorlw	255
  2242  002196  B4D8               	btfsc	status,2,c
  2243                           
  2244                           ; BSR set to: 0
  2245                           ;CANlib.h: 253: RXB0CONbits.RXB0DBEN = 1;
  2246  002198  8460               	bsf	3936,2,c	;volatile
  2247                           
  2248                           ; BSR set to: 0
  2249                           ;CANlib.h: 255: RXB1CON = RXB0CON;
  2250  00219A  CF60 FF50          	movff	3936,3920	;volatile
  2251                           
  2252                           ; BSR set to: 0
  2253                           ;CANlib.h: 259: CANSetMask (CAN_MASK_B1, 0x00000000, CAN_CONFIG_XTD_MSG);
  2254  00219E  0E00               	movlw	0
  2255  0021A0  0100               	movlb	0	; () banked
  2256  0021A2  6FA9               	movwf	CANSetMask@mask& (0+255),b
  2257  0021A4  0E00               	movlw	0
  2258  0021A6  6FAA               	movwf	(CANSetMask@mask+1)& (0+255),b
  2259  0021A8  0E00               	movlw	0
  2260  0021AA  6FAB               	movwf	(CANSetMask@mask+2)& (0+255),b
  2261  0021AC  0E00               	movlw	0
  2262  0021AE  6FAC               	movwf	(CANSetMask@mask+3)& (0+255),b
  2263  0021B0  0EF7               	movlw	247
  2264  0021B2  0100               	movlb	0	; () banked
  2265  0021B4  6FAD               	movwf	CANSetMask@type& (0+255),b
  2266  0021B6  0E01               	movlw	1
  2267  0021B8  ECC5  F00E         	call	_CANSetMask
  2268                           
  2269                           ;CANlib.h: 260: CANSetMask (CAN_MASK_B2, 0x00000000, CAN_CONFIG_XTD_MSG);
  2270  0021BC  0E00               	movlw	0
  2271  0021BE  0100               	movlb	0	; () banked
  2272  0021C0  6FA9               	movwf	CANSetMask@mask& (0+255),b
  2273  0021C2  0E00               	movlw	0
  2274  0021C4  6FAA               	movwf	(CANSetMask@mask+1)& (0+255),b
  2275  0021C6  0E00               	movlw	0
  2276  0021C8  6FAB               	movwf	(CANSetMask@mask+2)& (0+255),b
  2277  0021CA  0E00               	movlw	0
  2278  0021CC  6FAC               	movwf	(CANSetMask@mask+3)& (0+255),b
  2279  0021CE  0EF7               	movlw	247
  2280  0021D0  0100               	movlb	0	; () banked
  2281  0021D2  6FAD               	movwf	CANSetMask@type& (0+255),b
  2282  0021D4  0E02               	movlw	2
  2283  0021D6  ECC5  F00E         	call	_CANSetMask
  2284                           
  2285                           ;CANlib.h: 263: switch( (flags & CAN_CONFIG_MSG_BITS) | ~CAN_CONFIG_MSG_BITS )
  2286  0021DA  D00F               	goto	l4454
  2287  0021DC                     l4448:
  2288                           
  2289                           ;CANlib.h: 266: FilterConfig1 = CAN_CONFIG_XTD_MSG;
  2290  0021DC  0EF7               	movlw	247
  2291  0021DE  0100               	movlb	0	; () banked
  2292  0021E0  6FC1               	movwf	CANInitialize@FilterConfig1& (0+255),b
  2293  0021E2  D007               	goto	l4450
  2294  0021E4                     l358:
  2295                           
  2296                           ; BSR set to: 0
  2297                           ;CANlib.h: 271: FilterConfig1 = CAN_CONFIG_STD_MSG;
  2298  0021E4  0100               	movlb	0	; () banked
  2299  0021E6  69C1               	setf	CANInitialize@FilterConfig1& (0+255),b
  2300                           
  2301                           ;CANlib.h: 272: FilterConfig2 = CAN_CONFIG_STD_MSG;
  2302  0021E8  0100               	movlb	0	; () banked
  2303  0021EA  69C2               	setf	CANInitialize@FilterConfig2& (0+255),b
  2304                           
  2305                           ;CANlib.h: 273: break;
  2306  0021EC  D028               	goto	l4456
  2307  0021EE                     l359:
  2308                           
  2309                           ; BSR set to: 0
  2310                           ;CANlib.h: 275: FilterConfig1 = CAN_CONFIG_STD_MSG;
  2311  0021EE  0100               	movlb	0	; () banked
  2312  0021F0  69C1               	setf	CANInitialize@FilterConfig1& (0+255),b
  2313  0021F2                     l4450:
  2314                           
  2315                           ; BSR set to: 0
  2316                           ;CANlib.h: 276: FilterConfig2 = CAN_CONFIG_XTD_MSG;
  2317  0021F2  0EF7               	movlw	247
  2318  0021F4  0100               	movlb	0	; () banked
  2319  0021F6  6FC2               	movwf	CANInitialize@FilterConfig2& (0+255),b
  2320                           
  2321                           ; BSR set to: 0
  2322                           ;CANlib.h: 278: }
  2323                           
  2324                           ;CANlib.h: 277: break;
  2325  0021F8  D022               	goto	l4456
  2326  0021FA                     l4454:
  2327  0021FA  0E9F               	movlw	159
  2328  0021FC  0100               	movlb	0	; () banked
  2329  0021FE  6FBC               	movwf	??_CANInitialize& (0+255),b
  2330  002200  0EFF               	movlw	255
  2331  002202  0100               	movlb	0	; () banked
  2332  002204  6FBD               	movwf	(??_CANInitialize+1)& (0+255),b
  2333  002206  0100               	movlb	0	; () banked
  2334  002208  51BB               	movf	CANInitialize@flags& (0+255),w,b
  2335  00220A  0B60               	andlw	96
  2336  00220C  0100               	movlb	0	; () banked
  2337  00220E  6FBE               	movwf	(??_CANInitialize+2)& (0+255),b
  2338  002210  6BBF               	clrf	(??_CANInitialize+3)& (0+255),b
  2339  002212  0100               	movlb	0	; () banked
  2340  002214  51BC               	movf	??_CANInitialize& (0+255),w,b
  2341  002216  0100               	movlb	0	; () banked
  2342  002218  13BE               	iorwf	(??_CANInitialize+2)& (0+255),f,b
  2343  00221A  0100               	movlb	0	; () banked
  2344  00221C  51BD               	movf	(??_CANInitialize+1)& (0+255),w,b
  2345  00221E  0100               	movlb	0	; () banked
  2346  002220  13BF               	iorwf	(??_CANInitialize+3)& (0+255),f,b
  2347                           
  2348                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2349                           ; Switch size 1, requested type "space"
  2350                           ; Number of cases is 1, Range of values is 0 to 0
  2351                           ; switch strategies available:
  2352                           ; Name         Instructions Cycles
  2353                           ; simple_byte            4     3 (average)
  2354                           ;	Chosen strategy is simple_byte
  2355  002222  0100               	movlb	0	; () banked
  2356  002224  51BF               	movf	(??_CANInitialize+3)& (0+255),w,b
  2357  002226  0A00               	xorlw	0	; case 0
  2358  002228  A4D8               	btfss	status,2,c
  2359  00222A  D7E1               	goto	l359
  2360                           
  2361                           ; BSR set to: 0
  2362                           ; Switch size 1, requested type "space"
  2363                           ; Number of cases is 2, Range of values is 191 to 223
  2364                           ; switch strategies available:
  2365                           ; Name         Instructions Cycles
  2366                           ; simple_byte            7     4 (average)
  2367                           ;	Chosen strategy is simple_byte
  2368  00222C  0100               	movlb	0	; () banked
  2369  00222E  51BE               	movf	(??_CANInitialize+2)& (0+255),w,b
  2370  002230  0ABF               	xorlw	191	; case 191
  2371  002232  B4D8               	btfsc	status,2,c
  2372  002234  D7D7               	goto	l358
  2373  002236  0A60               	xorlw	96	; case 223
  2374  002238  B4D8               	btfsc	status,2,c
  2375  00223A  D7D0               	goto	l4448
  2376  00223C  D7D8               	goto	l359
  2377  00223E                     l4456:
  2378                           
  2379                           ; BSR set to: 0
  2380                           ;CANlib.h: 280: CANSetFilter(CAN_FILTER_B1_F1, 0, FilterConfig1);
  2381  00223E  0E00               	movlw	0
  2382  002240  0100               	movlb	0	; () banked
  2383  002242  6FA9               	movwf	CANSetFilter@filter& (0+255),b
  2384  002244  0E00               	movlw	0
  2385  002246  6FAA               	movwf	(CANSetFilter@filter+1)& (0+255),b
  2386  002248  0E00               	movlw	0
  2387  00224A  6FAB               	movwf	(CANSetFilter@filter+2)& (0+255),b
  2388  00224C  0E00               	movlw	0
  2389  00224E  6FAC               	movwf	(CANSetFilter@filter+3)& (0+255),b
  2390  002250  C0C1  F0AD         	movff	CANInitialize@FilterConfig1,CANSetFilter@type
  2391  002254  0E00               	movlw	0
  2392  002256  ECD7  F000         	call	_CANSetFilter
  2393                           
  2394                           ;CANlib.h: 281: CANSetFilter(CAN_FILTER_B1_F2, 0, FilterConfig1);
  2395  00225A  0E00               	movlw	0
  2396  00225C  0100               	movlb	0	; () banked
  2397  00225E  6FA9               	movwf	CANSetFilter@filter& (0+255),b
  2398  002260  0E00               	movlw	0
  2399  002262  6FAA               	movwf	(CANSetFilter@filter+1)& (0+255),b
  2400  002264  0E00               	movlw	0
  2401  002266  6FAB               	movwf	(CANSetFilter@filter+2)& (0+255),b
  2402  002268  0E00               	movlw	0
  2403  00226A  6FAC               	movwf	(CANSetFilter@filter+3)& (0+255),b
  2404  00226C  C0C1  F0AD         	movff	CANInitialize@FilterConfig1,CANSetFilter@type
  2405  002270  0E01               	movlw	1
  2406  002272  ECD7  F000         	call	_CANSetFilter
  2407                           
  2408                           ;CANlib.h: 282: CANSetFilter(CAN_FILTER_B2_F1, 0, FilterConfig2);
  2409  002276  0E00               	movlw	0
  2410  002278  0100               	movlb	0	; () banked
  2411  00227A  6FA9               	movwf	CANSetFilter@filter& (0+255),b
  2412  00227C  0E00               	movlw	0
  2413  00227E  6FAA               	movwf	(CANSetFilter@filter+1)& (0+255),b
  2414  002280  0E00               	movlw	0
  2415  002282  6FAB               	movwf	(CANSetFilter@filter+2)& (0+255),b
  2416  002284  0E00               	movlw	0
  2417  002286  6FAC               	movwf	(CANSetFilter@filter+3)& (0+255),b
  2418  002288  C0C2  F0AD         	movff	CANInitialize@FilterConfig2,CANSetFilter@type
  2419  00228C  0E02               	movlw	2
  2420  00228E  ECD7  F000         	call	_CANSetFilter
  2421                           
  2422                           ;CANlib.h: 283: CANSetFilter(CAN_FILTER_B2_F2, 0, FilterConfig2);
  2423  002292  0E00               	movlw	0
  2424  002294  0100               	movlb	0	; () banked
  2425  002296  6FA9               	movwf	CANSetFilter@filter& (0+255),b
  2426  002298  0E00               	movlw	0
  2427  00229A  6FAA               	movwf	(CANSetFilter@filter+1)& (0+255),b
  2428  00229C  0E00               	movlw	0
  2429  00229E  6FAB               	movwf	(CANSetFilter@filter+2)& (0+255),b
  2430  0022A0  0E00               	movlw	0
  2431  0022A2  6FAC               	movwf	(CANSetFilter@filter+3)& (0+255),b
  2432  0022A4  C0C2  F0AD         	movff	CANInitialize@FilterConfig2,CANSetFilter@type
  2433  0022A8  0E03               	movlw	3
  2434  0022AA  ECD7  F000         	call	_CANSetFilter
  2435                           
  2436                           ;CANlib.h: 284: CANSetFilter(CAN_FILTER_B2_F3, 0, FilterConfig2);
  2437  0022AE  0E00               	movlw	0
  2438  0022B0  0100               	movlb	0	; () banked
  2439  0022B2  6FA9               	movwf	CANSetFilter@filter& (0+255),b
  2440  0022B4  0E00               	movlw	0
  2441  0022B6  6FAA               	movwf	(CANSetFilter@filter+1)& (0+255),b
  2442  0022B8  0E00               	movlw	0
  2443  0022BA  6FAB               	movwf	(CANSetFilter@filter+2)& (0+255),b
  2444  0022BC  0E00               	movlw	0
  2445  0022BE  6FAC               	movwf	(CANSetFilter@filter+3)& (0+255),b
  2446  0022C0  C0C2  F0AD         	movff	CANInitialize@FilterConfig2,CANSetFilter@type
  2447  0022C4  0E04               	movlw	4
  2448  0022C6  ECD7  F000         	call	_CANSetFilter
  2449                           
  2450                           ;CANlib.h: 285: CANSetFilter(CAN_FILTER_B2_F4, 0, FilterConfig2);
  2451  0022CA  0E00               	movlw	0
  2452  0022CC  0100               	movlb	0	; () banked
  2453  0022CE  6FA9               	movwf	CANSetFilter@filter& (0+255),b
  2454  0022D0  0E00               	movlw	0
  2455  0022D2  6FAA               	movwf	(CANSetFilter@filter+1)& (0+255),b
  2456  0022D4  0E00               	movlw	0
  2457  0022D6  6FAB               	movwf	(CANSetFilter@filter+2)& (0+255),b
  2458  0022D8  0E00               	movlw	0
  2459  0022DA  6FAC               	movwf	(CANSetFilter@filter+3)& (0+255),b
  2460  0022DC  C0C2  F0AD         	movff	CANInitialize@FilterConfig2,CANSetFilter@type
  2461  0022E0  0E05               	movlw	5
  2462  0022E2  ECD7  F000         	call	_CANSetFilter
  2463                           
  2464                           ;CANlib.h: 287: CANOperationMode(CAN_OP_MODE_NORMAL);
  2465  0022E6  0E00               	movlw	0
  2466  0022E8  ECF8  F013         	call	_CANOperationMode
  2467  0022EC  0012               	return		;funcret
  2468  0022EE                     __end_of_CANInitialize:
  2469                           	opt stack 0
  2470                           tblptru	equ	0xFF8
  2471                           tblptrh	equ	0xFF7
  2472                           tblptrl	equ	0xFF6
  2473                           tablat	equ	0xFF5
  2474                           prodh	equ	0xFF4
  2475                           prodl	equ	0xFF3
  2476                           intcon	equ	0xFF2
  2477                           postinc0	equ	0xFEE
  2478                           wreg	equ	0xFE8
  2479                           indf1	equ	0xFE7
  2480                           postdec1	equ	0xFE5
  2481                           fsr1h	equ	0xFE2
  2482                           fsr1l	equ	0xFE1
  2483                           indf2	equ	0xFDF
  2484                           fsr2h	equ	0xFDA
  2485                           fsr2l	equ	0xFD9
  2486                           status	equ	0xFD8
  2487                           
  2488 ;; *************** function _CANSetMask *****************
  2489 ;; Defined at:
  2490 ;;		line 640 in file "CANlib.h"
  2491 ;; Parameters:    Size  Location     Type
  2492 ;;  numBuffer       1    wreg     enum E16878
  2493 ;;  mask            4    0[BANK0 ] unsigned long 
  2494 ;;  type            1    4[BANK0 ] enum E16844
  2495 ;; Auto vars:     Size  Location     Type
  2496 ;;  numBuffer       1    9[BANK0 ] enum E16878
  2497 ;;  tamp            4   10[BANK0 ] unsigned long 
  2498 ;; Return value:  Size  Location     Type
  2499 ;;		None               void
  2500 ;; Registers used:
  2501 ;;		wreg, status,2, status,0
  2502 ;; Tracked objects:
  2503 ;;		On entry : 0/0
  2504 ;;		On exit  : 0/0
  2505 ;;		Unchanged: 0/0
  2506 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2507 ;;      Params:         0       5       0       0
  2508 ;;      Locals:         0       5       0       0
  2509 ;;      Temps:          0       4       0       0
  2510 ;;      Totals:         0      14       0       0
  2511 ;;Total ram usage:       14 bytes
  2512 ;; Hardware stack levels used:    1
  2513 ;; Hardware stack levels required when called:    2
  2514 ;; This function calls:
  2515 ;;		Nothing
  2516 ;; This function is called by:
  2517 ;;		_CANInitialize
  2518 ;; This function uses a non-reentrant model
  2519 ;;
  2520                           
  2521                           	psect	text6
  2522  001D8A                     __ptext6:
  2523                           	opt stack 0
  2524  001D8A                     _CANSetMask:
  2525                           	opt stack 26
  2526                           
  2527                           ;incstack = 0
  2528                           ;CANSetMask@numBuffer stored from wreg
  2529  001D8A  0100               	movlb	0	; () banked
  2530  001D8C  6FB2               	movwf	CANSetMask@numBuffer& (0+255),b
  2531                           
  2532                           ;CANlib.h: 643: if ((numBuffer ==CAN_MASK_B1) && (type == CAN_CONFIG_STD_MSG))
  2533  001D8E  0100               	movlb	0	; () banked
  2534  001D90  05B2               	decf	CANSetMask@numBuffer& (0+255),w,b
  2535  001D92  A4D8               	btfss	status,2,c
  2536  001D94  D056               	goto	l4012
  2537                           
  2538                           ; BSR set to: 0
  2539  001D96  0100               	movlb	0	; () banked
  2540  001D98  29AD               	incf	CANSetMask@type& (0+255),w,b
  2541  001D9A  A4D8               	btfss	status,2,c
  2542  001D9C  D052               	goto	l4012
  2543                           
  2544                           ; BSR set to: 0
  2545                           ;CANlib.h: 644: {
  2546                           ;CANlib.h: 645: tamp = (mask >> 3);
  2547  001D9E  C0A9  F0AE         	movff	CANSetMask@mask,??_CANSetMask
  2548  001DA2  C0AA  F0AF         	movff	CANSetMask@mask+1,??_CANSetMask+1
  2549  001DA6  C0AB  F0B0         	movff	CANSetMask@mask+2,??_CANSetMask+2
  2550  001DAA  C0AC  F0B1         	movff	CANSetMask@mask+3,??_CANSetMask+3
  2551  001DAE  0E04               	movlw	4
  2552  001DB0  D006               	goto	u4700
  2553  001DB2                     u4705:
  2554  001DB2  0100               	movlb	0	; () banked
  2555  001DB4  90D8               	bcf	status,0,c
  2556  001DB6  33B1               	rrcf	(??_CANSetMask+3)& (0+255),f,b
  2557  001DB8  33B0               	rrcf	(??_CANSetMask+2)& (0+255),f,b
  2558  001DBA  33AF               	rrcf	(??_CANSetMask+1)& (0+255),f,b
  2559  001DBC  33AE               	rrcf	??_CANSetMask& (0+255),f,b
  2560  001DBE                     u4700:
  2561  001DBE  2EE8               	decfsz	wreg,f,c
  2562  001DC0  D7F8               	goto	u4705
  2563  001DC2  C0AE  F0B3         	movff	??_CANSetMask,CANSetMask@tamp
  2564  001DC6  C0AF  F0B4         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  2565  001DCA  C0B0  F0B5         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  2566  001DCE  C0B1  F0B6         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  2567                           
  2568                           ; BSR set to: 0
  2569                           ;CANlib.h: 646: tamp = tamp & 0x000000FF;
  2570  001DD2  0100               	movlb	0	; () banked
  2571  001DD4  51B3               	movf	CANSetMask@tamp& (0+255),w,b
  2572  001DD6  0100               	movlb	0	; () banked
  2573  001DD8  6FB3               	movwf	CANSetMask@tamp& (0+255),b
  2574  001DDA  6BB4               	clrf	(CANSetMask@tamp+1)& (0+255),b
  2575  001DDC  6BB5               	clrf	(CANSetMask@tamp+2)& (0+255),b
  2576  001DDE  6BB6               	clrf	(CANSetMask@tamp+3)& (0+255),b
  2577                           
  2578                           ; BSR set to: 0
  2579                           ;CANlib.h: 647: RXM0SIDH = (unsigned char) tamp;
  2580  001DE0  C0B3  FF18         	movff	CANSetMask@tamp,3864	;volatile
  2581                           
  2582                           ; BSR set to: 0
  2583                           ;CANlib.h: 649: tamp = mask & 0x00000007;
  2584  001DE4  0E07               	movlw	7
  2585  001DE6  0100               	movlb	0	; () banked
  2586  001DE8  15A9               	andwf	CANSetMask@mask& (0+255),w,b
  2587  001DEA  0100               	movlb	0	; () banked
  2588  001DEC  6FB3               	movwf	CANSetMask@tamp& (0+255),b
  2589  001DEE  0E00               	movlw	0
  2590  001DF0  0100               	movlb	0	; () banked
  2591  001DF2  15AA               	andwf	(CANSetMask@mask+1)& (0+255),w,b
  2592  001DF4  0100               	movlb	0	; () banked
  2593  001DF6  6FB4               	movwf	(CANSetMask@tamp+1)& (0+255),b
  2594  001DF8  0E00               	movlw	0
  2595  001DFA  0100               	movlb	0	; () banked
  2596  001DFC  15AB               	andwf	(CANSetMask@mask+2)& (0+255),w,b
  2597  001DFE  0100               	movlb	0	; () banked
  2598  001E00  6FB5               	movwf	(CANSetMask@tamp+2)& (0+255),b
  2599  001E02  0E00               	movlw	0
  2600  001E04  0100               	movlb	0	; () banked
  2601  001E06  15AC               	andwf	(CANSetMask@mask+3)& (0+255),w,b
  2602  001E08  0100               	movlb	0	; () banked
  2603  001E0A  6FB6               	movwf	(CANSetMask@tamp+3)& (0+255),b
  2604                           
  2605                           ; BSR set to: 0
  2606                           ;CANlib.h: 650: tamp = tamp << 5;
  2607  001E0C  C0B3  F0AE         	movff	CANSetMask@tamp,??_CANSetMask
  2608  001E10  C0B4  F0AF         	movff	CANSetMask@tamp+1,??_CANSetMask+1
  2609  001E14  C0B5  F0B0         	movff	CANSetMask@tamp+2,??_CANSetMask+2
  2610  001E18  C0B6  F0B1         	movff	CANSetMask@tamp+3,??_CANSetMask+3
  2611  001E1C  0E05               	movlw	5
  2612  001E1E                     u4715:
  2613  001E1E  90D8               	bcf	status,0,c
  2614  001E20  0100               	movlb	0	; () banked
  2615  001E22  37AE               	rlcf	??_CANSetMask& (0+255),f,b
  2616  001E24  37AF               	rlcf	(??_CANSetMask+1)& (0+255),f,b
  2617  001E26  37B0               	rlcf	(??_CANSetMask+2)& (0+255),f,b
  2618  001E28  37B1               	rlcf	(??_CANSetMask+3)& (0+255),f,b
  2619  001E2A  2EE8               	decfsz	wreg,f,c
  2620  001E2C  D7F8               	goto	u4715
  2621  001E2E  C0AE  F0B3         	movff	??_CANSetMask,CANSetMask@tamp
  2622  001E32  C0AF  F0B4         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  2623  001E36  C0B0  F0B5         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  2624  001E3A  C0B1  F0B6         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  2625                           
  2626                           ; BSR set to: 0
  2627                           ;CANlib.h: 651: RXM0SIDL = (unsigned char) tamp;
  2628  001E3E  C0B3  FF19         	movff	CANSetMask@tamp,3865	;volatile
  2629  001E42                     l4012:
  2630                           
  2631                           ; BSR set to: 0
  2632                           ;CANlib.h: 652: }
  2633                           ;CANlib.h: 654: if ((numBuffer ==CAN_MASK_B2) && (type == CAN_CONFIG_STD_MSG))
  2634  001E42  0E02               	movlw	2
  2635  001E44  0100               	movlb	0	; () banked
  2636  001E46  19B2               	xorwf	CANSetMask@numBuffer& (0+255),w,b
  2637  001E48  A4D8               	btfss	status,2,c
  2638  001E4A  D056               	goto	l4028
  2639                           
  2640                           ; BSR set to: 0
  2641  001E4C  0100               	movlb	0	; () banked
  2642  001E4E  29AD               	incf	CANSetMask@type& (0+255),w,b
  2643  001E50  A4D8               	btfss	status,2,c
  2644  001E52  D052               	goto	l4028
  2645                           
  2646                           ; BSR set to: 0
  2647                           ;CANlib.h: 655: {
  2648                           ;CANlib.h: 656: tamp = (mask >> 3);
  2649  001E54  C0A9  F0AE         	movff	CANSetMask@mask,??_CANSetMask
  2650  001E58  C0AA  F0AF         	movff	CANSetMask@mask+1,??_CANSetMask+1
  2651  001E5C  C0AB  F0B0         	movff	CANSetMask@mask+2,??_CANSetMask+2
  2652  001E60  C0AC  F0B1         	movff	CANSetMask@mask+3,??_CANSetMask+3
  2653  001E64  0E04               	movlw	4
  2654  001E66  D006               	goto	u4740
  2655  001E68                     u4745:
  2656  001E68  0100               	movlb	0	; () banked
  2657  001E6A  90D8               	bcf	status,0,c
  2658  001E6C  33B1               	rrcf	(??_CANSetMask+3)& (0+255),f,b
  2659  001E6E  33B0               	rrcf	(??_CANSetMask+2)& (0+255),f,b
  2660  001E70  33AF               	rrcf	(??_CANSetMask+1)& (0+255),f,b
  2661  001E72  33AE               	rrcf	??_CANSetMask& (0+255),f,b
  2662  001E74                     u4740:
  2663  001E74  2EE8               	decfsz	wreg,f,c
  2664  001E76  D7F8               	goto	u4745
  2665  001E78  C0AE  F0B3         	movff	??_CANSetMask,CANSetMask@tamp
  2666  001E7C  C0AF  F0B4         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  2667  001E80  C0B0  F0B5         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  2668  001E84  C0B1  F0B6         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  2669                           
  2670                           ; BSR set to: 0
  2671                           ;CANlib.h: 657: tamp = tamp & 0x000000FF;
  2672  001E88  0100               	movlb	0	; () banked
  2673  001E8A  51B3               	movf	CANSetMask@tamp& (0+255),w,b
  2674  001E8C  0100               	movlb	0	; () banked
  2675  001E8E  6FB3               	movwf	CANSetMask@tamp& (0+255),b
  2676  001E90  6BB4               	clrf	(CANSetMask@tamp+1)& (0+255),b
  2677  001E92  6BB5               	clrf	(CANSetMask@tamp+2)& (0+255),b
  2678  001E94  6BB6               	clrf	(CANSetMask@tamp+3)& (0+255),b
  2679                           
  2680                           ; BSR set to: 0
  2681                           ;CANlib.h: 658: RXM1SIDH = (unsigned char) tamp;
  2682  001E96  C0B3  FF1C         	movff	CANSetMask@tamp,3868	;volatile
  2683                           
  2684                           ; BSR set to: 0
  2685                           ;CANlib.h: 660: tamp = mask & 0x00000007;
  2686  001E9A  0E07               	movlw	7
  2687  001E9C  0100               	movlb	0	; () banked
  2688  001E9E  15A9               	andwf	CANSetMask@mask& (0+255),w,b
  2689  001EA0  0100               	movlb	0	; () banked
  2690  001EA2  6FB3               	movwf	CANSetMask@tamp& (0+255),b
  2691  001EA4  0E00               	movlw	0
  2692  001EA6  0100               	movlb	0	; () banked
  2693  001EA8  15AA               	andwf	(CANSetMask@mask+1)& (0+255),w,b
  2694  001EAA  0100               	movlb	0	; () banked
  2695  001EAC  6FB4               	movwf	(CANSetMask@tamp+1)& (0+255),b
  2696  001EAE  0E00               	movlw	0
  2697  001EB0  0100               	movlb	0	; () banked
  2698  001EB2  15AB               	andwf	(CANSetMask@mask+2)& (0+255),w,b
  2699  001EB4  0100               	movlb	0	; () banked
  2700  001EB6  6FB5               	movwf	(CANSetMask@tamp+2)& (0+255),b
  2701  001EB8  0E00               	movlw	0
  2702  001EBA  0100               	movlb	0	; () banked
  2703  001EBC  15AC               	andwf	(CANSetMask@mask+3)& (0+255),w,b
  2704  001EBE  0100               	movlb	0	; () banked
  2705  001EC0  6FB6               	movwf	(CANSetMask@tamp+3)& (0+255),b
  2706                           
  2707                           ; BSR set to: 0
  2708                           ;CANlib.h: 661: tamp = tamp << 5;
  2709  001EC2  C0B3  F0AE         	movff	CANSetMask@tamp,??_CANSetMask
  2710  001EC6  C0B4  F0AF         	movff	CANSetMask@tamp+1,??_CANSetMask+1
  2711  001ECA  C0B5  F0B0         	movff	CANSetMask@tamp+2,??_CANSetMask+2
  2712  001ECE  C0B6  F0B1         	movff	CANSetMask@tamp+3,??_CANSetMask+3
  2713  001ED2  0E05               	movlw	5
  2714  001ED4                     u4755:
  2715  001ED4  90D8               	bcf	status,0,c
  2716  001ED6  0100               	movlb	0	; () banked
  2717  001ED8  37AE               	rlcf	??_CANSetMask& (0+255),f,b
  2718  001EDA  37AF               	rlcf	(??_CANSetMask+1)& (0+255),f,b
  2719  001EDC  37B0               	rlcf	(??_CANSetMask+2)& (0+255),f,b
  2720  001EDE  37B1               	rlcf	(??_CANSetMask+3)& (0+255),f,b
  2721  001EE0  2EE8               	decfsz	wreg,f,c
  2722  001EE2  D7F8               	goto	u4755
  2723  001EE4  C0AE  F0B3         	movff	??_CANSetMask,CANSetMask@tamp
  2724  001EE8  C0AF  F0B4         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  2725  001EEC  C0B0  F0B5         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  2726  001EF0  C0B1  F0B6         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  2727                           
  2728                           ; BSR set to: 0
  2729                           ;CANlib.h: 662: RXM1SIDL = (unsigned char) tamp;
  2730  001EF4  C0B3  FF1D         	movff	CANSetMask@tamp,3869	;volatile
  2731  001EF8                     l4028:
  2732                           
  2733                           ; BSR set to: 0
  2734                           ;CANlib.h: 663: }
  2735                           ;CANlib.h: 665: if ((numBuffer ==CAN_MASK_B1) && (type == CAN_CONFIG_XTD_MSG))
  2736  001EF8  0100               	movlb	0	; () banked
  2737  001EFA  05B2               	decf	CANSetMask@numBuffer& (0+255),w,b
  2738  001EFC  A4D8               	btfss	status,2,c
  2739  001EFE  D087               	goto	l4060
  2740                           
  2741                           ; BSR set to: 0
  2742  001F00  0EF7               	movlw	247
  2743  001F02  0100               	movlb	0	; () banked
  2744  001F04  19AD               	xorwf	CANSetMask@type& (0+255),w,b
  2745  001F06  A4D8               	btfss	status,2,c
  2746  001F08  D082               	goto	l4060
  2747                           
  2748                           ; BSR set to: 0
  2749                           ;CANlib.h: 666: {
  2750                           ;CANlib.h: 667: tamp = mask & 0x000000FF;
  2751  001F0A  0100               	movlb	0	; () banked
  2752  001F0C  51A9               	movf	CANSetMask@mask& (0+255),w,b
  2753  001F0E  0100               	movlb	0	; () banked
  2754  001F10  6FB3               	movwf	CANSetMask@tamp& (0+255),b
  2755  001F12  6BB4               	clrf	(CANSetMask@tamp+1)& (0+255),b
  2756  001F14  6BB5               	clrf	(CANSetMask@tamp+2)& (0+255),b
  2757  001F16  6BB6               	clrf	(CANSetMask@tamp+3)& (0+255),b
  2758                           
  2759                           ; BSR set to: 0
  2760                           ;CANlib.h: 668: RXM0EIDL = (unsigned char) tamp;
  2761  001F18  C0B3  FF1B         	movff	CANSetMask@tamp,3867	;volatile
  2762                           
  2763                           ; BSR set to: 0
  2764                           ;CANlib.h: 670: tamp = mask & 0x0000FF00;
  2765  001F1C  0E00               	movlw	0
  2766  001F1E  0100               	movlb	0	; () banked
  2767  001F20  15A9               	andwf	CANSetMask@mask& (0+255),w,b
  2768  001F22  0100               	movlb	0	; () banked
  2769  001F24  6FB3               	movwf	CANSetMask@tamp& (0+255),b
  2770  001F26  0EFF               	movlw	255
  2771  001F28  0100               	movlb	0	; () banked
  2772  001F2A  15AA               	andwf	(CANSetMask@mask+1)& (0+255),w,b
  2773  001F2C  0100               	movlb	0	; () banked
  2774  001F2E  6FB4               	movwf	(CANSetMask@tamp+1)& (0+255),b
  2775  001F30  0E00               	movlw	0
  2776  001F32  0100               	movlb	0	; () banked
  2777  001F34  15AB               	andwf	(CANSetMask@mask+2)& (0+255),w,b
  2778  001F36  0100               	movlb	0	; () banked
  2779  001F38  6FB5               	movwf	(CANSetMask@tamp+2)& (0+255),b
  2780  001F3A  0E00               	movlw	0
  2781  001F3C  0100               	movlb	0	; () banked
  2782  001F3E  15AC               	andwf	(CANSetMask@mask+3)& (0+255),w,b
  2783  001F40  0100               	movlb	0	; () banked
  2784  001F42  6FB6               	movwf	(CANSetMask@tamp+3)& (0+255),b
  2785                           
  2786                           ; BSR set to: 0
  2787                           ;CANlib.h: 671: tamp = tamp >> 8;
  2788  001F44  C0B3  F0AE         	movff	CANSetMask@tamp,??_CANSetMask
  2789  001F48  C0B4  F0AF         	movff	CANSetMask@tamp+1,??_CANSetMask+1
  2790  001F4C  C0B5  F0B0         	movff	CANSetMask@tamp+2,??_CANSetMask+2
  2791  001F50  C0B6  F0B1         	movff	CANSetMask@tamp+3,??_CANSetMask+3
  2792  001F54  C0AF  F0AE         	movff	??_CANSetMask+1,??_CANSetMask
  2793  001F58  C0B0  F0AF         	movff	??_CANSetMask+2,??_CANSetMask+1
  2794  001F5C  C0B1  F0B0         	movff	??_CANSetMask+3,??_CANSetMask+2
  2795  001F60  0100               	movlb	0	; () banked
  2796  001F62  6BB1               	clrf	(??_CANSetMask+3)& (0+255),b
  2797  001F64  C0AE  F0B3         	movff	??_CANSetMask,CANSetMask@tamp
  2798  001F68  C0AF  F0B4         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  2799  001F6C  C0B0  F0B5         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  2800  001F70  C0B1  F0B6         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  2801                           
  2802                           ; BSR set to: 0
  2803                           ;CANlib.h: 672: RXM0EIDH = (unsigned char) tamp;
  2804  001F74  C0B3  FF1A         	movff	CANSetMask@tamp,3866	;volatile
  2805                           
  2806                           ; BSR set to: 0
  2807                           ;CANlib.h: 674: if (mask & 0x00010000)
  2808  001F78  0100               	movlb	0	; () banked
  2809  001F7A  A1AB               	btfss	(CANSetMask@mask+2)& (0+255),0,b
  2810  001F7C  D003               	goto	l432
  2811                           
  2812                           ; BSR set to: 0
  2813                           ;CANlib.h: 675: RXM0SIDLbits.EID16 = 0x01;
  2814  001F7E  010F               	movlb	15	; () banked
  2815  001F80  8119               	bsf	25,0,b	;volatile
  2816  001F82  D002               	goto	l433
  2817  001F84                     l432:
  2818                           
  2819                           ; BSR set to: 0
  2820                           ;CANlib.h: 676: else
  2821                           ;CANlib.h: 677: RXM0SIDLbits.EID16 = 0x00;
  2822  001F84  010F               	movlb	15	; () banked
  2823  001F86  9119               	bcf	25,0,b	;volatile
  2824  001F88                     l433:
  2825                           
  2826                           ; BSR set to: 15
  2827                           ;CANlib.h: 679: if (mask & 0x00020000)
  2828  001F88  0100               	movlb	0	; () banked
  2829  001F8A  A3AB               	btfss	(CANSetMask@mask+2)& (0+255),1,b
  2830  001F8C  D003               	goto	l434
  2831                           
  2832                           ; BSR set to: 0
  2833                           ;CANlib.h: 680: RXM0SIDLbits.EID17 = 0x01;
  2834  001F8E  010F               	movlb	15	; () banked
  2835  001F90  8319               	bsf	25,1,b	;volatile
  2836  001F92  D002               	goto	l435
  2837  001F94                     l434:
  2838                           
  2839                           ; BSR set to: 0
  2840                           ;CANlib.h: 681: else
  2841                           ;CANlib.h: 682: RXM0SIDLbits.EID17 = 0x00;
  2842  001F94  010F               	movlb	15	; () banked
  2843  001F96  9319               	bcf	25,1,b	;volatile
  2844  001F98                     l435:
  2845                           
  2846                           ; BSR set to: 15
  2847                           ;CANlib.h: 684: if (mask & 0x00040000)
  2848  001F98  0100               	movlb	0	; () banked
  2849  001F9A  A5AB               	btfss	(CANSetMask@mask+2)& (0+255),2,b
  2850  001F9C  D003               	goto	l436
  2851                           
  2852                           ; BSR set to: 0
  2853                           ;CANlib.h: 685: RXM0SIDLbits.SID0 = 0x01;
  2854  001F9E  010F               	movlb	15	; () banked
  2855  001FA0  8B19               	bsf	25,5,b	;volatile
  2856  001FA2  D002               	goto	l437
  2857  001FA4                     l436:
  2858                           
  2859                           ; BSR set to: 0
  2860                           ;CANlib.h: 686: else
  2861                           ;CANlib.h: 687: RXM0SIDLbits.SID0 = 0x00;
  2862  001FA4  010F               	movlb	15	; () banked
  2863  001FA6  9B19               	bcf	25,5,b	;volatile
  2864  001FA8                     l437:
  2865                           
  2866                           ; BSR set to: 15
  2867                           ;CANlib.h: 689: if (mask & 0x00080000)
  2868  001FA8  0100               	movlb	0	; () banked
  2869  001FAA  A7AB               	btfss	(CANSetMask@mask+2)& (0+255),3,b
  2870  001FAC  D003               	goto	l438
  2871                           
  2872                           ; BSR set to: 0
  2873                           ;CANlib.h: 690: RXM0SIDLbits.SID1 = 0x01;
  2874  001FAE  010F               	movlb	15	; () banked
  2875  001FB0  8D19               	bsf	25,6,b	;volatile
  2876  001FB2  D002               	goto	l439
  2877  001FB4                     l438:
  2878                           
  2879                           ; BSR set to: 0
  2880                           ;CANlib.h: 691: else
  2881                           ;CANlib.h: 692: RXM0SIDLbits.SID1 = 0x00;
  2882  001FB4  010F               	movlb	15	; () banked
  2883  001FB6  9D19               	bcf	25,6,b	;volatile
  2884  001FB8                     l439:
  2885                           
  2886                           ; BSR set to: 15
  2887                           ;CANlib.h: 694: if (mask & 0x00100000)
  2888  001FB8  0100               	movlb	0	; () banked
  2889  001FBA  A9AB               	btfss	(CANSetMask@mask+2)& (0+255),4,b
  2890  001FBC  D003               	goto	l440
  2891                           
  2892                           ; BSR set to: 0
  2893                           ;CANlib.h: 695: RXM0SIDLbits.SID2 = 0x01 ;
  2894  001FBE  010F               	movlb	15	; () banked
  2895  001FC0  8F19               	bsf	25,7,b	;volatile
  2896  001FC2  D002               	goto	l4054
  2897  001FC4                     l440:
  2898                           
  2899                           ; BSR set to: 0
  2900                           ;CANlib.h: 696: else
  2901                           ;CANlib.h: 697: RXM0SIDLbits.SID2 = 0x00 ;
  2902  001FC4  010F               	movlb	15	; () banked
  2903  001FC6  9F19               	bcf	25,7,b	;volatile
  2904  001FC8                     l4054:
  2905                           
  2906                           ; BSR set to: 15
  2907                           ;CANlib.h: 699: tamp = (mask >> 21);
  2908  001FC8  C0A9  F0AE         	movff	CANSetMask@mask,??_CANSetMask
  2909  001FCC  C0AA  F0AF         	movff	CANSetMask@mask+1,??_CANSetMask+1
  2910  001FD0  C0AB  F0B0         	movff	CANSetMask@mask+2,??_CANSetMask+2
  2911  001FD4  C0AC  F0B1         	movff	CANSetMask@mask+3,??_CANSetMask+3
  2912  001FD8  0E16               	movlw	22
  2913  001FDA  D006               	goto	u4830
  2914  001FDC                     u4835:
  2915  001FDC  0100               	movlb	0	; () banked
  2916  001FDE  90D8               	bcf	status,0,c
  2917  001FE0  33B1               	rrcf	(??_CANSetMask+3)& (0+255),f,b
  2918  001FE2  33B0               	rrcf	(??_CANSetMask+2)& (0+255),f,b
  2919  001FE4  33AF               	rrcf	(??_CANSetMask+1)& (0+255),f,b
  2920  001FE6  33AE               	rrcf	??_CANSetMask& (0+255),f,b
  2921  001FE8                     u4830:
  2922  001FE8  2EE8               	decfsz	wreg,f,c
  2923  001FEA  D7F8               	goto	u4835
  2924  001FEC  C0AE  F0B3         	movff	??_CANSetMask,CANSetMask@tamp
  2925  001FF0  C0AF  F0B4         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  2926  001FF4  C0B0  F0B5         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  2927  001FF8  C0B1  F0B6         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  2928                           
  2929                           ; BSR set to: 0
  2930                           ;CANlib.h: 700: tamp = tamp & 0x000000FF;
  2931  001FFC  0100               	movlb	0	; () banked
  2932  001FFE  51B3               	movf	CANSetMask@tamp& (0+255),w,b
  2933  002000  0100               	movlb	0	; () banked
  2934  002002  6FB3               	movwf	CANSetMask@tamp& (0+255),b
  2935  002004  6BB4               	clrf	(CANSetMask@tamp+1)& (0+255),b
  2936  002006  6BB5               	clrf	(CANSetMask@tamp+2)& (0+255),b
  2937  002008  6BB6               	clrf	(CANSetMask@tamp+3)& (0+255),b
  2938                           
  2939                           ; BSR set to: 0
  2940                           ;CANlib.h: 701: RXM0SIDH = (unsigned char) tamp;
  2941  00200A  C0B3  FF18         	movff	CANSetMask@tamp,3864	;volatile
  2942  00200E                     l4060:
  2943                           
  2944                           ; BSR set to: 0
  2945                           ;CANlib.h: 702: }
  2946                           ;CANlib.h: 704: if ((numBuffer ==CAN_MASK_B2) && (type == CAN_CONFIG_XTD_MSG))
  2947  00200E  0E02               	movlw	2
  2948  002010  0100               	movlb	0	; () banked
  2949  002012  19B2               	xorwf	CANSetMask@numBuffer& (0+255),w,b
  2950  002014  A4D8               	btfss	status,2,c
  2951  002016  0012               	return	
  2952                           
  2953                           ; BSR set to: 0
  2954  002018  0EF7               	movlw	247
  2955  00201A  0100               	movlb	0	; () banked
  2956  00201C  19AD               	xorwf	CANSetMask@type& (0+255),w,b
  2957  00201E  A4D8               	btfss	status,2,c
  2958  002020  0012               	return	
  2959                           
  2960                           ; BSR set to: 0
  2961                           ;CANlib.h: 705: {
  2962                           ;CANlib.h: 706: tamp = mask & 0x000000FF;
  2963  002022  0100               	movlb	0	; () banked
  2964  002024  51A9               	movf	CANSetMask@mask& (0+255),w,b
  2965  002026  0100               	movlb	0	; () banked
  2966  002028  6FB3               	movwf	CANSetMask@tamp& (0+255),b
  2967  00202A  6BB4               	clrf	(CANSetMask@tamp+1)& (0+255),b
  2968  00202C  6BB5               	clrf	(CANSetMask@tamp+2)& (0+255),b
  2969  00202E  6BB6               	clrf	(CANSetMask@tamp+3)& (0+255),b
  2970                           
  2971                           ; BSR set to: 0
  2972                           ;CANlib.h: 707: RXM1EIDL = (unsigned char) tamp;
  2973  002030  C0B3  FF1F         	movff	CANSetMask@tamp,3871	;volatile
  2974                           
  2975                           ; BSR set to: 0
  2976                           ;CANlib.h: 709: tamp = mask & 0x0000FF00;
  2977  002034  0E00               	movlw	0
  2978  002036  0100               	movlb	0	; () banked
  2979  002038  15A9               	andwf	CANSetMask@mask& (0+255),w,b
  2980  00203A  0100               	movlb	0	; () banked
  2981  00203C  6FB3               	movwf	CANSetMask@tamp& (0+255),b
  2982  00203E  0EFF               	movlw	255
  2983  002040  0100               	movlb	0	; () banked
  2984  002042  15AA               	andwf	(CANSetMask@mask+1)& (0+255),w,b
  2985  002044  0100               	movlb	0	; () banked
  2986  002046  6FB4               	movwf	(CANSetMask@tamp+1)& (0+255),b
  2987  002048  0E00               	movlw	0
  2988  00204A  0100               	movlb	0	; () banked
  2989  00204C  15AB               	andwf	(CANSetMask@mask+2)& (0+255),w,b
  2990  00204E  0100               	movlb	0	; () banked
  2991  002050  6FB5               	movwf	(CANSetMask@tamp+2)& (0+255),b
  2992  002052  0E00               	movlw	0
  2993  002054  0100               	movlb	0	; () banked
  2994  002056  15AC               	andwf	(CANSetMask@mask+3)& (0+255),w,b
  2995  002058  0100               	movlb	0	; () banked
  2996  00205A  6FB6               	movwf	(CANSetMask@tamp+3)& (0+255),b
  2997                           
  2998                           ; BSR set to: 0
  2999                           ;CANlib.h: 710: tamp = tamp >> 8;
  3000  00205C  C0B3  F0AE         	movff	CANSetMask@tamp,??_CANSetMask
  3001  002060  C0B4  F0AF         	movff	CANSetMask@tamp+1,??_CANSetMask+1
  3002  002064  C0B5  F0B0         	movff	CANSetMask@tamp+2,??_CANSetMask+2
  3003  002068  C0B6  F0B1         	movff	CANSetMask@tamp+3,??_CANSetMask+3
  3004  00206C  C0AF  F0AE         	movff	??_CANSetMask+1,??_CANSetMask
  3005  002070  C0B0  F0AF         	movff	??_CANSetMask+2,??_CANSetMask+1
  3006  002074  C0B1  F0B0         	movff	??_CANSetMask+3,??_CANSetMask+2
  3007  002078  0100               	movlb	0	; () banked
  3008  00207A  6BB1               	clrf	(??_CANSetMask+3)& (0+255),b
  3009  00207C  C0AE  F0B3         	movff	??_CANSetMask,CANSetMask@tamp
  3010  002080  C0AF  F0B4         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  3011  002084  C0B0  F0B5         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  3012  002088  C0B1  F0B6         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  3013                           
  3014                           ; BSR set to: 0
  3015                           ;CANlib.h: 711: RXM1EIDH = (unsigned char) tamp;
  3016  00208C  C0B3  FF1E         	movff	CANSetMask@tamp,3870	;volatile
  3017                           
  3018                           ; BSR set to: 0
  3019                           ;CANlib.h: 713: if (mask & 0x00010000)
  3020  002090  0100               	movlb	0	; () banked
  3021  002092  A1AB               	btfss	(CANSetMask@mask+2)& (0+255),0,b
  3022  002094  D003               	goto	l443
  3023                           
  3024                           ; BSR set to: 0
  3025                           ;CANlib.h: 714: RXM1SIDLbits.EID16 = 0x01;
  3026  002096  010F               	movlb	15	; () banked
  3027  002098  811D               	bsf	29,0,b	;volatile
  3028  00209A  D002               	goto	l444
  3029  00209C                     l443:
  3030                           
  3031                           ; BSR set to: 0
  3032                           ;CANlib.h: 715: else
  3033                           ;CANlib.h: 716: RXM1SIDLbits.EID16 = 0x00;
  3034  00209C  010F               	movlb	15	; () banked
  3035  00209E  911D               	bcf	29,0,b	;volatile
  3036  0020A0                     l444:
  3037                           
  3038                           ; BSR set to: 15
  3039                           ;CANlib.h: 718: if (mask & 0x00020000)
  3040  0020A0  0100               	movlb	0	; () banked
  3041  0020A2  A3AB               	btfss	(CANSetMask@mask+2)& (0+255),1,b
  3042  0020A4  D003               	goto	l445
  3043                           
  3044                           ; BSR set to: 0
  3045                           ;CANlib.h: 719: RXM1SIDLbits.EID17 = 0x01;
  3046  0020A6  010F               	movlb	15	; () banked
  3047  0020A8  831D               	bsf	29,1,b	;volatile
  3048  0020AA  D002               	goto	l446
  3049  0020AC                     l445:
  3050                           
  3051                           ; BSR set to: 0
  3052                           ;CANlib.h: 720: else
  3053                           ;CANlib.h: 721: RXM1SIDLbits.EID17 = 0x00;
  3054  0020AC  010F               	movlb	15	; () banked
  3055  0020AE  931D               	bcf	29,1,b	;volatile
  3056  0020B0                     l446:
  3057                           
  3058                           ; BSR set to: 15
  3059                           ;CANlib.h: 723: if (mask & 0x00040000)
  3060  0020B0  0100               	movlb	0	; () banked
  3061  0020B2  A5AB               	btfss	(CANSetMask@mask+2)& (0+255),2,b
  3062  0020B4  D003               	goto	l447
  3063                           
  3064                           ; BSR set to: 0
  3065                           ;CANlib.h: 724: RXM1SIDLbits.SID0 = 0x01;
  3066  0020B6  010F               	movlb	15	; () banked
  3067  0020B8  8B1D               	bsf	29,5,b	;volatile
  3068  0020BA  D002               	goto	l448
  3069  0020BC                     l447:
  3070                           
  3071                           ; BSR set to: 0
  3072                           ;CANlib.h: 725: else
  3073                           ;CANlib.h: 726: RXM1SIDLbits.SID0 = 0x00;
  3074  0020BC  010F               	movlb	15	; () banked
  3075  0020BE  9B1D               	bcf	29,5,b	;volatile
  3076  0020C0                     l448:
  3077                           
  3078                           ; BSR set to: 15
  3079                           ;CANlib.h: 728: if (mask & 0x00080000)
  3080  0020C0  0100               	movlb	0	; () banked
  3081  0020C2  A7AB               	btfss	(CANSetMask@mask+2)& (0+255),3,b
  3082  0020C4  D003               	goto	l449
  3083                           
  3084                           ; BSR set to: 0
  3085                           ;CANlib.h: 729: RXM1SIDLbits.SID1 = 0x01;
  3086  0020C6  010F               	movlb	15	; () banked
  3087  0020C8  8D1D               	bsf	29,6,b	;volatile
  3088  0020CA  D002               	goto	l450
  3089  0020CC                     l449:
  3090                           
  3091                           ; BSR set to: 0
  3092                           ;CANlib.h: 730: else
  3093                           ;CANlib.h: 731: RXM1SIDLbits.SID1 = 0x00;
  3094  0020CC  010F               	movlb	15	; () banked
  3095  0020CE  9D1D               	bcf	29,6,b	;volatile
  3096  0020D0                     l450:
  3097                           
  3098                           ; BSR set to: 15
  3099                           ;CANlib.h: 733: if (mask & 0x00100000)
  3100  0020D0  0100               	movlb	0	; () banked
  3101  0020D2  A9AB               	btfss	(CANSetMask@mask+2)& (0+255),4,b
  3102  0020D4  D003               	goto	l451
  3103                           
  3104                           ; BSR set to: 0
  3105                           ;CANlib.h: 734: RXM1SIDLbits.SID2 = 0x01 ;
  3106  0020D6  010F               	movlb	15	; () banked
  3107  0020D8  8F1D               	bsf	29,7,b	;volatile
  3108  0020DA  D002               	goto	l4086
  3109  0020DC                     l451:
  3110                           
  3111                           ; BSR set to: 0
  3112                           ;CANlib.h: 735: else
  3113                           ;CANlib.h: 736: RXM1SIDLbits.SID2 = 0x00 ;
  3114  0020DC  010F               	movlb	15	; () banked
  3115  0020DE  9F1D               	bcf	29,7,b	;volatile
  3116  0020E0                     l4086:
  3117                           
  3118                           ; BSR set to: 15
  3119                           ;CANlib.h: 738: tamp = (mask >> 21);
  3120  0020E0  C0A9  F0AE         	movff	CANSetMask@mask,??_CANSetMask
  3121  0020E4  C0AA  F0AF         	movff	CANSetMask@mask+1,??_CANSetMask+1
  3122  0020E8  C0AB  F0B0         	movff	CANSetMask@mask+2,??_CANSetMask+2
  3123  0020EC  C0AC  F0B1         	movff	CANSetMask@mask+3,??_CANSetMask+3
  3124  0020F0  0E16               	movlw	22
  3125  0020F2  D006               	goto	u4910
  3126  0020F4                     u4915:
  3127  0020F4  0100               	movlb	0	; () banked
  3128  0020F6  90D8               	bcf	status,0,c
  3129  0020F8  33B1               	rrcf	(??_CANSetMask+3)& (0+255),f,b
  3130  0020FA  33B0               	rrcf	(??_CANSetMask+2)& (0+255),f,b
  3131  0020FC  33AF               	rrcf	(??_CANSetMask+1)& (0+255),f,b
  3132  0020FE  33AE               	rrcf	??_CANSetMask& (0+255),f,b
  3133  002100                     u4910:
  3134  002100  2EE8               	decfsz	wreg,f,c
  3135  002102  D7F8               	goto	u4915
  3136  002104  C0AE  F0B3         	movff	??_CANSetMask,CANSetMask@tamp
  3137  002108  C0AF  F0B4         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  3138  00210C  C0B0  F0B5         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  3139  002110  C0B1  F0B6         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  3140                           
  3141                           ; BSR set to: 0
  3142                           ;CANlib.h: 739: tamp = tamp & 0x000000FF;
  3143  002114  0100               	movlb	0	; () banked
  3144  002116  51B3               	movf	CANSetMask@tamp& (0+255),w,b
  3145  002118  0100               	movlb	0	; () banked
  3146  00211A  6FB3               	movwf	CANSetMask@tamp& (0+255),b
  3147  00211C  6BB4               	clrf	(CANSetMask@tamp+1)& (0+255),b
  3148  00211E  6BB5               	clrf	(CANSetMask@tamp+2)& (0+255),b
  3149  002120  6BB6               	clrf	(CANSetMask@tamp+3)& (0+255),b
  3150                           
  3151                           ; BSR set to: 0
  3152                           ;CANlib.h: 740: RXM1SIDH = (unsigned char) tamp;
  3153  002122  C0B3  FF1C         	movff	CANSetMask@tamp,3868	;volatile
  3154  002126  0012               	return	
  3155  002128                     __end_of_CANSetMask:
  3156                           	opt stack 0
  3157                           tblptru	equ	0xFF8
  3158                           tblptrh	equ	0xFF7
  3159                           tblptrl	equ	0xFF6
  3160                           tablat	equ	0xFF5
  3161                           prodh	equ	0xFF4
  3162                           prodl	equ	0xFF3
  3163                           intcon	equ	0xFF2
  3164                           postinc0	equ	0xFEE
  3165                           wreg	equ	0xFE8
  3166                           indf1	equ	0xFE7
  3167                           postdec1	equ	0xFE5
  3168                           fsr1h	equ	0xFE2
  3169                           fsr1l	equ	0xFE1
  3170                           indf2	equ	0xFDF
  3171                           fsr2h	equ	0xFDA
  3172                           fsr2l	equ	0xFD9
  3173                           status	equ	0xFD8
  3174                           
  3175 ;; *************** function _CANSetFilter *****************
  3176 ;; Defined at:
  3177 ;;		line 748 in file "CANlib.h"
  3178 ;; Parameters:    Size  Location     Type
  3179 ;;  numBuffer       1    wreg     enum E16881
  3180 ;;  filter          4    0[BANK0 ] unsigned long 
  3181 ;;  type            1    4[BANK0 ] enum E16844
  3182 ;; Auto vars:     Size  Location     Type
  3183 ;;  numBuffer       1    9[BANK0 ] enum E16881
  3184 ;;  tamp            4   10[BANK0 ] unsigned long 
  3185 ;; Return value:  Size  Location     Type
  3186 ;;		None               void
  3187 ;; Registers used:
  3188 ;;		wreg, status,2, status,0
  3189 ;; Tracked objects:
  3190 ;;		On entry : 0/0
  3191 ;;		On exit  : 0/0
  3192 ;;		Unchanged: 0/0
  3193 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3194 ;;      Params:         0       5       0       0
  3195 ;;      Locals:         0       5       0       0
  3196 ;;      Temps:          0       4       0       0
  3197 ;;      Totals:         0      14       0       0
  3198 ;;Total ram usage:       14 bytes
  3199 ;; Hardware stack levels used:    1
  3200 ;; Hardware stack levels required when called:    2
  3201 ;; This function calls:
  3202 ;;		Nothing
  3203 ;; This function is called by:
  3204 ;;		_CANInitialize
  3205 ;; This function uses a non-reentrant model
  3206 ;;
  3207                           
  3208                           	psect	text7
  3209  0001AE                     __ptext7:
  3210                           	opt stack 0
  3211  0001AE                     _CANSetFilter:
  3212                           	opt stack 26
  3213                           
  3214                           ; BSR set to: 0
  3215                           ;incstack = 0
  3216                           ;CANSetFilter@numBuffer stored from wreg
  3217  0001AE  0100               	movlb	0	; () banked
  3218  0001B0  6FB2               	movwf	CANSetFilter@numBuffer& (0+255),b
  3219                           
  3220                           ;CANlib.h: 750: unsigned long tamp;
  3221                           ;CANlib.h: 752: if ((numBuffer ==CAN_FILTER_B1_F1) && (type == CAN_CONFIG_STD_MSG))
  3222  0001B2  0100               	movlb	0	; () banked
  3223  0001B4  51B2               	movf	CANSetFilter@numBuffer& (0+255),w,b
  3224  0001B6  0100               	movlb	0	; () banked
  3225  0001B8  A4D8               	btfss	status,2,c
  3226  0001BA  D058               	goto	l4110
  3227                           
  3228                           ; BSR set to: 0
  3229  0001BC  0100               	movlb	0	; () banked
  3230  0001BE  29AD               	incf	CANSetFilter@type& (0+255),w,b
  3231  0001C0  A4D8               	btfss	status,2,c
  3232  0001C2  D054               	goto	l4110
  3233                           
  3234                           ; BSR set to: 0
  3235                           ;CANlib.h: 753: {
  3236                           ;CANlib.h: 754: RXF0SIDLbits.EXIDEN = 0x00;
  3237  0001C4  010F               	movlb	15	; () banked
  3238  0001C6  9701               	bcf	1,3,b	;volatile
  3239                           
  3240                           ; BSR set to: 15
  3241                           ;CANlib.h: 756: tamp = (filter >> 3);
  3242  0001C8  C0A9  F0AE         	movff	CANSetFilter@filter,??_CANSetFilter
  3243  0001CC  C0AA  F0AF         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  3244  0001D0  C0AB  F0B0         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  3245  0001D4  C0AC  F0B1         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  3246  0001D8  0E04               	movlw	4
  3247  0001DA  D006               	goto	u4940
  3248  0001DC                     u4945:
  3249  0001DC  0100               	movlb	0	; () banked
  3250  0001DE  90D8               	bcf	status,0,c
  3251  0001E0  33B1               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  3252  0001E2  33B0               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  3253  0001E4  33AF               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  3254  0001E6  33AE               	rrcf	??_CANSetFilter& (0+255),f,b
  3255  0001E8                     u4940:
  3256  0001E8  2EE8               	decfsz	wreg,f,c
  3257  0001EA  D7F8               	goto	u4945
  3258  0001EC  C0AE  F0B3         	movff	??_CANSetFilter,CANSetFilter@tamp
  3259  0001F0  C0AF  F0B4         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  3260  0001F4  C0B0  F0B5         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  3261  0001F8  C0B1  F0B6         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  3262                           
  3263                           ; BSR set to: 0
  3264                           ;CANlib.h: 757: tamp = tamp & 0x000000FF;
  3265  0001FC  0100               	movlb	0	; () banked
  3266  0001FE  51B3               	movf	CANSetFilter@tamp& (0+255),w,b
  3267  000200  0100               	movlb	0	; () banked
  3268  000202  6FB3               	movwf	CANSetFilter@tamp& (0+255),b
  3269  000204  6BB4               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  3270  000206  6BB5               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  3271  000208  6BB6               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  3272                           
  3273                           ; BSR set to: 0
  3274                           ;CANlib.h: 758: RXF0SIDH = (unsigned char) tamp;
  3275  00020A  C0B3  FF00         	movff	CANSetFilter@tamp,3840	;volatile
  3276                           
  3277                           ; BSR set to: 0
  3278                           ;CANlib.h: 760: tamp = filter & 0x00000007;
  3279  00020E  0E07               	movlw	7
  3280  000210  0100               	movlb	0	; () banked
  3281  000212  15A9               	andwf	CANSetFilter@filter& (0+255),w,b
  3282  000214  0100               	movlb	0	; () banked
  3283  000216  6FB3               	movwf	CANSetFilter@tamp& (0+255),b
  3284  000218  0E00               	movlw	0
  3285  00021A  0100               	movlb	0	; () banked
  3286  00021C  15AA               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  3287  00021E  0100               	movlb	0	; () banked
  3288  000220  6FB4               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  3289  000222  0E00               	movlw	0
  3290  000224  0100               	movlb	0	; () banked
  3291  000226  15AB               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  3292  000228  0100               	movlb	0	; () banked
  3293  00022A  6FB5               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  3294  00022C  0E00               	movlw	0
  3295  00022E  0100               	movlb	0	; () banked
  3296  000230  15AC               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  3297  000232  0100               	movlb	0	; () banked
  3298  000234  6FB6               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  3299                           
  3300                           ; BSR set to: 0
  3301                           ;CANlib.h: 761: tamp = tamp << 5;
  3302  000236  C0B3  F0AE         	movff	CANSetFilter@tamp,??_CANSetFilter
  3303  00023A  C0B4  F0AF         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  3304  00023E  C0B5  F0B0         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  3305  000242  C0B6  F0B1         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  3306  000246  0E05               	movlw	5
  3307  000248                     u4955:
  3308  000248  90D8               	bcf	status,0,c
  3309  00024A  0100               	movlb	0	; () banked
  3310  00024C  37AE               	rlcf	??_CANSetFilter& (0+255),f,b
  3311  00024E  37AF               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  3312  000250  37B0               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  3313  000252  37B1               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  3314  000254  2EE8               	decfsz	wreg,f,c
  3315  000256  D7F8               	goto	u4955
  3316  000258  C0AE  F0B3         	movff	??_CANSetFilter,CANSetFilter@tamp
  3317  00025C  C0AF  F0B4         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  3318  000260  C0B0  F0B5         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  3319  000264  C0B1  F0B6         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  3320                           
  3321                           ; BSR set to: 0
  3322                           ;CANlib.h: 762: RXF0SIDL = (unsigned char) tamp;
  3323  000268  C0B3  FF01         	movff	CANSetFilter@tamp,3841	;volatile
  3324  00026C                     l4110:
  3325                           
  3326                           ; BSR set to: 0
  3327                           ;CANlib.h: 763: }
  3328                           ;CANlib.h: 765: if ((numBuffer ==CAN_FILTER_B1_F2) && (type == CAN_CONFIG_STD_MSG))
  3329  00026C  0100               	movlb	0	; () banked
  3330  00026E  05B2               	decf	CANSetFilter@numBuffer& (0+255),w,b
  3331  000270  A4D8               	btfss	status,2,c
  3332  000272  D058               	goto	l4128
  3333                           
  3334                           ; BSR set to: 0
  3335  000274  0100               	movlb	0	; () banked
  3336  000276  29AD               	incf	CANSetFilter@type& (0+255),w,b
  3337  000278  A4D8               	btfss	status,2,c
  3338  00027A  D054               	goto	l4128
  3339                           
  3340                           ; BSR set to: 0
  3341                           ;CANlib.h: 766: {
  3342                           ;CANlib.h: 767: RXF1SIDLbits.EXIDEN = 0x00;
  3343  00027C  010F               	movlb	15	; () banked
  3344  00027E  9705               	bcf	5,3,b	;volatile
  3345                           
  3346                           ; BSR set to: 15
  3347                           ;CANlib.h: 769: tamp = (filter >> 3);
  3348  000280  C0A9  F0AE         	movff	CANSetFilter@filter,??_CANSetFilter
  3349  000284  C0AA  F0AF         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  3350  000288  C0AB  F0B0         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  3351  00028C  C0AC  F0B1         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  3352  000290  0E04               	movlw	4
  3353  000292  D006               	goto	u4980
  3354  000294                     u4985:
  3355  000294  0100               	movlb	0	; () banked
  3356  000296  90D8               	bcf	status,0,c
  3357  000298  33B1               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  3358  00029A  33B0               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  3359  00029C  33AF               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  3360  00029E  33AE               	rrcf	??_CANSetFilter& (0+255),f,b
  3361  0002A0                     u4980:
  3362  0002A0  2EE8               	decfsz	wreg,f,c
  3363  0002A2  D7F8               	goto	u4985
  3364  0002A4  C0AE  F0B3         	movff	??_CANSetFilter,CANSetFilter@tamp
  3365  0002A8  C0AF  F0B4         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  3366  0002AC  C0B0  F0B5         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  3367  0002B0  C0B1  F0B6         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  3368                           
  3369                           ; BSR set to: 0
  3370                           ;CANlib.h: 770: tamp = tamp & 0x000000FF;
  3371  0002B4  0100               	movlb	0	; () banked
  3372  0002B6  51B3               	movf	CANSetFilter@tamp& (0+255),w,b
  3373  0002B8  0100               	movlb	0	; () banked
  3374  0002BA  6FB3               	movwf	CANSetFilter@tamp& (0+255),b
  3375  0002BC  6BB4               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  3376  0002BE  6BB5               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  3377  0002C0  6BB6               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  3378                           
  3379                           ; BSR set to: 0
  3380                           ;CANlib.h: 771: RXF1SIDH = (unsigned char) tamp;
  3381  0002C2  C0B3  FF04         	movff	CANSetFilter@tamp,3844	;volatile
  3382                           
  3383                           ; BSR set to: 0
  3384                           ;CANlib.h: 773: tamp = filter & 0x00000007;
  3385  0002C6  0E07               	movlw	7
  3386  0002C8  0100               	movlb	0	; () banked
  3387  0002CA  15A9               	andwf	CANSetFilter@filter& (0+255),w,b
  3388  0002CC  0100               	movlb	0	; () banked
  3389  0002CE  6FB3               	movwf	CANSetFilter@tamp& (0+255),b
  3390  0002D0  0E00               	movlw	0
  3391  0002D2  0100               	movlb	0	; () banked
  3392  0002D4  15AA               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  3393  0002D6  0100               	movlb	0	; () banked
  3394  0002D8  6FB4               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  3395  0002DA  0E00               	movlw	0
  3396  0002DC  0100               	movlb	0	; () banked
  3397  0002DE  15AB               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  3398  0002E0  0100               	movlb	0	; () banked
  3399  0002E2  6FB5               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  3400  0002E4  0E00               	movlw	0
  3401  0002E6  0100               	movlb	0	; () banked
  3402  0002E8  15AC               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  3403  0002EA  0100               	movlb	0	; () banked
  3404  0002EC  6FB6               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  3405                           
  3406                           ; BSR set to: 0
  3407                           ;CANlib.h: 774: tamp = tamp << 5;
  3408  0002EE  C0B3  F0AE         	movff	CANSetFilter@tamp,??_CANSetFilter
  3409  0002F2  C0B4  F0AF         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  3410  0002F6  C0B5  F0B0         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  3411  0002FA  C0B6  F0B1         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  3412  0002FE  0E05               	movlw	5
  3413  000300                     u4995:
  3414  000300  90D8               	bcf	status,0,c
  3415  000302  0100               	movlb	0	; () banked
  3416  000304  37AE               	rlcf	??_CANSetFilter& (0+255),f,b
  3417  000306  37AF               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  3418  000308  37B0               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  3419  00030A  37B1               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  3420  00030C  2EE8               	decfsz	wreg,f,c
  3421  00030E  D7F8               	goto	u4995
  3422  000310  C0AE  F0B3         	movff	??_CANSetFilter,CANSetFilter@tamp
  3423  000314  C0AF  F0B4         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  3424  000318  C0B0  F0B5         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  3425  00031C  C0B1  F0B6         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  3426                           
  3427                           ; BSR set to: 0
  3428                           ;CANlib.h: 775: RXF1SIDL = (unsigned char) tamp;
  3429  000320  C0B3  FF05         	movff	CANSetFilter@tamp,3845	;volatile
  3430  000324                     l4128:
  3431                           
  3432                           ; BSR set to: 0
  3433                           ;CANlib.h: 776: }
  3434                           ;CANlib.h: 778: if ((numBuffer ==CAN_FILTER_B2_F1) && (type == CAN_CONFIG_STD_MSG))
  3435  000324  0E02               	movlw	2
  3436  000326  0100               	movlb	0	; () banked
  3437  000328  19B2               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  3438  00032A  A4D8               	btfss	status,2,c
  3439  00032C  D058               	goto	l4146
  3440                           
  3441                           ; BSR set to: 0
  3442  00032E  0100               	movlb	0	; () banked
  3443  000330  29AD               	incf	CANSetFilter@type& (0+255),w,b
  3444  000332  A4D8               	btfss	status,2,c
  3445  000334  D054               	goto	l4146
  3446                           
  3447                           ; BSR set to: 0
  3448                           ;CANlib.h: 779: {
  3449                           ;CANlib.h: 780: RXF2SIDLbits.EXIDEN = 0x00;
  3450  000336  010F               	movlb	15	; () banked
  3451  000338  9709               	bcf	9,3,b	;volatile
  3452                           
  3453                           ; BSR set to: 15
  3454                           ;CANlib.h: 782: tamp = (filter >> 3);
  3455  00033A  C0A9  F0AE         	movff	CANSetFilter@filter,??_CANSetFilter
  3456  00033E  C0AA  F0AF         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  3457  000342  C0AB  F0B0         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  3458  000346  C0AC  F0B1         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  3459  00034A  0E04               	movlw	4
  3460  00034C  D006               	goto	u5020
  3461  00034E                     u5025:
  3462  00034E  0100               	movlb	0	; () banked
  3463  000350  90D8               	bcf	status,0,c
  3464  000352  33B1               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  3465  000354  33B0               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  3466  000356  33AF               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  3467  000358  33AE               	rrcf	??_CANSetFilter& (0+255),f,b
  3468  00035A                     u5020:
  3469  00035A  2EE8               	decfsz	wreg,f,c
  3470  00035C  D7F8               	goto	u5025
  3471  00035E  C0AE  F0B3         	movff	??_CANSetFilter,CANSetFilter@tamp
  3472  000362  C0AF  F0B4         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  3473  000366  C0B0  F0B5         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  3474  00036A  C0B1  F0B6         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  3475                           
  3476                           ; BSR set to: 0
  3477                           ;CANlib.h: 783: tamp = tamp & 0x000000FF;
  3478  00036E  0100               	movlb	0	; () banked
  3479  000370  51B3               	movf	CANSetFilter@tamp& (0+255),w,b
  3480  000372  0100               	movlb	0	; () banked
  3481  000374  6FB3               	movwf	CANSetFilter@tamp& (0+255),b
  3482  000376  6BB4               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  3483  000378  6BB5               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  3484  00037A  6BB6               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  3485                           
  3486                           ; BSR set to: 0
  3487                           ;CANlib.h: 784: RXF2SIDH = (unsigned char) tamp;
  3488  00037C  C0B3  FF08         	movff	CANSetFilter@tamp,3848	;volatile
  3489                           
  3490                           ; BSR set to: 0
  3491                           ;CANlib.h: 786: tamp = filter & 0x00000007;
  3492  000380  0E07               	movlw	7
  3493  000382  0100               	movlb	0	; () banked
  3494  000384  15A9               	andwf	CANSetFilter@filter& (0+255),w,b
  3495  000386  0100               	movlb	0	; () banked
  3496  000388  6FB3               	movwf	CANSetFilter@tamp& (0+255),b
  3497  00038A  0E00               	movlw	0
  3498  00038C  0100               	movlb	0	; () banked
  3499  00038E  15AA               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  3500  000390  0100               	movlb	0	; () banked
  3501  000392  6FB4               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  3502  000394  0E00               	movlw	0
  3503  000396  0100               	movlb	0	; () banked
  3504  000398  15AB               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  3505  00039A  0100               	movlb	0	; () banked
  3506  00039C  6FB5               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  3507  00039E  0E00               	movlw	0
  3508  0003A0  0100               	movlb	0	; () banked
  3509  0003A2  15AC               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  3510  0003A4  0100               	movlb	0	; () banked
  3511  0003A6  6FB6               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  3512                           
  3513                           ; BSR set to: 0
  3514                           ;CANlib.h: 787: tamp = tamp << 5;
  3515  0003A8  C0B3  F0AE         	movff	CANSetFilter@tamp,??_CANSetFilter
  3516  0003AC  C0B4  F0AF         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  3517  0003B0  C0B5  F0B0         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  3518  0003B4  C0B6  F0B1         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  3519  0003B8  0E05               	movlw	5
  3520  0003BA                     u5035:
  3521  0003BA  90D8               	bcf	status,0,c
  3522  0003BC  0100               	movlb	0	; () banked
  3523  0003BE  37AE               	rlcf	??_CANSetFilter& (0+255),f,b
  3524  0003C0  37AF               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  3525  0003C2  37B0               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  3526  0003C4  37B1               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  3527  0003C6  2EE8               	decfsz	wreg,f,c
  3528  0003C8  D7F8               	goto	u5035
  3529  0003CA  C0AE  F0B3         	movff	??_CANSetFilter,CANSetFilter@tamp
  3530  0003CE  C0AF  F0B4         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  3531  0003D2  C0B0  F0B5         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  3532  0003D6  C0B1  F0B6         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  3533                           
  3534                           ; BSR set to: 0
  3535                           ;CANlib.h: 788: RXF2SIDL = (unsigned char) tamp;
  3536  0003DA  C0B3  FF09         	movff	CANSetFilter@tamp,3849	;volatile
  3537  0003DE                     l4146:
  3538                           
  3539                           ; BSR set to: 0
  3540                           ;CANlib.h: 789: }
  3541                           ;CANlib.h: 791: if ((numBuffer ==CAN_FILTER_B2_F2) && (type == CAN_CONFIG_STD_MSG))
  3542  0003DE  0E03               	movlw	3
  3543  0003E0  0100               	movlb	0	; () banked
  3544  0003E2  19B2               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  3545  0003E4  A4D8               	btfss	status,2,c
  3546  0003E6  D058               	goto	l4164
  3547                           
  3548                           ; BSR set to: 0
  3549  0003E8  0100               	movlb	0	; () banked
  3550  0003EA  29AD               	incf	CANSetFilter@type& (0+255),w,b
  3551  0003EC  A4D8               	btfss	status,2,c
  3552  0003EE  D054               	goto	l4164
  3553                           
  3554                           ; BSR set to: 0
  3555                           ;CANlib.h: 792: {
  3556                           ;CANlib.h: 793: RXF3SIDLbits.EXIDEN = 0x00;
  3557  0003F0  010F               	movlb	15	; () banked
  3558  0003F2  970D               	bcf	13,3,b	;volatile
  3559                           
  3560                           ; BSR set to: 15
  3561                           ;CANlib.h: 795: tamp = (filter >> 3);
  3562  0003F4  C0A9  F0AE         	movff	CANSetFilter@filter,??_CANSetFilter
  3563  0003F8  C0AA  F0AF         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  3564  0003FC  C0AB  F0B0         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  3565  000400  C0AC  F0B1         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  3566  000404  0E04               	movlw	4
  3567  000406  D006               	goto	u5060
  3568  000408                     u5065:
  3569  000408  0100               	movlb	0	; () banked
  3570  00040A  90D8               	bcf	status,0,c
  3571  00040C  33B1               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  3572  00040E  33B0               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  3573  000410  33AF               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  3574  000412  33AE               	rrcf	??_CANSetFilter& (0+255),f,b
  3575  000414                     u5060:
  3576  000414  2EE8               	decfsz	wreg,f,c
  3577  000416  D7F8               	goto	u5065
  3578  000418  C0AE  F0B3         	movff	??_CANSetFilter,CANSetFilter@tamp
  3579  00041C  C0AF  F0B4         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  3580  000420  C0B0  F0B5         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  3581  000424  C0B1  F0B6         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  3582                           
  3583                           ; BSR set to: 0
  3584                           ;CANlib.h: 796: tamp = tamp & 0x000000FF;
  3585  000428  0100               	movlb	0	; () banked
  3586  00042A  51B3               	movf	CANSetFilter@tamp& (0+255),w,b
  3587  00042C  0100               	movlb	0	; () banked
  3588  00042E  6FB3               	movwf	CANSetFilter@tamp& (0+255),b
  3589  000430  6BB4               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  3590  000432  6BB5               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  3591  000434  6BB6               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  3592                           
  3593                           ; BSR set to: 0
  3594                           ;CANlib.h: 797: RXF3SIDH = (unsigned char) tamp;
  3595  000436  C0B3  FF0C         	movff	CANSetFilter@tamp,3852	;volatile
  3596                           
  3597                           ; BSR set to: 0
  3598                           ;CANlib.h: 799: tamp = filter & 0x00000007;
  3599  00043A  0E07               	movlw	7
  3600  00043C  0100               	movlb	0	; () banked
  3601  00043E  15A9               	andwf	CANSetFilter@filter& (0+255),w,b
  3602  000440  0100               	movlb	0	; () banked
  3603  000442  6FB3               	movwf	CANSetFilter@tamp& (0+255),b
  3604  000444  0E00               	movlw	0
  3605  000446  0100               	movlb	0	; () banked
  3606  000448  15AA               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  3607  00044A  0100               	movlb	0	; () banked
  3608  00044C  6FB4               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  3609  00044E  0E00               	movlw	0
  3610  000450  0100               	movlb	0	; () banked
  3611  000452  15AB               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  3612  000454  0100               	movlb	0	; () banked
  3613  000456  6FB5               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  3614  000458  0E00               	movlw	0
  3615  00045A  0100               	movlb	0	; () banked
  3616  00045C  15AC               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  3617  00045E  0100               	movlb	0	; () banked
  3618  000460  6FB6               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  3619                           
  3620                           ; BSR set to: 0
  3621                           ;CANlib.h: 800: tamp = tamp << 5;
  3622  000462  C0B3  F0AE         	movff	CANSetFilter@tamp,??_CANSetFilter
  3623  000466  C0B4  F0AF         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  3624  00046A  C0B5  F0B0         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  3625  00046E  C0B6  F0B1         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  3626  000472  0E05               	movlw	5
  3627  000474                     u5075:
  3628  000474  90D8               	bcf	status,0,c
  3629  000476  0100               	movlb	0	; () banked
  3630  000478  37AE               	rlcf	??_CANSetFilter& (0+255),f,b
  3631  00047A  37AF               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  3632  00047C  37B0               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  3633  00047E  37B1               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  3634  000480  2EE8               	decfsz	wreg,f,c
  3635  000482  D7F8               	goto	u5075
  3636  000484  C0AE  F0B3         	movff	??_CANSetFilter,CANSetFilter@tamp
  3637  000488  C0AF  F0B4         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  3638  00048C  C0B0  F0B5         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  3639  000490  C0B1  F0B6         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  3640                           
  3641                           ; BSR set to: 0
  3642                           ;CANlib.h: 801: RXF3SIDL = (unsigned char) tamp;
  3643  000494  C0B3  FF0D         	movff	CANSetFilter@tamp,3853	;volatile
  3644  000498                     l4164:
  3645                           
  3646                           ; BSR set to: 0
  3647                           ;CANlib.h: 802: }
  3648                           ;CANlib.h: 804: if ((numBuffer ==CAN_FILTER_B2_F3) && (type == CAN_CONFIG_STD_MSG))
  3649  000498  0E04               	movlw	4
  3650  00049A  0100               	movlb	0	; () banked
  3651  00049C  19B2               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  3652  00049E  A4D8               	btfss	status,2,c
  3653  0004A0  D058               	goto	l4182
  3654                           
  3655                           ; BSR set to: 0
  3656  0004A2  0100               	movlb	0	; () banked
  3657  0004A4  29AD               	incf	CANSetFilter@type& (0+255),w,b
  3658  0004A6  A4D8               	btfss	status,2,c
  3659  0004A8  D054               	goto	l4182
  3660                           
  3661                           ; BSR set to: 0
  3662                           ;CANlib.h: 805: {
  3663                           ;CANlib.h: 806: RXF4SIDLbits.EXIDEN = 0x00;
  3664  0004AA  010F               	movlb	15	; () banked
  3665  0004AC  9711               	bcf	17,3,b	;volatile
  3666                           
  3667                           ; BSR set to: 15
  3668                           ;CANlib.h: 808: tamp = (filter >> 3);
  3669  0004AE  C0A9  F0AE         	movff	CANSetFilter@filter,??_CANSetFilter
  3670  0004B2  C0AA  F0AF         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  3671  0004B6  C0AB  F0B0         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  3672  0004BA  C0AC  F0B1         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  3673  0004BE  0E04               	movlw	4
  3674  0004C0  D006               	goto	u5100
  3675  0004C2                     u5105:
  3676  0004C2  0100               	movlb	0	; () banked
  3677  0004C4  90D8               	bcf	status,0,c
  3678  0004C6  33B1               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  3679  0004C8  33B0               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  3680  0004CA  33AF               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  3681  0004CC  33AE               	rrcf	??_CANSetFilter& (0+255),f,b
  3682  0004CE                     u5100:
  3683  0004CE  2EE8               	decfsz	wreg,f,c
  3684  0004D0  D7F8               	goto	u5105
  3685  0004D2  C0AE  F0B3         	movff	??_CANSetFilter,CANSetFilter@tamp
  3686  0004D6  C0AF  F0B4         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  3687  0004DA  C0B0  F0B5         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  3688  0004DE  C0B1  F0B6         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  3689                           
  3690                           ; BSR set to: 0
  3691                           ;CANlib.h: 809: tamp = tamp & 0x000000FF;
  3692  0004E2  0100               	movlb	0	; () banked
  3693  0004E4  51B3               	movf	CANSetFilter@tamp& (0+255),w,b
  3694  0004E6  0100               	movlb	0	; () banked
  3695  0004E8  6FB3               	movwf	CANSetFilter@tamp& (0+255),b
  3696  0004EA  6BB4               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  3697  0004EC  6BB5               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  3698  0004EE  6BB6               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  3699                           
  3700                           ; BSR set to: 0
  3701                           ;CANlib.h: 810: RXF4SIDH = (unsigned char) tamp;
  3702  0004F0  C0B3  FF10         	movff	CANSetFilter@tamp,3856	;volatile
  3703                           
  3704                           ; BSR set to: 0
  3705                           ;CANlib.h: 812: tamp = filter & 0x00000007;
  3706  0004F4  0E07               	movlw	7
  3707  0004F6  0100               	movlb	0	; () banked
  3708  0004F8  15A9               	andwf	CANSetFilter@filter& (0+255),w,b
  3709  0004FA  0100               	movlb	0	; () banked
  3710  0004FC  6FB3               	movwf	CANSetFilter@tamp& (0+255),b
  3711  0004FE  0E00               	movlw	0
  3712  000500  0100               	movlb	0	; () banked
  3713  000502  15AA               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  3714  000504  0100               	movlb	0	; () banked
  3715  000506  6FB4               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  3716  000508  0E00               	movlw	0
  3717  00050A  0100               	movlb	0	; () banked
  3718  00050C  15AB               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  3719  00050E  0100               	movlb	0	; () banked
  3720  000510  6FB5               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  3721  000512  0E00               	movlw	0
  3722  000514  0100               	movlb	0	; () banked
  3723  000516  15AC               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  3724  000518  0100               	movlb	0	; () banked
  3725  00051A  6FB6               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  3726                           
  3727                           ; BSR set to: 0
  3728                           ;CANlib.h: 813: tamp = tamp << 5;
  3729  00051C  C0B3  F0AE         	movff	CANSetFilter@tamp,??_CANSetFilter
  3730  000520  C0B4  F0AF         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  3731  000524  C0B5  F0B0         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  3732  000528  C0B6  F0B1         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  3733  00052C  0E05               	movlw	5
  3734  00052E                     u5115:
  3735  00052E  90D8               	bcf	status,0,c
  3736  000530  0100               	movlb	0	; () banked
  3737  000532  37AE               	rlcf	??_CANSetFilter& (0+255),f,b
  3738  000534  37AF               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  3739  000536  37B0               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  3740  000538  37B1               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  3741  00053A  2EE8               	decfsz	wreg,f,c
  3742  00053C  D7F8               	goto	u5115
  3743  00053E  C0AE  F0B3         	movff	??_CANSetFilter,CANSetFilter@tamp
  3744  000542  C0AF  F0B4         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  3745  000546  C0B0  F0B5         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  3746  00054A  C0B1  F0B6         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  3747                           
  3748                           ; BSR set to: 0
  3749                           ;CANlib.h: 814: RXF4SIDL = (unsigned char) tamp;
  3750  00054E  C0B3  FF11         	movff	CANSetFilter@tamp,3857	;volatile
  3751  000552                     l4182:
  3752                           
  3753                           ; BSR set to: 0
  3754                           ;CANlib.h: 815: }
  3755                           ;CANlib.h: 817: if ((numBuffer ==CAN_FILTER_B2_F4) && (type == CAN_CONFIG_STD_MSG))
  3756  000552  0E05               	movlw	5
  3757  000554  0100               	movlb	0	; () banked
  3758  000556  19B2               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  3759  000558  A4D8               	btfss	status,2,c
  3760  00055A  D058               	goto	l4200
  3761                           
  3762                           ; BSR set to: 0
  3763  00055C  0100               	movlb	0	; () banked
  3764  00055E  29AD               	incf	CANSetFilter@type& (0+255),w,b
  3765  000560  A4D8               	btfss	status,2,c
  3766  000562  D054               	goto	l4200
  3767                           
  3768                           ; BSR set to: 0
  3769                           ;CANlib.h: 818: {
  3770                           ;CANlib.h: 819: RXF5SIDLbits.EXIDEN = 0x00;
  3771  000564  010F               	movlb	15	; () banked
  3772  000566  9715               	bcf	21,3,b	;volatile
  3773                           
  3774                           ; BSR set to: 15
  3775                           ;CANlib.h: 821: tamp = (filter >> 3);
  3776  000568  C0A9  F0AE         	movff	CANSetFilter@filter,??_CANSetFilter
  3777  00056C  C0AA  F0AF         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  3778  000570  C0AB  F0B0         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  3779  000574  C0AC  F0B1         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  3780  000578  0E04               	movlw	4
  3781  00057A  D006               	goto	u5140
  3782  00057C                     u5145:
  3783  00057C  0100               	movlb	0	; () banked
  3784  00057E  90D8               	bcf	status,0,c
  3785  000580  33B1               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  3786  000582  33B0               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  3787  000584  33AF               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  3788  000586  33AE               	rrcf	??_CANSetFilter& (0+255),f,b
  3789  000588                     u5140:
  3790  000588  2EE8               	decfsz	wreg,f,c
  3791  00058A  D7F8               	goto	u5145
  3792  00058C  C0AE  F0B3         	movff	??_CANSetFilter,CANSetFilter@tamp
  3793  000590  C0AF  F0B4         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  3794  000594  C0B0  F0B5         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  3795  000598  C0B1  F0B6         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  3796                           
  3797                           ; BSR set to: 0
  3798                           ;CANlib.h: 822: tamp = tamp & 0x000000FF;
  3799  00059C  0100               	movlb	0	; () banked
  3800  00059E  51B3               	movf	CANSetFilter@tamp& (0+255),w,b
  3801  0005A0  0100               	movlb	0	; () banked
  3802  0005A2  6FB3               	movwf	CANSetFilter@tamp& (0+255),b
  3803  0005A4  6BB4               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  3804  0005A6  6BB5               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  3805  0005A8  6BB6               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  3806                           
  3807                           ; BSR set to: 0
  3808                           ;CANlib.h: 823: RXF5SIDH = (unsigned char) tamp;
  3809  0005AA  C0B3  FF14         	movff	CANSetFilter@tamp,3860	;volatile
  3810                           
  3811                           ; BSR set to: 0
  3812                           ;CANlib.h: 825: tamp = filter & 0x00000007;
  3813  0005AE  0E07               	movlw	7
  3814  0005B0  0100               	movlb	0	; () banked
  3815  0005B2  15A9               	andwf	CANSetFilter@filter& (0+255),w,b
  3816  0005B4  0100               	movlb	0	; () banked
  3817  0005B6  6FB3               	movwf	CANSetFilter@tamp& (0+255),b
  3818  0005B8  0E00               	movlw	0
  3819  0005BA  0100               	movlb	0	; () banked
  3820  0005BC  15AA               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  3821  0005BE  0100               	movlb	0	; () banked
  3822  0005C0  6FB4               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  3823  0005C2  0E00               	movlw	0
  3824  0005C4  0100               	movlb	0	; () banked
  3825  0005C6  15AB               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  3826  0005C8  0100               	movlb	0	; () banked
  3827  0005CA  6FB5               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  3828  0005CC  0E00               	movlw	0
  3829  0005CE  0100               	movlb	0	; () banked
  3830  0005D0  15AC               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  3831  0005D2  0100               	movlb	0	; () banked
  3832  0005D4  6FB6               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  3833                           
  3834                           ; BSR set to: 0
  3835                           ;CANlib.h: 826: tamp = tamp << 5;
  3836  0005D6  C0B3  F0AE         	movff	CANSetFilter@tamp,??_CANSetFilter
  3837  0005DA  C0B4  F0AF         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  3838  0005DE  C0B5  F0B0         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  3839  0005E2  C0B6  F0B1         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  3840  0005E6  0E05               	movlw	5
  3841  0005E8                     u5155:
  3842  0005E8  90D8               	bcf	status,0,c
  3843  0005EA  0100               	movlb	0	; () banked
  3844  0005EC  37AE               	rlcf	??_CANSetFilter& (0+255),f,b
  3845  0005EE  37AF               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  3846  0005F0  37B0               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  3847  0005F2  37B1               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  3848  0005F4  2EE8               	decfsz	wreg,f,c
  3849  0005F6  D7F8               	goto	u5155
  3850  0005F8  C0AE  F0B3         	movff	??_CANSetFilter,CANSetFilter@tamp
  3851  0005FC  C0AF  F0B4         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  3852  000600  C0B0  F0B5         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  3853  000604  C0B1  F0B6         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  3854                           
  3855                           ; BSR set to: 0
  3856                           ;CANlib.h: 827: RXF5SIDL = (unsigned char) tamp;
  3857  000608  C0B3  FF15         	movff	CANSetFilter@tamp,3861	;volatile
  3858  00060C                     l4200:
  3859                           
  3860                           ; BSR set to: 0
  3861                           ;CANlib.h: 828: }
  3862                           ;CANlib.h: 831: if ((numBuffer ==CAN_FILTER_B1_F1) && (type == CAN_CONFIG_XTD_MSG))
  3863  00060C  0100               	movlb	0	; () banked
  3864  00060E  51B2               	movf	CANSetFilter@numBuffer& (0+255),w,b
  3865  000610  0100               	movlb	0	; () banked
  3866  000612  A4D8               	btfss	status,2,c
  3867  000614  D089               	goto	l4234
  3868                           
  3869                           ; BSR set to: 0
  3870  000616  0EF7               	movlw	247
  3871  000618  0100               	movlb	0	; () banked
  3872  00061A  19AD               	xorwf	CANSetFilter@type& (0+255),w,b
  3873  00061C  A4D8               	btfss	status,2,c
  3874  00061E  D084               	goto	l4234
  3875                           
  3876                           ; BSR set to: 0
  3877                           ;CANlib.h: 832: {
  3878                           ;CANlib.h: 833: RXF0SIDLbits.EXIDEN = 0x01;
  3879  000620  010F               	movlb	15	; () banked
  3880  000622  8701               	bsf	1,3,b	;volatile
  3881                           
  3882                           ; BSR set to: 15
  3883                           ;CANlib.h: 835: tamp = filter & 0x000000FF;
  3884  000624  0100               	movlb	0	; () banked
  3885  000626  51A9               	movf	CANSetFilter@filter& (0+255),w,b
  3886  000628  0100               	movlb	0	; () banked
  3887  00062A  6FB3               	movwf	CANSetFilter@tamp& (0+255),b
  3888  00062C  6BB4               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  3889  00062E  6BB5               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  3890  000630  6BB6               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  3891                           
  3892                           ; BSR set to: 0
  3893                           ;CANlib.h: 836: RXF0EIDL = (unsigned char) tamp;
  3894  000632  C0B3  FF03         	movff	CANSetFilter@tamp,3843	;volatile
  3895                           
  3896                           ; BSR set to: 0
  3897                           ;CANlib.h: 838: tamp = filter & 0x0000FF00;
  3898  000636  0E00               	movlw	0
  3899  000638  0100               	movlb	0	; () banked
  3900  00063A  15A9               	andwf	CANSetFilter@filter& (0+255),w,b
  3901  00063C  0100               	movlb	0	; () banked
  3902  00063E  6FB3               	movwf	CANSetFilter@tamp& (0+255),b
  3903  000640  0EFF               	movlw	255
  3904  000642  0100               	movlb	0	; () banked
  3905  000644  15AA               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  3906  000646  0100               	movlb	0	; () banked
  3907  000648  6FB4               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  3908  00064A  0E00               	movlw	0
  3909  00064C  0100               	movlb	0	; () banked
  3910  00064E  15AB               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  3911  000650  0100               	movlb	0	; () banked
  3912  000652  6FB5               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  3913  000654  0E00               	movlw	0
  3914  000656  0100               	movlb	0	; () banked
  3915  000658  15AC               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  3916  00065A  0100               	movlb	0	; () banked
  3917  00065C  6FB6               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  3918                           
  3919                           ; BSR set to: 0
  3920                           ;CANlib.h: 839: tamp = tamp >> 8;
  3921  00065E  C0B3  F0AE         	movff	CANSetFilter@tamp,??_CANSetFilter
  3922  000662  C0B4  F0AF         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  3923  000666  C0B5  F0B0         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  3924  00066A  C0B6  F0B1         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  3925  00066E  C0AF  F0AE         	movff	??_CANSetFilter+1,??_CANSetFilter
  3926  000672  C0B0  F0AF         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  3927  000676  C0B1  F0B0         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  3928  00067A  0100               	movlb	0	; () banked
  3929  00067C  6BB1               	clrf	(??_CANSetFilter+3)& (0+255),b
  3930  00067E  C0AE  F0B3         	movff	??_CANSetFilter,CANSetFilter@tamp
  3931  000682  C0AF  F0B4         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  3932  000686  C0B0  F0B5         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  3933  00068A  C0B1  F0B6         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  3934                           
  3935                           ; BSR set to: 0
  3936                           ;CANlib.h: 840: RXF0EIDH = (unsigned char) tamp;
  3937  00068E  C0B3  FF02         	movff	CANSetFilter@tamp,3842	;volatile
  3938                           
  3939                           ; BSR set to: 0
  3940                           ;CANlib.h: 842: if (filter & 0x00010000)
  3941  000692  0100               	movlb	0	; () banked
  3942  000694  A1AB               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
  3943  000696  D003               	goto	l463
  3944                           
  3945                           ; BSR set to: 0
  3946                           ;CANlib.h: 843: RXF0SIDLbits.EID16 = 0x01;
  3947  000698  010F               	movlb	15	; () banked
  3948  00069A  8101               	bsf	1,0,b	;volatile
  3949  00069C  D002               	goto	l464
  3950  00069E                     l463:
  3951                           
  3952                           ; BSR set to: 0
  3953                           ;CANlib.h: 844: else
  3954                           ;CANlib.h: 845: RXF0SIDLbits.EID16 = 0x00;
  3955  00069E  010F               	movlb	15	; () banked
  3956  0006A0  9101               	bcf	1,0,b	;volatile
  3957  0006A2                     l464:
  3958                           
  3959                           ; BSR set to: 15
  3960                           ;CANlib.h: 847: if (filter & 0x00020000)
  3961  0006A2  0100               	movlb	0	; () banked
  3962  0006A4  A3AB               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
  3963  0006A6  D003               	goto	l465
  3964                           
  3965                           ; BSR set to: 0
  3966                           ;CANlib.h: 848: RXF0SIDLbits.EID17 = 0x01;
  3967  0006A8  010F               	movlb	15	; () banked
  3968  0006AA  8301               	bsf	1,1,b	;volatile
  3969  0006AC  D002               	goto	l466
  3970  0006AE                     l465:
  3971                           
  3972                           ; BSR set to: 0
  3973                           ;CANlib.h: 849: else
  3974                           ;CANlib.h: 850: RXF0SIDLbits.EID17 = 0x00;
  3975  0006AE  010F               	movlb	15	; () banked
  3976  0006B0  9301               	bcf	1,1,b	;volatile
  3977  0006B2                     l466:
  3978                           
  3979                           ; BSR set to: 15
  3980                           ;CANlib.h: 852: if (filter & 0x00040000)
  3981  0006B2  0100               	movlb	0	; () banked
  3982  0006B4  A5AB               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
  3983  0006B6  D003               	goto	l467
  3984                           
  3985                           ; BSR set to: 0
  3986                           ;CANlib.h: 853: RXF0SIDLbits.SID0 = 0x01;
  3987  0006B8  010F               	movlb	15	; () banked
  3988  0006BA  8B01               	bsf	1,5,b	;volatile
  3989  0006BC  D002               	goto	l468
  3990  0006BE                     l467:
  3991                           
  3992                           ; BSR set to: 0
  3993                           ;CANlib.h: 854: else
  3994                           ;CANlib.h: 855: RXF0SIDLbits.SID0 = 0x00;
  3995  0006BE  010F               	movlb	15	; () banked
  3996  0006C0  9B01               	bcf	1,5,b	;volatile
  3997  0006C2                     l468:
  3998                           
  3999                           ; BSR set to: 15
  4000                           ;CANlib.h: 857: if (filter & 0x00080000)
  4001  0006C2  0100               	movlb	0	; () banked
  4002  0006C4  A7AB               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
  4003  0006C6  D003               	goto	l469
  4004                           
  4005                           ; BSR set to: 0
  4006                           ;CANlib.h: 858: RXF0SIDLbits.SID1 = 0x01;
  4007  0006C8  010F               	movlb	15	; () banked
  4008  0006CA  8D01               	bsf	1,6,b	;volatile
  4009  0006CC  D002               	goto	l470
  4010  0006CE                     l469:
  4011                           
  4012                           ; BSR set to: 0
  4013                           ;CANlib.h: 859: else
  4014                           ;CANlib.h: 860: RXF0SIDLbits.SID1 = 0x00;
  4015  0006CE  010F               	movlb	15	; () banked
  4016  0006D0  9D01               	bcf	1,6,b	;volatile
  4017  0006D2                     l470:
  4018                           
  4019                           ; BSR set to: 15
  4020                           ;CANlib.h: 862: if (filter & 0x00100000)
  4021  0006D2  0100               	movlb	0	; () banked
  4022  0006D4  A9AB               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
  4023  0006D6  D003               	goto	l471
  4024                           
  4025                           ; BSR set to: 0
  4026                           ;CANlib.h: 863: RXF0SIDLbits.SID2 = 0x01 ;
  4027  0006D8  010F               	movlb	15	; () banked
  4028  0006DA  8F01               	bsf	1,7,b	;volatile
  4029  0006DC  D002               	goto	l4228
  4030  0006DE                     l471:
  4031                           
  4032                           ; BSR set to: 0
  4033                           ;CANlib.h: 864: else
  4034                           ;CANlib.h: 865: RXF0SIDLbits.SID2 = 0x00 ;
  4035  0006DE  010F               	movlb	15	; () banked
  4036  0006E0  9F01               	bcf	1,7,b	;volatile
  4037  0006E2                     l4228:
  4038                           
  4039                           ; BSR set to: 15
  4040                           ;CANlib.h: 867: tamp = (filter >> 21);
  4041  0006E2  C0A9  F0AE         	movff	CANSetFilter@filter,??_CANSetFilter
  4042  0006E6  C0AA  F0AF         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  4043  0006EA  C0AB  F0B0         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  4044  0006EE  C0AC  F0B1         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  4045  0006F2  0E16               	movlw	22
  4046  0006F4  D006               	goto	u5230
  4047  0006F6                     u5235:
  4048  0006F6  0100               	movlb	0	; () banked
  4049  0006F8  90D8               	bcf	status,0,c
  4050  0006FA  33B1               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  4051  0006FC  33B0               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  4052  0006FE  33AF               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  4053  000700  33AE               	rrcf	??_CANSetFilter& (0+255),f,b
  4054  000702                     u5230:
  4055  000702  2EE8               	decfsz	wreg,f,c
  4056  000704  D7F8               	goto	u5235
  4057  000706  C0AE  F0B3         	movff	??_CANSetFilter,CANSetFilter@tamp
  4058  00070A  C0AF  F0B4         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4059  00070E  C0B0  F0B5         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4060  000712  C0B1  F0B6         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4061                           
  4062                           ; BSR set to: 0
  4063                           ;CANlib.h: 868: tamp = tamp & 0x000000FF;
  4064  000716  0100               	movlb	0	; () banked
  4065  000718  51B3               	movf	CANSetFilter@tamp& (0+255),w,b
  4066  00071A  0100               	movlb	0	; () banked
  4067  00071C  6FB3               	movwf	CANSetFilter@tamp& (0+255),b
  4068  00071E  6BB4               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4069  000720  6BB5               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4070  000722  6BB6               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4071                           
  4072                           ; BSR set to: 0
  4073                           ;CANlib.h: 869: RXF0SIDH = (unsigned char) tamp;
  4074  000724  C0B3  FF00         	movff	CANSetFilter@tamp,3840	;volatile
  4075  000728                     l4234:
  4076                           
  4077                           ; BSR set to: 0
  4078                           ;CANlib.h: 870: }
  4079                           ;CANlib.h: 872: if ((numBuffer ==CAN_FILTER_B1_F2) && (type == CAN_CONFIG_XTD_MSG))
  4080  000728  0100               	movlb	0	; () banked
  4081  00072A  05B2               	decf	CANSetFilter@numBuffer& (0+255),w,b
  4082  00072C  A4D8               	btfss	status,2,c
  4083  00072E  D089               	goto	l4268
  4084                           
  4085                           ; BSR set to: 0
  4086  000730  0EF7               	movlw	247
  4087  000732  0100               	movlb	0	; () banked
  4088  000734  19AD               	xorwf	CANSetFilter@type& (0+255),w,b
  4089  000736  A4D8               	btfss	status,2,c
  4090  000738  D084               	goto	l4268
  4091                           
  4092                           ; BSR set to: 0
  4093                           ;CANlib.h: 873: {
  4094                           ;CANlib.h: 874: RXF1SIDLbits.EXIDEN = 0x01;
  4095  00073A  010F               	movlb	15	; () banked
  4096  00073C  8705               	bsf	5,3,b	;volatile
  4097                           
  4098                           ; BSR set to: 15
  4099                           ;CANlib.h: 876: tamp = filter & 0x000000FF;
  4100  00073E  0100               	movlb	0	; () banked
  4101  000740  51A9               	movf	CANSetFilter@filter& (0+255),w,b
  4102  000742  0100               	movlb	0	; () banked
  4103  000744  6FB3               	movwf	CANSetFilter@tamp& (0+255),b
  4104  000746  6BB4               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4105  000748  6BB5               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4106  00074A  6BB6               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4107                           
  4108                           ; BSR set to: 0
  4109                           ;CANlib.h: 877: RXF1EIDL = (unsigned char) tamp;
  4110  00074C  C0B3  FF07         	movff	CANSetFilter@tamp,3847	;volatile
  4111                           
  4112                           ; BSR set to: 0
  4113                           ;CANlib.h: 879: tamp = filter & 0x0000FF00;
  4114  000750  0E00               	movlw	0
  4115  000752  0100               	movlb	0	; () banked
  4116  000754  15A9               	andwf	CANSetFilter@filter& (0+255),w,b
  4117  000756  0100               	movlb	0	; () banked
  4118  000758  6FB3               	movwf	CANSetFilter@tamp& (0+255),b
  4119  00075A  0EFF               	movlw	255
  4120  00075C  0100               	movlb	0	; () banked
  4121  00075E  15AA               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  4122  000760  0100               	movlb	0	; () banked
  4123  000762  6FB4               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  4124  000764  0E00               	movlw	0
  4125  000766  0100               	movlb	0	; () banked
  4126  000768  15AB               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  4127  00076A  0100               	movlb	0	; () banked
  4128  00076C  6FB5               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  4129  00076E  0E00               	movlw	0
  4130  000770  0100               	movlb	0	; () banked
  4131  000772  15AC               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  4132  000774  0100               	movlb	0	; () banked
  4133  000776  6FB6               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  4134                           
  4135                           ; BSR set to: 0
  4136                           ;CANlib.h: 880: tamp = tamp >> 8;
  4137  000778  C0B3  F0AE         	movff	CANSetFilter@tamp,??_CANSetFilter
  4138  00077C  C0B4  F0AF         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  4139  000780  C0B5  F0B0         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  4140  000784  C0B6  F0B1         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  4141  000788  C0AF  F0AE         	movff	??_CANSetFilter+1,??_CANSetFilter
  4142  00078C  C0B0  F0AF         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  4143  000790  C0B1  F0B0         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  4144  000794  0100               	movlb	0	; () banked
  4145  000796  6BB1               	clrf	(??_CANSetFilter+3)& (0+255),b
  4146  000798  C0AE  F0B3         	movff	??_CANSetFilter,CANSetFilter@tamp
  4147  00079C  C0AF  F0B4         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4148  0007A0  C0B0  F0B5         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4149  0007A4  C0B1  F0B6         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4150                           
  4151                           ; BSR set to: 0
  4152                           ;CANlib.h: 881: RXF1EIDH = (unsigned char) tamp;
  4153  0007A8  C0B3  FF06         	movff	CANSetFilter@tamp,3846	;volatile
  4154                           
  4155                           ; BSR set to: 0
  4156                           ;CANlib.h: 883: if (filter & 0x00010000)
  4157  0007AC  0100               	movlb	0	; () banked
  4158  0007AE  A1AB               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
  4159  0007B0  D003               	goto	l474
  4160                           
  4161                           ; BSR set to: 0
  4162                           ;CANlib.h: 884: RXF1SIDLbits.EID16 = 0x01;
  4163  0007B2  010F               	movlb	15	; () banked
  4164  0007B4  8105               	bsf	5,0,b	;volatile
  4165  0007B6  D002               	goto	l475
  4166  0007B8                     l474:
  4167                           
  4168                           ; BSR set to: 0
  4169                           ;CANlib.h: 885: else
  4170                           ;CANlib.h: 886: RXF1SIDLbits.EID16 = 0x00;
  4171  0007B8  010F               	movlb	15	; () banked
  4172  0007BA  9105               	bcf	5,0,b	;volatile
  4173  0007BC                     l475:
  4174                           
  4175                           ; BSR set to: 15
  4176                           ;CANlib.h: 888: if (filter & 0x00020000)
  4177  0007BC  0100               	movlb	0	; () banked
  4178  0007BE  A3AB               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
  4179  0007C0  D003               	goto	l476
  4180                           
  4181                           ; BSR set to: 0
  4182                           ;CANlib.h: 889: RXF1SIDLbits.EID17 = 0x01;
  4183  0007C2  010F               	movlb	15	; () banked
  4184  0007C4  8305               	bsf	5,1,b	;volatile
  4185  0007C6  D002               	goto	l477
  4186  0007C8                     l476:
  4187                           
  4188                           ; BSR set to: 0
  4189                           ;CANlib.h: 890: else
  4190                           ;CANlib.h: 891: RXF1SIDLbits.EID17 = 0x00;
  4191  0007C8  010F               	movlb	15	; () banked
  4192  0007CA  9305               	bcf	5,1,b	;volatile
  4193  0007CC                     l477:
  4194                           
  4195                           ; BSR set to: 15
  4196                           ;CANlib.h: 893: if (filter & 0x00040000)
  4197  0007CC  0100               	movlb	0	; () banked
  4198  0007CE  A5AB               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
  4199  0007D0  D003               	goto	l478
  4200                           
  4201                           ; BSR set to: 0
  4202                           ;CANlib.h: 894: RXF1SIDLbits.SID0 = 0x01;
  4203  0007D2  010F               	movlb	15	; () banked
  4204  0007D4  8B05               	bsf	5,5,b	;volatile
  4205  0007D6  D002               	goto	l479
  4206  0007D8                     l478:
  4207                           
  4208                           ; BSR set to: 0
  4209                           ;CANlib.h: 895: else
  4210                           ;CANlib.h: 896: RXF1SIDLbits.SID0 = 0x00;
  4211  0007D8  010F               	movlb	15	; () banked
  4212  0007DA  9B05               	bcf	5,5,b	;volatile
  4213  0007DC                     l479:
  4214                           
  4215                           ; BSR set to: 15
  4216                           ;CANlib.h: 898: if (filter & 0x00080000)
  4217  0007DC  0100               	movlb	0	; () banked
  4218  0007DE  A7AB               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
  4219  0007E0  D003               	goto	l480
  4220                           
  4221                           ; BSR set to: 0
  4222                           ;CANlib.h: 899: RXF1SIDLbits.SID1 = 0x01;
  4223  0007E2  010F               	movlb	15	; () banked
  4224  0007E4  8D05               	bsf	5,6,b	;volatile
  4225  0007E6  D002               	goto	l481
  4226  0007E8                     l480:
  4227                           
  4228                           ; BSR set to: 0
  4229                           ;CANlib.h: 900: else
  4230                           ;CANlib.h: 901: RXF1SIDLbits.SID1 = 0x00;
  4231  0007E8  010F               	movlb	15	; () banked
  4232  0007EA  9D05               	bcf	5,6,b	;volatile
  4233  0007EC                     l481:
  4234                           
  4235                           ; BSR set to: 15
  4236                           ;CANlib.h: 903: if (filter & 0x00100000)
  4237  0007EC  0100               	movlb	0	; () banked
  4238  0007EE  A9AB               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
  4239  0007F0  D003               	goto	l482
  4240                           
  4241                           ; BSR set to: 0
  4242                           ;CANlib.h: 904: RXF1SIDLbits.SID2 = 0x01 ;
  4243  0007F2  010F               	movlb	15	; () banked
  4244  0007F4  8F05               	bsf	5,7,b	;volatile
  4245  0007F6  D002               	goto	l4262
  4246  0007F8                     l482:
  4247                           
  4248                           ; BSR set to: 0
  4249                           ;CANlib.h: 905: else
  4250                           ;CANlib.h: 906: RXF1SIDLbits.SID2 = 0x00 ;
  4251  0007F8  010F               	movlb	15	; () banked
  4252  0007FA  9F05               	bcf	5,7,b	;volatile
  4253  0007FC                     l4262:
  4254                           
  4255                           ; BSR set to: 15
  4256                           ;CANlib.h: 908: tamp = (filter >> 21);
  4257  0007FC  C0A9  F0AE         	movff	CANSetFilter@filter,??_CANSetFilter
  4258  000800  C0AA  F0AF         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  4259  000804  C0AB  F0B0         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  4260  000808  C0AC  F0B1         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  4261  00080C  0E16               	movlw	22
  4262  00080E  D006               	goto	u5310
  4263  000810                     u5315:
  4264  000810  0100               	movlb	0	; () banked
  4265  000812  90D8               	bcf	status,0,c
  4266  000814  33B1               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  4267  000816  33B0               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  4268  000818  33AF               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  4269  00081A  33AE               	rrcf	??_CANSetFilter& (0+255),f,b
  4270  00081C                     u5310:
  4271  00081C  2EE8               	decfsz	wreg,f,c
  4272  00081E  D7F8               	goto	u5315
  4273  000820  C0AE  F0B3         	movff	??_CANSetFilter,CANSetFilter@tamp
  4274  000824  C0AF  F0B4         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4275  000828  C0B0  F0B5         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4276  00082C  C0B1  F0B6         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4277                           
  4278                           ; BSR set to: 0
  4279                           ;CANlib.h: 909: tamp = tamp & 0x000000FF;
  4280  000830  0100               	movlb	0	; () banked
  4281  000832  51B3               	movf	CANSetFilter@tamp& (0+255),w,b
  4282  000834  0100               	movlb	0	; () banked
  4283  000836  6FB3               	movwf	CANSetFilter@tamp& (0+255),b
  4284  000838  6BB4               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4285  00083A  6BB5               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4286  00083C  6BB6               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4287                           
  4288                           ; BSR set to: 0
  4289                           ;CANlib.h: 910: RXF1SIDH = (unsigned char) tamp;
  4290  00083E  C0B3  FF04         	movff	CANSetFilter@tamp,3844	;volatile
  4291  000842                     l4268:
  4292                           
  4293                           ; BSR set to: 0
  4294                           ;CANlib.h: 911: }
  4295                           ;CANlib.h: 914: if ((numBuffer ==CAN_FILTER_B2_F1) && (type == CAN_CONFIG_XTD_MSG))
  4296  000842  0E02               	movlw	2
  4297  000844  0100               	movlb	0	; () banked
  4298  000846  19B2               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  4299  000848  A4D8               	btfss	status,2,c
  4300  00084A  D089               	goto	l4302
  4301                           
  4302                           ; BSR set to: 0
  4303  00084C  0EF7               	movlw	247
  4304  00084E  0100               	movlb	0	; () banked
  4305  000850  19AD               	xorwf	CANSetFilter@type& (0+255),w,b
  4306  000852  A4D8               	btfss	status,2,c
  4307  000854  D084               	goto	l4302
  4308                           
  4309                           ; BSR set to: 0
  4310                           ;CANlib.h: 915: {
  4311                           ;CANlib.h: 916: RXF2SIDLbits.EXIDEN = 0x01;
  4312  000856  010F               	movlb	15	; () banked
  4313  000858  8709               	bsf	9,3,b	;volatile
  4314                           
  4315                           ; BSR set to: 15
  4316                           ;CANlib.h: 918: tamp = filter & 0x000000FF;
  4317  00085A  0100               	movlb	0	; () banked
  4318  00085C  51A9               	movf	CANSetFilter@filter& (0+255),w,b
  4319  00085E  0100               	movlb	0	; () banked
  4320  000860  6FB3               	movwf	CANSetFilter@tamp& (0+255),b
  4321  000862  6BB4               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4322  000864  6BB5               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4323  000866  6BB6               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4324                           
  4325                           ; BSR set to: 0
  4326                           ;CANlib.h: 919: RXF2EIDL = (unsigned char) tamp;
  4327  000868  C0B3  FF0B         	movff	CANSetFilter@tamp,3851	;volatile
  4328                           
  4329                           ; BSR set to: 0
  4330                           ;CANlib.h: 921: tamp = filter & 0x0000FF00;
  4331  00086C  0E00               	movlw	0
  4332  00086E  0100               	movlb	0	; () banked
  4333  000870  15A9               	andwf	CANSetFilter@filter& (0+255),w,b
  4334  000872  0100               	movlb	0	; () banked
  4335  000874  6FB3               	movwf	CANSetFilter@tamp& (0+255),b
  4336  000876  0EFF               	movlw	255
  4337  000878  0100               	movlb	0	; () banked
  4338  00087A  15AA               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  4339  00087C  0100               	movlb	0	; () banked
  4340  00087E  6FB4               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  4341  000880  0E00               	movlw	0
  4342  000882  0100               	movlb	0	; () banked
  4343  000884  15AB               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  4344  000886  0100               	movlb	0	; () banked
  4345  000888  6FB5               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  4346  00088A  0E00               	movlw	0
  4347  00088C  0100               	movlb	0	; () banked
  4348  00088E  15AC               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  4349  000890  0100               	movlb	0	; () banked
  4350  000892  6FB6               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  4351                           
  4352                           ; BSR set to: 0
  4353                           ;CANlib.h: 922: tamp = tamp >> 8;
  4354  000894  C0B3  F0AE         	movff	CANSetFilter@tamp,??_CANSetFilter
  4355  000898  C0B4  F0AF         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  4356  00089C  C0B5  F0B0         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  4357  0008A0  C0B6  F0B1         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  4358  0008A4  C0AF  F0AE         	movff	??_CANSetFilter+1,??_CANSetFilter
  4359  0008A8  C0B0  F0AF         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  4360  0008AC  C0B1  F0B0         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  4361  0008B0  0100               	movlb	0	; () banked
  4362  0008B2  6BB1               	clrf	(??_CANSetFilter+3)& (0+255),b
  4363  0008B4  C0AE  F0B3         	movff	??_CANSetFilter,CANSetFilter@tamp
  4364  0008B8  C0AF  F0B4         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4365  0008BC  C0B0  F0B5         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4366  0008C0  C0B1  F0B6         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4367                           
  4368                           ; BSR set to: 0
  4369                           ;CANlib.h: 923: RXF2EIDH = (unsigned char) tamp;
  4370  0008C4  C0B3  FF0A         	movff	CANSetFilter@tamp,3850	;volatile
  4371                           
  4372                           ; BSR set to: 0
  4373                           ;CANlib.h: 925: if (filter & 0x00010000)
  4374  0008C8  0100               	movlb	0	; () banked
  4375  0008CA  A1AB               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
  4376  0008CC  D003               	goto	l485
  4377                           
  4378                           ; BSR set to: 0
  4379                           ;CANlib.h: 926: RXF2SIDLbits.EID16 = 0x01;
  4380  0008CE  010F               	movlb	15	; () banked
  4381  0008D0  8109               	bsf	9,0,b	;volatile
  4382  0008D2  D002               	goto	l486
  4383  0008D4                     l485:
  4384                           
  4385                           ; BSR set to: 0
  4386                           ;CANlib.h: 927: else
  4387                           ;CANlib.h: 928: RXF2SIDLbits.EID16 = 0x00;
  4388  0008D4  010F               	movlb	15	; () banked
  4389  0008D6  9109               	bcf	9,0,b	;volatile
  4390  0008D8                     l486:
  4391                           
  4392                           ; BSR set to: 15
  4393                           ;CANlib.h: 930: if (filter & 0x00020000)
  4394  0008D8  0100               	movlb	0	; () banked
  4395  0008DA  A3AB               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
  4396  0008DC  D003               	goto	l487
  4397                           
  4398                           ; BSR set to: 0
  4399                           ;CANlib.h: 931: RXF2SIDLbits.EID17 = 0x01;
  4400  0008DE  010F               	movlb	15	; () banked
  4401  0008E0  8309               	bsf	9,1,b	;volatile
  4402  0008E2  D002               	goto	l488
  4403  0008E4                     l487:
  4404                           
  4405                           ; BSR set to: 0
  4406                           ;CANlib.h: 932: else
  4407                           ;CANlib.h: 933: RXF2SIDLbits.EID17 = 0x00;
  4408  0008E4  010F               	movlb	15	; () banked
  4409  0008E6  9309               	bcf	9,1,b	;volatile
  4410  0008E8                     l488:
  4411                           
  4412                           ; BSR set to: 15
  4413                           ;CANlib.h: 935: if (filter & 0x00040000)
  4414  0008E8  0100               	movlb	0	; () banked
  4415  0008EA  A5AB               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
  4416  0008EC  D003               	goto	l489
  4417                           
  4418                           ; BSR set to: 0
  4419                           ;CANlib.h: 936: RXF2SIDLbits.SID0 = 0x01;
  4420  0008EE  010F               	movlb	15	; () banked
  4421  0008F0  8B09               	bsf	9,5,b	;volatile
  4422  0008F2  D002               	goto	l490
  4423  0008F4                     l489:
  4424                           
  4425                           ; BSR set to: 0
  4426                           ;CANlib.h: 937: else
  4427                           ;CANlib.h: 938: RXF2SIDLbits.SID0 = 0x00;
  4428  0008F4  010F               	movlb	15	; () banked
  4429  0008F6  9B09               	bcf	9,5,b	;volatile
  4430  0008F8                     l490:
  4431                           
  4432                           ; BSR set to: 15
  4433                           ;CANlib.h: 940: if (filter & 0x00080000)
  4434  0008F8  0100               	movlb	0	; () banked
  4435  0008FA  A7AB               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
  4436  0008FC  D003               	goto	l491
  4437                           
  4438                           ; BSR set to: 0
  4439                           ;CANlib.h: 941: RXF2SIDLbits.SID1 = 0x01;
  4440  0008FE  010F               	movlb	15	; () banked
  4441  000900  8D09               	bsf	9,6,b	;volatile
  4442  000902  D002               	goto	l492
  4443  000904                     l491:
  4444                           
  4445                           ; BSR set to: 0
  4446                           ;CANlib.h: 942: else
  4447                           ;CANlib.h: 943: RXF2SIDLbits.SID1 = 0x00;
  4448  000904  010F               	movlb	15	; () banked
  4449  000906  9D09               	bcf	9,6,b	;volatile
  4450  000908                     l492:
  4451                           
  4452                           ; BSR set to: 15
  4453                           ;CANlib.h: 945: if (filter & 0x00100000)
  4454  000908  0100               	movlb	0	; () banked
  4455  00090A  A9AB               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
  4456  00090C  D003               	goto	l493
  4457                           
  4458                           ; BSR set to: 0
  4459                           ;CANlib.h: 946: RXF2SIDLbits.SID2 = 0x01 ;
  4460  00090E  010F               	movlb	15	; () banked
  4461  000910  8F09               	bsf	9,7,b	;volatile
  4462  000912  D002               	goto	l4296
  4463  000914                     l493:
  4464                           
  4465                           ; BSR set to: 0
  4466                           ;CANlib.h: 947: else
  4467                           ;CANlib.h: 948: RXF2SIDLbits.SID2 = 0x00 ;
  4468  000914  010F               	movlb	15	; () banked
  4469  000916  9F09               	bcf	9,7,b	;volatile
  4470  000918                     l4296:
  4471                           
  4472                           ; BSR set to: 15
  4473                           ;CANlib.h: 950: tamp = (filter >> 21);
  4474  000918  C0A9  F0AE         	movff	CANSetFilter@filter,??_CANSetFilter
  4475  00091C  C0AA  F0AF         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  4476  000920  C0AB  F0B0         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  4477  000924  C0AC  F0B1         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  4478  000928  0E16               	movlw	22
  4479  00092A  D006               	goto	u5390
  4480  00092C                     u5395:
  4481  00092C  0100               	movlb	0	; () banked
  4482  00092E  90D8               	bcf	status,0,c
  4483  000930  33B1               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  4484  000932  33B0               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  4485  000934  33AF               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  4486  000936  33AE               	rrcf	??_CANSetFilter& (0+255),f,b
  4487  000938                     u5390:
  4488  000938  2EE8               	decfsz	wreg,f,c
  4489  00093A  D7F8               	goto	u5395
  4490  00093C  C0AE  F0B3         	movff	??_CANSetFilter,CANSetFilter@tamp
  4491  000940  C0AF  F0B4         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4492  000944  C0B0  F0B5         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4493  000948  C0B1  F0B6         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4494                           
  4495                           ; BSR set to: 0
  4496                           ;CANlib.h: 951: tamp = tamp & 0x000000FF;
  4497  00094C  0100               	movlb	0	; () banked
  4498  00094E  51B3               	movf	CANSetFilter@tamp& (0+255),w,b
  4499  000950  0100               	movlb	0	; () banked
  4500  000952  6FB3               	movwf	CANSetFilter@tamp& (0+255),b
  4501  000954  6BB4               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4502  000956  6BB5               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4503  000958  6BB6               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4504                           
  4505                           ; BSR set to: 0
  4506                           ;CANlib.h: 952: RXF2SIDH = (unsigned char) tamp;
  4507  00095A  C0B3  FF08         	movff	CANSetFilter@tamp,3848	;volatile
  4508  00095E                     l4302:
  4509                           
  4510                           ; BSR set to: 0
  4511                           ;CANlib.h: 953: }
  4512                           ;CANlib.h: 955: if ((numBuffer ==CAN_FILTER_B2_F2) && (type == CAN_CONFIG_XTD_MSG))
  4513  00095E  0E03               	movlw	3
  4514  000960  0100               	movlb	0	; () banked
  4515  000962  19B2               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  4516  000964  A4D8               	btfss	status,2,c
  4517  000966  D089               	goto	l4336
  4518                           
  4519                           ; BSR set to: 0
  4520  000968  0EF7               	movlw	247
  4521  00096A  0100               	movlb	0	; () banked
  4522  00096C  19AD               	xorwf	CANSetFilter@type& (0+255),w,b
  4523  00096E  A4D8               	btfss	status,2,c
  4524  000970  D084               	goto	l4336
  4525                           
  4526                           ; BSR set to: 0
  4527                           ;CANlib.h: 956: {
  4528                           ;CANlib.h: 957: RXF3SIDLbits.EXIDEN = 0x01;
  4529  000972  010F               	movlb	15	; () banked
  4530  000974  870D               	bsf	13,3,b	;volatile
  4531                           
  4532                           ; BSR set to: 15
  4533                           ;CANlib.h: 959: tamp = filter & 0x000000FF;
  4534  000976  0100               	movlb	0	; () banked
  4535  000978  51A9               	movf	CANSetFilter@filter& (0+255),w,b
  4536  00097A  0100               	movlb	0	; () banked
  4537  00097C  6FB3               	movwf	CANSetFilter@tamp& (0+255),b
  4538  00097E  6BB4               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4539  000980  6BB5               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4540  000982  6BB6               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4541                           
  4542                           ; BSR set to: 0
  4543                           ;CANlib.h: 960: RXF3EIDL = (unsigned char) tamp;
  4544  000984  C0B3  FF0F         	movff	CANSetFilter@tamp,3855	;volatile
  4545                           
  4546                           ; BSR set to: 0
  4547                           ;CANlib.h: 962: tamp = filter & 0x0000FF00;
  4548  000988  0E00               	movlw	0
  4549  00098A  0100               	movlb	0	; () banked
  4550  00098C  15A9               	andwf	CANSetFilter@filter& (0+255),w,b
  4551  00098E  0100               	movlb	0	; () banked
  4552  000990  6FB3               	movwf	CANSetFilter@tamp& (0+255),b
  4553  000992  0EFF               	movlw	255
  4554  000994  0100               	movlb	0	; () banked
  4555  000996  15AA               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  4556  000998  0100               	movlb	0	; () banked
  4557  00099A  6FB4               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  4558  00099C  0E00               	movlw	0
  4559  00099E  0100               	movlb	0	; () banked
  4560  0009A0  15AB               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  4561  0009A2  0100               	movlb	0	; () banked
  4562  0009A4  6FB5               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  4563  0009A6  0E00               	movlw	0
  4564  0009A8  0100               	movlb	0	; () banked
  4565  0009AA  15AC               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  4566  0009AC  0100               	movlb	0	; () banked
  4567  0009AE  6FB6               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  4568                           
  4569                           ; BSR set to: 0
  4570                           ;CANlib.h: 963: tamp = tamp >> 8;
  4571  0009B0  C0B3  F0AE         	movff	CANSetFilter@tamp,??_CANSetFilter
  4572  0009B4  C0B4  F0AF         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  4573  0009B8  C0B5  F0B0         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  4574  0009BC  C0B6  F0B1         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  4575  0009C0  C0AF  F0AE         	movff	??_CANSetFilter+1,??_CANSetFilter
  4576  0009C4  C0B0  F0AF         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  4577  0009C8  C0B1  F0B0         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  4578  0009CC  0100               	movlb	0	; () banked
  4579  0009CE  6BB1               	clrf	(??_CANSetFilter+3)& (0+255),b
  4580  0009D0  C0AE  F0B3         	movff	??_CANSetFilter,CANSetFilter@tamp
  4581  0009D4  C0AF  F0B4         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4582  0009D8  C0B0  F0B5         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4583  0009DC  C0B1  F0B6         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4584                           
  4585                           ; BSR set to: 0
  4586                           ;CANlib.h: 964: RXF3EIDH = (unsigned char) tamp;
  4587  0009E0  C0B3  FF0E         	movff	CANSetFilter@tamp,3854	;volatile
  4588                           
  4589                           ; BSR set to: 0
  4590                           ;CANlib.h: 966: if (filter & 0x00010000)
  4591  0009E4  0100               	movlb	0	; () banked
  4592  0009E6  A1AB               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
  4593  0009E8  D003               	goto	l496
  4594                           
  4595                           ; BSR set to: 0
  4596                           ;CANlib.h: 967: RXF3SIDLbits.EID16 = 0x01;
  4597  0009EA  010F               	movlb	15	; () banked
  4598  0009EC  810D               	bsf	13,0,b	;volatile
  4599  0009EE  D002               	goto	l497
  4600  0009F0                     l496:
  4601                           
  4602                           ; BSR set to: 0
  4603                           ;CANlib.h: 968: else
  4604                           ;CANlib.h: 969: RXF3SIDLbits.EID16 = 0x00;
  4605  0009F0  010F               	movlb	15	; () banked
  4606  0009F2  910D               	bcf	13,0,b	;volatile
  4607  0009F4                     l497:
  4608                           
  4609                           ; BSR set to: 15
  4610                           ;CANlib.h: 971: if (filter & 0x00020000)
  4611  0009F4  0100               	movlb	0	; () banked
  4612  0009F6  A3AB               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
  4613  0009F8  D003               	goto	l498
  4614                           
  4615                           ; BSR set to: 0
  4616                           ;CANlib.h: 972: RXF3SIDLbits.EID17 = 0x01;
  4617  0009FA  010F               	movlb	15	; () banked
  4618  0009FC  830D               	bsf	13,1,b	;volatile
  4619  0009FE  D002               	goto	l499
  4620  000A00                     l498:
  4621                           
  4622                           ; BSR set to: 0
  4623                           ;CANlib.h: 973: else
  4624                           ;CANlib.h: 974: RXF3SIDLbits.EID17 = 0x00;
  4625  000A00  010F               	movlb	15	; () banked
  4626  000A02  930D               	bcf	13,1,b	;volatile
  4627  000A04                     l499:
  4628                           
  4629                           ; BSR set to: 15
  4630                           ;CANlib.h: 976: if (filter & 0x00040000)
  4631  000A04  0100               	movlb	0	; () banked
  4632  000A06  A5AB               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
  4633  000A08  D003               	goto	l500
  4634                           
  4635                           ; BSR set to: 0
  4636                           ;CANlib.h: 977: RXF3SIDLbits.SID0 = 0x01;
  4637  000A0A  010F               	movlb	15	; () banked
  4638  000A0C  8B0D               	bsf	13,5,b	;volatile
  4639  000A0E  D002               	goto	l501
  4640  000A10                     l500:
  4641                           
  4642                           ; BSR set to: 0
  4643                           ;CANlib.h: 978: else
  4644                           ;CANlib.h: 979: RXF3SIDLbits.SID0 = 0x00;
  4645  000A10  010F               	movlb	15	; () banked
  4646  000A12  9B0D               	bcf	13,5,b	;volatile
  4647  000A14                     l501:
  4648                           
  4649                           ; BSR set to: 15
  4650                           ;CANlib.h: 981: if (filter & 0x00080000)
  4651  000A14  0100               	movlb	0	; () banked
  4652  000A16  A7AB               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
  4653  000A18  D003               	goto	l502
  4654                           
  4655                           ; BSR set to: 0
  4656                           ;CANlib.h: 982: RXF3SIDLbits.SID1 = 0x01;
  4657  000A1A  010F               	movlb	15	; () banked
  4658  000A1C  8D0D               	bsf	13,6,b	;volatile
  4659  000A1E  D002               	goto	l503
  4660  000A20                     l502:
  4661                           
  4662                           ; BSR set to: 0
  4663                           ;CANlib.h: 983: else
  4664                           ;CANlib.h: 984: RXF3SIDLbits.SID1 = 0x00;
  4665  000A20  010F               	movlb	15	; () banked
  4666  000A22  9D0D               	bcf	13,6,b	;volatile
  4667  000A24                     l503:
  4668                           
  4669                           ; BSR set to: 15
  4670                           ;CANlib.h: 986: if (filter & 0x00100000)
  4671  000A24  0100               	movlb	0	; () banked
  4672  000A26  A9AB               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
  4673  000A28  D003               	goto	l504
  4674                           
  4675                           ; BSR set to: 0
  4676                           ;CANlib.h: 987: RXF3SIDLbits.SID2 = 0x01 ;
  4677  000A2A  010F               	movlb	15	; () banked
  4678  000A2C  8F0D               	bsf	13,7,b	;volatile
  4679  000A2E  D002               	goto	l4330
  4680  000A30                     l504:
  4681                           
  4682                           ; BSR set to: 0
  4683                           ;CANlib.h: 988: else
  4684                           ;CANlib.h: 989: RXF3SIDLbits.SID2 = 0x00 ;
  4685  000A30  010F               	movlb	15	; () banked
  4686  000A32  9F0D               	bcf	13,7,b	;volatile
  4687  000A34                     l4330:
  4688                           
  4689                           ; BSR set to: 15
  4690                           ;CANlib.h: 991: tamp = (filter >> 21);
  4691  000A34  C0A9  F0AE         	movff	CANSetFilter@filter,??_CANSetFilter
  4692  000A38  C0AA  F0AF         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  4693  000A3C  C0AB  F0B0         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  4694  000A40  C0AC  F0B1         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  4695  000A44  0E16               	movlw	22
  4696  000A46  D006               	goto	u5470
  4697  000A48                     u5475:
  4698  000A48  0100               	movlb	0	; () banked
  4699  000A4A  90D8               	bcf	status,0,c
  4700  000A4C  33B1               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  4701  000A4E  33B0               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  4702  000A50  33AF               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  4703  000A52  33AE               	rrcf	??_CANSetFilter& (0+255),f,b
  4704  000A54                     u5470:
  4705  000A54  2EE8               	decfsz	wreg,f,c
  4706  000A56  D7F8               	goto	u5475
  4707  000A58  C0AE  F0B3         	movff	??_CANSetFilter,CANSetFilter@tamp
  4708  000A5C  C0AF  F0B4         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4709  000A60  C0B0  F0B5         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4710  000A64  C0B1  F0B6         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4711                           
  4712                           ; BSR set to: 0
  4713                           ;CANlib.h: 992: tamp = tamp & 0x000000FF;
  4714  000A68  0100               	movlb	0	; () banked
  4715  000A6A  51B3               	movf	CANSetFilter@tamp& (0+255),w,b
  4716  000A6C  0100               	movlb	0	; () banked
  4717  000A6E  6FB3               	movwf	CANSetFilter@tamp& (0+255),b
  4718  000A70  6BB4               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4719  000A72  6BB5               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4720  000A74  6BB6               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4721                           
  4722                           ; BSR set to: 0
  4723                           ;CANlib.h: 993: RXF3SIDH = (unsigned char) tamp;
  4724  000A76  C0B3  FF0C         	movff	CANSetFilter@tamp,3852	;volatile
  4725  000A7A                     l4336:
  4726                           
  4727                           ; BSR set to: 0
  4728                           ;CANlib.h: 994: }
  4729                           ;CANlib.h: 996: if ((numBuffer ==CAN_FILTER_B2_F3) && (type == CAN_CONFIG_XTD_MSG))
  4730  000A7A  0E04               	movlw	4
  4731  000A7C  0100               	movlb	0	; () banked
  4732  000A7E  19B2               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  4733  000A80  A4D8               	btfss	status,2,c
  4734  000A82  D089               	goto	l4370
  4735                           
  4736                           ; BSR set to: 0
  4737  000A84  0EF7               	movlw	247
  4738  000A86  0100               	movlb	0	; () banked
  4739  000A88  19AD               	xorwf	CANSetFilter@type& (0+255),w,b
  4740  000A8A  A4D8               	btfss	status,2,c
  4741  000A8C  D084               	goto	l4370
  4742                           
  4743                           ; BSR set to: 0
  4744                           ;CANlib.h: 997: {
  4745                           ;CANlib.h: 998: RXF4SIDLbits.EXIDEN = 0x01;
  4746  000A8E  010F               	movlb	15	; () banked
  4747  000A90  8711               	bsf	17,3,b	;volatile
  4748                           
  4749                           ; BSR set to: 15
  4750                           ;CANlib.h: 1000: tamp = filter & 0x000000FF;
  4751  000A92  0100               	movlb	0	; () banked
  4752  000A94  51A9               	movf	CANSetFilter@filter& (0+255),w,b
  4753  000A96  0100               	movlb	0	; () banked
  4754  000A98  6FB3               	movwf	CANSetFilter@tamp& (0+255),b
  4755  000A9A  6BB4               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4756  000A9C  6BB5               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4757  000A9E  6BB6               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4758                           
  4759                           ; BSR set to: 0
  4760                           ;CANlib.h: 1001: RXF4EIDL = (unsigned char) tamp;
  4761  000AA0  C0B3  FF13         	movff	CANSetFilter@tamp,3859	;volatile
  4762                           
  4763                           ; BSR set to: 0
  4764                           ;CANlib.h: 1003: tamp = filter & 0x0000FF00;
  4765  000AA4  0E00               	movlw	0
  4766  000AA6  0100               	movlb	0	; () banked
  4767  000AA8  15A9               	andwf	CANSetFilter@filter& (0+255),w,b
  4768  000AAA  0100               	movlb	0	; () banked
  4769  000AAC  6FB3               	movwf	CANSetFilter@tamp& (0+255),b
  4770  000AAE  0EFF               	movlw	255
  4771  000AB0  0100               	movlb	0	; () banked
  4772  000AB2  15AA               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  4773  000AB4  0100               	movlb	0	; () banked
  4774  000AB6  6FB4               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  4775  000AB8  0E00               	movlw	0
  4776  000ABA  0100               	movlb	0	; () banked
  4777  000ABC  15AB               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  4778  000ABE  0100               	movlb	0	; () banked
  4779  000AC0  6FB5               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  4780  000AC2  0E00               	movlw	0
  4781  000AC4  0100               	movlb	0	; () banked
  4782  000AC6  15AC               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  4783  000AC8  0100               	movlb	0	; () banked
  4784  000ACA  6FB6               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  4785                           
  4786                           ; BSR set to: 0
  4787                           ;CANlib.h: 1004: tamp = tamp >> 8;
  4788  000ACC  C0B3  F0AE         	movff	CANSetFilter@tamp,??_CANSetFilter
  4789  000AD0  C0B4  F0AF         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  4790  000AD4  C0B5  F0B0         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  4791  000AD8  C0B6  F0B1         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  4792  000ADC  C0AF  F0AE         	movff	??_CANSetFilter+1,??_CANSetFilter
  4793  000AE0  C0B0  F0AF         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  4794  000AE4  C0B1  F0B0         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  4795  000AE8  0100               	movlb	0	; () banked
  4796  000AEA  6BB1               	clrf	(??_CANSetFilter+3)& (0+255),b
  4797  000AEC  C0AE  F0B3         	movff	??_CANSetFilter,CANSetFilter@tamp
  4798  000AF0  C0AF  F0B4         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4799  000AF4  C0B0  F0B5         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4800  000AF8  C0B1  F0B6         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4801                           
  4802                           ; BSR set to: 0
  4803                           ;CANlib.h: 1005: RXF4EIDH = (unsigned char) tamp;
  4804  000AFC  C0B3  FF12         	movff	CANSetFilter@tamp,3858	;volatile
  4805                           
  4806                           ; BSR set to: 0
  4807                           ;CANlib.h: 1007: if (filter & 0x00010000)
  4808  000B00  0100               	movlb	0	; () banked
  4809  000B02  A1AB               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
  4810  000B04  D003               	goto	l507
  4811                           
  4812                           ; BSR set to: 0
  4813                           ;CANlib.h: 1008: RXF4SIDLbits.EID16 = 0x01;
  4814  000B06  010F               	movlb	15	; () banked
  4815  000B08  8111               	bsf	17,0,b	;volatile
  4816  000B0A  D002               	goto	l508
  4817  000B0C                     l507:
  4818                           
  4819                           ; BSR set to: 0
  4820                           ;CANlib.h: 1009: else
  4821                           ;CANlib.h: 1010: RXF4SIDLbits.EID16 = 0x00;
  4822  000B0C  010F               	movlb	15	; () banked
  4823  000B0E  9111               	bcf	17,0,b	;volatile
  4824  000B10                     l508:
  4825                           
  4826                           ; BSR set to: 15
  4827                           ;CANlib.h: 1012: if (filter & 0x00020000)
  4828  000B10  0100               	movlb	0	; () banked
  4829  000B12  A3AB               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
  4830  000B14  D003               	goto	l509
  4831                           
  4832                           ; BSR set to: 0
  4833                           ;CANlib.h: 1013: RXF4SIDLbits.EID17 = 0x01;
  4834  000B16  010F               	movlb	15	; () banked
  4835  000B18  8311               	bsf	17,1,b	;volatile
  4836  000B1A  D002               	goto	l510
  4837  000B1C                     l509:
  4838                           
  4839                           ; BSR set to: 0
  4840                           ;CANlib.h: 1014: else
  4841                           ;CANlib.h: 1015: RXF4SIDLbits.EID17 = 0x00;
  4842  000B1C  010F               	movlb	15	; () banked
  4843  000B1E  9311               	bcf	17,1,b	;volatile
  4844  000B20                     l510:
  4845                           
  4846                           ; BSR set to: 15
  4847                           ;CANlib.h: 1017: if (filter & 0x00040000)
  4848  000B20  0100               	movlb	0	; () banked
  4849  000B22  A5AB               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
  4850  000B24  D003               	goto	l511
  4851                           
  4852                           ; BSR set to: 0
  4853                           ;CANlib.h: 1018: RXF4SIDLbits.SID0 = 0x01;
  4854  000B26  010F               	movlb	15	; () banked
  4855  000B28  8B11               	bsf	17,5,b	;volatile
  4856  000B2A  D002               	goto	l512
  4857  000B2C                     l511:
  4858                           
  4859                           ; BSR set to: 0
  4860                           ;CANlib.h: 1019: else
  4861                           ;CANlib.h: 1020: RXF4SIDLbits.SID0 = 0x00;
  4862  000B2C  010F               	movlb	15	; () banked
  4863  000B2E  9B11               	bcf	17,5,b	;volatile
  4864  000B30                     l512:
  4865                           
  4866                           ; BSR set to: 15
  4867                           ;CANlib.h: 1022: if (filter & 0x00080000)
  4868  000B30  0100               	movlb	0	; () banked
  4869  000B32  A7AB               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
  4870  000B34  D003               	goto	l513
  4871                           
  4872                           ; BSR set to: 0
  4873                           ;CANlib.h: 1023: RXF4SIDLbits.SID1 = 0x01;
  4874  000B36  010F               	movlb	15	; () banked
  4875  000B38  8D11               	bsf	17,6,b	;volatile
  4876  000B3A  D002               	goto	l514
  4877  000B3C                     l513:
  4878                           
  4879                           ; BSR set to: 0
  4880                           ;CANlib.h: 1024: else
  4881                           ;CANlib.h: 1025: RXF4SIDLbits.SID1 = 0x00;
  4882  000B3C  010F               	movlb	15	; () banked
  4883  000B3E  9D11               	bcf	17,6,b	;volatile
  4884  000B40                     l514:
  4885                           
  4886                           ; BSR set to: 15
  4887                           ;CANlib.h: 1027: if (filter & 0x00100000)
  4888  000B40  0100               	movlb	0	; () banked
  4889  000B42  A9AB               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
  4890  000B44  D003               	goto	l515
  4891                           
  4892                           ; BSR set to: 0
  4893                           ;CANlib.h: 1028: RXF4SIDLbits.SID2 = 0x01 ;
  4894  000B46  010F               	movlb	15	; () banked
  4895  000B48  8F11               	bsf	17,7,b	;volatile
  4896  000B4A  D002               	goto	l4364
  4897  000B4C                     l515:
  4898                           
  4899                           ; BSR set to: 0
  4900                           ;CANlib.h: 1029: else
  4901                           ;CANlib.h: 1030: RXF4SIDLbits.SID2 = 0x00 ;
  4902  000B4C  010F               	movlb	15	; () banked
  4903  000B4E  9F11               	bcf	17,7,b	;volatile
  4904  000B50                     l4364:
  4905                           
  4906                           ; BSR set to: 15
  4907                           ;CANlib.h: 1032: tamp = (filter >> 21);
  4908  000B50  C0A9  F0AE         	movff	CANSetFilter@filter,??_CANSetFilter
  4909  000B54  C0AA  F0AF         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  4910  000B58  C0AB  F0B0         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  4911  000B5C  C0AC  F0B1         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  4912  000B60  0E16               	movlw	22
  4913  000B62  D006               	goto	u5550
  4914  000B64                     u5555:
  4915  000B64  0100               	movlb	0	; () banked
  4916  000B66  90D8               	bcf	status,0,c
  4917  000B68  33B1               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  4918  000B6A  33B0               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  4919  000B6C  33AF               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  4920  000B6E  33AE               	rrcf	??_CANSetFilter& (0+255),f,b
  4921  000B70                     u5550:
  4922  000B70  2EE8               	decfsz	wreg,f,c
  4923  000B72  D7F8               	goto	u5555
  4924  000B74  C0AE  F0B3         	movff	??_CANSetFilter,CANSetFilter@tamp
  4925  000B78  C0AF  F0B4         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4926  000B7C  C0B0  F0B5         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4927  000B80  C0B1  F0B6         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4928                           
  4929                           ; BSR set to: 0
  4930                           ;CANlib.h: 1033: tamp = tamp & 0x000000FF;
  4931  000B84  0100               	movlb	0	; () banked
  4932  000B86  51B3               	movf	CANSetFilter@tamp& (0+255),w,b
  4933  000B88  0100               	movlb	0	; () banked
  4934  000B8A  6FB3               	movwf	CANSetFilter@tamp& (0+255),b
  4935  000B8C  6BB4               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4936  000B8E  6BB5               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4937  000B90  6BB6               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4938                           
  4939                           ; BSR set to: 0
  4940                           ;CANlib.h: 1034: RXF4SIDH = (unsigned char) tamp;
  4941  000B92  C0B3  FF10         	movff	CANSetFilter@tamp,3856	;volatile
  4942  000B96                     l4370:
  4943                           
  4944                           ; BSR set to: 0
  4945                           ;CANlib.h: 1035: }
  4946                           ;CANlib.h: 1037: if ((numBuffer ==CAN_FILTER_B2_F4) && (type == CAN_CONFIG_XTD_MSG))
  4947  000B96  0E05               	movlw	5
  4948  000B98  0100               	movlb	0	; () banked
  4949  000B9A  19B2               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  4950  000B9C  A4D8               	btfss	status,2,c
  4951  000B9E  0012               	return	
  4952                           
  4953                           ; BSR set to: 0
  4954  000BA0  0EF7               	movlw	247
  4955  000BA2  0100               	movlb	0	; () banked
  4956  000BA4  19AD               	xorwf	CANSetFilter@type& (0+255),w,b
  4957  000BA6  A4D8               	btfss	status,2,c
  4958  000BA8  0012               	return	
  4959                           
  4960                           ; BSR set to: 0
  4961                           ;CANlib.h: 1038: {
  4962                           ;CANlib.h: 1039: RXF5SIDLbits.EXIDEN = 0x01;
  4963  000BAA  010F               	movlb	15	; () banked
  4964  000BAC  8715               	bsf	21,3,b	;volatile
  4965                           
  4966                           ; BSR set to: 15
  4967                           ;CANlib.h: 1041: tamp = filter & 0x000000FF;
  4968  000BAE  0100               	movlb	0	; () banked
  4969  000BB0  51A9               	movf	CANSetFilter@filter& (0+255),w,b
  4970  000BB2  0100               	movlb	0	; () banked
  4971  000BB4  6FB3               	movwf	CANSetFilter@tamp& (0+255),b
  4972  000BB6  6BB4               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4973  000BB8  6BB5               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4974  000BBA  6BB6               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4975                           
  4976                           ; BSR set to: 0
  4977                           ;CANlib.h: 1042: RXF5EIDL = (unsigned char) tamp;
  4978  000BBC  C0B3  FF17         	movff	CANSetFilter@tamp,3863	;volatile
  4979                           
  4980                           ; BSR set to: 0
  4981                           ;CANlib.h: 1044: tamp = filter & 0x0000FF00;
  4982  000BC0  0E00               	movlw	0
  4983  000BC2  0100               	movlb	0	; () banked
  4984  000BC4  15A9               	andwf	CANSetFilter@filter& (0+255),w,b
  4985  000BC6  0100               	movlb	0	; () banked
  4986  000BC8  6FB3               	movwf	CANSetFilter@tamp& (0+255),b
  4987  000BCA  0EFF               	movlw	255
  4988  000BCC  0100               	movlb	0	; () banked
  4989  000BCE  15AA               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  4990  000BD0  0100               	movlb	0	; () banked
  4991  000BD2  6FB4               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  4992  000BD4  0E00               	movlw	0
  4993  000BD6  0100               	movlb	0	; () banked
  4994  000BD8  15AB               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  4995  000BDA  0100               	movlb	0	; () banked
  4996  000BDC  6FB5               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  4997  000BDE  0E00               	movlw	0
  4998  000BE0  0100               	movlb	0	; () banked
  4999  000BE2  15AC               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  5000  000BE4  0100               	movlb	0	; () banked
  5001  000BE6  6FB6               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  5002                           
  5003                           ; BSR set to: 0
  5004                           ;CANlib.h: 1045: tamp = tamp >> 8;
  5005  000BE8  C0B3  F0AE         	movff	CANSetFilter@tamp,??_CANSetFilter
  5006  000BEC  C0B4  F0AF         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  5007  000BF0  C0B5  F0B0         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  5008  000BF4  C0B6  F0B1         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  5009  000BF8  C0AF  F0AE         	movff	??_CANSetFilter+1,??_CANSetFilter
  5010  000BFC  C0B0  F0AF         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  5011  000C00  C0B1  F0B0         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  5012  000C04  0100               	movlb	0	; () banked
  5013  000C06  6BB1               	clrf	(??_CANSetFilter+3)& (0+255),b
  5014  000C08  C0AE  F0B3         	movff	??_CANSetFilter,CANSetFilter@tamp
  5015  000C0C  C0AF  F0B4         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5016  000C10  C0B0  F0B5         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5017  000C14  C0B1  F0B6         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5018                           
  5019                           ; BSR set to: 0
  5020                           ;CANlib.h: 1046: RXF5EIDH = (unsigned char) tamp;
  5021  000C18  C0B3  FF16         	movff	CANSetFilter@tamp,3862	;volatile
  5022                           
  5023                           ; BSR set to: 0
  5024                           ;CANlib.h: 1048: if (filter & 0x00010000)
  5025  000C1C  0100               	movlb	0	; () banked
  5026  000C1E  A1AB               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
  5027  000C20  D003               	goto	l518
  5028                           
  5029                           ; BSR set to: 0
  5030                           ;CANlib.h: 1049: RXF5SIDLbits.EID16 = 0x01;
  5031  000C22  010F               	movlb	15	; () banked
  5032  000C24  8115               	bsf	21,0,b	;volatile
  5033  000C26  D002               	goto	l519
  5034  000C28                     l518:
  5035                           
  5036                           ; BSR set to: 0
  5037                           ;CANlib.h: 1050: else
  5038                           ;CANlib.h: 1051: RXF5SIDLbits.EID16 = 0x00;
  5039  000C28  010F               	movlb	15	; () banked
  5040  000C2A  9115               	bcf	21,0,b	;volatile
  5041  000C2C                     l519:
  5042                           
  5043                           ; BSR set to: 15
  5044                           ;CANlib.h: 1053: if (filter & 0x00020000)
  5045  000C2C  0100               	movlb	0	; () banked
  5046  000C2E  A3AB               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
  5047  000C30  D003               	goto	l520
  5048                           
  5049                           ; BSR set to: 0
  5050                           ;CANlib.h: 1054: RXF5SIDLbits.EID17 = 0x01;
  5051  000C32  010F               	movlb	15	; () banked
  5052  000C34  8315               	bsf	21,1,b	;volatile
  5053  000C36  D002               	goto	l521
  5054  000C38                     l520:
  5055                           
  5056                           ; BSR set to: 0
  5057                           ;CANlib.h: 1055: else
  5058                           ;CANlib.h: 1056: RXF5SIDLbits.EID17 = 0x00;
  5059  000C38  010F               	movlb	15	; () banked
  5060  000C3A  9315               	bcf	21,1,b	;volatile
  5061  000C3C                     l521:
  5062                           
  5063                           ; BSR set to: 15
  5064                           ;CANlib.h: 1058: if (filter & 0x00040000)
  5065  000C3C  0100               	movlb	0	; () banked
  5066  000C3E  A5AB               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
  5067  000C40  D003               	goto	l522
  5068                           
  5069                           ; BSR set to: 0
  5070                           ;CANlib.h: 1059: RXF5SIDLbits.SID0 = 0x01;
  5071  000C42  010F               	movlb	15	; () banked
  5072  000C44  8B15               	bsf	21,5,b	;volatile
  5073  000C46  D002               	goto	l523
  5074  000C48                     l522:
  5075                           
  5076                           ; BSR set to: 0
  5077                           ;CANlib.h: 1060: else
  5078                           ;CANlib.h: 1061: RXF5SIDLbits.SID0 = 0x00;
  5079  000C48  010F               	movlb	15	; () banked
  5080  000C4A  9B15               	bcf	21,5,b	;volatile
  5081  000C4C                     l523:
  5082                           
  5083                           ; BSR set to: 15
  5084                           ;CANlib.h: 1063: if (filter & 0x00080000)
  5085  000C4C  0100               	movlb	0	; () banked
  5086  000C4E  A7AB               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
  5087  000C50  D003               	goto	l524
  5088                           
  5089                           ; BSR set to: 0
  5090                           ;CANlib.h: 1064: RXF5SIDLbits.SID1 = 0x01;
  5091  000C52  010F               	movlb	15	; () banked
  5092  000C54  8D15               	bsf	21,6,b	;volatile
  5093  000C56  D002               	goto	l525
  5094  000C58                     l524:
  5095                           
  5096                           ; BSR set to: 0
  5097                           ;CANlib.h: 1065: else
  5098                           ;CANlib.h: 1066: RXF5SIDLbits.SID1 = 0x00;
  5099  000C58  010F               	movlb	15	; () banked
  5100  000C5A  9D15               	bcf	21,6,b	;volatile
  5101  000C5C                     l525:
  5102                           
  5103                           ; BSR set to: 15
  5104                           ;CANlib.h: 1068: if (filter & 0x00100000)
  5105  000C5C  0100               	movlb	0	; () banked
  5106  000C5E  A9AB               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
  5107  000C60  D003               	goto	l526
  5108                           
  5109                           ; BSR set to: 0
  5110                           ;CANlib.h: 1069: RXF5SIDLbits.SID2 = 0x01 ;
  5111  000C62  010F               	movlb	15	; () banked
  5112  000C64  8F15               	bsf	21,7,b	;volatile
  5113  000C66  D002               	goto	l4398
  5114  000C68                     l526:
  5115                           
  5116                           ; BSR set to: 0
  5117                           ;CANlib.h: 1070: else
  5118                           ;CANlib.h: 1071: RXF5SIDLbits.SID2 = 0x00 ;
  5119  000C68  010F               	movlb	15	; () banked
  5120  000C6A  9F15               	bcf	21,7,b	;volatile
  5121  000C6C                     l4398:
  5122                           
  5123                           ; BSR set to: 15
  5124                           ;CANlib.h: 1073: tamp = (filter >> 21);
  5125  000C6C  C0A9  F0AE         	movff	CANSetFilter@filter,??_CANSetFilter
  5126  000C70  C0AA  F0AF         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  5127  000C74  C0AB  F0B0         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  5128  000C78  C0AC  F0B1         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  5129  000C7C  0E16               	movlw	22
  5130  000C7E  D006               	goto	u5630
  5131  000C80                     u5635:
  5132  000C80  0100               	movlb	0	; () banked
  5133  000C82  90D8               	bcf	status,0,c
  5134  000C84  33B1               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  5135  000C86  33B0               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  5136  000C88  33AF               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  5137  000C8A  33AE               	rrcf	??_CANSetFilter& (0+255),f,b
  5138  000C8C                     u5630:
  5139  000C8C  2EE8               	decfsz	wreg,f,c
  5140  000C8E  D7F8               	goto	u5635
  5141  000C90  C0AE  F0B3         	movff	??_CANSetFilter,CANSetFilter@tamp
  5142  000C94  C0AF  F0B4         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5143  000C98  C0B0  F0B5         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5144  000C9C  C0B1  F0B6         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5145                           
  5146                           ; BSR set to: 0
  5147                           ;CANlib.h: 1074: tamp = tamp & 0x000000FF;
  5148  000CA0  0100               	movlb	0	; () banked
  5149  000CA2  51B3               	movf	CANSetFilter@tamp& (0+255),w,b
  5150  000CA4  0100               	movlb	0	; () banked
  5151  000CA6  6FB3               	movwf	CANSetFilter@tamp& (0+255),b
  5152  000CA8  6BB4               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5153  000CAA  6BB5               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5154  000CAC  6BB6               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5155                           
  5156                           ; BSR set to: 0
  5157                           ;CANlib.h: 1075: RXF5SIDH = (unsigned char) tamp;
  5158  000CAE  C0B3  FF14         	movff	CANSetFilter@tamp,3860	;volatile
  5159  000CB2  0012               	return	
  5160  000CB4                     __end_of_CANSetFilter:
  5161                           	opt stack 0
  5162                           tblptru	equ	0xFF8
  5163                           tblptrh	equ	0xFF7
  5164                           tblptrl	equ	0xFF6
  5165                           tablat	equ	0xFF5
  5166                           prodh	equ	0xFF4
  5167                           prodl	equ	0xFF3
  5168                           intcon	equ	0xFF2
  5169                           postinc0	equ	0xFEE
  5170                           wreg	equ	0xFE8
  5171                           indf1	equ	0xFE7
  5172                           postdec1	equ	0xFE5
  5173                           fsr1h	equ	0xFE2
  5174                           fsr1l	equ	0xFE1
  5175                           indf2	equ	0xFDF
  5176                           fsr2h	equ	0xFDA
  5177                           fsr2l	equ	0xFD9
  5178                           status	equ	0xFD8
  5179                           
  5180 ;; *************** function _CANOperationMode *****************
  5181 ;; Defined at:
  5182 ;;		line 206 in file "CANlib.h"
  5183 ;; Parameters:    Size  Location     Type
  5184 ;;  mode            1    wreg     enum E16838
  5185 ;; Auto vars:     Size  Location     Type
  5186 ;;  mode            1    0[BANK0 ] enum E16838
  5187 ;; Return value:  Size  Location     Type
  5188 ;;		None               void
  5189 ;; Registers used:
  5190 ;;		wreg, status,2, status,0
  5191 ;; Tracked objects:
  5192 ;;		On entry : 0/0
  5193 ;;		On exit  : 0/0
  5194 ;;		Unchanged: 0/0
  5195 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  5196 ;;      Params:         0       0       0       0
  5197 ;;      Locals:         0       1       0       0
  5198 ;;      Temps:          0       0       0       0
  5199 ;;      Totals:         0       1       0       0
  5200 ;;Total ram usage:        1 bytes
  5201 ;; Hardware stack levels used:    1
  5202 ;; Hardware stack levels required when called:    2
  5203 ;; This function calls:
  5204 ;;		Nothing
  5205 ;; This function is called by:
  5206 ;;		_CANInitialize
  5207 ;; This function uses a non-reentrant model
  5208 ;;
  5209                           
  5210                           	psect	text8
  5211  0027F0                     __ptext8:
  5212                           	opt stack 0
  5213  0027F0                     _CANOperationMode:
  5214                           	opt stack 26
  5215                           
  5216                           ; BSR set to: 0
  5217                           ;incstack = 0
  5218                           ;CANOperationMode@mode stored from wreg
  5219  0027F0  0100               	movlb	0	; () banked
  5220  0027F2  6FA9               	movwf	CANOperationMode@mode& (0+255),b
  5221                           
  5222                           ;CANlib.h: 208: CANCON = mode;
  5223  0027F4  C0A9  FF6F         	movff	CANOperationMode@mode,3951	;volatile
  5224  0027F8                     l3994:
  5225  0027F8  506E               	movf	3950,w,c	;volatile
  5226  0027FA  0BE0               	andlw	224
  5227  0027FC  0100               	movlb	0	; () banked
  5228  0027FE  19A9               	xorwf	CANOperationMode@mode& (0+255),w,b
  5229  002800  B4D8               	btfsc	status,2,c
  5230  002802  0012               	return	
  5231  002804  D7F9               	goto	l3994
  5232  002806                     __end_of_CANOperationMode:
  5233                           	opt stack 0
  5234                           tblptru	equ	0xFF8
  5235                           tblptrh	equ	0xFF7
  5236                           tblptrl	equ	0xFF6
  5237                           tablat	equ	0xFF5
  5238                           prodh	equ	0xFF4
  5239                           prodl	equ	0xFF3
  5240                           intcon	equ	0xFF2
  5241                           postinc0	equ	0xFEE
  5242                           wreg	equ	0xFE8
  5243                           indf1	equ	0xFE7
  5244                           postdec1	equ	0xFE5
  5245                           fsr1h	equ	0xFE2
  5246                           fsr1l	equ	0xFE1
  5247                           indf2	equ	0xFDF
  5248                           fsr2h	equ	0xFDA
  5249                           fsr2l	equ	0xFD9
  5250                           status	equ	0xFD8
  5251                           
  5252 ;; *************** function _battery_measure *****************
  5253 ;; Defined at:
  5254 ;;		line 270 in file "motore.c"
  5255 ;; Parameters:    Size  Location     Type
  5256 ;;		None
  5257 ;; Auto vars:     Size  Location     Type
  5258 ;;		None
  5259 ;; Return value:  Size  Location     Type
  5260 ;;		None               void
  5261 ;; Registers used:
  5262 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5263 ;; Tracked objects:
  5264 ;;		On entry : 0/0
  5265 ;;		On exit  : 0/0
  5266 ;;		Unchanged: 0/0
  5267 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  5268 ;;      Params:         0       0       0       0
  5269 ;;      Locals:         0       0       0       0
  5270 ;;      Temps:          0       0       0       0
  5271 ;;      Totals:         0       0       0       0
  5272 ;;Total ram usage:        0 bytes
  5273 ;; Hardware stack levels used:    1
  5274 ;; Hardware stack levels required when called:    3
  5275 ;; This function calls:
  5276 ;;		_CANisTxReady
  5277 ;;		_CANsendMessage
  5278 ;;		___awdiv
  5279 ;;		___wmul
  5280 ;; This function is called by:
  5281 ;;		_main
  5282 ;; This function uses a non-reentrant model
  5283 ;;
  5284                           
  5285                           	psect	text9
  5286  002562                     __ptext9:
  5287                           	opt stack 0
  5288  002562                     _battery_measure:
  5289                           	opt stack 27
  5290                           
  5291                           ;motore.c: 271: ADCON0bits.GO = 1;
  5292                           
  5293                           ; BSR set to: 0
  5294                           ;incstack = 0
  5295  002562  82C2               	bsf	4034,1,c	;volatile
  5296  002564                     l710:
  5297  002564  B2C2               	btfsc	4034,1,c	;volatile
  5298  002566  D7FE               	goto	l710
  5299                           
  5300                           ;motore.c: 273: vBatt = ADRESH;
  5301  002568  CFC4 F036          	movff	4036,_vBatt	;volatile
  5302  00256C  6A37               	clrf	_vBatt+1,c
  5303                           
  5304                           ;motore.c: 274: vBatt = (vBatt * 14) / 255;
  5305  00256E  C036  F0B1         	movff	_vBatt,___wmul@multiplier
  5306  002572  C037  F0B2         	movff	_vBatt+1,___wmul@multiplier+1
  5307  002576  0E00               	movlw	0
  5308  002578  0100               	movlb	0	; () banked
  5309  00257A  6FB4               	movwf	(___wmul@multiplicand+1)& (0+255),b
  5310  00257C  0E0E               	movlw	14
  5311  00257E  6FB3               	movwf	___wmul@multiplicand& (0+255),b
  5312  002580  EC8A  F013         	call	___wmul	;wreg free
  5313  002584  C0B1  F0A9         	movff	?___wmul,___awdiv@dividend
  5314  002588  C0B2  F0AA         	movff	?___wmul+1,___awdiv@dividend+1
  5315  00258C  0E00               	movlw	0
  5316  00258E  0100               	movlb	0	; () banked
  5317  002590  6FAC               	movwf	(___awdiv@divisor+1)& (0+255),b
  5318  002592  69AB               	setf	___awdiv@divisor& (0+255),b
  5319  002594  ECFA  F011         	call	___awdiv	;wreg free
  5320  002598  C0A9  F036         	movff	?___awdiv,_vBatt
  5321  00259C  C0AA  F037         	movff	?___awdiv+1,_vBatt+1
  5322                           
  5323                           ;motore.c: 275: if (vBatt < 8) {
  5324  0025A0  BE37               	btfsc	_vBatt+1,7,c
  5325  0025A2  D006               	goto	l4936
  5326  0025A4  5037               	movf	_vBatt+1,w,c
  5327  0025A6  E122               	bnz	l713
  5328  0025A8  0E08               	movlw	8
  5329  0025AA  5C36               	subwf	_vBatt,w,c
  5330  0025AC  B0D8               	btfsc	status,0,c
  5331  0025AE  D01E               	goto	l713
  5332  0025B0                     l4936:
  5333  0025B0  ECD5  F013         	call	_CANisTxReady	;wreg free
  5334  0025B4  0900               	iorlw	0
  5335  0025B6  B4D8               	btfsc	status,2,c
  5336  0025B8  D7FB               	goto	l4936
  5337                           
  5338                           ;motore.c: 277: CANsendMessage(0b00000000000000000000000001001, data_array, 8, CAN_CONFI
      +                          G_STD_MSG & CAN_REMOTE_TX_FRAME & CAN_TX_PRIORITY_0);
  5339  0025BA  0E09               	movlw	9
  5340  0025BC  0100               	movlb	0	; () banked
  5341  0025BE  6FA9               	movwf	CANsendMessage@identifier& (0+255),b
  5342  0025C0  0E00               	movlw	0
  5343  0025C2  6FAA               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  5344  0025C4  0E00               	movlw	0
  5345  0025C6  6FAB               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  5346  0025C8  0E00               	movlw	0
  5347  0025CA  6FAC               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  5348  0025CC  0E91               	movlw	low _data_array
  5349  0025CE  0100               	movlb	0	; () banked
  5350  0025D0  6FAD               	movwf	CANsendMessage@data& (0+255),b
  5351  0025D2  0E00               	movlw	high _data_array
  5352  0025D4  0100               	movlb	0	; () banked
  5353  0025D6  6FAE               	movwf	(CANsendMessage@data+1)& (0+255),b
  5354  0025D8  0E08               	movlw	8
  5355  0025DA  0100               	movlb	0	; () banked
  5356  0025DC  6FAF               	movwf	CANsendMessage@dataLength& (0+255),b
  5357  0025DE  0EFC               	movlw	252
  5358  0025E0  0100               	movlb	0	; () banked
  5359  0025E2  6FB0               	movwf	CANsendMessage@flags& (0+255),b
  5360  0025E4  EC5A  F006         	call	_CANsendMessage	;wreg free
  5361                           
  5362                           ;motore.c: 278: PORTCbits.RC1 = 1;
  5363  0025E8  8282               	bsf	3970,1,c	;volatile
  5364                           
  5365                           ;motore.c: 279: } else {
  5366  0025EA  0012               	return	
  5367  0025EC                     l713:
  5368                           
  5369                           ;motore.c: 280: PORTCbits.RC1 = 0;
  5370  0025EC  9282               	bcf	3970,1,c	;volatile
  5371  0025EE  0012               	return	
  5372  0025F0                     __end_of_battery_measure:
  5373                           	opt stack 0
  5374                           tblptru	equ	0xFF8
  5375                           tblptrh	equ	0xFF7
  5376                           tblptrl	equ	0xFF6
  5377                           tablat	equ	0xFF5
  5378                           prodh	equ	0xFF4
  5379                           prodl	equ	0xFF3
  5380                           intcon	equ	0xFF2
  5381                           postinc0	equ	0xFEE
  5382                           wreg	equ	0xFE8
  5383                           indf1	equ	0xFE7
  5384                           postdec1	equ	0xFE5
  5385                           fsr1h	equ	0xFE2
  5386                           fsr1l	equ	0xFE1
  5387                           indf2	equ	0xFDF
  5388                           fsr2h	equ	0xFDA
  5389                           fsr2l	equ	0xFD9
  5390                           status	equ	0xFD8
  5391                           
  5392 ;; *************** function ___wmul *****************
  5393 ;; Defined at:
  5394 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\Umul16.c"
  5395 ;; Parameters:    Size  Location     Type
  5396 ;;  multiplier      2    8[BANK0 ] unsigned int 
  5397 ;;  multiplicand    2   10[BANK0 ] unsigned int 
  5398 ;; Auto vars:     Size  Location     Type
  5399 ;;  product         2   12[BANK0 ] unsigned int 
  5400 ;; Return value:  Size  Location     Type
  5401 ;;                  2    8[BANK0 ] unsigned int 
  5402 ;; Registers used:
  5403 ;;		wreg, status,2, status,0, prodl, prodh
  5404 ;; Tracked objects:
  5405 ;;		On entry : 0/0
  5406 ;;		On exit  : 0/0
  5407 ;;		Unchanged: 0/0
  5408 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  5409 ;;      Params:         0       4       0       0
  5410 ;;      Locals:         0       2       0       0
  5411 ;;      Temps:          0       0       0       0
  5412 ;;      Totals:         0       6       0       0
  5413 ;;Total ram usage:        6 bytes
  5414 ;; Hardware stack levels used:    1
  5415 ;; Hardware stack levels required when called:    2
  5416 ;; This function calls:
  5417 ;;		Nothing
  5418 ;; This function is called by:
  5419 ;;		_delay_ms
  5420 ;;		_main
  5421 ;;		_battery_measure
  5422 ;; This function uses a non-reentrant model
  5423 ;;
  5424                           
  5425                           	psect	text10
  5426  002714                     __ptext10:
  5427                           	opt stack 0
  5428  002714                     ___wmul:
  5429                           	opt stack 27
  5430                           
  5431                           ;incstack = 0
  5432  002714  0100               	movlb	0	; () banked
  5433  002716  51B1               	movf	___wmul@multiplier& (0+255),w,b
  5434  002718  0100               	movlb	0	; () banked
  5435  00271A  03B3               	mulwf	___wmul@multiplicand& (0+255),b
  5436  00271C  CFF3 F0B5          	movff	prodl,___wmul@product
  5437  002720  CFF4 F0B6          	movff	prodh,___wmul@product+1
  5438  002724  0100               	movlb	0	; () banked
  5439  002726  51B1               	movf	___wmul@multiplier& (0+255),w,b
  5440  002728  0100               	movlb	0	; () banked
  5441  00272A  03B4               	mulwf	(___wmul@multiplicand+1)& (0+255),b
  5442  00272C  50F3               	movf	prodl,w,c
  5443  00272E  0100               	movlb	0	; () banked
  5444  002730  27B6               	addwf	(___wmul@product+1)& (0+255),f,b
  5445  002732  0100               	movlb	0	; () banked
  5446  002734  51B2               	movf	(___wmul@multiplier+1)& (0+255),w,b
  5447  002736  0100               	movlb	0	; () banked
  5448  002738  03B3               	mulwf	___wmul@multiplicand& (0+255),b
  5449  00273A  50F3               	movf	prodl,w,c
  5450  00273C  0100               	movlb	0	; () banked
  5451  00273E  27B6               	addwf	(___wmul@product+1)& (0+255),f,b
  5452                           
  5453                           ; BSR set to: 0
  5454  002740  C0B5  F0B1         	movff	___wmul@product,?___wmul
  5455  002744  C0B6  F0B2         	movff	___wmul@product+1,?___wmul+1
  5456  002748  0012               	return	
  5457  00274A                     __end_of___wmul:
  5458                           	opt stack 0
  5459                           tblptru	equ	0xFF8
  5460                           tblptrh	equ	0xFF7
  5461                           tblptrl	equ	0xFF6
  5462                           tablat	equ	0xFF5
  5463                           prodh	equ	0xFF4
  5464                           prodl	equ	0xFF3
  5465                           intcon	equ	0xFF2
  5466                           postinc0	equ	0xFEE
  5467                           wreg	equ	0xFE8
  5468                           indf1	equ	0xFE7
  5469                           postdec1	equ	0xFE5
  5470                           fsr1h	equ	0xFE2
  5471                           fsr1l	equ	0xFE1
  5472                           indf2	equ	0xFDF
  5473                           fsr2h	equ	0xFDA
  5474                           fsr2l	equ	0xFD9
  5475                           status	equ	0xFD8
  5476                           
  5477 ;; *************** function ___awdiv *****************
  5478 ;; Defined at:
  5479 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\awdiv.c"
  5480 ;; Parameters:    Size  Location     Type
  5481 ;;  dividend        2    0[BANK0 ] int 
  5482 ;;  divisor         2    2[BANK0 ] int 
  5483 ;; Auto vars:     Size  Location     Type
  5484 ;;  quotient        2    6[BANK0 ] int 
  5485 ;;  sign            1    5[BANK0 ] unsigned char 
  5486 ;;  counter         1    4[BANK0 ] unsigned char 
  5487 ;; Return value:  Size  Location     Type
  5488 ;;                  2    0[BANK0 ] int 
  5489 ;; Registers used:
  5490 ;;		wreg, status,2, status,0
  5491 ;; Tracked objects:
  5492 ;;		On entry : 0/0
  5493 ;;		On exit  : 0/0
  5494 ;;		Unchanged: 0/0
  5495 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  5496 ;;      Params:         0       4       0       0
  5497 ;;      Locals:         0       4       0       0
  5498 ;;      Temps:          0       0       0       0
  5499 ;;      Totals:         0       8       0       0
  5500 ;;Total ram usage:        8 bytes
  5501 ;; Hardware stack levels used:    1
  5502 ;; Hardware stack levels required when called:    2
  5503 ;; This function calls:
  5504 ;;		Nothing
  5505 ;; This function is called by:
  5506 ;;		_main
  5507 ;;		_battery_measure
  5508 ;; This function uses a non-reentrant model
  5509 ;;
  5510                           
  5511                           	psect	text11
  5512  0023F4                     __ptext11:
  5513                           	opt stack 0
  5514  0023F4                     ___awdiv:
  5515                           	opt stack 27
  5516                           
  5517                           ; BSR set to: 0
  5518                           ;incstack = 0
  5519  0023F4  0E00               	movlw	0
  5520  0023F6  0100               	movlb	0	; () banked
  5521  0023F8  6FAE               	movwf	___awdiv@sign& (0+255),b
  5522                           
  5523                           ; BSR set to: 0
  5524  0023FA  0100               	movlb	0	; () banked
  5525  0023FC  AFAC               	btfss	(___awdiv@divisor+1)& (0+255),7,b
  5526  0023FE  D008               	goto	l4730
  5527                           
  5528                           ; BSR set to: 0
  5529  002400  0100               	movlb	0	; () banked
  5530  002402  6DAB               	negf	___awdiv@divisor& (0+255),b
  5531  002404  1FAC               	comf	(___awdiv@divisor+1)& (0+255),f,b
  5532  002406  B0D8               	btfsc	status,0,c
  5533  002408  2BAC               	incf	(___awdiv@divisor+1)& (0+255),f,b
  5534                           
  5535                           ; BSR set to: 0
  5536  00240A  0E01               	movlw	1
  5537  00240C  0100               	movlb	0	; () banked
  5538  00240E  6FAE               	movwf	___awdiv@sign& (0+255),b
  5539  002410                     l4730:
  5540                           
  5541                           ; BSR set to: 0
  5542  002410  0100               	movlb	0	; () banked
  5543  002412  AFAA               	btfss	(___awdiv@dividend+1)& (0+255),7,b
  5544  002414  D008               	goto	l4736
  5545                           
  5546                           ; BSR set to: 0
  5547  002416  0100               	movlb	0	; () banked
  5548  002418  6DA9               	negf	___awdiv@dividend& (0+255),b
  5549  00241A  1FAA               	comf	(___awdiv@dividend+1)& (0+255),f,b
  5550  00241C  B0D8               	btfsc	status,0,c
  5551  00241E  2BAA               	incf	(___awdiv@dividend+1)& (0+255),f,b
  5552                           
  5553                           ; BSR set to: 0
  5554  002420  0E01               	movlw	1
  5555  002422  0100               	movlb	0	; () banked
  5556  002424  1BAE               	xorwf	___awdiv@sign& (0+255),f,b
  5557  002426                     l4736:
  5558                           
  5559                           ; BSR set to: 0
  5560  002426  0E00               	movlw	0
  5561  002428  0100               	movlb	0	; () banked
  5562  00242A  6FB0               	movwf	(___awdiv@quotient+1)& (0+255),b
  5563  00242C  0E00               	movlw	0
  5564  00242E  6FAF               	movwf	___awdiv@quotient& (0+255),b
  5565                           
  5566                           ; BSR set to: 0
  5567  002430  0100               	movlb	0	; () banked
  5568  002432  51AB               	movf	___awdiv@divisor& (0+255),w,b
  5569  002434  0100               	movlb	0	; () banked
  5570  002436  11AC               	iorwf	(___awdiv@divisor+1)& (0+255),w,b
  5571  002438  B4D8               	btfsc	status,2,c
  5572  00243A  D02C               	goto	l4758
  5573                           
  5574                           ; BSR set to: 0
  5575  00243C  0E01               	movlw	1
  5576  00243E  0100               	movlb	0	; () banked
  5577  002440  6FAD               	movwf	___awdiv@counter& (0+255),b
  5578  002442  D006               	goto	l4744
  5579  002444                     l4742:
  5580                           
  5581                           ; BSR set to: 0
  5582  002444  0100               	movlb	0	; () banked
  5583  002446  90D8               	bcf	status,0,c
  5584  002448  37AB               	rlcf	___awdiv@divisor& (0+255),f,b
  5585  00244A  37AC               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
  5586  00244C  0100               	movlb	0	; () banked
  5587  00244E  2BAD               	incf	___awdiv@counter& (0+255),f,b
  5588  002450                     l4744:
  5589                           
  5590                           ; BSR set to: 0
  5591  002450  0100               	movlb	0	; () banked
  5592  002452  AFAC               	btfss	(___awdiv@divisor+1)& (0+255),7,b
  5593  002454  D7F7               	goto	l4742
  5594  002456                     l4746:
  5595                           
  5596                           ; BSR set to: 0
  5597  002456  0100               	movlb	0	; () banked
  5598  002458  90D8               	bcf	status,0,c
  5599  00245A  37AF               	rlcf	___awdiv@quotient& (0+255),f,b
  5600  00245C  37B0               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
  5601                           
  5602                           ; BSR set to: 0
  5603  00245E  0100               	movlb	0	; () banked
  5604  002460  51AB               	movf	___awdiv@divisor& (0+255),w,b
  5605  002462  0100               	movlb	0	; () banked
  5606  002464  5DA9               	subwf	___awdiv@dividend& (0+255),w,b
  5607  002466  0100               	movlb	0	; () banked
  5608  002468  51AC               	movf	(___awdiv@divisor+1)& (0+255),w,b
  5609  00246A  0100               	movlb	0	; () banked
  5610  00246C  59AA               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
  5611  00246E  A0D8               	btfss	status,0,c
  5612  002470  D00A               	goto	l4754
  5613                           
  5614                           ; BSR set to: 0
  5615  002472  0100               	movlb	0	; () banked
  5616  002474  51AB               	movf	___awdiv@divisor& (0+255),w,b
  5617  002476  0100               	movlb	0	; () banked
  5618  002478  5FA9               	subwf	___awdiv@dividend& (0+255),f,b
  5619  00247A  0100               	movlb	0	; () banked
  5620  00247C  51AC               	movf	(___awdiv@divisor+1)& (0+255),w,b
  5621  00247E  0100               	movlb	0	; () banked
  5622  002480  5BAA               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
  5623                           
  5624                           ; BSR set to: 0
  5625  002482  0100               	movlb	0	; () banked
  5626  002484  81AF               	bsf	___awdiv@quotient& (0+255),0,b
  5627  002486                     l4754:
  5628                           
  5629                           ; BSR set to: 0
  5630  002486  0100               	movlb	0	; () banked
  5631  002488  90D8               	bcf	status,0,c
  5632  00248A  33AC               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
  5633  00248C  33AB               	rrcf	___awdiv@divisor& (0+255),f,b
  5634                           
  5635                           ; BSR set to: 0
  5636  00248E  0100               	movlb	0	; () banked
  5637  002490  2FAD               	decfsz	___awdiv@counter& (0+255),f,b
  5638  002492  D7E1               	goto	l4746
  5639  002494                     l4758:
  5640                           
  5641                           ; BSR set to: 0
  5642  002494  0100               	movlb	0	; () banked
  5643  002496  51AE               	movf	___awdiv@sign& (0+255),w,b
  5644  002498  0100               	movlb	0	; () banked
  5645  00249A  B4D8               	btfsc	status,2,c
  5646  00249C  D005               	goto	l4762
  5647                           
  5648                           ; BSR set to: 0
  5649  00249E  0100               	movlb	0	; () banked
  5650  0024A0  6DAF               	negf	___awdiv@quotient& (0+255),b
  5651  0024A2  1FB0               	comf	(___awdiv@quotient+1)& (0+255),f,b
  5652  0024A4  B0D8               	btfsc	status,0,c
  5653  0024A6  2BB0               	incf	(___awdiv@quotient+1)& (0+255),f,b
  5654  0024A8                     l4762:
  5655                           
  5656                           ; BSR set to: 0
  5657  0024A8  C0AF  F0A9         	movff	___awdiv@quotient,?___awdiv
  5658  0024AC  C0B0  F0AA         	movff	___awdiv@quotient+1,?___awdiv+1
  5659  0024B0  0012               	return	
  5660  0024B2                     __end_of___awdiv:
  5661                           	opt stack 0
  5662                           tblptru	equ	0xFF8
  5663                           tblptrh	equ	0xFF7
  5664                           tblptrl	equ	0xFF6
  5665                           tablat	equ	0xFF5
  5666                           prodh	equ	0xFF4
  5667                           prodl	equ	0xFF3
  5668                           intcon	equ	0xFF2
  5669                           postinc0	equ	0xFEE
  5670                           wreg	equ	0xFE8
  5671                           indf1	equ	0xFE7
  5672                           postdec1	equ	0xFE5
  5673                           fsr1h	equ	0xFE2
  5674                           fsr1l	equ	0xFE1
  5675                           indf2	equ	0xFDF
  5676                           fsr2h	equ	0xFDA
  5677                           fsr2l	equ	0xFD9
  5678                           status	equ	0xFD8
  5679                           
  5680 ;; *************** function _CANsendMessage *****************
  5681 ;; Defined at:
  5682 ;;		line 294 in file "CANlib.h"
  5683 ;; Parameters:    Size  Location     Type
  5684 ;;  identifier      4    0[BANK0 ] unsigned long 
  5685 ;;  data            2    4[BANK0 ] PTR unsigned char 
  5686 ;;		 -> data_array1(8), data_array(8), data_array_debug(8), 
  5687 ;;  dataLength      1    6[BANK0 ] unsigned char 
  5688 ;;  flags           1    7[BANK0 ] enum E16866
  5689 ;; Auto vars:     Size  Location     Type
  5690 ;;  tamp            4   12[BANK0 ] unsigned long 
  5691 ;; Return value:  Size  Location     Type
  5692 ;;		None               void
  5693 ;; Registers used:
  5694 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5695 ;; Tracked objects:
  5696 ;;		On entry : 0/0
  5697 ;;		On exit  : 0/0
  5698 ;;		Unchanged: 0/0
  5699 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  5700 ;;      Params:         0       8       0       0
  5701 ;;      Locals:         0       4       0       0
  5702 ;;      Temps:          0       4       0       0
  5703 ;;      Totals:         0      16       0       0
  5704 ;;Total ram usage:       16 bytes
  5705 ;; Hardware stack levels used:    1
  5706 ;; Hardware stack levels required when called:    2
  5707 ;; This function calls:
  5708 ;;		Nothing
  5709 ;; This function is called by:
  5710 ;;		_main
  5711 ;;		_send_data
  5712 ;;		_battery_measure
  5713 ;; This function uses a non-reentrant model
  5714 ;;
  5715                           
  5716                           	psect	text12
  5717  000CB4                     __ptext12:
  5718                           	opt stack 0
  5719  000CB4                     _CANsendMessage:
  5720                           	opt stack 27
  5721                           
  5722                           ;CANlib.h: 296: unsigned long tamp;
  5723                           ;CANlib.h: 298: if (TXB0CONbits.TXREQ == 0)
  5724                           
  5725                           ; BSR set to: 0
  5726                           ;incstack = 0
  5727  000CB4  010F               	movlb	15	; () banked
  5728  000CB6  B740               	btfsc	64,3,b	;volatile
  5729  000CB8  D13F               	goto	l363
  5730                           
  5731                           ; BSR set to: 15
  5732                           ;CANlib.h: 299: { TXB0DLC = dataLength;
  5733  000CBA  C0AF  FF45         	movff	CANsendMessage@dataLength,3909	;volatile
  5734                           
  5735                           ;CANlib.h: 300: if (0b01000000 & flags)
  5736  000CBE  0100               	movlb	0	; () banked
  5737  000CC0  ADB0               	btfss	CANsendMessage@flags& (0+255),6,b
  5738  000CC2  D003               	goto	l364
  5739                           
  5740                           ; BSR set to: 0
  5741                           ;CANlib.h: 301: TXB0DLCbits.TXRTR = 0x01;
  5742  000CC4  010F               	movlb	15	; () banked
  5743  000CC6  8D45               	bsf	69,6,b	;volatile
  5744  000CC8  D002               	goto	l365
  5745  000CCA                     l364:
  5746                           
  5747                           ; BSR set to: 0
  5748                           ;CANlib.h: 302: else
  5749                           ;CANlib.h: 303: TXB0DLCbits.TXRTR = 0x00;
  5750  000CCA  010F               	movlb	15	; () banked
  5751  000CCC  9D45               	bcf	69,6,b	;volatile
  5752  000CCE                     l365:
  5753                           
  5754                           ; BSR set to: 15
  5755                           ;CANlib.h: 305: if (CAN_TX_FRAME_MASK & flags)
  5756  000CCE  0100               	movlb	0	; () banked
  5757  000CD0  A7B0               	btfss	CANsendMessage@flags& (0+255),3,b
  5758  000CD2  D079               	goto	l366
  5759                           
  5760                           ; BSR set to: 0
  5761                           ;CANlib.h: 306: {
  5762                           ;CANlib.h: 308: tamp = identifier & 0x000000FF;
  5763  000CD4  0100               	movlb	0	; () banked
  5764  000CD6  51A9               	movf	CANsendMessage@identifier& (0+255),w,b
  5765  000CD8  0100               	movlb	0	; () banked
  5766  000CDA  6FB5               	movwf	CANsendMessage@tamp& (0+255),b
  5767  000CDC  6BB6               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  5768  000CDE  6BB7               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  5769  000CE0  6BB8               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  5770                           
  5771                           ; BSR set to: 0
  5772                           ;CANlib.h: 309: TXB0EIDL = (unsigned char) tamp;
  5773  000CE2  C0B5  FF44         	movff	CANsendMessage@tamp,3908	;volatile
  5774                           
  5775                           ; BSR set to: 0
  5776                           ;CANlib.h: 311: tamp = identifier & 0x0000FF00;
  5777  000CE6  0E00               	movlw	0
  5778  000CE8  0100               	movlb	0	; () banked
  5779  000CEA  15A9               	andwf	CANsendMessage@identifier& (0+255),w,b
  5780  000CEC  0100               	movlb	0	; () banked
  5781  000CEE  6FB5               	movwf	CANsendMessage@tamp& (0+255),b
  5782  000CF0  0EFF               	movlw	255
  5783  000CF2  0100               	movlb	0	; () banked
  5784  000CF4  15AA               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
  5785  000CF6  0100               	movlb	0	; () banked
  5786  000CF8  6FB6               	movwf	(CANsendMessage@tamp+1)& (0+255),b
  5787  000CFA  0E00               	movlw	0
  5788  000CFC  0100               	movlb	0	; () banked
  5789  000CFE  15AB               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
  5790  000D00  0100               	movlb	0	; () banked
  5791  000D02  6FB7               	movwf	(CANsendMessage@tamp+2)& (0+255),b
  5792  000D04  0E00               	movlw	0
  5793  000D06  0100               	movlb	0	; () banked
  5794  000D08  15AC               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
  5795  000D0A  0100               	movlb	0	; () banked
  5796  000D0C  6FB8               	movwf	(CANsendMessage@tamp+3)& (0+255),b
  5797                           
  5798                           ; BSR set to: 0
  5799                           ;CANlib.h: 312: tamp = tamp >> 8;
  5800  000D0E  C0B5  F0B1         	movff	CANsendMessage@tamp,??_CANsendMessage
  5801  000D12  C0B6  F0B2         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
  5802  000D16  C0B7  F0B3         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
  5803  000D1A  C0B8  F0B4         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
  5804  000D1E  C0B2  F0B1         	movff	??_CANsendMessage+1,??_CANsendMessage
  5805  000D22  C0B3  F0B2         	movff	??_CANsendMessage+2,??_CANsendMessage+1
  5806  000D26  C0B4  F0B3         	movff	??_CANsendMessage+3,??_CANsendMessage+2
  5807  000D2A  0100               	movlb	0	; () banked
  5808  000D2C  6BB4               	clrf	(??_CANsendMessage+3)& (0+255),b
  5809  000D2E  C0B1  F0B5         	movff	??_CANsendMessage,CANsendMessage@tamp
  5810  000D32  C0B2  F0B6         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  5811  000D36  C0B3  F0B7         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  5812  000D3A  C0B4  F0B8         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  5813                           
  5814                           ; BSR set to: 0
  5815                           ;CANlib.h: 313: TXB0EIDH = (unsigned char) tamp;
  5816  000D3E  C0B5  FF43         	movff	CANsendMessage@tamp,3907	;volatile
  5817                           
  5818                           ; BSR set to: 0
  5819                           ;CANlib.h: 315: TXB0SIDL = 0x00;
  5820  000D42  0E00               	movlw	0
  5821  000D44  010F               	movlb	15	; () banked
  5822  000D46  6F42               	movwf	66,b	;volatile
  5823                           
  5824                           ; BSR set to: 15
  5825                           ;CANlib.h: 316: TXB0SIDLbits.EXIDE = 0x01;
  5826  000D48  010F               	movlb	15	; () banked
  5827  000D4A  8742               	bsf	66,3,b	;volatile
  5828                           
  5829                           ; BSR set to: 15
  5830                           ;CANlib.h: 318: if (identifier & 0x00010000)
  5831  000D4C  0100               	movlb	0	; () banked
  5832  000D4E  A1AB               	btfss	(CANsendMessage@identifier+2)& (0+255),0,b
  5833  000D50  D002               	goto	l367
  5834                           
  5835                           ; BSR set to: 0
  5836                           ;CANlib.h: 319: TXB0SIDLbits.EID16 = 0x01;
  5837  000D52  010F               	movlb	15	; () banked
  5838  000D54  8142               	bsf	66,0,b	;volatile
  5839  000D56                     l367:
  5840                           
  5841                           ;CANlib.h: 320: if (identifier & 0x00020000)
  5842  000D56  0100               	movlb	0	; () banked
  5843  000D58  A3AB               	btfss	(CANsendMessage@identifier+2)& (0+255),1,b
  5844  000D5A  D002               	goto	l368
  5845                           
  5846                           ; BSR set to: 0
  5847                           ;CANlib.h: 321: TXB0SIDLbits.EID17 = 0x01;
  5848  000D5C  010F               	movlb	15	; () banked
  5849  000D5E  8342               	bsf	66,1,b	;volatile
  5850  000D60                     l368:
  5851                           
  5852                           ;CANlib.h: 322: if (identifier & 0x00040000)
  5853  000D60  0100               	movlb	0	; () banked
  5854  000D62  A5AB               	btfss	(CANsendMessage@identifier+2)& (0+255),2,b
  5855  000D64  D002               	goto	l369
  5856                           
  5857                           ; BSR set to: 0
  5858                           ;CANlib.h: 323: TXB0SIDLbits.SID0 = 0x01;
  5859  000D66  010F               	movlb	15	; () banked
  5860  000D68  8B42               	bsf	66,5,b	;volatile
  5861  000D6A                     l369:
  5862                           
  5863                           ;CANlib.h: 324: if (identifier & 0x00080000)
  5864  000D6A  0100               	movlb	0	; () banked
  5865  000D6C  A7AB               	btfss	(CANsendMessage@identifier+2)& (0+255),3,b
  5866  000D6E  D002               	goto	l370
  5867                           
  5868                           ; BSR set to: 0
  5869                           ;CANlib.h: 325: TXB0SIDLbits.SID1 = 0x01;
  5870  000D70  010F               	movlb	15	; () banked
  5871  000D72  8D42               	bsf	66,6,b	;volatile
  5872  000D74                     l370:
  5873                           
  5874                           ;CANlib.h: 326: if (identifier & 0x00100000)
  5875  000D74  0100               	movlb	0	; () banked
  5876  000D76  A9AB               	btfss	(CANsendMessage@identifier+2)& (0+255),4,b
  5877  000D78  D002               	goto	l4494
  5878                           
  5879                           ; BSR set to: 0
  5880                           ;CANlib.h: 327: TXB0SIDLbits.SID2 = 0x01;
  5881  000D7A  010F               	movlb	15	; () banked
  5882  000D7C  8F42               	bsf	66,7,b	;volatile
  5883  000D7E                     l4494:
  5884                           
  5885                           ;CANlib.h: 329: tamp = (identifier >> 21);
  5886  000D7E  C0A9  F0B1         	movff	CANsendMessage@identifier,??_CANsendMessage
  5887  000D82  C0AA  F0B2         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
  5888  000D86  C0AB  F0B3         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
  5889  000D8A  C0AC  F0B4         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
  5890  000D8E  0E16               	movlw	22
  5891  000D90  D006               	goto	u5760
  5892  000D92                     u5765:
  5893  000D92  0100               	movlb	0	; () banked
  5894  000D94  90D8               	bcf	status,0,c
  5895  000D96  33B4               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
  5896  000D98  33B3               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
  5897  000D9A  33B2               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
  5898  000D9C  33B1               	rrcf	??_CANsendMessage& (0+255),f,b
  5899  000D9E                     u5760:
  5900  000D9E  2EE8               	decfsz	wreg,f,c
  5901  000DA0  D7F8               	goto	u5765
  5902  000DA2  C0B1  F0B5         	movff	??_CANsendMessage,CANsendMessage@tamp
  5903  000DA6  C0B2  F0B6         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  5904  000DAA  C0B3  F0B7         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  5905  000DAE  C0B4  F0B8         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  5906                           
  5907                           ; BSR set to: 0
  5908                           ;CANlib.h: 330: tamp = tamp & 0x000000FF;
  5909  000DB2  0100               	movlb	0	; () banked
  5910  000DB4  51B5               	movf	CANsendMessage@tamp& (0+255),w,b
  5911  000DB6  0100               	movlb	0	; () banked
  5912  000DB8  6FB5               	movwf	CANsendMessage@tamp& (0+255),b
  5913  000DBA  6BB6               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  5914  000DBC  6BB7               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  5915  000DBE  6BB8               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  5916                           
  5917                           ; BSR set to: 0
  5918                           ;CANlib.h: 331: TXB0SIDH = (unsigned char) tamp;
  5919  000DC0  C0B5  FF41         	movff	CANsendMessage@tamp,3905	;volatile
  5920                           
  5921                           ;CANlib.h: 332: }
  5922  000DC4  D059               	goto	l4514
  5923  000DC6                     l366:
  5924                           
  5925                           ; BSR set to: 0
  5926                           ;CANlib.h: 334: else
  5927                           ;CANlib.h: 336: {
  5928                           ;CANlib.h: 337: TXB0SIDLbits.EXIDE = 0x00;
  5929  000DC6  010F               	movlb	15	; () banked
  5930  000DC8  9742               	bcf	66,3,b	;volatile
  5931                           
  5932                           ; BSR set to: 15
  5933                           ;CANlib.h: 339: tamp = (identifier >> 3);
  5934  000DCA  C0A9  F0B1         	movff	CANsendMessage@identifier,??_CANsendMessage
  5935  000DCE  C0AA  F0B2         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
  5936  000DD2  C0AB  F0B3         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
  5937  000DD6  C0AC  F0B4         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
  5938  000DDA  0E04               	movlw	4
  5939  000DDC  D006               	goto	u5770
  5940  000DDE                     u5775:
  5941  000DDE  0100               	movlb	0	; () banked
  5942  000DE0  90D8               	bcf	status,0,c
  5943  000DE2  33B4               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
  5944  000DE4  33B3               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
  5945  000DE6  33B2               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
  5946  000DE8  33B1               	rrcf	??_CANsendMessage& (0+255),f,b
  5947  000DEA                     u5770:
  5948  000DEA  2EE8               	decfsz	wreg,f,c
  5949  000DEC  D7F8               	goto	u5775
  5950  000DEE  C0B1  F0B5         	movff	??_CANsendMessage,CANsendMessage@tamp
  5951  000DF2  C0B2  F0B6         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  5952  000DF6  C0B3  F0B7         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  5953  000DFA  C0B4  F0B8         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  5954                           
  5955                           ; BSR set to: 0
  5956                           ;CANlib.h: 340: tamp = tamp & 0x000000FF;
  5957  000DFE  0100               	movlb	0	; () banked
  5958  000E00  51B5               	movf	CANsendMessage@tamp& (0+255),w,b
  5959  000E02  0100               	movlb	0	; () banked
  5960  000E04  6FB5               	movwf	CANsendMessage@tamp& (0+255),b
  5961  000E06  6BB6               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  5962  000E08  6BB7               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  5963  000E0A  6BB8               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  5964                           
  5965                           ; BSR set to: 0
  5966                           ;CANlib.h: 341: TXB0SIDH = (unsigned char) tamp;
  5967  000E0C  C0B5  FF41         	movff	CANsendMessage@tamp,3905	;volatile
  5968                           
  5969                           ; BSR set to: 0
  5970                           ;CANlib.h: 343: tamp = identifier & 0x00000007;
  5971  000E10  0E07               	movlw	7
  5972  000E12  0100               	movlb	0	; () banked
  5973  000E14  15A9               	andwf	CANsendMessage@identifier& (0+255),w,b
  5974  000E16  0100               	movlb	0	; () banked
  5975  000E18  6FB5               	movwf	CANsendMessage@tamp& (0+255),b
  5976  000E1A  0E00               	movlw	0
  5977  000E1C  0100               	movlb	0	; () banked
  5978  000E1E  15AA               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
  5979  000E20  0100               	movlb	0	; () banked
  5980  000E22  6FB6               	movwf	(CANsendMessage@tamp+1)& (0+255),b
  5981  000E24  0E00               	movlw	0
  5982  000E26  0100               	movlb	0	; () banked
  5983  000E28  15AB               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
  5984  000E2A  0100               	movlb	0	; () banked
  5985  000E2C  6FB7               	movwf	(CANsendMessage@tamp+2)& (0+255),b
  5986  000E2E  0E00               	movlw	0
  5987  000E30  0100               	movlb	0	; () banked
  5988  000E32  15AC               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
  5989  000E34  0100               	movlb	0	; () banked
  5990  000E36  6FB8               	movwf	(CANsendMessage@tamp+3)& (0+255),b
  5991                           
  5992                           ; BSR set to: 0
  5993                           ;CANlib.h: 344: tamp = tamp << 5;
  5994  000E38  C0B5  F0B1         	movff	CANsendMessage@tamp,??_CANsendMessage
  5995  000E3C  C0B6  F0B2         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
  5996  000E40  C0B7  F0B3         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
  5997  000E44  C0B8  F0B4         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
  5998  000E48  0E05               	movlw	5
  5999  000E4A                     u5785:
  6000  000E4A  90D8               	bcf	status,0,c
  6001  000E4C  0100               	movlb	0	; () banked
  6002  000E4E  37B1               	rlcf	??_CANsendMessage& (0+255),f,b
  6003  000E50  37B2               	rlcf	(??_CANsendMessage+1)& (0+255),f,b
  6004  000E52  37B3               	rlcf	(??_CANsendMessage+2)& (0+255),f,b
  6005  000E54  37B4               	rlcf	(??_CANsendMessage+3)& (0+255),f,b
  6006  000E56  2EE8               	decfsz	wreg,f,c
  6007  000E58  D7F8               	goto	u5785
  6008  000E5A  C0B1  F0B5         	movff	??_CANsendMessage,CANsendMessage@tamp
  6009  000E5E  C0B2  F0B6         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  6010  000E62  C0B3  F0B7         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  6011  000E66  C0B4  F0B8         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  6012                           
  6013                           ; BSR set to: 0
  6014                           ;CANlib.h: 345: TXB0SIDL = TXB0SIDL & 0b00011111;
  6015  000E6A  010F               	movlb	15	; () banked
  6016  000E6C  5142               	movf	66,w,b	;volatile
  6017  000E6E  0B1F               	andlw	31
  6018  000E70  010F               	movlb	15	; () banked
  6019  000E72  6F42               	movwf	66,b	;volatile
  6020                           
  6021                           ; BSR set to: 15
  6022                           ;CANlib.h: 346: TXB0SIDL = (unsigned char) tamp;
  6023  000E74  C0B5  FF42         	movff	CANsendMessage@tamp,3906	;volatile
  6024  000E78                     l4514:
  6025                           
  6026                           ;CANlib.h: 347: }
  6027                           ;CANlib.h: 349: if (0b00000001 & flags)
  6028  000E78  0100               	movlb	0	; () banked
  6029  000E7A  A1B0               	btfss	CANsendMessage@flags& (0+255),0,b
  6030  000E7C  D003               	goto	l373
  6031                           
  6032                           ; BSR set to: 0
  6033                           ;CANlib.h: 350: TXB0CONbits.TXPRI0 = 0x01;
  6034  000E7E  010F               	movlb	15	; () banked
  6035  000E80  8140               	bsf	64,0,b	;volatile
  6036  000E82  D002               	goto	l374
  6037  000E84                     l373:
  6038                           
  6039                           ; BSR set to: 0
  6040                           ;CANlib.h: 351: else
  6041                           ;CANlib.h: 352: TXB0CONbits.TXPRI0 = 0x00;
  6042  000E84  010F               	movlb	15	; () banked
  6043  000E86  9140               	bcf	64,0,b	;volatile
  6044  000E88                     l374:
  6045                           
  6046                           ; BSR set to: 15
  6047                           ;CANlib.h: 353: if (0b00000010 & flags)
  6048  000E88  0100               	movlb	0	; () banked
  6049  000E8A  A3B0               	btfss	CANsendMessage@flags& (0+255),1,b
  6050  000E8C  D003               	goto	l375
  6051                           
  6052                           ; BSR set to: 0
  6053                           ;CANlib.h: 354: TXB0CONbits.TXPRI1 = 0x01;
  6054  000E8E  010F               	movlb	15	; () banked
  6055  000E90  8340               	bsf	64,1,b	;volatile
  6056  000E92  D002               	goto	l4520
  6057  000E94                     l375:
  6058                           
  6059                           ; BSR set to: 0
  6060                           ;CANlib.h: 355: else
  6061                           ;CANlib.h: 356: TXB0CONbits.TXPRI1 = 0x00;
  6062  000E94  010F               	movlb	15	; () banked
  6063  000E96  9340               	bcf	64,1,b	;volatile
  6064  000E98                     l4520:
  6065                           
  6066                           ; BSR set to: 15
  6067                           ;CANlib.h: 358: TXB0D0 = data[0];
  6068  000E98  C0AD  FFD9         	movff	CANsendMessage@data,fsr2l
  6069  000E9C  C0AE  FFDA         	movff	CANsendMessage@data+1,fsr2h
  6070  000EA0  50DF               	movf	indf2,w,c
  6071  000EA2  010F               	movlb	15	; () banked
  6072  000EA4  6F46               	movwf	70,b	;volatile
  6073                           
  6074                           ; BSR set to: 15
  6075                           ;CANlib.h: 359: TXB0D1 = data[1];
  6076  000EA6  0100               	movlb	0	; () banked
  6077  000EA8  EE20 F001          	lfsr	2,1
  6078  000EAC  51AD               	movf	CANsendMessage@data& (0+255),w,b
  6079  000EAE  26D9               	addwf	fsr2l,f,c
  6080  000EB0  51AE               	movf	(CANsendMessage@data+1)& (0+255),w,b
  6081  000EB2  22DA               	addwfc	fsr2h,f,c
  6082  000EB4  50DF               	movf	indf2,w,c
  6083  000EB6  010F               	movlb	15	; () banked
  6084  000EB8  6F47               	movwf	71,b	;volatile
  6085                           
  6086                           ; BSR set to: 15
  6087                           ;CANlib.h: 360: TXB0D2 = data[2];
  6088  000EBA  0100               	movlb	0	; () banked
  6089  000EBC  EE20 F002          	lfsr	2,2
  6090  000EC0  51AD               	movf	CANsendMessage@data& (0+255),w,b
  6091  000EC2  26D9               	addwf	fsr2l,f,c
  6092  000EC4  51AE               	movf	(CANsendMessage@data+1)& (0+255),w,b
  6093  000EC6  22DA               	addwfc	fsr2h,f,c
  6094  000EC8  50DF               	movf	indf2,w,c
  6095  000ECA  010F               	movlb	15	; () banked
  6096  000ECC  6F48               	movwf	72,b	;volatile
  6097                           
  6098                           ; BSR set to: 15
  6099                           ;CANlib.h: 361: TXB0D3 = data[3];
  6100  000ECE  0100               	movlb	0	; () banked
  6101  000ED0  EE20 F003          	lfsr	2,3
  6102  000ED4  51AD               	movf	CANsendMessage@data& (0+255),w,b
  6103  000ED6  26D9               	addwf	fsr2l,f,c
  6104  000ED8  51AE               	movf	(CANsendMessage@data+1)& (0+255),w,b
  6105  000EDA  22DA               	addwfc	fsr2h,f,c
  6106  000EDC  50DF               	movf	indf2,w,c
  6107  000EDE  010F               	movlb	15	; () banked
  6108  000EE0  6F49               	movwf	73,b	;volatile
  6109                           
  6110                           ; BSR set to: 15
  6111                           ;CANlib.h: 362: TXB0D4 = data[4];
  6112  000EE2  0100               	movlb	0	; () banked
  6113  000EE4  EE20 F004          	lfsr	2,4
  6114  000EE8  51AD               	movf	CANsendMessage@data& (0+255),w,b
  6115  000EEA  26D9               	addwf	fsr2l,f,c
  6116  000EEC  51AE               	movf	(CANsendMessage@data+1)& (0+255),w,b
  6117  000EEE  22DA               	addwfc	fsr2h,f,c
  6118  000EF0  50DF               	movf	indf2,w,c
  6119  000EF2  010F               	movlb	15	; () banked
  6120  000EF4  6F4A               	movwf	74,b	;volatile
  6121                           
  6122                           ; BSR set to: 15
  6123                           ;CANlib.h: 363: TXB0D5 = data[5];
  6124  000EF6  0100               	movlb	0	; () banked
  6125  000EF8  EE20 F005          	lfsr	2,5
  6126  000EFC  51AD               	movf	CANsendMessage@data& (0+255),w,b
  6127  000EFE  26D9               	addwf	fsr2l,f,c
  6128  000F00  51AE               	movf	(CANsendMessage@data+1)& (0+255),w,b
  6129  000F02  22DA               	addwfc	fsr2h,f,c
  6130  000F04  50DF               	movf	indf2,w,c
  6131  000F06  010F               	movlb	15	; () banked
  6132  000F08  6F4B               	movwf	75,b	;volatile
  6133                           
  6134                           ; BSR set to: 15
  6135                           ;CANlib.h: 364: TXB0D6 = data[6];
  6136  000F0A  0100               	movlb	0	; () banked
  6137  000F0C  EE20 F006          	lfsr	2,6
  6138  000F10  51AD               	movf	CANsendMessage@data& (0+255),w,b
  6139  000F12  26D9               	addwf	fsr2l,f,c
  6140  000F14  51AE               	movf	(CANsendMessage@data+1)& (0+255),w,b
  6141  000F16  22DA               	addwfc	fsr2h,f,c
  6142  000F18  50DF               	movf	indf2,w,c
  6143  000F1A  010F               	movlb	15	; () banked
  6144  000F1C  6F4C               	movwf	76,b	;volatile
  6145                           
  6146                           ; BSR set to: 15
  6147                           ;CANlib.h: 365: TXB0D7 = data[7];
  6148  000F1E  0100               	movlb	0	; () banked
  6149  000F20  EE20 F007          	lfsr	2,7
  6150  000F24  51AD               	movf	CANsendMessage@data& (0+255),w,b
  6151  000F26  26D9               	addwf	fsr2l,f,c
  6152  000F28  51AE               	movf	(CANsendMessage@data+1)& (0+255),w,b
  6153  000F2A  22DA               	addwfc	fsr2h,f,c
  6154  000F2C  50DF               	movf	indf2,w,c
  6155  000F2E  010F               	movlb	15	; () banked
  6156  000F30  6F4D               	movwf	77,b	;volatile
  6157                           
  6158                           ; BSR set to: 15
  6159                           ;CANlib.h: 367: TXB0CONbits.TXREQ = 0x01;
  6160  000F32  010F               	movlb	15	; () banked
  6161  000F34  8740               	bsf	64,3,b	;volatile
  6162                           
  6163                           ; BSR set to: 15
  6164                           ;CANlib.h: 368: return;
  6165  000F36  0012               	return	
  6166  000F38                     l363:
  6167                           
  6168                           ; BSR set to: 15
  6169                           ;CANlib.h: 369: }
  6170                           ;CANlib.h: 373: if (TXB1CONbits.TXREQ == 0)
  6171  000F38  010F               	movlb	15	; () banked
  6172  000F3A  B730               	btfsc	48,3,b	;volatile
  6173  000F3C  D13F               	goto	l378
  6174                           
  6175                           ; BSR set to: 15
  6176                           ;CANlib.h: 374: { TXB1DLC = dataLength;
  6177  000F3E  C0AF  FF35         	movff	CANsendMessage@dataLength,3893	;volatile
  6178                           
  6179                           ;CANlib.h: 376: if (0b01000000 & flags)
  6180  000F42  0100               	movlb	0	; () banked
  6181  000F44  ADB0               	btfss	CANsendMessage@flags& (0+255),6,b
  6182  000F46  D003               	goto	l379
  6183                           
  6184                           ; BSR set to: 0
  6185                           ;CANlib.h: 377: TXB1DLCbits.TXRTR = 0x01;
  6186  000F48  010F               	movlb	15	; () banked
  6187  000F4A  8D35               	bsf	53,6,b	;volatile
  6188  000F4C  D002               	goto	l380
  6189  000F4E                     l379:
  6190                           
  6191                           ; BSR set to: 0
  6192                           ;CANlib.h: 378: else
  6193                           ;CANlib.h: 379: TXB1DLCbits.TXRTR = 0x00;
  6194  000F4E  010F               	movlb	15	; () banked
  6195  000F50  9D35               	bcf	53,6,b	;volatile
  6196  000F52                     l380:
  6197                           
  6198                           ; BSR set to: 15
  6199                           ;CANlib.h: 381: if (CAN_TX_FRAME_MASK & flags)
  6200  000F52  0100               	movlb	0	; () banked
  6201  000F54  A7B0               	btfss	CANsendMessage@flags& (0+255),3,b
  6202  000F56  D079               	goto	l381
  6203                           
  6204                           ; BSR set to: 0
  6205                           ;CANlib.h: 382: {
  6206                           ;CANlib.h: 383: tamp = identifier & 0x000000FF;
  6207  000F58  0100               	movlb	0	; () banked
  6208  000F5A  51A9               	movf	CANsendMessage@identifier& (0+255),w,b
  6209  000F5C  0100               	movlb	0	; () banked
  6210  000F5E  6FB5               	movwf	CANsendMessage@tamp& (0+255),b
  6211  000F60  6BB6               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  6212  000F62  6BB7               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  6213  000F64  6BB8               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  6214                           
  6215                           ; BSR set to: 0
  6216                           ;CANlib.h: 384: TXB1EIDL = (unsigned char) tamp;
  6217  000F66  C0B5  FF34         	movff	CANsendMessage@tamp,3892	;volatile
  6218                           
  6219                           ; BSR set to: 0
  6220                           ;CANlib.h: 386: tamp = identifier & 0x0000FF00;
  6221  000F6A  0E00               	movlw	0
  6222  000F6C  0100               	movlb	0	; () banked
  6223  000F6E  15A9               	andwf	CANsendMessage@identifier& (0+255),w,b
  6224  000F70  0100               	movlb	0	; () banked
  6225  000F72  6FB5               	movwf	CANsendMessage@tamp& (0+255),b
  6226  000F74  0EFF               	movlw	255
  6227  000F76  0100               	movlb	0	; () banked
  6228  000F78  15AA               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
  6229  000F7A  0100               	movlb	0	; () banked
  6230  000F7C  6FB6               	movwf	(CANsendMessage@tamp+1)& (0+255),b
  6231  000F7E  0E00               	movlw	0
  6232  000F80  0100               	movlb	0	; () banked
  6233  000F82  15AB               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
  6234  000F84  0100               	movlb	0	; () banked
  6235  000F86  6FB7               	movwf	(CANsendMessage@tamp+2)& (0+255),b
  6236  000F88  0E00               	movlw	0
  6237  000F8A  0100               	movlb	0	; () banked
  6238  000F8C  15AC               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
  6239  000F8E  0100               	movlb	0	; () banked
  6240  000F90  6FB8               	movwf	(CANsendMessage@tamp+3)& (0+255),b
  6241                           
  6242                           ; BSR set to: 0
  6243                           ;CANlib.h: 387: tamp = tamp >> 8;
  6244  000F92  C0B5  F0B1         	movff	CANsendMessage@tamp,??_CANsendMessage
  6245  000F96  C0B6  F0B2         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
  6246  000F9A  C0B7  F0B3         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
  6247  000F9E  C0B8  F0B4         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
  6248  000FA2  C0B2  F0B1         	movff	??_CANsendMessage+1,??_CANsendMessage
  6249  000FA6  C0B3  F0B2         	movff	??_CANsendMessage+2,??_CANsendMessage+1
  6250  000FAA  C0B4  F0B3         	movff	??_CANsendMessage+3,??_CANsendMessage+2
  6251  000FAE  0100               	movlb	0	; () banked
  6252  000FB0  6BB4               	clrf	(??_CANsendMessage+3)& (0+255),b
  6253  000FB2  C0B1  F0B5         	movff	??_CANsendMessage,CANsendMessage@tamp
  6254  000FB6  C0B2  F0B6         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  6255  000FBA  C0B3  F0B7         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  6256  000FBE  C0B4  F0B8         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  6257                           
  6258                           ; BSR set to: 0
  6259                           ;CANlib.h: 388: TXB1EIDH = (unsigned char) tamp;
  6260  000FC2  C0B5  FF33         	movff	CANsendMessage@tamp,3891	;volatile
  6261                           
  6262                           ; BSR set to: 0
  6263                           ;CANlib.h: 390: TXB1SIDL = 0x00;
  6264  000FC6  0E00               	movlw	0
  6265  000FC8  010F               	movlb	15	; () banked
  6266  000FCA  6F32               	movwf	50,b	;volatile
  6267                           
  6268                           ; BSR set to: 15
  6269                           ;CANlib.h: 391: TXB1SIDLbits.EXIDE = 0x01;
  6270  000FCC  010F               	movlb	15	; () banked
  6271  000FCE  8732               	bsf	50,3,b	;volatile
  6272                           
  6273                           ; BSR set to: 15
  6274                           ;CANlib.h: 393: if (identifier & 0x00010000)
  6275  000FD0  0100               	movlb	0	; () banked
  6276  000FD2  A1AB               	btfss	(CANsendMessage@identifier+2)& (0+255),0,b
  6277  000FD4  D002               	goto	l382
  6278                           
  6279                           ; BSR set to: 0
  6280                           ;CANlib.h: 394: TXB1SIDLbits.EID16 = 0x01;
  6281  000FD6  010F               	movlb	15	; () banked
  6282  000FD8  8132               	bsf	50,0,b	;volatile
  6283  000FDA                     l382:
  6284                           
  6285                           ;CANlib.h: 395: if (identifier & 0x00020000)
  6286  000FDA  0100               	movlb	0	; () banked
  6287  000FDC  A3AB               	btfss	(CANsendMessage@identifier+2)& (0+255),1,b
  6288  000FDE  D002               	goto	l383
  6289                           
  6290                           ; BSR set to: 0
  6291                           ;CANlib.h: 396: TXB1SIDLbits.EID17 = 0x01;
  6292  000FE0  010F               	movlb	15	; () banked
  6293  000FE2  8332               	bsf	50,1,b	;volatile
  6294  000FE4                     l383:
  6295                           
  6296                           ;CANlib.h: 397: if (identifier & 0x00040000)
  6297  000FE4  0100               	movlb	0	; () banked
  6298  000FE6  A5AB               	btfss	(CANsendMessage@identifier+2)& (0+255),2,b
  6299  000FE8  D002               	goto	l384
  6300                           
  6301                           ; BSR set to: 0
  6302                           ;CANlib.h: 398: TXB1SIDLbits.SID0 = 0x01;
  6303  000FEA  010F               	movlb	15	; () banked
  6304  000FEC  8B32               	bsf	50,5,b	;volatile
  6305  000FEE                     l384:
  6306                           
  6307                           ;CANlib.h: 399: if (identifier & 0x00080000)
  6308  000FEE  0100               	movlb	0	; () banked
  6309  000FF0  A7AB               	btfss	(CANsendMessage@identifier+2)& (0+255),3,b
  6310  000FF2  D002               	goto	l385
  6311                           
  6312                           ; BSR set to: 0
  6313                           ;CANlib.h: 400: TXB1SIDLbits.SID1 = 0x01;
  6314  000FF4  010F               	movlb	15	; () banked
  6315  000FF6  8D32               	bsf	50,6,b	;volatile
  6316  000FF8                     l385:
  6317                           
  6318                           ;CANlib.h: 401: if (identifier & 0x00100000)
  6319  000FF8  0100               	movlb	0	; () banked
  6320  000FFA  A9AB               	btfss	(CANsendMessage@identifier+2)& (0+255),4,b
  6321  000FFC  D002               	goto	l4570
  6322                           
  6323                           ; BSR set to: 0
  6324                           ;CANlib.h: 402: TXB1SIDLbits.SID2 = 0x01;
  6325  000FFE  010F               	movlb	15	; () banked
  6326  001000  8F32               	bsf	50,7,b	;volatile
  6327  001002                     l4570:
  6328                           
  6329                           ;CANlib.h: 404: tamp = (identifier >> 21);
  6330  001002  C0A9  F0B1         	movff	CANsendMessage@identifier,??_CANsendMessage
  6331  001006  C0AA  F0B2         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
  6332  00100A  C0AB  F0B3         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
  6333  00100E  C0AC  F0B4         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
  6334  001012  0E16               	movlw	22
  6335  001014  D006               	goto	u5890
  6336  001016                     u5895:
  6337  001016  0100               	movlb	0	; () banked
  6338  001018  90D8               	bcf	status,0,c
  6339  00101A  33B4               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
  6340  00101C  33B3               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
  6341  00101E  33B2               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
  6342  001020  33B1               	rrcf	??_CANsendMessage& (0+255),f,b
  6343  001022                     u5890:
  6344  001022  2EE8               	decfsz	wreg,f,c
  6345  001024  D7F8               	goto	u5895
  6346  001026  C0B1  F0B5         	movff	??_CANsendMessage,CANsendMessage@tamp
  6347  00102A  C0B2  F0B6         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  6348  00102E  C0B3  F0B7         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  6349  001032  C0B4  F0B8         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  6350                           
  6351                           ; BSR set to: 0
  6352                           ;CANlib.h: 405: tamp = tamp & 0x000000FF;
  6353  001036  0100               	movlb	0	; () banked
  6354  001038  51B5               	movf	CANsendMessage@tamp& (0+255),w,b
  6355  00103A  0100               	movlb	0	; () banked
  6356  00103C  6FB5               	movwf	CANsendMessage@tamp& (0+255),b
  6357  00103E  6BB6               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  6358  001040  6BB7               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  6359  001042  6BB8               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  6360                           
  6361                           ; BSR set to: 0
  6362                           ;CANlib.h: 406: TXB1SIDH = (unsigned char) tamp;
  6363  001044  C0B5  FF31         	movff	CANsendMessage@tamp,3889	;volatile
  6364                           
  6365                           ;CANlib.h: 407: }
  6366  001048  D059               	goto	l4590
  6367  00104A                     l381:
  6368                           
  6369                           ; BSR set to: 0
  6370                           ;CANlib.h: 409: else
  6371                           ;CANlib.h: 411: {
  6372                           ;CANlib.h: 412: TXB1SIDLbits.EXIDE = 0x00;
  6373  00104A  010F               	movlb	15	; () banked
  6374  00104C  9732               	bcf	50,3,b	;volatile
  6375                           
  6376                           ; BSR set to: 15
  6377                           ;CANlib.h: 414: tamp = (identifier >> 3);
  6378  00104E  C0A9  F0B1         	movff	CANsendMessage@identifier,??_CANsendMessage
  6379  001052  C0AA  F0B2         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
  6380  001056  C0AB  F0B3         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
  6381  00105A  C0AC  F0B4         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
  6382  00105E  0E04               	movlw	4
  6383  001060  D006               	goto	u5900
  6384  001062                     u5905:
  6385  001062  0100               	movlb	0	; () banked
  6386  001064  90D8               	bcf	status,0,c
  6387  001066  33B4               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
  6388  001068  33B3               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
  6389  00106A  33B2               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
  6390  00106C  33B1               	rrcf	??_CANsendMessage& (0+255),f,b
  6391  00106E                     u5900:
  6392  00106E  2EE8               	decfsz	wreg,f,c
  6393  001070  D7F8               	goto	u5905
  6394  001072  C0B1  F0B5         	movff	??_CANsendMessage,CANsendMessage@tamp
  6395  001076  C0B2  F0B6         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  6396  00107A  C0B3  F0B7         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  6397  00107E  C0B4  F0B8         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  6398                           
  6399                           ; BSR set to: 0
  6400                           ;CANlib.h: 415: tamp = tamp & 0x000000FF;
  6401  001082  0100               	movlb	0	; () banked
  6402  001084  51B5               	movf	CANsendMessage@tamp& (0+255),w,b
  6403  001086  0100               	movlb	0	; () banked
  6404  001088  6FB5               	movwf	CANsendMessage@tamp& (0+255),b
  6405  00108A  6BB6               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  6406  00108C  6BB7               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  6407  00108E  6BB8               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  6408                           
  6409                           ; BSR set to: 0
  6410                           ;CANlib.h: 416: TXB1SIDH = (unsigned char) tamp;
  6411  001090  C0B5  FF31         	movff	CANsendMessage@tamp,3889	;volatile
  6412                           
  6413                           ; BSR set to: 0
  6414                           ;CANlib.h: 418: tamp = identifier & 0x00000007;
  6415  001094  0E07               	movlw	7
  6416  001096  0100               	movlb	0	; () banked
  6417  001098  15A9               	andwf	CANsendMessage@identifier& (0+255),w,b
  6418  00109A  0100               	movlb	0	; () banked
  6419  00109C  6FB5               	movwf	CANsendMessage@tamp& (0+255),b
  6420  00109E  0E00               	movlw	0
  6421  0010A0  0100               	movlb	0	; () banked
  6422  0010A2  15AA               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
  6423  0010A4  0100               	movlb	0	; () banked
  6424  0010A6  6FB6               	movwf	(CANsendMessage@tamp+1)& (0+255),b
  6425  0010A8  0E00               	movlw	0
  6426  0010AA  0100               	movlb	0	; () banked
  6427  0010AC  15AB               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
  6428  0010AE  0100               	movlb	0	; () banked
  6429  0010B0  6FB7               	movwf	(CANsendMessage@tamp+2)& (0+255),b
  6430  0010B2  0E00               	movlw	0
  6431  0010B4  0100               	movlb	0	; () banked
  6432  0010B6  15AC               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
  6433  0010B8  0100               	movlb	0	; () banked
  6434  0010BA  6FB8               	movwf	(CANsendMessage@tamp+3)& (0+255),b
  6435                           
  6436                           ; BSR set to: 0
  6437                           ;CANlib.h: 419: tamp = tamp << 5;
  6438  0010BC  C0B5  F0B1         	movff	CANsendMessage@tamp,??_CANsendMessage
  6439  0010C0  C0B6  F0B2         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
  6440  0010C4  C0B7  F0B3         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
  6441  0010C8  C0B8  F0B4         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
  6442  0010CC  0E05               	movlw	5
  6443  0010CE                     u5915:
  6444  0010CE  90D8               	bcf	status,0,c
  6445  0010D0  0100               	movlb	0	; () banked
  6446  0010D2  37B1               	rlcf	??_CANsendMessage& (0+255),f,b
  6447  0010D4  37B2               	rlcf	(??_CANsendMessage+1)& (0+255),f,b
  6448  0010D6  37B3               	rlcf	(??_CANsendMessage+2)& (0+255),f,b
  6449  0010D8  37B4               	rlcf	(??_CANsendMessage+3)& (0+255),f,b
  6450  0010DA  2EE8               	decfsz	wreg,f,c
  6451  0010DC  D7F8               	goto	u5915
  6452  0010DE  C0B1  F0B5         	movff	??_CANsendMessage,CANsendMessage@tamp
  6453  0010E2  C0B2  F0B6         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  6454  0010E6  C0B3  F0B7         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  6455  0010EA  C0B4  F0B8         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  6456                           
  6457                           ; BSR set to: 0
  6458                           ;CANlib.h: 420: TXB1SIDL = TXB1SIDL & 0b00011111;
  6459  0010EE  010F               	movlb	15	; () banked
  6460  0010F0  5132               	movf	50,w,b	;volatile
  6461  0010F2  0B1F               	andlw	31
  6462  0010F4  010F               	movlb	15	; () banked
  6463  0010F6  6F32               	movwf	50,b	;volatile
  6464                           
  6465                           ; BSR set to: 15
  6466                           ;CANlib.h: 421: TXB1SIDL = (unsigned char) tamp;
  6467  0010F8  C0B5  FF32         	movff	CANsendMessage@tamp,3890	;volatile
  6468  0010FC                     l4590:
  6469                           
  6470                           ;CANlib.h: 422: }
  6471                           ;CANlib.h: 424: if (0b00000001 & flags)
  6472  0010FC  0100               	movlb	0	; () banked
  6473  0010FE  A1B0               	btfss	CANsendMessage@flags& (0+255),0,b
  6474  001100  D003               	goto	l388
  6475                           
  6476                           ; BSR set to: 0
  6477                           ;CANlib.h: 425: TXB1CONbits.TXPRI0 = 0x01;
  6478  001102  010F               	movlb	15	; () banked
  6479  001104  8130               	bsf	48,0,b	;volatile
  6480  001106  D002               	goto	l389
  6481  001108                     l388:
  6482                           
  6483                           ; BSR set to: 0
  6484                           ;CANlib.h: 426: else
  6485                           ;CANlib.h: 427: TXB1CONbits.TXPRI0 = 0x00;
  6486  001108  010F               	movlb	15	; () banked
  6487  00110A  9130               	bcf	48,0,b	;volatile
  6488  00110C                     l389:
  6489                           
  6490                           ; BSR set to: 15
  6491                           ;CANlib.h: 428: if (0b00000010 & flags)
  6492  00110C  0100               	movlb	0	; () banked
  6493  00110E  A3B0               	btfss	CANsendMessage@flags& (0+255),1,b
  6494  001110  D003               	goto	l390
  6495                           
  6496                           ; BSR set to: 0
  6497                           ;CANlib.h: 429: TXB1CONbits.TXPRI1 = 0x01;
  6498  001112  010F               	movlb	15	; () banked
  6499  001114  8330               	bsf	48,1,b	;volatile
  6500  001116  D002               	goto	l4596
  6501  001118                     l390:
  6502                           
  6503                           ; BSR set to: 0
  6504                           ;CANlib.h: 430: else
  6505                           ;CANlib.h: 431: TXB1CONbits.TXPRI1 = 0x00;
  6506  001118  010F               	movlb	15	; () banked
  6507  00111A  9330               	bcf	48,1,b	;volatile
  6508  00111C                     l4596:
  6509                           
  6510                           ; BSR set to: 15
  6511                           ;CANlib.h: 433: TXB1D0 = data[0];
  6512  00111C  C0AD  FFD9         	movff	CANsendMessage@data,fsr2l
  6513  001120  C0AE  FFDA         	movff	CANsendMessage@data+1,fsr2h
  6514  001124  50DF               	movf	indf2,w,c
  6515  001126  010F               	movlb	15	; () banked
  6516  001128  6F36               	movwf	54,b	;volatile
  6517                           
  6518                           ; BSR set to: 15
  6519                           ;CANlib.h: 434: TXB1D1 = data[1];
  6520  00112A  0100               	movlb	0	; () banked
  6521  00112C  EE20 F001          	lfsr	2,1
  6522  001130  51AD               	movf	CANsendMessage@data& (0+255),w,b
  6523  001132  26D9               	addwf	fsr2l,f,c
  6524  001134  51AE               	movf	(CANsendMessage@data+1)& (0+255),w,b
  6525  001136  22DA               	addwfc	fsr2h,f,c
  6526  001138  50DF               	movf	indf2,w,c
  6527  00113A  010F               	movlb	15	; () banked
  6528  00113C  6F37               	movwf	55,b	;volatile
  6529                           
  6530                           ; BSR set to: 15
  6531                           ;CANlib.h: 435: TXB1D2 = data[2];
  6532  00113E  0100               	movlb	0	; () banked
  6533  001140  EE20 F002          	lfsr	2,2
  6534  001144  51AD               	movf	CANsendMessage@data& (0+255),w,b
  6535  001146  26D9               	addwf	fsr2l,f,c
  6536  001148  51AE               	movf	(CANsendMessage@data+1)& (0+255),w,b
  6537  00114A  22DA               	addwfc	fsr2h,f,c
  6538  00114C  50DF               	movf	indf2,w,c
  6539  00114E  010F               	movlb	15	; () banked
  6540  001150  6F38               	movwf	56,b	;volatile
  6541                           
  6542                           ; BSR set to: 15
  6543                           ;CANlib.h: 436: TXB1D3 = data[3];
  6544  001152  0100               	movlb	0	; () banked
  6545  001154  EE20 F003          	lfsr	2,3
  6546  001158  51AD               	movf	CANsendMessage@data& (0+255),w,b
  6547  00115A  26D9               	addwf	fsr2l,f,c
  6548  00115C  51AE               	movf	(CANsendMessage@data+1)& (0+255),w,b
  6549  00115E  22DA               	addwfc	fsr2h,f,c
  6550  001160  50DF               	movf	indf2,w,c
  6551  001162  010F               	movlb	15	; () banked
  6552  001164  6F39               	movwf	57,b	;volatile
  6553                           
  6554                           ; BSR set to: 15
  6555                           ;CANlib.h: 437: TXB1D4 = data[4];
  6556  001166  0100               	movlb	0	; () banked
  6557  001168  EE20 F004          	lfsr	2,4
  6558  00116C  51AD               	movf	CANsendMessage@data& (0+255),w,b
  6559  00116E  26D9               	addwf	fsr2l,f,c
  6560  001170  51AE               	movf	(CANsendMessage@data+1)& (0+255),w,b
  6561  001172  22DA               	addwfc	fsr2h,f,c
  6562  001174  50DF               	movf	indf2,w,c
  6563  001176  010F               	movlb	15	; () banked
  6564  001178  6F3A               	movwf	58,b	;volatile
  6565                           
  6566                           ; BSR set to: 15
  6567                           ;CANlib.h: 438: TXB1D5 = data[5];
  6568  00117A  0100               	movlb	0	; () banked
  6569  00117C  EE20 F005          	lfsr	2,5
  6570  001180  51AD               	movf	CANsendMessage@data& (0+255),w,b
  6571  001182  26D9               	addwf	fsr2l,f,c
  6572  001184  51AE               	movf	(CANsendMessage@data+1)& (0+255),w,b
  6573  001186  22DA               	addwfc	fsr2h,f,c
  6574  001188  50DF               	movf	indf2,w,c
  6575  00118A  010F               	movlb	15	; () banked
  6576  00118C  6F3B               	movwf	59,b	;volatile
  6577                           
  6578                           ; BSR set to: 15
  6579                           ;CANlib.h: 439: TXB1D6 = data[6];
  6580  00118E  0100               	movlb	0	; () banked
  6581  001190  EE20 F006          	lfsr	2,6
  6582  001194  51AD               	movf	CANsendMessage@data& (0+255),w,b
  6583  001196  26D9               	addwf	fsr2l,f,c
  6584  001198  51AE               	movf	(CANsendMessage@data+1)& (0+255),w,b
  6585  00119A  22DA               	addwfc	fsr2h,f,c
  6586  00119C  50DF               	movf	indf2,w,c
  6587  00119E  010F               	movlb	15	; () banked
  6588  0011A0  6F3C               	movwf	60,b	;volatile
  6589                           
  6590                           ; BSR set to: 15
  6591                           ;CANlib.h: 440: TXB1D7 = data[7];
  6592  0011A2  0100               	movlb	0	; () banked
  6593  0011A4  EE20 F007          	lfsr	2,7
  6594  0011A8  51AD               	movf	CANsendMessage@data& (0+255),w,b
  6595  0011AA  26D9               	addwf	fsr2l,f,c
  6596  0011AC  51AE               	movf	(CANsendMessage@data+1)& (0+255),w,b
  6597  0011AE  22DA               	addwfc	fsr2h,f,c
  6598  0011B0  50DF               	movf	indf2,w,c
  6599  0011B2  010F               	movlb	15	; () banked
  6600  0011B4  6F3D               	movwf	61,b	;volatile
  6601                           
  6602                           ; BSR set to: 15
  6603                           ;CANlib.h: 442: TXB1CONbits.TXREQ = 0x01;
  6604  0011B6  010F               	movlb	15	; () banked
  6605  0011B8  8730               	bsf	48,3,b	;volatile
  6606                           
  6607                           ; BSR set to: 15
  6608                           ;CANlib.h: 444: return;
  6609  0011BA  0012               	return	
  6610  0011BC                     l378:
  6611                           
  6612                           ; BSR set to: 15
  6613                           ;CANlib.h: 445: }
  6614                           ;CANlib.h: 449: if (TXB2CONbits.TXREQ == 0)
  6615  0011BC  010F               	movlb	15	; () banked
  6616  0011BE  B720               	btfsc	32,3,b	;volatile
  6617  0011C0  0012               	return	
  6618                           
  6619                           ; BSR set to: 15
  6620                           ;CANlib.h: 450: { TXB2DLC = dataLength;
  6621  0011C2  C0AF  FF25         	movff	CANsendMessage@dataLength,3877	;volatile
  6622                           
  6623                           ;CANlib.h: 452: if (0b01000000 & flags)
  6624  0011C6  0100               	movlb	0	; () banked
  6625  0011C8  ADB0               	btfss	CANsendMessage@flags& (0+255),6,b
  6626  0011CA  D003               	goto	l393
  6627                           
  6628                           ; BSR set to: 0
  6629                           ;CANlib.h: 453: TXB2DLCbits.TXRTR = 0x01;
  6630  0011CC  010F               	movlb	15	; () banked
  6631  0011CE  8D25               	bsf	37,6,b	;volatile
  6632  0011D0  D002               	goto	l394
  6633  0011D2                     l393:
  6634                           
  6635                           ; BSR set to: 0
  6636                           ;CANlib.h: 454: else
  6637                           ;CANlib.h: 455: TXB2DLCbits.TXRTR = 0x00;
  6638  0011D2  010F               	movlb	15	; () banked
  6639  0011D4  9D25               	bcf	37,6,b	;volatile
  6640  0011D6                     l394:
  6641                           
  6642                           ; BSR set to: 15
  6643                           ;CANlib.h: 457: if (CAN_TX_FRAME_MASK & flags)
  6644  0011D6  0100               	movlb	0	; () banked
  6645  0011D8  A7B0               	btfss	CANsendMessage@flags& (0+255),3,b
  6646  0011DA  D079               	goto	l395
  6647                           
  6648                           ; BSR set to: 0
  6649                           ;CANlib.h: 458: {
  6650                           ;CANlib.h: 459: tamp = identifier & 0x000000FF;
  6651  0011DC  0100               	movlb	0	; () banked
  6652  0011DE  51A9               	movf	CANsendMessage@identifier& (0+255),w,b
  6653  0011E0  0100               	movlb	0	; () banked
  6654  0011E2  6FB5               	movwf	CANsendMessage@tamp& (0+255),b
  6655  0011E4  6BB6               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  6656  0011E6  6BB7               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  6657  0011E8  6BB8               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  6658                           
  6659                           ; BSR set to: 0
  6660                           ;CANlib.h: 460: TXB2EIDL = (unsigned char) tamp;
  6661  0011EA  C0B5  FF24         	movff	CANsendMessage@tamp,3876	;volatile
  6662                           
  6663                           ; BSR set to: 0
  6664                           ;CANlib.h: 462: tamp = identifier & 0x0000FF00;
  6665  0011EE  0E00               	movlw	0
  6666  0011F0  0100               	movlb	0	; () banked
  6667  0011F2  15A9               	andwf	CANsendMessage@identifier& (0+255),w,b
  6668  0011F4  0100               	movlb	0	; () banked
  6669  0011F6  6FB5               	movwf	CANsendMessage@tamp& (0+255),b
  6670  0011F8  0EFF               	movlw	255
  6671  0011FA  0100               	movlb	0	; () banked
  6672  0011FC  15AA               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
  6673  0011FE  0100               	movlb	0	; () banked
  6674  001200  6FB6               	movwf	(CANsendMessage@tamp+1)& (0+255),b
  6675  001202  0E00               	movlw	0
  6676  001204  0100               	movlb	0	; () banked
  6677  001206  15AB               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
  6678  001208  0100               	movlb	0	; () banked
  6679  00120A  6FB7               	movwf	(CANsendMessage@tamp+2)& (0+255),b
  6680  00120C  0E00               	movlw	0
  6681  00120E  0100               	movlb	0	; () banked
  6682  001210  15AC               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
  6683  001212  0100               	movlb	0	; () banked
  6684  001214  6FB8               	movwf	(CANsendMessage@tamp+3)& (0+255),b
  6685                           
  6686                           ; BSR set to: 0
  6687                           ;CANlib.h: 463: tamp = tamp >> 8;
  6688  001216  C0B5  F0B1         	movff	CANsendMessage@tamp,??_CANsendMessage
  6689  00121A  C0B6  F0B2         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
  6690  00121E  C0B7  F0B3         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
  6691  001222  C0B8  F0B4         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
  6692  001226  C0B2  F0B1         	movff	??_CANsendMessage+1,??_CANsendMessage
  6693  00122A  C0B3  F0B2         	movff	??_CANsendMessage+2,??_CANsendMessage+1
  6694  00122E  C0B4  F0B3         	movff	??_CANsendMessage+3,??_CANsendMessage+2
  6695  001232  0100               	movlb	0	; () banked
  6696  001234  6BB4               	clrf	(??_CANsendMessage+3)& (0+255),b
  6697  001236  C0B1  F0B5         	movff	??_CANsendMessage,CANsendMessage@tamp
  6698  00123A  C0B2  F0B6         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  6699  00123E  C0B3  F0B7         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  6700  001242  C0B4  F0B8         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  6701                           
  6702                           ; BSR set to: 0
  6703                           ;CANlib.h: 464: TXB2EIDH = (unsigned char) tamp;
  6704  001246  C0B5  FF23         	movff	CANsendMessage@tamp,3875	;volatile
  6705                           
  6706                           ; BSR set to: 0
  6707                           ;CANlib.h: 466: TXB2SIDL = 0x00;
  6708  00124A  0E00               	movlw	0
  6709  00124C  010F               	movlb	15	; () banked
  6710  00124E  6F22               	movwf	34,b	;volatile
  6711                           
  6712                           ; BSR set to: 15
  6713                           ;CANlib.h: 467: TXB2SIDLbits.EXIDE = 0x01;
  6714  001250  010F               	movlb	15	; () banked
  6715  001252  8722               	bsf	34,3,b	;volatile
  6716                           
  6717                           ; BSR set to: 15
  6718                           ;CANlib.h: 469: if (identifier & 0x00010000)
  6719  001254  0100               	movlb	0	; () banked
  6720  001256  A1AB               	btfss	(CANsendMessage@identifier+2)& (0+255),0,b
  6721  001258  D002               	goto	l396
  6722                           
  6723                           ; BSR set to: 0
  6724                           ;CANlib.h: 470: TXB2SIDLbits.EID16 = 0x01;
  6725  00125A  010F               	movlb	15	; () banked
  6726  00125C  8122               	bsf	34,0,b	;volatile
  6727  00125E                     l396:
  6728                           
  6729                           ;CANlib.h: 471: if (identifier & 0x00020000)
  6730  00125E  0100               	movlb	0	; () banked
  6731  001260  A3AB               	btfss	(CANsendMessage@identifier+2)& (0+255),1,b
  6732  001262  D002               	goto	l397
  6733                           
  6734                           ; BSR set to: 0
  6735                           ;CANlib.h: 472: TXB2SIDLbits.EID17 = 0x01;
  6736  001264  010F               	movlb	15	; () banked
  6737  001266  8322               	bsf	34,1,b	;volatile
  6738  001268                     l397:
  6739                           
  6740                           ;CANlib.h: 473: if (identifier & 0x00040000)
  6741  001268  0100               	movlb	0	; () banked
  6742  00126A  A5AB               	btfss	(CANsendMessage@identifier+2)& (0+255),2,b
  6743  00126C  D002               	goto	l398
  6744                           
  6745                           ; BSR set to: 0
  6746                           ;CANlib.h: 474: TXB2SIDLbits.SID0 = 0x01;
  6747  00126E  010F               	movlb	15	; () banked
  6748  001270  8B22               	bsf	34,5,b	;volatile
  6749  001272                     l398:
  6750                           
  6751                           ;CANlib.h: 475: if (identifier & 0x00080000)
  6752  001272  0100               	movlb	0	; () banked
  6753  001274  A7AB               	btfss	(CANsendMessage@identifier+2)& (0+255),3,b
  6754  001276  D002               	goto	l399
  6755                           
  6756                           ; BSR set to: 0
  6757                           ;CANlib.h: 476: TXB2SIDLbits.SID1 = 0x01;
  6758  001278  010F               	movlb	15	; () banked
  6759  00127A  8D22               	bsf	34,6,b	;volatile
  6760  00127C                     l399:
  6761                           
  6762                           ;CANlib.h: 477: if (identifier & 0x00100000)
  6763  00127C  0100               	movlb	0	; () banked
  6764  00127E  A9AB               	btfss	(CANsendMessage@identifier+2)& (0+255),4,b
  6765  001280  D002               	goto	l4646
  6766                           
  6767                           ; BSR set to: 0
  6768                           ;CANlib.h: 478: TXB2SIDLbits.SID2 = 0x01;
  6769  001282  010F               	movlb	15	; () banked
  6770  001284  8F22               	bsf	34,7,b	;volatile
  6771  001286                     l4646:
  6772                           
  6773                           ;CANlib.h: 480: tamp = (identifier >> 21);
  6774  001286  C0A9  F0B1         	movff	CANsendMessage@identifier,??_CANsendMessage
  6775  00128A  C0AA  F0B2         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
  6776  00128E  C0AB  F0B3         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
  6777  001292  C0AC  F0B4         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
  6778  001296  0E16               	movlw	22
  6779  001298  D006               	goto	u6020
  6780  00129A                     u6025:
  6781  00129A  0100               	movlb	0	; () banked
  6782  00129C  90D8               	bcf	status,0,c
  6783  00129E  33B4               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
  6784  0012A0  33B3               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
  6785  0012A2  33B2               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
  6786  0012A4  33B1               	rrcf	??_CANsendMessage& (0+255),f,b
  6787  0012A6                     u6020:
  6788  0012A6  2EE8               	decfsz	wreg,f,c
  6789  0012A8  D7F8               	goto	u6025
  6790  0012AA  C0B1  F0B5         	movff	??_CANsendMessage,CANsendMessage@tamp
  6791  0012AE  C0B2  F0B6         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  6792  0012B2  C0B3  F0B7         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  6793  0012B6  C0B4  F0B8         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  6794                           
  6795                           ; BSR set to: 0
  6796                           ;CANlib.h: 481: tamp = tamp & 0x000000FF;
  6797  0012BA  0100               	movlb	0	; () banked
  6798  0012BC  51B5               	movf	CANsendMessage@tamp& (0+255),w,b
  6799  0012BE  0100               	movlb	0	; () banked
  6800  0012C0  6FB5               	movwf	CANsendMessage@tamp& (0+255),b
  6801  0012C2  6BB6               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  6802  0012C4  6BB7               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  6803  0012C6  6BB8               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  6804                           
  6805                           ; BSR set to: 0
  6806                           ;CANlib.h: 482: TXB2SIDH = (unsigned char) tamp;
  6807  0012C8  C0B5  FF21         	movff	CANsendMessage@tamp,3873	;volatile
  6808                           
  6809                           ;CANlib.h: 483: }
  6810  0012CC  D059               	goto	l4666
  6811  0012CE                     l395:
  6812                           
  6813                           ; BSR set to: 0
  6814                           ;CANlib.h: 485: else
  6815                           ;CANlib.h: 487: {
  6816                           ;CANlib.h: 488: TXB2SIDLbits.EXIDE = 0x00;
  6817  0012CE  010F               	movlb	15	; () banked
  6818  0012D0  9722               	bcf	34,3,b	;volatile
  6819                           
  6820                           ; BSR set to: 15
  6821                           ;CANlib.h: 490: tamp = (identifier >> 3);
  6822  0012D2  C0A9  F0B1         	movff	CANsendMessage@identifier,??_CANsendMessage
  6823  0012D6  C0AA  F0B2         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
  6824  0012DA  C0AB  F0B3         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
  6825  0012DE  C0AC  F0B4         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
  6826  0012E2  0E04               	movlw	4
  6827  0012E4  D006               	goto	u6030
  6828  0012E6                     u6035:
  6829  0012E6  0100               	movlb	0	; () banked
  6830  0012E8  90D8               	bcf	status,0,c
  6831  0012EA  33B4               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
  6832  0012EC  33B3               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
  6833  0012EE  33B2               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
  6834  0012F0  33B1               	rrcf	??_CANsendMessage& (0+255),f,b
  6835  0012F2                     u6030:
  6836  0012F2  2EE8               	decfsz	wreg,f,c
  6837  0012F4  D7F8               	goto	u6035
  6838  0012F6  C0B1  F0B5         	movff	??_CANsendMessage,CANsendMessage@tamp
  6839  0012FA  C0B2  F0B6         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  6840  0012FE  C0B3  F0B7         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  6841  001302  C0B4  F0B8         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  6842                           
  6843                           ; BSR set to: 0
  6844                           ;CANlib.h: 491: tamp = tamp & 0x000000FF;
  6845  001306  0100               	movlb	0	; () banked
  6846  001308  51B5               	movf	CANsendMessage@tamp& (0+255),w,b
  6847  00130A  0100               	movlb	0	; () banked
  6848  00130C  6FB5               	movwf	CANsendMessage@tamp& (0+255),b
  6849  00130E  6BB6               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  6850  001310  6BB7               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  6851  001312  6BB8               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  6852                           
  6853                           ; BSR set to: 0
  6854                           ;CANlib.h: 492: TXB2SIDH = (unsigned char) tamp;
  6855  001314  C0B5  FF21         	movff	CANsendMessage@tamp,3873	;volatile
  6856                           
  6857                           ; BSR set to: 0
  6858                           ;CANlib.h: 494: tamp = identifier & 0x00000007;
  6859  001318  0E07               	movlw	7
  6860  00131A  0100               	movlb	0	; () banked
  6861  00131C  15A9               	andwf	CANsendMessage@identifier& (0+255),w,b
  6862  00131E  0100               	movlb	0	; () banked
  6863  001320  6FB5               	movwf	CANsendMessage@tamp& (0+255),b
  6864  001322  0E00               	movlw	0
  6865  001324  0100               	movlb	0	; () banked
  6866  001326  15AA               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
  6867  001328  0100               	movlb	0	; () banked
  6868  00132A  6FB6               	movwf	(CANsendMessage@tamp+1)& (0+255),b
  6869  00132C  0E00               	movlw	0
  6870  00132E  0100               	movlb	0	; () banked
  6871  001330  15AB               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
  6872  001332  0100               	movlb	0	; () banked
  6873  001334  6FB7               	movwf	(CANsendMessage@tamp+2)& (0+255),b
  6874  001336  0E00               	movlw	0
  6875  001338  0100               	movlb	0	; () banked
  6876  00133A  15AC               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
  6877  00133C  0100               	movlb	0	; () banked
  6878  00133E  6FB8               	movwf	(CANsendMessage@tamp+3)& (0+255),b
  6879                           
  6880                           ; BSR set to: 0
  6881                           ;CANlib.h: 495: tamp = tamp << 5;
  6882  001340  C0B5  F0B1         	movff	CANsendMessage@tamp,??_CANsendMessage
  6883  001344  C0B6  F0B2         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
  6884  001348  C0B7  F0B3         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
  6885  00134C  C0B8  F0B4         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
  6886  001350  0E05               	movlw	5
  6887  001352                     u6045:
  6888  001352  90D8               	bcf	status,0,c
  6889  001354  0100               	movlb	0	; () banked
  6890  001356  37B1               	rlcf	??_CANsendMessage& (0+255),f,b
  6891  001358  37B2               	rlcf	(??_CANsendMessage+1)& (0+255),f,b
  6892  00135A  37B3               	rlcf	(??_CANsendMessage+2)& (0+255),f,b
  6893  00135C  37B4               	rlcf	(??_CANsendMessage+3)& (0+255),f,b
  6894  00135E  2EE8               	decfsz	wreg,f,c
  6895  001360  D7F8               	goto	u6045
  6896  001362  C0B1  F0B5         	movff	??_CANsendMessage,CANsendMessage@tamp
  6897  001366  C0B2  F0B6         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  6898  00136A  C0B3  F0B7         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  6899  00136E  C0B4  F0B8         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  6900                           
  6901                           ; BSR set to: 0
  6902                           ;CANlib.h: 496: TXB2SIDL = TXB2SIDL & 0b00011111;
  6903  001372  010F               	movlb	15	; () banked
  6904  001374  5122               	movf	34,w,b	;volatile
  6905  001376  0B1F               	andlw	31
  6906  001378  010F               	movlb	15	; () banked
  6907  00137A  6F22               	movwf	34,b	;volatile
  6908                           
  6909                           ; BSR set to: 15
  6910                           ;CANlib.h: 497: TXB2SIDL = (unsigned char) tamp;
  6911  00137C  C0B5  FF22         	movff	CANsendMessage@tamp,3874	;volatile
  6912  001380                     l4666:
  6913                           
  6914                           ;CANlib.h: 498: }
  6915                           ;CANlib.h: 500: if (0b00000001 & flags)
  6916  001380  0100               	movlb	0	; () banked
  6917  001382  A1B0               	btfss	CANsendMessage@flags& (0+255),0,b
  6918  001384  D003               	goto	l402
  6919                           
  6920                           ; BSR set to: 0
  6921                           ;CANlib.h: 501: TXB2CONbits.TXPRI0 = 0x01;
  6922  001386  010F               	movlb	15	; () banked
  6923  001388  8120               	bsf	32,0,b	;volatile
  6924  00138A  D002               	goto	l403
  6925  00138C                     l402:
  6926                           
  6927                           ; BSR set to: 0
  6928                           ;CANlib.h: 502: else
  6929                           ;CANlib.h: 503: TXB2CONbits.TXPRI0 = 0x00;
  6930  00138C  010F               	movlb	15	; () banked
  6931  00138E  9120               	bcf	32,0,b	;volatile
  6932  001390                     l403:
  6933                           
  6934                           ; BSR set to: 15
  6935                           ;CANlib.h: 504: if (0b00000010 & flags)
  6936  001390  0100               	movlb	0	; () banked
  6937  001392  A3B0               	btfss	CANsendMessage@flags& (0+255),1,b
  6938  001394  D003               	goto	l404
  6939                           
  6940                           ; BSR set to: 0
  6941                           ;CANlib.h: 505: TXB2CONbits.TXPRI1 = 0x01;
  6942  001396  010F               	movlb	15	; () banked
  6943  001398  8320               	bsf	32,1,b	;volatile
  6944  00139A  D002               	goto	l4672
  6945  00139C                     l404:
  6946                           
  6947                           ; BSR set to: 0
  6948                           ;CANlib.h: 506: else
  6949                           ;CANlib.h: 507: TXB2CONbits.TXPRI1 = 0x00;
  6950  00139C  010F               	movlb	15	; () banked
  6951  00139E  9320               	bcf	32,1,b	;volatile
  6952  0013A0                     l4672:
  6953                           
  6954                           ; BSR set to: 15
  6955                           ;CANlib.h: 509: TXB2D0 = data[0];
  6956  0013A0  C0AD  FFD9         	movff	CANsendMessage@data,fsr2l
  6957  0013A4  C0AE  FFDA         	movff	CANsendMessage@data+1,fsr2h
  6958  0013A8  50DF               	movf	indf2,w,c
  6959  0013AA  010F               	movlb	15	; () banked
  6960  0013AC  6F26               	movwf	38,b	;volatile
  6961                           
  6962                           ; BSR set to: 15
  6963                           ;CANlib.h: 510: TXB2D1 = data[1];
  6964  0013AE  0100               	movlb	0	; () banked
  6965  0013B0  EE20 F001          	lfsr	2,1
  6966  0013B4  51AD               	movf	CANsendMessage@data& (0+255),w,b
  6967  0013B6  26D9               	addwf	fsr2l,f,c
  6968  0013B8  51AE               	movf	(CANsendMessage@data+1)& (0+255),w,b
  6969  0013BA  22DA               	addwfc	fsr2h,f,c
  6970  0013BC  50DF               	movf	indf2,w,c
  6971  0013BE  010F               	movlb	15	; () banked
  6972  0013C0  6F27               	movwf	39,b	;volatile
  6973                           
  6974                           ; BSR set to: 15
  6975                           ;CANlib.h: 511: TXB2D2 = data[2];
  6976  0013C2  0100               	movlb	0	; () banked
  6977  0013C4  EE20 F002          	lfsr	2,2
  6978  0013C8  51AD               	movf	CANsendMessage@data& (0+255),w,b
  6979  0013CA  26D9               	addwf	fsr2l,f,c
  6980  0013CC  51AE               	movf	(CANsendMessage@data+1)& (0+255),w,b
  6981  0013CE  22DA               	addwfc	fsr2h,f,c
  6982  0013D0  50DF               	movf	indf2,w,c
  6983  0013D2  010F               	movlb	15	; () banked
  6984  0013D4  6F28               	movwf	40,b	;volatile
  6985                           
  6986                           ; BSR set to: 15
  6987                           ;CANlib.h: 512: TXB2D3 = data[3];
  6988  0013D6  0100               	movlb	0	; () banked
  6989  0013D8  EE20 F003          	lfsr	2,3
  6990  0013DC  51AD               	movf	CANsendMessage@data& (0+255),w,b
  6991  0013DE  26D9               	addwf	fsr2l,f,c
  6992  0013E0  51AE               	movf	(CANsendMessage@data+1)& (0+255),w,b
  6993  0013E2  22DA               	addwfc	fsr2h,f,c
  6994  0013E4  50DF               	movf	indf2,w,c
  6995  0013E6  010F               	movlb	15	; () banked
  6996  0013E8  6F29               	movwf	41,b	;volatile
  6997                           
  6998                           ; BSR set to: 15
  6999                           ;CANlib.h: 513: TXB2D4 = data[4];
  7000  0013EA  0100               	movlb	0	; () banked
  7001  0013EC  EE20 F004          	lfsr	2,4
  7002  0013F0  51AD               	movf	CANsendMessage@data& (0+255),w,b
  7003  0013F2  26D9               	addwf	fsr2l,f,c
  7004  0013F4  51AE               	movf	(CANsendMessage@data+1)& (0+255),w,b
  7005  0013F6  22DA               	addwfc	fsr2h,f,c
  7006  0013F8  50DF               	movf	indf2,w,c
  7007  0013FA  010F               	movlb	15	; () banked
  7008  0013FC  6F2A               	movwf	42,b	;volatile
  7009                           
  7010                           ; BSR set to: 15
  7011                           ;CANlib.h: 514: TXB2D5 = data[5];
  7012  0013FE  0100               	movlb	0	; () banked
  7013  001400  EE20 F005          	lfsr	2,5
  7014  001404  51AD               	movf	CANsendMessage@data& (0+255),w,b
  7015  001406  26D9               	addwf	fsr2l,f,c
  7016  001408  51AE               	movf	(CANsendMessage@data+1)& (0+255),w,b
  7017  00140A  22DA               	addwfc	fsr2h,f,c
  7018  00140C  50DF               	movf	indf2,w,c
  7019  00140E  010F               	movlb	15	; () banked
  7020  001410  6F2B               	movwf	43,b	;volatile
  7021                           
  7022                           ; BSR set to: 15
  7023                           ;CANlib.h: 515: TXB2D6 = data[6];
  7024  001412  0100               	movlb	0	; () banked
  7025  001414  EE20 F006          	lfsr	2,6
  7026  001418  51AD               	movf	CANsendMessage@data& (0+255),w,b
  7027  00141A  26D9               	addwf	fsr2l,f,c
  7028  00141C  51AE               	movf	(CANsendMessage@data+1)& (0+255),w,b
  7029  00141E  22DA               	addwfc	fsr2h,f,c
  7030  001420  50DF               	movf	indf2,w,c
  7031  001422  010F               	movlb	15	; () banked
  7032  001424  6F2C               	movwf	44,b	;volatile
  7033                           
  7034                           ; BSR set to: 15
  7035                           ;CANlib.h: 516: TXB2D7 = data[7];
  7036  001426  0100               	movlb	0	; () banked
  7037  001428  EE20 F007          	lfsr	2,7
  7038  00142C  51AD               	movf	CANsendMessage@data& (0+255),w,b
  7039  00142E  26D9               	addwf	fsr2l,f,c
  7040  001430  51AE               	movf	(CANsendMessage@data+1)& (0+255),w,b
  7041  001432  22DA               	addwfc	fsr2h,f,c
  7042  001434  50DF               	movf	indf2,w,c
  7043  001436  010F               	movlb	15	; () banked
  7044  001438  6F2D               	movwf	45,b	;volatile
  7045                           
  7046                           ; BSR set to: 15
  7047                           ;CANlib.h: 518: TXB2CONbits.TXREQ = 0x01;
  7048  00143A  010F               	movlb	15	; () banked
  7049  00143C  8720               	bsf	32,3,b	;volatile
  7050                           
  7051                           ; BSR set to: 15
  7052                           ;CANlib.h: 520: return;
  7053  00143E  0012               	return	
  7054  001440                     __end_of_CANsendMessage:
  7055                           	opt stack 0
  7056                           tblptru	equ	0xFF8
  7057                           tblptrh	equ	0xFF7
  7058                           tblptrl	equ	0xFF6
  7059                           tablat	equ	0xFF5
  7060                           prodh	equ	0xFF4
  7061                           prodl	equ	0xFF3
  7062                           intcon	equ	0xFF2
  7063                           postinc0	equ	0xFEE
  7064                           wreg	equ	0xFE8
  7065                           indf1	equ	0xFE7
  7066                           postdec1	equ	0xFE5
  7067                           fsr1h	equ	0xFE2
  7068                           fsr1l	equ	0xFE1
  7069                           indf2	equ	0xFDF
  7070                           fsr2h	equ	0xFDA
  7071                           fsr2l	equ	0xFD9
  7072                           status	equ	0xFD8
  7073                           
  7074 ;; *************** function _CANisTxReady *****************
  7075 ;; Defined at:
  7076 ;;		line 1154 in file "CANlib.h"
  7077 ;; Parameters:    Size  Location     Type
  7078 ;;		None
  7079 ;; Auto vars:     Size  Location     Type
  7080 ;;		None
  7081 ;; Return value:  Size  Location     Type
  7082 ;;                  1    wreg      unsigned char 
  7083 ;; Registers used:
  7084 ;;		wreg, status,2
  7085 ;; Tracked objects:
  7086 ;;		On entry : 0/0
  7087 ;;		On exit  : 0/0
  7088 ;;		Unchanged: 0/0
  7089 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  7090 ;;      Params:         0       0       0       0
  7091 ;;      Locals:         0       1       0       0
  7092 ;;      Temps:          0       0       0       0
  7093 ;;      Totals:         0       1       0       0
  7094 ;;Total ram usage:        1 bytes
  7095 ;; Hardware stack levels used:    1
  7096 ;; Hardware stack levels required when called:    2
  7097 ;; This function calls:
  7098 ;;		Nothing
  7099 ;; This function is called by:
  7100 ;;		_send_data
  7101 ;;		_battery_measure
  7102 ;; This function uses a non-reentrant model
  7103 ;;
  7104                           
  7105                           	psect	text13
  7106  0027AA                     __ptext13:
  7107                           	opt stack 0
  7108  0027AA                     _CANisTxReady:
  7109                           	opt stack 27
  7110                           
  7111                           ;CANlib.h: 1156: return (!TXB0CONbits.TXREQ || !TXB1CONbits.TXREQ || !TXB2CONbits.TXREQ)
      +                          ;
  7112                           
  7113                           ; BSR set to: 15
  7114                           ;incstack = 0
  7115  0027AA  0E01               	movlw	1
  7116  0027AC  0100               	movlb	0	; () banked
  7117  0027AE  6FA9               	movwf	_CANisTxReady$2993& (0+255),b
  7118                           
  7119                           ; BSR set to: 0
  7120  0027B0  010F               	movlb	15	; () banked
  7121  0027B2  A740               	btfss	64,3,b	;volatile
  7122  0027B4  D009               	goto	l556
  7123                           
  7124                           ; BSR set to: 15
  7125  0027B6  010F               	movlb	15	; () banked
  7126  0027B8  A730               	btfss	48,3,b	;volatile
  7127  0027BA  D006               	goto	l556
  7128                           
  7129                           ; BSR set to: 15
  7130  0027BC  010F               	movlb	15	; () banked
  7131  0027BE  A720               	btfss	32,3,b	;volatile
  7132  0027C0  D003               	goto	l556
  7133                           
  7134                           ; BSR set to: 15
  7135  0027C2  0E00               	movlw	0
  7136  0027C4  0100               	movlb	0	; () banked
  7137  0027C6  6FA9               	movwf	_CANisTxReady$2993& (0+255),b
  7138  0027C8                     l556:
  7139  0027C8  0100               	movlb	0	; () banked
  7140  0027CA  51A9               	movf	_CANisTxReady$2993& (0+255),w,b
  7141  0027CC  0012               	return	
  7142  0027CE                     __end_of_CANisTxReady:
  7143                           	opt stack 0
  7144                           tblptru	equ	0xFF8
  7145                           tblptrh	equ	0xFF7
  7146                           tblptrl	equ	0xFF6
  7147                           tablat	equ	0xFF5
  7148                           prodh	equ	0xFF4
  7149                           prodl	equ	0xFF3
  7150                           intcon	equ	0xFF2
  7151                           postinc0	equ	0xFEE
  7152                           wreg	equ	0xFE8
  7153                           indf1	equ	0xFE7
  7154                           postdec1	equ	0xFE5
  7155                           fsr1h	equ	0xFE2
  7156                           fsr1l	equ	0xFE1
  7157                           indf2	equ	0xFDF
  7158                           fsr2h	equ	0xFDA
  7159                           fsr2l	equ	0xFD9
  7160                           status	equ	0xFD8
  7161                           
  7162 ;; *************** function _abs *****************
  7163 ;; Defined at:
  7164 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\abs.c"
  7165 ;; Parameters:    Size  Location     Type
  7166 ;;  a               2   14[BANK0 ] int 
  7167 ;; Auto vars:     Size  Location     Type
  7168 ;;		None
  7169 ;; Return value:  Size  Location     Type
  7170 ;;                  2   14[BANK0 ] int 
  7171 ;; Registers used:
  7172 ;;		wreg, status,2, status,0
  7173 ;; Tracked objects:
  7174 ;;		On entry : 0/0
  7175 ;;		On exit  : 0/0
  7176 ;;		Unchanged: 0/0
  7177 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  7178 ;;      Params:         0       2       0       0
  7179 ;;      Locals:         0       0       0       0
  7180 ;;      Temps:          0       2       0       0
  7181 ;;      Totals:         0       4       0       0
  7182 ;;Total ram usage:        4 bytes
  7183 ;; Hardware stack levels used:    1
  7184 ;; Hardware stack levels required when called:    2
  7185 ;; This function calls:
  7186 ;;		Nothing
  7187 ;; This function is called by:
  7188 ;;		_main
  7189 ;; This function uses a non-reentrant model
  7190 ;;
  7191                           
  7192                           	psect	text14
  7193  00277E                     __ptext14:
  7194                           	opt stack 0
  7195  00277E                     _abs:
  7196                           	opt stack 28
  7197                           
  7198                           ; BSR set to: 0
  7199                           ;incstack = 0
  7200  00277E  0100               	movlb	0	; () banked
  7201  002780  AFB8               	btfss	(abs@a+1)& (0+255),7,b
  7202  002782  D00E               	goto	l816
  7203                           
  7204                           ; BSR set to: 0
  7205  002784  C0B7  F0B9         	movff	abs@a,??_abs
  7206  002788  C0B8  F0BA         	movff	abs@a+1,??_abs+1
  7207  00278C  0100               	movlb	0	; () banked
  7208  00278E  1FB9               	comf	??_abs& (0+255),f,b
  7209  002790  1FBA               	comf	(??_abs+1)& (0+255),f,b
  7210  002792  4BB9               	infsnz	??_abs& (0+255),f,b
  7211  002794  2BBA               	incf	(??_abs+1)& (0+255),f,b
  7212  002796  C0B9  F0B7         	movff	??_abs,?_abs
  7213  00279A  C0BA  F0B8         	movff	??_abs+1,?_abs+1
  7214  00279E  0012               	return	
  7215  0027A0                     l816:
  7216                           
  7217                           ; BSR set to: 0
  7218  0027A0  C0B7  F0B7         	movff	abs@a,?_abs
  7219  0027A4  C0B8  F0B8         	movff	abs@a+1,?_abs+1
  7220                           
  7221                           ; BSR set to: 0
  7222  0027A8  0012               	return		;funcret
  7223  0027AA                     __end_of_abs:
  7224                           	opt stack 0
  7225                           tblptru	equ	0xFF8
  7226                           tblptrh	equ	0xFF7
  7227                           tblptrl	equ	0xFF6
  7228                           tablat	equ	0xFF5
  7229                           prodh	equ	0xFF4
  7230                           prodl	equ	0xFF3
  7231                           intcon	equ	0xFF2
  7232                           postinc0	equ	0xFEE
  7233                           wreg	equ	0xFE8
  7234                           indf1	equ	0xFE7
  7235                           postdec1	equ	0xFE5
  7236                           fsr1h	equ	0xFE2
  7237                           fsr1l	equ	0xFE1
  7238                           indf2	equ	0xFDF
  7239                           fsr2h	equ	0xFDA
  7240                           fsr2l	equ	0xFD9
  7241                           status	equ	0xFD8
  7242                           
  7243 ;; *************** function _SetDCEPWM1 *****************
  7244 ;; Defined at:
  7245 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\pic18\plib\PWM\ew1setdc.c"
  7246 ;; Parameters:    Size  Location     Type
  7247 ;;  dutycycle       2    0[BANK0 ] unsigned int 
  7248 ;; Auto vars:     Size  Location     Type
  7249 ;;  DCycle          2    4[BANK0 ] struct PWMDC
  7250 ;; Return value:  Size  Location     Type
  7251 ;;		None               void
  7252 ;; Registers used:
  7253 ;;		wreg, status,2, status,0
  7254 ;; Tracked objects:
  7255 ;;		On entry : 0/0
  7256 ;;		On exit  : 0/0
  7257 ;;		Unchanged: 0/0
  7258 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  7259 ;;      Params:         0       2       0       0
  7260 ;;      Locals:         0       2       0       0
  7261 ;;      Temps:          0       2       0       0
  7262 ;;      Totals:         0       6       0       0
  7263 ;;Total ram usage:        6 bytes
  7264 ;; Hardware stack levels used:    1
  7265 ;; Hardware stack levels required when called:    2
  7266 ;; This function calls:
  7267 ;;		Nothing
  7268 ;; This function is called by:
  7269 ;;		_main
  7270 ;; This function uses a non-reentrant model
  7271 ;;
  7272                           
  7273                           	psect	text15
  7274  00268C                     __ptext15:
  7275                           	opt stack 0
  7276  00268C                     _SetDCEPWM1:
  7277                           	opt stack 28
  7278                           
  7279                           ; BSR set to: 0
  7280                           ;incstack = 0
  7281  00268C  C0A9  F0AB         	movff	SetDCEPWM1@dutycycle,??_SetDCEPWM1
  7282  002690  C0AA  F0AC         	movff	SetDCEPWM1@dutycycle+1,??_SetDCEPWM1+1
  7283  002694  0E06               	movlw	6
  7284  002696                     u6245:
  7285  002696  90D8               	bcf	status,0,c
  7286  002698  0100               	movlb	0	; () banked
  7287  00269A  37AB               	rlcf	??_SetDCEPWM1& (0+255),f,b
  7288  00269C  37AC               	rlcf	(??_SetDCEPWM1+1)& (0+255),f,b
  7289  00269E  2EE8               	decfsz	wreg,f,c
  7290  0026A0  D7FA               	goto	u6245
  7291  0026A2  C0AB  F0AD         	movff	??_SetDCEPWM1,SetDCEPWM1@DCycle
  7292  0026A6  C0AC  F0AE         	movff	??_SetDCEPWM1+1,SetDCEPWM1@DCycle+1
  7293                           
  7294                           ; BSR set to: 0
  7295  0026AA  C0AE  FFBB         	movff	SetDCEPWM1@DCycle+1,4027	;volatile
  7296  0026AE  C0AD  F0AB         	movff	SetDCEPWM1@DCycle,??_SetDCEPWM1
  7297  0026B2  0100               	movlb	0	; () banked
  7298  0026B4  90D8               	bcf	status,0,c
  7299  0026B6  33AB               	rrcf	??_SetDCEPWM1& (0+255),f,b
  7300  0026B8  0100               	movlb	0	; () banked
  7301  0026BA  90D8               	bcf	status,0,c
  7302  0026BC  33AB               	rrcf	??_SetDCEPWM1& (0+255),f,b
  7303  0026BE  0E30               	movlw	48
  7304  0026C0  0100               	movlb	0	; () banked
  7305  0026C2  17AB               	andwf	??_SetDCEPWM1& (0+255),f,b
  7306  0026C4  50BA               	movf	4026,w,c	;volatile
  7307  0026C6  0BCF               	andlw	207
  7308  0026C8  0100               	movlb	0	; () banked
  7309  0026CA  11AB               	iorwf	??_SetDCEPWM1& (0+255),w,b
  7310  0026CC  6EBA               	movwf	4026,c	;volatile
  7311                           
  7312                           ; BSR set to: 0
  7313  0026CE  0012               	return		;funcret
  7314  0026D0                     __end_of_SetDCEPWM1:
  7315                           	opt stack 0
  7316                           tblptru	equ	0xFF8
  7317                           tblptrh	equ	0xFF7
  7318                           tblptrl	equ	0xFF6
  7319                           tablat	equ	0xFF5
  7320                           prodh	equ	0xFF4
  7321                           prodl	equ	0xFF3
  7322                           intcon	equ	0xFF2
  7323                           postinc0	equ	0xFEE
  7324                           wreg	equ	0xFE8
  7325                           indf1	equ	0xFE7
  7326                           postdec1	equ	0xFE5
  7327                           fsr1h	equ	0xFE2
  7328                           fsr1l	equ	0xFE1
  7329                           indf2	equ	0xFDF
  7330                           fsr2h	equ	0xFDA
  7331                           fsr2l	equ	0xFD9
  7332                           status	equ	0xFD8
  7333                           
  7334 ;; *************** function _OpenTimer2 *****************
  7335 ;; Defined at:
  7336 ;;		line 17 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\pic18\plib\Timers\t2open.c"
  7337 ;; Parameters:    Size  Location     Type
  7338 ;;  config          1    wreg     unsigned char 
  7339 ;; Auto vars:     Size  Location     Type
  7340 ;;  config          1    0[BANK0 ] unsigned char 
  7341 ;; Return value:  Size  Location     Type
  7342 ;;		None               void
  7343 ;; Registers used:
  7344 ;;		wreg, status,2, status,0
  7345 ;; Tracked objects:
  7346 ;;		On entry : 0/0
  7347 ;;		On exit  : 0/0
  7348 ;;		Unchanged: 0/0
  7349 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  7350 ;;      Params:         0       0       0       0
  7351 ;;      Locals:         0       1       0       0
  7352 ;;      Temps:          0       0       0       0
  7353 ;;      Totals:         0       1       0       0
  7354 ;;Total ram usage:        1 bytes
  7355 ;; Hardware stack levels used:    1
  7356 ;; Hardware stack levels required when called:    2
  7357 ;; This function calls:
  7358 ;;		Nothing
  7359 ;; This function is called by:
  7360 ;;		_main
  7361 ;; This function uses a non-reentrant model
  7362 ;;
  7363                           
  7364                           	psect	text16
  7365  0027CE                     __ptext16:
  7366                           	opt stack 0
  7367  0027CE                     _OpenTimer2:
  7368                           	opt stack 28
  7369                           
  7370                           ; BSR set to: 0
  7371                           ;incstack = 0
  7372                           ;OpenTimer2@config stored from wreg
  7373  0027CE  0100               	movlb	0	; () banked
  7374  0027D0  6FA9               	movwf	OpenTimer2@config& (0+255),b
  7375  0027D2  0100               	movlb	0	; () banked
  7376  0027D4  51A9               	movf	OpenTimer2@config& (0+255),w,b
  7377  0027D6  0BFB               	andlw	251
  7378  0027D8  6ECA               	movwf	4042,c	;volatile
  7379                           
  7380                           ; BSR set to: 0
  7381  0027DA  0E00               	movlw	0
  7382  0027DC  6ECC               	movwf	4044,c	;volatile
  7383                           
  7384                           ; BSR set to: 0
  7385  0027DE  929E               	bcf	3998,1,c	;volatile
  7386                           
  7387                           ; BSR set to: 0
  7388  0027E0  0100               	movlb	0	; () banked
  7389  0027E2  AFA9               	btfss	OpenTimer2@config& (0+255),7,b
  7390  0027E4  D002               	goto	l764
  7391                           
  7392                           ; BSR set to: 0
  7393  0027E6  829D               	bsf	3997,1,c	;volatile
  7394  0027E8  D001               	goto	l765
  7395  0027EA                     l764:
  7396                           
  7397                           ; BSR set to: 0
  7398  0027EA  929D               	bcf	3997,1,c	;volatile
  7399  0027EC                     l765:
  7400                           
  7401                           ; BSR set to: 0
  7402  0027EC  84CA               	bsf	4042,2,c	;volatile
  7403                           
  7404                           ; BSR set to: 0
  7405  0027EE  0012               	return		;funcret
  7406  0027F0                     __end_of_OpenTimer2:
  7407                           	opt stack 0
  7408                           tblptru	equ	0xFF8
  7409                           tblptrh	equ	0xFF7
  7410                           tblptrl	equ	0xFF6
  7411                           tablat	equ	0xFF5
  7412                           prodh	equ	0xFF4
  7413                           prodl	equ	0xFF3
  7414                           intcon	equ	0xFF2
  7415                           postinc0	equ	0xFEE
  7416                           wreg	equ	0xFE8
  7417                           indf1	equ	0xFE7
  7418                           postdec1	equ	0xFE5
  7419                           fsr1h	equ	0xFE2
  7420                           fsr1l	equ	0xFE1
  7421                           indf2	equ	0xFDF
  7422                           fsr2h	equ	0xFDA
  7423                           fsr2l	equ	0xFD9
  7424                           status	equ	0xFD8
  7425                           
  7426 ;; *************** function _OpenEPWM1 *****************
  7427 ;; Defined at:
  7428 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\pic18\plib\PWM\ew1open.c"
  7429 ;; Parameters:    Size  Location     Type
  7430 ;;  period          1    wreg     unsigned char 
  7431 ;; Auto vars:     Size  Location     Type
  7432 ;;  period          1    0[BANK0 ] unsigned char 
  7433 ;; Return value:  Size  Location     Type
  7434 ;;		None               void
  7435 ;; Registers used:
  7436 ;;		wreg, status,2
  7437 ;; Tracked objects:
  7438 ;;		On entry : 0/0
  7439 ;;		On exit  : 0/0
  7440 ;;		Unchanged: 0/0
  7441 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  7442 ;;      Params:         0       0       0       0
  7443 ;;      Locals:         0       1       0       0
  7444 ;;      Temps:          0       0       0       0
  7445 ;;      Totals:         0       1       0       0
  7446 ;;Total ram usage:        1 bytes
  7447 ;; Hardware stack levels used:    1
  7448 ;; Hardware stack levels required when called:    2
  7449 ;; This function calls:
  7450 ;;		Nothing
  7451 ;; This function is called by:
  7452 ;;		_main
  7453 ;; This function uses a non-reentrant model
  7454 ;;
  7455                           
  7456                           	psect	text17
  7457  00281C                     __ptext17:
  7458                           	opt stack 0
  7459  00281C                     _OpenEPWM1:
  7460                           	opt stack 28
  7461                           
  7462                           ; BSR set to: 0
  7463                           ;incstack = 0
  7464                           ;OpenEPWM1@period stored from wreg
  7465  00281C  0100               	movlb	0	; () banked
  7466  00281E  6FA9               	movwf	OpenEPWM1@period& (0+255),b
  7467  002820  0E0C               	movlw	12
  7468  002822  6EBA               	movwf	4026,c	;volatile
  7469  002824  94CA               	bcf	4042,2,c	;volatile
  7470  002826  C0A9  FFCB         	movff	OpenEPWM1@period,4043	;volatile
  7471  00282A  84CA               	bsf	4042,2,c	;volatile
  7472  00282C  0012               	return		;funcret
  7473  00282E                     __end_of_OpenEPWM1:
  7474                           	opt stack 0
  7475                           tblptru	equ	0xFF8
  7476                           tblptrh	equ	0xFF7
  7477                           tblptrl	equ	0xFF6
  7478                           tablat	equ	0xFF5
  7479                           prodh	equ	0xFF4
  7480                           prodl	equ	0xFF3
  7481                           intcon	equ	0xFF2
  7482                           postinc0	equ	0xFEE
  7483                           wreg	equ	0xFE8
  7484                           indf1	equ	0xFE7
  7485                           postdec1	equ	0xFE5
  7486                           fsr1h	equ	0xFE2
  7487                           fsr1l	equ	0xFE1
  7488                           indf2	equ	0xFDF
  7489                           fsr2h	equ	0xFDA
  7490                           fsr2l	equ	0xFD9
  7491                           status	equ	0xFD8
  7492                           
  7493 ;; *************** function _CANisTXwarningON *****************
  7494 ;; Defined at:
  7495 ;;		line 1119 in file "CANlib.h"
  7496 ;; Parameters:    Size  Location     Type
  7497 ;;		None
  7498 ;; Auto vars:     Size  Location     Type
  7499 ;;		None
  7500 ;; Return value:  Size  Location     Type
  7501 ;;                  1    wreg      unsigned char 
  7502 ;; Registers used:
  7503 ;;		wreg
  7504 ;; Tracked objects:
  7505 ;;		On entry : 0/0
  7506 ;;		On exit  : 0/0
  7507 ;;		Unchanged: 0/0
  7508 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  7509 ;;      Params:         0       0       0       0
  7510 ;;      Locals:         0       0       0       0
  7511 ;;      Temps:          0       0       0       0
  7512 ;;      Totals:         0       0       0       0
  7513 ;;Total ram usage:        0 bytes
  7514 ;; Hardware stack levels used:    1
  7515 ;; Hardware stack levels required when called:    2
  7516 ;; This function calls:
  7517 ;;		Nothing
  7518 ;; This function is called by:
  7519 ;;		_main
  7520 ;; This function uses a non-reentrant model
  7521 ;;
  7522                           
  7523                           	psect	text18
  7524  00282E                     __ptext18:
  7525                           	opt stack 0
  7526  00282E                     _CANisTXwarningON:
  7527                           	opt stack 28
  7528                           
  7529                           ;CANlib.h: 1121: return (COMSTATbits.TXWARN);
  7530                           
  7531                           ;incstack = 0
  7532  00282E  A474               	btfss	3956,2,c	;volatile
  7533  002830  D002               	goto	u6210
  7534  002832  0E01               	movlw	1
  7535  002834  0012               	return	
  7536  002836                     u6210:
  7537  002836  0E00               	movlw	0
  7538  002838  0012               	return	
  7539  00283A                     __end_of_CANisTXwarningON:
  7540                           	opt stack 0
  7541                           tblptru	equ	0xFF8
  7542                           tblptrh	equ	0xFF7
  7543                           tblptrl	equ	0xFF6
  7544                           tablat	equ	0xFF5
  7545                           prodh	equ	0xFF4
  7546                           prodl	equ	0xFF3
  7547                           intcon	equ	0xFF2
  7548                           postinc0	equ	0xFEE
  7549                           wreg	equ	0xFE8
  7550                           indf1	equ	0xFE7
  7551                           postdec1	equ	0xFE5
  7552                           fsr1h	equ	0xFE2
  7553                           fsr1l	equ	0xFE1
  7554                           indf2	equ	0xFDF
  7555                           fsr2h	equ	0xFDA
  7556                           fsr2l	equ	0xFD9
  7557                           status	equ	0xFD8
  7558                           
  7559 ;; *************** function _CANisRXwarningON *****************
  7560 ;; Defined at:
  7561 ;;		line 1127 in file "CANlib.h"
  7562 ;; Parameters:    Size  Location     Type
  7563 ;;		None
  7564 ;; Auto vars:     Size  Location     Type
  7565 ;;		None
  7566 ;; Return value:  Size  Location     Type
  7567 ;;                  1    wreg      unsigned char 
  7568 ;; Registers used:
  7569 ;;		wreg
  7570 ;; Tracked objects:
  7571 ;;		On entry : 0/0
  7572 ;;		On exit  : 0/0
  7573 ;;		Unchanged: 0/0
  7574 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  7575 ;;      Params:         0       0       0       0
  7576 ;;      Locals:         0       0       0       0
  7577 ;;      Temps:          0       0       0       0
  7578 ;;      Totals:         0       0       0       0
  7579 ;;Total ram usage:        0 bytes
  7580 ;; Hardware stack levels used:    1
  7581 ;; Hardware stack levels required when called:    2
  7582 ;; This function calls:
  7583 ;;		Nothing
  7584 ;; This function is called by:
  7585 ;;		_main
  7586 ;; This function uses a non-reentrant model
  7587 ;;
  7588                           
  7589                           	psect	text19
  7590  00283A                     __ptext19:
  7591                           	opt stack 0
  7592  00283A                     _CANisRXwarningON:
  7593                           	opt stack 28
  7594                           
  7595                           ;CANlib.h: 1129: return (COMSTATbits.RXWARN);
  7596                           
  7597                           ;incstack = 0
  7598  00283A  A274               	btfss	3956,1,c	;volatile
  7599  00283C  D002               	goto	u6220
  7600  00283E  0E01               	movlw	1
  7601  002840  0012               	return	
  7602  002842                     u6220:
  7603  002842  0E00               	movlw	0
  7604  002844  0012               	return	
  7605  002846                     __end_of_CANisRXwarningON:
  7606                           	opt stack 0
  7607                           tblptru	equ	0xFF8
  7608                           tblptrh	equ	0xFF7
  7609                           tblptrl	equ	0xFF6
  7610                           tablat	equ	0xFF5
  7611                           prodh	equ	0xFF4
  7612                           prodl	equ	0xFF3
  7613                           intcon	equ	0xFF2
  7614                           postinc0	equ	0xFEE
  7615                           wreg	equ	0xFE8
  7616                           indf1	equ	0xFE7
  7617                           postdec1	equ	0xFE5
  7618                           fsr1h	equ	0xFE2
  7619                           fsr1l	equ	0xFE1
  7620                           indf2	equ	0xFDF
  7621                           fsr2h	equ	0xFDA
  7622                           fsr2l	equ	0xFD9
  7623                           status	equ	0xFD8
  7624                           
  7625 ;; *************** function _ISR_bassa *****************
  7626 ;; Defined at:
  7627 ;;		line 89 in file "motore.c"
  7628 ;; Parameters:    Size  Location     Type
  7629 ;;		None
  7630 ;; Auto vars:     Size  Location     Type
  7631 ;;		None
  7632 ;; Return value:  Size  Location     Type
  7633 ;;		None               void
  7634 ;; Registers used:
  7635 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7636 ;; Tracked objects:
  7637 ;;		On entry : 0/0
  7638 ;;		On exit  : 0/0
  7639 ;;		Unchanged: 0/0
  7640 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  7641 ;;      Params:         0       0       0       0
  7642 ;;      Locals:         0       0       0       0
  7643 ;;      Temps:         19       0       0       0
  7644 ;;      Totals:        19       0       0       0
  7645 ;;Total ram usage:       19 bytes
  7646 ;; Hardware stack levels used:    1
  7647 ;; Hardware stack levels required when called:    1
  7648 ;; This function calls:
  7649 ;;		_CANisRxReady
  7650 ;;		_CANreceiveMessage
  7651 ;;		i1_SetOutputEPWM1
  7652 ;; This function is called by:
  7653 ;;		Interrupt level 1
  7654 ;; This function uses a non-reentrant model
  7655 ;;
  7656                           
  7657                           	psect	intcodelo
  7658  000018                     __pintcodelo:
  7659                           	opt stack 0
  7660  000018                     _ISR_bassa:
  7661                           	opt stack 26
  7662                           
  7663                           ;incstack = 0
  7664  000018  8043               	bsf	btemp,0,c	;set compiler interrupt flag (level 1)
  7665  00001A  CFD8 F00F          	movff	status,??_ISR_bassa+2
  7666  00001E  CFE8 F010          	movff	wreg,??_ISR_bassa+3
  7667  000022  CFE0 F011          	movff	bsr,??_ISR_bassa+4
  7668  000026  CFFA F012          	movff	pclath,??_ISR_bassa+5
  7669  00002A  CFFB F013          	movff	pclatu,??_ISR_bassa+6
  7670  00002E  CFE9 F014          	movff	fsr0l,??_ISR_bassa+7
  7671  000032  CFEA F015          	movff	fsr0h,??_ISR_bassa+8
  7672  000036  CFE1 F016          	movff	fsr1l,??_ISR_bassa+9
  7673  00003A  CFE2 F017          	movff	fsr1h,??_ISR_bassa+10
  7674  00003E  CFD9 F018          	movff	fsr2l,??_ISR_bassa+11
  7675  000042  CFDA F019          	movff	fsr2h,??_ISR_bassa+12
  7676  000046  CFF3 F01A          	movff	prodl,??_ISR_bassa+13
  7677  00004A  CFF4 F01B          	movff	prodh,??_ISR_bassa+14
  7678  00004E  CFF6 F01C          	movff	tblptrl,??_ISR_bassa+15
  7679  000052  CFF7 F01D          	movff	tblptrh,??_ISR_bassa+16
  7680  000056  CFF8 F01E          	movff	tblptru,??_ISR_bassa+17
  7681  00005A  CFF5 F01F          	movff	tablat,??_ISR_bassa+18
  7682                           
  7683                           ;motore.c: 90: if ((PIR3bits.RXB0IF == 1) || (PIR3bits.RXB1IF == 1)) {
  7684  00005E  A0A4               	btfss	4004,0,c	;volatile
  7685  000060  B2A4               	btfsc	4004,1,c	;volatile
  7686  000062  D001               	goto	i1l3820
  7687  000064  D071               	goto	i1l650
  7688  000066                     i1l3820:
  7689                           
  7690                           ;motore.c: 91: if (CANisRxReady()) {
  7691  000066  EC03  F014         	call	_CANisRxReady	;wreg free
  7692  00006A  0900               	iorlw	0
  7693  00006C  B4D8               	btfsc	status,2,c
  7694  00006E  D06A               	goto	i1l653
  7695                           
  7696                           ;motore.c: 92: CANreceiveMessage(&msg);
  7697  000070  0E82               	movlw	low _msg
  7698  000072  6E01               	movwf	CANreceiveMessage@msg,c
  7699  000074  0E00               	movlw	high _msg
  7700  000076  6E02               	movwf	CANreceiveMessage@msg+1,c
  7701  000078  EC20  F00A         	call	_CANreceiveMessage	;wreg free
  7702                           
  7703                           ;motore.c: 93: if (msg.identifier == 0b00000000000000000000000000011) {
  7704  00007C  0E03               	movlw	3
  7705  00007E  0100               	movlb	0	; () banked
  7706  000080  1982               	xorwf	_msg& (0+255),w,b
  7707  000082  0100               	movlb	0	; () banked
  7708  000084  1183               	iorwf	(_msg+1)& (0+255),w,b
  7709  000086  0100               	movlb	0	; () banked
  7710  000088  1184               	iorwf	(_msg+2)& (0+255),w,b
  7711  00008A  0100               	movlb	0	; () banked
  7712  00008C  1185               	iorwf	(_msg+3)& (0+255),w,b
  7713  00008E  A4D8               	btfss	status,2,c
  7714  000090  D017               	goto	i1l3836
  7715                           
  7716                           ; BSR set to: 0
  7717                           ;motore.c: 95: requestSpeed = msg.data[0];
  7718  000092  C086  F038         	movff	_msg+4,_requestSpeed	;volatile
  7719                           
  7720                           ;motore.c: 96: dir = msg.data[1];
  7721  000096  C087  F03B         	movff	_msg+5,_dir	;volatile
  7722  00009A  6A3C               	clrf	_dir+1,c	;volatile
  7723                           
  7724                           ; BSR set to: 0
  7725                           ;motore.c: 97: if (dir == 1) {
  7726  00009C  043B               	decf	_dir,w,c	;volatile
  7727  00009E  103C               	iorwf	_dir+1,w,c	;volatile
  7728  0000A0  A4D8               	btfss	status,2,c
  7729  0000A2  D005               	goto	i1l3832
  7730                           
  7731                           ; BSR set to: 0
  7732                           ;motore.c: 98: SetOutputEPWM1(0b01111111, 0b11111100);
  7733  0000A4  0EFC               	movlw	252
  7734  0000A6  6E01               	movwf	i1SetOutputEPWM1@outputmode,c
  7735  0000A8  0E7F               	movlw	127
  7736  0000AA  EC68  F013         	call	i1_SetOutputEPWM1
  7737  0000AE                     i1l3832:
  7738                           
  7739                           ;motore.c: 99: }
  7740                           ;motore.c: 100: if (dir == 0) {
  7741  0000AE  503B               	movf	_dir,w,c	;volatile
  7742  0000B0  103C               	iorwf	_dir+1,w,c	;volatile
  7743  0000B2  A4D8               	btfss	status,2,c
  7744  0000B4  D005               	goto	i1l3836
  7745                           
  7746                           ;motore.c: 101: SetOutputEPWM1(0b11111111, 0b11111100);
  7747  0000B6  0EFC               	movlw	252
  7748  0000B8  6E01               	movwf	i1SetOutputEPWM1@outputmode,c
  7749  0000BA  0EFF               	movlw	255
  7750  0000BC  EC68  F013         	call	i1_SetOutputEPWM1
  7751  0000C0                     i1l3836:
  7752                           
  7753                           ;motore.c: 102: }
  7754                           ;motore.c: 106: }
  7755                           ;motore.c: 107: if (msg.identifier == 0b00000000000000000000000000001) {
  7756  0000C0  0100               	movlb	0	; () banked
  7757  0000C2  0582               	decf	_msg& (0+255),w,b
  7758  0000C4  0100               	movlb	0	; () banked
  7759  0000C6  1183               	iorwf	(_msg+1)& (0+255),w,b
  7760  0000C8  0100               	movlb	0	; () banked
  7761  0000CA  1184               	iorwf	(_msg+2)& (0+255),w,b
  7762  0000CC  0100               	movlb	0	; () banked
  7763  0000CE  1185               	iorwf	(_msg+3)& (0+255),w,b
  7764  0000D0  A4D8               	btfss	status,2,c
  7765  0000D2  D003               	goto	i1l3842
  7766                           
  7767                           ; BSR set to: 0
  7768                           ;motore.c: 108: requestSpeed = 0;
  7769  0000D4  0E00               	movlw	0
  7770  0000D6  6E38               	movwf	_requestSpeed,c	;volatile
  7771                           
  7772                           ; BSR set to: 0
  7773                           ;motore.c: 109: PORTAbits.RA1 = 1;
  7774  0000D8  8280               	bsf	3968,1,c	;volatile
  7775  0000DA                     i1l3842:
  7776                           
  7777                           ; BSR set to: 0
  7778                           ;motore.c: 110: }
  7779                           ;motore.c: 111: if (msg.identifier == 0b00000000000000000000000000110) {
  7780  0000DA  0E06               	movlw	6
  7781  0000DC  0100               	movlb	0	; () banked
  7782  0000DE  1982               	xorwf	_msg& (0+255),w,b
  7783  0000E0  0100               	movlb	0	; () banked
  7784  0000E2  1183               	iorwf	(_msg+1)& (0+255),w,b
  7785  0000E4  0100               	movlb	0	; () banked
  7786  0000E6  1184               	iorwf	(_msg+2)& (0+255),w,b
  7787  0000E8  0100               	movlb	0	; () banked
  7788  0000EA  1185               	iorwf	(_msg+3)& (0+255),w,b
  7789  0000EC  A4D8               	btfss	status,2,c
  7790  0000EE  D00E               	goto	i1l3852
  7791                           
  7792                           ; BSR set to: 0
  7793                           ;motore.c: 113: left_speed = msg.data[1];
  7794  0000F0  C087  F032         	movff	_msg+5,_left_speed
  7795  0000F4  6A33               	clrf	_left_speed+1,c
  7796                           
  7797                           ; BSR set to: 0
  7798                           ;motore.c: 114: left_speed = ((left_speed<<8)|(msg.data[0]));
  7799  0000F6  5032               	movf	_left_speed,w,c
  7800  0000F8  6E0D               	movwf	??_ISR_bassa& (0+255),c
  7801  0000FA  0100               	movlb	0	; () banked
  7802  0000FC  5186               	movf	(_msg+4)& (0+255),w,b
  7803  0000FE  6E32               	movwf	_left_speed,c
  7804  000100  C00D  F033         	movff	??_ISR_bassa,_left_speed+1
  7805                           
  7806                           ; BSR set to: 0
  7807                           ;motore.c: 115: right_speed = msg.data[1];
  7808  000104  C087  F034         	movff	_msg+5,_right_speed
  7809  000108  6A35               	clrf	_right_speed+1,c
  7810                           
  7811                           ; BSR set to: 0
  7812                           ;motore.c: 116: speed_fetched = 1;
  7813  00010A  803A               	bsf	_speed_fetched/(0+8),_speed_fetched& (0+7),c
  7814  00010C                     i1l3852:
  7815                           
  7816                           ; BSR set to: 0
  7817                           ;motore.c: 118: }
  7818                           ;motore.c: 119: if (msg.identifier == 0b00000000000000000000000000010) {
  7819  00010C  0E02               	movlw	2
  7820  00010E  0100               	movlb	0	; () banked
  7821  000110  1982               	xorwf	_msg& (0+255),w,b
  7822  000112  0100               	movlb	0	; () banked
  7823  000114  1183               	iorwf	(_msg+1)& (0+255),w,b
  7824  000116  0100               	movlb	0	; () banked
  7825  000118  1184               	iorwf	(_msg+2)& (0+255),w,b
  7826  00011A  0100               	movlb	0	; () banked
  7827  00011C  1185               	iorwf	(_msg+3)& (0+255),w,b
  7828  00011E  B4D8               	btfsc	status,2,c
  7829  000120  D006               	goto	i1l3858
  7830  000122  D010               	goto	i1l653
  7831  000124                     i1l661:
  7832                           
  7833                           ; BSR set to: 0
  7834  000124  8239               	bsf	_centralina_abs/(0+8),_centralina_abs& (0+7),c
  7835                           
  7836                           ;motore.c: 122: break;
  7837  000126  D00E               	goto	i1l653
  7838  000128                     i1l663:
  7839                           
  7840                           ; BSR set to: 0
  7841  000128  8639               	bsf	_centralina_sterzo/(0+8),_centralina_sterzo& (0+7),c
  7842  00012A                     i1l664:
  7843                           
  7844                           ; BSR set to: 0
  7845  00012A  8439               	bsf	_centralina_comando/(0+8),_centralina_comando& (0+7),c
  7846                           
  7847                           ; BSR set to: 0
  7848                           ;motore.c: 128: }
  7849                           
  7850                           ;motore.c: 127: break;
  7851  00012C  D00B               	goto	i1l653
  7852  00012E                     i1l3858:
  7853                           
  7854                           ; BSR set to: 0
  7855  00012E  0100               	movlb	0	; () banked
  7856  000130  5186               	movf	(_msg+4)& (0+255),w,b
  7857                           
  7858                           ; Switch size 1, requested type "space"
  7859                           ; Number of cases is 3, Range of values is 1 to 3
  7860                           ; switch strategies available:
  7861                           ; Name         Instructions Cycles
  7862                           ; simple_byte           10     6 (average)
  7863                           ;	Chosen strategy is simple_byte
  7864  000132  0A01               	xorlw	1	; case 1
  7865  000134  B4D8               	btfsc	status,2,c
  7866  000136  D7F6               	goto	i1l661
  7867  000138  0A03               	xorlw	3	; case 2
  7868  00013A  B4D8               	btfsc	status,2,c
  7869  00013C  D7F5               	goto	i1l663
  7870  00013E  0A01               	xorlw	1	; case 3
  7871  000140  B4D8               	btfsc	status,2,c
  7872  000142  D7F3               	goto	i1l664
  7873  000144                     i1l653:
  7874                           
  7875                           ;motore.c: 130: }
  7876                           ;motore.c: 131: }
  7877                           ;motore.c: 132: PIR3bits.RXB0IF = 0;
  7878  000144  90A4               	bcf	4004,0,c	;volatile
  7879                           
  7880                           ;motore.c: 133: PIR3bits.RXB1IF = 0;
  7881  000146  92A4               	bcf	4004,1,c	;volatile
  7882  000148                     i1l650:
  7883                           
  7884                           ;motore.c: 134: }
  7885                           ;motore.c: 135: if (PIR2bits.TMR3IF) {
  7886  000148  A2A1               	btfss	4001,1,c	;volatile
  7887  00014A  D00B               	goto	i1l666
  7888                           
  7889                           ;motore.c: 136: timeCounter++;
  7890  00014C  0E01               	movlw	1
  7891  00014E  2628               	addwf	_timeCounter,f,c
  7892  000150  0E00               	movlw	0
  7893  000152  2229               	addwfc	_timeCounter+1,f,c
  7894  000154  222A               	addwfc	_timeCounter+2,f,c
  7895  000156  222B               	addwfc	_timeCounter+3,f,c
  7896                           
  7897                           ;motore.c: 137: TMR3H = 0x63;
  7898  000158  0E63               	movlw	99
  7899  00015A  6EB3               	movwf	4019,c	;volatile
  7900                           
  7901                           ;motore.c: 138: TMR3L = 0xC0;
  7902  00015C  0EC0               	movlw	192
  7903  00015E  6EB2               	movwf	4018,c	;volatile
  7904                           
  7905                           ;motore.c: 139: PIR2bits.TMR3IF = 0;
  7906  000160  92A1               	bcf	4001,1,c	;volatile
  7907  000162                     i1l666:
  7908  000162  C01F  FFF5         	movff	??_ISR_bassa+18,tablat
  7909  000166  C01E  FFF8         	movff	??_ISR_bassa+17,tblptru
  7910  00016A  C01D  FFF7         	movff	??_ISR_bassa+16,tblptrh
  7911  00016E  C01C  FFF6         	movff	??_ISR_bassa+15,tblptrl
  7912  000172  C01B  FFF4         	movff	??_ISR_bassa+14,prodh
  7913  000176  C01A  FFF3         	movff	??_ISR_bassa+13,prodl
  7914  00017A  C019  FFDA         	movff	??_ISR_bassa+12,fsr2h
  7915  00017E  C018  FFD9         	movff	??_ISR_bassa+11,fsr2l
  7916  000182  C017  FFE2         	movff	??_ISR_bassa+10,fsr1h
  7917  000186  C016  FFE1         	movff	??_ISR_bassa+9,fsr1l
  7918  00018A  C015  FFEA         	movff	??_ISR_bassa+8,fsr0h
  7919  00018E  C014  FFE9         	movff	??_ISR_bassa+7,fsr0l
  7920  000192  C013  FFFB         	movff	??_ISR_bassa+6,pclatu
  7921  000196  C012  FFFA         	movff	??_ISR_bassa+5,pclath
  7922  00019A  C011  FFE0         	movff	??_ISR_bassa+4,bsr
  7923  00019E  C010  FFE8         	movff	??_ISR_bassa+3,wreg
  7924  0001A2  C00F  FFD8         	movff	??_ISR_bassa+2,status
  7925  0001A6  9043               	bcf	btemp,0,c	;clear compiler interrupt flag (level 1)
  7926  0001A8  0010               	retfie	
  7927  0001AA                     __end_of_ISR_bassa:
  7928                           	opt stack 0
  7929                           pclatu	equ	0xFFB
  7930                           pclath	equ	0xFFA
  7931                           tblptru	equ	0xFF8
  7932                           tblptrh	equ	0xFF7
  7933                           tblptrl	equ	0xFF6
  7934                           tablat	equ	0xFF5
  7935                           prodh	equ	0xFF4
  7936                           prodl	equ	0xFF3
  7937                           intcon	equ	0xFF2
  7938                           postinc0	equ	0xFEE
  7939                           fsr0h	equ	0xFEA
  7940                           fsr0l	equ	0xFE9
  7941                           wreg	equ	0xFE8
  7942                           indf1	equ	0xFE7
  7943                           postdec1	equ	0xFE5
  7944                           fsr1h	equ	0xFE2
  7945                           fsr1l	equ	0xFE1
  7946                           bsr	equ	0xFE0
  7947                           indf2	equ	0xFDF
  7948                           fsr2h	equ	0xFDA
  7949                           fsr2l	equ	0xFD9
  7950                           status	equ	0xFD8
  7951                           
  7952 ;; *************** function i1_SetOutputEPWM1 *****************
  7953 ;; Defined at:
  7954 ;;		line 18 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\pic18\plib\PWM\ew1setoc.c"
  7955 ;; Parameters:    Size  Location     Type
  7956 ;;  outputconfig    1    wreg     unsigned char 
  7957 ;;  outputmode      1    0[COMRAM] unsigned char 
  7958 ;; Auto vars:     Size  Location     Type
  7959 ;;  outputconfig    1    1[COMRAM] unsigned char 
  7960 ;; Return value:  Size  Location     Type
  7961 ;;		None               void
  7962 ;; Registers used:
  7963 ;;		wreg, status,2, status,0
  7964 ;; Tracked objects:
  7965 ;;		On entry : 0/0
  7966 ;;		On exit  : 0/0
  7967 ;;		Unchanged: 0/0
  7968 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  7969 ;;      Params:         1       0       0       0
  7970 ;;      Locals:         1       0       0       0
  7971 ;;      Temps:          0       0       0       0
  7972 ;;      Totals:         2       0       0       0
  7973 ;;Total ram usage:        2 bytes
  7974 ;; Hardware stack levels used:    1
  7975 ;; This function calls:
  7976 ;;		Nothing
  7977 ;; This function is called by:
  7978 ;;		_ISR_bassa
  7979 ;; This function uses a non-reentrant model
  7980 ;;
  7981                           
  7982                           	psect	text21
  7983  0026D0                     __ptext21:
  7984                           	opt stack 0
  7985  0026D0                     i1_SetOutputEPWM1:
  7986                           	opt stack 26
  7987                           
  7988                           ;incstack = 0
  7989                           ;i1SetOutputEPWM1@outputconfig stored from wreg
  7990  0026D0  6E02               	movwf	i1SetOutputEPWM1@outputconfig,c
  7991  0026D2  50BA               	movf	4026,w,c	;volatile
  7992  0026D4  09C0               	iorlw	192
  7993  0026D6  1402               	andwf	i1SetOutputEPWM1@outputconfig,w,c
  7994  0026D8  6EBA               	movwf	4026,c	;volatile
  7995  0026DA  50BA               	movf	4026,w,c	;volatile
  7996  0026DC  090F               	iorlw	15
  7997  0026DE  1401               	andwf	i1SetOutputEPWM1@outputmode,w,c
  7998  0026E0  6EBA               	movwf	4026,c	;volatile
  7999  0026E2  0E3F               	movlw	63
  8000  0026E4  1802               	xorwf	i1SetOutputEPWM1@outputconfig,w,c
  8001  0026E6  A4D8               	btfss	status,2,c
  8002  0026E8  D002               	goto	i1l3800
  8003  0026EA  9895               	bcf	3989,4,c	;volatile
  8004  0026EC  0012               	return	
  8005  0026EE                     i1l3800:
  8006  0026EE  0EBF               	movlw	191
  8007  0026F0  1802               	xorwf	i1SetOutputEPWM1@outputconfig,w,c
  8008  0026F2  A4D8               	btfss	status,2,c
  8009  0026F4  D003               	goto	i1l3804
  8010  0026F6  9895               	bcf	3989,4,c	;volatile
  8011  0026F8  9A95               	bcf	3989,5,c	;volatile
  8012  0026FA  0012               	return	
  8013  0026FC                     i1l3804:
  8014  0026FC  0E7F               	movlw	127
  8015  0026FE  1802               	xorwf	i1SetOutputEPWM1@outputconfig,w,c
  8016  002700  B4D8               	btfsc	status,2,c
  8017  002702  D003               	goto	i1l750
  8018  002704  2802               	incf	i1SetOutputEPWM1@outputconfig,w,c
  8019  002706  A4D8               	btfss	status,2,c
  8020  002708  0012               	return	
  8021  00270A                     i1l750:
  8022  00270A  9895               	bcf	3989,4,c	;volatile
  8023  00270C  9A95               	bcf	3989,5,c	;volatile
  8024  00270E  9C95               	bcf	3989,6,c	;volatile
  8025  002710  9E95               	bcf	3989,7,c	;volatile
  8026  002712  0012               	return	
  8027  002714                     __end_ofi1_SetOutputEPWM1:
  8028                           	opt stack 0
  8029                           pclatu	equ	0xFFB
  8030                           pclath	equ	0xFFA
  8031                           tblptru	equ	0xFF8
  8032                           tblptrh	equ	0xFF7
  8033                           tblptrl	equ	0xFF6
  8034                           tablat	equ	0xFF5
  8035                           prodh	equ	0xFF4
  8036                           prodl	equ	0xFF3
  8037                           intcon	equ	0xFF2
  8038                           postinc0	equ	0xFEE
  8039                           fsr0h	equ	0xFEA
  8040                           fsr0l	equ	0xFE9
  8041                           wreg	equ	0xFE8
  8042                           indf1	equ	0xFE7
  8043                           postdec1	equ	0xFE5
  8044                           fsr1h	equ	0xFE2
  8045                           fsr1l	equ	0xFE1
  8046                           bsr	equ	0xFE0
  8047                           indf2	equ	0xFDF
  8048                           fsr2h	equ	0xFDA
  8049                           fsr2l	equ	0xFD9
  8050                           status	equ	0xFD8
  8051                           
  8052 ;; *************** function _CANreceiveMessage *****************
  8053 ;; Defined at:
  8054 ;;		line 528 in file "CANlib.h"
  8055 ;; Parameters:    Size  Location     Type
  8056 ;;  msg             2    0[COMRAM] PTR struct .
  8057 ;;		 -> msg(15), 
  8058 ;; Auto vars:     Size  Location     Type
  8059 ;;  tamp            1   11[COMRAM] unsigned char 
  8060 ;;  error           1   10[COMRAM] unsigned char 
  8061 ;; Return value:  Size  Location     Type
  8062 ;;                  1    wreg      unsigned char 
  8063 ;; Registers used:
  8064 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8065 ;; Tracked objects:
  8066 ;;		On entry : 0/0
  8067 ;;		On exit  : 0/0
  8068 ;;		Unchanged: 0/0
  8069 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  8070 ;;      Params:         2       0       0       0
  8071 ;;      Locals:         2       0       0       0
  8072 ;;      Temps:          8       0       0       0
  8073 ;;      Totals:        12       0       0       0
  8074 ;;Total ram usage:       12 bytes
  8075 ;; Hardware stack levels used:    1
  8076 ;; This function calls:
  8077 ;;		Nothing
  8078 ;; This function is called by:
  8079 ;;		_ISR_bassa
  8080 ;; This function uses a non-reentrant model
  8081 ;;
  8082                           
  8083                           	psect	text22
  8084  001440                     __ptext22:
  8085                           	opt stack 0
  8086  001440                     _CANreceiveMessage:
  8087                           	opt stack 26
  8088                           
  8089                           ;CANlib.h: 530: BYTE tamp;
  8090                           ;CANlib.h: 531: BYTE error = 0;
  8091                           
  8092                           ;incstack = 0
  8093  001440  0E00               	movlw	0
  8094  001442  6E0B               	movwf	CANreceiveMessage@error,c
  8095                           
  8096                           ;CANlib.h: 533: if (COMSTATbits.RXB0OVFL == 0x01)
  8097  001444  BE74               	btfsc	3956,7,c	;volatile
  8098                           
  8099                           ;CANlib.h: 534: error |= CAN_RX_BUFFER_1_OVFL;
  8100  001446  800B               	bsf	CANreceiveMessage@error,0,c
  8101                           
  8102                           ;CANlib.h: 536: if (COMSTATbits.RXB1OVFL == 0x01)
  8103  001448  BC74               	btfsc	3956,6,c	;volatile
  8104                           
  8105                           ;CANlib.h: 537: error |= CAN_RX_BUFFER_2_OVFL;
  8106  00144A  820B               	bsf	CANreceiveMessage@error,1,c
  8107                           
  8108                           ;CANlib.h: 540: if (RXB1CONbits.RXFUL ==0x01)
  8109  00144C  010F               	movlb	15	; () banked
  8110  00144E  AF50               	btfss	80,7,b	;volatile
  8111  001450  D143               	goto	i1l410
  8112                           
  8113                           ; BSR set to: 15
  8114                           ;CANlib.h: 541: {
  8115                           ;CANlib.h: 542: msg->identifier = 0;
  8116  001452  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8117  001456  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8118  00145A  6ADE               	clrf	postinc2,c
  8119  00145C  6ADE               	clrf	postinc2,c
  8120  00145E  6ADE               	clrf	postinc2,c
  8121  001460  6ADD               	clrf	postdec2,c
  8122                           
  8123                           ; BSR set to: 15
  8124                           ;CANlib.h: 543: msg->data[0] =RXB1D0;
  8125  001462  EE20 F004          	lfsr	2,4
  8126  001466  5001               	movf	CANreceiveMessage@msg,w,c
  8127  001468  26D9               	addwf	fsr2l,f,c
  8128  00146A  5002               	movf	CANreceiveMessage@msg+1,w,c
  8129  00146C  22DA               	addwfc	fsr2h,f,c
  8130  00146E  CF56 FFDF          	movff	3926,indf2	;volatile
  8131                           
  8132                           ; BSR set to: 15
  8133                           ;CANlib.h: 544: msg->data[1] =RXB1D1;
  8134  001472  EE20 F005          	lfsr	2,5
  8135  001476  5001               	movf	CANreceiveMessage@msg,w,c
  8136  001478  26D9               	addwf	fsr2l,f,c
  8137  00147A  5002               	movf	CANreceiveMessage@msg+1,w,c
  8138  00147C  22DA               	addwfc	fsr2h,f,c
  8139  00147E  CF57 FFDF          	movff	3927,indf2	;volatile
  8140                           
  8141                           ; BSR set to: 15
  8142                           ;CANlib.h: 545: msg->data[2] =RXB1D2;
  8143  001482  EE20 F006          	lfsr	2,6
  8144  001486  5001               	movf	CANreceiveMessage@msg,w,c
  8145  001488  26D9               	addwf	fsr2l,f,c
  8146  00148A  5002               	movf	CANreceiveMessage@msg+1,w,c
  8147  00148C  22DA               	addwfc	fsr2h,f,c
  8148  00148E  CF58 FFDF          	movff	3928,indf2	;volatile
  8149                           
  8150                           ; BSR set to: 15
  8151                           ;CANlib.h: 546: msg->data[3] =RXB1D3;
  8152  001492  EE20 F007          	lfsr	2,7
  8153  001496  5001               	movf	CANreceiveMessage@msg,w,c
  8154  001498  26D9               	addwf	fsr2l,f,c
  8155  00149A  5002               	movf	CANreceiveMessage@msg+1,w,c
  8156  00149C  22DA               	addwfc	fsr2h,f,c
  8157  00149E  CF59 FFDF          	movff	3929,indf2	;volatile
  8158                           
  8159                           ; BSR set to: 15
  8160                           ;CANlib.h: 547: msg->data[4] =RXB1D4;
  8161  0014A2  EE20 F008          	lfsr	2,8
  8162  0014A6  5001               	movf	CANreceiveMessage@msg,w,c
  8163  0014A8  26D9               	addwf	fsr2l,f,c
  8164  0014AA  5002               	movf	CANreceiveMessage@msg+1,w,c
  8165  0014AC  22DA               	addwfc	fsr2h,f,c
  8166  0014AE  CF5A FFDF          	movff	3930,indf2	;volatile
  8167                           
  8168                           ; BSR set to: 15
  8169                           ;CANlib.h: 548: msg->data[5] =RXB1D5;
  8170  0014B2  EE20 F009          	lfsr	2,9
  8171  0014B6  5001               	movf	CANreceiveMessage@msg,w,c
  8172  0014B8  26D9               	addwf	fsr2l,f,c
  8173  0014BA  5002               	movf	CANreceiveMessage@msg+1,w,c
  8174  0014BC  22DA               	addwfc	fsr2h,f,c
  8175  0014BE  CF5B FFDF          	movff	3931,indf2	;volatile
  8176                           
  8177                           ; BSR set to: 15
  8178                           ;CANlib.h: 549: msg->data[6] =RXB1D6;
  8179  0014C2  EE20 F00A          	lfsr	2,10
  8180  0014C6  5001               	movf	CANreceiveMessage@msg,w,c
  8181  0014C8  26D9               	addwf	fsr2l,f,c
  8182  0014CA  5002               	movf	CANreceiveMessage@msg+1,w,c
  8183  0014CC  22DA               	addwfc	fsr2h,f,c
  8184  0014CE  CF5C FFDF          	movff	3932,indf2	;volatile
  8185                           
  8186                           ; BSR set to: 15
  8187                           ;CANlib.h: 550: msg->data[7] =RXB1D7;
  8188  0014D2  EE20 F00B          	lfsr	2,11
  8189  0014D6  5001               	movf	CANreceiveMessage@msg,w,c
  8190  0014D8  26D9               	addwf	fsr2l,f,c
  8191  0014DA  5002               	movf	CANreceiveMessage@msg+1,w,c
  8192  0014DC  22DA               	addwfc	fsr2h,f,c
  8193  0014DE  CF5D FFDF          	movff	3933,indf2	;volatile
  8194                           
  8195                           ; BSR set to: 15
  8196                           ;CANlib.h: 552: msg->RTR = RXB1DLCbits.RXRTR;
  8197  0014E2  EE20 F00E          	lfsr	2,14
  8198  0014E6  5001               	movf	CANreceiveMessage@msg,w,c
  8199  0014E8  26D9               	addwf	fsr2l,f,c
  8200  0014EA  5002               	movf	CANreceiveMessage@msg+1,w,c
  8201  0014EC  22DA               	addwfc	fsr2h,f,c
  8202  0014EE  010F               	movlb	15	; () banked
  8203  0014F0  AD55               	btfss	85,6,b	;volatile
  8204  0014F2  D002               	goto	i1u391_20
  8205  0014F4  0E01               	movlw	1
  8206  0014F6  D001               	goto	i1u391_26
  8207  0014F8                     i1u391_20:
  8208  0014F8  0E00               	movlw	0
  8209  0014FA                     i1u391_26:
  8210  0014FA  6EDF               	movwf	indf2,c
  8211                           
  8212                           ; BSR set to: 15
  8213                           ;CANlib.h: 554: msg->length = RXB1DLC & 0x0F;
  8214  0014FC  EE20 F00D          	lfsr	2,13
  8215  001500  5001               	movf	CANreceiveMessage@msg,w,c
  8216  001502  26D9               	addwf	fsr2l,f,c
  8217  001504  5002               	movf	CANreceiveMessage@msg+1,w,c
  8218  001506  22DA               	addwfc	fsr2h,f,c
  8219  001508  010F               	movlb	15	; () banked
  8220  00150A  5155               	movf	85,w,b	;volatile
  8221  00150C  0B0F               	andlw	15
  8222  00150E  6EDF               	movwf	indf2,c
  8223                           
  8224                           ; BSR set to: 15
  8225                           ;CANlib.h: 556: msg->type = RXB1SIDLbits.EXID;
  8226  001510  EE20 F00C          	lfsr	2,12
  8227  001514  5001               	movf	CANreceiveMessage@msg,w,c
  8228  001516  26D9               	addwf	fsr2l,f,c
  8229  001518  5002               	movf	CANreceiveMessage@msg+1,w,c
  8230  00151A  22DA               	addwfc	fsr2h,f,c
  8231  00151C  010F               	movlb	15	; () banked
  8232  00151E  A752               	btfss	82,3,b	;volatile
  8233  001520  D002               	goto	i1u392_20
  8234  001522  0E01               	movlw	1
  8235  001524  D001               	goto	i1u392_26
  8236  001526                     i1u392_20:
  8237  001526  0E00               	movlw	0
  8238  001528                     i1u392_26:
  8239  001528  6EDF               	movwf	indf2,c
  8240                           
  8241                           ; BSR set to: 15
  8242                           ;CANlib.h: 558: if (RXB1SIDLbits.EXID == 0)
  8243  00152A  010F               	movlb	15	; () banked
  8244  00152C  B752               	btfsc	82,3,b	;volatile
  8245  00152E  D044               	goto	i1l3518
  8246                           
  8247                           ; BSR set to: 15
  8248                           ;CANlib.h: 559: {
  8249                           ;CANlib.h: 560: msg->identifier = ((unsigned long)RXB1SIDH)<< 3;
  8250  001530  CF51 F003          	movff	3921,??_CANreceiveMessage	;volatile
  8251  001534  6A04               	clrf	(??_CANreceiveMessage+1)& (0+255),c
  8252  001536  6A05               	clrf	(??_CANreceiveMessage+2)& (0+255),c
  8253  001538  6A06               	clrf	(??_CANreceiveMessage+3)& (0+255),c
  8254  00153A  0E03               	movlw	3
  8255  00153C                     i1u394_25:
  8256  00153C  90D8               	bcf	status,0,c
  8257  00153E  3603               	rlcf	??_CANreceiveMessage,f,c
  8258  001540  3604               	rlcf	??_CANreceiveMessage+1,f,c
  8259  001542  3605               	rlcf	??_CANreceiveMessage+2,f,c
  8260  001544  3606               	rlcf	??_CANreceiveMessage+3,f,c
  8261  001546  2EE8               	decfsz	wreg,f,c
  8262  001548  D7F9               	goto	i1u394_25
  8263  00154A  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8264  00154E  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8265  001552  C003  FFDE         	movff	??_CANreceiveMessage,postinc2
  8266  001556  C004  FFDE         	movff	??_CANreceiveMessage+1,postinc2
  8267  00155A  C005  FFDE         	movff	??_CANreceiveMessage+2,postinc2
  8268  00155E  C006  FFDE         	movff	??_CANreceiveMessage+3,postinc2
  8269                           
  8270                           ; BSR set to: 15
  8271                           ;CANlib.h: 561: tamp = (RXB1SIDL >> 5 ) & 0x07;
  8272  001562  010F               	movlb	15	; () banked
  8273  001564  3952               	swapf	82,w,b	;volatile
  8274  001566  42E8               	rrncf	wreg,f,c
  8275  001568  0B07               	andlw	7
  8276  00156A  0B07               	andlw	7
  8277  00156C  6E0C               	movwf	CANreceiveMessage@tamp,c
  8278                           
  8279                           ; BSR set to: 15
  8280                           ;CANlib.h: 562: msg->identifier = msg->identifier + tamp;
  8281  00156E  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8282  001572  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8283  001576  CFDE F003          	movff	postinc2,??_CANreceiveMessage
  8284  00157A  CFDE F004          	movff	postinc2,??_CANreceiveMessage+1
  8285  00157E  CFDE F005          	movff	postinc2,??_CANreceiveMessage+2
  8286  001582  CFDE F006          	movff	postinc2,??_CANreceiveMessage+3
  8287  001586  500C               	movf	CANreceiveMessage@tamp,w,c
  8288  001588  2403               	addwf	??_CANreceiveMessage,w,c
  8289  00158A  6E07               	movwf	(??_CANreceiveMessage+4)& (0+255),c
  8290  00158C  0E00               	movlw	0
  8291  00158E  2004               	addwfc	??_CANreceiveMessage+1,w,c
  8292  001590  6E08               	movwf	(??_CANreceiveMessage+5)& (0+255),c
  8293  001592  0E00               	movlw	0
  8294  001594  2005               	addwfc	??_CANreceiveMessage+2,w,c
  8295  001596  6E09               	movwf	(??_CANreceiveMessage+6)& (0+255),c
  8296  001598  0E00               	movlw	0
  8297  00159A  2006               	addwfc	??_CANreceiveMessage+3,w,c
  8298  00159C  6E0A               	movwf	(??_CANreceiveMessage+7)& (0+255),c
  8299  00159E  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8300  0015A2  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8301  0015A6  C007  FFDE         	movff	??_CANreceiveMessage+4,postinc2
  8302  0015AA  C008  FFDE         	movff	??_CANreceiveMessage+5,postinc2
  8303  0015AE  C009  FFDE         	movff	??_CANreceiveMessage+6,postinc2
  8304  0015B2  C00A  FFDE         	movff	??_CANreceiveMessage+7,postinc2
  8305                           
  8306                           ;CANlib.h: 563: }
  8307  0015B6  D08D               	goto	i1l3544
  8308  0015B8                     i1l3518:
  8309                           
  8310                           ; BSR set to: 15
  8311                           ;CANlib.h: 564: else
  8312                           ;CANlib.h: 565: {
  8313                           ;CANlib.h: 566: msg->identifier = (unsigned long) RXB1EIDL;
  8314  0015B8  CF54 F003          	movff	3924,??_CANreceiveMessage	;volatile
  8315  0015BC  6A04               	clrf	(??_CANreceiveMessage+1)& (0+255),c
  8316  0015BE  6A05               	clrf	(??_CANreceiveMessage+2)& (0+255),c
  8317  0015C0  6A06               	clrf	(??_CANreceiveMessage+3)& (0+255),c
  8318  0015C2  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8319  0015C6  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8320  0015CA  C003  FFDE         	movff	??_CANreceiveMessage,postinc2
  8321  0015CE  C004  FFDE         	movff	??_CANreceiveMessage+1,postinc2
  8322  0015D2  C005  FFDE         	movff	??_CANreceiveMessage+2,postinc2
  8323  0015D6  C006  FFDE         	movff	??_CANreceiveMessage+3,postinc2
  8324                           
  8325                           ; BSR set to: 15
  8326                           ;CANlib.h: 567: msg->identifier += ((unsigned long) RXB1EIDH) << 8;
  8327  0015DA  CF53 F003          	movff	3923,??_CANreceiveMessage	;volatile
  8328  0015DE  6A04               	clrf	(??_CANreceiveMessage+1)& (0+255),c
  8329  0015E0  6A05               	clrf	(??_CANreceiveMessage+2)& (0+255),c
  8330  0015E2  6A06               	clrf	(??_CANreceiveMessage+3)& (0+255),c
  8331  0015E4  C005  F006         	movff	??_CANreceiveMessage+2,??_CANreceiveMessage+3
  8332  0015E8  C004  F005         	movff	??_CANreceiveMessage+1,??_CANreceiveMessage+2
  8333  0015EC  C003  F004         	movff	??_CANreceiveMessage,??_CANreceiveMessage+1
  8334  0015F0  6A03               	clrf	??_CANreceiveMessage,c
  8335  0015F2  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8336  0015F6  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8337  0015FA  5003               	movf	??_CANreceiveMessage,w,c
  8338  0015FC  26DE               	addwf	postinc2,f,c
  8339  0015FE  5004               	movf	??_CANreceiveMessage+1,w,c
  8340  001600  22DE               	addwfc	postinc2,f,c
  8341  001602  5005               	movf	??_CANreceiveMessage+2,w,c
  8342  001604  22DE               	addwfc	postinc2,f,c
  8343  001606  5006               	movf	??_CANreceiveMessage+3,w,c
  8344  001608  22DE               	addwfc	postinc2,f,c
  8345                           
  8346                           ; BSR set to: 15
  8347                           ;CANlib.h: 569: if (RXB1SIDLbits.EID16)
  8348  00160A  010F               	movlb	15	; () banked
  8349  00160C  A152               	btfss	82,0,b	;volatile
  8350  00160E  D00C               	goto	i1l3526
  8351                           
  8352                           ; BSR set to: 15
  8353                           ;CANlib.h: 570: msg->identifier |= 0x00010000;
  8354  001610  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8355  001614  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8356  001618  0E00               	movlw	0
  8357  00161A  12DE               	iorwf	postinc2,f,c
  8358  00161C  0E00               	movlw	0
  8359  00161E  12DE               	iorwf	postinc2,f,c
  8360  001620  0E01               	movlw	1
  8361  001622  12DE               	iorwf	postinc2,f,c
  8362  001624  0E00               	movlw	0
  8363  001626  12DE               	iorwf	postinc2,f,c
  8364  001628                     i1l3526:
  8365                           
  8366                           ; BSR set to: 15
  8367                           ;CANlib.h: 571: if (RXB1SIDLbits.EID17)
  8368  001628  010F               	movlb	15	; () banked
  8369  00162A  A352               	btfss	82,1,b	;volatile
  8370  00162C  D00C               	goto	i1l3530
  8371                           
  8372                           ; BSR set to: 15
  8373                           ;CANlib.h: 572: msg->identifier |= 0x00020000;
  8374  00162E  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8375  001632  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8376  001636  0E00               	movlw	0
  8377  001638  12DE               	iorwf	postinc2,f,c
  8378  00163A  0E00               	movlw	0
  8379  00163C  12DE               	iorwf	postinc2,f,c
  8380  00163E  0E02               	movlw	2
  8381  001640  12DE               	iorwf	postinc2,f,c
  8382  001642  0E00               	movlw	0
  8383  001644  12DE               	iorwf	postinc2,f,c
  8384  001646                     i1l3530:
  8385                           
  8386                           ; BSR set to: 15
  8387                           ;CANlib.h: 573: if (RXB1SIDLbits.SID0)
  8388  001646  010F               	movlb	15	; () banked
  8389  001648  AB52               	btfss	82,5,b	;volatile
  8390  00164A  D00C               	goto	i1l3534
  8391                           
  8392                           ; BSR set to: 15
  8393                           ;CANlib.h: 574: msg->identifier |= 0x00040000;
  8394  00164C  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8395  001650  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8396  001654  0E00               	movlw	0
  8397  001656  12DE               	iorwf	postinc2,f,c
  8398  001658  0E00               	movlw	0
  8399  00165A  12DE               	iorwf	postinc2,f,c
  8400  00165C  0E04               	movlw	4
  8401  00165E  12DE               	iorwf	postinc2,f,c
  8402  001660  0E00               	movlw	0
  8403  001662  12DE               	iorwf	postinc2,f,c
  8404  001664                     i1l3534:
  8405                           
  8406                           ; BSR set to: 15
  8407                           ;CANlib.h: 575: if (RXB1SIDLbits.SID1)
  8408  001664  010F               	movlb	15	; () banked
  8409  001666  AD52               	btfss	82,6,b	;volatile
  8410  001668  D00C               	goto	i1l3538
  8411                           
  8412                           ; BSR set to: 15
  8413                           ;CANlib.h: 576: msg->identifier |= 0x00080000;
  8414  00166A  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8415  00166E  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8416  001672  0E00               	movlw	0
  8417  001674  12DE               	iorwf	postinc2,f,c
  8418  001676  0E00               	movlw	0
  8419  001678  12DE               	iorwf	postinc2,f,c
  8420  00167A  0E08               	movlw	8
  8421  00167C  12DE               	iorwf	postinc2,f,c
  8422  00167E  0E00               	movlw	0
  8423  001680  12DE               	iorwf	postinc2,f,c
  8424  001682                     i1l3538:
  8425                           
  8426                           ; BSR set to: 15
  8427                           ;CANlib.h: 577: if (RXB1SIDLbits.SID2)
  8428  001682  010F               	movlb	15	; () banked
  8429  001684  AF52               	btfss	82,7,b	;volatile
  8430  001686  D00C               	goto	i1l3542
  8431                           
  8432                           ; BSR set to: 15
  8433                           ;CANlib.h: 578: msg->identifier |= 0x00100000;
  8434  001688  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8435  00168C  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8436  001690  0E00               	movlw	0
  8437  001692  12DE               	iorwf	postinc2,f,c
  8438  001694  0E00               	movlw	0
  8439  001696  12DE               	iorwf	postinc2,f,c
  8440  001698  0E10               	movlw	16
  8441  00169A  12DE               	iorwf	postinc2,f,c
  8442  00169C  0E00               	movlw	0
  8443  00169E  12DE               	iorwf	postinc2,f,c
  8444  0016A0                     i1l3542:
  8445                           
  8446                           ; BSR set to: 15
  8447                           ;CANlib.h: 580: msg->identifier |= ((unsigned long) RXB1SIDH) << 21;
  8448  0016A0  CF51 F003          	movff	3921,??_CANreceiveMessage	;volatile
  8449  0016A4  6A04               	clrf	(??_CANreceiveMessage+1)& (0+255),c
  8450  0016A6  6A05               	clrf	(??_CANreceiveMessage+2)& (0+255),c
  8451  0016A8  6A06               	clrf	(??_CANreceiveMessage+3)& (0+255),c
  8452  0016AA  0E15               	movlw	21
  8453  0016AC                     i1u400_25:
  8454  0016AC  90D8               	bcf	status,0,c
  8455  0016AE  3603               	rlcf	??_CANreceiveMessage,f,c
  8456  0016B0  3604               	rlcf	??_CANreceiveMessage+1,f,c
  8457  0016B2  3605               	rlcf	??_CANreceiveMessage+2,f,c
  8458  0016B4  3606               	rlcf	??_CANreceiveMessage+3,f,c
  8459  0016B6  2EE8               	decfsz	wreg,f,c
  8460  0016B8  D7F9               	goto	i1u400_25
  8461  0016BA  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8462  0016BE  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8463  0016C2  5003               	movf	??_CANreceiveMessage,w,c
  8464  0016C4  12DE               	iorwf	postinc2,f,c
  8465  0016C6  5004               	movf	??_CANreceiveMessage+1,w,c
  8466  0016C8  12DE               	iorwf	postinc2,f,c
  8467  0016CA  5005               	movf	??_CANreceiveMessage+2,w,c
  8468  0016CC  12DE               	iorwf	postinc2,f,c
  8469  0016CE  5006               	movf	??_CANreceiveMessage+3,w,c
  8470  0016D0  12DE               	iorwf	postinc2,f,c
  8471  0016D2                     i1l3544:
  8472                           
  8473                           ; BSR set to: 15
  8474                           ;CANlib.h: 581: }
  8475                           ;CANlib.h: 583: RXB1CONbits.RXFUL = 0x00;
  8476  0016D2  010F               	movlb	15	; () banked
  8477  0016D4  9F50               	bcf	80,7,b	;volatile
  8478                           
  8479                           ; BSR set to: 15
  8480                           ;CANlib.h: 584: return (error);
  8481                           ;	Return value of _CANreceiveMessage is never used
  8482  0016D6  0012               	return	
  8483  0016D8                     i1l410:
  8484                           
  8485                           ; BSR set to: 15
  8486                           ;CANlib.h: 585: }
  8487                           ;CANlib.h: 587: if (RXB0CONbits.RXFUL ==0x01)
  8488  0016D8  AE60               	btfss	3936,7,c	;volatile
  8489  0016DA  0012               	return	
  8490                           
  8491                           ; BSR set to: 15
  8492                           ;CANlib.h: 588: {
  8493                           ;CANlib.h: 589: msg->identifier = 0;
  8494  0016DC  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8495  0016E0  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8496  0016E4  6ADE               	clrf	postinc2,c
  8497  0016E6  6ADE               	clrf	postinc2,c
  8498  0016E8  6ADE               	clrf	postinc2,c
  8499  0016EA  6ADD               	clrf	postdec2,c
  8500                           
  8501                           ; BSR set to: 15
  8502                           ;CANlib.h: 590: msg->data[0] =RXB0D0;
  8503  0016EC  EE20 F004          	lfsr	2,4
  8504  0016F0  5001               	movf	CANreceiveMessage@msg,w,c
  8505  0016F2  26D9               	addwf	fsr2l,f,c
  8506  0016F4  5002               	movf	CANreceiveMessage@msg+1,w,c
  8507  0016F6  22DA               	addwfc	fsr2h,f,c
  8508  0016F8  CF66 FFDF          	movff	3942,indf2	;volatile
  8509                           
  8510                           ; BSR set to: 15
  8511                           ;CANlib.h: 591: msg->data[1] =RXB0D1;
  8512  0016FC  EE20 F005          	lfsr	2,5
  8513  001700  5001               	movf	CANreceiveMessage@msg,w,c
  8514  001702  26D9               	addwf	fsr2l,f,c
  8515  001704  5002               	movf	CANreceiveMessage@msg+1,w,c
  8516  001706  22DA               	addwfc	fsr2h,f,c
  8517  001708  CF67 FFDF          	movff	3943,indf2	;volatile
  8518                           
  8519                           ; BSR set to: 15
  8520                           ;CANlib.h: 592: msg->data[2] =RXB0D2;
  8521  00170C  EE20 F006          	lfsr	2,6
  8522  001710  5001               	movf	CANreceiveMessage@msg,w,c
  8523  001712  26D9               	addwf	fsr2l,f,c
  8524  001714  5002               	movf	CANreceiveMessage@msg+1,w,c
  8525  001716  22DA               	addwfc	fsr2h,f,c
  8526  001718  CF68 FFDF          	movff	3944,indf2	;volatile
  8527                           
  8528                           ; BSR set to: 15
  8529                           ;CANlib.h: 593: msg->data[3] =RXB0D3;
  8530  00171C  EE20 F007          	lfsr	2,7
  8531  001720  5001               	movf	CANreceiveMessage@msg,w,c
  8532  001722  26D9               	addwf	fsr2l,f,c
  8533  001724  5002               	movf	CANreceiveMessage@msg+1,w,c
  8534  001726  22DA               	addwfc	fsr2h,f,c
  8535  001728  CF69 FFDF          	movff	3945,indf2	;volatile
  8536                           
  8537                           ; BSR set to: 15
  8538                           ;CANlib.h: 594: msg->data[4] =RXB0D4;
  8539  00172C  EE20 F008          	lfsr	2,8
  8540  001730  5001               	movf	CANreceiveMessage@msg,w,c
  8541  001732  26D9               	addwf	fsr2l,f,c
  8542  001734  5002               	movf	CANreceiveMessage@msg+1,w,c
  8543  001736  22DA               	addwfc	fsr2h,f,c
  8544  001738  CF6A FFDF          	movff	3946,indf2	;volatile
  8545                           
  8546                           ; BSR set to: 15
  8547                           ;CANlib.h: 595: msg->data[5] =RXB0D5;
  8548  00173C  EE20 F009          	lfsr	2,9
  8549  001740  5001               	movf	CANreceiveMessage@msg,w,c
  8550  001742  26D9               	addwf	fsr2l,f,c
  8551  001744  5002               	movf	CANreceiveMessage@msg+1,w,c
  8552  001746  22DA               	addwfc	fsr2h,f,c
  8553  001748  CF6B FFDF          	movff	3947,indf2	;volatile
  8554                           
  8555                           ; BSR set to: 15
  8556                           ;CANlib.h: 596: msg->data[6] =RXB0D6;
  8557  00174C  EE20 F00A          	lfsr	2,10
  8558  001750  5001               	movf	CANreceiveMessage@msg,w,c
  8559  001752  26D9               	addwf	fsr2l,f,c
  8560  001754  5002               	movf	CANreceiveMessage@msg+1,w,c
  8561  001756  22DA               	addwfc	fsr2h,f,c
  8562  001758  CF6C FFDF          	movff	3948,indf2	;volatile
  8563                           
  8564                           ; BSR set to: 15
  8565                           ;CANlib.h: 597: msg->data[7] =RXB0D7;
  8566  00175C  EE20 F00B          	lfsr	2,11
  8567  001760  5001               	movf	CANreceiveMessage@msg,w,c
  8568  001762  26D9               	addwf	fsr2l,f,c
  8569  001764  5002               	movf	CANreceiveMessage@msg+1,w,c
  8570  001766  22DA               	addwfc	fsr2h,f,c
  8571  001768  CF6D FFDF          	movff	3949,indf2	;volatile
  8572                           
  8573                           ; BSR set to: 15
  8574                           ;CANlib.h: 599: msg->RTR = RXB0DLCbits.RXRTR;
  8575  00176C  EE20 F00E          	lfsr	2,14
  8576  001770  5001               	movf	CANreceiveMessage@msg,w,c
  8577  001772  26D9               	addwf	fsr2l,f,c
  8578  001774  5002               	movf	CANreceiveMessage@msg+1,w,c
  8579  001776  22DA               	addwfc	fsr2h,f,c
  8580  001778  AC65               	btfss	3941,6,c	;volatile
  8581  00177A  D002               	goto	i1u402_20
  8582  00177C  0E01               	movlw	1
  8583  00177E  D001               	goto	i1u402_26
  8584  001780                     i1u402_20:
  8585  001780  0E00               	movlw	0
  8586  001782                     i1u402_26:
  8587  001782  6EDF               	movwf	indf2,c
  8588                           
  8589                           ; BSR set to: 15
  8590                           ;CANlib.h: 601: msg->length = RXB0DLC & 0x0F;
  8591  001784  EE20 F00D          	lfsr	2,13
  8592  001788  5001               	movf	CANreceiveMessage@msg,w,c
  8593  00178A  26D9               	addwf	fsr2l,f,c
  8594  00178C  5002               	movf	CANreceiveMessage@msg+1,w,c
  8595  00178E  22DA               	addwfc	fsr2h,f,c
  8596  001790  5065               	movf	3941,w,c	;volatile
  8597  001792  0B0F               	andlw	15
  8598  001794  6EDF               	movwf	indf2,c
  8599                           
  8600                           ; BSR set to: 15
  8601                           ;CANlib.h: 603: msg->type = RXB0SIDLbits.EXID;
  8602  001796  EE20 F00C          	lfsr	2,12
  8603  00179A  5001               	movf	CANreceiveMessage@msg,w,c
  8604  00179C  26D9               	addwf	fsr2l,f,c
  8605  00179E  5002               	movf	CANreceiveMessage@msg+1,w,c
  8606  0017A0  22DA               	addwfc	fsr2h,f,c
  8607  0017A2  A662               	btfss	3938,3,c	;volatile
  8608  0017A4  D002               	goto	i1u403_20
  8609  0017A6  0E01               	movlw	1
  8610  0017A8  D001               	goto	i1u403_26
  8611  0017AA                     i1u403_20:
  8612  0017AA  0E00               	movlw	0
  8613  0017AC                     i1u403_26:
  8614  0017AC  6EDF               	movwf	indf2,c
  8615                           
  8616                           ; BSR set to: 15
  8617                           ;CANlib.h: 605: if (RXB0SIDLbits.EXID == 0)
  8618  0017AE  B662               	btfsc	3938,3,c	;volatile
  8619  0017B0  D043               	goto	i1l3580
  8620                           
  8621                           ; BSR set to: 15
  8622                           ;CANlib.h: 606: {
  8623                           ;CANlib.h: 607: msg->identifier = ((unsigned long)RXB0SIDH)<< 3;
  8624  0017B2  CF61 F003          	movff	3937,??_CANreceiveMessage	;volatile
  8625  0017B6  6A04               	clrf	(??_CANreceiveMessage+1)& (0+255),c
  8626  0017B8  6A05               	clrf	(??_CANreceiveMessage+2)& (0+255),c
  8627  0017BA  6A06               	clrf	(??_CANreceiveMessage+3)& (0+255),c
  8628  0017BC  0E03               	movlw	3
  8629  0017BE                     i1u405_25:
  8630  0017BE  90D8               	bcf	status,0,c
  8631  0017C0  3603               	rlcf	??_CANreceiveMessage,f,c
  8632  0017C2  3604               	rlcf	??_CANreceiveMessage+1,f,c
  8633  0017C4  3605               	rlcf	??_CANreceiveMessage+2,f,c
  8634  0017C6  3606               	rlcf	??_CANreceiveMessage+3,f,c
  8635  0017C8  2EE8               	decfsz	wreg,f,c
  8636  0017CA  D7F9               	goto	i1u405_25
  8637  0017CC  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8638  0017D0  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8639  0017D4  C003  FFDE         	movff	??_CANreceiveMessage,postinc2
  8640  0017D8  C004  FFDE         	movff	??_CANreceiveMessage+1,postinc2
  8641  0017DC  C005  FFDE         	movff	??_CANreceiveMessage+2,postinc2
  8642  0017E0  C006  FFDE         	movff	??_CANreceiveMessage+3,postinc2
  8643                           
  8644                           ; BSR set to: 15
  8645                           ;CANlib.h: 608: tamp = (RXB0SIDL >> 5 ) & 0x07;
  8646  0017E4  3862               	swapf	3938,w,c	;volatile
  8647  0017E6  42E8               	rrncf	wreg,f,c
  8648  0017E8  0B07               	andlw	7
  8649  0017EA  0B07               	andlw	7
  8650  0017EC  6E0C               	movwf	CANreceiveMessage@tamp,c
  8651                           
  8652                           ; BSR set to: 15
  8653                           ;CANlib.h: 609: msg->identifier = msg->identifier + tamp;
  8654  0017EE  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8655  0017F2  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8656  0017F6  CFDE F003          	movff	postinc2,??_CANreceiveMessage
  8657  0017FA  CFDE F004          	movff	postinc2,??_CANreceiveMessage+1
  8658  0017FE  CFDE F005          	movff	postinc2,??_CANreceiveMessage+2
  8659  001802  CFDE F006          	movff	postinc2,??_CANreceiveMessage+3
  8660  001806  500C               	movf	CANreceiveMessage@tamp,w,c
  8661  001808  2403               	addwf	??_CANreceiveMessage,w,c
  8662  00180A  6E07               	movwf	(??_CANreceiveMessage+4)& (0+255),c
  8663  00180C  0E00               	movlw	0
  8664  00180E  2004               	addwfc	??_CANreceiveMessage+1,w,c
  8665  001810  6E08               	movwf	(??_CANreceiveMessage+5)& (0+255),c
  8666  001812  0E00               	movlw	0
  8667  001814  2005               	addwfc	??_CANreceiveMessage+2,w,c
  8668  001816  6E09               	movwf	(??_CANreceiveMessage+6)& (0+255),c
  8669  001818  0E00               	movlw	0
  8670  00181A  2006               	addwfc	??_CANreceiveMessage+3,w,c
  8671  00181C  6E0A               	movwf	(??_CANreceiveMessage+7)& (0+255),c
  8672  00181E  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8673  001822  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8674  001826  C007  FFDE         	movff	??_CANreceiveMessage+4,postinc2
  8675  00182A  C008  FFDE         	movff	??_CANreceiveMessage+5,postinc2
  8676  00182E  C009  FFDE         	movff	??_CANreceiveMessage+6,postinc2
  8677  001832  C00A  FFDE         	movff	??_CANreceiveMessage+7,postinc2
  8678                           
  8679                           ;CANlib.h: 610: }
  8680  001836  D088               	goto	i1l3606
  8681  001838                     i1l3580:
  8682                           
  8683                           ; BSR set to: 15
  8684                           ;CANlib.h: 611: else
  8685                           ;CANlib.h: 612: {
  8686                           ;CANlib.h: 613: msg->identifier = (unsigned long) RXB0EIDL;
  8687  001838  CF64 F003          	movff	3940,??_CANreceiveMessage	;volatile
  8688  00183C  6A04               	clrf	(??_CANreceiveMessage+1)& (0+255),c
  8689  00183E  6A05               	clrf	(??_CANreceiveMessage+2)& (0+255),c
  8690  001840  6A06               	clrf	(??_CANreceiveMessage+3)& (0+255),c
  8691  001842  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8692  001846  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8693  00184A  C003  FFDE         	movff	??_CANreceiveMessage,postinc2
  8694  00184E  C004  FFDE         	movff	??_CANreceiveMessage+1,postinc2
  8695  001852  C005  FFDE         	movff	??_CANreceiveMessage+2,postinc2
  8696  001856  C006  FFDE         	movff	??_CANreceiveMessage+3,postinc2
  8697                           
  8698                           ; BSR set to: 15
  8699                           ;CANlib.h: 614: msg->identifier += ((unsigned long) RXB0EIDH) << 8;
  8700  00185A  CF63 F003          	movff	3939,??_CANreceiveMessage	;volatile
  8701  00185E  6A04               	clrf	(??_CANreceiveMessage+1)& (0+255),c
  8702  001860  6A05               	clrf	(??_CANreceiveMessage+2)& (0+255),c
  8703  001862  6A06               	clrf	(??_CANreceiveMessage+3)& (0+255),c
  8704  001864  C005  F006         	movff	??_CANreceiveMessage+2,??_CANreceiveMessage+3
  8705  001868  C004  F005         	movff	??_CANreceiveMessage+1,??_CANreceiveMessage+2
  8706  00186C  C003  F004         	movff	??_CANreceiveMessage,??_CANreceiveMessage+1
  8707  001870  6A03               	clrf	??_CANreceiveMessage,c
  8708  001872  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8709  001876  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8710  00187A  5003               	movf	??_CANreceiveMessage,w,c
  8711  00187C  26DE               	addwf	postinc2,f,c
  8712  00187E  5004               	movf	??_CANreceiveMessage+1,w,c
  8713  001880  22DE               	addwfc	postinc2,f,c
  8714  001882  5005               	movf	??_CANreceiveMessage+2,w,c
  8715  001884  22DE               	addwfc	postinc2,f,c
  8716  001886  5006               	movf	??_CANreceiveMessage+3,w,c
  8717  001888  22DE               	addwfc	postinc2,f,c
  8718                           
  8719                           ; BSR set to: 15
  8720                           ;CANlib.h: 616: if (RXB0SIDLbits.EID16)
  8721  00188A  A062               	btfss	3938,0,c	;volatile
  8722  00188C  D00C               	goto	i1l3588
  8723                           
  8724                           ; BSR set to: 15
  8725                           ;CANlib.h: 617: msg->identifier |= 0x00010000;
  8726  00188E  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8727  001892  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8728  001896  0E00               	movlw	0
  8729  001898  12DE               	iorwf	postinc2,f,c
  8730  00189A  0E00               	movlw	0
  8731  00189C  12DE               	iorwf	postinc2,f,c
  8732  00189E  0E01               	movlw	1
  8733  0018A0  12DE               	iorwf	postinc2,f,c
  8734  0018A2  0E00               	movlw	0
  8735  0018A4  12DE               	iorwf	postinc2,f,c
  8736  0018A6                     i1l3588:
  8737                           
  8738                           ; BSR set to: 15
  8739                           ;CANlib.h: 618: if (RXB0SIDLbits.EID17)
  8740  0018A6  A262               	btfss	3938,1,c	;volatile
  8741  0018A8  D00C               	goto	i1l3592
  8742                           
  8743                           ; BSR set to: 15
  8744                           ;CANlib.h: 619: msg->identifier |= 0x00020000;
  8745  0018AA  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8746  0018AE  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8747  0018B2  0E00               	movlw	0
  8748  0018B4  12DE               	iorwf	postinc2,f,c
  8749  0018B6  0E00               	movlw	0
  8750  0018B8  12DE               	iorwf	postinc2,f,c
  8751  0018BA  0E02               	movlw	2
  8752  0018BC  12DE               	iorwf	postinc2,f,c
  8753  0018BE  0E00               	movlw	0
  8754  0018C0  12DE               	iorwf	postinc2,f,c
  8755  0018C2                     i1l3592:
  8756                           
  8757                           ; BSR set to: 15
  8758                           ;CANlib.h: 620: if (RXB0SIDLbits.SID0)
  8759  0018C2  AA62               	btfss	3938,5,c	;volatile
  8760  0018C4  D00C               	goto	i1l3596
  8761                           
  8762                           ; BSR set to: 15
  8763                           ;CANlib.h: 621: msg->identifier |= 0x00040000;
  8764  0018C6  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8765  0018CA  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8766  0018CE  0E00               	movlw	0
  8767  0018D0  12DE               	iorwf	postinc2,f,c
  8768  0018D2  0E00               	movlw	0
  8769  0018D4  12DE               	iorwf	postinc2,f,c
  8770  0018D6  0E04               	movlw	4
  8771  0018D8  12DE               	iorwf	postinc2,f,c
  8772  0018DA  0E00               	movlw	0
  8773  0018DC  12DE               	iorwf	postinc2,f,c
  8774  0018DE                     i1l3596:
  8775                           
  8776                           ; BSR set to: 15
  8777                           ;CANlib.h: 622: if (RXB0SIDLbits.SID1)
  8778  0018DE  AC62               	btfss	3938,6,c	;volatile
  8779  0018E0  D00C               	goto	i1l3600
  8780                           
  8781                           ; BSR set to: 15
  8782                           ;CANlib.h: 623: msg->identifier |= 0x00080000;
  8783  0018E2  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8784  0018E6  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8785  0018EA  0E00               	movlw	0
  8786  0018EC  12DE               	iorwf	postinc2,f,c
  8787  0018EE  0E00               	movlw	0
  8788  0018F0  12DE               	iorwf	postinc2,f,c
  8789  0018F2  0E08               	movlw	8
  8790  0018F4  12DE               	iorwf	postinc2,f,c
  8791  0018F6  0E00               	movlw	0
  8792  0018F8  12DE               	iorwf	postinc2,f,c
  8793  0018FA                     i1l3600:
  8794                           
  8795                           ; BSR set to: 15
  8796                           ;CANlib.h: 624: if (RXB0SIDLbits.SID2)
  8797  0018FA  AE62               	btfss	3938,7,c	;volatile
  8798  0018FC  D00C               	goto	i1l3604
  8799                           
  8800                           ; BSR set to: 15
  8801                           ;CANlib.h: 625: msg->identifier |= 0x00100000;
  8802  0018FE  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8803  001902  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8804  001906  0E00               	movlw	0
  8805  001908  12DE               	iorwf	postinc2,f,c
  8806  00190A  0E00               	movlw	0
  8807  00190C  12DE               	iorwf	postinc2,f,c
  8808  00190E  0E10               	movlw	16
  8809  001910  12DE               	iorwf	postinc2,f,c
  8810  001912  0E00               	movlw	0
  8811  001914  12DE               	iorwf	postinc2,f,c
  8812  001916                     i1l3604:
  8813                           
  8814                           ; BSR set to: 15
  8815                           ;CANlib.h: 627: msg->identifier |= ((unsigned long) RXB0SIDH) << 21;
  8816  001916  CF61 F003          	movff	3937,??_CANreceiveMessage	;volatile
  8817  00191A  6A04               	clrf	(??_CANreceiveMessage+1)& (0+255),c
  8818  00191C  6A05               	clrf	(??_CANreceiveMessage+2)& (0+255),c
  8819  00191E  6A06               	clrf	(??_CANreceiveMessage+3)& (0+255),c
  8820  001920  0E15               	movlw	21
  8821  001922                     i1u411_25:
  8822  001922  90D8               	bcf	status,0,c
  8823  001924  3603               	rlcf	??_CANreceiveMessage,f,c
  8824  001926  3604               	rlcf	??_CANreceiveMessage+1,f,c
  8825  001928  3605               	rlcf	??_CANreceiveMessage+2,f,c
  8826  00192A  3606               	rlcf	??_CANreceiveMessage+3,f,c
  8827  00192C  2EE8               	decfsz	wreg,f,c
  8828  00192E  D7F9               	goto	i1u411_25
  8829  001930  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8830  001934  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8831  001938  5003               	movf	??_CANreceiveMessage,w,c
  8832  00193A  12DE               	iorwf	postinc2,f,c
  8833  00193C  5004               	movf	??_CANreceiveMessage+1,w,c
  8834  00193E  12DE               	iorwf	postinc2,f,c
  8835  001940  5005               	movf	??_CANreceiveMessage+2,w,c
  8836  001942  12DE               	iorwf	postinc2,f,c
  8837  001944  5006               	movf	??_CANreceiveMessage+3,w,c
  8838  001946  12DE               	iorwf	postinc2,f,c
  8839  001948                     i1l3606:
  8840                           
  8841                           ; BSR set to: 15
  8842                           ;CANlib.h: 629: }
  8843                           ;CANlib.h: 630: RXB0CONbits.RXFUL = 0x00;
  8844  001948  9E60               	bcf	3936,7,c	;volatile
  8845                           
  8846                           ; BSR set to: 15
  8847                           ;CANlib.h: 632: return (error);
  8848                           ;	Return value of _CANreceiveMessage is never used
  8849  00194A  0012               	return	
  8850  00194C                     __end_of_CANreceiveMessage:
  8851                           	opt stack 0
  8852                           pclatu	equ	0xFFB
  8853                           pclath	equ	0xFFA
  8854                           tblptru	equ	0xFF8
  8855                           tblptrh	equ	0xFF7
  8856                           tblptrl	equ	0xFF6
  8857                           tablat	equ	0xFF5
  8858                           prodh	equ	0xFF4
  8859                           prodl	equ	0xFF3
  8860                           intcon	equ	0xFF2
  8861                           postinc0	equ	0xFEE
  8862                           fsr0h	equ	0xFEA
  8863                           fsr0l	equ	0xFE9
  8864                           wreg	equ	0xFE8
  8865                           indf1	equ	0xFE7
  8866                           postdec1	equ	0xFE5
  8867                           fsr1h	equ	0xFE2
  8868                           fsr1l	equ	0xFE1
  8869                           bsr	equ	0xFE0
  8870                           indf2	equ	0xFDF
  8871                           postinc2	equ	0xFDE
  8872                           postdec2	equ	0xFDD
  8873                           fsr2h	equ	0xFDA
  8874                           fsr2l	equ	0xFD9
  8875                           status	equ	0xFD8
  8876                           
  8877 ;; *************** function _CANisRxReady *****************
  8878 ;; Defined at:
  8879 ;;		line 1163 in file "CANlib.h"
  8880 ;; Parameters:    Size  Location     Type
  8881 ;;		None
  8882 ;; Auto vars:     Size  Location     Type
  8883 ;;		None
  8884 ;; Return value:  Size  Location     Type
  8885 ;;                  1    wreg      unsigned char 
  8886 ;; Registers used:
  8887 ;;		wreg, status,2
  8888 ;; Tracked objects:
  8889 ;;		On entry : 0/0
  8890 ;;		On exit  : 0/0
  8891 ;;		Unchanged: 0/0
  8892 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  8893 ;;      Params:         0       0       0       0
  8894 ;;      Locals:         1       0       0       0
  8895 ;;      Temps:          0       0       0       0
  8896 ;;      Totals:         1       0       0       0
  8897 ;;Total ram usage:        1 bytes
  8898 ;; Hardware stack levels used:    1
  8899 ;; This function calls:
  8900 ;;		Nothing
  8901 ;; This function is called by:
  8902 ;;		_ISR_bassa
  8903 ;; This function uses a non-reentrant model
  8904 ;;
  8905                           
  8906                           	psect	text23
  8907  002806                     __ptext23:
  8908                           	opt stack 0
  8909  002806                     _CANisRxReady:
  8910                           	opt stack 26
  8911                           
  8912                           ;CANlib.h: 1165: return (RXB0CONbits.RXFUL || RXB1CONbits.RXFUL);
  8913                           
  8914                           ; BSR set to: 15
  8915                           ;incstack = 0
  8916  002806  0E01               	movlw	1
  8917  002808  6E01               	movwf	_CANisRxReady$2995,c
  8918  00280A  BE60               	btfsc	3936,7,c	;volatile
  8919  00280C  D005               	goto	i1l561
  8920  00280E  010F               	movlb	15	; () banked
  8921  002810  BF50               	btfsc	80,7,b	;volatile
  8922  002812  D002               	goto	i1l561
  8923                           
  8924                           ; BSR set to: 15
  8925  002814  0E00               	movlw	0
  8926  002816  6E01               	movwf	_CANisRxReady$2995,c
  8927  002818                     i1l561:
  8928  002818  5001               	movf	_CANisRxReady$2995,w,c
  8929  00281A  0012               	return	
  8930  00281C                     __end_of_CANisRxReady:
  8931                           	opt stack 0
  8932  0000                     pclatu	equ	0xFFB
  8933                           pclath	equ	0xFFA
  8934                           tblptru	equ	0xFF8
  8935                           tblptrh	equ	0xFF7
  8936                           tblptrl	equ	0xFF6
  8937                           tablat	equ	0xFF5
  8938                           prodh	equ	0xFF4
  8939                           prodl	equ	0xFF3
  8940                           intcon	equ	0xFF2
  8941                           postinc0	equ	0xFEE
  8942                           fsr0h	equ	0xFEA
  8943                           fsr0l	equ	0xFE9
  8944                           wreg	equ	0xFE8
  8945                           indf1	equ	0xFE7
  8946                           postdec1	equ	0xFE5
  8947                           fsr1h	equ	0xFE2
  8948                           fsr1l	equ	0xFE1
  8949                           bsr	equ	0xFE0
  8950                           indf2	equ	0xFDF
  8951                           postinc2	equ	0xFDE
  8952                           postdec2	equ	0xFDD
  8953                           fsr2h	equ	0xFDA
  8954                           fsr2l	equ	0xFD9
  8955                           status	equ	0xFD8
  8956                           pclatu	equ	0xFFB
  8957                           pclath	equ	0xFFA
  8958                           tblptru	equ	0xFF8
  8959                           tblptrh	equ	0xFF7
  8960                           tblptrl	equ	0xFF6
  8961                           tablat	equ	0xFF5
  8962                           prodh	equ	0xFF4
  8963                           prodl	equ	0xFF3
  8964                           intcon	equ	0xFF2
  8965                           postinc0	equ	0xFEE
  8966                           fsr0h	equ	0xFEA
  8967                           fsr0l	equ	0xFE9
  8968                           wreg	equ	0xFE8
  8969                           indf1	equ	0xFE7
  8970                           postdec1	equ	0xFE5
  8971                           fsr1h	equ	0xFE2
  8972                           fsr1l	equ	0xFE1
  8973                           bsr	equ	0xFE0
  8974                           indf2	equ	0xFDF
  8975                           postinc2	equ	0xFDE
  8976                           postdec2	equ	0xFDD
  8977                           fsr2h	equ	0xFDA
  8978                           fsr2l	equ	0xFD9
  8979                           status	equ	0xFD8
  8980                           
  8981                           	psect	rparam
  8982  0000                     pclatu	equ	0xFFB
  8983                           pclath	equ	0xFFA
  8984                           tblptru	equ	0xFF8
  8985                           tblptrh	equ	0xFF7
  8986                           tblptrl	equ	0xFF6
  8987                           tablat	equ	0xFF5
  8988                           prodh	equ	0xFF4
  8989                           prodl	equ	0xFF3
  8990                           intcon	equ	0xFF2
  8991                           postinc0	equ	0xFEE
  8992                           fsr0h	equ	0xFEA
  8993                           fsr0l	equ	0xFE9
  8994                           wreg	equ	0xFE8
  8995                           indf1	equ	0xFE7
  8996                           postdec1	equ	0xFE5
  8997                           fsr1h	equ	0xFE2
  8998                           fsr1l	equ	0xFE1
  8999                           bsr	equ	0xFE0
  9000                           indf2	equ	0xFDF
  9001                           postinc2	equ	0xFDE
  9002                           postdec2	equ	0xFDD
  9003                           fsr2h	equ	0xFDA
  9004                           fsr2l	equ	0xFD9
  9005                           status	equ	0xFD8
  9006                           
  9007                           	psect	temp
  9008  000043                     btemp:
  9009                           	opt stack 0
  9010  000043                     	ds	1
  9011  0000                     int$flags	set	btemp
  9012                           pclatu	equ	0xFFB
  9013                           pclath	equ	0xFFA
  9014                           tblptru	equ	0xFF8
  9015                           tblptrh	equ	0xFF7
  9016                           tblptrl	equ	0xFF6
  9017                           tablat	equ	0xFF5
  9018                           prodh	equ	0xFF4
  9019                           prodl	equ	0xFF3
  9020                           intcon	equ	0xFF2
  9021                           postinc0	equ	0xFEE
  9022                           fsr0h	equ	0xFEA
  9023                           fsr0l	equ	0xFE9
  9024                           wreg	equ	0xFE8
  9025                           indf1	equ	0xFE7
  9026                           postdec1	equ	0xFE5
  9027                           fsr1h	equ	0xFE2
  9028                           fsr1l	equ	0xFE1
  9029                           bsr	equ	0xFE0
  9030                           indf2	equ	0xFDF
  9031                           postinc2	equ	0xFDE
  9032                           postdec2	equ	0xFDD
  9033                           fsr2h	equ	0xFDA
  9034                           fsr2l	equ	0xFD9
  9035                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        8
    BSS         98
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     31      66
    BANK0           160     35     108
    BANK1           256      0       0
    BANK2           256      0       0

Pointer List with Targets:

    CANreceiveMessage@msg	PTR struct . size(2) Largest target is 15
		 -> msg(BANK0[15]), 

    CANsendMessage@data	PTR unsigned char  size(2) Largest target is 8
		 -> data_array1(BANK0[8]), data_array(BANK0[8]), data_array_debug(BANK0[8]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _ISR_bassa in COMRAM

    _ISR_bassa->_CANreceiveMessage

Critical Paths under _main in BANK0

    _send_data->_CANsendMessage
    _configurazione_iniziale->_CANInitialize
    _delay_ms->___wmul
    _CANInitialize->_CANSetFilter
    _CANInitialize->_CANSetMask
    _battery_measure->_CANsendMessage
    ___wmul->___awdiv
    _abs->___wmul

Critical Paths under _ISR_bassa in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR_bassa in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR_bassa in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 9     9      0   30028
                                             26 BANK0      9     9      0
                   _CANisRXwarningON
                   _CANisTXwarningON
                     _CANsendMessage
                          _OpenEPWM1
                         _OpenTimer2
                         _SetDCEPWM1
                     _SetOutputEPWM1
                            ___awdiv
                             ___wmul
                                _abs
                    _battery_measure
            _configurazione_iniziale
                           _delay_ms
                          _send_data
 ---------------------------------------------------------------------------------
 (1) _send_data                                            1     1      0    4764
                                             16 BANK0      1     1      0
                       _CANisTxReady
                     _CANsendMessage
 ---------------------------------------------------------------------------------
 (1) _configurazione_iniziale                              0     0      0   10054
                      _CANInitialize
                     _SetOutputEPWM1
                           _delay_ms
 ---------------------------------------------------------------------------------
 (1) _delay_ms                                             2     0      2    1418
                                             14 BANK0      2     0      2
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) _SetOutputEPWM1                                       2     1      1     424
                                              0 BANK0      2     1      1
 ---------------------------------------------------------------------------------
 (2) _CANInitialize                                       12     7      5    8212
                                             14 BANK0     12     7      5
                   _CANOperationMode
                       _CANSetFilter
                         _CANSetMask
 ---------------------------------------------------------------------------------
 (3) _CANSetMask                                          14     9      5    1788
                                              0 BANK0     14     9      5
 ---------------------------------------------------------------------------------
 (3) _CANSetFilter                                        14     9      5    5364
                                              0 BANK0     14     9      5
 ---------------------------------------------------------------------------------
 (3) _CANOperationMode                                     1     1      0      62
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _battery_measure                                      0     0      0    6389
                       _CANisTxReady
                     _CANsendMessage
                            ___awdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     848
                                              8 BANK0      6     2      4
                            ___awdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              8     4      4     907
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (2) _CANsendMessage                                      16     8      8    4597
                                              0 BANK0     16     8      8
 ---------------------------------------------------------------------------------
 (2) _CANisTxReady                                         1     1      0      37
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _abs                                                  4     2      2     170
                                             14 BANK0      4     2      2
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _SetDCEPWM1                                           6     4      2     330
                                              0 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (1) _OpenTimer2                                           1     1      0      62
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _OpenEPWM1                                            1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _CANisTXwarningON                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _CANisRXwarningON                                     0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _ISR_bassa                                           19    19      0    1345
                                             12 COMRAM    19    19      0
                       _CANisRxReady
                  _CANreceiveMessage
                   i1_SetOutputEPWM1
 ---------------------------------------------------------------------------------
 (5) i1_SetOutputEPWM1                                     2     1      1     184
                                              0 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (5) _CANreceiveMessage                                   12    10      2    1137
                                              0 COMRAM    12    10      2
 ---------------------------------------------------------------------------------
 (5) _CANisRxReady                                         1     1      0      24
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _CANisRXwarningON
   _CANisTXwarningON
   _CANsendMessage
   _OpenEPWM1
   _OpenTimer2
   _SetDCEPWM1
   _SetOutputEPWM1
   ___awdiv
   ___wmul
     ___awdiv (ARG)
   _abs
     ___wmul (ARG)
       ___awdiv (ARG)
   _battery_measure
     _CANisTxReady
     _CANsendMessage
     ___awdiv
     ___wmul
       ___awdiv (ARG)
   _configurazione_iniziale
     _CANInitialize
       _CANOperationMode
       _CANSetFilter
       _CANSetMask
     _SetOutputEPWM1
     _delay_ms
       ___wmul
         ___awdiv (ARG)
   _delay_ms
     ___wmul
       ___awdiv (ARG)
   _send_data
     _CANisTxReady
     _CANsendMessage

 _ISR_bassa (ROOT)
   _CANisRxReady
   _CANreceiveMessage
   i1_SetOutputEPWM1

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             2FF      0       0      10        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0       0       8        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100      0       0       6        0.0%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0     23      6C       4       67.5%
BITCOMRAM           5E      0       2       0        2.1%
COMRAM              5E     1F      42       1       70.2%
BITSFR_3             0      0       0      40        0.0%
SFR_3                0      0       0      40        0.0%
BITSFR_2             0      0       0      40        0.0%
SFR_2                0      0       0      40        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      AE       9        0.0%
DATA                 0      0      AE      11        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.35 build -356382666 
Symbol Table                                                                                   Thu Feb 04 20:25:04 2016

              ??_CANisTXwarningON 00A9              __end_of_CANSetFilter 0CB4  
                    ___awdiv@sign 00AE                                _id 0020  
                              bsr 000FE0               ___wmul@multiplicand 00B3  
                     __CFG_BORV$3 000000                    _SetOutputEPWM1 25F0  
                    __CFG_CP0$OFF 000000                      __CFG_CP1$OFF 000000  
                     __CFG_OSC$HS 000000                       __CFG_LVP$ON 000000  
            _previousTimeCounter1 0078              _previousTimeCounter2 007C  
                             l402 138C                               l403 1390  
                             l404 139C                               l500 0A10  
                             l501 0A14                               l510 0B20  
                             l502 0A20                               l511 0B2C  
                             l503 0A24                               l520 0C38  
                             l512 0B30                               l504 0A30  
                             l440 1FC4                               l432 1F84  
                             l521 0C3C                               l513 0B3C  
                             l433 1F88                               l370 0D74  
                             l522 0C48                               l514 0B40  
                             l450 20D0                               l434 1F94  
                             l363 0F38                               l523 0C4C  
                             l515 0B4C                               l507 0B0C  
                             l451 20DC                               l443 209C  
                             l435 1F98                               l380 0F52  
                             l364 0CCA                               l524 0C58  
                             l508 0B10                               l444 20A0  
                             l436 1FA4                               l381 104A  
                             l373 0E84                               l365 0CCE  
                             l525 0C5C                               l509 0B1C  
                             l445 20AC                               l437 1FA8  
                             l701 2366                               l390 1118  
                             l382 0FDA                               l374 0E88  
                             l366 0DC6                               l710 2564  
                             l526 0C68                               l518 0C28  
                             l470 06D2                               l446 20B0  
                             l438 1FB4                               l358 21E4  
                             l383 0FE4                               l375 0E94  
                             l367 0D56                               l519 0C2C  
                             l471 06DE                               l463 069E  
                             l447 20BC                               l439 1FB8  
                             l359 21EE                               l384 0FEE  
                             l368 0D60                               l480 07E8  
                             l464 06A2                               l448 20C0  
                             l704 23F0                               l393 11D2  
                             l385 0FF8                               l369 0D6A  
                             l713 25EC                               l481 07EC  
                             l465 06AE                               l449 20CC  
                             l705 23EE                               l394 11D6  
                             l378 11BC                               l490 08F8  
                             l482 07F8                               l474 07B8  
                             l466 06B2                               l395 12CE  
                             l379 0F4E                               l491 0904  
                             l475 07BC                               l467 06BE  
                             l556 27C8                               l396 125E  
                             l388 1108                               l492 0908  
                             l476 07C8                               l468 06C2  
                             l397 1268                               l389 110C  
                             l493 0914                               l485 08D4  
                             l477 07CC                               l469 06CE  
                             l398 1272                               l486 08D8  
                             l478 07D8                               l750 2638  
                             l399 127C                               l487 08E4  
                             l479 07DC                               l671 1BD8  
                             l816 27A0                               l496 09F0  
                             l488 08E8                               l672 1BC8  
                             l497 09F4                               l489 08F4  
                             l569 2774                               l681 1C3C  
                             l498 0A00                               l499 0A04  
                             l683 1C14                               l764 27EA  
                             l765 27EC                               l677 1BD0  
                             l688 1CF0                               l699 23C8  
                    __CFG_CPB$OFF 000000                               _PR2 000FCB  
                    __CFG_CPD$OFF 000000                               _id1 0024  
                             _abs 277E                               _dir 003B  
                             _msg 0082                               prod 000FF3  
                             wreg 000FE8                      __CFG_WDT$OFF 000000  
                            ?_abs 00B7                              l4012 1E42  
                            l4110 026C                              l4200 060C  
                            l5000 1BA6                              l5010 1BFC  
                            l4060 200E                              l4028 1EF8  
                            l5012 1C00                              l4302 095E  
                            l4054 1FC8                              l5006 1BF4  
                            l4128 0324                              l4330 0A34  
                            l4234 0728                              l4146 03DE  
                            l5034 1CD8                              l5026 1C3E  
                            l4228 06E2                              l4164 0498  
                            l4262 07FC                              l4182 0552  
                            l4086 20E0                              l5046 1D00  
                            l4520 0E98                              l4336 0A7A  
                            l5048 1D10                              l4514 0E78  
                            l4370 0B96                              l4450 21F2  
                            l4364 0B50                              l4268 0842  
                            l4454 21FA                              l4296 0918  
                            l4456 223E                              l4448 21DC  
                            l4570 1002                              l4730 2410  
                            l4714 2616                              l4706 2768  
                            l4646 1286                              l4590 10FC  
                            l4494 0D7E                              l4742 2444  
                            l4398 0C6C                              l4718 2626  
                            l4910 2382                              l4902 232A  
                            l4672 13A0                              l4744 2450  
                            l4736 2426                              l4912 2388  
                            l4666 1380                              l4762 24A8  
                            l4754 2486                              l4746 2456  
                            l4906 235A                              l4596 111C  
                            l4916 2392                              l4758 2494  
                            l4936 25B0                              l3994 27F8  
                            l4976 19B2                              _LATA 000F89  
                            _LATB 000F8A                              _LATC 000F8B  
                            _LATD 000F8C                              _LATE 000F8D  
                            u5100 04CE                              u5020 035A  
                            u5105 04C2                              u5025 034E  
                            u5115 052E                              u5035 03BA  
                            u6020 12A6                              u5140 0588  
                            u5060 0414                              u6030 12F2  
                            u5310 081C                              u5230 0702  
                            u6025 129A                              u5145 057C  
                            u5065 0408                              u6210 2836  
                            u6035 12E6                              u5315 0810  
                            u5235 06F6                              u5155 05E8  
                            u5075 0474                              u6220 2842  
                            u4700 1DBE                              u6045 1352  
                            u6310 2380                              u4705 1DB2  
                            u4715 1E1E                              u4740 1E74  
                            u6420 1A16                              u6245 2696  
                            u5630 0C8C                              u5550 0B70  
                            u5470 0A54                              u5390 0938  
                            u4910 2100                              u4830 1FE8  
                            u6360 23D6                              u6440 1A50  
                            u4745 1E68                              u6530 1CA4  
                            u6450 1B38                              u5635 0C80  
                            u5555 0B64                              u5475 0A48  
                            u5395 092C                              u4915 20F4  
                            u4835 1FDC                              u4755 1ED4  
                            u5900 106E                              u4940 01E8  
                            u6460 1B76                              u6446 1A52  
                            u6607 276A                              u6375 23D8  
                            u5760 0D9E                              u5905 1062  
                            u4945 01DC                              u5770 0DEA  
                            u5915 10CE                              u4955 0248  
                            u4980 02A0                              u5765 0D92  
                            u6590 1D74                              u5775 0DDE  
                            u5785 0E4A                              u4985 0294  
                            u5890 1022                              u4995 0300  
                            u5895 1016                              _TMR2 000FCC  
             __size_of_CANSetMask 039E                              abs@a 00B7  
                            _main 194C                              fsr0h 000FEA  
                            fsr1h 000FE2                              fsr0l 000FE9  
                            fsr2h 000FDA                              indf1 000FE7  
                            fsr1l 000FE1                              indf2 000FDF  
                            fsr2l 000FD9                              btemp 0043  
                            pclat 000FFA                              prodh 000FF4  
                            prodl 000FF3                              start 01AA  
                   __CFG_IESO$OFF 000000                     __CFG_MCLRE$ON 000000  
                    ___param_bank 000010                  _CANOperationMode 27F0  
          __end_of_SetOutputEPWM1 2642                             ??_abs 00B9  
      __size_of_CANreceiveMessage 050C                             ?_main 0001  
                 __end_of___awdiv 24B2                   ___awdiv@divisor 00AB  
                           _T2CON 000FCA                             _T3CON 000FB1  
                           i1l410 16D8                             i1l561 2818  
                           i1l650 0148                             i1l661 0124  
                           i1l653 0144                             i1l750 270A  
                           i1l663 0128                             i1l664 012A  
                           i1l666 0162                   ___awdiv@counter 00AD  
                           _TMR3H 000FB3                             _TMR3L 000FB2  
                           _TRISA 000F92                             _TRISB 000F93  
                           _TRISC 000F94                             _TRISD 000F95  
                           _TRISE 000F96                 _CANisRxReady$2995 0001  
                   __CFG_PWRT$OFF 000000                     __CFG_WRT0$OFF 000000  
                   __CFG_WRT1$OFF 000000                __size_of_ISR_bassa 0192  
                  __CFG_EBTR0$OFF 000000                    __CFG_FCMEN$OFF 000000  
                  __CFG_EBTR1$OFF 000000                CANInitialize@flags 00BB  
                   __CFG_WRTB$OFF 000000                     __CFG_WRTC$OFF 000000  
                   __CFG_WRTD$OFF 000000                    __CFG_EBTRB$OFF 000000  
                           _vBatt 0036                    __pbitbssCOMRAM 01C8  
            __end_of_CANisRxReady 281C         __size_ofi1_SetOutputEPWM1 0044  
                           tablat 000FF5              __end_of_CANisTxReady 27CE  
                           status 000FD8                    __CFG_PBADEN$ON 000000  
                      _SetDCEPWM1 268C                   __initialization 2642  
        __size_of_battery_measure 008E                      __end_of_main 1D8A  
                 ?_SetOutputEPWM1 00A9                            ??_main 00C3  
                   __activetblptr 000002                 _CANisTxReady$2993 00A9  
                   _counter_array 0060                            _CANCON 000F6F  
                          _ADRESH 000FC4                  ___awdiv@dividend 00A9  
                 __CFG_BBSIZ$1024 000000                            i1l3600 18FA  
                          i1l3530 1646                            i1l3604 1916  
                          i1l3606 1948                            i1l3542 16A0  
                          i1l3534 1664                            i1l3526 1628  
                          i1l3518 15B8                            i1l3544 16D2  
                          i1l3800 26EE                            i1l3538 1682  
                          i1l3580 1838                            i1l3804 26FC  
                          i1l3820 0066                            i1l3592 18C2  
                          i1l3832 00AE                            i1l3842 00DA  
                          i1l3596 18DE                            i1l3588 18A6  
                          i1l3852 010C                            i1l3836 00C0  
                          i1l3858 012E                        _OpenTimer2 27CE  
                          _RXB0D0 000F66                            _RXB0D1 000F67  
                          _RXB0D2 000F68                            _RXB0D3 000F69  
                          _RXB0D4 000F6A                            _RXB1D0 000F56  
                          _RXB0D5 000F6B                            _RXB1D1 000F57  
                          _RXB0D6 000F6C                            _RXB1D2 000F58  
                          _RXB0D7 000F6D                            _RXB1D3 000F59  
                          _RXB1D4 000F5A                            _RXB1D5 000F5B  
                          _RXB1D6 000F5C                            _RXB1D7 000F5D  
                          _TXB0D0 000F46                            _TXB0D1 000F47  
                          _TXB0D2 000F48                            _TXB0D3 000F49  
                          _TXB1D0 000F36                            _TXB0D4 000F4A  
                          _TXB1D1 000F37                            _TXB0D5 000F4B  
                          _TXB1D2 000F38                            _TXB0D6 000F4C  
                          _TXB1D3 000F39                            _TXB0D7 000F4D  
                          _TXB2D0 000F26                            _TXB1D4 000F3A  
                          _TXB2D1 000F27                            _TXB1D5 000F3B  
                          _TXB2D2 000F28                            _TXB1D6 000F3C  
                          _TXB2D3 000F29                            _TXB1D7 000F3D  
                          _TXB2D4 000F2A                            _TXB2D5 000F2B  
                          _TXB2D6 000F2C                            _TXB2D7 000F2D  
              CANsendMessage@data 00AD                CANsendMessage@tamp 00B5  
                __end_of_delay_ms 277E             __size_of_CANSetFilter 0B06  
                  __CFG_XINST$OFF 000000                __size_of_OpenEPWM1 0012  
               __end_of_ISR_bassa 01AA                            ___wmul 2714  
                       ??___awdiv 00AD                    __CFG_STVREN$ON 000000  
                    ??_CANSetMask 00AE                            _errore 0030  
                OpenTimer2@config 00A9                            clear_0 2648  
                          clear_1 2658                  ___awdiv@quotient 00AF  
        ?_configurazione_iniziale 0001                   __CFG_BOREN$BOHW 000000  
                    __pdataCOMRAM 003B                            tblptrh 000FF7  
                          tblptrl 000FF6                            tblptru 000FF8  
                    _CANSetFilter 01AE                        __accesstop 0060  
         __end_of__initialization 267E                __end_of_CANSetMask 2128  
                   ___rparam_used 000001         __size_of_CANisRXwarningON 000C  
                     ?_SetDCEPWM1 00A9                    __pcstackCOMRAM 0001  
               ??_battery_measure 00B9             CANSetFilter@numBuffer 00B2  
                 OpenEPWM1@period 00A9         __size_of_CANisTXwarningON 000C  
           __size_of_CANisRxReady 0016             __size_of_CANisTxReady 0024  
               __end_of_OpenEPWM1 282E          __end_of_CANOperationMode 2806  
                i1_SetOutputEPWM1 26D0                        __pbssBANK0 0060  
                     ?_OpenTimer2 0001                        _data_array 0091  
         __size_of_CANsendMessage 078C                           ?___wmul 00B1  
              __size_of_send_data 0106                      _CANisRxReady 2806  
                         _ECCPR1L 000FBB                           _CANSTAT 000F6E  
                    _CANisTxReady 27AA                           _BRGCON1 000F70  
                         _BRGCON2 000F71                           _BRGCON3 000F72  
          __size_of_CANInitialize 01C6                         ?_delay_ms 00B7  
                         _RXB0DLC 000F65                           _RXB1DLC 000F55  
                         _RXB0CON 000F60               __size_of_SetDCEPWM1 0044  
                         _RXB1CON 000F50                           _TXB0DLC 000F45  
                         _TXB1DLC 000F35                           _TXB2DLC 000F25  
             CANsendMessage@flags 00B0                  _data_array_debug 00A1  
        SetOutputEPWM1@outputmode 00A9                        _correzione 002E  
                ??_SetOutputEPWM1 00AA                           __Hparam 0000  
                      _left_speed 0032                           __Lparam 0000  
                delay_ms@value_ms 00B7                           ___awdiv 23F4  
                 __size_of___wmul 0036              CANInitialize@propSeg 00C0  
                         __pcinit 2642                           __ramtop 0300  
             __size_of_OpenTimer2 0022                           __ptext0 194C  
                         __ptext1 22EE                           __ptext2 24B2  
                         __ptext3 274A                           __ptext4 25F0  
                         __ptext5 2128                           __ptext6 1D8A  
                         __ptext7 01AE                           __ptext8 27F0  
                         __ptext9 2562                           _counter 0070  
                       _T2CONbits 000FCA                      __size_of_abs 002C  
      i1SetOutputEPWM1@outputmode 0001                        _duty_cycle 0080  
                      ??_delay_ms 00B9            CANreceiveMessage@error 000B  
            end_of_initialization 267E                 __end_of_send_data 23F4  
                   __Lmediumconst 0000                  _CANisRXwarningON 283A  
                   _CANInitialize 2128                           postdec1 000FE5  
                         postdec2 000FDD                           postinc0 000FEE  
                         postinc2 000FDE      i1SetOutputEPWM1@outputconfig 0002  
                       _ISR_bassa 0018                         _PORTAbits 000F80  
                  CANSetMask@mask 00A9                         _PORTCbits 000F82  
                  CANSetMask@tamp 00B3                    _centralina_abs 01C9  
                  CANSetMask@type 00AD                  _CANisTXwarningON 282E  
                       _TRISDbits 000F95  __size_of_configurazione_iniziale 00B0  
             _previousTimeCounter 0074           _clock_counter_reference 002C  
                  _CANsendMessage 0CB4                  CANInitialize@BRP 00BA  
                CANInitialize@SJW 00B9                    ?_CANInitialize 00B7  
                      main@period 00CB                      ??_SetDCEPWM1 00AB  
                 _battery_measure 2562                        ?_ISR_bassa 0001  
        __end_ofi1_SetOutputEPWM1 2714                    __end_of___wmul 274A  
                   __pidataCOMRAM 2846               start_initialization 2642  
                     __end_of_abs 27AA                __end_of_SetDCEPWM1 26D0  
             CANSetMask@numBuffer 00B2            __end_of_CANsendMessage 1440  
               ?_CANOperationMode 0001                      ??_OpenTimer2 00A9  
                       _OpenEPWM1 281C                ??_CANOperationMode 00A9  
      CANInitialize@FilterConfig1 00C1        CANInitialize@FilterConfig2 00C2  
                        ??___wmul 00B5                  __CFG_LPT1OSC$OFF 000000  
              __end_of_OpenTimer2 27F0            CANInitialize@phaseSeg1 00B7  
          CANInitialize@phaseSeg2 00B8                       __pbssCOMRAM 0020  
                   __pcstackBANK0 00A9                       _BRGCON2bits 000F71  
                     _BRGCON3bits 000F72                       _data_array1 0099  
             SetDCEPWM1@dutycycle 00A9                 __size_of_delay_ms 0034  
                 ?_CANsendMessage 00A9                        ?_OpenEPWM1 0001  
         __end_of_battery_measure 25F0                   ??_CANInitialize 00BC  
                       _can_retry 01C8                      _currentSpeed 0041  
              CANSetFilter@filter 00A9                          ?___awdiv 00A9  
                     ??_ISR_bassa 000D                       __pintcodelo 0018  
                      send_data@i 00B9                          _ECCP1CON 000FBA  
        __end_of_CANisRXwarningON 2846                       _COMSTATbits 000F74  
      SetOutputEPWM1@outputconfig 00AA                     _remote_frame1 01CE  
         _configurazione_iniziale 24B2                      _message_sent 01CC  
           CANreceiveMessage@tamp 000C                    ___wmul@product 00B5  
                        _IPR2bits 000FA2      _delay_quartz_frequency_value 0042  
                        _PIE1bits 000F9D                          _IPR3bits 000FA5  
                        _PIE2bits 000FA0                         _send_data 22EE  
                        _PIE3bits 000FA3          __end_of_CANisTXwarningON 283A  
                        i1u400_25 16AC                          i1u402_20 1780  
                        i1u402_26 1782                          i1u403_20 17AA  
                        i1u411_25 1922                          i1u403_26 17AC  
                        i1u405_25 17BE                          i1u391_20 14F8  
                        i1u391_26 14FA                          i1u392_20 1526  
                        i1u392_26 1528                          i1u394_25 153C  
                        _PIR1bits 000F9E                          _PIR2bits 000FA1  
                        _PIR3bits 000FA4                          _RXB0EIDH 000F63  
                        _RXB0EIDL 000F64                          _RXB1EIDH 000F53  
                        _RXB1EIDL 000F54                          _RCONbits 000FD0  
                __CFG_WDTPS$32768 000000                          _RXB0SIDH 000F61  
                        _RXB0SIDL 000F62                          _RXF0EIDH 000F02  
                        _RXB1SIDH 000F51                          _RXF0EIDL 000F03  
                        _RXB1SIDL 000F52                          _RXF1EIDH 000F06  
                        _RXF1EIDL 000F07                          _RXF2EIDH 000F0A  
                        _RXF2EIDL 000F0B                          _RXF3EIDH 000F0E  
                        _RXF3EIDL 000F0F                          _RXF4EIDH 000F12  
                        _RXF4EIDL 000F13                          _RXF5EIDH 000F16  
                        _RXF5EIDL 000F17                          _RXF0SIDH 000F00  
                        _RXF0SIDL 000F01                          _TXB0EIDH 000F43  
                        _RXF1SIDH 000F04                          _TXB0EIDL 000F44  
                        _RXF1SIDL 000F05                          _TXB1EIDH 000F33  
                        _RXF2SIDH 000F08                          _TXB1EIDL 000F34  
                        _RXF2SIDL 000F09                          _TXB2EIDH 000F23  
                        _RXF3SIDH 000F0C                          _TXB2EIDL 000F24  
                        _RXF3SIDL 000F0D                          _RXF4SIDH 000F10  
                        _RXF4SIDL 000F11                          _RXF5SIDH 000F14  
                        _RXF5SIDL 000F15                          _RXM0EIDH 000F1A  
                        _RXM0EIDL 000F1B                          _TXB0SIDH 000F41  
                        _RXM1EIDH 000F1E                          _TXB0SIDL 000F42  
                        _RXM1EIDL 000F1F                          _TXB1SIDH 000F31  
                        _TXB1SIDL 000F32                          _TXB2SIDH 000F21  
                        _TXB2SIDL 000F22                          _RXM0SIDH 000F18  
                        _RXM0SIDL 000F19                          _RXM1SIDH 000F1C  
                        _RXM1SIDL 000F1D                          _RXERRCNT 000F75  
                        _TXERRCNT 000F76                        _ADCON0bits 000FC2  
                      _ADCON1bits 000FC1                        _ADCON2bits 000FC0  
               ___wmul@multiplier 00B1                     ?_CANSetFilter 00A9  
                       copy_data0 2672                        _CANCONbits 000F6F  
                     ??_OpenEPWM1 00A9                  ?_battery_measure 0001  
                      ?_send_data 0001                          __Hrparam 0000  
                    _RXB0SIDLbits 000F62                  SetDCEPWM1@DCycle 00AD  
                        __Lrparam 0000                      _RXB1SIDLbits 000F52  
              _centralina_comando 01CA                        _CANSetMask 1D8A  
                __size_of___awdiv 00BE                 ?i1_SetOutputEPWM1 0001  
         __size_of_SetOutputEPWM1 0052                ??i1_SetOutputEPWM1 0002  
              _currentSpeed_array 0068         ??_configurazione_iniziale 00C3  
                    _RXF0SIDLbits 000F01                          _delay_ms 274A  
                    _RXF1SIDLbits 000F05                    ??_CANSetFilter 00AE  
                        __ptext10 2714                          __ptext11 23F4  
                        __ptext12 0CB4                          __ptext21 26D0  
                        __ptext13 27AA                          __ptext22 1440  
                        __ptext14 277E                          __ptext23 2806  
                        __ptext15 268C                          __ptext16 27CE  
                        __ptext17 281C                          __ptext18 282E  
                        __ptext19 283A                      _RXF2SIDLbits 000F09  
                    _RXF3SIDLbits 000F0D                      _RXF4SIDLbits 000F11  
                   _speed_fetched 01D0                      _RXF5SIDLbits 000F15  
        CANsendMessage@dataLength 00AF                      _remote_frame 01CD  
                   __size_of_main 043E                          _duty_set 003D  
            CANreceiveMessage@msg 0001                      _TXB0SIDLbits 000F42  
                    _TXB1SIDLbits 000F32                      _TXB2SIDLbits 000F22  
                        int$flags 0043         __size_of_CANOperationMode 0016  
                   ?_CANisRxReady 0001                     ?_CANisTxReady 0001  
                     _RXB0DLCbits 000F65                       _RXB1DLCbits 000F55  
                    _RXM0SIDLbits 000F19                       _RXB0CONbits 000F60  
                     _RXB1CONbits 000F50                 _CANreceiveMessage 1440  
                    _RXM1SIDLbits 000F1D                        _INTCONbits 000FF2  
                ??_CANsendMessage 00B1                      _requestSpeed 0038  
              ?_CANreceiveMessage 0001                      _request_sent 01CF  
        CANsendMessage@identifier 00A9                          intlevel1 0000  
               _centralina_sterzo 01CB                  CANSetFilter@tamp 00B3  
                CANSetFilter@type 00AD               ??_CANreceiveMessage 0003  
                     _TXB0DLCbits 000F45                       _right_speed 0034  
                     _TXB1DLCbits 000F35                       _TXB0CONbits 000F40  
                     ??_send_data 00B9                       _TXB2DLCbits 000F25  
 __end_of_configurazione_iniziale 2562                       _TXB1CONbits 000F30  
                     _TXB2CONbits 000F20                       _timeCounter 0028  
            CANOperationMode@mode 00A9                    ??_CANisRxReady 0001  
                     ?_CANSetMask 00A9                    ??_CANisTxReady 00A9  
       __end_of_CANreceiveMessage 194C                 ?_CANisRXwarningON 0001  
              ??_CANisRXwarningON 00A9                       _previousPwm 003F  
           __end_of_CANInitialize 22EE                 ?_CANisTXwarningON 0001  
