

Microchip Technology PIC18 LITE Macro Assembler V1.35 build -356382666 
                                                                                               Mon Dec 07 17:07:39 2015

Microchip Technology Omniscient Code Generator v1.35 (Free mode) build 201507080246
     1                           	processor	18F4480
     2                           	fnconf	param0,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	idataBANK0,global,class=CODE,delta=1
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bitbssCOMRAM,global,bit,class=COMRAM,space=1,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    14                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    15                           	psect	text0,global,reloc=2,class=CODE,delta=1
    16                           	psect	text1,global,reloc=2,class=CODE,delta=1
    17                           	psect	text2,global,reloc=2,class=CODE,delta=1
    18                           	psect	text3,global,reloc=2,class=CODE,delta=1
    19                           	psect	text4,global,reloc=2,class=CODE,delta=1
    20                           	psect	text5,global,reloc=2,class=CODE,delta=1
    21                           	psect	text6,global,reloc=2,class=CODE,delta=1
    22                           	psect	text7,global,reloc=2,class=CODE,delta=1
    23                           	psect	text8,global,reloc=2,class=CODE,delta=1
    24                           	psect	text9,global,reloc=2,class=CODE,delta=1
    25                           	psect	text10,global,reloc=2,class=CODE,delta=1
    26                           	psect	text11,global,reloc=2,class=CODE,delta=1
    27                           	psect	text12,global,reloc=2,class=CODE,delta=1
    28                           	psect	text13,global,reloc=2,class=CODE,delta=1
    29                           	psect	text14,global,reloc=2,class=CODE,delta=1
    30                           	psect	text15,global,reloc=2,class=CODE,delta=1
    31                           	psect	text16,global,reloc=2,class=CODE,delta=1
    32                           	psect	text17,global,reloc=2,class=CODE,delta=1
    33                           	psect	text18,global,reloc=2,class=CODE,delta=1
    34                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    35                           	psect	text20,global,reloc=2,class=CODE,delta=1
    36                           	psect	text21,global,reloc=2,class=CODE,delta=1
    37                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    38                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    39                           	psect	text23,global,reloc=2,class=CODE,delta=1
    40                           	psect	text24,global,reloc=2,class=CODE,delta=1
    41                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    42                           	psect	param0,global,class=BANK0,space=1,delta=1
    43                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    44  0000                     
    45                           	psect	idataCOMRAM
    46  002752                     __pidataCOMRAM:
    47                           	opt stack 0
    48                           
    49                           ;initializer for _currentSpeed
    50  002752  01                 	db	1
    51                           
    52                           	psect	idataBANK0
    53  002753                     __pidataBANK0:
    54                           	opt stack 0
    55                           
    56                           ;initializer for _delay_quartz_frequency_value
    57  002753  10                 	db	16
    58  0000                     _RXB1CON	set	3920
    59  0000                     _RXB1CONbits	set	3920
    60  0000                     _RXB1D0	set	3926
    61  0000                     _RXB1D1	set	3927
    62  0000                     _RXB1D2	set	3928
    63  0000                     _RXB1D3	set	3929
    64  0000                     _RXB1D4	set	3930
    65  0000                     _RXB1D5	set	3931
    66  0000                     _RXB1D6	set	3932
    67  0000                     _RXB1D7	set	3933
    68  0000                     _RXB1DLC	set	3925
    69  0000                     _RXB1DLCbits	set	3925
    70  0000                     _RXB1EIDH	set	3923
    71  0000                     _RXB1EIDL	set	3924
    72  0000                     _RXB1SIDH	set	3921
    73  0000                     _RXB1SIDL	set	3922
    74  0000                     _RXB1SIDLbits	set	3922
    75  0000                     _RXF0EIDH	set	3842
    76  0000                     _RXF0EIDL	set	3843
    77  0000                     _RXF0SIDH	set	3840
    78  0000                     _RXF0SIDL	set	3841
    79  0000                     _RXF0SIDLbits	set	3841
    80  0000                     _RXF1EIDH	set	3846
    81  0000                     _RXF1EIDL	set	3847
    82  0000                     _RXF1SIDH	set	3844
    83  0000                     _RXF1SIDL	set	3845
    84  0000                     _RXF1SIDLbits	set	3845
    85  0000                     _RXF2EIDH	set	3850
    86  0000                     _RXF2EIDL	set	3851
    87  0000                     _RXF2SIDH	set	3848
    88  0000                     _RXF2SIDL	set	3849
    89  0000                     _RXF2SIDLbits	set	3849
    90  0000                     _RXF3EIDH	set	3854
    91  0000                     _RXF3EIDL	set	3855
    92  0000                     _RXF3SIDH	set	3852
    93  0000                     _RXF3SIDL	set	3853
    94  0000                     _RXF3SIDLbits	set	3853
    95  0000                     _RXF4EIDH	set	3858
    96  0000                     _RXF4EIDL	set	3859
    97  0000                     _RXF4SIDH	set	3856
    98  0000                     _RXF4SIDL	set	3857
    99  0000                     _RXF4SIDLbits	set	3857
   100  0000                     _RXF5EIDH	set	3862
   101  0000                     _RXF5EIDL	set	3863
   102  0000                     _RXF5SIDH	set	3860
   103  0000                     _RXF5SIDL	set	3861
   104  0000                     _RXF5SIDLbits	set	3861
   105  0000                     _RXM0EIDH	set	3866
   106  0000                     _RXM0EIDL	set	3867
   107  0000                     _RXM0SIDH	set	3864
   108  0000                     _RXM0SIDL	set	3865
   109  0000                     _RXM0SIDLbits	set	3865
   110  0000                     _RXM1EIDH	set	3870
   111  0000                     _RXM1EIDL	set	3871
   112  0000                     _RXM1SIDH	set	3868
   113  0000                     _RXM1SIDL	set	3869
   114  0000                     _RXM1SIDLbits	set	3869
   115  0000                     _TXB0CONbits	set	3904
   116  0000                     _TXB0D0	set	3910
   117  0000                     _TXB0D1	set	3911
   118  0000                     _TXB0D2	set	3912
   119  0000                     _TXB0D3	set	3913
   120  0000                     _TXB0D4	set	3914
   121  0000                     _TXB0D5	set	3915
   122  0000                     _TXB0D6	set	3916
   123  0000                     _TXB0D7	set	3917
   124  0000                     _TXB0DLC	set	3909
   125  0000                     _TXB0DLCbits	set	3909
   126  0000                     _TXB0EIDH	set	3907
   127  0000                     _TXB0EIDL	set	3908
   128  0000                     _TXB0SIDH	set	3905
   129  0000                     _TXB0SIDL	set	3906
   130  0000                     _TXB0SIDLbits	set	3906
   131  0000                     _TXB1CONbits	set	3888
   132  0000                     _TXB1D0	set	3894
   133  0000                     _TXB1D1	set	3895
   134  0000                     _TXB1D2	set	3896
   135  0000                     _TXB1D3	set	3897
   136  0000                     _TXB1D4	set	3898
   137  0000                     _TXB1D5	set	3899
   138  0000                     _TXB1D6	set	3900
   139  0000                     _TXB1D7	set	3901
   140  0000                     _TXB1DLC	set	3893
   141  0000                     _TXB1DLCbits	set	3893
   142  0000                     _TXB1EIDH	set	3891
   143  0000                     _TXB1EIDL	set	3892
   144  0000                     _TXB1SIDH	set	3889
   145  0000                     _TXB1SIDL	set	3890
   146  0000                     _TXB1SIDLbits	set	3890
   147  0000                     _TXB2CONbits	set	3872
   148  0000                     _TXB2D0	set	3878
   149  0000                     _TXB2D1	set	3879
   150  0000                     _TXB2D2	set	3880
   151  0000                     _TXB2D3	set	3881
   152  0000                     _TXB2D4	set	3882
   153  0000                     _TXB2D5	set	3883
   154  0000                     _TXB2D6	set	3884
   155  0000                     _TXB2D7	set	3885
   156  0000                     _TXB2DLC	set	3877
   157  0000                     _TXB2DLCbits	set	3877
   158  0000                     _TXB2EIDH	set	3875
   159  0000                     _TXB2EIDL	set	3876
   160  0000                     _TXB2SIDH	set	3873
   161  0000                     _TXB2SIDL	set	3874
   162  0000                     _TXB2SIDLbits	set	3874
   163  0000                     _ADCON1	set	4033
   164  0000                     _BRGCON1	set	3952
   165  0000                     _BRGCON2	set	3953
   166  0000                     _BRGCON2bits	set	3953
   167  0000                     _BRGCON3	set	3954
   168  0000                     _BRGCON3bits	set	3954
   169  0000                     _CANCON	set	3951
   170  0000                     _CANCONbits	set	3951
   171  0000                     _CANSTAT	set	3950
   172  0000                     _COMSTATbits	set	3956
   173  0000                     _ECCP1CON	set	4026
   174  0000                     _ECCPR1L	set	4027
   175  0000                     _INTCON2bits	set	4081
   176  0000                     _INTCONbits	set	4082
   177  0000                     _IPR2bits	set	4002
   178  0000                     _IPR3bits	set	4005
   179  0000                     _LATA	set	3977
   180  0000                     _LATB	set	3978
   181  0000                     _LATC	set	3979
   182  0000                     _LATD	set	3980
   183  0000                     _LATE	set	3981
   184  0000                     _PIE1bits	set	3997
   185  0000                     _PIE2bits	set	4000
   186  0000                     _PIE3bits	set	4003
   187  0000                     _PIR1bits	set	3998
   188  0000                     _PIR2bits	set	4001
   189  0000                     _PIR3bits	set	4004
   190  0000                     _PORTAbits	set	3968
   191  0000                     _PORTD	set	3971
   192  0000                     _PR2	set	4043
   193  0000                     _RCONbits	set	4048
   194  0000                     _RXB0CON	set	3936
   195  0000                     _RXB0CONbits	set	3936
   196  0000                     _RXB0D0	set	3942
   197  0000                     _RXB0D1	set	3943
   198  0000                     _RXB0D2	set	3944
   199  0000                     _RXB0D3	set	3945
   200  0000                     _RXB0D4	set	3946
   201  0000                     _RXB0D5	set	3947
   202  0000                     _RXB0D6	set	3948
   203  0000                     _RXB0D7	set	3949
   204  0000                     _RXB0DLC	set	3941
   205  0000                     _RXB0DLCbits	set	3941
   206  0000                     _RXB0EIDH	set	3939
   207  0000                     _RXB0EIDL	set	3940
   208  0000                     _RXB0SIDH	set	3937
   209  0000                     _RXB0SIDL	set	3938
   210  0000                     _RXB0SIDLbits	set	3938
   211  0000                     _RXERRCNT	set	3957
   212  0000                     _T2CON	set	4042
   213  0000                     _T2CONbits	set	4042
   214  0000                     _T3CON	set	4017
   215  0000                     _TMR2	set	4044
   216  0000                     _TMR3H	set	4019
   217  0000                     _TMR3L	set	4018
   218  0000                     _TRISA	set	3986
   219  0000                     _TRISB	set	3987
   220  0000                     _TRISC	set	3988
   221  0000                     _TRISD	set	3989
   222  0000                     _TRISDbits	set	3989
   223  0000                     _TRISE	set	3990
   224  0000                     _TXERRCNT	set	3958
   225                           
   226                           ; #config settings
   227  0000                     
   228                           	psect	cinit
   229  00251A                     __pcinit:
   230                           	opt stack 0
   231  00251A                     start_initialization:
   232                           	opt stack 0
   233  00251A                     __initialization:
   234                           	opt stack 0
   235                           
   236                           ; Clear objects allocated to BANK0 (33 bytes)
   237  00251A  EE00  F099         	lfsr	0,__pbssBANK0
   238  00251E  0E21               	movlw	33
   239  002520                     clear_0:
   240  002520  6AEE               	clrf	postinc0,c
   241  002522  06E8               	decf	wreg,f,c
   242  002524  E1FD               	bnz	clear_0
   243                           
   244                           ; Clear objects allocated to BITCOMRAM (1 bytes)
   245  002526  6A47               	clrf	(__pbitbssCOMRAM/(0+8))& (0+255),c
   246                           
   247                           ; Clear objects allocated to COMRAM (41 bytes)
   248  002528  EE00  F001         	lfsr	0,__pbssCOMRAM
   249  00252C  0E29               	movlw	41
   250  00252E                     clear_1:
   251  00252E  6AEE               	clrf	postinc0,c
   252  002530  06E8               	decf	wreg,f,c
   253  002532  E1FD               	bnz	clear_1
   254                           
   255                           ; Initialize objects allocated to BANK0 (1 bytes)
   256                           ; load TBLPTR registers with __pidataBANK0
   257  002534  0E53               	movlw	low __pidataBANK0
   258  002536  6EF6               	movwf	tblptrl,c
   259  002538  0E27               	movlw	high __pidataBANK0
   260  00253A  6EF7               	movwf	tblptrh,c
   261  00253C  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   262  00253E  6EF8               	movwf	tblptru,c
   263  002540  0009               	tblrd		*+	;fetch initializer
   264  002542  CFF5 F0BA          	movff	tablat,__pdataBANK0
   265                           
   266                           ; Initialize objects allocated to COMRAM (1 bytes)
   267                           ; load TBLPTR registers with __pidataCOMRAM
   268  002546  0E52               	movlw	low __pidataCOMRAM
   269  002548  6EF6               	movwf	tblptrl,c
   270  00254A  0E27               	movlw	high __pidataCOMRAM
   271  00254C  6EF7               	movwf	tblptrh,c
   272  00254E  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   273  002550  6EF8               	movwf	tblptru,c
   274  002552  0009               	tblrd		*+	;fetch initializer
   275  002554  CFF5 F048          	movff	tablat,__pdataCOMRAM
   276  002558                     end_of_initialization:
   277                           	opt stack 0
   278  002558                     __end_of__initialization:
   279                           	opt stack 0
   280  002558  9049               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   281  00255A  9249               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   282  00255C  0E00               	movlw	low (__Lmediumconst shr (0+16))
   283  00255E  6EF8               	movwf	tblptru,c
   284  002560  0100               	movlb	0
   285  002562  EFA0  F00C         	goto	_main	;jump to C main() function
   286                           tblptru	equ	0xFF8
   287                           tblptrh	equ	0xFF7
   288                           tblptrl	equ	0xFF6
   289                           tablat	equ	0xFF5
   290                           postinc0	equ	0xFEE
   291                           wreg	equ	0xFE8
   292                           
   293                           	psect	bitbssCOMRAM
   294  000238                     __pbitbssCOMRAM:
   295                           	opt stack 0
   296  000238                     _misura:
   297                           	opt stack 0
   298  000238                     	ds	1
   299  000239                     _remote_frame:
   300                           	opt stack 0
   301  000239                     	ds	1
   302                           tblptru	equ	0xFF8
   303                           tblptrh	equ	0xFF7
   304                           tblptrl	equ	0xFF6
   305                           tablat	equ	0xFF5
   306                           postinc0	equ	0xFEE
   307                           wreg	equ	0xFE8
   308                           
   309                           	psect	bssCOMRAM
   310  000001                     __pbssCOMRAM:
   311                           	opt stack 0
   312  000001                     _counter_array:
   313                           	opt stack 0
   314  000001                     	ds	8
   315  000009                     _counter:
   316                           	opt stack 0
   317  000009                     	ds	4
   318  00000D                     _timeCounter:
   319                           	opt stack 0
   320  00000D                     	ds	4
   321  000011                     _duty_cycle:
   322                           	opt stack 0
   323  000011                     	ds	2
   324  000013                     _msg:
   325                           	opt stack 0
   326  000013                     	ds	15
   327  000022                     _data_array:
   328                           	opt stack 0
   329  000022                     	ds	8
   330                           tblptru	equ	0xFF8
   331                           tblptrh	equ	0xFF7
   332                           tblptrl	equ	0xFF6
   333                           tablat	equ	0xFF5
   334                           postinc0	equ	0xFEE
   335                           wreg	equ	0xFE8
   336                           
   337                           	psect	dataCOMRAM
   338  000048                     __pdataCOMRAM:
   339                           	opt stack 0
   340  000048                     _currentSpeed:
   341                           	opt stack 0
   342  000048                     	ds	1
   343                           tblptru	equ	0xFF8
   344                           tblptrh	equ	0xFF7
   345                           tblptrl	equ	0xFF6
   346                           tablat	equ	0xFF5
   347                           postinc0	equ	0xFEE
   348                           wreg	equ	0xFE8
   349                           
   350                           	psect	bssBANK0
   351  000099                     __pbssBANK0:
   352                           	opt stack 0
   353  000099                     _currentSpeed_array:
   354                           	opt stack 0
   355  000099                     	ds	8
   356  0000A1                     _id:
   357                           	opt stack 0
   358  0000A1                     	ds	4
   359  0000A5                     _previousTimeCounter:
   360                           	opt stack 0
   361  0000A5                     	ds	4
   362  0000A9                     _previousTimeCounter1:
   363                           	opt stack 0
   364  0000A9                     	ds	4
   365  0000AD                     _clock_counter_reference:
   366                           	opt stack 0
   367  0000AD                     	ds	2
   368  0000AF                     _correzione:
   369                           	opt stack 0
   370  0000AF                     	ds	2
   371  0000B1                     _dir:
   372                           	opt stack 0
   373  0000B1                     	ds	2
   374  0000B3                     _errore:
   375                           	opt stack 0
   376  0000B3                     	ds	2
   377  0000B5                     _duty_set:
   378                           	opt stack 0
   379  0000B5                     	ds	1
   380  0000B6                     _left_speed:
   381                           	opt stack 0
   382  0000B6                     	ds	1
   383  0000B7                     _previousPwm:
   384                           	opt stack 0
   385  0000B7                     	ds	1
   386  0000B8                     _requestSpeed:
   387                           	opt stack 0
   388  0000B8                     	ds	1
   389  0000B9                     _right_speed:
   390                           	opt stack 0
   391  0000B9                     	ds	1
   392                           tblptru	equ	0xFF8
   393                           tblptrh	equ	0xFF7
   394                           tblptrl	equ	0xFF6
   395                           tablat	equ	0xFF5
   396                           postinc0	equ	0xFEE
   397                           wreg	equ	0xFE8
   398                           
   399                           	psect	dataBANK0
   400  0000BA                     __pdataBANK0:
   401                           	opt stack 0
   402  0000BA                     _delay_quartz_frequency_value:
   403                           	opt stack 0
   404  0000BA                     	ds	1
   405                           tblptru	equ	0xFF8
   406                           tblptrh	equ	0xFF7
   407                           tblptrl	equ	0xFF6
   408                           tablat	equ	0xFF5
   409                           postinc0	equ	0xFEE
   410                           wreg	equ	0xFE8
   411                           
   412                           	psect	cstackBANK0
   413  000060                     __pcstackBANK0:
   414                           	opt stack 0
   415  000060                     ?i2___wmul:
   416                           	opt stack 0
   417  000060                     i2___wmul@multiplier:
   418                           	opt stack 0
   419                           
   420                           ; 2 bytes @ 0x0
   421  000060                     	ds	2
   422  000062                     i2___wmul@multiplicand:
   423                           	opt stack 0
   424                           
   425                           ; 2 bytes @ 0x2
   426  000062                     	ds	2
   427  000064                     i2___wmul@product:
   428                           	opt stack 0
   429                           
   430                           ; 2 bytes @ 0x4
   431  000064                     	ds	2
   432  000066                     i2delay_ms@value_ms:
   433                           	opt stack 0
   434                           
   435                           ; 2 bytes @ 0x6
   436  000066                     	ds	2
   437  000068                     ??_ISR_alta:
   438  000068                     
   439                           ; 0 bytes @ 0x8
   440  000068                     	ds	14
   441  000076                     ?_abs:
   442                           	opt stack 0
   443  000076                     ?___awdiv:
   444                           	opt stack 0
   445  000076                     CANOperationMode@mode:
   446                           	opt stack 0
   447  000076                     _CANisTxReady$2803:
   448                           	opt stack 0
   449  000076                     OpenEPWM1@period:
   450                           	opt stack 0
   451  000076                     SetOutputEPWM1@outputmode:
   452                           	opt stack 0
   453  000076                     OpenTimer2@config:
   454                           	opt stack 0
   455  000076                     SetDCEPWM1@dutycycle:
   456                           	opt stack 0
   457  000076                     abs@a:
   458                           	opt stack 0
   459  000076                     ___awdiv@dividend:
   460                           	opt stack 0
   461  000076                     CANsendMessage@identifier:
   462                           	opt stack 0
   463  000076                     CANSetMask@mask:
   464                           	opt stack 0
   465  000076                     CANSetFilter@filter:
   466                           	opt stack 0
   467                           
   468                           ; 4 bytes @ 0x16
   469  000076                     	ds	1
   470  000077                     SetOutputEPWM1@outputconfig:
   471                           	opt stack 0
   472                           
   473                           ; 1 bytes @ 0x17
   474  000077                     	ds	1
   475  000078                     ??_abs:
   476  000078                     ??_SetDCEPWM1:
   477  000078                     ___awdiv@divisor:
   478                           	opt stack 0
   479                           
   480                           ; 2 bytes @ 0x18
   481  000078                     	ds	2
   482  00007A                     CANSetMask@type:
   483                           	opt stack 0
   484  00007A                     CANSetFilter@type:
   485                           	opt stack 0
   486  00007A                     ___awdiv@counter:
   487                           	opt stack 0
   488  00007A                     CANsendMessage@data:
   489                           	opt stack 0
   490  00007A                     SetDCEPWM1@DCycle:
   491                           	opt stack 0
   492                           
   493                           ; 2 bytes @ 0x1A
   494  00007A                     	ds	1
   495  00007B                     ??_CANSetMask:
   496  00007B                     ??_CANSetFilter:
   497  00007B                     ___awdiv@sign:
   498                           	opt stack 0
   499                           
   500                           ; 1 bytes @ 0x1B
   501  00007B                     	ds	1
   502  00007C                     CANsendMessage@dataLength:
   503                           	opt stack 0
   504  00007C                     ___awdiv@quotient:
   505                           	opt stack 0
   506                           
   507                           ; 2 bytes @ 0x1C
   508  00007C                     	ds	1
   509  00007D                     CANsendMessage@flags:
   510                           	opt stack 0
   511                           
   512                           ; 1 bytes @ 0x1D
   513  00007D                     	ds	1
   514  00007E                     ??_CANsendMessage:
   515  00007E                     ?___wmul:
   516                           	opt stack 0
   517  00007E                     ___wmul@multiplier:
   518                           	opt stack 0
   519                           
   520                           ; 2 bytes @ 0x1E
   521  00007E                     	ds	1
   522  00007F                     CANSetMask@numBuffer:
   523                           	opt stack 0
   524  00007F                     CANSetFilter@numBuffer:
   525                           	opt stack 0
   526                           
   527                           ; 1 bytes @ 0x1F
   528  00007F                     	ds	1
   529  000080                     ___wmul@multiplicand:
   530                           	opt stack 0
   531  000080                     CANSetMask@tamp:
   532                           	opt stack 0
   533  000080                     CANSetFilter@tamp:
   534                           	opt stack 0
   535                           
   536                           ; 4 bytes @ 0x20
   537  000080                     	ds	2
   538  000082                     ___wmul@product:
   539                           	opt stack 0
   540  000082                     CANsendMessage@tamp:
   541                           	opt stack 0
   542                           
   543                           ; 4 bytes @ 0x22
   544  000082                     	ds	2
   545  000084                     CANInitialize@phaseSeg1:
   546                           	opt stack 0
   547  000084                     delay_ms@value_ms:
   548                           	opt stack 0
   549                           
   550                           ; 2 bytes @ 0x24
   551  000084                     	ds	1
   552  000085                     CANInitialize@phaseSeg2:
   553                           	opt stack 0
   554                           
   555                           ; 1 bytes @ 0x25
   556  000085                     	ds	1
   557  000086                     CANInitialize@SJW:
   558                           	opt stack 0
   559                           
   560                           ; 1 bytes @ 0x26
   561  000086                     	ds	1
   562  000087                     CANInitialize@BRP:
   563                           	opt stack 0
   564                           
   565                           ; 1 bytes @ 0x27
   566  000087                     	ds	1
   567  000088                     CANInitialize@flags:
   568                           	opt stack 0
   569                           
   570                           ; 1 bytes @ 0x28
   571  000088                     	ds	1
   572  000089                     ??_CANInitialize:
   573                           
   574                           ; 0 bytes @ 0x29
   575  000089                     	ds	4
   576  00008D                     CANInitialize@propSeg:
   577                           	opt stack 0
   578                           
   579                           ; 1 bytes @ 0x2D
   580  00008D                     	ds	1
   581  00008E                     CANInitialize@FilterConfig1:
   582                           	opt stack 0
   583                           
   584                           ; 1 bytes @ 0x2E
   585  00008E                     	ds	1
   586  00008F                     CANInitialize@FilterConfig2:
   587                           	opt stack 0
   588                           
   589                           ; 1 bytes @ 0x2F
   590  00008F                     	ds	1
   591  000090                     ??_main:
   592                           
   593                           ; 0 bytes @ 0x30
   594  000090                     	ds	8
   595  000098                     main@period:
   596                           	opt stack 0
   597                           
   598                           ; 1 bytes @ 0x38
   599  000098                     	ds	1
   600                           tblptru	equ	0xFF8
   601                           tblptrh	equ	0xFF7
   602                           tblptrl	equ	0xFF6
   603                           tablat	equ	0xFF5
   604                           postinc0	equ	0xFEE
   605                           wreg	equ	0xFE8
   606                           
   607                           	psect	cstackCOMRAM
   608  00002A                     __pcstackCOMRAM:
   609                           	opt stack 0
   610  00002A                     _CANisRxReady$2805:
   611                           	opt stack 0
   612  00002A                     CANreceiveMessage@msg:
   613                           	opt stack 0
   614                           
   615                           ; 2 bytes @ 0x0
   616  00002A                     	ds	2
   617  00002C                     ??_CANreceiveMessage:
   618                           
   619                           ; 0 bytes @ 0x2
   620  00002C                     	ds	8
   621  000034                     CANreceiveMessage@error:
   622                           	opt stack 0
   623                           
   624                           ; 1 bytes @ 0xA
   625  000034                     	ds	1
   626  000035                     CANreceiveMessage@tamp:
   627                           	opt stack 0
   628                           
   629                           ; 1 bytes @ 0xB
   630  000035                     	ds	1
   631  000036                     ??_ISR_bassa:
   632                           
   633                           ; 0 bytes @ 0xC
   634  000036                     	ds	17
   635                           tblptru	equ	0xFF8
   636                           tblptrh	equ	0xFF7
   637                           tblptrl	equ	0xFF6
   638                           tablat	equ	0xFF5
   639                           postinc0	equ	0xFEE
   640                           wreg	equ	0xFE8
   641                           
   642 ;;
   643 ;;Main: autosize = 0, tempsize = 8, incstack = 0, save=0
   644 ;;
   645 ;; *************** function _main *****************
   646 ;; Defined at:
   647 ;;		line 121 in file "motore.c"
   648 ;; Parameters:    Size  Location     Type
   649 ;;		None
   650 ;; Auto vars:     Size  Location     Type
   651 ;;  period          1   56[BANK0 ] unsigned char 
   652 ;; Return value:  Size  Location     Type
   653 ;;                  2  639[None  ] int 
   654 ;; Registers used:
   655 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   656 ;; Tracked objects:
   657 ;;		On entry : 0/0
   658 ;;		On exit  : 0/0
   659 ;;		Unchanged: 0/0
   660 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   661 ;;      Params:         0       0       0       0
   662 ;;      Locals:         0       1       0       0
   663 ;;      Temps:          0       8       0       0
   664 ;;      Totals:         0       9       0       0
   665 ;;Total ram usage:        9 bytes
   666 ;; Hardware stack levels required when called:    8
   667 ;; This function calls:
   668 ;;		_CANisRXwarningON
   669 ;;		_CANisTXwarningON
   670 ;;		_CANsendMessage
   671 ;;		_OpenEPWM1
   672 ;;		_OpenTimer2
   673 ;;		_SetDCEPWM1
   674 ;;		_SetOutputEPWM1
   675 ;;		___awdiv
   676 ;;		___wmul
   677 ;;		_abs
   678 ;;		_configurazione_iniziale
   679 ;;		_delay_ms
   680 ;;		_send_data
   681 ;; This function is called by:
   682 ;;		Startup code after reset
   683 ;; This function uses a non-reentrant model
   684 ;;
   685                           
   686                           	psect	text0
   687  001940                     __ptext0:
   688                           	opt stack 0
   689  001940                     _main:
   690                           	opt stack 23
   691                           
   692                           ;motore.c: 122: unsigned char period;
   693                           ;motore.c: 123: configurazione_iniziale();
   694                           
   695                           ;incstack = 0
   696  001940  EC28  F012         	call	_configurazione_iniziale	;wreg free
   697                           
   698                           ;motore.c: 124: OpenTimer2(0b01111111 & 0b11111100 & 0b10000111);
   699  001944  0E04               	movlw	4
   700  001946  EC6D  F013         	call	_OpenTimer2
   701                           
   702                           ;motore.c: 125: period = 249;
   703  00194A  0EF9               	movlw	249
   704  00194C  0100               	movlb	0	; () banked
   705  00194E  6F98               	movwf	main@period& (0+255),b
   706                           
   707                           ; BSR set to: 0
   708                           ;motore.c: 126: OpenEPWM1(period);
   709  001950  0100               	movlb	0	; () banked
   710  001952  5198               	movf	main@period& (0+255),w,b
   711  001954  EC94  F013         	call	_OpenEPWM1
   712                           
   713                           ;motore.c: 129: PORTD = 0xFF;
   714  001958  6883               	setf	3971,c	;volatile
   715                           
   716                           ;motore.c: 130: delay_ms(500);
   717  00195A  0E01               	movlw	1
   718  00195C  0100               	movlb	0	; () banked
   719  00195E  6F85               	movwf	(delay_ms@value_ms+1)& (0+255),b
   720  001960  0EF4               	movlw	244
   721  001962  6F84               	movwf	delay_ms@value_ms& (0+255),b
   722  001964  ECD5  F012         	call	_delay_ms	;wreg free
   723                           
   724                           ;motore.c: 131: PORTD = 0x00;
   725  001968  0E00               	movlw	0
   726  00196A  6E83               	movwf	3971,c	;volatile
   727                           
   728                           ;motore.c: 132: delay_ms(500);
   729  00196C  0E01               	movlw	1
   730  00196E  0100               	movlb	0	; () banked
   731  001970  6F85               	movwf	(delay_ms@value_ms+1)& (0+255),b
   732  001972  0EF4               	movlw	244
   733  001974  6F84               	movwf	delay_ms@value_ms& (0+255),b
   734  001976  ECD5  F012         	call	_delay_ms	;wreg free
   735                           
   736                           ;motore.c: 133: PORTD = 0xFF;
   737  00197A  6883               	setf	3971,c	;volatile
   738                           
   739                           ;motore.c: 134: delay_ms(500);
   740  00197C  0E01               	movlw	1
   741  00197E  0100               	movlb	0	; () banked
   742  001980  6F85               	movwf	(delay_ms@value_ms+1)& (0+255),b
   743  001982  0EF4               	movlw	244
   744  001984  6F84               	movwf	delay_ms@value_ms& (0+255),b
   745  001986  ECD5  F012         	call	_delay_ms	;wreg free
   746                           
   747                           ;motore.c: 135: PORTD = 0x00;
   748  00198A  0E00               	movlw	0
   749  00198C  6E83               	movwf	3971,c	;volatile
   750                           
   751                           ;motore.c: 136: delay_ms(500);
   752  00198E  0E01               	movlw	1
   753  001990  0100               	movlb	0	; () banked
   754  001992  6F85               	movwf	(delay_ms@value_ms+1)& (0+255),b
   755  001994  0EF4               	movlw	244
   756  001996  6F84               	movwf	delay_ms@value_ms& (0+255),b
   757  001998  ECD5  F012         	call	_delay_ms	;wreg free
   758  00199C                     l640:
   759                           
   760                           ;motore.c: 140: if (dir == 1) {
   761  00199C  0100               	movlb	0	; () banked
   762  00199E  05B1               	decf	_dir& (0+255),w,b
   763  0019A0  0100               	movlb	0	; () banked
   764  0019A2  11B2               	iorwf	(_dir+1)& (0+255),w,b
   765  0019A4  A4D8               	btfss	status,2,c
   766  0019A6  D006               	goto	l3714
   767                           
   768                           ; BSR set to: 0
   769                           ;motore.c: 141: SetOutputEPWM1(0b01111111, 0b11111100);
   770  0019A8  0EFC               	movlw	252
   771  0019AA  0100               	movlb	0	; () banked
   772  0019AC  6F76               	movwf	SetOutputEPWM1@outputmode& (0+255),b
   773  0019AE  0E7F               	movlw	127
   774  0019B0  EC64  F012         	call	_SetOutputEPWM1
   775  0019B4                     l3714:
   776                           
   777                           ;motore.c: 142: }
   778                           ;motore.c: 143: if (dir == 0) {
   779  0019B4  0100               	movlb	0	; () banked
   780  0019B6  51B1               	movf	_dir& (0+255),w,b
   781  0019B8  0100               	movlb	0	; () banked
   782  0019BA  11B2               	iorwf	(_dir+1)& (0+255),w,b
   783  0019BC  A4D8               	btfss	status,2,c
   784  0019BE  D006               	goto	l3718
   785                           
   786                           ; BSR set to: 0
   787                           ;motore.c: 144: SetOutputEPWM1(0b11111111, 0b11111100);
   788  0019C0  0EFC               	movlw	252
   789  0019C2  0100               	movlb	0	; () banked
   790  0019C4  6F76               	movwf	SetOutputEPWM1@outputmode& (0+255),b
   791  0019C6  0EFF               	movlw	255
   792  0019C8  EC64  F012         	call	_SetOutputEPWM1
   793  0019CC                     l3718:
   794                           
   795                           ;motore.c: 145: }
   796                           ;motore.c: 146: if ((timeCounter - previousTimeCounter1 >= 10)) {
   797  0019CC  C0A9  F090         	movff	_previousTimeCounter1,??_main
   798  0019D0  C0AA  F091         	movff	_previousTimeCounter1+1,??_main+1
   799  0019D4  C0AB  F092         	movff	_previousTimeCounter1+2,??_main+2
   800  0019D8  C0AC  F093         	movff	_previousTimeCounter1+3,??_main+3
   801  0019DC  0100               	movlb	0	; () banked
   802  0019DE  1F90               	comf	??_main& (0+255),f,b
   803  0019E0  1F91               	comf	(??_main+1)& (0+255),f,b
   804  0019E2  1F92               	comf	(??_main+2)& (0+255),f,b
   805  0019E4  1F93               	comf	(??_main+3)& (0+255),f,b
   806  0019E6  2B90               	incf	??_main& (0+255),f,b
   807  0019E8  0E00               	movlw	0
   808  0019EA  2391               	addwfc	(??_main+1)& (0+255),f,b
   809  0019EC  2392               	addwfc	(??_main+2)& (0+255),f,b
   810  0019EE  2393               	addwfc	(??_main+3)& (0+255),f,b
   811  0019F0  500D               	movf	_timeCounter,w,c
   812  0019F2  0100               	movlb	0	; () banked
   813  0019F4  2590               	addwf	??_main& (0+255),w,b
   814  0019F6  0100               	movlb	0	; () banked
   815  0019F8  6F94               	movwf	(??_main+4)& (0+255),b
   816  0019FA  500E               	movf	_timeCounter+1,w,c
   817  0019FC  0100               	movlb	0	; () banked
   818  0019FE  2191               	addwfc	(??_main+1)& (0+255),w,b
   819  001A00  0100               	movlb	0	; () banked
   820  001A02  6F95               	movwf	(??_main+5)& (0+255),b
   821  001A04  500F               	movf	_timeCounter+2,w,c
   822  001A06  0100               	movlb	0	; () banked
   823  001A08  2192               	addwfc	(??_main+2)& (0+255),w,b
   824  001A0A  0100               	movlb	0	; () banked
   825  001A0C  6F96               	movwf	(??_main+6)& (0+255),b
   826  001A0E  5010               	movf	_timeCounter+3,w,c
   827  001A10  0100               	movlb	0	; () banked
   828  001A12  2193               	addwfc	(??_main+3)& (0+255),w,b
   829  001A14  0100               	movlb	0	; () banked
   830  001A16  6F97               	movwf	(??_main+7)& (0+255),b
   831  001A18  0100               	movlb	0	; () banked
   832  001A1A  5197               	movf	(??_main+7)& (0+255),w,b
   833  001A1C  0100               	movlb	0	; () banked
   834  001A1E  1196               	iorwf	(??_main+6)& (0+255),w,b
   835  001A20  0100               	movlb	0	; () banked
   836  001A22  1195               	iorwf	(??_main+5)& (0+255),w,b
   837  001A24  E105               	bnz	u4300
   838  001A26  0E0A               	movlw	10
   839  001A28  0100               	movlb	0	; () banked
   840  001A2A  5D94               	subwf	(??_main+4)& (0+255),w,b
   841  001A2C  A0D8               	btfss	status,0,c
   842  001A2E  D10D               	goto	l3754
   843  001A30                     u4300:
   844                           
   845                           ; BSR set to: 0
   846                           ;motore.c: 147: CANsendMessage(0b00000000000000000000000000010, 0, 0, CAN_CONFIG_STD_MSG
      +                           & CAN_REMOTE_TX_FRAME & CAN_TX_PRIORITY_0);
   847  001A30  0E02               	movlw	2
   848  001A32  0100               	movlb	0	; () banked
   849  001A34  6F76               	movwf	CANsendMessage@identifier& (0+255),b
   850  001A36  0E00               	movlw	0
   851  001A38  6F77               	movwf	(CANsendMessage@identifier+1)& (0+255),b
   852  001A3A  0E00               	movlw	0
   853  001A3C  6F78               	movwf	(CANsendMessage@identifier+2)& (0+255),b
   854  001A3E  0E00               	movlw	0
   855  001A40  6F79               	movwf	(CANsendMessage@identifier+3)& (0+255),b
   856  001A42  0E00               	movlw	0
   857  001A44  0100               	movlb	0	; () banked
   858  001A46  6F7A               	movwf	CANsendMessage@data& (0+255),b
   859  001A48  0E00               	movlw	0
   860  001A4A  0100               	movlb	0	; () banked
   861  001A4C  6F7B               	movwf	(CANsendMessage@data+1)& (0+255),b
   862  001A4E  0E00               	movlw	0
   863  001A50  0100               	movlb	0	; () banked
   864  001A52  6F7C               	movwf	CANsendMessage@dataLength& (0+255),b
   865  001A54  0EFC               	movlw	252
   866  001A56  0100               	movlb	0	; () banked
   867  001A58  6F7D               	movwf	CANsendMessage@flags& (0+255),b
   868  001A5A  EC54  F006         	call	_CANsendMessage	;wreg free
   869                           
   870                           ;motore.c: 148: currentSpeed = ((left_speed + right_speed) / 2);
   871  001A5E  0100               	movlb	0	; () banked
   872  001A60  51B6               	movf	_left_speed& (0+255),w,b
   873  001A62  0100               	movlb	0	; () banked
   874  001A64  25B9               	addwf	_right_speed& (0+255),w,b
   875  001A66  0100               	movlb	0	; () banked
   876  001A68  6F76               	movwf	___awdiv@dividend& (0+255),b
   877  001A6A  0100               	movlb	0	; () banked
   878  001A6C  6B77               	clrf	(___awdiv@dividend+1)& (0+255),b
   879  001A6E  0100               	movlb	0	; () banked
   880  001A70  3777               	rlcf	(___awdiv@dividend+1)& (0+255),f,b
   881  001A72  0E00               	movlw	0
   882  001A74  0100               	movlb	0	; () banked
   883  001A76  6F79               	movwf	(___awdiv@divisor+1)& (0+255),b
   884  001A78  0E02               	movlw	2
   885  001A7A  6F78               	movwf	___awdiv@divisor& (0+255),b
   886  001A7C  EC3C  F011         	call	___awdiv	;wreg free
   887  001A80  0100               	movlb	0	; () banked
   888  001A82  5176               	movf	?___awdiv& (0+255),w,b
   889  001A84  6E48               	movwf	_currentSpeed,c
   890                           
   891                           ; BSR set to: 0
   892                           ;motore.c: 149: if (currentSpeed - requestSpeed > 0) {
   893  001A86  0100               	movlb	0	; () banked
   894  001A88  51B8               	movf	_requestSpeed& (0+255),w,b
   895  001A8A  0100               	movlb	0	; () banked
   896  001A8C  6F90               	movwf	??_main& (0+255),b
   897  001A8E  6B91               	clrf	(??_main+1)& (0+255),b
   898  001A90  0100               	movlb	0	; () banked
   899  001A92  1F90               	comf	??_main& (0+255),f,b
   900  001A94  1F91               	comf	(??_main+1)& (0+255),f,b
   901  001A96  4B90               	infsnz	??_main& (0+255),f,b
   902  001A98  2B91               	incf	(??_main+1)& (0+255),f,b
   903  001A9A  5048               	movf	_currentSpeed,w,c
   904  001A9C  0100               	movlb	0	; () banked
   905  001A9E  6F92               	movwf	(??_main+2)& (0+255),b
   906  001AA0  6B93               	clrf	(??_main+3)& (0+255),b
   907  001AA2  0100               	movlb	0	; () banked
   908  001AA4  5190               	movf	??_main& (0+255),w,b
   909  001AA6  0100               	movlb	0	; () banked
   910  001AA8  2792               	addwf	(??_main+2)& (0+255),f,b
   911  001AAA  0100               	movlb	0	; () banked
   912  001AAC  5191               	movf	(??_main+1)& (0+255),w,b
   913  001AAE  0100               	movlb	0	; () banked
   914  001AB0  2393               	addwfc	(??_main+3)& (0+255),f,b
   915  001AB2  0100               	movlb	0	; () banked
   916  001AB4  BF93               	btfsc	(??_main+3)& (0+255),7,b
   917  001AB6  D0C9               	goto	l3754
   918  001AB8  0100               	movlb	0	; () banked
   919  001ABA  5193               	movf	(??_main+3)& (0+255),w,b
   920  001ABC  E104               	bnz	u4310
   921  001ABE  0100               	movlb	0	; () banked
   922  001AC0  0592               	decf	(??_main+2)& (0+255),w,b
   923  001AC2  A0D8               	btfss	status,0,c
   924  001AC4  D0C2               	goto	l3754
   925  001AC6                     u4310:
   926                           
   927                           ; BSR set to: 0
   928                           ;motore.c: 150: errore = currentSpeed - requestSpeed;
   929  001AC6  0100               	movlb	0	; () banked
   930  001AC8  51B8               	movf	_requestSpeed& (0+255),w,b
   931  001ACA  0100               	movlb	0	; () banked
   932  001ACC  6F90               	movwf	??_main& (0+255),b
   933  001ACE  6B91               	clrf	(??_main+1)& (0+255),b
   934  001AD0  0100               	movlb	0	; () banked
   935  001AD2  1F90               	comf	??_main& (0+255),f,b
   936  001AD4  1F91               	comf	(??_main+1)& (0+255),f,b
   937  001AD6  4B90               	infsnz	??_main& (0+255),f,b
   938  001AD8  2B91               	incf	(??_main+1)& (0+255),f,b
   939  001ADA  5048               	movf	_currentSpeed,w,c
   940  001ADC  0100               	movlb	0	; () banked
   941  001ADE  2590               	addwf	??_main& (0+255),w,b
   942  001AE0  0100               	movlb	0	; () banked
   943  001AE2  6FB3               	movwf	_errore& (0+255),b
   944  001AE4  0E00               	movlw	0
   945  001AE6  0100               	movlb	0	; () banked
   946  001AE8  2191               	addwfc	(??_main+1)& (0+255),w,b
   947  001AEA  0100               	movlb	0	; () banked
   948  001AEC  6FB4               	movwf	(_errore+1)& (0+255),b
   949                           
   950                           ; BSR set to: 0
   951                           ;motore.c: 151: errore = abs(errore);
   952  001AEE  C0B3  F076         	movff	_errore,abs@a
   953  001AF2  C0B4  F077         	movff	_errore+1,abs@a+1
   954  001AF6  EC45  F013         	call	_abs	;wreg free
   955  001AFA  C076  F0B3         	movff	?_abs,_errore
   956  001AFE  C077  F0B4         	movff	?_abs+1,_errore+1
   957                           
   958                           ;motore.c: 152: correzione = (errore / 17)*(errore / 17);
   959  001B02  0E00               	movlw	0
   960  001B04  0100               	movlb	0	; () banked
   961  001B06  6F79               	movwf	(___awdiv@divisor+1)& (0+255),b
   962  001B08  0E11               	movlw	17
   963  001B0A  6F78               	movwf	___awdiv@divisor& (0+255),b
   964  001B0C  C0B3  F076         	movff	_errore,___awdiv@dividend
   965  001B10  C0B4  F077         	movff	_errore+1,___awdiv@dividend+1
   966  001B14  EC3C  F011         	call	___awdiv	;wreg free
   967  001B18  C076  F07E         	movff	?___awdiv,___wmul@multiplier
   968  001B1C  C077  F07F         	movff	?___awdiv+1,___wmul@multiplier+1
   969  001B20  0E00               	movlw	0
   970  001B22  0100               	movlb	0	; () banked
   971  001B24  6F79               	movwf	(___awdiv@divisor+1)& (0+255),b
   972  001B26  0E11               	movlw	17
   973  001B28  6F78               	movwf	___awdiv@divisor& (0+255),b
   974  001B2A  C0B3  F076         	movff	_errore,___awdiv@dividend
   975  001B2E  C0B4  F077         	movff	_errore+1,___awdiv@dividend+1
   976  001B32  EC3C  F011         	call	___awdiv	;wreg free
   977  001B36  C076  F080         	movff	?___awdiv,___wmul@multiplicand
   978  001B3A  C077  F081         	movff	?___awdiv+1,___wmul@multiplicand+1
   979  001B3E  EC0F  F013         	call	___wmul	;wreg free
   980  001B42  C07E  F0AF         	movff	?___wmul,_correzione
   981  001B46  C07F  F0B0         	movff	?___wmul+1,_correzione+1
   982                           
   983                           ;motore.c: 153: correzione = correzione * 4;
   984  001B4A  C0AF  F090         	movff	_correzione,??_main
   985  001B4E  C0B0  F091         	movff	_correzione+1,??_main+1
   986  001B52  0100               	movlb	0	; () banked
   987  001B54  90D8               	bcf	status,0,c
   988  001B56  3790               	rlcf	??_main& (0+255),f,b
   989  001B58  3791               	rlcf	(??_main+1)& (0+255),f,b
   990  001B5A  0100               	movlb	0	; () banked
   991  001B5C  90D8               	bcf	status,0,c
   992  001B5E  3790               	rlcf	??_main& (0+255),f,b
   993  001B60  3791               	rlcf	(??_main+1)& (0+255),f,b
   994  001B62  C090  F0AF         	movff	??_main,_correzione
   995  001B66  C091  F0B0         	movff	??_main+1,_correzione+1
   996                           
   997                           ; BSR set to: 0
   998                           ;motore.c: 154: if (correzione > 1) {
   999  001B6A  0100               	movlb	0	; () banked
  1000  001B6C  51B0               	movf	(_correzione+1)& (0+255),w,b
  1001  001B6E  E105               	bnz	u4320
  1002  001B70  0E02               	movlw	2
  1003  001B72  0100               	movlb	0	; () banked
  1004  001B74  5DAF               	subwf	_correzione& (0+255),w,b
  1005  001B76  A0D8               	btfss	status,0,c
  1006  001B78  D055               	goto	l645
  1007  001B7A                     u4320:
  1008                           
  1009                           ; BSR set to: 0
  1010                           ;motore.c: 155: if ((currentSpeed - requestSpeed) > 0) {
  1011  001B7A  0100               	movlb	0	; () banked
  1012  001B7C  51B8               	movf	_requestSpeed& (0+255),w,b
  1013  001B7E  0100               	movlb	0	; () banked
  1014  001B80  6F90               	movwf	??_main& (0+255),b
  1015  001B82  6B91               	clrf	(??_main+1)& (0+255),b
  1016  001B84  0100               	movlb	0	; () banked
  1017  001B86  1F90               	comf	??_main& (0+255),f,b
  1018  001B88  1F91               	comf	(??_main+1)& (0+255),f,b
  1019  001B8A  4B90               	infsnz	??_main& (0+255),f,b
  1020  001B8C  2B91               	incf	(??_main+1)& (0+255),f,b
  1021  001B8E  5048               	movf	_currentSpeed,w,c
  1022  001B90  0100               	movlb	0	; () banked
  1023  001B92  6F92               	movwf	(??_main+2)& (0+255),b
  1024  001B94  6B93               	clrf	(??_main+3)& (0+255),b
  1025  001B96  0100               	movlb	0	; () banked
  1026  001B98  5190               	movf	??_main& (0+255),w,b
  1027  001B9A  0100               	movlb	0	; () banked
  1028  001B9C  2792               	addwf	(??_main+2)& (0+255),f,b
  1029  001B9E  0100               	movlb	0	; () banked
  1030  001BA0  5191               	movf	(??_main+1)& (0+255),w,b
  1031  001BA2  0100               	movlb	0	; () banked
  1032  001BA4  2393               	addwfc	(??_main+3)& (0+255),f,b
  1033  001BA6  0100               	movlb	0	; () banked
  1034  001BA8  BF93               	btfsc	(??_main+3)& (0+255),7,b
  1035  001BAA  D035               	goto	l646
  1036  001BAC  0100               	movlb	0	; () banked
  1037  001BAE  5193               	movf	(??_main+3)& (0+255),w,b
  1038  001BB0  E104               	bnz	u4330
  1039  001BB2  0100               	movlb	0	; () banked
  1040  001BB4  0592               	decf	(??_main+2)& (0+255),w,b
  1041  001BB6  A0D8               	btfss	status,0,c
  1042  001BB8  D02E               	goto	l646
  1043  001BBA                     u4330:
  1044                           
  1045                           ; BSR set to: 0
  1046                           ;motore.c: 156: if (previousPwm > correzione) {
  1047  001BBA  0100               	movlb	0	; () banked
  1048  001BBC  51B7               	movf	_previousPwm& (0+255),w,b
  1049  001BBE  0100               	movlb	0	; () banked
  1050  001BC0  5DAF               	subwf	_correzione& (0+255),w,b
  1051  001BC2  0E00               	movlw	0
  1052  001BC4  59B0               	subwfb	(_correzione+1)& (0+255),w,b
  1053  001BC6  B0D8               	btfsc	status,0,c
  1054  001BC8  D007               	goto	l647
  1055                           
  1056                           ; BSR set to: 0
  1057                           ;motore.c: 157: duty_set = previousPwm - correzione;
  1058  001BCA  0100               	movlb	0	; () banked
  1059  001BCC  51AF               	movf	_correzione& (0+255),w,b
  1060  001BCE  0800               	sublw	0
  1061  001BD0  0100               	movlb	0	; () banked
  1062  001BD2  25B7               	addwf	_previousPwm& (0+255),w,b
  1063  001BD4  0100               	movlb	0	; () banked
  1064  001BD6  6FB5               	movwf	_duty_set& (0+255),b
  1065  001BD8                     l647:
  1066                           
  1067                           ; BSR set to: 0
  1068                           ;motore.c: 158: }
  1069                           ;motore.c: 159: if ((currentSpeed - requestSpeed) < 0) {
  1070  001BD8  0100               	movlb	0	; () banked
  1071  001BDA  51B8               	movf	_requestSpeed& (0+255),w,b
  1072  001BDC  0100               	movlb	0	; () banked
  1073  001BDE  6F90               	movwf	??_main& (0+255),b
  1074  001BE0  6B91               	clrf	(??_main+1)& (0+255),b
  1075  001BE2  0100               	movlb	0	; () banked
  1076  001BE4  1F90               	comf	??_main& (0+255),f,b
  1077  001BE6  1F91               	comf	(??_main+1)& (0+255),f,b
  1078  001BE8  4B90               	infsnz	??_main& (0+255),f,b
  1079  001BEA  2B91               	incf	(??_main+1)& (0+255),f,b
  1080  001BEC  5048               	movf	_currentSpeed,w,c
  1081  001BEE  0100               	movlb	0	; () banked
  1082  001BF0  6F92               	movwf	(??_main+2)& (0+255),b
  1083  001BF2  6B93               	clrf	(??_main+3)& (0+255),b
  1084  001BF4  0100               	movlb	0	; () banked
  1085  001BF6  5190               	movf	??_main& (0+255),w,b
  1086  001BF8  0100               	movlb	0	; () banked
  1087  001BFA  2792               	addwf	(??_main+2)& (0+255),f,b
  1088  001BFC  0100               	movlb	0	; () banked
  1089  001BFE  5191               	movf	(??_main+1)& (0+255),w,b
  1090  001C00  0100               	movlb	0	; () banked
  1091  001C02  2393               	addwfc	(??_main+3)& (0+255),f,b
  1092  001C04  0100               	movlb	0	; () banked
  1093  001C06  AF93               	btfss	(??_main+3)& (0+255),7,b
  1094  001C08  D006               	goto	l646
  1095                           
  1096                           ; BSR set to: 0
  1097                           ;motore.c: 160: duty_set = previousPwm + correzione;
  1098  001C0A  0100               	movlb	0	; () banked
  1099  001C0C  51B7               	movf	_previousPwm& (0+255),w,b
  1100  001C0E  0100               	movlb	0	; () banked
  1101  001C10  25AF               	addwf	_correzione& (0+255),w,b
  1102  001C12  0100               	movlb	0	; () banked
  1103  001C14  6FB5               	movwf	_duty_set& (0+255),b
  1104  001C16                     l646:
  1105                           
  1106                           ; BSR set to: 0
  1107                           ;motore.c: 161: }
  1108                           ;motore.c: 162: }
  1109                           ;motore.c: 163: if (correzione < 1) {
  1110  001C16  0100               	movlb	0	; () banked
  1111  001C18  51AF               	movf	_correzione& (0+255),w,b
  1112  001C1A  0100               	movlb	0	; () banked
  1113  001C1C  11B0               	iorwf	(_correzione+1)& (0+255),w,b
  1114  001C1E  B4D8               	btfsc	status,2,c
  1115                           
  1116                           ; BSR set to: 0
  1117                           ;motore.c: 164: duty_set = previousPwm;
  1118  001C20  C0B7  F0B5         	movff	_previousPwm,_duty_set
  1119  001C24                     l645:
  1120                           
  1121                           ; BSR set to: 0
  1122                           ;motore.c: 165: }
  1123                           ;motore.c: 166: }
  1124                           ;motore.c: 167: previousPwm = duty_set;
  1125  001C24  C0B5  F0B7         	movff	_duty_set,_previousPwm
  1126                           
  1127                           ; BSR set to: 0
  1128                           ;motore.c: 168: SetDCEPWM1(duty_set);
  1129  001C28  C0B5  F076         	movff	_duty_set,SetDCEPWM1@dutycycle
  1130  001C2C  0100               	movlb	0	; () banked
  1131  001C2E  6B77               	clrf	(SetDCEPWM1@dutycycle+1)& (0+255),b
  1132  001C30  ECB3  F012         	call	_SetDCEPWM1	;wreg free
  1133                           
  1134                           ;motore.c: 169: if (remote_frame == 1) {
  1135  001C34  B247               	btfsc	_remote_frame/(0+8),_remote_frame& (0+7),c
  1136                           
  1137                           ;motore.c: 170: send_data();
  1138  001C36  ECE4  F011         	call	_send_data	;wreg free
  1139                           
  1140                           ;motore.c: 171: }
  1141                           ;motore.c: 172: previousTimeCounter1 = timeCounter;
  1142  001C3A  C00D  F0A9         	movff	_timeCounter,_previousTimeCounter1
  1143  001C3E  C00E  F0AA         	movff	_timeCounter+1,_previousTimeCounter1+1
  1144  001C42  C00F  F0AB         	movff	_timeCounter+2,_previousTimeCounter1+2
  1145  001C46  C010  F0AC         	movff	_timeCounter+3,_previousTimeCounter1+3
  1146  001C4A                     l3754:
  1147                           
  1148                           ;motore.c: 173: }
  1149                           ;motore.c: 174: }
  1150                           ;motore.c: 175: if ((CANisTXwarningON() == 1) || (CANisRXwarningON() == 1)) {
  1151  001C4A  EC9D  F013         	call	_CANisTXwarningON	;wreg free
  1152  001C4E  06E8               	decf	wreg,f,c
  1153  001C50  B4D8               	btfsc	status,2,c
  1154  001C52  D005               	goto	l3758
  1155  001C54  ECA3  F013         	call	_CANisRXwarningON	;wreg free
  1156  001C58  06E8               	decf	wreg,f,c
  1157  001C5A  A4D8               	btfss	status,2,c
  1158  001C5C  D028               	goto	l3774
  1159  001C5E                     l3758:
  1160                           
  1161                           ;motore.c: 176: SetDCEPWM1(0);
  1162  001C5E  0E00               	movlw	0
  1163  001C60  0100               	movlb	0	; () banked
  1164  001C62  6F77               	movwf	(SetDCEPWM1@dutycycle+1)& (0+255),b
  1165  001C64  0E00               	movlw	0
  1166  001C66  6F76               	movwf	SetDCEPWM1@dutycycle& (0+255),b
  1167  001C68  ECB3  F012         	call	_SetDCEPWM1	;wreg free
  1168                           
  1169                           ;motore.c: 177: PORTAbits.RA0 = 1;
  1170  001C6C  8080               	bsf	3968,0,c	;volatile
  1171                           
  1172                           ;motore.c: 178: }
  1173                           ;motore.c: 185: while ((timeCounter - previousTimeCounter) > 100) {
  1174  001C6E  D01F               	goto	l3774
  1175  001C70                     l3762:
  1176                           
  1177                           ;motore.c: 186: SetDCEPWM1(0);
  1178  001C70  0E00               	movlw	0
  1179  001C72  0100               	movlb	0	; () banked
  1180  001C74  6F77               	movwf	(SetDCEPWM1@dutycycle+1)& (0+255),b
  1181  001C76  0E00               	movlw	0
  1182  001C78  6F76               	movwf	SetDCEPWM1@dutycycle& (0+255),b
  1183  001C7A  ECB3  F012         	call	_SetDCEPWM1	;wreg free
  1184                           
  1185                           ;motore.c: 187: PORTAbits.RA0 = 1;
  1186  001C7E  8080               	bsf	3968,0,c	;volatile
  1187                           
  1188                           ;motore.c: 188: delay_ms(250);
  1189  001C80  0E00               	movlw	0
  1190  001C82  0100               	movlb	0	; () banked
  1191  001C84  6F85               	movwf	(delay_ms@value_ms+1)& (0+255),b
  1192  001C86  0EFA               	movlw	250
  1193  001C88  6F84               	movwf	delay_ms@value_ms& (0+255),b
  1194  001C8A  ECD5  F012         	call	_delay_ms	;wreg free
  1195                           
  1196                           ;motore.c: 189: PORTAbits.RA0 = 0;
  1197  001C8E  9080               	bcf	3968,0,c	;volatile
  1198                           
  1199                           ;motore.c: 190: delay_ms(250);
  1200  001C90  0E00               	movlw	0
  1201  001C92  0100               	movlb	0	; () banked
  1202  001C94  6F85               	movwf	(delay_ms@value_ms+1)& (0+255),b
  1203  001C96  0EFA               	movlw	250
  1204  001C98  6F84               	movwf	delay_ms@value_ms& (0+255),b
  1205  001C9A  ECD5  F012         	call	_delay_ms	;wreg free
  1206                           
  1207                           ;motore.c: 191: previousTimeCounter = timeCounter;
  1208  001C9E  C00D  F0A5         	movff	_timeCounter,_previousTimeCounter
  1209  001CA2  C00E  F0A6         	movff	_timeCounter+1,_previousTimeCounter+1
  1210  001CA6  C00F  F0A7         	movff	_timeCounter+2,_previousTimeCounter+2
  1211  001CAA  C010  F0A8         	movff	_timeCounter+3,_previousTimeCounter+3
  1212  001CAE                     l3774:
  1213  001CAE  C0A5  F090         	movff	_previousTimeCounter,??_main
  1214  001CB2  C0A6  F091         	movff	_previousTimeCounter+1,??_main+1
  1215  001CB6  C0A7  F092         	movff	_previousTimeCounter+2,??_main+2
  1216  001CBA  C0A8  F093         	movff	_previousTimeCounter+3,??_main+3
  1217  001CBE  0100               	movlb	0	; () banked
  1218  001CC0  1F90               	comf	??_main& (0+255),f,b
  1219  001CC2  1F91               	comf	(??_main+1)& (0+255),f,b
  1220  001CC4  1F92               	comf	(??_main+2)& (0+255),f,b
  1221  001CC6  1F93               	comf	(??_main+3)& (0+255),f,b
  1222  001CC8  2B90               	incf	??_main& (0+255),f,b
  1223  001CCA  0E00               	movlw	0
  1224  001CCC  2391               	addwfc	(??_main+1)& (0+255),f,b
  1225  001CCE  2392               	addwfc	(??_main+2)& (0+255),f,b
  1226  001CD0  2393               	addwfc	(??_main+3)& (0+255),f,b
  1227  001CD2  500D               	movf	_timeCounter,w,c
  1228  001CD4  0100               	movlb	0	; () banked
  1229  001CD6  2590               	addwf	??_main& (0+255),w,b
  1230  001CD8  0100               	movlb	0	; () banked
  1231  001CDA  6F94               	movwf	(??_main+4)& (0+255),b
  1232  001CDC  500E               	movf	_timeCounter+1,w,c
  1233  001CDE  0100               	movlb	0	; () banked
  1234  001CE0  2191               	addwfc	(??_main+1)& (0+255),w,b
  1235  001CE2  0100               	movlb	0	; () banked
  1236  001CE4  6F95               	movwf	(??_main+5)& (0+255),b
  1237  001CE6  500F               	movf	_timeCounter+2,w,c
  1238  001CE8  0100               	movlb	0	; () banked
  1239  001CEA  2192               	addwfc	(??_main+2)& (0+255),w,b
  1240  001CEC  0100               	movlb	0	; () banked
  1241  001CEE  6F96               	movwf	(??_main+6)& (0+255),b
  1242  001CF0  5010               	movf	_timeCounter+3,w,c
  1243  001CF2  0100               	movlb	0	; () banked
  1244  001CF4  2193               	addwfc	(??_main+3)& (0+255),w,b
  1245  001CF6  0100               	movlb	0	; () banked
  1246  001CF8  6F97               	movwf	(??_main+7)& (0+255),b
  1247  001CFA  0100               	movlb	0	; () banked
  1248  001CFC  5197               	movf	(??_main+7)& (0+255),w,b
  1249  001CFE  0100               	movlb	0	; () banked
  1250  001D00  1196               	iorwf	(??_main+6)& (0+255),w,b
  1251  001D02  0100               	movlb	0	; () banked
  1252  001D04  1195               	iorwf	(??_main+5)& (0+255),w,b
  1253  001D06  E1B4               	bnz	l3762
  1254  001D08  0E65               	movlw	101
  1255  001D0A  0100               	movlb	0	; () banked
  1256  001D0C  5D94               	subwf	(??_main+4)& (0+255),w,b
  1257  001D0E  A0D8               	btfss	status,0,c
  1258  001D10  D645               	goto	l640
  1259  001D12  D7AE               	goto	l3762
  1260  001D14                     __end_of_main:
  1261                           	opt stack 0
  1262                           tblptru	equ	0xFF8
  1263                           tblptrh	equ	0xFF7
  1264                           tblptrl	equ	0xFF6
  1265                           tablat	equ	0xFF5
  1266                           postinc0	equ	0xFEE
  1267                           wreg	equ	0xFE8
  1268                           status	equ	0xFD8
  1269                           
  1270 ;; *************** function _send_data *****************
  1271 ;; Defined at:
  1272 ;;		line 196 in file "motore.c"
  1273 ;; Parameters:    Size  Location     Type
  1274 ;;		None
  1275 ;; Auto vars:     Size  Location     Type
  1276 ;;		None
  1277 ;; Return value:  Size  Location     Type
  1278 ;;		None               void
  1279 ;; Registers used:
  1280 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1281 ;; Tracked objects:
  1282 ;;		On entry : 0/0
  1283 ;;		On exit  : 0/0
  1284 ;;		Unchanged: 0/0
  1285 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1286 ;;      Params:         0       0       0       0
  1287 ;;      Locals:         0       0       0       0
  1288 ;;      Temps:          0       0       0       0
  1289 ;;      Totals:         0       0       0       0
  1290 ;;Total ram usage:        0 bytes
  1291 ;; Hardware stack levels used:    1
  1292 ;; Hardware stack levels required when called:    7
  1293 ;; This function calls:
  1294 ;;		_CANisTxReady
  1295 ;;		_CANsendMessage
  1296 ;;		_delay_ms
  1297 ;; This function is called by:
  1298 ;;		_main
  1299 ;; This function uses a non-reentrant model
  1300 ;;
  1301                           
  1302                           	psect	text1
  1303  0023C8                     __ptext1:
  1304                           	opt stack 0
  1305  0023C8                     _send_data:
  1306                           	opt stack 23
  1307                           
  1308                           ;motore.c: 197: if (CANisTxReady()) {
  1309                           
  1310                           ; BSR set to: 0
  1311                           ;incstack = 0
  1312  0023C8  EC5B  F013         	call	_CANisTxReady	;wreg free
  1313  0023CC  0900               	iorlw	0
  1314  0023CE  A4D8               	btfss	status,2,c
  1315                           
  1316                           ;motore.c: 198: if (remote_frame == 1) {
  1317  0023D0  A247               	btfss	_remote_frame/(0+8),_remote_frame& (0+7),c
  1318  0023D2  D017               	goto	l3560
  1319                           
  1320                           ;motore.c: 199: CANsendMessage(id, data_array, 8, CAN_CONFIG_STD_MSG & CAN_NORMAL_TX_FRA
      +                          ME & CAN_TX_PRIORITY_0);
  1321  0023D4  C0A1  F076         	movff	_id,CANsendMessage@identifier
  1322  0023D8  C0A2  F077         	movff	_id+1,CANsendMessage@identifier+1
  1323  0023DC  C0A3  F078         	movff	_id+2,CANsendMessage@identifier+2
  1324  0023E0  C0A4  F079         	movff	_id+3,CANsendMessage@identifier+3
  1325  0023E4  0E22               	movlw	low _data_array
  1326  0023E6  0100               	movlb	0	; () banked
  1327  0023E8  6F7A               	movwf	CANsendMessage@data& (0+255),b
  1328  0023EA  0E00               	movlw	high _data_array
  1329  0023EC  0100               	movlb	0	; () banked
  1330  0023EE  6F7B               	movwf	(CANsendMessage@data+1)& (0+255),b
  1331  0023F0  0E08               	movlw	8
  1332  0023F2  0100               	movlb	0	; () banked
  1333  0023F4  6F7C               	movwf	CANsendMessage@dataLength& (0+255),b
  1334  0023F6  0EBC               	movlw	188
  1335  0023F8  0100               	movlb	0	; () banked
  1336  0023FA  6F7D               	movwf	CANsendMessage@flags& (0+255),b
  1337  0023FC  EC54  F006         	call	_CANsendMessage	;wreg free
  1338                           
  1339                           ;motore.c: 200: remote_frame = 0;
  1340  002400  9247               	bcf	_remote_frame/(0+8),_remote_frame& (0+7),c
  1341  002402                     l3560:
  1342                           
  1343                           ;motore.c: 201: }
  1344                           ;motore.c: 202: }
  1345                           ;motore.c: 203: if ((TXB0CONbits.TXABT) || (TXB1CONbits.TXABT)) {
  1346  002402  010F               	movlb	15	; () banked
  1347  002404  BD40               	btfsc	64,6,b	;volatile
  1348  002406  D003               	goto	l3564
  1349                           
  1350                           ; BSR set to: 15
  1351  002408  010F               	movlb	15	; () banked
  1352  00240A  AD30               	btfss	48,6,b	;volatile
  1353  00240C  0012               	return	
  1354  00240E                     l3564:
  1355                           
  1356                           ; BSR set to: 15
  1357                           ;motore.c: 204: delay_ms(5);
  1358  00240E  0E00               	movlw	0
  1359  002410  0100               	movlb	0	; () banked
  1360  002412  6F85               	movwf	(delay_ms@value_ms+1)& (0+255),b
  1361  002414  0E05               	movlw	5
  1362  002416  6F84               	movwf	delay_ms@value_ms& (0+255),b
  1363  002418  ECD5  F012         	call	_delay_ms	;wreg free
  1364                           
  1365                           ;motore.c: 205: if (remote_frame == 1) {
  1366  00241C  A247               	btfss	_remote_frame/(0+8),_remote_frame& (0+7),c
  1367  00241E  0012               	return	
  1368                           
  1369                           ;motore.c: 206: CANsendMessage(id, data_array, 8, CAN_CONFIG_STD_MSG & CAN_NORMAL_TX_FRA
      +                          ME & CAN_TX_PRIORITY_0);
  1370  002420  C0A1  F076         	movff	_id,CANsendMessage@identifier
  1371  002424  C0A2  F077         	movff	_id+1,CANsendMessage@identifier+1
  1372  002428  C0A3  F078         	movff	_id+2,CANsendMessage@identifier+2
  1373  00242C  C0A4  F079         	movff	_id+3,CANsendMessage@identifier+3
  1374  002430  0E22               	movlw	low _data_array
  1375  002432  0100               	movlb	0	; () banked
  1376  002434  6F7A               	movwf	CANsendMessage@data& (0+255),b
  1377  002436  0E00               	movlw	high _data_array
  1378  002438  0100               	movlb	0	; () banked
  1379  00243A  6F7B               	movwf	(CANsendMessage@data+1)& (0+255),b
  1380  00243C  0E08               	movlw	8
  1381  00243E  0100               	movlb	0	; () banked
  1382  002440  6F7C               	movwf	CANsendMessage@dataLength& (0+255),b
  1383  002442  0EBC               	movlw	188
  1384  002444  0100               	movlb	0	; () banked
  1385  002446  6F7D               	movwf	CANsendMessage@flags& (0+255),b
  1386  002448  EC54  F006         	call	_CANsendMessage	;wreg free
  1387                           
  1388                           ;motore.c: 207: remote_frame = 0;
  1389  00244C  9247               	bcf	_remote_frame/(0+8),_remote_frame& (0+7),c
  1390  00244E  0012               	return	
  1391  002450                     __end_of_send_data:
  1392                           	opt stack 0
  1393                           tblptru	equ	0xFF8
  1394                           tblptrh	equ	0xFF7
  1395                           tblptrl	equ	0xFF6
  1396                           tablat	equ	0xFF5
  1397                           postinc0	equ	0xFEE
  1398                           wreg	equ	0xFE8
  1399                           status	equ	0xFD8
  1400                           
  1401 ;; *************** function _delay_ms *****************
  1402 ;; Defined at:
  1403 ;;		line 61 in file "F:/Tesina/LaurTec_PIC_libraries_v_3.3.0/src\delay.c"
  1404 ;; Parameters:    Size  Location     Type
  1405 ;;  value_ms        2   36[BANK0 ] unsigned int 
  1406 ;; Auto vars:     Size  Location     Type
  1407 ;;		None
  1408 ;; Return value:  Size  Location     Type
  1409 ;;		None               void
  1410 ;; Registers used:
  1411 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  1412 ;; Tracked objects:
  1413 ;;		On entry : 0/0
  1414 ;;		On exit  : 0/0
  1415 ;;		Unchanged: 0/0
  1416 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1417 ;;      Params:         0       2       0       0
  1418 ;;      Locals:         0       0       0       0
  1419 ;;      Temps:          0       0       0       0
  1420 ;;      Totals:         0       2       0       0
  1421 ;;Total ram usage:        2 bytes
  1422 ;; Hardware stack levels used:    1
  1423 ;; Hardware stack levels required when called:    6
  1424 ;; This function calls:
  1425 ;;		___wmul
  1426 ;; This function is called by:
  1427 ;;		_main
  1428 ;;		_send_data
  1429 ;;		_delay_s
  1430 ;; This function uses a non-reentrant model
  1431 ;;
  1432                           
  1433                           	psect	text2
  1434  0025AA                     __ptext2:
  1435                           	opt stack 0
  1436  0025AA                     _delay_ms:
  1437                           	opt stack 23
  1438                           
  1439                           ;src\delay.c: 73: clock_counter_reference = value_ms * delay_quartz_frequency_value;
  1440                           
  1441                           ;incstack = 0
  1442  0025AA  C0BA  F07E         	movff	_delay_quartz_frequency_value,___wmul@multiplier	;volatile
  1443  0025AE  0100               	movlb	0	; () banked
  1444  0025B0  6B7F               	clrf	(___wmul@multiplier+1)& (0+255),b
  1445  0025B2  C084  F080         	movff	delay_ms@value_ms,___wmul@multiplicand
  1446  0025B6  C085  F081         	movff	delay_ms@value_ms+1,___wmul@multiplicand+1
  1447  0025BA  EC0F  F013         	call	___wmul	;wreg free
  1448  0025BE  C07E  F0AD         	movff	?___wmul,_clock_counter_reference	;volatile
  1449  0025C2  C07F  F0AE         	movff	?___wmul+1,_clock_counter_reference+1	;volatile
  1450                           
  1451                           ;src\delay.c: 75: while (clock_counter_reference) {
  1452  0025C6  D007               	goto	l563
  1453  0025C8                     l3290:
  1454                           
  1455                           ;src\delay.c: 85: _delay(240);
  1456  0025C8  0E50               	movlw	80
  1457  0025CA                     u4447:
  1458  0025CA  2EE8               	decfsz	wreg,f,c
  1459  0025CC  D7FE               	goto	u4447
  1460                           
  1461                           ;src\delay.c: 88: clock_counter_reference--;
  1462  0025CE  0100               	movlb	0	; () banked
  1463  0025D0  07AD               	decf	_clock_counter_reference& (0+255),f,b	;volatile
  1464  0025D2  A0D8               	btfss	status,0,c
  1465  0025D4  07AE               	decf	(_clock_counter_reference+1)& (0+255),f,b	;volatile
  1466  0025D6                     l563:
  1467  0025D6  0100               	movlb	0	; () banked
  1468  0025D8  51AD               	movf	_clock_counter_reference& (0+255),w,b	;volatile
  1469  0025DA  0100               	movlb	0	; () banked
  1470  0025DC  11AE               	iorwf	(_clock_counter_reference+1)& (0+255),w,b	;volatile
  1471  0025DE  B4D8               	btfsc	status,2,c
  1472  0025E0  0012               	return	
  1473  0025E2  D7F2               	goto	l3290
  1474  0025E4                     __end_of_delay_ms:
  1475                           	opt stack 0
  1476                           tblptru	equ	0xFF8
  1477                           tblptrh	equ	0xFF7
  1478                           tblptrl	equ	0xFF6
  1479                           tablat	equ	0xFF5
  1480                           postinc0	equ	0xFEE
  1481                           wreg	equ	0xFE8
  1482                           status	equ	0xFD8
  1483                           
  1484 ;; *************** function ___wmul *****************
  1485 ;; Defined at:
  1486 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\Umul16.c"
  1487 ;; Parameters:    Size  Location     Type
  1488 ;;  multiplier      2   30[BANK0 ] unsigned int 
  1489 ;;  multiplicand    2   32[BANK0 ] unsigned int 
  1490 ;; Auto vars:     Size  Location     Type
  1491 ;;  product         2   34[BANK0 ] unsigned int 
  1492 ;; Return value:  Size  Location     Type
  1493 ;;                  2   30[BANK0 ] unsigned int 
  1494 ;; Registers used:
  1495 ;;		wreg, status,2, status,0, prodl, prodh
  1496 ;; Tracked objects:
  1497 ;;		On entry : 0/0
  1498 ;;		On exit  : 0/0
  1499 ;;		Unchanged: 0/0
  1500 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1501 ;;      Params:         0       4       0       0
  1502 ;;      Locals:         0       2       0       0
  1503 ;;      Temps:          0       0       0       0
  1504 ;;      Totals:         0       6       0       0
  1505 ;;Total ram usage:        6 bytes
  1506 ;; Hardware stack levels used:    1
  1507 ;; Hardware stack levels required when called:    5
  1508 ;; This function calls:
  1509 ;;		Nothing
  1510 ;; This function is called by:
  1511 ;;		_delay_ms
  1512 ;;		_main
  1513 ;; This function uses a non-reentrant model
  1514 ;;
  1515                           
  1516                           	psect	text3
  1517  00261E                     __ptext3:
  1518                           	opt stack 0
  1519  00261E                     ___wmul:
  1520                           	opt stack 23
  1521                           
  1522                           ; BSR set to: 0
  1523                           ;incstack = 0
  1524  00261E  0100               	movlb	0	; () banked
  1525  002620  517E               	movf	___wmul@multiplier& (0+255),w,b
  1526  002622  0100               	movlb	0	; () banked
  1527  002624  0380               	mulwf	___wmul@multiplicand& (0+255),b
  1528  002626  CFF3 F082          	movff	prodl,___wmul@product
  1529  00262A  CFF4 F083          	movff	prodh,___wmul@product+1
  1530  00262E  0100               	movlb	0	; () banked
  1531  002630  517E               	movf	___wmul@multiplier& (0+255),w,b
  1532  002632  0100               	movlb	0	; () banked
  1533  002634  0381               	mulwf	(___wmul@multiplicand+1)& (0+255),b
  1534  002636  50F3               	movf	prodl,w,c
  1535  002638  0100               	movlb	0	; () banked
  1536  00263A  2783               	addwf	(___wmul@product+1)& (0+255),f,b
  1537  00263C  0100               	movlb	0	; () banked
  1538  00263E  517F               	movf	(___wmul@multiplier+1)& (0+255),w,b
  1539  002640  0100               	movlb	0	; () banked
  1540  002642  0380               	mulwf	___wmul@multiplicand& (0+255),b
  1541  002644  50F3               	movf	prodl,w,c
  1542  002646  0100               	movlb	0	; () banked
  1543  002648  2783               	addwf	(___wmul@product+1)& (0+255),f,b
  1544                           
  1545                           ; BSR set to: 0
  1546  00264A  C082  F07E         	movff	___wmul@product,?___wmul
  1547  00264E  C083  F07F         	movff	___wmul@product+1,?___wmul+1
  1548  002652  0012               	return	
  1549  002654                     __end_of___wmul:
  1550                           	opt stack 0
  1551                           tblptru	equ	0xFF8
  1552                           tblptrh	equ	0xFF7
  1553                           tblptrl	equ	0xFF6
  1554                           tablat	equ	0xFF5
  1555                           prodh	equ	0xFF4
  1556                           prodl	equ	0xFF3
  1557                           postinc0	equ	0xFEE
  1558                           wreg	equ	0xFE8
  1559                           status	equ	0xFD8
  1560                           
  1561 ;; *************** function _CANsendMessage *****************
  1562 ;; Defined at:
  1563 ;;		line 294 in file "F:/Tesina/LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
  1564 ;; Parameters:    Size  Location     Type
  1565 ;;  identifier      4   22[BANK0 ] unsigned long 
  1566 ;;  data            2   26[BANK0 ] PTR unsigned char 
  1567 ;;		 -> NULL(0), data_array(8), 
  1568 ;;  dataLength      1   28[BANK0 ] unsigned char 
  1569 ;;  flags           1   29[BANK0 ] enum E16866
  1570 ;; Auto vars:     Size  Location     Type
  1571 ;;  tamp            4   34[BANK0 ] unsigned long 
  1572 ;; Return value:  Size  Location     Type
  1573 ;;		None               void
  1574 ;; Registers used:
  1575 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1576 ;; Tracked objects:
  1577 ;;		On entry : 0/0
  1578 ;;		On exit  : 0/0
  1579 ;;		Unchanged: 0/0
  1580 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1581 ;;      Params:         0       8       0       0
  1582 ;;      Locals:         0       4       0       0
  1583 ;;      Temps:          0       4       0       0
  1584 ;;      Totals:         0      16       0       0
  1585 ;;Total ram usage:       16 bytes
  1586 ;; Hardware stack levels used:    1
  1587 ;; Hardware stack levels required when called:    5
  1588 ;; This function calls:
  1589 ;;		Nothing
  1590 ;; This function is called by:
  1591 ;;		_main
  1592 ;;		_send_data
  1593 ;; This function uses a non-reentrant model
  1594 ;;
  1595                           
  1596                           	psect	text4
  1597  000CA8                     __ptext4:
  1598                           	opt stack 0
  1599  000CA8                     _CANsendMessage:
  1600                           	opt stack 24
  1601                           
  1602                           ;inc\CANlib.h: 296: unsigned long tamp;
  1603                           ;inc\CANlib.h: 298: if (TXB0CONbits.TXREQ == 0)
  1604                           
  1605                           ; BSR set to: 0
  1606                           ;incstack = 0
  1607  000CA8  010F               	movlb	15	; () banked
  1608  000CAA  B740               	btfsc	64,3,b	;volatile
  1609  000CAC  D13F               	goto	l357
  1610                           
  1611                           ; BSR set to: 15
  1612                           ;inc\CANlib.h: 299: { TXB0DLC = dataLength;
  1613  000CAE  C07C  FF45         	movff	CANsendMessage@dataLength,3909	;volatile
  1614                           
  1615                           ;inc\CANlib.h: 300: if (0b01000000 & flags)
  1616  000CB2  0100               	movlb	0	; () banked
  1617  000CB4  AD7D               	btfss	CANsendMessage@flags& (0+255),6,b
  1618  000CB6  D003               	goto	l358
  1619                           
  1620                           ; BSR set to: 0
  1621                           ;inc\CANlib.h: 301: TXB0DLCbits.TXRTR = 0x01;
  1622  000CB8  010F               	movlb	15	; () banked
  1623  000CBA  8D45               	bsf	69,6,b	;volatile
  1624  000CBC  D002               	goto	l359
  1625  000CBE                     l358:
  1626                           
  1627                           ; BSR set to: 0
  1628                           ;inc\CANlib.h: 302: else
  1629                           ;inc\CANlib.h: 303: TXB0DLCbits.TXRTR = 0x00;
  1630  000CBE  010F               	movlb	15	; () banked
  1631  000CC0  9D45               	bcf	69,6,b	;volatile
  1632  000CC2                     l359:
  1633                           
  1634                           ; BSR set to: 15
  1635                           ;inc\CANlib.h: 305: if (CAN_TX_FRAME_MASK & flags)
  1636  000CC2  0100               	movlb	0	; () banked
  1637  000CC4  A77D               	btfss	CANsendMessage@flags& (0+255),3,b
  1638  000CC6  D079               	goto	l360
  1639                           
  1640                           ; BSR set to: 0
  1641                           ;inc\CANlib.h: 306: {
  1642                           ;inc\CANlib.h: 308: tamp = identifier & 0x000000FF;
  1643  000CC8  0100               	movlb	0	; () banked
  1644  000CCA  5176               	movf	CANsendMessage@identifier& (0+255),w,b
  1645  000CCC  0100               	movlb	0	; () banked
  1646  000CCE  6F82               	movwf	CANsendMessage@tamp& (0+255),b
  1647  000CD0  6B83               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  1648  000CD2  6B84               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  1649  000CD4  6B85               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  1650                           
  1651                           ; BSR set to: 0
  1652                           ;inc\CANlib.h: 309: TXB0EIDL = (unsigned char) tamp;
  1653  000CD6  C082  FF44         	movff	CANsendMessage@tamp,3908	;volatile
  1654                           
  1655                           ; BSR set to: 0
  1656                           ;inc\CANlib.h: 311: tamp = identifier & 0x0000FF00;
  1657  000CDA  0E00               	movlw	0
  1658  000CDC  0100               	movlb	0	; () banked
  1659  000CDE  1576               	andwf	CANsendMessage@identifier& (0+255),w,b
  1660  000CE0  0100               	movlb	0	; () banked
  1661  000CE2  6F82               	movwf	CANsendMessage@tamp& (0+255),b
  1662  000CE4  0EFF               	movlw	255
  1663  000CE6  0100               	movlb	0	; () banked
  1664  000CE8  1577               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
  1665  000CEA  0100               	movlb	0	; () banked
  1666  000CEC  6F83               	movwf	(CANsendMessage@tamp+1)& (0+255),b
  1667  000CEE  0E00               	movlw	0
  1668  000CF0  0100               	movlb	0	; () banked
  1669  000CF2  1578               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
  1670  000CF4  0100               	movlb	0	; () banked
  1671  000CF6  6F84               	movwf	(CANsendMessage@tamp+2)& (0+255),b
  1672  000CF8  0E00               	movlw	0
  1673  000CFA  0100               	movlb	0	; () banked
  1674  000CFC  1579               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
  1675  000CFE  0100               	movlb	0	; () banked
  1676  000D00  6F85               	movwf	(CANsendMessage@tamp+3)& (0+255),b
  1677                           
  1678                           ; BSR set to: 0
  1679                           ;inc\CANlib.h: 312: tamp = tamp >> 8;
  1680  000D02  C082  F07E         	movff	CANsendMessage@tamp,??_CANsendMessage
  1681  000D06  C083  F07F         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
  1682  000D0A  C084  F080         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
  1683  000D0E  C085  F081         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
  1684  000D12  C07F  F07E         	movff	??_CANsendMessage+1,??_CANsendMessage
  1685  000D16  C080  F07F         	movff	??_CANsendMessage+2,??_CANsendMessage+1
  1686  000D1A  C081  F080         	movff	??_CANsendMessage+3,??_CANsendMessage+2
  1687  000D1E  0100               	movlb	0	; () banked
  1688  000D20  6B81               	clrf	(??_CANsendMessage+3)& (0+255),b
  1689  000D22  C07E  F082         	movff	??_CANsendMessage,CANsendMessage@tamp
  1690  000D26  C07F  F083         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  1691  000D2A  C080  F084         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  1692  000D2E  C081  F085         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  1693                           
  1694                           ; BSR set to: 0
  1695                           ;inc\CANlib.h: 313: TXB0EIDH = (unsigned char) tamp;
  1696  000D32  C082  FF43         	movff	CANsendMessage@tamp,3907	;volatile
  1697                           
  1698                           ; BSR set to: 0
  1699                           ;inc\CANlib.h: 315: TXB0SIDL = 0x00;
  1700  000D36  0E00               	movlw	0
  1701  000D38  010F               	movlb	15	; () banked
  1702  000D3A  6F42               	movwf	66,b	;volatile
  1703                           
  1704                           ; BSR set to: 15
  1705                           ;inc\CANlib.h: 316: TXB0SIDLbits.EXIDE = 0x01;
  1706  000D3C  010F               	movlb	15	; () banked
  1707  000D3E  8742               	bsf	66,3,b	;volatile
  1708                           
  1709                           ; BSR set to: 15
  1710                           ;inc\CANlib.h: 318: if (identifier & 0x00010000)
  1711  000D40  0100               	movlb	0	; () banked
  1712  000D42  A178               	btfss	(CANsendMessage@identifier+2)& (0+255),0,b
  1713  000D44  D002               	goto	l361
  1714                           
  1715                           ; BSR set to: 0
  1716                           ;inc\CANlib.h: 319: TXB0SIDLbits.EID16 = 0x01;
  1717  000D46  010F               	movlb	15	; () banked
  1718  000D48  8142               	bsf	66,0,b	;volatile
  1719  000D4A                     l361:
  1720                           
  1721                           ;inc\CANlib.h: 320: if (identifier & 0x00020000)
  1722  000D4A  0100               	movlb	0	; () banked
  1723  000D4C  A378               	btfss	(CANsendMessage@identifier+2)& (0+255),1,b
  1724  000D4E  D002               	goto	l362
  1725                           
  1726                           ; BSR set to: 0
  1727                           ;inc\CANlib.h: 321: TXB0SIDLbits.EID17 = 0x01;
  1728  000D50  010F               	movlb	15	; () banked
  1729  000D52  8342               	bsf	66,1,b	;volatile
  1730  000D54                     l362:
  1731                           
  1732                           ;inc\CANlib.h: 322: if (identifier & 0x00040000)
  1733  000D54  0100               	movlb	0	; () banked
  1734  000D56  A578               	btfss	(CANsendMessage@identifier+2)& (0+255),2,b
  1735  000D58  D002               	goto	l363
  1736                           
  1737                           ; BSR set to: 0
  1738                           ;inc\CANlib.h: 323: TXB0SIDLbits.SID0 = 0x01;
  1739  000D5A  010F               	movlb	15	; () banked
  1740  000D5C  8B42               	bsf	66,5,b	;volatile
  1741  000D5E                     l363:
  1742                           
  1743                           ;inc\CANlib.h: 324: if (identifier & 0x00080000)
  1744  000D5E  0100               	movlb	0	; () banked
  1745  000D60  A778               	btfss	(CANsendMessage@identifier+2)& (0+255),3,b
  1746  000D62  D002               	goto	l364
  1747                           
  1748                           ; BSR set to: 0
  1749                           ;inc\CANlib.h: 325: TXB0SIDLbits.SID1 = 0x01;
  1750  000D64  010F               	movlb	15	; () banked
  1751  000D66  8D42               	bsf	66,6,b	;volatile
  1752  000D68                     l364:
  1753                           
  1754                           ;inc\CANlib.h: 326: if (identifier & 0x00100000)
  1755  000D68  0100               	movlb	0	; () banked
  1756  000D6A  A978               	btfss	(CANsendMessage@identifier+2)& (0+255),4,b
  1757  000D6C  D002               	goto	l3078
  1758                           
  1759                           ; BSR set to: 0
  1760                           ;inc\CANlib.h: 327: TXB0SIDLbits.SID2 = 0x01;
  1761  000D6E  010F               	movlb	15	; () banked
  1762  000D70  8F42               	bsf	66,7,b	;volatile
  1763  000D72                     l3078:
  1764                           
  1765                           ;inc\CANlib.h: 329: tamp = (identifier >> 21);
  1766  000D72  C076  F07E         	movff	CANsendMessage@identifier,??_CANsendMessage
  1767  000D76  C077  F07F         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
  1768  000D7A  C078  F080         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
  1769  000D7E  C079  F081         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
  1770  000D82  0E16               	movlw	22
  1771  000D84  D006               	goto	u3300
  1772  000D86                     u3305:
  1773  000D86  0100               	movlb	0	; () banked
  1774  000D88  90D8               	bcf	status,0,c
  1775  000D8A  3381               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
  1776  000D8C  3380               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
  1777  000D8E  337F               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
  1778  000D90  337E               	rrcf	??_CANsendMessage& (0+255),f,b
  1779  000D92                     u3300:
  1780  000D92  2EE8               	decfsz	wreg,f,c
  1781  000D94  D7F8               	goto	u3305
  1782  000D96  C07E  F082         	movff	??_CANsendMessage,CANsendMessage@tamp
  1783  000D9A  C07F  F083         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  1784  000D9E  C080  F084         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  1785  000DA2  C081  F085         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  1786                           
  1787                           ; BSR set to: 0
  1788                           ;inc\CANlib.h: 330: tamp = tamp & 0x000000FF;
  1789  000DA6  0100               	movlb	0	; () banked
  1790  000DA8  5182               	movf	CANsendMessage@tamp& (0+255),w,b
  1791  000DAA  0100               	movlb	0	; () banked
  1792  000DAC  6F82               	movwf	CANsendMessage@tamp& (0+255),b
  1793  000DAE  6B83               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  1794  000DB0  6B84               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  1795  000DB2  6B85               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  1796                           
  1797                           ; BSR set to: 0
  1798                           ;inc\CANlib.h: 331: TXB0SIDH = (unsigned char) tamp;
  1799  000DB4  C082  FF41         	movff	CANsendMessage@tamp,3905	;volatile
  1800                           
  1801                           ;inc\CANlib.h: 332: }
  1802  000DB8  D059               	goto	l3098
  1803  000DBA                     l360:
  1804                           
  1805                           ; BSR set to: 0
  1806                           ;inc\CANlib.h: 334: else
  1807                           ;inc\CANlib.h: 336: {
  1808                           ;inc\CANlib.h: 337: TXB0SIDLbits.EXIDE = 0x00;
  1809  000DBA  010F               	movlb	15	; () banked
  1810  000DBC  9742               	bcf	66,3,b	;volatile
  1811                           
  1812                           ; BSR set to: 15
  1813                           ;inc\CANlib.h: 339: tamp = (identifier >> 3);
  1814  000DBE  C076  F07E         	movff	CANsendMessage@identifier,??_CANsendMessage
  1815  000DC2  C077  F07F         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
  1816  000DC6  C078  F080         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
  1817  000DCA  C079  F081         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
  1818  000DCE  0E04               	movlw	4
  1819  000DD0  D006               	goto	u3310
  1820  000DD2                     u3315:
  1821  000DD2  0100               	movlb	0	; () banked
  1822  000DD4  90D8               	bcf	status,0,c
  1823  000DD6  3381               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
  1824  000DD8  3380               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
  1825  000DDA  337F               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
  1826  000DDC  337E               	rrcf	??_CANsendMessage& (0+255),f,b
  1827  000DDE                     u3310:
  1828  000DDE  2EE8               	decfsz	wreg,f,c
  1829  000DE0  D7F8               	goto	u3315
  1830  000DE2  C07E  F082         	movff	??_CANsendMessage,CANsendMessage@tamp
  1831  000DE6  C07F  F083         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  1832  000DEA  C080  F084         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  1833  000DEE  C081  F085         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  1834                           
  1835                           ; BSR set to: 0
  1836                           ;inc\CANlib.h: 340: tamp = tamp & 0x000000FF;
  1837  000DF2  0100               	movlb	0	; () banked
  1838  000DF4  5182               	movf	CANsendMessage@tamp& (0+255),w,b
  1839  000DF6  0100               	movlb	0	; () banked
  1840  000DF8  6F82               	movwf	CANsendMessage@tamp& (0+255),b
  1841  000DFA  6B83               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  1842  000DFC  6B84               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  1843  000DFE  6B85               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  1844                           
  1845                           ; BSR set to: 0
  1846                           ;inc\CANlib.h: 341: TXB0SIDH = (unsigned char) tamp;
  1847  000E00  C082  FF41         	movff	CANsendMessage@tamp,3905	;volatile
  1848                           
  1849                           ; BSR set to: 0
  1850                           ;inc\CANlib.h: 343: tamp = identifier & 0x00000007;
  1851  000E04  0E07               	movlw	7
  1852  000E06  0100               	movlb	0	; () banked
  1853  000E08  1576               	andwf	CANsendMessage@identifier& (0+255),w,b
  1854  000E0A  0100               	movlb	0	; () banked
  1855  000E0C  6F82               	movwf	CANsendMessage@tamp& (0+255),b
  1856  000E0E  0E00               	movlw	0
  1857  000E10  0100               	movlb	0	; () banked
  1858  000E12  1577               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
  1859  000E14  0100               	movlb	0	; () banked
  1860  000E16  6F83               	movwf	(CANsendMessage@tamp+1)& (0+255),b
  1861  000E18  0E00               	movlw	0
  1862  000E1A  0100               	movlb	0	; () banked
  1863  000E1C  1578               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
  1864  000E1E  0100               	movlb	0	; () banked
  1865  000E20  6F84               	movwf	(CANsendMessage@tamp+2)& (0+255),b
  1866  000E22  0E00               	movlw	0
  1867  000E24  0100               	movlb	0	; () banked
  1868  000E26  1579               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
  1869  000E28  0100               	movlb	0	; () banked
  1870  000E2A  6F85               	movwf	(CANsendMessage@tamp+3)& (0+255),b
  1871                           
  1872                           ; BSR set to: 0
  1873                           ;inc\CANlib.h: 344: tamp = tamp << 5;
  1874  000E2C  C082  F07E         	movff	CANsendMessage@tamp,??_CANsendMessage
  1875  000E30  C083  F07F         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
  1876  000E34  C084  F080         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
  1877  000E38  C085  F081         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
  1878  000E3C  0E05               	movlw	5
  1879  000E3E                     u3325:
  1880  000E3E  90D8               	bcf	status,0,c
  1881  000E40  0100               	movlb	0	; () banked
  1882  000E42  377E               	rlcf	??_CANsendMessage& (0+255),f,b
  1883  000E44  377F               	rlcf	(??_CANsendMessage+1)& (0+255),f,b
  1884  000E46  3780               	rlcf	(??_CANsendMessage+2)& (0+255),f,b
  1885  000E48  3781               	rlcf	(??_CANsendMessage+3)& (0+255),f,b
  1886  000E4A  2EE8               	decfsz	wreg,f,c
  1887  000E4C  D7F8               	goto	u3325
  1888  000E4E  C07E  F082         	movff	??_CANsendMessage,CANsendMessage@tamp
  1889  000E52  C07F  F083         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  1890  000E56  C080  F084         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  1891  000E5A  C081  F085         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  1892                           
  1893                           ; BSR set to: 0
  1894                           ;inc\CANlib.h: 345: TXB0SIDL = TXB0SIDL & 0b00011111;
  1895  000E5E  010F               	movlb	15	; () banked
  1896  000E60  5142               	movf	66,w,b	;volatile
  1897  000E62  0B1F               	andlw	31
  1898  000E64  010F               	movlb	15	; () banked
  1899  000E66  6F42               	movwf	66,b	;volatile
  1900                           
  1901                           ; BSR set to: 15
  1902                           ;inc\CANlib.h: 346: TXB0SIDL = (unsigned char) tamp;
  1903  000E68  C082  FF42         	movff	CANsendMessage@tamp,3906	;volatile
  1904  000E6C                     l3098:
  1905                           
  1906                           ;inc\CANlib.h: 347: }
  1907                           ;inc\CANlib.h: 349: if (0b00000001 & flags)
  1908  000E6C  0100               	movlb	0	; () banked
  1909  000E6E  A17D               	btfss	CANsendMessage@flags& (0+255),0,b
  1910  000E70  D003               	goto	l367
  1911                           
  1912                           ; BSR set to: 0
  1913                           ;inc\CANlib.h: 350: TXB0CONbits.TXPRI0 = 0x01;
  1914  000E72  010F               	movlb	15	; () banked
  1915  000E74  8140               	bsf	64,0,b	;volatile
  1916  000E76  D002               	goto	l368
  1917  000E78                     l367:
  1918                           
  1919                           ; BSR set to: 0
  1920                           ;inc\CANlib.h: 351: else
  1921                           ;inc\CANlib.h: 352: TXB0CONbits.TXPRI0 = 0x00;
  1922  000E78  010F               	movlb	15	; () banked
  1923  000E7A  9140               	bcf	64,0,b	;volatile
  1924  000E7C                     l368:
  1925                           
  1926                           ; BSR set to: 15
  1927                           ;inc\CANlib.h: 353: if (0b00000010 & flags)
  1928  000E7C  0100               	movlb	0	; () banked
  1929  000E7E  A37D               	btfss	CANsendMessage@flags& (0+255),1,b
  1930  000E80  D003               	goto	l369
  1931                           
  1932                           ; BSR set to: 0
  1933                           ;inc\CANlib.h: 354: TXB0CONbits.TXPRI1 = 0x01;
  1934  000E82  010F               	movlb	15	; () banked
  1935  000E84  8340               	bsf	64,1,b	;volatile
  1936  000E86  D002               	goto	l3104
  1937  000E88                     l369:
  1938                           
  1939                           ; BSR set to: 0
  1940                           ;inc\CANlib.h: 355: else
  1941                           ;inc\CANlib.h: 356: TXB0CONbits.TXPRI1 = 0x00;
  1942  000E88  010F               	movlb	15	; () banked
  1943  000E8A  9340               	bcf	64,1,b	;volatile
  1944  000E8C                     l3104:
  1945                           
  1946                           ; BSR set to: 15
  1947                           ;inc\CANlib.h: 358: TXB0D0 = data[0];
  1948  000E8C  C07A  FFD9         	movff	CANsendMessage@data,fsr2l
  1949  000E90  C07B  FFDA         	movff	CANsendMessage@data+1,fsr2h
  1950  000E94  50DF               	movf	indf2,w,c
  1951  000E96  010F               	movlb	15	; () banked
  1952  000E98  6F46               	movwf	70,b	;volatile
  1953                           
  1954                           ; BSR set to: 15
  1955                           ;inc\CANlib.h: 359: TXB0D1 = data[1];
  1956  000E9A  0100               	movlb	0	; () banked
  1957  000E9C  EE20 F001          	lfsr	2,1
  1958  000EA0  517A               	movf	CANsendMessage@data& (0+255),w,b
  1959  000EA2  26D9               	addwf	fsr2l,f,c
  1960  000EA4  517B               	movf	(CANsendMessage@data+1)& (0+255),w,b
  1961  000EA6  22DA               	addwfc	fsr2h,f,c
  1962  000EA8  50DF               	movf	indf2,w,c
  1963  000EAA  010F               	movlb	15	; () banked
  1964  000EAC  6F47               	movwf	71,b	;volatile
  1965                           
  1966                           ; BSR set to: 15
  1967                           ;inc\CANlib.h: 360: TXB0D2 = data[2];
  1968  000EAE  0100               	movlb	0	; () banked
  1969  000EB0  EE20 F002          	lfsr	2,2
  1970  000EB4  517A               	movf	CANsendMessage@data& (0+255),w,b
  1971  000EB6  26D9               	addwf	fsr2l,f,c
  1972  000EB8  517B               	movf	(CANsendMessage@data+1)& (0+255),w,b
  1973  000EBA  22DA               	addwfc	fsr2h,f,c
  1974  000EBC  50DF               	movf	indf2,w,c
  1975  000EBE  010F               	movlb	15	; () banked
  1976  000EC0  6F48               	movwf	72,b	;volatile
  1977                           
  1978                           ; BSR set to: 15
  1979                           ;inc\CANlib.h: 361: TXB0D3 = data[3];
  1980  000EC2  0100               	movlb	0	; () banked
  1981  000EC4  EE20 F003          	lfsr	2,3
  1982  000EC8  517A               	movf	CANsendMessage@data& (0+255),w,b
  1983  000ECA  26D9               	addwf	fsr2l,f,c
  1984  000ECC  517B               	movf	(CANsendMessage@data+1)& (0+255),w,b
  1985  000ECE  22DA               	addwfc	fsr2h,f,c
  1986  000ED0  50DF               	movf	indf2,w,c
  1987  000ED2  010F               	movlb	15	; () banked
  1988  000ED4  6F49               	movwf	73,b	;volatile
  1989                           
  1990                           ; BSR set to: 15
  1991                           ;inc\CANlib.h: 362: TXB0D4 = data[4];
  1992  000ED6  0100               	movlb	0	; () banked
  1993  000ED8  EE20 F004          	lfsr	2,4
  1994  000EDC  517A               	movf	CANsendMessage@data& (0+255),w,b
  1995  000EDE  26D9               	addwf	fsr2l,f,c
  1996  000EE0  517B               	movf	(CANsendMessage@data+1)& (0+255),w,b
  1997  000EE2  22DA               	addwfc	fsr2h,f,c
  1998  000EE4  50DF               	movf	indf2,w,c
  1999  000EE6  010F               	movlb	15	; () banked
  2000  000EE8  6F4A               	movwf	74,b	;volatile
  2001                           
  2002                           ; BSR set to: 15
  2003                           ;inc\CANlib.h: 363: TXB0D5 = data[5];
  2004  000EEA  0100               	movlb	0	; () banked
  2005  000EEC  EE20 F005          	lfsr	2,5
  2006  000EF0  517A               	movf	CANsendMessage@data& (0+255),w,b
  2007  000EF2  26D9               	addwf	fsr2l,f,c
  2008  000EF4  517B               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2009  000EF6  22DA               	addwfc	fsr2h,f,c
  2010  000EF8  50DF               	movf	indf2,w,c
  2011  000EFA  010F               	movlb	15	; () banked
  2012  000EFC  6F4B               	movwf	75,b	;volatile
  2013                           
  2014                           ; BSR set to: 15
  2015                           ;inc\CANlib.h: 364: TXB0D6 = data[6];
  2016  000EFE  0100               	movlb	0	; () banked
  2017  000F00  EE20 F006          	lfsr	2,6
  2018  000F04  517A               	movf	CANsendMessage@data& (0+255),w,b
  2019  000F06  26D9               	addwf	fsr2l,f,c
  2020  000F08  517B               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2021  000F0A  22DA               	addwfc	fsr2h,f,c
  2022  000F0C  50DF               	movf	indf2,w,c
  2023  000F0E  010F               	movlb	15	; () banked
  2024  000F10  6F4C               	movwf	76,b	;volatile
  2025                           
  2026                           ; BSR set to: 15
  2027                           ;inc\CANlib.h: 365: TXB0D7 = data[7];
  2028  000F12  0100               	movlb	0	; () banked
  2029  000F14  EE20 F007          	lfsr	2,7
  2030  000F18  517A               	movf	CANsendMessage@data& (0+255),w,b
  2031  000F1A  26D9               	addwf	fsr2l,f,c
  2032  000F1C  517B               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2033  000F1E  22DA               	addwfc	fsr2h,f,c
  2034  000F20  50DF               	movf	indf2,w,c
  2035  000F22  010F               	movlb	15	; () banked
  2036  000F24  6F4D               	movwf	77,b	;volatile
  2037                           
  2038                           ; BSR set to: 15
  2039                           ;inc\CANlib.h: 367: TXB0CONbits.TXREQ = 0x01;
  2040  000F26  010F               	movlb	15	; () banked
  2041  000F28  8740               	bsf	64,3,b	;volatile
  2042                           
  2043                           ; BSR set to: 15
  2044                           ;inc\CANlib.h: 368: return;
  2045  000F2A  0012               	return	
  2046  000F2C                     l357:
  2047                           
  2048                           ; BSR set to: 15
  2049                           ;inc\CANlib.h: 369: }
  2050                           ;inc\CANlib.h: 373: if (TXB1CONbits.TXREQ == 0)
  2051  000F2C  010F               	movlb	15	; () banked
  2052  000F2E  B730               	btfsc	48,3,b	;volatile
  2053  000F30  D13F               	goto	l372
  2054                           
  2055                           ; BSR set to: 15
  2056                           ;inc\CANlib.h: 374: { TXB1DLC = dataLength;
  2057  000F32  C07C  FF35         	movff	CANsendMessage@dataLength,3893	;volatile
  2058                           
  2059                           ;inc\CANlib.h: 376: if (0b01000000 & flags)
  2060  000F36  0100               	movlb	0	; () banked
  2061  000F38  AD7D               	btfss	CANsendMessage@flags& (0+255),6,b
  2062  000F3A  D003               	goto	l373
  2063                           
  2064                           ; BSR set to: 0
  2065                           ;inc\CANlib.h: 377: TXB1DLCbits.TXRTR = 0x01;
  2066  000F3C  010F               	movlb	15	; () banked
  2067  000F3E  8D35               	bsf	53,6,b	;volatile
  2068  000F40  D002               	goto	l374
  2069  000F42                     l373:
  2070                           
  2071                           ; BSR set to: 0
  2072                           ;inc\CANlib.h: 378: else
  2073                           ;inc\CANlib.h: 379: TXB1DLCbits.TXRTR = 0x00;
  2074  000F42  010F               	movlb	15	; () banked
  2075  000F44  9D35               	bcf	53,6,b	;volatile
  2076  000F46                     l374:
  2077                           
  2078                           ; BSR set to: 15
  2079                           ;inc\CANlib.h: 381: if (CAN_TX_FRAME_MASK & flags)
  2080  000F46  0100               	movlb	0	; () banked
  2081  000F48  A77D               	btfss	CANsendMessage@flags& (0+255),3,b
  2082  000F4A  D079               	goto	l375
  2083                           
  2084                           ; BSR set to: 0
  2085                           ;inc\CANlib.h: 382: {
  2086                           ;inc\CANlib.h: 383: tamp = identifier & 0x000000FF;
  2087  000F4C  0100               	movlb	0	; () banked
  2088  000F4E  5176               	movf	CANsendMessage@identifier& (0+255),w,b
  2089  000F50  0100               	movlb	0	; () banked
  2090  000F52  6F82               	movwf	CANsendMessage@tamp& (0+255),b
  2091  000F54  6B83               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  2092  000F56  6B84               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  2093  000F58  6B85               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  2094                           
  2095                           ; BSR set to: 0
  2096                           ;inc\CANlib.h: 384: TXB1EIDL = (unsigned char) tamp;
  2097  000F5A  C082  FF34         	movff	CANsendMessage@tamp,3892	;volatile
  2098                           
  2099                           ; BSR set to: 0
  2100                           ;inc\CANlib.h: 386: tamp = identifier & 0x0000FF00;
  2101  000F5E  0E00               	movlw	0
  2102  000F60  0100               	movlb	0	; () banked
  2103  000F62  1576               	andwf	CANsendMessage@identifier& (0+255),w,b
  2104  000F64  0100               	movlb	0	; () banked
  2105  000F66  6F82               	movwf	CANsendMessage@tamp& (0+255),b
  2106  000F68  0EFF               	movlw	255
  2107  000F6A  0100               	movlb	0	; () banked
  2108  000F6C  1577               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
  2109  000F6E  0100               	movlb	0	; () banked
  2110  000F70  6F83               	movwf	(CANsendMessage@tamp+1)& (0+255),b
  2111  000F72  0E00               	movlw	0
  2112  000F74  0100               	movlb	0	; () banked
  2113  000F76  1578               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
  2114  000F78  0100               	movlb	0	; () banked
  2115  000F7A  6F84               	movwf	(CANsendMessage@tamp+2)& (0+255),b
  2116  000F7C  0E00               	movlw	0
  2117  000F7E  0100               	movlb	0	; () banked
  2118  000F80  1579               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
  2119  000F82  0100               	movlb	0	; () banked
  2120  000F84  6F85               	movwf	(CANsendMessage@tamp+3)& (0+255),b
  2121                           
  2122                           ; BSR set to: 0
  2123                           ;inc\CANlib.h: 387: tamp = tamp >> 8;
  2124  000F86  C082  F07E         	movff	CANsendMessage@tamp,??_CANsendMessage
  2125  000F8A  C083  F07F         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
  2126  000F8E  C084  F080         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
  2127  000F92  C085  F081         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
  2128  000F96  C07F  F07E         	movff	??_CANsendMessage+1,??_CANsendMessage
  2129  000F9A  C080  F07F         	movff	??_CANsendMessage+2,??_CANsendMessage+1
  2130  000F9E  C081  F080         	movff	??_CANsendMessage+3,??_CANsendMessage+2
  2131  000FA2  0100               	movlb	0	; () banked
  2132  000FA4  6B81               	clrf	(??_CANsendMessage+3)& (0+255),b
  2133  000FA6  C07E  F082         	movff	??_CANsendMessage,CANsendMessage@tamp
  2134  000FAA  C07F  F083         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  2135  000FAE  C080  F084         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  2136  000FB2  C081  F085         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  2137                           
  2138                           ; BSR set to: 0
  2139                           ;inc\CANlib.h: 388: TXB1EIDH = (unsigned char) tamp;
  2140  000FB6  C082  FF33         	movff	CANsendMessage@tamp,3891	;volatile
  2141                           
  2142                           ; BSR set to: 0
  2143                           ;inc\CANlib.h: 390: TXB1SIDL = 0x00;
  2144  000FBA  0E00               	movlw	0
  2145  000FBC  010F               	movlb	15	; () banked
  2146  000FBE  6F32               	movwf	50,b	;volatile
  2147                           
  2148                           ; BSR set to: 15
  2149                           ;inc\CANlib.h: 391: TXB1SIDLbits.EXIDE = 0x01;
  2150  000FC0  010F               	movlb	15	; () banked
  2151  000FC2  8732               	bsf	50,3,b	;volatile
  2152                           
  2153                           ; BSR set to: 15
  2154                           ;inc\CANlib.h: 393: if (identifier & 0x00010000)
  2155  000FC4  0100               	movlb	0	; () banked
  2156  000FC6  A178               	btfss	(CANsendMessage@identifier+2)& (0+255),0,b
  2157  000FC8  D002               	goto	l376
  2158                           
  2159                           ; BSR set to: 0
  2160                           ;inc\CANlib.h: 394: TXB1SIDLbits.EID16 = 0x01;
  2161  000FCA  010F               	movlb	15	; () banked
  2162  000FCC  8132               	bsf	50,0,b	;volatile
  2163  000FCE                     l376:
  2164                           
  2165                           ;inc\CANlib.h: 395: if (identifier & 0x00020000)
  2166  000FCE  0100               	movlb	0	; () banked
  2167  000FD0  A378               	btfss	(CANsendMessage@identifier+2)& (0+255),1,b
  2168  000FD2  D002               	goto	l377
  2169                           
  2170                           ; BSR set to: 0
  2171                           ;inc\CANlib.h: 396: TXB1SIDLbits.EID17 = 0x01;
  2172  000FD4  010F               	movlb	15	; () banked
  2173  000FD6  8332               	bsf	50,1,b	;volatile
  2174  000FD8                     l377:
  2175                           
  2176                           ;inc\CANlib.h: 397: if (identifier & 0x00040000)
  2177  000FD8  0100               	movlb	0	; () banked
  2178  000FDA  A578               	btfss	(CANsendMessage@identifier+2)& (0+255),2,b
  2179  000FDC  D002               	goto	l378
  2180                           
  2181                           ; BSR set to: 0
  2182                           ;inc\CANlib.h: 398: TXB1SIDLbits.SID0 = 0x01;
  2183  000FDE  010F               	movlb	15	; () banked
  2184  000FE0  8B32               	bsf	50,5,b	;volatile
  2185  000FE2                     l378:
  2186                           
  2187                           ;inc\CANlib.h: 399: if (identifier & 0x00080000)
  2188  000FE2  0100               	movlb	0	; () banked
  2189  000FE4  A778               	btfss	(CANsendMessage@identifier+2)& (0+255),3,b
  2190  000FE6  D002               	goto	l379
  2191                           
  2192                           ; BSR set to: 0
  2193                           ;inc\CANlib.h: 400: TXB1SIDLbits.SID1 = 0x01;
  2194  000FE8  010F               	movlb	15	; () banked
  2195  000FEA  8D32               	bsf	50,6,b	;volatile
  2196  000FEC                     l379:
  2197                           
  2198                           ;inc\CANlib.h: 401: if (identifier & 0x00100000)
  2199  000FEC  0100               	movlb	0	; () banked
  2200  000FEE  A978               	btfss	(CANsendMessage@identifier+2)& (0+255),4,b
  2201  000FF0  D002               	goto	l3154
  2202                           
  2203                           ; BSR set to: 0
  2204                           ;inc\CANlib.h: 402: TXB1SIDLbits.SID2 = 0x01;
  2205  000FF2  010F               	movlb	15	; () banked
  2206  000FF4  8F32               	bsf	50,7,b	;volatile
  2207  000FF6                     l3154:
  2208                           
  2209                           ;inc\CANlib.h: 404: tamp = (identifier >> 21);
  2210  000FF6  C076  F07E         	movff	CANsendMessage@identifier,??_CANsendMessage
  2211  000FFA  C077  F07F         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
  2212  000FFE  C078  F080         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
  2213  001002  C079  F081         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
  2214  001006  0E16               	movlw	22
  2215  001008  D006               	goto	u3430
  2216  00100A                     u3435:
  2217  00100A  0100               	movlb	0	; () banked
  2218  00100C  90D8               	bcf	status,0,c
  2219  00100E  3381               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
  2220  001010  3380               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
  2221  001012  337F               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
  2222  001014  337E               	rrcf	??_CANsendMessage& (0+255),f,b
  2223  001016                     u3430:
  2224  001016  2EE8               	decfsz	wreg,f,c
  2225  001018  D7F8               	goto	u3435
  2226  00101A  C07E  F082         	movff	??_CANsendMessage,CANsendMessage@tamp
  2227  00101E  C07F  F083         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  2228  001022  C080  F084         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  2229  001026  C081  F085         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  2230                           
  2231                           ; BSR set to: 0
  2232                           ;inc\CANlib.h: 405: tamp = tamp & 0x000000FF;
  2233  00102A  0100               	movlb	0	; () banked
  2234  00102C  5182               	movf	CANsendMessage@tamp& (0+255),w,b
  2235  00102E  0100               	movlb	0	; () banked
  2236  001030  6F82               	movwf	CANsendMessage@tamp& (0+255),b
  2237  001032  6B83               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  2238  001034  6B84               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  2239  001036  6B85               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  2240                           
  2241                           ; BSR set to: 0
  2242                           ;inc\CANlib.h: 406: TXB1SIDH = (unsigned char) tamp;
  2243  001038  C082  FF31         	movff	CANsendMessage@tamp,3889	;volatile
  2244                           
  2245                           ;inc\CANlib.h: 407: }
  2246  00103C  D059               	goto	l3174
  2247  00103E                     l375:
  2248                           
  2249                           ; BSR set to: 0
  2250                           ;inc\CANlib.h: 409: else
  2251                           ;inc\CANlib.h: 411: {
  2252                           ;inc\CANlib.h: 412: TXB1SIDLbits.EXIDE = 0x00;
  2253  00103E  010F               	movlb	15	; () banked
  2254  001040  9732               	bcf	50,3,b	;volatile
  2255                           
  2256                           ; BSR set to: 15
  2257                           ;inc\CANlib.h: 414: tamp = (identifier >> 3);
  2258  001042  C076  F07E         	movff	CANsendMessage@identifier,??_CANsendMessage
  2259  001046  C077  F07F         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
  2260  00104A  C078  F080         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
  2261  00104E  C079  F081         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
  2262  001052  0E04               	movlw	4
  2263  001054  D006               	goto	u3440
  2264  001056                     u3445:
  2265  001056  0100               	movlb	0	; () banked
  2266  001058  90D8               	bcf	status,0,c
  2267  00105A  3381               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
  2268  00105C  3380               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
  2269  00105E  337F               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
  2270  001060  337E               	rrcf	??_CANsendMessage& (0+255),f,b
  2271  001062                     u3440:
  2272  001062  2EE8               	decfsz	wreg,f,c
  2273  001064  D7F8               	goto	u3445
  2274  001066  C07E  F082         	movff	??_CANsendMessage,CANsendMessage@tamp
  2275  00106A  C07F  F083         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  2276  00106E  C080  F084         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  2277  001072  C081  F085         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  2278                           
  2279                           ; BSR set to: 0
  2280                           ;inc\CANlib.h: 415: tamp = tamp & 0x000000FF;
  2281  001076  0100               	movlb	0	; () banked
  2282  001078  5182               	movf	CANsendMessage@tamp& (0+255),w,b
  2283  00107A  0100               	movlb	0	; () banked
  2284  00107C  6F82               	movwf	CANsendMessage@tamp& (0+255),b
  2285  00107E  6B83               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  2286  001080  6B84               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  2287  001082  6B85               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  2288                           
  2289                           ; BSR set to: 0
  2290                           ;inc\CANlib.h: 416: TXB1SIDH = (unsigned char) tamp;
  2291  001084  C082  FF31         	movff	CANsendMessage@tamp,3889	;volatile
  2292                           
  2293                           ; BSR set to: 0
  2294                           ;inc\CANlib.h: 418: tamp = identifier & 0x00000007;
  2295  001088  0E07               	movlw	7
  2296  00108A  0100               	movlb	0	; () banked
  2297  00108C  1576               	andwf	CANsendMessage@identifier& (0+255),w,b
  2298  00108E  0100               	movlb	0	; () banked
  2299  001090  6F82               	movwf	CANsendMessage@tamp& (0+255),b
  2300  001092  0E00               	movlw	0
  2301  001094  0100               	movlb	0	; () banked
  2302  001096  1577               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
  2303  001098  0100               	movlb	0	; () banked
  2304  00109A  6F83               	movwf	(CANsendMessage@tamp+1)& (0+255),b
  2305  00109C  0E00               	movlw	0
  2306  00109E  0100               	movlb	0	; () banked
  2307  0010A0  1578               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
  2308  0010A2  0100               	movlb	0	; () banked
  2309  0010A4  6F84               	movwf	(CANsendMessage@tamp+2)& (0+255),b
  2310  0010A6  0E00               	movlw	0
  2311  0010A8  0100               	movlb	0	; () banked
  2312  0010AA  1579               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
  2313  0010AC  0100               	movlb	0	; () banked
  2314  0010AE  6F85               	movwf	(CANsendMessage@tamp+3)& (0+255),b
  2315                           
  2316                           ; BSR set to: 0
  2317                           ;inc\CANlib.h: 419: tamp = tamp << 5;
  2318  0010B0  C082  F07E         	movff	CANsendMessage@tamp,??_CANsendMessage
  2319  0010B4  C083  F07F         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
  2320  0010B8  C084  F080         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
  2321  0010BC  C085  F081         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
  2322  0010C0  0E05               	movlw	5
  2323  0010C2                     u3455:
  2324  0010C2  90D8               	bcf	status,0,c
  2325  0010C4  0100               	movlb	0	; () banked
  2326  0010C6  377E               	rlcf	??_CANsendMessage& (0+255),f,b
  2327  0010C8  377F               	rlcf	(??_CANsendMessage+1)& (0+255),f,b
  2328  0010CA  3780               	rlcf	(??_CANsendMessage+2)& (0+255),f,b
  2329  0010CC  3781               	rlcf	(??_CANsendMessage+3)& (0+255),f,b
  2330  0010CE  2EE8               	decfsz	wreg,f,c
  2331  0010D0  D7F8               	goto	u3455
  2332  0010D2  C07E  F082         	movff	??_CANsendMessage,CANsendMessage@tamp
  2333  0010D6  C07F  F083         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  2334  0010DA  C080  F084         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  2335  0010DE  C081  F085         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  2336                           
  2337                           ; BSR set to: 0
  2338                           ;inc\CANlib.h: 420: TXB1SIDL = TXB1SIDL & 0b00011111;
  2339  0010E2  010F               	movlb	15	; () banked
  2340  0010E4  5132               	movf	50,w,b	;volatile
  2341  0010E6  0B1F               	andlw	31
  2342  0010E8  010F               	movlb	15	; () banked
  2343  0010EA  6F32               	movwf	50,b	;volatile
  2344                           
  2345                           ; BSR set to: 15
  2346                           ;inc\CANlib.h: 421: TXB1SIDL = (unsigned char) tamp;
  2347  0010EC  C082  FF32         	movff	CANsendMessage@tamp,3890	;volatile
  2348  0010F0                     l3174:
  2349                           
  2350                           ;inc\CANlib.h: 422: }
  2351                           ;inc\CANlib.h: 424: if (0b00000001 & flags)
  2352  0010F0  0100               	movlb	0	; () banked
  2353  0010F2  A17D               	btfss	CANsendMessage@flags& (0+255),0,b
  2354  0010F4  D003               	goto	l382
  2355                           
  2356                           ; BSR set to: 0
  2357                           ;inc\CANlib.h: 425: TXB1CONbits.TXPRI0 = 0x01;
  2358  0010F6  010F               	movlb	15	; () banked
  2359  0010F8  8130               	bsf	48,0,b	;volatile
  2360  0010FA  D002               	goto	l383
  2361  0010FC                     l382:
  2362                           
  2363                           ; BSR set to: 0
  2364                           ;inc\CANlib.h: 426: else
  2365                           ;inc\CANlib.h: 427: TXB1CONbits.TXPRI0 = 0x00;
  2366  0010FC  010F               	movlb	15	; () banked
  2367  0010FE  9130               	bcf	48,0,b	;volatile
  2368  001100                     l383:
  2369                           
  2370                           ; BSR set to: 15
  2371                           ;inc\CANlib.h: 428: if (0b00000010 & flags)
  2372  001100  0100               	movlb	0	; () banked
  2373  001102  A37D               	btfss	CANsendMessage@flags& (0+255),1,b
  2374  001104  D003               	goto	l384
  2375                           
  2376                           ; BSR set to: 0
  2377                           ;inc\CANlib.h: 429: TXB1CONbits.TXPRI1 = 0x01;
  2378  001106  010F               	movlb	15	; () banked
  2379  001108  8330               	bsf	48,1,b	;volatile
  2380  00110A  D002               	goto	l3180
  2381  00110C                     l384:
  2382                           
  2383                           ; BSR set to: 0
  2384                           ;inc\CANlib.h: 430: else
  2385                           ;inc\CANlib.h: 431: TXB1CONbits.TXPRI1 = 0x00;
  2386  00110C  010F               	movlb	15	; () banked
  2387  00110E  9330               	bcf	48,1,b	;volatile
  2388  001110                     l3180:
  2389                           
  2390                           ; BSR set to: 15
  2391                           ;inc\CANlib.h: 433: TXB1D0 = data[0];
  2392  001110  C07A  FFD9         	movff	CANsendMessage@data,fsr2l
  2393  001114  C07B  FFDA         	movff	CANsendMessage@data+1,fsr2h
  2394  001118  50DF               	movf	indf2,w,c
  2395  00111A  010F               	movlb	15	; () banked
  2396  00111C  6F36               	movwf	54,b	;volatile
  2397                           
  2398                           ; BSR set to: 15
  2399                           ;inc\CANlib.h: 434: TXB1D1 = data[1];
  2400  00111E  0100               	movlb	0	; () banked
  2401  001120  EE20 F001          	lfsr	2,1
  2402  001124  517A               	movf	CANsendMessage@data& (0+255),w,b
  2403  001126  26D9               	addwf	fsr2l,f,c
  2404  001128  517B               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2405  00112A  22DA               	addwfc	fsr2h,f,c
  2406  00112C  50DF               	movf	indf2,w,c
  2407  00112E  010F               	movlb	15	; () banked
  2408  001130  6F37               	movwf	55,b	;volatile
  2409                           
  2410                           ; BSR set to: 15
  2411                           ;inc\CANlib.h: 435: TXB1D2 = data[2];
  2412  001132  0100               	movlb	0	; () banked
  2413  001134  EE20 F002          	lfsr	2,2
  2414  001138  517A               	movf	CANsendMessage@data& (0+255),w,b
  2415  00113A  26D9               	addwf	fsr2l,f,c
  2416  00113C  517B               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2417  00113E  22DA               	addwfc	fsr2h,f,c
  2418  001140  50DF               	movf	indf2,w,c
  2419  001142  010F               	movlb	15	; () banked
  2420  001144  6F38               	movwf	56,b	;volatile
  2421                           
  2422                           ; BSR set to: 15
  2423                           ;inc\CANlib.h: 436: TXB1D3 = data[3];
  2424  001146  0100               	movlb	0	; () banked
  2425  001148  EE20 F003          	lfsr	2,3
  2426  00114C  517A               	movf	CANsendMessage@data& (0+255),w,b
  2427  00114E  26D9               	addwf	fsr2l,f,c
  2428  001150  517B               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2429  001152  22DA               	addwfc	fsr2h,f,c
  2430  001154  50DF               	movf	indf2,w,c
  2431  001156  010F               	movlb	15	; () banked
  2432  001158  6F39               	movwf	57,b	;volatile
  2433                           
  2434                           ; BSR set to: 15
  2435                           ;inc\CANlib.h: 437: TXB1D4 = data[4];
  2436  00115A  0100               	movlb	0	; () banked
  2437  00115C  EE20 F004          	lfsr	2,4
  2438  001160  517A               	movf	CANsendMessage@data& (0+255),w,b
  2439  001162  26D9               	addwf	fsr2l,f,c
  2440  001164  517B               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2441  001166  22DA               	addwfc	fsr2h,f,c
  2442  001168  50DF               	movf	indf2,w,c
  2443  00116A  010F               	movlb	15	; () banked
  2444  00116C  6F3A               	movwf	58,b	;volatile
  2445                           
  2446                           ; BSR set to: 15
  2447                           ;inc\CANlib.h: 438: TXB1D5 = data[5];
  2448  00116E  0100               	movlb	0	; () banked
  2449  001170  EE20 F005          	lfsr	2,5
  2450  001174  517A               	movf	CANsendMessage@data& (0+255),w,b
  2451  001176  26D9               	addwf	fsr2l,f,c
  2452  001178  517B               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2453  00117A  22DA               	addwfc	fsr2h,f,c
  2454  00117C  50DF               	movf	indf2,w,c
  2455  00117E  010F               	movlb	15	; () banked
  2456  001180  6F3B               	movwf	59,b	;volatile
  2457                           
  2458                           ; BSR set to: 15
  2459                           ;inc\CANlib.h: 439: TXB1D6 = data[6];
  2460  001182  0100               	movlb	0	; () banked
  2461  001184  EE20 F006          	lfsr	2,6
  2462  001188  517A               	movf	CANsendMessage@data& (0+255),w,b
  2463  00118A  26D9               	addwf	fsr2l,f,c
  2464  00118C  517B               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2465  00118E  22DA               	addwfc	fsr2h,f,c
  2466  001190  50DF               	movf	indf2,w,c
  2467  001192  010F               	movlb	15	; () banked
  2468  001194  6F3C               	movwf	60,b	;volatile
  2469                           
  2470                           ; BSR set to: 15
  2471                           ;inc\CANlib.h: 440: TXB1D7 = data[7];
  2472  001196  0100               	movlb	0	; () banked
  2473  001198  EE20 F007          	lfsr	2,7
  2474  00119C  517A               	movf	CANsendMessage@data& (0+255),w,b
  2475  00119E  26D9               	addwf	fsr2l,f,c
  2476  0011A0  517B               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2477  0011A2  22DA               	addwfc	fsr2h,f,c
  2478  0011A4  50DF               	movf	indf2,w,c
  2479  0011A6  010F               	movlb	15	; () banked
  2480  0011A8  6F3D               	movwf	61,b	;volatile
  2481                           
  2482                           ; BSR set to: 15
  2483                           ;inc\CANlib.h: 442: TXB1CONbits.TXREQ = 0x01;
  2484  0011AA  010F               	movlb	15	; () banked
  2485  0011AC  8730               	bsf	48,3,b	;volatile
  2486                           
  2487                           ; BSR set to: 15
  2488                           ;inc\CANlib.h: 444: return;
  2489  0011AE  0012               	return	
  2490  0011B0                     l372:
  2491                           
  2492                           ; BSR set to: 15
  2493                           ;inc\CANlib.h: 445: }
  2494                           ;inc\CANlib.h: 449: if (TXB2CONbits.TXREQ == 0)
  2495  0011B0  010F               	movlb	15	; () banked
  2496  0011B2  B720               	btfsc	32,3,b	;volatile
  2497  0011B4  0012               	return	
  2498                           
  2499                           ; BSR set to: 15
  2500                           ;inc\CANlib.h: 450: { TXB2DLC = dataLength;
  2501  0011B6  C07C  FF25         	movff	CANsendMessage@dataLength,3877	;volatile
  2502                           
  2503                           ;inc\CANlib.h: 452: if (0b01000000 & flags)
  2504  0011BA  0100               	movlb	0	; () banked
  2505  0011BC  AD7D               	btfss	CANsendMessage@flags& (0+255),6,b
  2506  0011BE  D003               	goto	l387
  2507                           
  2508                           ; BSR set to: 0
  2509                           ;inc\CANlib.h: 453: TXB2DLCbits.TXRTR = 0x01;
  2510  0011C0  010F               	movlb	15	; () banked
  2511  0011C2  8D25               	bsf	37,6,b	;volatile
  2512  0011C4  D002               	goto	l388
  2513  0011C6                     l387:
  2514                           
  2515                           ; BSR set to: 0
  2516                           ;inc\CANlib.h: 454: else
  2517                           ;inc\CANlib.h: 455: TXB2DLCbits.TXRTR = 0x00;
  2518  0011C6  010F               	movlb	15	; () banked
  2519  0011C8  9D25               	bcf	37,6,b	;volatile
  2520  0011CA                     l388:
  2521                           
  2522                           ; BSR set to: 15
  2523                           ;inc\CANlib.h: 457: if (CAN_TX_FRAME_MASK & flags)
  2524  0011CA  0100               	movlb	0	; () banked
  2525  0011CC  A77D               	btfss	CANsendMessage@flags& (0+255),3,b
  2526  0011CE  D079               	goto	l389
  2527                           
  2528                           ; BSR set to: 0
  2529                           ;inc\CANlib.h: 458: {
  2530                           ;inc\CANlib.h: 459: tamp = identifier & 0x000000FF;
  2531  0011D0  0100               	movlb	0	; () banked
  2532  0011D2  5176               	movf	CANsendMessage@identifier& (0+255),w,b
  2533  0011D4  0100               	movlb	0	; () banked
  2534  0011D6  6F82               	movwf	CANsendMessage@tamp& (0+255),b
  2535  0011D8  6B83               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  2536  0011DA  6B84               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  2537  0011DC  6B85               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  2538                           
  2539                           ; BSR set to: 0
  2540                           ;inc\CANlib.h: 460: TXB2EIDL = (unsigned char) tamp;
  2541  0011DE  C082  FF24         	movff	CANsendMessage@tamp,3876	;volatile
  2542                           
  2543                           ; BSR set to: 0
  2544                           ;inc\CANlib.h: 462: tamp = identifier & 0x0000FF00;
  2545  0011E2  0E00               	movlw	0
  2546  0011E4  0100               	movlb	0	; () banked
  2547  0011E6  1576               	andwf	CANsendMessage@identifier& (0+255),w,b
  2548  0011E8  0100               	movlb	0	; () banked
  2549  0011EA  6F82               	movwf	CANsendMessage@tamp& (0+255),b
  2550  0011EC  0EFF               	movlw	255
  2551  0011EE  0100               	movlb	0	; () banked
  2552  0011F0  1577               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
  2553  0011F2  0100               	movlb	0	; () banked
  2554  0011F4  6F83               	movwf	(CANsendMessage@tamp+1)& (0+255),b
  2555  0011F6  0E00               	movlw	0
  2556  0011F8  0100               	movlb	0	; () banked
  2557  0011FA  1578               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
  2558  0011FC  0100               	movlb	0	; () banked
  2559  0011FE  6F84               	movwf	(CANsendMessage@tamp+2)& (0+255),b
  2560  001200  0E00               	movlw	0
  2561  001202  0100               	movlb	0	; () banked
  2562  001204  1579               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
  2563  001206  0100               	movlb	0	; () banked
  2564  001208  6F85               	movwf	(CANsendMessage@tamp+3)& (0+255),b
  2565                           
  2566                           ; BSR set to: 0
  2567                           ;inc\CANlib.h: 463: tamp = tamp >> 8;
  2568  00120A  C082  F07E         	movff	CANsendMessage@tamp,??_CANsendMessage
  2569  00120E  C083  F07F         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
  2570  001212  C084  F080         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
  2571  001216  C085  F081         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
  2572  00121A  C07F  F07E         	movff	??_CANsendMessage+1,??_CANsendMessage
  2573  00121E  C080  F07F         	movff	??_CANsendMessage+2,??_CANsendMessage+1
  2574  001222  C081  F080         	movff	??_CANsendMessage+3,??_CANsendMessage+2
  2575  001226  0100               	movlb	0	; () banked
  2576  001228  6B81               	clrf	(??_CANsendMessage+3)& (0+255),b
  2577  00122A  C07E  F082         	movff	??_CANsendMessage,CANsendMessage@tamp
  2578  00122E  C07F  F083         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  2579  001232  C080  F084         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  2580  001236  C081  F085         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  2581                           
  2582                           ; BSR set to: 0
  2583                           ;inc\CANlib.h: 464: TXB2EIDH = (unsigned char) tamp;
  2584  00123A  C082  FF23         	movff	CANsendMessage@tamp,3875	;volatile
  2585                           
  2586                           ; BSR set to: 0
  2587                           ;inc\CANlib.h: 466: TXB2SIDL = 0x00;
  2588  00123E  0E00               	movlw	0
  2589  001240  010F               	movlb	15	; () banked
  2590  001242  6F22               	movwf	34,b	;volatile
  2591                           
  2592                           ; BSR set to: 15
  2593                           ;inc\CANlib.h: 467: TXB2SIDLbits.EXIDE = 0x01;
  2594  001244  010F               	movlb	15	; () banked
  2595  001246  8722               	bsf	34,3,b	;volatile
  2596                           
  2597                           ; BSR set to: 15
  2598                           ;inc\CANlib.h: 469: if (identifier & 0x00010000)
  2599  001248  0100               	movlb	0	; () banked
  2600  00124A  A178               	btfss	(CANsendMessage@identifier+2)& (0+255),0,b
  2601  00124C  D002               	goto	l390
  2602                           
  2603                           ; BSR set to: 0
  2604                           ;inc\CANlib.h: 470: TXB2SIDLbits.EID16 = 0x01;
  2605  00124E  010F               	movlb	15	; () banked
  2606  001250  8122               	bsf	34,0,b	;volatile
  2607  001252                     l390:
  2608                           
  2609                           ;inc\CANlib.h: 471: if (identifier & 0x00020000)
  2610  001252  0100               	movlb	0	; () banked
  2611  001254  A378               	btfss	(CANsendMessage@identifier+2)& (0+255),1,b
  2612  001256  D002               	goto	l391
  2613                           
  2614                           ; BSR set to: 0
  2615                           ;inc\CANlib.h: 472: TXB2SIDLbits.EID17 = 0x01;
  2616  001258  010F               	movlb	15	; () banked
  2617  00125A  8322               	bsf	34,1,b	;volatile
  2618  00125C                     l391:
  2619                           
  2620                           ;inc\CANlib.h: 473: if (identifier & 0x00040000)
  2621  00125C  0100               	movlb	0	; () banked
  2622  00125E  A578               	btfss	(CANsendMessage@identifier+2)& (0+255),2,b
  2623  001260  D002               	goto	l392
  2624                           
  2625                           ; BSR set to: 0
  2626                           ;inc\CANlib.h: 474: TXB2SIDLbits.SID0 = 0x01;
  2627  001262  010F               	movlb	15	; () banked
  2628  001264  8B22               	bsf	34,5,b	;volatile
  2629  001266                     l392:
  2630                           
  2631                           ;inc\CANlib.h: 475: if (identifier & 0x00080000)
  2632  001266  0100               	movlb	0	; () banked
  2633  001268  A778               	btfss	(CANsendMessage@identifier+2)& (0+255),3,b
  2634  00126A  D002               	goto	l393
  2635                           
  2636                           ; BSR set to: 0
  2637                           ;inc\CANlib.h: 476: TXB2SIDLbits.SID1 = 0x01;
  2638  00126C  010F               	movlb	15	; () banked
  2639  00126E  8D22               	bsf	34,6,b	;volatile
  2640  001270                     l393:
  2641                           
  2642                           ;inc\CANlib.h: 477: if (identifier & 0x00100000)
  2643  001270  0100               	movlb	0	; () banked
  2644  001272  A978               	btfss	(CANsendMessage@identifier+2)& (0+255),4,b
  2645  001274  D002               	goto	l3230
  2646                           
  2647                           ; BSR set to: 0
  2648                           ;inc\CANlib.h: 478: TXB2SIDLbits.SID2 = 0x01;
  2649  001276  010F               	movlb	15	; () banked
  2650  001278  8F22               	bsf	34,7,b	;volatile
  2651  00127A                     l3230:
  2652                           
  2653                           ;inc\CANlib.h: 480: tamp = (identifier >> 21);
  2654  00127A  C076  F07E         	movff	CANsendMessage@identifier,??_CANsendMessage
  2655  00127E  C077  F07F         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
  2656  001282  C078  F080         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
  2657  001286  C079  F081         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
  2658  00128A  0E16               	movlw	22
  2659  00128C  D006               	goto	u3560
  2660  00128E                     u3565:
  2661  00128E  0100               	movlb	0	; () banked
  2662  001290  90D8               	bcf	status,0,c
  2663  001292  3381               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
  2664  001294  3380               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
  2665  001296  337F               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
  2666  001298  337E               	rrcf	??_CANsendMessage& (0+255),f,b
  2667  00129A                     u3560:
  2668  00129A  2EE8               	decfsz	wreg,f,c
  2669  00129C  D7F8               	goto	u3565
  2670  00129E  C07E  F082         	movff	??_CANsendMessage,CANsendMessage@tamp
  2671  0012A2  C07F  F083         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  2672  0012A6  C080  F084         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  2673  0012AA  C081  F085         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  2674                           
  2675                           ; BSR set to: 0
  2676                           ;inc\CANlib.h: 481: tamp = tamp & 0x000000FF;
  2677  0012AE  0100               	movlb	0	; () banked
  2678  0012B0  5182               	movf	CANsendMessage@tamp& (0+255),w,b
  2679  0012B2  0100               	movlb	0	; () banked
  2680  0012B4  6F82               	movwf	CANsendMessage@tamp& (0+255),b
  2681  0012B6  6B83               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  2682  0012B8  6B84               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  2683  0012BA  6B85               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  2684                           
  2685                           ; BSR set to: 0
  2686                           ;inc\CANlib.h: 482: TXB2SIDH = (unsigned char) tamp;
  2687  0012BC  C082  FF21         	movff	CANsendMessage@tamp,3873	;volatile
  2688                           
  2689                           ;inc\CANlib.h: 483: }
  2690  0012C0  D059               	goto	l3250
  2691  0012C2                     l389:
  2692                           
  2693                           ; BSR set to: 0
  2694                           ;inc\CANlib.h: 485: else
  2695                           ;inc\CANlib.h: 487: {
  2696                           ;inc\CANlib.h: 488: TXB2SIDLbits.EXIDE = 0x00;
  2697  0012C2  010F               	movlb	15	; () banked
  2698  0012C4  9722               	bcf	34,3,b	;volatile
  2699                           
  2700                           ; BSR set to: 15
  2701                           ;inc\CANlib.h: 490: tamp = (identifier >> 3);
  2702  0012C6  C076  F07E         	movff	CANsendMessage@identifier,??_CANsendMessage
  2703  0012CA  C077  F07F         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
  2704  0012CE  C078  F080         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
  2705  0012D2  C079  F081         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
  2706  0012D6  0E04               	movlw	4
  2707  0012D8  D006               	goto	u3570
  2708  0012DA                     u3575:
  2709  0012DA  0100               	movlb	0	; () banked
  2710  0012DC  90D8               	bcf	status,0,c
  2711  0012DE  3381               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
  2712  0012E0  3380               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
  2713  0012E2  337F               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
  2714  0012E4  337E               	rrcf	??_CANsendMessage& (0+255),f,b
  2715  0012E6                     u3570:
  2716  0012E6  2EE8               	decfsz	wreg,f,c
  2717  0012E8  D7F8               	goto	u3575
  2718  0012EA  C07E  F082         	movff	??_CANsendMessage,CANsendMessage@tamp
  2719  0012EE  C07F  F083         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  2720  0012F2  C080  F084         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  2721  0012F6  C081  F085         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  2722                           
  2723                           ; BSR set to: 0
  2724                           ;inc\CANlib.h: 491: tamp = tamp & 0x000000FF;
  2725  0012FA  0100               	movlb	0	; () banked
  2726  0012FC  5182               	movf	CANsendMessage@tamp& (0+255),w,b
  2727  0012FE  0100               	movlb	0	; () banked
  2728  001300  6F82               	movwf	CANsendMessage@tamp& (0+255),b
  2729  001302  6B83               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  2730  001304  6B84               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  2731  001306  6B85               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  2732                           
  2733                           ; BSR set to: 0
  2734                           ;inc\CANlib.h: 492: TXB2SIDH = (unsigned char) tamp;
  2735  001308  C082  FF21         	movff	CANsendMessage@tamp,3873	;volatile
  2736                           
  2737                           ; BSR set to: 0
  2738                           ;inc\CANlib.h: 494: tamp = identifier & 0x00000007;
  2739  00130C  0E07               	movlw	7
  2740  00130E  0100               	movlb	0	; () banked
  2741  001310  1576               	andwf	CANsendMessage@identifier& (0+255),w,b
  2742  001312  0100               	movlb	0	; () banked
  2743  001314  6F82               	movwf	CANsendMessage@tamp& (0+255),b
  2744  001316  0E00               	movlw	0
  2745  001318  0100               	movlb	0	; () banked
  2746  00131A  1577               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
  2747  00131C  0100               	movlb	0	; () banked
  2748  00131E  6F83               	movwf	(CANsendMessage@tamp+1)& (0+255),b
  2749  001320  0E00               	movlw	0
  2750  001322  0100               	movlb	0	; () banked
  2751  001324  1578               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
  2752  001326  0100               	movlb	0	; () banked
  2753  001328  6F84               	movwf	(CANsendMessage@tamp+2)& (0+255),b
  2754  00132A  0E00               	movlw	0
  2755  00132C  0100               	movlb	0	; () banked
  2756  00132E  1579               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
  2757  001330  0100               	movlb	0	; () banked
  2758  001332  6F85               	movwf	(CANsendMessage@tamp+3)& (0+255),b
  2759                           
  2760                           ; BSR set to: 0
  2761                           ;inc\CANlib.h: 495: tamp = tamp << 5;
  2762  001334  C082  F07E         	movff	CANsendMessage@tamp,??_CANsendMessage
  2763  001338  C083  F07F         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
  2764  00133C  C084  F080         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
  2765  001340  C085  F081         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
  2766  001344  0E05               	movlw	5
  2767  001346                     u3585:
  2768  001346  90D8               	bcf	status,0,c
  2769  001348  0100               	movlb	0	; () banked
  2770  00134A  377E               	rlcf	??_CANsendMessage& (0+255),f,b
  2771  00134C  377F               	rlcf	(??_CANsendMessage+1)& (0+255),f,b
  2772  00134E  3780               	rlcf	(??_CANsendMessage+2)& (0+255),f,b
  2773  001350  3781               	rlcf	(??_CANsendMessage+3)& (0+255),f,b
  2774  001352  2EE8               	decfsz	wreg,f,c
  2775  001354  D7F8               	goto	u3585
  2776  001356  C07E  F082         	movff	??_CANsendMessage,CANsendMessage@tamp
  2777  00135A  C07F  F083         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  2778  00135E  C080  F084         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  2779  001362  C081  F085         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  2780                           
  2781                           ; BSR set to: 0
  2782                           ;inc\CANlib.h: 496: TXB2SIDL = TXB2SIDL & 0b00011111;
  2783  001366  010F               	movlb	15	; () banked
  2784  001368  5122               	movf	34,w,b	;volatile
  2785  00136A  0B1F               	andlw	31
  2786  00136C  010F               	movlb	15	; () banked
  2787  00136E  6F22               	movwf	34,b	;volatile
  2788                           
  2789                           ; BSR set to: 15
  2790                           ;inc\CANlib.h: 497: TXB2SIDL = (unsigned char) tamp;
  2791  001370  C082  FF22         	movff	CANsendMessage@tamp,3874	;volatile
  2792  001374                     l3250:
  2793                           
  2794                           ;inc\CANlib.h: 498: }
  2795                           ;inc\CANlib.h: 500: if (0b00000001 & flags)
  2796  001374  0100               	movlb	0	; () banked
  2797  001376  A17D               	btfss	CANsendMessage@flags& (0+255),0,b
  2798  001378  D003               	goto	l396
  2799                           
  2800                           ; BSR set to: 0
  2801                           ;inc\CANlib.h: 501: TXB2CONbits.TXPRI0 = 0x01;
  2802  00137A  010F               	movlb	15	; () banked
  2803  00137C  8120               	bsf	32,0,b	;volatile
  2804  00137E  D002               	goto	l397
  2805  001380                     l396:
  2806                           
  2807                           ; BSR set to: 0
  2808                           ;inc\CANlib.h: 502: else
  2809                           ;inc\CANlib.h: 503: TXB2CONbits.TXPRI0 = 0x00;
  2810  001380  010F               	movlb	15	; () banked
  2811  001382  9120               	bcf	32,0,b	;volatile
  2812  001384                     l397:
  2813                           
  2814                           ; BSR set to: 15
  2815                           ;inc\CANlib.h: 504: if (0b00000010 & flags)
  2816  001384  0100               	movlb	0	; () banked
  2817  001386  A37D               	btfss	CANsendMessage@flags& (0+255),1,b
  2818  001388  D003               	goto	l398
  2819                           
  2820                           ; BSR set to: 0
  2821                           ;inc\CANlib.h: 505: TXB2CONbits.TXPRI1 = 0x01;
  2822  00138A  010F               	movlb	15	; () banked
  2823  00138C  8320               	bsf	32,1,b	;volatile
  2824  00138E  D002               	goto	l3256
  2825  001390                     l398:
  2826                           
  2827                           ; BSR set to: 0
  2828                           ;inc\CANlib.h: 506: else
  2829                           ;inc\CANlib.h: 507: TXB2CONbits.TXPRI1 = 0x00;
  2830  001390  010F               	movlb	15	; () banked
  2831  001392  9320               	bcf	32,1,b	;volatile
  2832  001394                     l3256:
  2833                           
  2834                           ; BSR set to: 15
  2835                           ;inc\CANlib.h: 509: TXB2D0 = data[0];
  2836  001394  C07A  FFD9         	movff	CANsendMessage@data,fsr2l
  2837  001398  C07B  FFDA         	movff	CANsendMessage@data+1,fsr2h
  2838  00139C  50DF               	movf	indf2,w,c
  2839  00139E  010F               	movlb	15	; () banked
  2840  0013A0  6F26               	movwf	38,b	;volatile
  2841                           
  2842                           ; BSR set to: 15
  2843                           ;inc\CANlib.h: 510: TXB2D1 = data[1];
  2844  0013A2  0100               	movlb	0	; () banked
  2845  0013A4  EE20 F001          	lfsr	2,1
  2846  0013A8  517A               	movf	CANsendMessage@data& (0+255),w,b
  2847  0013AA  26D9               	addwf	fsr2l,f,c
  2848  0013AC  517B               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2849  0013AE  22DA               	addwfc	fsr2h,f,c
  2850  0013B0  50DF               	movf	indf2,w,c
  2851  0013B2  010F               	movlb	15	; () banked
  2852  0013B4  6F27               	movwf	39,b	;volatile
  2853                           
  2854                           ; BSR set to: 15
  2855                           ;inc\CANlib.h: 511: TXB2D2 = data[2];
  2856  0013B6  0100               	movlb	0	; () banked
  2857  0013B8  EE20 F002          	lfsr	2,2
  2858  0013BC  517A               	movf	CANsendMessage@data& (0+255),w,b
  2859  0013BE  26D9               	addwf	fsr2l,f,c
  2860  0013C0  517B               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2861  0013C2  22DA               	addwfc	fsr2h,f,c
  2862  0013C4  50DF               	movf	indf2,w,c
  2863  0013C6  010F               	movlb	15	; () banked
  2864  0013C8  6F28               	movwf	40,b	;volatile
  2865                           
  2866                           ; BSR set to: 15
  2867                           ;inc\CANlib.h: 512: TXB2D3 = data[3];
  2868  0013CA  0100               	movlb	0	; () banked
  2869  0013CC  EE20 F003          	lfsr	2,3
  2870  0013D0  517A               	movf	CANsendMessage@data& (0+255),w,b
  2871  0013D2  26D9               	addwf	fsr2l,f,c
  2872  0013D4  517B               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2873  0013D6  22DA               	addwfc	fsr2h,f,c
  2874  0013D8  50DF               	movf	indf2,w,c
  2875  0013DA  010F               	movlb	15	; () banked
  2876  0013DC  6F29               	movwf	41,b	;volatile
  2877                           
  2878                           ; BSR set to: 15
  2879                           ;inc\CANlib.h: 513: TXB2D4 = data[4];
  2880  0013DE  0100               	movlb	0	; () banked
  2881  0013E0  EE20 F004          	lfsr	2,4
  2882  0013E4  517A               	movf	CANsendMessage@data& (0+255),w,b
  2883  0013E6  26D9               	addwf	fsr2l,f,c
  2884  0013E8  517B               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2885  0013EA  22DA               	addwfc	fsr2h,f,c
  2886  0013EC  50DF               	movf	indf2,w,c
  2887  0013EE  010F               	movlb	15	; () banked
  2888  0013F0  6F2A               	movwf	42,b	;volatile
  2889                           
  2890                           ; BSR set to: 15
  2891                           ;inc\CANlib.h: 514: TXB2D5 = data[5];
  2892  0013F2  0100               	movlb	0	; () banked
  2893  0013F4  EE20 F005          	lfsr	2,5
  2894  0013F8  517A               	movf	CANsendMessage@data& (0+255),w,b
  2895  0013FA  26D9               	addwf	fsr2l,f,c
  2896  0013FC  517B               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2897  0013FE  22DA               	addwfc	fsr2h,f,c
  2898  001400  50DF               	movf	indf2,w,c
  2899  001402  010F               	movlb	15	; () banked
  2900  001404  6F2B               	movwf	43,b	;volatile
  2901                           
  2902                           ; BSR set to: 15
  2903                           ;inc\CANlib.h: 515: TXB2D6 = data[6];
  2904  001406  0100               	movlb	0	; () banked
  2905  001408  EE20 F006          	lfsr	2,6
  2906  00140C  517A               	movf	CANsendMessage@data& (0+255),w,b
  2907  00140E  26D9               	addwf	fsr2l,f,c
  2908  001410  517B               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2909  001412  22DA               	addwfc	fsr2h,f,c
  2910  001414  50DF               	movf	indf2,w,c
  2911  001416  010F               	movlb	15	; () banked
  2912  001418  6F2C               	movwf	44,b	;volatile
  2913                           
  2914                           ; BSR set to: 15
  2915                           ;inc\CANlib.h: 516: TXB2D7 = data[7];
  2916  00141A  0100               	movlb	0	; () banked
  2917  00141C  EE20 F007          	lfsr	2,7
  2918  001420  517A               	movf	CANsendMessage@data& (0+255),w,b
  2919  001422  26D9               	addwf	fsr2l,f,c
  2920  001424  517B               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2921  001426  22DA               	addwfc	fsr2h,f,c
  2922  001428  50DF               	movf	indf2,w,c
  2923  00142A  010F               	movlb	15	; () banked
  2924  00142C  6F2D               	movwf	45,b	;volatile
  2925                           
  2926                           ; BSR set to: 15
  2927                           ;inc\CANlib.h: 518: TXB2CONbits.TXREQ = 0x01;
  2928  00142E  010F               	movlb	15	; () banked
  2929  001430  8720               	bsf	32,3,b	;volatile
  2930                           
  2931                           ; BSR set to: 15
  2932                           ;inc\CANlib.h: 520: return;
  2933  001432  0012               	return	
  2934  001434                     __end_of_CANsendMessage:
  2935                           	opt stack 0
  2936                           tblptru	equ	0xFF8
  2937                           tblptrh	equ	0xFF7
  2938                           tblptrl	equ	0xFF6
  2939                           tablat	equ	0xFF5
  2940                           prodh	equ	0xFF4
  2941                           prodl	equ	0xFF3
  2942                           postinc0	equ	0xFEE
  2943                           wreg	equ	0xFE8
  2944                           indf2	equ	0xFDF
  2945                           fsr2h	equ	0xFDA
  2946                           fsr2l	equ	0xFD9
  2947                           status	equ	0xFD8
  2948                           
  2949 ;; *************** function _CANisTxReady *****************
  2950 ;; Defined at:
  2951 ;;		line 1154 in file "F:/Tesina/LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
  2952 ;; Parameters:    Size  Location     Type
  2953 ;;		None
  2954 ;; Auto vars:     Size  Location     Type
  2955 ;;		None
  2956 ;; Return value:  Size  Location     Type
  2957 ;;                  1    wreg      unsigned char 
  2958 ;; Registers used:
  2959 ;;		wreg, status,2
  2960 ;; Tracked objects:
  2961 ;;		On entry : 0/0
  2962 ;;		On exit  : 0/0
  2963 ;;		Unchanged: 0/0
  2964 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2965 ;;      Params:         0       0       0       0
  2966 ;;      Locals:         0       1       0       0
  2967 ;;      Temps:          0       0       0       0
  2968 ;;      Totals:         0       1       0       0
  2969 ;;Total ram usage:        1 bytes
  2970 ;; Hardware stack levels used:    1
  2971 ;; Hardware stack levels required when called:    5
  2972 ;; This function calls:
  2973 ;;		Nothing
  2974 ;; This function is called by:
  2975 ;;		_send_data
  2976 ;; This function uses a non-reentrant model
  2977 ;;
  2978                           
  2979                           	psect	text5
  2980  0026B6                     __ptext5:
  2981                           	opt stack 0
  2982  0026B6                     _CANisTxReady:
  2983                           	opt stack 24
  2984                           
  2985                           ;inc\CANlib.h: 1156: return (!TXB0CONbits.TXREQ || !TXB1CONbits.TXREQ || !TXB2CONbits.TX
      +                          REQ);
  2986                           
  2987                           ; BSR set to: 15
  2988                           ;incstack = 0
  2989  0026B6  0E01               	movlw	1
  2990  0026B8  0100               	movlb	0	; () banked
  2991  0026BA  6F76               	movwf	_CANisTxReady$2803& (0+255),b
  2992                           
  2993                           ; BSR set to: 0
  2994  0026BC  010F               	movlb	15	; () banked
  2995  0026BE  A740               	btfss	64,3,b	;volatile
  2996  0026C0  D009               	goto	l550
  2997                           
  2998                           ; BSR set to: 15
  2999  0026C2  010F               	movlb	15	; () banked
  3000  0026C4  A730               	btfss	48,3,b	;volatile
  3001  0026C6  D006               	goto	l550
  3002                           
  3003                           ; BSR set to: 15
  3004  0026C8  010F               	movlb	15	; () banked
  3005  0026CA  A720               	btfss	32,3,b	;volatile
  3006  0026CC  D003               	goto	l550
  3007                           
  3008                           ; BSR set to: 15
  3009  0026CE  0E00               	movlw	0
  3010  0026D0  0100               	movlb	0	; () banked
  3011  0026D2  6F76               	movwf	_CANisTxReady$2803& (0+255),b
  3012  0026D4                     l550:
  3013  0026D4  0100               	movlb	0	; () banked
  3014  0026D6  5176               	movf	_CANisTxReady$2803& (0+255),w,b
  3015  0026D8  0012               	return	
  3016  0026DA                     __end_of_CANisTxReady:
  3017                           	opt stack 0
  3018                           tblptru	equ	0xFF8
  3019                           tblptrh	equ	0xFF7
  3020                           tblptrl	equ	0xFF6
  3021                           tablat	equ	0xFF5
  3022                           prodh	equ	0xFF4
  3023                           prodl	equ	0xFF3
  3024                           postinc0	equ	0xFEE
  3025                           wreg	equ	0xFE8
  3026                           indf2	equ	0xFDF
  3027                           fsr2h	equ	0xFDA
  3028                           fsr2l	equ	0xFD9
  3029                           status	equ	0xFD8
  3030                           
  3031 ;; *************** function _configurazione_iniziale *****************
  3032 ;; Defined at:
  3033 ;;		line 212 in file "motore.c"
  3034 ;; Parameters:    Size  Location     Type
  3035 ;;		None
  3036 ;; Auto vars:     Size  Location     Type
  3037 ;;		None
  3038 ;; Return value:  Size  Location     Type
  3039 ;;		None               void
  3040 ;; Registers used:
  3041 ;;		wreg, status,2, status,0, cstack
  3042 ;; Tracked objects:
  3043 ;;		On entry : 0/0
  3044 ;;		On exit  : 0/0
  3045 ;;		Unchanged: 0/0
  3046 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3047 ;;      Params:         0       0       0       0
  3048 ;;      Locals:         0       0       0       0
  3049 ;;      Temps:          0       0       0       0
  3050 ;;      Totals:         0       0       0       0
  3051 ;;Total ram usage:        0 bytes
  3052 ;; Hardware stack levels used:    1
  3053 ;; Hardware stack levels required when called:    7
  3054 ;; This function calls:
  3055 ;;		_CANInitialize
  3056 ;; This function is called by:
  3057 ;;		_main
  3058 ;; This function uses a non-reentrant model
  3059 ;;
  3060                           
  3061                           	psect	text6
  3062  002450                     __ptext6:
  3063                           	opt stack 0
  3064  002450                     _configurazione_iniziale:
  3065                           	opt stack 23
  3066                           
  3067                           ;motore.c: 215: CANInitialize(4, 6, 5, 1, 3, CAN_CONFIG_LINE_FILTER_OFF & CAN_CONFIG_SAM
      +                          PLE_ONCE & CAN_CONFIG_ALL_VALID_MSG & CAN_CONFIG_DBL_BUFFER_ON);
  3068                           
  3069                           ; BSR set to: 0
  3070                           ;incstack = 0
  3071  002450  0E06               	movlw	6
  3072  002452  0100               	movlb	0	; () banked
  3073  002454  6F84               	movwf	CANInitialize@phaseSeg1& (0+255),b
  3074  002456  0E05               	movlw	5
  3075  002458  0100               	movlb	0	; () banked
  3076  00245A  6F85               	movwf	CANInitialize@phaseSeg2& (0+255),b
  3077  00245C  0E01               	movlw	1
  3078  00245E  0100               	movlb	0	; () banked
  3079  002460  6F86               	movwf	CANInitialize@SJW& (0+255),b
  3080  002462  0E03               	movlw	3
  3081  002464  0100               	movlb	0	; () banked
  3082  002466  6F87               	movwf	CANInitialize@BRP& (0+255),b
  3083  002468  0E9D               	movlw	157
  3084  00246A  0100               	movlb	0	; () banked
  3085  00246C  6F88               	movwf	CANInitialize@flags& (0+255),b
  3086  00246E  0E04               	movlw	4
  3087  002470  EC59  F010         	call	_CANInitialize
  3088                           
  3089                           ;motore.c: 216: RCONbits.IPEN = 1;
  3090  002474  8ED0               	bsf	4048,7,c	;volatile
  3091                           
  3092                           ;motore.c: 217: INTCONbits.INT0IF = 0;
  3093  002476  92F2               	bcf	intcon,1,c	;volatile
  3094                           
  3095                           ;motore.c: 218: INTCONbits.INT0IE = 1;
  3096  002478  88F2               	bsf	intcon,4,c	;volatile
  3097                           
  3098                           ;motore.c: 219: PIR3bits.RXB1IF = 0;
  3099  00247A  92A4               	bcf	4004,1,c	;volatile
  3100                           
  3101                           ;motore.c: 220: PIR3bits.RXB0IF = 0;
  3102  00247C  90A4               	bcf	4004,0,c	;volatile
  3103                           
  3104                           ;motore.c: 221: PIE3bits.RXB1IE = 1;
  3105  00247E  82A3               	bsf	4003,1,c	;volatile
  3106                           
  3107                           ;motore.c: 222: PIE3bits.RXB0IE = 1;
  3108  002480  80A3               	bsf	4003,0,c	;volatile
  3109                           
  3110                           ;motore.c: 223: IPR3bits.RXB1IP = 0;
  3111  002482  92A5               	bcf	4005,1,c	;volatile
  3112                           
  3113                           ;motore.c: 224: IPR3bits.RXB0IP = 0;
  3114  002484  90A5               	bcf	4005,0,c	;volatile
  3115                           
  3116                           ;motore.c: 225: INTCONbits.GIEH = 1;
  3117  002486  8EF2               	bsf	intcon,7,c	;volatile
  3118                           
  3119                           ;motore.c: 226: INTCONbits.GIEL = 1;
  3120  002488  8CF2               	bsf	intcon,6,c	;volatile
  3121                           
  3122                           ;motore.c: 227: INTCON2bits.INTEDG0 = 1;
  3123  00248A  8CF1               	bsf	intcon2,6,c	;volatile
  3124                           
  3125                           ;motore.c: 230: T3CON = 0x01;
  3126  00248C  0E01               	movlw	1
  3127  00248E  6EB1               	movwf	4017,c	;volatile
  3128                           
  3129                           ;motore.c: 231: PIR2bits.TMR3IF = 0;
  3130  002490  92A1               	bcf	4001,1,c	;volatile
  3131                           
  3132                           ;motore.c: 232: IPR2bits.TMR3IP = 0;
  3133  002492  92A2               	bcf	4002,1,c	;volatile
  3134                           
  3135                           ;motore.c: 233: TMR3H = 0x63;
  3136  002494  0E63               	movlw	99
  3137  002496  6EB3               	movwf	4019,c	;volatile
  3138                           
  3139                           ;motore.c: 234: TMR3L = 0xC0;
  3140  002498  0EC0               	movlw	192
  3141  00249A  6EB2               	movwf	4018,c	;volatile
  3142                           
  3143                           ;motore.c: 235: PIE2bits.TMR3IE = 1;
  3144  00249C  82A0               	bsf	4000,1,c	;volatile
  3145                           
  3146                           ;motore.c: 238: LATA = 0x00;
  3147  00249E  0E00               	movlw	0
  3148  0024A0  6E89               	movwf	3977,c	;volatile
  3149                           
  3150                           ;motore.c: 239: TRISA = 0b11111100;
  3151  0024A2  0EFC               	movlw	252
  3152  0024A4  6E92               	movwf	3986,c	;volatile
  3153                           
  3154                           ;motore.c: 241: LATB = 0x00;
  3155  0024A6  0E00               	movlw	0
  3156  0024A8  6E8A               	movwf	3978,c	;volatile
  3157                           
  3158                           ;motore.c: 242: TRISB = 0b11111011;
  3159  0024AA  0EFB               	movlw	251
  3160  0024AC  6E93               	movwf	3987,c	;volatile
  3161                           
  3162                           ;motore.c: 244: LATC = 0x00;
  3163  0024AE  0E00               	movlw	0
  3164  0024B0  6E8B               	movwf	3979,c	;volatile
  3165                           
  3166                           ;motore.c: 245: TRISC = 0x00;
  3167  0024B2  0E00               	movlw	0
  3168  0024B4  6E94               	movwf	3988,c	;volatile
  3169                           
  3170                           ;motore.c: 247: LATD = 0x00;
  3171  0024B6  0E00               	movlw	0
  3172  0024B8  6E8C               	movwf	3980,c	;volatile
  3173                           
  3174                           ;motore.c: 248: TRISD = 0b00000000;
  3175  0024BA  0E00               	movlw	0
  3176  0024BC  6E95               	movwf	3989,c	;volatile
  3177                           
  3178                           ;motore.c: 250: LATE = 0x00;
  3179  0024BE  0E00               	movlw	0
  3180  0024C0  6E8D               	movwf	3981,c	;volatile
  3181                           
  3182                           ;motore.c: 251: TRISE = 0xFF;
  3183  0024C2  6896               	setf	3990,c	;volatile
  3184                           
  3185                           ;motore.c: 253: ADCON1 = 0xFF;
  3186  0024C4  68C1               	setf	4033,c	;volatile
  3187  0024C6  0012               	return		;funcret
  3188  0024C8                     __end_of_configurazione_iniziale:
  3189                           	opt stack 0
  3190                           tblptru	equ	0xFF8
  3191                           tblptrh	equ	0xFF7
  3192                           tblptrl	equ	0xFF6
  3193                           tablat	equ	0xFF5
  3194                           prodh	equ	0xFF4
  3195                           prodl	equ	0xFF3
  3196                           intcon	equ	0xFF2
  3197                           intcon2	equ	0xFF1
  3198                           postinc0	equ	0xFEE
  3199                           wreg	equ	0xFE8
  3200                           indf2	equ	0xFDF
  3201                           fsr2h	equ	0xFDA
  3202                           fsr2l	equ	0xFD9
  3203                           status	equ	0xFD8
  3204                           
  3205 ;; *************** function _CANInitialize *****************
  3206 ;; Defined at:
  3207 ;;		line 218 in file "F:/Tesina/LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
  3208 ;; Parameters:    Size  Location     Type
  3209 ;;  propSeg         1    wreg     unsigned char 
  3210 ;;  phaseSeg1       1   36[BANK0 ] unsigned char 
  3211 ;;  phaseSeg2       1   37[BANK0 ] unsigned char 
  3212 ;;  SJW             1   38[BANK0 ] unsigned char 
  3213 ;;  BRP             1   39[BANK0 ] unsigned char 
  3214 ;;  flags           1   40[BANK0 ] enum E16844
  3215 ;; Auto vars:     Size  Location     Type
  3216 ;;  propSeg         1   45[BANK0 ] unsigned char 
  3217 ;;  FilterConfig    1   47[BANK0 ] unsigned char 
  3218 ;;  FilterConfig    1   46[BANK0 ] unsigned char 
  3219 ;; Return value:  Size  Location     Type
  3220 ;;		None               void
  3221 ;; Registers used:
  3222 ;;		wreg, status,2, status,0, cstack
  3223 ;; Tracked objects:
  3224 ;;		On entry : 0/0
  3225 ;;		On exit  : 0/0
  3226 ;;		Unchanged: 0/0
  3227 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3228 ;;      Params:         0       5       0       0
  3229 ;;      Locals:         0       3       0       0
  3230 ;;      Temps:          0       4       0       0
  3231 ;;      Totals:         0      12       0       0
  3232 ;;Total ram usage:       12 bytes
  3233 ;; Hardware stack levels used:    1
  3234 ;; Hardware stack levels required when called:    6
  3235 ;; This function calls:
  3236 ;;		_CANOperationMode
  3237 ;;		_CANSetFilter
  3238 ;;		_CANSetMask
  3239 ;; This function is called by:
  3240 ;;		_configurazione_iniziale
  3241 ;; This function uses a non-reentrant model
  3242 ;;
  3243                           
  3244                           	psect	text7
  3245  0020B2                     __ptext7:
  3246                           	opt stack 0
  3247  0020B2                     _CANInitialize:
  3248                           	opt stack 23
  3249                           
  3250                           ;incstack = 0
  3251                           ;CANInitialize@propSeg stored from wreg
  3252  0020B2  0100               	movlb	0	; () banked
  3253  0020B4  6F8D               	movwf	CANInitialize@propSeg& (0+255),b
  3254                           
  3255                           ;inc\CANlib.h: 220: BYTE FilterConfig1;
  3256                           ;inc\CANlib.h: 221: BYTE FilterConfig2;
  3257                           ;inc\CANlib.h: 223: CANOperationMode(CAN_OP_MODE_CONFIG);
  3258  0020B6  0E80               	movlw	128
  3259  0020B8  EC7E  F013         	call	_CANOperationMode
  3260                           
  3261                           ;inc\CANlib.h: 225: BRGCON1 = 0x00;
  3262  0020BC  0E00               	movlw	0
  3263  0020BE  6E70               	movwf	3952,c	;volatile
  3264                           
  3265                           ;inc\CANlib.h: 226: BRGCON2 = 0x00;
  3266  0020C0  0E00               	movlw	0
  3267  0020C2  6E71               	movwf	3953,c	;volatile
  3268                           
  3269                           ;inc\CANlib.h: 227: BRGCON3 = 0x00;
  3270  0020C4  0E00               	movlw	0
  3271  0020C6  6E72               	movwf	3954,c	;volatile
  3272                           
  3273                           ;inc\CANlib.h: 229: SJW= SJW << 6;
  3274  0020C8  0100               	movlb	0	; () banked
  3275  0020CA  4186               	rrncf	CANInitialize@SJW& (0+255),w,b
  3276  0020CC  42E8               	rrncf	wreg,f,c
  3277  0020CE  0BC0               	andlw	192
  3278  0020D0  0100               	movlb	0	; () banked
  3279  0020D2  6F86               	movwf	CANInitialize@SJW& (0+255),b
  3280                           
  3281                           ; BSR set to: 0
  3282                           ;inc\CANlib.h: 230: BRGCON1 |= SJW;
  3283  0020D4  0100               	movlb	0	; () banked
  3284  0020D6  5186               	movf	CANInitialize@SJW& (0+255),w,b
  3285  0020D8  1270               	iorwf	3952,f,c	;volatile
  3286                           
  3287                           ; BSR set to: 0
  3288                           ;inc\CANlib.h: 231: BRGCON1 |= BRP;
  3289  0020DA  0100               	movlb	0	; () banked
  3290  0020DC  5187               	movf	CANInitialize@BRP& (0+255),w,b
  3291  0020DE  1270               	iorwf	3952,f,c	;volatile
  3292                           
  3293                           ; BSR set to: 0
  3294                           ;inc\CANlib.h: 233: BRGCON2 |= propSeg;
  3295  0020E0  0100               	movlb	0	; () banked
  3296  0020E2  518D               	movf	CANInitialize@propSeg& (0+255),w,b
  3297  0020E4  1271               	iorwf	3953,f,c	;volatile
  3298                           
  3299                           ; BSR set to: 0
  3300                           ;inc\CANlib.h: 234: phaseSeg1 = phaseSeg1 <<3;
  3301  0020E6  0100               	movlb	0	; () banked
  3302  0020E8  3984               	swapf	CANInitialize@phaseSeg1& (0+255),w,b
  3303  0020EA  42E8               	rrncf	wreg,f,c
  3304  0020EC  0BF8               	andlw	248
  3305  0020EE  0100               	movlb	0	; () banked
  3306  0020F0  6F84               	movwf	CANInitialize@phaseSeg1& (0+255),b
  3307                           
  3308                           ; BSR set to: 0
  3309                           ;inc\CANlib.h: 235: BRGCON2 |= phaseSeg1;
  3310  0020F2  0100               	movlb	0	; () banked
  3311  0020F4  5184               	movf	CANInitialize@phaseSeg1& (0+255),w,b
  3312  0020F6  1271               	iorwf	3953,f,c	;volatile
  3313                           
  3314                           ; BSR set to: 0
  3315                           ;inc\CANlib.h: 237: if ( !(flags & CAN_CONFIG_SAMPLE_BIT) )
  3316  0020F8  0100               	movlb	0	; () banked
  3317  0020FA  A588               	btfss	CANInitialize@flags& (0+255),2,b
  3318                           
  3319                           ; BSR set to: 0
  3320                           ;inc\CANlib.h: 238: BRGCON2bits.SAM= 1;
  3321  0020FC  8C71               	bsf	3953,6,c	;volatile
  3322                           
  3323                           ; BSR set to: 0
  3324                           ;inc\CANlib.h: 240: if ( flags & CAN_CONFIG_PHSEG2_PRG_BIT )
  3325  0020FE  0100               	movlb	0	; () banked
  3326  002100  B188               	btfsc	CANInitialize@flags& (0+255),0,b
  3327                           
  3328                           ; BSR set to: 0
  3329                           ;inc\CANlib.h: 241: BRGCON2bits.SEG2PHTS = 1;
  3330  002102  8E71               	bsf	3953,7,c	;volatile
  3331                           
  3332                           ; BSR set to: 0
  3333                           ;inc\CANlib.h: 243: BRGCON3 |= phaseSeg2;
  3334                           
  3335                           ; BSR set to: 0
  3336  002104  0100               	movlb	0	; () banked
  3337  002106  5185               	movf	CANInitialize@phaseSeg2& (0+255),w,b
  3338  002108  1272               	iorwf	3954,f,c	;volatile
  3339                           
  3340                           ; BSR set to: 0
  3341                           ;inc\CANlib.h: 245: if ( flags & CAN_CONFIG_LINE_FILTER_BIT )
  3342  00210A  0100               	movlb	0	; () banked
  3343  00210C  B388               	btfsc	CANInitialize@flags& (0+255),1,b
  3344                           
  3345                           ; BSR set to: 0
  3346                           ;inc\CANlib.h: 246: BRGCON3bits.WAKFIL = 1;
  3347  00210E  8C72               	bsf	3954,6,c	;volatile
  3348                           
  3349                           ; BSR set to: 0
  3350                           ;inc\CANlib.h: 251: RXB0CON = flags & CAN_CONFIG_MSG_BITS;
  3351                           
  3352                           ; BSR set to: 0
  3353  002110  0100               	movlb	0	; () banked
  3354  002112  5188               	movf	CANInitialize@flags& (0+255),w,b
  3355  002114  0B60               	andlw	96
  3356  002116  6E60               	movwf	3936,c	;volatile
  3357                           
  3358                           ;inc\CANlib.h: 252: if ( (flags & CAN_CONFIG_DBL_BUFFER_BIT)== CAN_CONFIG_DBL_BUFFER_ON 
      +                          )
  3359  002118  0100               	movlb	0	; () banked
  3360  00211A  5188               	movf	CANInitialize@flags& (0+255),w,b
  3361  00211C  0B10               	andlw	16
  3362  00211E  0AFF               	xorlw	255
  3363  002120  B4D8               	btfsc	status,2,c
  3364                           
  3365                           ; BSR set to: 0
  3366                           ;inc\CANlib.h: 253: RXB0CONbits.RXB0DBEN = 1;
  3367  002122  8460               	bsf	3936,2,c	;volatile
  3368                           
  3369                           ; BSR set to: 0
  3370                           ;inc\CANlib.h: 255: RXB1CON = RXB0CON;
  3371  002124  CF60 FF50          	movff	3936,3920	;volatile
  3372                           
  3373                           ; BSR set to: 0
  3374                           ;inc\CANlib.h: 259: CANSetMask (CAN_MASK_B1, 0x00000000, CAN_CONFIG_XTD_MSG);
  3375  002128  0E00               	movlw	0
  3376  00212A  0100               	movlb	0	; () banked
  3377  00212C  6F76               	movwf	CANSetMask@mask& (0+255),b
  3378  00212E  0E00               	movlw	0
  3379  002130  6F77               	movwf	(CANSetMask@mask+1)& (0+255),b
  3380  002132  0E00               	movlw	0
  3381  002134  6F78               	movwf	(CANSetMask@mask+2)& (0+255),b
  3382  002136  0E00               	movlw	0
  3383  002138  6F79               	movwf	(CANSetMask@mask+3)& (0+255),b
  3384  00213A  0EF7               	movlw	247
  3385  00213C  0100               	movlb	0	; () banked
  3386  00213E  6F7A               	movwf	CANSetMask@type& (0+255),b
  3387  002140  0E01               	movlw	1
  3388  002142  EC8A  F00E         	call	_CANSetMask
  3389                           
  3390                           ;inc\CANlib.h: 260: CANSetMask (CAN_MASK_B2, 0x00000000, CAN_CONFIG_XTD_MSG);
  3391  002146  0E00               	movlw	0
  3392  002148  0100               	movlb	0	; () banked
  3393  00214A  6F76               	movwf	CANSetMask@mask& (0+255),b
  3394  00214C  0E00               	movlw	0
  3395  00214E  6F77               	movwf	(CANSetMask@mask+1)& (0+255),b
  3396  002150  0E00               	movlw	0
  3397  002152  6F78               	movwf	(CANSetMask@mask+2)& (0+255),b
  3398  002154  0E00               	movlw	0
  3399  002156  6F79               	movwf	(CANSetMask@mask+3)& (0+255),b
  3400  002158  0EF7               	movlw	247
  3401  00215A  0100               	movlb	0	; () banked
  3402  00215C  6F7A               	movwf	CANSetMask@type& (0+255),b
  3403  00215E  0E02               	movlw	2
  3404  002160  EC8A  F00E         	call	_CANSetMask
  3405                           
  3406                           ;inc\CANlib.h: 263: switch( (flags & CAN_CONFIG_MSG_BITS) | ~CAN_CONFIG_MSG_BITS )
  3407  002164  D00F               	goto	l3038
  3408  002166                     l3032:
  3409                           
  3410                           ;inc\CANlib.h: 266: FilterConfig1 = CAN_CONFIG_XTD_MSG;
  3411  002166  0EF7               	movlw	247
  3412  002168  0100               	movlb	0	; () banked
  3413  00216A  6F8E               	movwf	CANInitialize@FilterConfig1& (0+255),b
  3414  00216C  D007               	goto	l3034
  3415  00216E                     l352:
  3416                           
  3417                           ; BSR set to: 0
  3418                           ;inc\CANlib.h: 271: FilterConfig1 = CAN_CONFIG_STD_MSG;
  3419  00216E  0100               	movlb	0	; () banked
  3420  002170  698E               	setf	CANInitialize@FilterConfig1& (0+255),b
  3421                           
  3422                           ;inc\CANlib.h: 272: FilterConfig2 = CAN_CONFIG_STD_MSG;
  3423  002172  0100               	movlb	0	; () banked
  3424  002174  698F               	setf	CANInitialize@FilterConfig2& (0+255),b
  3425                           
  3426                           ;inc\CANlib.h: 273: break;
  3427  002176  D028               	goto	l3040
  3428  002178                     l353:
  3429                           
  3430                           ; BSR set to: 0
  3431                           ;inc\CANlib.h: 275: FilterConfig1 = CAN_CONFIG_STD_MSG;
  3432  002178  0100               	movlb	0	; () banked
  3433  00217A  698E               	setf	CANInitialize@FilterConfig1& (0+255),b
  3434  00217C                     l3034:
  3435                           
  3436                           ; BSR set to: 0
  3437                           ;inc\CANlib.h: 276: FilterConfig2 = CAN_CONFIG_XTD_MSG;
  3438  00217C  0EF7               	movlw	247
  3439  00217E  0100               	movlb	0	; () banked
  3440  002180  6F8F               	movwf	CANInitialize@FilterConfig2& (0+255),b
  3441                           
  3442                           ; BSR set to: 0
  3443                           ;inc\CANlib.h: 278: }
  3444                           
  3445                           ;inc\CANlib.h: 277: break;
  3446  002182  D022               	goto	l3040
  3447  002184                     l3038:
  3448  002184  0E9F               	movlw	159
  3449  002186  0100               	movlb	0	; () banked
  3450  002188  6F89               	movwf	??_CANInitialize& (0+255),b
  3451  00218A  0EFF               	movlw	255
  3452  00218C  0100               	movlb	0	; () banked
  3453  00218E  6F8A               	movwf	(??_CANInitialize+1)& (0+255),b
  3454  002190  0100               	movlb	0	; () banked
  3455  002192  5188               	movf	CANInitialize@flags& (0+255),w,b
  3456  002194  0B60               	andlw	96
  3457  002196  0100               	movlb	0	; () banked
  3458  002198  6F8B               	movwf	(??_CANInitialize+2)& (0+255),b
  3459  00219A  6B8C               	clrf	(??_CANInitialize+3)& (0+255),b
  3460  00219C  0100               	movlb	0	; () banked
  3461  00219E  5189               	movf	??_CANInitialize& (0+255),w,b
  3462  0021A0  0100               	movlb	0	; () banked
  3463  0021A2  138B               	iorwf	(??_CANInitialize+2)& (0+255),f,b
  3464  0021A4  0100               	movlb	0	; () banked
  3465  0021A6  518A               	movf	(??_CANInitialize+1)& (0+255),w,b
  3466  0021A8  0100               	movlb	0	; () banked
  3467  0021AA  138C               	iorwf	(??_CANInitialize+3)& (0+255),f,b
  3468                           
  3469                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3470                           ; Switch size 1, requested type "space"
  3471                           ; Number of cases is 1, Range of values is 0 to 0
  3472                           ; switch strategies available:
  3473                           ; Name         Instructions Cycles
  3474                           ; simple_byte            4     3 (average)
  3475                           ;	Chosen strategy is simple_byte
  3476  0021AC  0100               	movlb	0	; () banked
  3477  0021AE  518C               	movf	(??_CANInitialize+3)& (0+255),w,b
  3478  0021B0  0A00               	xorlw	0	; case 0
  3479  0021B2  A4D8               	btfss	status,2,c
  3480  0021B4  D7E1               	goto	l353
  3481                           
  3482                           ; BSR set to: 0
  3483                           ; Switch size 1, requested type "space"
  3484                           ; Number of cases is 2, Range of values is 191 to 223
  3485                           ; switch strategies available:
  3486                           ; Name         Instructions Cycles
  3487                           ; simple_byte            7     4 (average)
  3488                           ;	Chosen strategy is simple_byte
  3489  0021B6  0100               	movlb	0	; () banked
  3490  0021B8  518B               	movf	(??_CANInitialize+2)& (0+255),w,b
  3491  0021BA  0ABF               	xorlw	191	; case 191
  3492  0021BC  B4D8               	btfsc	status,2,c
  3493  0021BE  D7D7               	goto	l352
  3494  0021C0  0A60               	xorlw	96	; case 223
  3495  0021C2  B4D8               	btfsc	status,2,c
  3496  0021C4  D7D0               	goto	l3032
  3497  0021C6  D7D8               	goto	l353
  3498  0021C8                     l3040:
  3499                           
  3500                           ; BSR set to: 0
  3501                           ;inc\CANlib.h: 280: CANSetFilter(CAN_FILTER_B1_F1, 0, FilterConfig1);
  3502  0021C8  0E00               	movlw	0
  3503  0021CA  0100               	movlb	0	; () banked
  3504  0021CC  6F76               	movwf	CANSetFilter@filter& (0+255),b
  3505  0021CE  0E00               	movlw	0
  3506  0021D0  6F77               	movwf	(CANSetFilter@filter+1)& (0+255),b
  3507  0021D2  0E00               	movlw	0
  3508  0021D4  6F78               	movwf	(CANSetFilter@filter+2)& (0+255),b
  3509  0021D6  0E00               	movlw	0
  3510  0021D8  6F79               	movwf	(CANSetFilter@filter+3)& (0+255),b
  3511  0021DA  C08E  F07A         	movff	CANInitialize@FilterConfig1,CANSetFilter@type
  3512  0021DE  0E00               	movlw	0
  3513  0021E0  ECD1  F000         	call	_CANSetFilter
  3514                           
  3515                           ;inc\CANlib.h: 281: CANSetFilter(CAN_FILTER_B1_F2, 0, FilterConfig1);
  3516  0021E4  0E00               	movlw	0
  3517  0021E6  0100               	movlb	0	; () banked
  3518  0021E8  6F76               	movwf	CANSetFilter@filter& (0+255),b
  3519  0021EA  0E00               	movlw	0
  3520  0021EC  6F77               	movwf	(CANSetFilter@filter+1)& (0+255),b
  3521  0021EE  0E00               	movlw	0
  3522  0021F0  6F78               	movwf	(CANSetFilter@filter+2)& (0+255),b
  3523  0021F2  0E00               	movlw	0
  3524  0021F4  6F79               	movwf	(CANSetFilter@filter+3)& (0+255),b
  3525  0021F6  C08E  F07A         	movff	CANInitialize@FilterConfig1,CANSetFilter@type
  3526  0021FA  0E01               	movlw	1
  3527  0021FC  ECD1  F000         	call	_CANSetFilter
  3528                           
  3529                           ;inc\CANlib.h: 282: CANSetFilter(CAN_FILTER_B2_F1, 0, FilterConfig2);
  3530  002200  0E00               	movlw	0
  3531  002202  0100               	movlb	0	; () banked
  3532  002204  6F76               	movwf	CANSetFilter@filter& (0+255),b
  3533  002206  0E00               	movlw	0
  3534  002208  6F77               	movwf	(CANSetFilter@filter+1)& (0+255),b
  3535  00220A  0E00               	movlw	0
  3536  00220C  6F78               	movwf	(CANSetFilter@filter+2)& (0+255),b
  3537  00220E  0E00               	movlw	0
  3538  002210  6F79               	movwf	(CANSetFilter@filter+3)& (0+255),b
  3539  002212  C08F  F07A         	movff	CANInitialize@FilterConfig2,CANSetFilter@type
  3540  002216  0E02               	movlw	2
  3541  002218  ECD1  F000         	call	_CANSetFilter
  3542                           
  3543                           ;inc\CANlib.h: 283: CANSetFilter(CAN_FILTER_B2_F2, 0, FilterConfig2);
  3544  00221C  0E00               	movlw	0
  3545  00221E  0100               	movlb	0	; () banked
  3546  002220  6F76               	movwf	CANSetFilter@filter& (0+255),b
  3547  002222  0E00               	movlw	0
  3548  002224  6F77               	movwf	(CANSetFilter@filter+1)& (0+255),b
  3549  002226  0E00               	movlw	0
  3550  002228  6F78               	movwf	(CANSetFilter@filter+2)& (0+255),b
  3551  00222A  0E00               	movlw	0
  3552  00222C  6F79               	movwf	(CANSetFilter@filter+3)& (0+255),b
  3553  00222E  C08F  F07A         	movff	CANInitialize@FilterConfig2,CANSetFilter@type
  3554  002232  0E03               	movlw	3
  3555  002234  ECD1  F000         	call	_CANSetFilter
  3556                           
  3557                           ;inc\CANlib.h: 284: CANSetFilter(CAN_FILTER_B2_F3, 0, FilterConfig2);
  3558  002238  0E00               	movlw	0
  3559  00223A  0100               	movlb	0	; () banked
  3560  00223C  6F76               	movwf	CANSetFilter@filter& (0+255),b
  3561  00223E  0E00               	movlw	0
  3562  002240  6F77               	movwf	(CANSetFilter@filter+1)& (0+255),b
  3563  002242  0E00               	movlw	0
  3564  002244  6F78               	movwf	(CANSetFilter@filter+2)& (0+255),b
  3565  002246  0E00               	movlw	0
  3566  002248  6F79               	movwf	(CANSetFilter@filter+3)& (0+255),b
  3567  00224A  C08F  F07A         	movff	CANInitialize@FilterConfig2,CANSetFilter@type
  3568  00224E  0E04               	movlw	4
  3569  002250  ECD1  F000         	call	_CANSetFilter
  3570                           
  3571                           ;inc\CANlib.h: 285: CANSetFilter(CAN_FILTER_B2_F4, 0, FilterConfig2);
  3572  002254  0E00               	movlw	0
  3573  002256  0100               	movlb	0	; () banked
  3574  002258  6F76               	movwf	CANSetFilter@filter& (0+255),b
  3575  00225A  0E00               	movlw	0
  3576  00225C  6F77               	movwf	(CANSetFilter@filter+1)& (0+255),b
  3577  00225E  0E00               	movlw	0
  3578  002260  6F78               	movwf	(CANSetFilter@filter+2)& (0+255),b
  3579  002262  0E00               	movlw	0
  3580  002264  6F79               	movwf	(CANSetFilter@filter+3)& (0+255),b
  3581  002266  C08F  F07A         	movff	CANInitialize@FilterConfig2,CANSetFilter@type
  3582  00226A  0E05               	movlw	5
  3583  00226C  ECD1  F000         	call	_CANSetFilter
  3584                           
  3585                           ;inc\CANlib.h: 287: CANOperationMode(CAN_OP_MODE_NORMAL);
  3586  002270  0E00               	movlw	0
  3587  002272  EC7E  F013         	call	_CANOperationMode
  3588  002276  0012               	return		;funcret
  3589  002278                     __end_of_CANInitialize:
  3590                           	opt stack 0
  3591                           tblptru	equ	0xFF8
  3592                           tblptrh	equ	0xFF7
  3593                           tblptrl	equ	0xFF6
  3594                           tablat	equ	0xFF5
  3595                           prodh	equ	0xFF4
  3596                           prodl	equ	0xFF3
  3597                           intcon	equ	0xFF2
  3598                           intcon2	equ	0xFF1
  3599                           postinc0	equ	0xFEE
  3600                           wreg	equ	0xFE8
  3601                           indf2	equ	0xFDF
  3602                           fsr2h	equ	0xFDA
  3603                           fsr2l	equ	0xFD9
  3604                           status	equ	0xFD8
  3605                           
  3606 ;; *************** function _CANSetMask *****************
  3607 ;; Defined at:
  3608 ;;		line 640 in file "F:/Tesina/LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
  3609 ;; Parameters:    Size  Location     Type
  3610 ;;  numBuffer       1    wreg     enum E16878
  3611 ;;  mask            4   22[BANK0 ] unsigned long 
  3612 ;;  type            1   26[BANK0 ] enum E16844
  3613 ;; Auto vars:     Size  Location     Type
  3614 ;;  numBuffer       1   31[BANK0 ] enum E16878
  3615 ;;  tamp            4   32[BANK0 ] unsigned long 
  3616 ;; Return value:  Size  Location     Type
  3617 ;;		None               void
  3618 ;; Registers used:
  3619 ;;		wreg, status,2, status,0
  3620 ;; Tracked objects:
  3621 ;;		On entry : 0/0
  3622 ;;		On exit  : 0/0
  3623 ;;		Unchanged: 0/0
  3624 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3625 ;;      Params:         0       5       0       0
  3626 ;;      Locals:         0       5       0       0
  3627 ;;      Temps:          0       4       0       0
  3628 ;;      Totals:         0      14       0       0
  3629 ;;Total ram usage:       14 bytes
  3630 ;; Hardware stack levels used:    1
  3631 ;; Hardware stack levels required when called:    5
  3632 ;; This function calls:
  3633 ;;		Nothing
  3634 ;; This function is called by:
  3635 ;;		_CANInitialize
  3636 ;; This function uses a non-reentrant model
  3637 ;;
  3638                           
  3639                           	psect	text8
  3640  001D14                     __ptext8:
  3641                           	opt stack 0
  3642  001D14                     _CANSetMask:
  3643                           	opt stack 23
  3644                           
  3645                           ;incstack = 0
  3646                           ;CANSetMask@numBuffer stored from wreg
  3647  001D14  0100               	movlb	0	; () banked
  3648  001D16  6F7F               	movwf	CANSetMask@numBuffer& (0+255),b
  3649                           
  3650                           ;inc\CANlib.h: 643: if ((numBuffer ==CAN_MASK_B1) && (type == CAN_CONFIG_STD_MSG))
  3651  001D18  0100               	movlb	0	; () banked
  3652  001D1A  057F               	decf	CANSetMask@numBuffer& (0+255),w,b
  3653  001D1C  A4D8               	btfss	status,2,c
  3654  001D1E  D056               	goto	l2596
  3655                           
  3656                           ; BSR set to: 0
  3657  001D20  0100               	movlb	0	; () banked
  3658  001D22  297A               	incf	CANSetMask@type& (0+255),w,b
  3659  001D24  A4D8               	btfss	status,2,c
  3660  001D26  D052               	goto	l2596
  3661                           
  3662                           ; BSR set to: 0
  3663                           ;inc\CANlib.h: 644: {
  3664                           ;inc\CANlib.h: 645: tamp = (mask >> 3);
  3665  001D28  C076  F07B         	movff	CANSetMask@mask,??_CANSetMask
  3666  001D2C  C077  F07C         	movff	CANSetMask@mask+1,??_CANSetMask+1
  3667  001D30  C078  F07D         	movff	CANSetMask@mask+2,??_CANSetMask+2
  3668  001D34  C079  F07E         	movff	CANSetMask@mask+3,??_CANSetMask+3
  3669  001D38  0E04               	movlw	4
  3670  001D3A  D006               	goto	u2240
  3671  001D3C                     u2245:
  3672  001D3C  0100               	movlb	0	; () banked
  3673  001D3E  90D8               	bcf	status,0,c
  3674  001D40  337E               	rrcf	(??_CANSetMask+3)& (0+255),f,b
  3675  001D42  337D               	rrcf	(??_CANSetMask+2)& (0+255),f,b
  3676  001D44  337C               	rrcf	(??_CANSetMask+1)& (0+255),f,b
  3677  001D46  337B               	rrcf	??_CANSetMask& (0+255),f,b
  3678  001D48                     u2240:
  3679  001D48  2EE8               	decfsz	wreg,f,c
  3680  001D4A  D7F8               	goto	u2245
  3681  001D4C  C07B  F080         	movff	??_CANSetMask,CANSetMask@tamp
  3682  001D50  C07C  F081         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  3683  001D54  C07D  F082         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  3684  001D58  C07E  F083         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  3685                           
  3686                           ; BSR set to: 0
  3687                           ;inc\CANlib.h: 646: tamp = tamp & 0x000000FF;
  3688  001D5C  0100               	movlb	0	; () banked
  3689  001D5E  5180               	movf	CANSetMask@tamp& (0+255),w,b
  3690  001D60  0100               	movlb	0	; () banked
  3691  001D62  6F80               	movwf	CANSetMask@tamp& (0+255),b
  3692  001D64  6B81               	clrf	(CANSetMask@tamp+1)& (0+255),b
  3693  001D66  6B82               	clrf	(CANSetMask@tamp+2)& (0+255),b
  3694  001D68  6B83               	clrf	(CANSetMask@tamp+3)& (0+255),b
  3695                           
  3696                           ; BSR set to: 0
  3697                           ;inc\CANlib.h: 647: RXM0SIDH = (unsigned char) tamp;
  3698  001D6A  C080  FF18         	movff	CANSetMask@tamp,3864	;volatile
  3699                           
  3700                           ; BSR set to: 0
  3701                           ;inc\CANlib.h: 649: tamp = mask & 0x00000007;
  3702  001D6E  0E07               	movlw	7
  3703  001D70  0100               	movlb	0	; () banked
  3704  001D72  1576               	andwf	CANSetMask@mask& (0+255),w,b
  3705  001D74  0100               	movlb	0	; () banked
  3706  001D76  6F80               	movwf	CANSetMask@tamp& (0+255),b
  3707  001D78  0E00               	movlw	0
  3708  001D7A  0100               	movlb	0	; () banked
  3709  001D7C  1577               	andwf	(CANSetMask@mask+1)& (0+255),w,b
  3710  001D7E  0100               	movlb	0	; () banked
  3711  001D80  6F81               	movwf	(CANSetMask@tamp+1)& (0+255),b
  3712  001D82  0E00               	movlw	0
  3713  001D84  0100               	movlb	0	; () banked
  3714  001D86  1578               	andwf	(CANSetMask@mask+2)& (0+255),w,b
  3715  001D88  0100               	movlb	0	; () banked
  3716  001D8A  6F82               	movwf	(CANSetMask@tamp+2)& (0+255),b
  3717  001D8C  0E00               	movlw	0
  3718  001D8E  0100               	movlb	0	; () banked
  3719  001D90  1579               	andwf	(CANSetMask@mask+3)& (0+255),w,b
  3720  001D92  0100               	movlb	0	; () banked
  3721  001D94  6F83               	movwf	(CANSetMask@tamp+3)& (0+255),b
  3722                           
  3723                           ; BSR set to: 0
  3724                           ;inc\CANlib.h: 650: tamp = tamp << 5;
  3725  001D96  C080  F07B         	movff	CANSetMask@tamp,??_CANSetMask
  3726  001D9A  C081  F07C         	movff	CANSetMask@tamp+1,??_CANSetMask+1
  3727  001D9E  C082  F07D         	movff	CANSetMask@tamp+2,??_CANSetMask+2
  3728  001DA2  C083  F07E         	movff	CANSetMask@tamp+3,??_CANSetMask+3
  3729  001DA6  0E05               	movlw	5
  3730  001DA8                     u2255:
  3731  001DA8  90D8               	bcf	status,0,c
  3732  001DAA  0100               	movlb	0	; () banked
  3733  001DAC  377B               	rlcf	??_CANSetMask& (0+255),f,b
  3734  001DAE  377C               	rlcf	(??_CANSetMask+1)& (0+255),f,b
  3735  001DB0  377D               	rlcf	(??_CANSetMask+2)& (0+255),f,b
  3736  001DB2  377E               	rlcf	(??_CANSetMask+3)& (0+255),f,b
  3737  001DB4  2EE8               	decfsz	wreg,f,c
  3738  001DB6  D7F8               	goto	u2255
  3739  001DB8  C07B  F080         	movff	??_CANSetMask,CANSetMask@tamp
  3740  001DBC  C07C  F081         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  3741  001DC0  C07D  F082         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  3742  001DC4  C07E  F083         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  3743                           
  3744                           ; BSR set to: 0
  3745                           ;inc\CANlib.h: 651: RXM0SIDL = (unsigned char) tamp;
  3746  001DC8  C080  FF19         	movff	CANSetMask@tamp,3865	;volatile
  3747  001DCC                     l2596:
  3748                           
  3749                           ; BSR set to: 0
  3750                           ;inc\CANlib.h: 652: }
  3751                           ;inc\CANlib.h: 654: if ((numBuffer ==CAN_MASK_B2) && (type == CAN_CONFIG_STD_MSG))
  3752  001DCC  0E02               	movlw	2
  3753  001DCE  0100               	movlb	0	; () banked
  3754  001DD0  197F               	xorwf	CANSetMask@numBuffer& (0+255),w,b
  3755  001DD2  A4D8               	btfss	status,2,c
  3756  001DD4  D056               	goto	l2612
  3757                           
  3758                           ; BSR set to: 0
  3759  001DD6  0100               	movlb	0	; () banked
  3760  001DD8  297A               	incf	CANSetMask@type& (0+255),w,b
  3761  001DDA  A4D8               	btfss	status,2,c
  3762  001DDC  D052               	goto	l2612
  3763                           
  3764                           ; BSR set to: 0
  3765                           ;inc\CANlib.h: 655: {
  3766                           ;inc\CANlib.h: 656: tamp = (mask >> 3);
  3767  001DDE  C076  F07B         	movff	CANSetMask@mask,??_CANSetMask
  3768  001DE2  C077  F07C         	movff	CANSetMask@mask+1,??_CANSetMask+1
  3769  001DE6  C078  F07D         	movff	CANSetMask@mask+2,??_CANSetMask+2
  3770  001DEA  C079  F07E         	movff	CANSetMask@mask+3,??_CANSetMask+3
  3771  001DEE  0E04               	movlw	4
  3772  001DF0  D006               	goto	u2280
  3773  001DF2                     u2285:
  3774  001DF2  0100               	movlb	0	; () banked
  3775  001DF4  90D8               	bcf	status,0,c
  3776  001DF6  337E               	rrcf	(??_CANSetMask+3)& (0+255),f,b
  3777  001DF8  337D               	rrcf	(??_CANSetMask+2)& (0+255),f,b
  3778  001DFA  337C               	rrcf	(??_CANSetMask+1)& (0+255),f,b
  3779  001DFC  337B               	rrcf	??_CANSetMask& (0+255),f,b
  3780  001DFE                     u2280:
  3781  001DFE  2EE8               	decfsz	wreg,f,c
  3782  001E00  D7F8               	goto	u2285
  3783  001E02  C07B  F080         	movff	??_CANSetMask,CANSetMask@tamp
  3784  001E06  C07C  F081         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  3785  001E0A  C07D  F082         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  3786  001E0E  C07E  F083         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  3787                           
  3788                           ; BSR set to: 0
  3789                           ;inc\CANlib.h: 657: tamp = tamp & 0x000000FF;
  3790  001E12  0100               	movlb	0	; () banked
  3791  001E14  5180               	movf	CANSetMask@tamp& (0+255),w,b
  3792  001E16  0100               	movlb	0	; () banked
  3793  001E18  6F80               	movwf	CANSetMask@tamp& (0+255),b
  3794  001E1A  6B81               	clrf	(CANSetMask@tamp+1)& (0+255),b
  3795  001E1C  6B82               	clrf	(CANSetMask@tamp+2)& (0+255),b
  3796  001E1E  6B83               	clrf	(CANSetMask@tamp+3)& (0+255),b
  3797                           
  3798                           ; BSR set to: 0
  3799                           ;inc\CANlib.h: 658: RXM1SIDH = (unsigned char) tamp;
  3800  001E20  C080  FF1C         	movff	CANSetMask@tamp,3868	;volatile
  3801                           
  3802                           ; BSR set to: 0
  3803                           ;inc\CANlib.h: 660: tamp = mask & 0x00000007;
  3804  001E24  0E07               	movlw	7
  3805  001E26  0100               	movlb	0	; () banked
  3806  001E28  1576               	andwf	CANSetMask@mask& (0+255),w,b
  3807  001E2A  0100               	movlb	0	; () banked
  3808  001E2C  6F80               	movwf	CANSetMask@tamp& (0+255),b
  3809  001E2E  0E00               	movlw	0
  3810  001E30  0100               	movlb	0	; () banked
  3811  001E32  1577               	andwf	(CANSetMask@mask+1)& (0+255),w,b
  3812  001E34  0100               	movlb	0	; () banked
  3813  001E36  6F81               	movwf	(CANSetMask@tamp+1)& (0+255),b
  3814  001E38  0E00               	movlw	0
  3815  001E3A  0100               	movlb	0	; () banked
  3816  001E3C  1578               	andwf	(CANSetMask@mask+2)& (0+255),w,b
  3817  001E3E  0100               	movlb	0	; () banked
  3818  001E40  6F82               	movwf	(CANSetMask@tamp+2)& (0+255),b
  3819  001E42  0E00               	movlw	0
  3820  001E44  0100               	movlb	0	; () banked
  3821  001E46  1579               	andwf	(CANSetMask@mask+3)& (0+255),w,b
  3822  001E48  0100               	movlb	0	; () banked
  3823  001E4A  6F83               	movwf	(CANSetMask@tamp+3)& (0+255),b
  3824                           
  3825                           ; BSR set to: 0
  3826                           ;inc\CANlib.h: 661: tamp = tamp << 5;
  3827  001E4C  C080  F07B         	movff	CANSetMask@tamp,??_CANSetMask
  3828  001E50  C081  F07C         	movff	CANSetMask@tamp+1,??_CANSetMask+1
  3829  001E54  C082  F07D         	movff	CANSetMask@tamp+2,??_CANSetMask+2
  3830  001E58  C083  F07E         	movff	CANSetMask@tamp+3,??_CANSetMask+3
  3831  001E5C  0E05               	movlw	5
  3832  001E5E                     u2295:
  3833  001E5E  90D8               	bcf	status,0,c
  3834  001E60  0100               	movlb	0	; () banked
  3835  001E62  377B               	rlcf	??_CANSetMask& (0+255),f,b
  3836  001E64  377C               	rlcf	(??_CANSetMask+1)& (0+255),f,b
  3837  001E66  377D               	rlcf	(??_CANSetMask+2)& (0+255),f,b
  3838  001E68  377E               	rlcf	(??_CANSetMask+3)& (0+255),f,b
  3839  001E6A  2EE8               	decfsz	wreg,f,c
  3840  001E6C  D7F8               	goto	u2295
  3841  001E6E  C07B  F080         	movff	??_CANSetMask,CANSetMask@tamp
  3842  001E72  C07C  F081         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  3843  001E76  C07D  F082         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  3844  001E7A  C07E  F083         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  3845                           
  3846                           ; BSR set to: 0
  3847                           ;inc\CANlib.h: 662: RXM1SIDL = (unsigned char) tamp;
  3848  001E7E  C080  FF1D         	movff	CANSetMask@tamp,3869	;volatile
  3849  001E82                     l2612:
  3850                           
  3851                           ; BSR set to: 0
  3852                           ;inc\CANlib.h: 663: }
  3853                           ;inc\CANlib.h: 665: if ((numBuffer ==CAN_MASK_B1) && (type == CAN_CONFIG_XTD_MSG))
  3854  001E82  0100               	movlb	0	; () banked
  3855  001E84  057F               	decf	CANSetMask@numBuffer& (0+255),w,b
  3856  001E86  A4D8               	btfss	status,2,c
  3857  001E88  D087               	goto	l2644
  3858                           
  3859                           ; BSR set to: 0
  3860  001E8A  0EF7               	movlw	247
  3861  001E8C  0100               	movlb	0	; () banked
  3862  001E8E  197A               	xorwf	CANSetMask@type& (0+255),w,b
  3863  001E90  A4D8               	btfss	status,2,c
  3864  001E92  D082               	goto	l2644
  3865                           
  3866                           ; BSR set to: 0
  3867                           ;inc\CANlib.h: 666: {
  3868                           ;inc\CANlib.h: 667: tamp = mask & 0x000000FF;
  3869  001E94  0100               	movlb	0	; () banked
  3870  001E96  5176               	movf	CANSetMask@mask& (0+255),w,b
  3871  001E98  0100               	movlb	0	; () banked
  3872  001E9A  6F80               	movwf	CANSetMask@tamp& (0+255),b
  3873  001E9C  6B81               	clrf	(CANSetMask@tamp+1)& (0+255),b
  3874  001E9E  6B82               	clrf	(CANSetMask@tamp+2)& (0+255),b
  3875  001EA0  6B83               	clrf	(CANSetMask@tamp+3)& (0+255),b
  3876                           
  3877                           ; BSR set to: 0
  3878                           ;inc\CANlib.h: 668: RXM0EIDL = (unsigned char) tamp;
  3879  001EA2  C080  FF1B         	movff	CANSetMask@tamp,3867	;volatile
  3880                           
  3881                           ; BSR set to: 0
  3882                           ;inc\CANlib.h: 670: tamp = mask & 0x0000FF00;
  3883  001EA6  0E00               	movlw	0
  3884  001EA8  0100               	movlb	0	; () banked
  3885  001EAA  1576               	andwf	CANSetMask@mask& (0+255),w,b
  3886  001EAC  0100               	movlb	0	; () banked
  3887  001EAE  6F80               	movwf	CANSetMask@tamp& (0+255),b
  3888  001EB0  0EFF               	movlw	255
  3889  001EB2  0100               	movlb	0	; () banked
  3890  001EB4  1577               	andwf	(CANSetMask@mask+1)& (0+255),w,b
  3891  001EB6  0100               	movlb	0	; () banked
  3892  001EB8  6F81               	movwf	(CANSetMask@tamp+1)& (0+255),b
  3893  001EBA  0E00               	movlw	0
  3894  001EBC  0100               	movlb	0	; () banked
  3895  001EBE  1578               	andwf	(CANSetMask@mask+2)& (0+255),w,b
  3896  001EC0  0100               	movlb	0	; () banked
  3897  001EC2  6F82               	movwf	(CANSetMask@tamp+2)& (0+255),b
  3898  001EC4  0E00               	movlw	0
  3899  001EC6  0100               	movlb	0	; () banked
  3900  001EC8  1579               	andwf	(CANSetMask@mask+3)& (0+255),w,b
  3901  001ECA  0100               	movlb	0	; () banked
  3902  001ECC  6F83               	movwf	(CANSetMask@tamp+3)& (0+255),b
  3903                           
  3904                           ; BSR set to: 0
  3905                           ;inc\CANlib.h: 671: tamp = tamp >> 8;
  3906  001ECE  C080  F07B         	movff	CANSetMask@tamp,??_CANSetMask
  3907  001ED2  C081  F07C         	movff	CANSetMask@tamp+1,??_CANSetMask+1
  3908  001ED6  C082  F07D         	movff	CANSetMask@tamp+2,??_CANSetMask+2
  3909  001EDA  C083  F07E         	movff	CANSetMask@tamp+3,??_CANSetMask+3
  3910  001EDE  C07C  F07B         	movff	??_CANSetMask+1,??_CANSetMask
  3911  001EE2  C07D  F07C         	movff	??_CANSetMask+2,??_CANSetMask+1
  3912  001EE6  C07E  F07D         	movff	??_CANSetMask+3,??_CANSetMask+2
  3913  001EEA  0100               	movlb	0	; () banked
  3914  001EEC  6B7E               	clrf	(??_CANSetMask+3)& (0+255),b
  3915  001EEE  C07B  F080         	movff	??_CANSetMask,CANSetMask@tamp
  3916  001EF2  C07C  F081         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  3917  001EF6  C07D  F082         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  3918  001EFA  C07E  F083         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  3919                           
  3920                           ; BSR set to: 0
  3921                           ;inc\CANlib.h: 672: RXM0EIDH = (unsigned char) tamp;
  3922  001EFE  C080  FF1A         	movff	CANSetMask@tamp,3866	;volatile
  3923                           
  3924                           ; BSR set to: 0
  3925                           ;inc\CANlib.h: 674: if (mask & 0x00010000)
  3926  001F02  0100               	movlb	0	; () banked
  3927  001F04  A178               	btfss	(CANSetMask@mask+2)& (0+255),0,b
  3928  001F06  D003               	goto	l426
  3929                           
  3930                           ; BSR set to: 0
  3931                           ;inc\CANlib.h: 675: RXM0SIDLbits.EID16 = 0x01;
  3932  001F08  010F               	movlb	15	; () banked
  3933  001F0A  8119               	bsf	25,0,b	;volatile
  3934  001F0C  D002               	goto	l427
  3935  001F0E                     l426:
  3936                           
  3937                           ; BSR set to: 0
  3938                           ;inc\CANlib.h: 676: else
  3939                           ;inc\CANlib.h: 677: RXM0SIDLbits.EID16 = 0x00;
  3940  001F0E  010F               	movlb	15	; () banked
  3941  001F10  9119               	bcf	25,0,b	;volatile
  3942  001F12                     l427:
  3943                           
  3944                           ; BSR set to: 15
  3945                           ;inc\CANlib.h: 679: if (mask & 0x00020000)
  3946  001F12  0100               	movlb	0	; () banked
  3947  001F14  A378               	btfss	(CANSetMask@mask+2)& (0+255),1,b
  3948  001F16  D003               	goto	l428
  3949                           
  3950                           ; BSR set to: 0
  3951                           ;inc\CANlib.h: 680: RXM0SIDLbits.EID17 = 0x01;
  3952  001F18  010F               	movlb	15	; () banked
  3953  001F1A  8319               	bsf	25,1,b	;volatile
  3954  001F1C  D002               	goto	l429
  3955  001F1E                     l428:
  3956                           
  3957                           ; BSR set to: 0
  3958                           ;inc\CANlib.h: 681: else
  3959                           ;inc\CANlib.h: 682: RXM0SIDLbits.EID17 = 0x00;
  3960  001F1E  010F               	movlb	15	; () banked
  3961  001F20  9319               	bcf	25,1,b	;volatile
  3962  001F22                     l429:
  3963                           
  3964                           ; BSR set to: 15
  3965                           ;inc\CANlib.h: 684: if (mask & 0x00040000)
  3966  001F22  0100               	movlb	0	; () banked
  3967  001F24  A578               	btfss	(CANSetMask@mask+2)& (0+255),2,b
  3968  001F26  D003               	goto	l430
  3969                           
  3970                           ; BSR set to: 0
  3971                           ;inc\CANlib.h: 685: RXM0SIDLbits.SID0 = 0x01;
  3972  001F28  010F               	movlb	15	; () banked
  3973  001F2A  8B19               	bsf	25,5,b	;volatile
  3974  001F2C  D002               	goto	l431
  3975  001F2E                     l430:
  3976                           
  3977                           ; BSR set to: 0
  3978                           ;inc\CANlib.h: 686: else
  3979                           ;inc\CANlib.h: 687: RXM0SIDLbits.SID0 = 0x00;
  3980  001F2E  010F               	movlb	15	; () banked
  3981  001F30  9B19               	bcf	25,5,b	;volatile
  3982  001F32                     l431:
  3983                           
  3984                           ; BSR set to: 15
  3985                           ;inc\CANlib.h: 689: if (mask & 0x00080000)
  3986  001F32  0100               	movlb	0	; () banked
  3987  001F34  A778               	btfss	(CANSetMask@mask+2)& (0+255),3,b
  3988  001F36  D003               	goto	l432
  3989                           
  3990                           ; BSR set to: 0
  3991                           ;inc\CANlib.h: 690: RXM0SIDLbits.SID1 = 0x01;
  3992  001F38  010F               	movlb	15	; () banked
  3993  001F3A  8D19               	bsf	25,6,b	;volatile
  3994  001F3C  D002               	goto	l433
  3995  001F3E                     l432:
  3996                           
  3997                           ; BSR set to: 0
  3998                           ;inc\CANlib.h: 691: else
  3999                           ;inc\CANlib.h: 692: RXM0SIDLbits.SID1 = 0x00;
  4000  001F3E  010F               	movlb	15	; () banked
  4001  001F40  9D19               	bcf	25,6,b	;volatile
  4002  001F42                     l433:
  4003                           
  4004                           ; BSR set to: 15
  4005                           ;inc\CANlib.h: 694: if (mask & 0x00100000)
  4006  001F42  0100               	movlb	0	; () banked
  4007  001F44  A978               	btfss	(CANSetMask@mask+2)& (0+255),4,b
  4008  001F46  D003               	goto	l434
  4009                           
  4010                           ; BSR set to: 0
  4011                           ;inc\CANlib.h: 695: RXM0SIDLbits.SID2 = 0x01 ;
  4012  001F48  010F               	movlb	15	; () banked
  4013  001F4A  8F19               	bsf	25,7,b	;volatile
  4014  001F4C  D002               	goto	l2638
  4015  001F4E                     l434:
  4016                           
  4017                           ; BSR set to: 0
  4018                           ;inc\CANlib.h: 696: else
  4019                           ;inc\CANlib.h: 697: RXM0SIDLbits.SID2 = 0x00 ;
  4020  001F4E  010F               	movlb	15	; () banked
  4021  001F50  9F19               	bcf	25,7,b	;volatile
  4022  001F52                     l2638:
  4023                           
  4024                           ; BSR set to: 15
  4025                           ;inc\CANlib.h: 699: tamp = (mask >> 21);
  4026  001F52  C076  F07B         	movff	CANSetMask@mask,??_CANSetMask
  4027  001F56  C077  F07C         	movff	CANSetMask@mask+1,??_CANSetMask+1
  4028  001F5A  C078  F07D         	movff	CANSetMask@mask+2,??_CANSetMask+2
  4029  001F5E  C079  F07E         	movff	CANSetMask@mask+3,??_CANSetMask+3
  4030  001F62  0E16               	movlw	22
  4031  001F64  D006               	goto	u2370
  4032  001F66                     u2375:
  4033  001F66  0100               	movlb	0	; () banked
  4034  001F68  90D8               	bcf	status,0,c
  4035  001F6A  337E               	rrcf	(??_CANSetMask+3)& (0+255),f,b
  4036  001F6C  337D               	rrcf	(??_CANSetMask+2)& (0+255),f,b
  4037  001F6E  337C               	rrcf	(??_CANSetMask+1)& (0+255),f,b
  4038  001F70  337B               	rrcf	??_CANSetMask& (0+255),f,b
  4039  001F72                     u2370:
  4040  001F72  2EE8               	decfsz	wreg,f,c
  4041  001F74  D7F8               	goto	u2375
  4042  001F76  C07B  F080         	movff	??_CANSetMask,CANSetMask@tamp
  4043  001F7A  C07C  F081         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  4044  001F7E  C07D  F082         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  4045  001F82  C07E  F083         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  4046                           
  4047                           ; BSR set to: 0
  4048                           ;inc\CANlib.h: 700: tamp = tamp & 0x000000FF;
  4049  001F86  0100               	movlb	0	; () banked
  4050  001F88  5180               	movf	CANSetMask@tamp& (0+255),w,b
  4051  001F8A  0100               	movlb	0	; () banked
  4052  001F8C  6F80               	movwf	CANSetMask@tamp& (0+255),b
  4053  001F8E  6B81               	clrf	(CANSetMask@tamp+1)& (0+255),b
  4054  001F90  6B82               	clrf	(CANSetMask@tamp+2)& (0+255),b
  4055  001F92  6B83               	clrf	(CANSetMask@tamp+3)& (0+255),b
  4056                           
  4057                           ; BSR set to: 0
  4058                           ;inc\CANlib.h: 701: RXM0SIDH = (unsigned char) tamp;
  4059  001F94  C080  FF18         	movff	CANSetMask@tamp,3864	;volatile
  4060  001F98                     l2644:
  4061                           
  4062                           ; BSR set to: 0
  4063                           ;inc\CANlib.h: 702: }
  4064                           ;inc\CANlib.h: 704: if ((numBuffer ==CAN_MASK_B2) && (type == CAN_CONFIG_XTD_MSG))
  4065  001F98  0E02               	movlw	2
  4066  001F9A  0100               	movlb	0	; () banked
  4067  001F9C  197F               	xorwf	CANSetMask@numBuffer& (0+255),w,b
  4068  001F9E  A4D8               	btfss	status,2,c
  4069  001FA0  0012               	return	
  4070                           
  4071                           ; BSR set to: 0
  4072  001FA2  0EF7               	movlw	247
  4073  001FA4  0100               	movlb	0	; () banked
  4074  001FA6  197A               	xorwf	CANSetMask@type& (0+255),w,b
  4075  001FA8  A4D8               	btfss	status,2,c
  4076  001FAA  0012               	return	
  4077                           
  4078                           ; BSR set to: 0
  4079                           ;inc\CANlib.h: 705: {
  4080                           ;inc\CANlib.h: 706: tamp = mask & 0x000000FF;
  4081  001FAC  0100               	movlb	0	; () banked
  4082  001FAE  5176               	movf	CANSetMask@mask& (0+255),w,b
  4083  001FB0  0100               	movlb	0	; () banked
  4084  001FB2  6F80               	movwf	CANSetMask@tamp& (0+255),b
  4085  001FB4  6B81               	clrf	(CANSetMask@tamp+1)& (0+255),b
  4086  001FB6  6B82               	clrf	(CANSetMask@tamp+2)& (0+255),b
  4087  001FB8  6B83               	clrf	(CANSetMask@tamp+3)& (0+255),b
  4088                           
  4089                           ; BSR set to: 0
  4090                           ;inc\CANlib.h: 707: RXM1EIDL = (unsigned char) tamp;
  4091  001FBA  C080  FF1F         	movff	CANSetMask@tamp,3871	;volatile
  4092                           
  4093                           ; BSR set to: 0
  4094                           ;inc\CANlib.h: 709: tamp = mask & 0x0000FF00;
  4095  001FBE  0E00               	movlw	0
  4096  001FC0  0100               	movlb	0	; () banked
  4097  001FC2  1576               	andwf	CANSetMask@mask& (0+255),w,b
  4098  001FC4  0100               	movlb	0	; () banked
  4099  001FC6  6F80               	movwf	CANSetMask@tamp& (0+255),b
  4100  001FC8  0EFF               	movlw	255
  4101  001FCA  0100               	movlb	0	; () banked
  4102  001FCC  1577               	andwf	(CANSetMask@mask+1)& (0+255),w,b
  4103  001FCE  0100               	movlb	0	; () banked
  4104  001FD0  6F81               	movwf	(CANSetMask@tamp+1)& (0+255),b
  4105  001FD2  0E00               	movlw	0
  4106  001FD4  0100               	movlb	0	; () banked
  4107  001FD6  1578               	andwf	(CANSetMask@mask+2)& (0+255),w,b
  4108  001FD8  0100               	movlb	0	; () banked
  4109  001FDA  6F82               	movwf	(CANSetMask@tamp+2)& (0+255),b
  4110  001FDC  0E00               	movlw	0
  4111  001FDE  0100               	movlb	0	; () banked
  4112  001FE0  1579               	andwf	(CANSetMask@mask+3)& (0+255),w,b
  4113  001FE2  0100               	movlb	0	; () banked
  4114  001FE4  6F83               	movwf	(CANSetMask@tamp+3)& (0+255),b
  4115                           
  4116                           ; BSR set to: 0
  4117                           ;inc\CANlib.h: 710: tamp = tamp >> 8;
  4118  001FE6  C080  F07B         	movff	CANSetMask@tamp,??_CANSetMask
  4119  001FEA  C081  F07C         	movff	CANSetMask@tamp+1,??_CANSetMask+1
  4120  001FEE  C082  F07D         	movff	CANSetMask@tamp+2,??_CANSetMask+2
  4121  001FF2  C083  F07E         	movff	CANSetMask@tamp+3,??_CANSetMask+3
  4122  001FF6  C07C  F07B         	movff	??_CANSetMask+1,??_CANSetMask
  4123  001FFA  C07D  F07C         	movff	??_CANSetMask+2,??_CANSetMask+1
  4124  001FFE  C07E  F07D         	movff	??_CANSetMask+3,??_CANSetMask+2
  4125  002002  0100               	movlb	0	; () banked
  4126  002004  6B7E               	clrf	(??_CANSetMask+3)& (0+255),b
  4127  002006  C07B  F080         	movff	??_CANSetMask,CANSetMask@tamp
  4128  00200A  C07C  F081         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  4129  00200E  C07D  F082         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  4130  002012  C07E  F083         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  4131                           
  4132                           ; BSR set to: 0
  4133                           ;inc\CANlib.h: 711: RXM1EIDH = (unsigned char) tamp;
  4134  002016  C080  FF1E         	movff	CANSetMask@tamp,3870	;volatile
  4135                           
  4136                           ; BSR set to: 0
  4137                           ;inc\CANlib.h: 713: if (mask & 0x00010000)
  4138  00201A  0100               	movlb	0	; () banked
  4139  00201C  A178               	btfss	(CANSetMask@mask+2)& (0+255),0,b
  4140  00201E  D003               	goto	l437
  4141                           
  4142                           ; BSR set to: 0
  4143                           ;inc\CANlib.h: 714: RXM1SIDLbits.EID16 = 0x01;
  4144  002020  010F               	movlb	15	; () banked
  4145  002022  811D               	bsf	29,0,b	;volatile
  4146  002024  D002               	goto	l438
  4147  002026                     l437:
  4148                           
  4149                           ; BSR set to: 0
  4150                           ;inc\CANlib.h: 715: else
  4151                           ;inc\CANlib.h: 716: RXM1SIDLbits.EID16 = 0x00;
  4152  002026  010F               	movlb	15	; () banked
  4153  002028  911D               	bcf	29,0,b	;volatile
  4154  00202A                     l438:
  4155                           
  4156                           ; BSR set to: 15
  4157                           ;inc\CANlib.h: 718: if (mask & 0x00020000)
  4158  00202A  0100               	movlb	0	; () banked
  4159  00202C  A378               	btfss	(CANSetMask@mask+2)& (0+255),1,b
  4160  00202E  D003               	goto	l439
  4161                           
  4162                           ; BSR set to: 0
  4163                           ;inc\CANlib.h: 719: RXM1SIDLbits.EID17 = 0x01;
  4164  002030  010F               	movlb	15	; () banked
  4165  002032  831D               	bsf	29,1,b	;volatile
  4166  002034  D002               	goto	l440
  4167  002036                     l439:
  4168                           
  4169                           ; BSR set to: 0
  4170                           ;inc\CANlib.h: 720: else
  4171                           ;inc\CANlib.h: 721: RXM1SIDLbits.EID17 = 0x00;
  4172  002036  010F               	movlb	15	; () banked
  4173  002038  931D               	bcf	29,1,b	;volatile
  4174  00203A                     l440:
  4175                           
  4176                           ; BSR set to: 15
  4177                           ;inc\CANlib.h: 723: if (mask & 0x00040000)
  4178  00203A  0100               	movlb	0	; () banked
  4179  00203C  A578               	btfss	(CANSetMask@mask+2)& (0+255),2,b
  4180  00203E  D003               	goto	l441
  4181                           
  4182                           ; BSR set to: 0
  4183                           ;inc\CANlib.h: 724: RXM1SIDLbits.SID0 = 0x01;
  4184  002040  010F               	movlb	15	; () banked
  4185  002042  8B1D               	bsf	29,5,b	;volatile
  4186  002044  D002               	goto	l442
  4187  002046                     l441:
  4188                           
  4189                           ; BSR set to: 0
  4190                           ;inc\CANlib.h: 725: else
  4191                           ;inc\CANlib.h: 726: RXM1SIDLbits.SID0 = 0x00;
  4192  002046  010F               	movlb	15	; () banked
  4193  002048  9B1D               	bcf	29,5,b	;volatile
  4194  00204A                     l442:
  4195                           
  4196                           ; BSR set to: 15
  4197                           ;inc\CANlib.h: 728: if (mask & 0x00080000)
  4198  00204A  0100               	movlb	0	; () banked
  4199  00204C  A778               	btfss	(CANSetMask@mask+2)& (0+255),3,b
  4200  00204E  D003               	goto	l443
  4201                           
  4202                           ; BSR set to: 0
  4203                           ;inc\CANlib.h: 729: RXM1SIDLbits.SID1 = 0x01;
  4204  002050  010F               	movlb	15	; () banked
  4205  002052  8D1D               	bsf	29,6,b	;volatile
  4206  002054  D002               	goto	l444
  4207  002056                     l443:
  4208                           
  4209                           ; BSR set to: 0
  4210                           ;inc\CANlib.h: 730: else
  4211                           ;inc\CANlib.h: 731: RXM1SIDLbits.SID1 = 0x00;
  4212  002056  010F               	movlb	15	; () banked
  4213  002058  9D1D               	bcf	29,6,b	;volatile
  4214  00205A                     l444:
  4215                           
  4216                           ; BSR set to: 15
  4217                           ;inc\CANlib.h: 733: if (mask & 0x00100000)
  4218  00205A  0100               	movlb	0	; () banked
  4219  00205C  A978               	btfss	(CANSetMask@mask+2)& (0+255),4,b
  4220  00205E  D003               	goto	l445
  4221                           
  4222                           ; BSR set to: 0
  4223                           ;inc\CANlib.h: 734: RXM1SIDLbits.SID2 = 0x01 ;
  4224  002060  010F               	movlb	15	; () banked
  4225  002062  8F1D               	bsf	29,7,b	;volatile
  4226  002064  D002               	goto	l2670
  4227  002066                     l445:
  4228                           
  4229                           ; BSR set to: 0
  4230                           ;inc\CANlib.h: 735: else
  4231                           ;inc\CANlib.h: 736: RXM1SIDLbits.SID2 = 0x00 ;
  4232  002066  010F               	movlb	15	; () banked
  4233  002068  9F1D               	bcf	29,7,b	;volatile
  4234  00206A                     l2670:
  4235                           
  4236                           ; BSR set to: 15
  4237                           ;inc\CANlib.h: 738: tamp = (mask >> 21);
  4238  00206A  C076  F07B         	movff	CANSetMask@mask,??_CANSetMask
  4239  00206E  C077  F07C         	movff	CANSetMask@mask+1,??_CANSetMask+1
  4240  002072  C078  F07D         	movff	CANSetMask@mask+2,??_CANSetMask+2
  4241  002076  C079  F07E         	movff	CANSetMask@mask+3,??_CANSetMask+3
  4242  00207A  0E16               	movlw	22
  4243  00207C  D006               	goto	u2450
  4244  00207E                     u2455:
  4245  00207E  0100               	movlb	0	; () banked
  4246  002080  90D8               	bcf	status,0,c
  4247  002082  337E               	rrcf	(??_CANSetMask+3)& (0+255),f,b
  4248  002084  337D               	rrcf	(??_CANSetMask+2)& (0+255),f,b
  4249  002086  337C               	rrcf	(??_CANSetMask+1)& (0+255),f,b
  4250  002088  337B               	rrcf	??_CANSetMask& (0+255),f,b
  4251  00208A                     u2450:
  4252  00208A  2EE8               	decfsz	wreg,f,c
  4253  00208C  D7F8               	goto	u2455
  4254  00208E  C07B  F080         	movff	??_CANSetMask,CANSetMask@tamp
  4255  002092  C07C  F081         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  4256  002096  C07D  F082         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  4257  00209A  C07E  F083         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  4258                           
  4259                           ; BSR set to: 0
  4260                           ;inc\CANlib.h: 739: tamp = tamp & 0x000000FF;
  4261  00209E  0100               	movlb	0	; () banked
  4262  0020A0  5180               	movf	CANSetMask@tamp& (0+255),w,b
  4263  0020A2  0100               	movlb	0	; () banked
  4264  0020A4  6F80               	movwf	CANSetMask@tamp& (0+255),b
  4265  0020A6  6B81               	clrf	(CANSetMask@tamp+1)& (0+255),b
  4266  0020A8  6B82               	clrf	(CANSetMask@tamp+2)& (0+255),b
  4267  0020AA  6B83               	clrf	(CANSetMask@tamp+3)& (0+255),b
  4268                           
  4269                           ; BSR set to: 0
  4270                           ;inc\CANlib.h: 740: RXM1SIDH = (unsigned char) tamp;
  4271  0020AC  C080  FF1C         	movff	CANSetMask@tamp,3868	;volatile
  4272  0020B0  0012               	return	
  4273  0020B2                     __end_of_CANSetMask:
  4274                           	opt stack 0
  4275                           tblptru	equ	0xFF8
  4276                           tblptrh	equ	0xFF7
  4277                           tblptrl	equ	0xFF6
  4278                           tablat	equ	0xFF5
  4279                           prodh	equ	0xFF4
  4280                           prodl	equ	0xFF3
  4281                           intcon	equ	0xFF2
  4282                           intcon2	equ	0xFF1
  4283                           postinc0	equ	0xFEE
  4284                           wreg	equ	0xFE8
  4285                           indf2	equ	0xFDF
  4286                           fsr2h	equ	0xFDA
  4287                           fsr2l	equ	0xFD9
  4288                           status	equ	0xFD8
  4289                           
  4290 ;; *************** function _CANSetFilter *****************
  4291 ;; Defined at:
  4292 ;;		line 748 in file "F:/Tesina/LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
  4293 ;; Parameters:    Size  Location     Type
  4294 ;;  numBuffer       1    wreg     enum E16881
  4295 ;;  filter          4   22[BANK0 ] unsigned long 
  4296 ;;  type            1   26[BANK0 ] enum E16844
  4297 ;; Auto vars:     Size  Location     Type
  4298 ;;  numBuffer       1   31[BANK0 ] enum E16881
  4299 ;;  tamp            4   32[BANK0 ] unsigned long 
  4300 ;; Return value:  Size  Location     Type
  4301 ;;		None               void
  4302 ;; Registers used:
  4303 ;;		wreg, status,2, status,0
  4304 ;; Tracked objects:
  4305 ;;		On entry : 0/0
  4306 ;;		On exit  : 0/0
  4307 ;;		Unchanged: 0/0
  4308 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  4309 ;;      Params:         0       5       0       0
  4310 ;;      Locals:         0       5       0       0
  4311 ;;      Temps:          0       4       0       0
  4312 ;;      Totals:         0      14       0       0
  4313 ;;Total ram usage:       14 bytes
  4314 ;; Hardware stack levels used:    1
  4315 ;; Hardware stack levels required when called:    5
  4316 ;; This function calls:
  4317 ;;		Nothing
  4318 ;; This function is called by:
  4319 ;;		_CANInitialize
  4320 ;; This function uses a non-reentrant model
  4321 ;;
  4322                           
  4323                           	psect	text9
  4324  0001A2                     __ptext9:
  4325                           	opt stack 0
  4326  0001A2                     _CANSetFilter:
  4327                           	opt stack 23
  4328                           
  4329                           ; BSR set to: 0
  4330                           ;incstack = 0
  4331                           ;CANSetFilter@numBuffer stored from wreg
  4332  0001A2  0100               	movlb	0	; () banked
  4333  0001A4  6F7F               	movwf	CANSetFilter@numBuffer& (0+255),b
  4334                           
  4335                           ;inc\CANlib.h: 750: unsigned long tamp;
  4336                           ;inc\CANlib.h: 752: if ((numBuffer ==CAN_FILTER_B1_F1) && (type == CAN_CONFIG_STD_MSG))
  4337  0001A6  0100               	movlb	0	; () banked
  4338  0001A8  517F               	movf	CANSetFilter@numBuffer& (0+255),w,b
  4339  0001AA  0100               	movlb	0	; () banked
  4340  0001AC  A4D8               	btfss	status,2,c
  4341  0001AE  D058               	goto	l2694
  4342                           
  4343                           ; BSR set to: 0
  4344  0001B0  0100               	movlb	0	; () banked
  4345  0001B2  297A               	incf	CANSetFilter@type& (0+255),w,b
  4346  0001B4  A4D8               	btfss	status,2,c
  4347  0001B6  D054               	goto	l2694
  4348                           
  4349                           ; BSR set to: 0
  4350                           ;inc\CANlib.h: 753: {
  4351                           ;inc\CANlib.h: 754: RXF0SIDLbits.EXIDEN = 0x00;
  4352  0001B8  010F               	movlb	15	; () banked
  4353  0001BA  9701               	bcf	1,3,b	;volatile
  4354                           
  4355                           ; BSR set to: 15
  4356                           ;inc\CANlib.h: 756: tamp = (filter >> 3);
  4357  0001BC  C076  F07B         	movff	CANSetFilter@filter,??_CANSetFilter
  4358  0001C0  C077  F07C         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  4359  0001C4  C078  F07D         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  4360  0001C8  C079  F07E         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  4361  0001CC  0E04               	movlw	4
  4362  0001CE  D006               	goto	u2480
  4363  0001D0                     u2485:
  4364  0001D0  0100               	movlb	0	; () banked
  4365  0001D2  90D8               	bcf	status,0,c
  4366  0001D4  337E               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  4367  0001D6  337D               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  4368  0001D8  337C               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  4369  0001DA  337B               	rrcf	??_CANSetFilter& (0+255),f,b
  4370  0001DC                     u2480:
  4371  0001DC  2EE8               	decfsz	wreg,f,c
  4372  0001DE  D7F8               	goto	u2485
  4373  0001E0  C07B  F080         	movff	??_CANSetFilter,CANSetFilter@tamp
  4374  0001E4  C07C  F081         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4375  0001E8  C07D  F082         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4376  0001EC  C07E  F083         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4377                           
  4378                           ; BSR set to: 0
  4379                           ;inc\CANlib.h: 757: tamp = tamp & 0x000000FF;
  4380  0001F0  0100               	movlb	0	; () banked
  4381  0001F2  5180               	movf	CANSetFilter@tamp& (0+255),w,b
  4382  0001F4  0100               	movlb	0	; () banked
  4383  0001F6  6F80               	movwf	CANSetFilter@tamp& (0+255),b
  4384  0001F8  6B81               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4385  0001FA  6B82               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4386  0001FC  6B83               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4387                           
  4388                           ; BSR set to: 0
  4389                           ;inc\CANlib.h: 758: RXF0SIDH = (unsigned char) tamp;
  4390  0001FE  C080  FF00         	movff	CANSetFilter@tamp,3840	;volatile
  4391                           
  4392                           ; BSR set to: 0
  4393                           ;inc\CANlib.h: 760: tamp = filter & 0x00000007;
  4394  000202  0E07               	movlw	7
  4395  000204  0100               	movlb	0	; () banked
  4396  000206  1576               	andwf	CANSetFilter@filter& (0+255),w,b
  4397  000208  0100               	movlb	0	; () banked
  4398  00020A  6F80               	movwf	CANSetFilter@tamp& (0+255),b
  4399  00020C  0E00               	movlw	0
  4400  00020E  0100               	movlb	0	; () banked
  4401  000210  1577               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  4402  000212  0100               	movlb	0	; () banked
  4403  000214  6F81               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  4404  000216  0E00               	movlw	0
  4405  000218  0100               	movlb	0	; () banked
  4406  00021A  1578               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  4407  00021C  0100               	movlb	0	; () banked
  4408  00021E  6F82               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  4409  000220  0E00               	movlw	0
  4410  000222  0100               	movlb	0	; () banked
  4411  000224  1579               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  4412  000226  0100               	movlb	0	; () banked
  4413  000228  6F83               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  4414                           
  4415                           ; BSR set to: 0
  4416                           ;inc\CANlib.h: 761: tamp = tamp << 5;
  4417  00022A  C080  F07B         	movff	CANSetFilter@tamp,??_CANSetFilter
  4418  00022E  C081  F07C         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  4419  000232  C082  F07D         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  4420  000236  C083  F07E         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  4421  00023A  0E05               	movlw	5
  4422  00023C                     u2495:
  4423  00023C  90D8               	bcf	status,0,c
  4424  00023E  0100               	movlb	0	; () banked
  4425  000240  377B               	rlcf	??_CANSetFilter& (0+255),f,b
  4426  000242  377C               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  4427  000244  377D               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  4428  000246  377E               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  4429  000248  2EE8               	decfsz	wreg,f,c
  4430  00024A  D7F8               	goto	u2495
  4431  00024C  C07B  F080         	movff	??_CANSetFilter,CANSetFilter@tamp
  4432  000250  C07C  F081         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4433  000254  C07D  F082         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4434  000258  C07E  F083         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4435                           
  4436                           ; BSR set to: 0
  4437                           ;inc\CANlib.h: 762: RXF0SIDL = (unsigned char) tamp;
  4438  00025C  C080  FF01         	movff	CANSetFilter@tamp,3841	;volatile
  4439  000260                     l2694:
  4440                           
  4441                           ; BSR set to: 0
  4442                           ;inc\CANlib.h: 763: }
  4443                           ;inc\CANlib.h: 765: if ((numBuffer ==CAN_FILTER_B1_F2) && (type == CAN_CONFIG_STD_MSG))
  4444  000260  0100               	movlb	0	; () banked
  4445  000262  057F               	decf	CANSetFilter@numBuffer& (0+255),w,b
  4446  000264  A4D8               	btfss	status,2,c
  4447  000266  D058               	goto	l2712
  4448                           
  4449                           ; BSR set to: 0
  4450  000268  0100               	movlb	0	; () banked
  4451  00026A  297A               	incf	CANSetFilter@type& (0+255),w,b
  4452  00026C  A4D8               	btfss	status,2,c
  4453  00026E  D054               	goto	l2712
  4454                           
  4455                           ; BSR set to: 0
  4456                           ;inc\CANlib.h: 766: {
  4457                           ;inc\CANlib.h: 767: RXF1SIDLbits.EXIDEN = 0x00;
  4458  000270  010F               	movlb	15	; () banked
  4459  000272  9705               	bcf	5,3,b	;volatile
  4460                           
  4461                           ; BSR set to: 15
  4462                           ;inc\CANlib.h: 769: tamp = (filter >> 3);
  4463  000274  C076  F07B         	movff	CANSetFilter@filter,??_CANSetFilter
  4464  000278  C077  F07C         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  4465  00027C  C078  F07D         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  4466  000280  C079  F07E         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  4467  000284  0E04               	movlw	4
  4468  000286  D006               	goto	u2520
  4469  000288                     u2525:
  4470  000288  0100               	movlb	0	; () banked
  4471  00028A  90D8               	bcf	status,0,c
  4472  00028C  337E               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  4473  00028E  337D               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  4474  000290  337C               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  4475  000292  337B               	rrcf	??_CANSetFilter& (0+255),f,b
  4476  000294                     u2520:
  4477  000294  2EE8               	decfsz	wreg,f,c
  4478  000296  D7F8               	goto	u2525
  4479  000298  C07B  F080         	movff	??_CANSetFilter,CANSetFilter@tamp
  4480  00029C  C07C  F081         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4481  0002A0  C07D  F082         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4482  0002A4  C07E  F083         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4483                           
  4484                           ; BSR set to: 0
  4485                           ;inc\CANlib.h: 770: tamp = tamp & 0x000000FF;
  4486  0002A8  0100               	movlb	0	; () banked
  4487  0002AA  5180               	movf	CANSetFilter@tamp& (0+255),w,b
  4488  0002AC  0100               	movlb	0	; () banked
  4489  0002AE  6F80               	movwf	CANSetFilter@tamp& (0+255),b
  4490  0002B0  6B81               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4491  0002B2  6B82               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4492  0002B4  6B83               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4493                           
  4494                           ; BSR set to: 0
  4495                           ;inc\CANlib.h: 771: RXF1SIDH = (unsigned char) tamp;
  4496  0002B6  C080  FF04         	movff	CANSetFilter@tamp,3844	;volatile
  4497                           
  4498                           ; BSR set to: 0
  4499                           ;inc\CANlib.h: 773: tamp = filter & 0x00000007;
  4500  0002BA  0E07               	movlw	7
  4501  0002BC  0100               	movlb	0	; () banked
  4502  0002BE  1576               	andwf	CANSetFilter@filter& (0+255),w,b
  4503  0002C0  0100               	movlb	0	; () banked
  4504  0002C2  6F80               	movwf	CANSetFilter@tamp& (0+255),b
  4505  0002C4  0E00               	movlw	0
  4506  0002C6  0100               	movlb	0	; () banked
  4507  0002C8  1577               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  4508  0002CA  0100               	movlb	0	; () banked
  4509  0002CC  6F81               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  4510  0002CE  0E00               	movlw	0
  4511  0002D0  0100               	movlb	0	; () banked
  4512  0002D2  1578               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  4513  0002D4  0100               	movlb	0	; () banked
  4514  0002D6  6F82               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  4515  0002D8  0E00               	movlw	0
  4516  0002DA  0100               	movlb	0	; () banked
  4517  0002DC  1579               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  4518  0002DE  0100               	movlb	0	; () banked
  4519  0002E0  6F83               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  4520                           
  4521                           ; BSR set to: 0
  4522                           ;inc\CANlib.h: 774: tamp = tamp << 5;
  4523  0002E2  C080  F07B         	movff	CANSetFilter@tamp,??_CANSetFilter
  4524  0002E6  C081  F07C         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  4525  0002EA  C082  F07D         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  4526  0002EE  C083  F07E         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  4527  0002F2  0E05               	movlw	5
  4528  0002F4                     u2535:
  4529  0002F4  90D8               	bcf	status,0,c
  4530  0002F6  0100               	movlb	0	; () banked
  4531  0002F8  377B               	rlcf	??_CANSetFilter& (0+255),f,b
  4532  0002FA  377C               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  4533  0002FC  377D               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  4534  0002FE  377E               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  4535  000300  2EE8               	decfsz	wreg,f,c
  4536  000302  D7F8               	goto	u2535
  4537  000304  C07B  F080         	movff	??_CANSetFilter,CANSetFilter@tamp
  4538  000308  C07C  F081         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4539  00030C  C07D  F082         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4540  000310  C07E  F083         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4541                           
  4542                           ; BSR set to: 0
  4543                           ;inc\CANlib.h: 775: RXF1SIDL = (unsigned char) tamp;
  4544  000314  C080  FF05         	movff	CANSetFilter@tamp,3845	;volatile
  4545  000318                     l2712:
  4546                           
  4547                           ; BSR set to: 0
  4548                           ;inc\CANlib.h: 776: }
  4549                           ;inc\CANlib.h: 778: if ((numBuffer ==CAN_FILTER_B2_F1) && (type == CAN_CONFIG_STD_MSG))
  4550  000318  0E02               	movlw	2
  4551  00031A  0100               	movlb	0	; () banked
  4552  00031C  197F               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  4553  00031E  A4D8               	btfss	status,2,c
  4554  000320  D058               	goto	l2730
  4555                           
  4556                           ; BSR set to: 0
  4557  000322  0100               	movlb	0	; () banked
  4558  000324  297A               	incf	CANSetFilter@type& (0+255),w,b
  4559  000326  A4D8               	btfss	status,2,c
  4560  000328  D054               	goto	l2730
  4561                           
  4562                           ; BSR set to: 0
  4563                           ;inc\CANlib.h: 779: {
  4564                           ;inc\CANlib.h: 780: RXF2SIDLbits.EXIDEN = 0x00;
  4565  00032A  010F               	movlb	15	; () banked
  4566  00032C  9709               	bcf	9,3,b	;volatile
  4567                           
  4568                           ; BSR set to: 15
  4569                           ;inc\CANlib.h: 782: tamp = (filter >> 3);
  4570  00032E  C076  F07B         	movff	CANSetFilter@filter,??_CANSetFilter
  4571  000332  C077  F07C         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  4572  000336  C078  F07D         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  4573  00033A  C079  F07E         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  4574  00033E  0E04               	movlw	4
  4575  000340  D006               	goto	u2560
  4576  000342                     u2565:
  4577  000342  0100               	movlb	0	; () banked
  4578  000344  90D8               	bcf	status,0,c
  4579  000346  337E               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  4580  000348  337D               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  4581  00034A  337C               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  4582  00034C  337B               	rrcf	??_CANSetFilter& (0+255),f,b
  4583  00034E                     u2560:
  4584  00034E  2EE8               	decfsz	wreg,f,c
  4585  000350  D7F8               	goto	u2565
  4586  000352  C07B  F080         	movff	??_CANSetFilter,CANSetFilter@tamp
  4587  000356  C07C  F081         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4588  00035A  C07D  F082         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4589  00035E  C07E  F083         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4590                           
  4591                           ; BSR set to: 0
  4592                           ;inc\CANlib.h: 783: tamp = tamp & 0x000000FF;
  4593  000362  0100               	movlb	0	; () banked
  4594  000364  5180               	movf	CANSetFilter@tamp& (0+255),w,b
  4595  000366  0100               	movlb	0	; () banked
  4596  000368  6F80               	movwf	CANSetFilter@tamp& (0+255),b
  4597  00036A  6B81               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4598  00036C  6B82               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4599  00036E  6B83               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4600                           
  4601                           ; BSR set to: 0
  4602                           ;inc\CANlib.h: 784: RXF2SIDH = (unsigned char) tamp;
  4603  000370  C080  FF08         	movff	CANSetFilter@tamp,3848	;volatile
  4604                           
  4605                           ; BSR set to: 0
  4606                           ;inc\CANlib.h: 786: tamp = filter & 0x00000007;
  4607  000374  0E07               	movlw	7
  4608  000376  0100               	movlb	0	; () banked
  4609  000378  1576               	andwf	CANSetFilter@filter& (0+255),w,b
  4610  00037A  0100               	movlb	0	; () banked
  4611  00037C  6F80               	movwf	CANSetFilter@tamp& (0+255),b
  4612  00037E  0E00               	movlw	0
  4613  000380  0100               	movlb	0	; () banked
  4614  000382  1577               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  4615  000384  0100               	movlb	0	; () banked
  4616  000386  6F81               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  4617  000388  0E00               	movlw	0
  4618  00038A  0100               	movlb	0	; () banked
  4619  00038C  1578               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  4620  00038E  0100               	movlb	0	; () banked
  4621  000390  6F82               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  4622  000392  0E00               	movlw	0
  4623  000394  0100               	movlb	0	; () banked
  4624  000396  1579               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  4625  000398  0100               	movlb	0	; () banked
  4626  00039A  6F83               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  4627                           
  4628                           ; BSR set to: 0
  4629                           ;inc\CANlib.h: 787: tamp = tamp << 5;
  4630  00039C  C080  F07B         	movff	CANSetFilter@tamp,??_CANSetFilter
  4631  0003A0  C081  F07C         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  4632  0003A4  C082  F07D         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  4633  0003A8  C083  F07E         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  4634  0003AC  0E05               	movlw	5
  4635  0003AE                     u2575:
  4636  0003AE  90D8               	bcf	status,0,c
  4637  0003B0  0100               	movlb	0	; () banked
  4638  0003B2  377B               	rlcf	??_CANSetFilter& (0+255),f,b
  4639  0003B4  377C               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  4640  0003B6  377D               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  4641  0003B8  377E               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  4642  0003BA  2EE8               	decfsz	wreg,f,c
  4643  0003BC  D7F8               	goto	u2575
  4644  0003BE  C07B  F080         	movff	??_CANSetFilter,CANSetFilter@tamp
  4645  0003C2  C07C  F081         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4646  0003C6  C07D  F082         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4647  0003CA  C07E  F083         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4648                           
  4649                           ; BSR set to: 0
  4650                           ;inc\CANlib.h: 788: RXF2SIDL = (unsigned char) tamp;
  4651  0003CE  C080  FF09         	movff	CANSetFilter@tamp,3849	;volatile
  4652  0003D2                     l2730:
  4653                           
  4654                           ; BSR set to: 0
  4655                           ;inc\CANlib.h: 789: }
  4656                           ;inc\CANlib.h: 791: if ((numBuffer ==CAN_FILTER_B2_F2) && (type == CAN_CONFIG_STD_MSG))
  4657  0003D2  0E03               	movlw	3
  4658  0003D4  0100               	movlb	0	; () banked
  4659  0003D6  197F               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  4660  0003D8  A4D8               	btfss	status,2,c
  4661  0003DA  D058               	goto	l2748
  4662                           
  4663                           ; BSR set to: 0
  4664  0003DC  0100               	movlb	0	; () banked
  4665  0003DE  297A               	incf	CANSetFilter@type& (0+255),w,b
  4666  0003E0  A4D8               	btfss	status,2,c
  4667  0003E2  D054               	goto	l2748
  4668                           
  4669                           ; BSR set to: 0
  4670                           ;inc\CANlib.h: 792: {
  4671                           ;inc\CANlib.h: 793: RXF3SIDLbits.EXIDEN = 0x00;
  4672  0003E4  010F               	movlb	15	; () banked
  4673  0003E6  970D               	bcf	13,3,b	;volatile
  4674                           
  4675                           ; BSR set to: 15
  4676                           ;inc\CANlib.h: 795: tamp = (filter >> 3);
  4677  0003E8  C076  F07B         	movff	CANSetFilter@filter,??_CANSetFilter
  4678  0003EC  C077  F07C         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  4679  0003F0  C078  F07D         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  4680  0003F4  C079  F07E         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  4681  0003F8  0E04               	movlw	4
  4682  0003FA  D006               	goto	u2600
  4683  0003FC                     u2605:
  4684  0003FC  0100               	movlb	0	; () banked
  4685  0003FE  90D8               	bcf	status,0,c
  4686  000400  337E               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  4687  000402  337D               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  4688  000404  337C               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  4689  000406  337B               	rrcf	??_CANSetFilter& (0+255),f,b
  4690  000408                     u2600:
  4691  000408  2EE8               	decfsz	wreg,f,c
  4692  00040A  D7F8               	goto	u2605
  4693  00040C  C07B  F080         	movff	??_CANSetFilter,CANSetFilter@tamp
  4694  000410  C07C  F081         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4695  000414  C07D  F082         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4696  000418  C07E  F083         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4697                           
  4698                           ; BSR set to: 0
  4699                           ;inc\CANlib.h: 796: tamp = tamp & 0x000000FF;
  4700  00041C  0100               	movlb	0	; () banked
  4701  00041E  5180               	movf	CANSetFilter@tamp& (0+255),w,b
  4702  000420  0100               	movlb	0	; () banked
  4703  000422  6F80               	movwf	CANSetFilter@tamp& (0+255),b
  4704  000424  6B81               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4705  000426  6B82               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4706  000428  6B83               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4707                           
  4708                           ; BSR set to: 0
  4709                           ;inc\CANlib.h: 797: RXF3SIDH = (unsigned char) tamp;
  4710  00042A  C080  FF0C         	movff	CANSetFilter@tamp,3852	;volatile
  4711                           
  4712                           ; BSR set to: 0
  4713                           ;inc\CANlib.h: 799: tamp = filter & 0x00000007;
  4714  00042E  0E07               	movlw	7
  4715  000430  0100               	movlb	0	; () banked
  4716  000432  1576               	andwf	CANSetFilter@filter& (0+255),w,b
  4717  000434  0100               	movlb	0	; () banked
  4718  000436  6F80               	movwf	CANSetFilter@tamp& (0+255),b
  4719  000438  0E00               	movlw	0
  4720  00043A  0100               	movlb	0	; () banked
  4721  00043C  1577               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  4722  00043E  0100               	movlb	0	; () banked
  4723  000440  6F81               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  4724  000442  0E00               	movlw	0
  4725  000444  0100               	movlb	0	; () banked
  4726  000446  1578               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  4727  000448  0100               	movlb	0	; () banked
  4728  00044A  6F82               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  4729  00044C  0E00               	movlw	0
  4730  00044E  0100               	movlb	0	; () banked
  4731  000450  1579               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  4732  000452  0100               	movlb	0	; () banked
  4733  000454  6F83               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  4734                           
  4735                           ; BSR set to: 0
  4736                           ;inc\CANlib.h: 800: tamp = tamp << 5;
  4737  000456  C080  F07B         	movff	CANSetFilter@tamp,??_CANSetFilter
  4738  00045A  C081  F07C         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  4739  00045E  C082  F07D         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  4740  000462  C083  F07E         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  4741  000466  0E05               	movlw	5
  4742  000468                     u2615:
  4743  000468  90D8               	bcf	status,0,c
  4744  00046A  0100               	movlb	0	; () banked
  4745  00046C  377B               	rlcf	??_CANSetFilter& (0+255),f,b
  4746  00046E  377C               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  4747  000470  377D               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  4748  000472  377E               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  4749  000474  2EE8               	decfsz	wreg,f,c
  4750  000476  D7F8               	goto	u2615
  4751  000478  C07B  F080         	movff	??_CANSetFilter,CANSetFilter@tamp
  4752  00047C  C07C  F081         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4753  000480  C07D  F082         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4754  000484  C07E  F083         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4755                           
  4756                           ; BSR set to: 0
  4757                           ;inc\CANlib.h: 801: RXF3SIDL = (unsigned char) tamp;
  4758  000488  C080  FF0D         	movff	CANSetFilter@tamp,3853	;volatile
  4759  00048C                     l2748:
  4760                           
  4761                           ; BSR set to: 0
  4762                           ;inc\CANlib.h: 802: }
  4763                           ;inc\CANlib.h: 804: if ((numBuffer ==CAN_FILTER_B2_F3) && (type == CAN_CONFIG_STD_MSG))
  4764  00048C  0E04               	movlw	4
  4765  00048E  0100               	movlb	0	; () banked
  4766  000490  197F               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  4767  000492  A4D8               	btfss	status,2,c
  4768  000494  D058               	goto	l2766
  4769                           
  4770                           ; BSR set to: 0
  4771  000496  0100               	movlb	0	; () banked
  4772  000498  297A               	incf	CANSetFilter@type& (0+255),w,b
  4773  00049A  A4D8               	btfss	status,2,c
  4774  00049C  D054               	goto	l2766
  4775                           
  4776                           ; BSR set to: 0
  4777                           ;inc\CANlib.h: 805: {
  4778                           ;inc\CANlib.h: 806: RXF4SIDLbits.EXIDEN = 0x00;
  4779  00049E  010F               	movlb	15	; () banked
  4780  0004A0  9711               	bcf	17,3,b	;volatile
  4781                           
  4782                           ; BSR set to: 15
  4783                           ;inc\CANlib.h: 808: tamp = (filter >> 3);
  4784  0004A2  C076  F07B         	movff	CANSetFilter@filter,??_CANSetFilter
  4785  0004A6  C077  F07C         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  4786  0004AA  C078  F07D         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  4787  0004AE  C079  F07E         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  4788  0004B2  0E04               	movlw	4
  4789  0004B4  D006               	goto	u2640
  4790  0004B6                     u2645:
  4791  0004B6  0100               	movlb	0	; () banked
  4792  0004B8  90D8               	bcf	status,0,c
  4793  0004BA  337E               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  4794  0004BC  337D               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  4795  0004BE  337C               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  4796  0004C0  337B               	rrcf	??_CANSetFilter& (0+255),f,b
  4797  0004C2                     u2640:
  4798  0004C2  2EE8               	decfsz	wreg,f,c
  4799  0004C4  D7F8               	goto	u2645
  4800  0004C6  C07B  F080         	movff	??_CANSetFilter,CANSetFilter@tamp
  4801  0004CA  C07C  F081         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4802  0004CE  C07D  F082         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4803  0004D2  C07E  F083         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4804                           
  4805                           ; BSR set to: 0
  4806                           ;inc\CANlib.h: 809: tamp = tamp & 0x000000FF;
  4807  0004D6  0100               	movlb	0	; () banked
  4808  0004D8  5180               	movf	CANSetFilter@tamp& (0+255),w,b
  4809  0004DA  0100               	movlb	0	; () banked
  4810  0004DC  6F80               	movwf	CANSetFilter@tamp& (0+255),b
  4811  0004DE  6B81               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4812  0004E0  6B82               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4813  0004E2  6B83               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4814                           
  4815                           ; BSR set to: 0
  4816                           ;inc\CANlib.h: 810: RXF4SIDH = (unsigned char) tamp;
  4817  0004E4  C080  FF10         	movff	CANSetFilter@tamp,3856	;volatile
  4818                           
  4819                           ; BSR set to: 0
  4820                           ;inc\CANlib.h: 812: tamp = filter & 0x00000007;
  4821  0004E8  0E07               	movlw	7
  4822  0004EA  0100               	movlb	0	; () banked
  4823  0004EC  1576               	andwf	CANSetFilter@filter& (0+255),w,b
  4824  0004EE  0100               	movlb	0	; () banked
  4825  0004F0  6F80               	movwf	CANSetFilter@tamp& (0+255),b
  4826  0004F2  0E00               	movlw	0
  4827  0004F4  0100               	movlb	0	; () banked
  4828  0004F6  1577               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  4829  0004F8  0100               	movlb	0	; () banked
  4830  0004FA  6F81               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  4831  0004FC  0E00               	movlw	0
  4832  0004FE  0100               	movlb	0	; () banked
  4833  000500  1578               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  4834  000502  0100               	movlb	0	; () banked
  4835  000504  6F82               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  4836  000506  0E00               	movlw	0
  4837  000508  0100               	movlb	0	; () banked
  4838  00050A  1579               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  4839  00050C  0100               	movlb	0	; () banked
  4840  00050E  6F83               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  4841                           
  4842                           ; BSR set to: 0
  4843                           ;inc\CANlib.h: 813: tamp = tamp << 5;
  4844  000510  C080  F07B         	movff	CANSetFilter@tamp,??_CANSetFilter
  4845  000514  C081  F07C         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  4846  000518  C082  F07D         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  4847  00051C  C083  F07E         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  4848  000520  0E05               	movlw	5
  4849  000522                     u2655:
  4850  000522  90D8               	bcf	status,0,c
  4851  000524  0100               	movlb	0	; () banked
  4852  000526  377B               	rlcf	??_CANSetFilter& (0+255),f,b
  4853  000528  377C               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  4854  00052A  377D               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  4855  00052C  377E               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  4856  00052E  2EE8               	decfsz	wreg,f,c
  4857  000530  D7F8               	goto	u2655
  4858  000532  C07B  F080         	movff	??_CANSetFilter,CANSetFilter@tamp
  4859  000536  C07C  F081         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4860  00053A  C07D  F082         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4861  00053E  C07E  F083         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4862                           
  4863                           ; BSR set to: 0
  4864                           ;inc\CANlib.h: 814: RXF4SIDL = (unsigned char) tamp;
  4865  000542  C080  FF11         	movff	CANSetFilter@tamp,3857	;volatile
  4866  000546                     l2766:
  4867                           
  4868                           ; BSR set to: 0
  4869                           ;inc\CANlib.h: 815: }
  4870                           ;inc\CANlib.h: 817: if ((numBuffer ==CAN_FILTER_B2_F4) && (type == CAN_CONFIG_STD_MSG))
  4871  000546  0E05               	movlw	5
  4872  000548  0100               	movlb	0	; () banked
  4873  00054A  197F               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  4874  00054C  A4D8               	btfss	status,2,c
  4875  00054E  D058               	goto	l2784
  4876                           
  4877                           ; BSR set to: 0
  4878  000550  0100               	movlb	0	; () banked
  4879  000552  297A               	incf	CANSetFilter@type& (0+255),w,b
  4880  000554  A4D8               	btfss	status,2,c
  4881  000556  D054               	goto	l2784
  4882                           
  4883                           ; BSR set to: 0
  4884                           ;inc\CANlib.h: 818: {
  4885                           ;inc\CANlib.h: 819: RXF5SIDLbits.EXIDEN = 0x00;
  4886  000558  010F               	movlb	15	; () banked
  4887  00055A  9715               	bcf	21,3,b	;volatile
  4888                           
  4889                           ; BSR set to: 15
  4890                           ;inc\CANlib.h: 821: tamp = (filter >> 3);
  4891  00055C  C076  F07B         	movff	CANSetFilter@filter,??_CANSetFilter
  4892  000560  C077  F07C         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  4893  000564  C078  F07D         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  4894  000568  C079  F07E         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  4895  00056C  0E04               	movlw	4
  4896  00056E  D006               	goto	u2680
  4897  000570                     u2685:
  4898  000570  0100               	movlb	0	; () banked
  4899  000572  90D8               	bcf	status,0,c
  4900  000574  337E               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  4901  000576  337D               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  4902  000578  337C               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  4903  00057A  337B               	rrcf	??_CANSetFilter& (0+255),f,b
  4904  00057C                     u2680:
  4905  00057C  2EE8               	decfsz	wreg,f,c
  4906  00057E  D7F8               	goto	u2685
  4907  000580  C07B  F080         	movff	??_CANSetFilter,CANSetFilter@tamp
  4908  000584  C07C  F081         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4909  000588  C07D  F082         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4910  00058C  C07E  F083         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4911                           
  4912                           ; BSR set to: 0
  4913                           ;inc\CANlib.h: 822: tamp = tamp & 0x000000FF;
  4914  000590  0100               	movlb	0	; () banked
  4915  000592  5180               	movf	CANSetFilter@tamp& (0+255),w,b
  4916  000594  0100               	movlb	0	; () banked
  4917  000596  6F80               	movwf	CANSetFilter@tamp& (0+255),b
  4918  000598  6B81               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4919  00059A  6B82               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4920  00059C  6B83               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4921                           
  4922                           ; BSR set to: 0
  4923                           ;inc\CANlib.h: 823: RXF5SIDH = (unsigned char) tamp;
  4924  00059E  C080  FF14         	movff	CANSetFilter@tamp,3860	;volatile
  4925                           
  4926                           ; BSR set to: 0
  4927                           ;inc\CANlib.h: 825: tamp = filter & 0x00000007;
  4928  0005A2  0E07               	movlw	7
  4929  0005A4  0100               	movlb	0	; () banked
  4930  0005A6  1576               	andwf	CANSetFilter@filter& (0+255),w,b
  4931  0005A8  0100               	movlb	0	; () banked
  4932  0005AA  6F80               	movwf	CANSetFilter@tamp& (0+255),b
  4933  0005AC  0E00               	movlw	0
  4934  0005AE  0100               	movlb	0	; () banked
  4935  0005B0  1577               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  4936  0005B2  0100               	movlb	0	; () banked
  4937  0005B4  6F81               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  4938  0005B6  0E00               	movlw	0
  4939  0005B8  0100               	movlb	0	; () banked
  4940  0005BA  1578               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  4941  0005BC  0100               	movlb	0	; () banked
  4942  0005BE  6F82               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  4943  0005C0  0E00               	movlw	0
  4944  0005C2  0100               	movlb	0	; () banked
  4945  0005C4  1579               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  4946  0005C6  0100               	movlb	0	; () banked
  4947  0005C8  6F83               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  4948                           
  4949                           ; BSR set to: 0
  4950                           ;inc\CANlib.h: 826: tamp = tamp << 5;
  4951  0005CA  C080  F07B         	movff	CANSetFilter@tamp,??_CANSetFilter
  4952  0005CE  C081  F07C         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  4953  0005D2  C082  F07D         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  4954  0005D6  C083  F07E         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  4955  0005DA  0E05               	movlw	5
  4956  0005DC                     u2695:
  4957  0005DC  90D8               	bcf	status,0,c
  4958  0005DE  0100               	movlb	0	; () banked
  4959  0005E0  377B               	rlcf	??_CANSetFilter& (0+255),f,b
  4960  0005E2  377C               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  4961  0005E4  377D               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  4962  0005E6  377E               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  4963  0005E8  2EE8               	decfsz	wreg,f,c
  4964  0005EA  D7F8               	goto	u2695
  4965  0005EC  C07B  F080         	movff	??_CANSetFilter,CANSetFilter@tamp
  4966  0005F0  C07C  F081         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4967  0005F4  C07D  F082         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4968  0005F8  C07E  F083         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4969                           
  4970                           ; BSR set to: 0
  4971                           ;inc\CANlib.h: 827: RXF5SIDL = (unsigned char) tamp;
  4972  0005FC  C080  FF15         	movff	CANSetFilter@tamp,3861	;volatile
  4973  000600                     l2784:
  4974                           
  4975                           ; BSR set to: 0
  4976                           ;inc\CANlib.h: 828: }
  4977                           ;inc\CANlib.h: 831: if ((numBuffer ==CAN_FILTER_B1_F1) && (type == CAN_CONFIG_XTD_MSG))
  4978  000600  0100               	movlb	0	; () banked
  4979  000602  517F               	movf	CANSetFilter@numBuffer& (0+255),w,b
  4980  000604  0100               	movlb	0	; () banked
  4981  000606  A4D8               	btfss	status,2,c
  4982  000608  D089               	goto	l2818
  4983                           
  4984                           ; BSR set to: 0
  4985  00060A  0EF7               	movlw	247
  4986  00060C  0100               	movlb	0	; () banked
  4987  00060E  197A               	xorwf	CANSetFilter@type& (0+255),w,b
  4988  000610  A4D8               	btfss	status,2,c
  4989  000612  D084               	goto	l2818
  4990                           
  4991                           ; BSR set to: 0
  4992                           ;inc\CANlib.h: 832: {
  4993                           ;inc\CANlib.h: 833: RXF0SIDLbits.EXIDEN = 0x01;
  4994  000614  010F               	movlb	15	; () banked
  4995  000616  8701               	bsf	1,3,b	;volatile
  4996                           
  4997                           ; BSR set to: 15
  4998                           ;inc\CANlib.h: 835: tamp = filter & 0x000000FF;
  4999  000618  0100               	movlb	0	; () banked
  5000  00061A  5176               	movf	CANSetFilter@filter& (0+255),w,b
  5001  00061C  0100               	movlb	0	; () banked
  5002  00061E  6F80               	movwf	CANSetFilter@tamp& (0+255),b
  5003  000620  6B81               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5004  000622  6B82               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5005  000624  6B83               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5006                           
  5007                           ; BSR set to: 0
  5008                           ;inc\CANlib.h: 836: RXF0EIDL = (unsigned char) tamp;
  5009  000626  C080  FF03         	movff	CANSetFilter@tamp,3843	;volatile
  5010                           
  5011                           ; BSR set to: 0
  5012                           ;inc\CANlib.h: 838: tamp = filter & 0x0000FF00;
  5013  00062A  0E00               	movlw	0
  5014  00062C  0100               	movlb	0	; () banked
  5015  00062E  1576               	andwf	CANSetFilter@filter& (0+255),w,b
  5016  000630  0100               	movlb	0	; () banked
  5017  000632  6F80               	movwf	CANSetFilter@tamp& (0+255),b
  5018  000634  0EFF               	movlw	255
  5019  000636  0100               	movlb	0	; () banked
  5020  000638  1577               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  5021  00063A  0100               	movlb	0	; () banked
  5022  00063C  6F81               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  5023  00063E  0E00               	movlw	0
  5024  000640  0100               	movlb	0	; () banked
  5025  000642  1578               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  5026  000644  0100               	movlb	0	; () banked
  5027  000646  6F82               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  5028  000648  0E00               	movlw	0
  5029  00064A  0100               	movlb	0	; () banked
  5030  00064C  1579               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  5031  00064E  0100               	movlb	0	; () banked
  5032  000650  6F83               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  5033                           
  5034                           ; BSR set to: 0
  5035                           ;inc\CANlib.h: 839: tamp = tamp >> 8;
  5036  000652  C080  F07B         	movff	CANSetFilter@tamp,??_CANSetFilter
  5037  000656  C081  F07C         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  5038  00065A  C082  F07D         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  5039  00065E  C083  F07E         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  5040  000662  C07C  F07B         	movff	??_CANSetFilter+1,??_CANSetFilter
  5041  000666  C07D  F07C         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  5042  00066A  C07E  F07D         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  5043  00066E  0100               	movlb	0	; () banked
  5044  000670  6B7E               	clrf	(??_CANSetFilter+3)& (0+255),b
  5045  000672  C07B  F080         	movff	??_CANSetFilter,CANSetFilter@tamp
  5046  000676  C07C  F081         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5047  00067A  C07D  F082         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5048  00067E  C07E  F083         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5049                           
  5050                           ; BSR set to: 0
  5051                           ;inc\CANlib.h: 840: RXF0EIDH = (unsigned char) tamp;
  5052  000682  C080  FF02         	movff	CANSetFilter@tamp,3842	;volatile
  5053                           
  5054                           ; BSR set to: 0
  5055                           ;inc\CANlib.h: 842: if (filter & 0x00010000)
  5056  000686  0100               	movlb	0	; () banked
  5057  000688  A178               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
  5058  00068A  D003               	goto	l457
  5059                           
  5060                           ; BSR set to: 0
  5061                           ;inc\CANlib.h: 843: RXF0SIDLbits.EID16 = 0x01;
  5062  00068C  010F               	movlb	15	; () banked
  5063  00068E  8101               	bsf	1,0,b	;volatile
  5064  000690  D002               	goto	l458
  5065  000692                     l457:
  5066                           
  5067                           ; BSR set to: 0
  5068                           ;inc\CANlib.h: 844: else
  5069                           ;inc\CANlib.h: 845: RXF0SIDLbits.EID16 = 0x00;
  5070  000692  010F               	movlb	15	; () banked
  5071  000694  9101               	bcf	1,0,b	;volatile
  5072  000696                     l458:
  5073                           
  5074                           ; BSR set to: 15
  5075                           ;inc\CANlib.h: 847: if (filter & 0x00020000)
  5076  000696  0100               	movlb	0	; () banked
  5077  000698  A378               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
  5078  00069A  D003               	goto	l459
  5079                           
  5080                           ; BSR set to: 0
  5081                           ;inc\CANlib.h: 848: RXF0SIDLbits.EID17 = 0x01;
  5082  00069C  010F               	movlb	15	; () banked
  5083  00069E  8301               	bsf	1,1,b	;volatile
  5084  0006A0  D002               	goto	l460
  5085  0006A2                     l459:
  5086                           
  5087                           ; BSR set to: 0
  5088                           ;inc\CANlib.h: 849: else
  5089                           ;inc\CANlib.h: 850: RXF0SIDLbits.EID17 = 0x00;
  5090  0006A2  010F               	movlb	15	; () banked
  5091  0006A4  9301               	bcf	1,1,b	;volatile
  5092  0006A6                     l460:
  5093                           
  5094                           ; BSR set to: 15
  5095                           ;inc\CANlib.h: 852: if (filter & 0x00040000)
  5096  0006A6  0100               	movlb	0	; () banked
  5097  0006A8  A578               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
  5098  0006AA  D003               	goto	l461
  5099                           
  5100                           ; BSR set to: 0
  5101                           ;inc\CANlib.h: 853: RXF0SIDLbits.SID0 = 0x01;
  5102  0006AC  010F               	movlb	15	; () banked
  5103  0006AE  8B01               	bsf	1,5,b	;volatile
  5104  0006B0  D002               	goto	l462
  5105  0006B2                     l461:
  5106                           
  5107                           ; BSR set to: 0
  5108                           ;inc\CANlib.h: 854: else
  5109                           ;inc\CANlib.h: 855: RXF0SIDLbits.SID0 = 0x00;
  5110  0006B2  010F               	movlb	15	; () banked
  5111  0006B4  9B01               	bcf	1,5,b	;volatile
  5112  0006B6                     l462:
  5113                           
  5114                           ; BSR set to: 15
  5115                           ;inc\CANlib.h: 857: if (filter & 0x00080000)
  5116  0006B6  0100               	movlb	0	; () banked
  5117  0006B8  A778               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
  5118  0006BA  D003               	goto	l463
  5119                           
  5120                           ; BSR set to: 0
  5121                           ;inc\CANlib.h: 858: RXF0SIDLbits.SID1 = 0x01;
  5122  0006BC  010F               	movlb	15	; () banked
  5123  0006BE  8D01               	bsf	1,6,b	;volatile
  5124  0006C0  D002               	goto	l464
  5125  0006C2                     l463:
  5126                           
  5127                           ; BSR set to: 0
  5128                           ;inc\CANlib.h: 859: else
  5129                           ;inc\CANlib.h: 860: RXF0SIDLbits.SID1 = 0x00;
  5130  0006C2  010F               	movlb	15	; () banked
  5131  0006C4  9D01               	bcf	1,6,b	;volatile
  5132  0006C6                     l464:
  5133                           
  5134                           ; BSR set to: 15
  5135                           ;inc\CANlib.h: 862: if (filter & 0x00100000)
  5136  0006C6  0100               	movlb	0	; () banked
  5137  0006C8  A978               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
  5138  0006CA  D003               	goto	l465
  5139                           
  5140                           ; BSR set to: 0
  5141                           ;inc\CANlib.h: 863: RXF0SIDLbits.SID2 = 0x01 ;
  5142  0006CC  010F               	movlb	15	; () banked
  5143  0006CE  8F01               	bsf	1,7,b	;volatile
  5144  0006D0  D002               	goto	l2812
  5145  0006D2                     l465:
  5146                           
  5147                           ; BSR set to: 0
  5148                           ;inc\CANlib.h: 864: else
  5149                           ;inc\CANlib.h: 865: RXF0SIDLbits.SID2 = 0x00 ;
  5150  0006D2  010F               	movlb	15	; () banked
  5151  0006D4  9F01               	bcf	1,7,b	;volatile
  5152  0006D6                     l2812:
  5153                           
  5154                           ; BSR set to: 15
  5155                           ;inc\CANlib.h: 867: tamp = (filter >> 21);
  5156  0006D6  C076  F07B         	movff	CANSetFilter@filter,??_CANSetFilter
  5157  0006DA  C077  F07C         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  5158  0006DE  C078  F07D         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  5159  0006E2  C079  F07E         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  5160  0006E6  0E16               	movlw	22
  5161  0006E8  D006               	goto	u2770
  5162  0006EA                     u2775:
  5163  0006EA  0100               	movlb	0	; () banked
  5164  0006EC  90D8               	bcf	status,0,c
  5165  0006EE  337E               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  5166  0006F0  337D               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  5167  0006F2  337C               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  5168  0006F4  337B               	rrcf	??_CANSetFilter& (0+255),f,b
  5169  0006F6                     u2770:
  5170  0006F6  2EE8               	decfsz	wreg,f,c
  5171  0006F8  D7F8               	goto	u2775
  5172  0006FA  C07B  F080         	movff	??_CANSetFilter,CANSetFilter@tamp
  5173  0006FE  C07C  F081         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5174  000702  C07D  F082         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5175  000706  C07E  F083         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5176                           
  5177                           ; BSR set to: 0
  5178                           ;inc\CANlib.h: 868: tamp = tamp & 0x000000FF;
  5179  00070A  0100               	movlb	0	; () banked
  5180  00070C  5180               	movf	CANSetFilter@tamp& (0+255),w,b
  5181  00070E  0100               	movlb	0	; () banked
  5182  000710  6F80               	movwf	CANSetFilter@tamp& (0+255),b
  5183  000712  6B81               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5184  000714  6B82               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5185  000716  6B83               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5186                           
  5187                           ; BSR set to: 0
  5188                           ;inc\CANlib.h: 869: RXF0SIDH = (unsigned char) tamp;
  5189  000718  C080  FF00         	movff	CANSetFilter@tamp,3840	;volatile
  5190  00071C                     l2818:
  5191                           
  5192                           ; BSR set to: 0
  5193                           ;inc\CANlib.h: 870: }
  5194                           ;inc\CANlib.h: 872: if ((numBuffer ==CAN_FILTER_B1_F2) && (type == CAN_CONFIG_XTD_MSG))
  5195  00071C  0100               	movlb	0	; () banked
  5196  00071E  057F               	decf	CANSetFilter@numBuffer& (0+255),w,b
  5197  000720  A4D8               	btfss	status,2,c
  5198  000722  D089               	goto	l2852
  5199                           
  5200                           ; BSR set to: 0
  5201  000724  0EF7               	movlw	247
  5202  000726  0100               	movlb	0	; () banked
  5203  000728  197A               	xorwf	CANSetFilter@type& (0+255),w,b
  5204  00072A  A4D8               	btfss	status,2,c
  5205  00072C  D084               	goto	l2852
  5206                           
  5207                           ; BSR set to: 0
  5208                           ;inc\CANlib.h: 873: {
  5209                           ;inc\CANlib.h: 874: RXF1SIDLbits.EXIDEN = 0x01;
  5210  00072E  010F               	movlb	15	; () banked
  5211  000730  8705               	bsf	5,3,b	;volatile
  5212                           
  5213                           ; BSR set to: 15
  5214                           ;inc\CANlib.h: 876: tamp = filter & 0x000000FF;
  5215  000732  0100               	movlb	0	; () banked
  5216  000734  5176               	movf	CANSetFilter@filter& (0+255),w,b
  5217  000736  0100               	movlb	0	; () banked
  5218  000738  6F80               	movwf	CANSetFilter@tamp& (0+255),b
  5219  00073A  6B81               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5220  00073C  6B82               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5221  00073E  6B83               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5222                           
  5223                           ; BSR set to: 0
  5224                           ;inc\CANlib.h: 877: RXF1EIDL = (unsigned char) tamp;
  5225  000740  C080  FF07         	movff	CANSetFilter@tamp,3847	;volatile
  5226                           
  5227                           ; BSR set to: 0
  5228                           ;inc\CANlib.h: 879: tamp = filter & 0x0000FF00;
  5229  000744  0E00               	movlw	0
  5230  000746  0100               	movlb	0	; () banked
  5231  000748  1576               	andwf	CANSetFilter@filter& (0+255),w,b
  5232  00074A  0100               	movlb	0	; () banked
  5233  00074C  6F80               	movwf	CANSetFilter@tamp& (0+255),b
  5234  00074E  0EFF               	movlw	255
  5235  000750  0100               	movlb	0	; () banked
  5236  000752  1577               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  5237  000754  0100               	movlb	0	; () banked
  5238  000756  6F81               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  5239  000758  0E00               	movlw	0
  5240  00075A  0100               	movlb	0	; () banked
  5241  00075C  1578               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  5242  00075E  0100               	movlb	0	; () banked
  5243  000760  6F82               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  5244  000762  0E00               	movlw	0
  5245  000764  0100               	movlb	0	; () banked
  5246  000766  1579               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  5247  000768  0100               	movlb	0	; () banked
  5248  00076A  6F83               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  5249                           
  5250                           ; BSR set to: 0
  5251                           ;inc\CANlib.h: 880: tamp = tamp >> 8;
  5252  00076C  C080  F07B         	movff	CANSetFilter@tamp,??_CANSetFilter
  5253  000770  C081  F07C         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  5254  000774  C082  F07D         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  5255  000778  C083  F07E         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  5256  00077C  C07C  F07B         	movff	??_CANSetFilter+1,??_CANSetFilter
  5257  000780  C07D  F07C         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  5258  000784  C07E  F07D         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  5259  000788  0100               	movlb	0	; () banked
  5260  00078A  6B7E               	clrf	(??_CANSetFilter+3)& (0+255),b
  5261  00078C  C07B  F080         	movff	??_CANSetFilter,CANSetFilter@tamp
  5262  000790  C07C  F081         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5263  000794  C07D  F082         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5264  000798  C07E  F083         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5265                           
  5266                           ; BSR set to: 0
  5267                           ;inc\CANlib.h: 881: RXF1EIDH = (unsigned char) tamp;
  5268  00079C  C080  FF06         	movff	CANSetFilter@tamp,3846	;volatile
  5269                           
  5270                           ; BSR set to: 0
  5271                           ;inc\CANlib.h: 883: if (filter & 0x00010000)
  5272  0007A0  0100               	movlb	0	; () banked
  5273  0007A2  A178               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
  5274  0007A4  D003               	goto	l468
  5275                           
  5276                           ; BSR set to: 0
  5277                           ;inc\CANlib.h: 884: RXF1SIDLbits.EID16 = 0x01;
  5278  0007A6  010F               	movlb	15	; () banked
  5279  0007A8  8105               	bsf	5,0,b	;volatile
  5280  0007AA  D002               	goto	l469
  5281  0007AC                     l468:
  5282                           
  5283                           ; BSR set to: 0
  5284                           ;inc\CANlib.h: 885: else
  5285                           ;inc\CANlib.h: 886: RXF1SIDLbits.EID16 = 0x00;
  5286  0007AC  010F               	movlb	15	; () banked
  5287  0007AE  9105               	bcf	5,0,b	;volatile
  5288  0007B0                     l469:
  5289                           
  5290                           ; BSR set to: 15
  5291                           ;inc\CANlib.h: 888: if (filter & 0x00020000)
  5292  0007B0  0100               	movlb	0	; () banked
  5293  0007B2  A378               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
  5294  0007B4  D003               	goto	l470
  5295                           
  5296                           ; BSR set to: 0
  5297                           ;inc\CANlib.h: 889: RXF1SIDLbits.EID17 = 0x01;
  5298  0007B6  010F               	movlb	15	; () banked
  5299  0007B8  8305               	bsf	5,1,b	;volatile
  5300  0007BA  D002               	goto	l471
  5301  0007BC                     l470:
  5302                           
  5303                           ; BSR set to: 0
  5304                           ;inc\CANlib.h: 890: else
  5305                           ;inc\CANlib.h: 891: RXF1SIDLbits.EID17 = 0x00;
  5306  0007BC  010F               	movlb	15	; () banked
  5307  0007BE  9305               	bcf	5,1,b	;volatile
  5308  0007C0                     l471:
  5309                           
  5310                           ; BSR set to: 15
  5311                           ;inc\CANlib.h: 893: if (filter & 0x00040000)
  5312  0007C0  0100               	movlb	0	; () banked
  5313  0007C2  A578               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
  5314  0007C4  D003               	goto	l472
  5315                           
  5316                           ; BSR set to: 0
  5317                           ;inc\CANlib.h: 894: RXF1SIDLbits.SID0 = 0x01;
  5318  0007C6  010F               	movlb	15	; () banked
  5319  0007C8  8B05               	bsf	5,5,b	;volatile
  5320  0007CA  D002               	goto	l473
  5321  0007CC                     l472:
  5322                           
  5323                           ; BSR set to: 0
  5324                           ;inc\CANlib.h: 895: else
  5325                           ;inc\CANlib.h: 896: RXF1SIDLbits.SID0 = 0x00;
  5326  0007CC  010F               	movlb	15	; () banked
  5327  0007CE  9B05               	bcf	5,5,b	;volatile
  5328  0007D0                     l473:
  5329                           
  5330                           ; BSR set to: 15
  5331                           ;inc\CANlib.h: 898: if (filter & 0x00080000)
  5332  0007D0  0100               	movlb	0	; () banked
  5333  0007D2  A778               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
  5334  0007D4  D003               	goto	l474
  5335                           
  5336                           ; BSR set to: 0
  5337                           ;inc\CANlib.h: 899: RXF1SIDLbits.SID1 = 0x01;
  5338  0007D6  010F               	movlb	15	; () banked
  5339  0007D8  8D05               	bsf	5,6,b	;volatile
  5340  0007DA  D002               	goto	l475
  5341  0007DC                     l474:
  5342                           
  5343                           ; BSR set to: 0
  5344                           ;inc\CANlib.h: 900: else
  5345                           ;inc\CANlib.h: 901: RXF1SIDLbits.SID1 = 0x00;
  5346  0007DC  010F               	movlb	15	; () banked
  5347  0007DE  9D05               	bcf	5,6,b	;volatile
  5348  0007E0                     l475:
  5349                           
  5350                           ; BSR set to: 15
  5351                           ;inc\CANlib.h: 903: if (filter & 0x00100000)
  5352  0007E0  0100               	movlb	0	; () banked
  5353  0007E2  A978               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
  5354  0007E4  D003               	goto	l476
  5355                           
  5356                           ; BSR set to: 0
  5357                           ;inc\CANlib.h: 904: RXF1SIDLbits.SID2 = 0x01 ;
  5358  0007E6  010F               	movlb	15	; () banked
  5359  0007E8  8F05               	bsf	5,7,b	;volatile
  5360  0007EA  D002               	goto	l2846
  5361  0007EC                     l476:
  5362                           
  5363                           ; BSR set to: 0
  5364                           ;inc\CANlib.h: 905: else
  5365                           ;inc\CANlib.h: 906: RXF1SIDLbits.SID2 = 0x00 ;
  5366  0007EC  010F               	movlb	15	; () banked
  5367  0007EE  9F05               	bcf	5,7,b	;volatile
  5368  0007F0                     l2846:
  5369                           
  5370                           ; BSR set to: 15
  5371                           ;inc\CANlib.h: 908: tamp = (filter >> 21);
  5372  0007F0  C076  F07B         	movff	CANSetFilter@filter,??_CANSetFilter
  5373  0007F4  C077  F07C         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  5374  0007F8  C078  F07D         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  5375  0007FC  C079  F07E         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  5376  000800  0E16               	movlw	22
  5377  000802  D006               	goto	u2850
  5378  000804                     u2855:
  5379  000804  0100               	movlb	0	; () banked
  5380  000806  90D8               	bcf	status,0,c
  5381  000808  337E               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  5382  00080A  337D               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  5383  00080C  337C               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  5384  00080E  337B               	rrcf	??_CANSetFilter& (0+255),f,b
  5385  000810                     u2850:
  5386  000810  2EE8               	decfsz	wreg,f,c
  5387  000812  D7F8               	goto	u2855
  5388  000814  C07B  F080         	movff	??_CANSetFilter,CANSetFilter@tamp
  5389  000818  C07C  F081         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5390  00081C  C07D  F082         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5391  000820  C07E  F083         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5392                           
  5393                           ; BSR set to: 0
  5394                           ;inc\CANlib.h: 909: tamp = tamp & 0x000000FF;
  5395  000824  0100               	movlb	0	; () banked
  5396  000826  5180               	movf	CANSetFilter@tamp& (0+255),w,b
  5397  000828  0100               	movlb	0	; () banked
  5398  00082A  6F80               	movwf	CANSetFilter@tamp& (0+255),b
  5399  00082C  6B81               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5400  00082E  6B82               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5401  000830  6B83               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5402                           
  5403                           ; BSR set to: 0
  5404                           ;inc\CANlib.h: 910: RXF1SIDH = (unsigned char) tamp;
  5405  000832  C080  FF04         	movff	CANSetFilter@tamp,3844	;volatile
  5406  000836                     l2852:
  5407                           
  5408                           ; BSR set to: 0
  5409                           ;inc\CANlib.h: 911: }
  5410                           ;inc\CANlib.h: 914: if ((numBuffer ==CAN_FILTER_B2_F1) && (type == CAN_CONFIG_XTD_MSG))
  5411  000836  0E02               	movlw	2
  5412  000838  0100               	movlb	0	; () banked
  5413  00083A  197F               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  5414  00083C  A4D8               	btfss	status,2,c
  5415  00083E  D089               	goto	l2886
  5416                           
  5417                           ; BSR set to: 0
  5418  000840  0EF7               	movlw	247
  5419  000842  0100               	movlb	0	; () banked
  5420  000844  197A               	xorwf	CANSetFilter@type& (0+255),w,b
  5421  000846  A4D8               	btfss	status,2,c
  5422  000848  D084               	goto	l2886
  5423                           
  5424                           ; BSR set to: 0
  5425                           ;inc\CANlib.h: 915: {
  5426                           ;inc\CANlib.h: 916: RXF2SIDLbits.EXIDEN = 0x01;
  5427  00084A  010F               	movlb	15	; () banked
  5428  00084C  8709               	bsf	9,3,b	;volatile
  5429                           
  5430                           ; BSR set to: 15
  5431                           ;inc\CANlib.h: 918: tamp = filter & 0x000000FF;
  5432  00084E  0100               	movlb	0	; () banked
  5433  000850  5176               	movf	CANSetFilter@filter& (0+255),w,b
  5434  000852  0100               	movlb	0	; () banked
  5435  000854  6F80               	movwf	CANSetFilter@tamp& (0+255),b
  5436  000856  6B81               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5437  000858  6B82               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5438  00085A  6B83               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5439                           
  5440                           ; BSR set to: 0
  5441                           ;inc\CANlib.h: 919: RXF2EIDL = (unsigned char) tamp;
  5442  00085C  C080  FF0B         	movff	CANSetFilter@tamp,3851	;volatile
  5443                           
  5444                           ; BSR set to: 0
  5445                           ;inc\CANlib.h: 921: tamp = filter & 0x0000FF00;
  5446  000860  0E00               	movlw	0
  5447  000862  0100               	movlb	0	; () banked
  5448  000864  1576               	andwf	CANSetFilter@filter& (0+255),w,b
  5449  000866  0100               	movlb	0	; () banked
  5450  000868  6F80               	movwf	CANSetFilter@tamp& (0+255),b
  5451  00086A  0EFF               	movlw	255
  5452  00086C  0100               	movlb	0	; () banked
  5453  00086E  1577               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  5454  000870  0100               	movlb	0	; () banked
  5455  000872  6F81               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  5456  000874  0E00               	movlw	0
  5457  000876  0100               	movlb	0	; () banked
  5458  000878  1578               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  5459  00087A  0100               	movlb	0	; () banked
  5460  00087C  6F82               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  5461  00087E  0E00               	movlw	0
  5462  000880  0100               	movlb	0	; () banked
  5463  000882  1579               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  5464  000884  0100               	movlb	0	; () banked
  5465  000886  6F83               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  5466                           
  5467                           ; BSR set to: 0
  5468                           ;inc\CANlib.h: 922: tamp = tamp >> 8;
  5469  000888  C080  F07B         	movff	CANSetFilter@tamp,??_CANSetFilter
  5470  00088C  C081  F07C         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  5471  000890  C082  F07D         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  5472  000894  C083  F07E         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  5473  000898  C07C  F07B         	movff	??_CANSetFilter+1,??_CANSetFilter
  5474  00089C  C07D  F07C         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  5475  0008A0  C07E  F07D         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  5476  0008A4  0100               	movlb	0	; () banked
  5477  0008A6  6B7E               	clrf	(??_CANSetFilter+3)& (0+255),b
  5478  0008A8  C07B  F080         	movff	??_CANSetFilter,CANSetFilter@tamp
  5479  0008AC  C07C  F081         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5480  0008B0  C07D  F082         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5481  0008B4  C07E  F083         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5482                           
  5483                           ; BSR set to: 0
  5484                           ;inc\CANlib.h: 923: RXF2EIDH = (unsigned char) tamp;
  5485  0008B8  C080  FF0A         	movff	CANSetFilter@tamp,3850	;volatile
  5486                           
  5487                           ; BSR set to: 0
  5488                           ;inc\CANlib.h: 925: if (filter & 0x00010000)
  5489  0008BC  0100               	movlb	0	; () banked
  5490  0008BE  A178               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
  5491  0008C0  D003               	goto	l479
  5492                           
  5493                           ; BSR set to: 0
  5494                           ;inc\CANlib.h: 926: RXF2SIDLbits.EID16 = 0x01;
  5495  0008C2  010F               	movlb	15	; () banked
  5496  0008C4  8109               	bsf	9,0,b	;volatile
  5497  0008C6  D002               	goto	l480
  5498  0008C8                     l479:
  5499                           
  5500                           ; BSR set to: 0
  5501                           ;inc\CANlib.h: 927: else
  5502                           ;inc\CANlib.h: 928: RXF2SIDLbits.EID16 = 0x00;
  5503  0008C8  010F               	movlb	15	; () banked
  5504  0008CA  9109               	bcf	9,0,b	;volatile
  5505  0008CC                     l480:
  5506                           
  5507                           ; BSR set to: 15
  5508                           ;inc\CANlib.h: 930: if (filter & 0x00020000)
  5509  0008CC  0100               	movlb	0	; () banked
  5510  0008CE  A378               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
  5511  0008D0  D003               	goto	l481
  5512                           
  5513                           ; BSR set to: 0
  5514                           ;inc\CANlib.h: 931: RXF2SIDLbits.EID17 = 0x01;
  5515  0008D2  010F               	movlb	15	; () banked
  5516  0008D4  8309               	bsf	9,1,b	;volatile
  5517  0008D6  D002               	goto	l482
  5518  0008D8                     l481:
  5519                           
  5520                           ; BSR set to: 0
  5521                           ;inc\CANlib.h: 932: else
  5522                           ;inc\CANlib.h: 933: RXF2SIDLbits.EID17 = 0x00;
  5523  0008D8  010F               	movlb	15	; () banked
  5524  0008DA  9309               	bcf	9,1,b	;volatile
  5525  0008DC                     l482:
  5526                           
  5527                           ; BSR set to: 15
  5528                           ;inc\CANlib.h: 935: if (filter & 0x00040000)
  5529  0008DC  0100               	movlb	0	; () banked
  5530  0008DE  A578               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
  5531  0008E0  D003               	goto	l483
  5532                           
  5533                           ; BSR set to: 0
  5534                           ;inc\CANlib.h: 936: RXF2SIDLbits.SID0 = 0x01;
  5535  0008E2  010F               	movlb	15	; () banked
  5536  0008E4  8B09               	bsf	9,5,b	;volatile
  5537  0008E6  D002               	goto	l484
  5538  0008E8                     l483:
  5539                           
  5540                           ; BSR set to: 0
  5541                           ;inc\CANlib.h: 937: else
  5542                           ;inc\CANlib.h: 938: RXF2SIDLbits.SID0 = 0x00;
  5543  0008E8  010F               	movlb	15	; () banked
  5544  0008EA  9B09               	bcf	9,5,b	;volatile
  5545  0008EC                     l484:
  5546                           
  5547                           ; BSR set to: 15
  5548                           ;inc\CANlib.h: 940: if (filter & 0x00080000)
  5549  0008EC  0100               	movlb	0	; () banked
  5550  0008EE  A778               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
  5551  0008F0  D003               	goto	l485
  5552                           
  5553                           ; BSR set to: 0
  5554                           ;inc\CANlib.h: 941: RXF2SIDLbits.SID1 = 0x01;
  5555  0008F2  010F               	movlb	15	; () banked
  5556  0008F4  8D09               	bsf	9,6,b	;volatile
  5557  0008F6  D002               	goto	l486
  5558  0008F8                     l485:
  5559                           
  5560                           ; BSR set to: 0
  5561                           ;inc\CANlib.h: 942: else
  5562                           ;inc\CANlib.h: 943: RXF2SIDLbits.SID1 = 0x00;
  5563  0008F8  010F               	movlb	15	; () banked
  5564  0008FA  9D09               	bcf	9,6,b	;volatile
  5565  0008FC                     l486:
  5566                           
  5567                           ; BSR set to: 15
  5568                           ;inc\CANlib.h: 945: if (filter & 0x00100000)
  5569  0008FC  0100               	movlb	0	; () banked
  5570  0008FE  A978               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
  5571  000900  D003               	goto	l487
  5572                           
  5573                           ; BSR set to: 0
  5574                           ;inc\CANlib.h: 946: RXF2SIDLbits.SID2 = 0x01 ;
  5575  000902  010F               	movlb	15	; () banked
  5576  000904  8F09               	bsf	9,7,b	;volatile
  5577  000906  D002               	goto	l2880
  5578  000908                     l487:
  5579                           
  5580                           ; BSR set to: 0
  5581                           ;inc\CANlib.h: 947: else
  5582                           ;inc\CANlib.h: 948: RXF2SIDLbits.SID2 = 0x00 ;
  5583  000908  010F               	movlb	15	; () banked
  5584  00090A  9F09               	bcf	9,7,b	;volatile
  5585  00090C                     l2880:
  5586                           
  5587                           ; BSR set to: 15
  5588                           ;inc\CANlib.h: 950: tamp = (filter >> 21);
  5589  00090C  C076  F07B         	movff	CANSetFilter@filter,??_CANSetFilter
  5590  000910  C077  F07C         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  5591  000914  C078  F07D         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  5592  000918  C079  F07E         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  5593  00091C  0E16               	movlw	22
  5594  00091E  D006               	goto	u2930
  5595  000920                     u2935:
  5596  000920  0100               	movlb	0	; () banked
  5597  000922  90D8               	bcf	status,0,c
  5598  000924  337E               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  5599  000926  337D               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  5600  000928  337C               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  5601  00092A  337B               	rrcf	??_CANSetFilter& (0+255),f,b
  5602  00092C                     u2930:
  5603  00092C  2EE8               	decfsz	wreg,f,c
  5604  00092E  D7F8               	goto	u2935
  5605  000930  C07B  F080         	movff	??_CANSetFilter,CANSetFilter@tamp
  5606  000934  C07C  F081         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5607  000938  C07D  F082         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5608  00093C  C07E  F083         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5609                           
  5610                           ; BSR set to: 0
  5611                           ;inc\CANlib.h: 951: tamp = tamp & 0x000000FF;
  5612  000940  0100               	movlb	0	; () banked
  5613  000942  5180               	movf	CANSetFilter@tamp& (0+255),w,b
  5614  000944  0100               	movlb	0	; () banked
  5615  000946  6F80               	movwf	CANSetFilter@tamp& (0+255),b
  5616  000948  6B81               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5617  00094A  6B82               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5618  00094C  6B83               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5619                           
  5620                           ; BSR set to: 0
  5621                           ;inc\CANlib.h: 952: RXF2SIDH = (unsigned char) tamp;
  5622  00094E  C080  FF08         	movff	CANSetFilter@tamp,3848	;volatile
  5623  000952                     l2886:
  5624                           
  5625                           ; BSR set to: 0
  5626                           ;inc\CANlib.h: 953: }
  5627                           ;inc\CANlib.h: 955: if ((numBuffer ==CAN_FILTER_B2_F2) && (type == CAN_CONFIG_XTD_MSG))
  5628  000952  0E03               	movlw	3
  5629  000954  0100               	movlb	0	; () banked
  5630  000956  197F               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  5631  000958  A4D8               	btfss	status,2,c
  5632  00095A  D089               	goto	l2920
  5633                           
  5634                           ; BSR set to: 0
  5635  00095C  0EF7               	movlw	247
  5636  00095E  0100               	movlb	0	; () banked
  5637  000960  197A               	xorwf	CANSetFilter@type& (0+255),w,b
  5638  000962  A4D8               	btfss	status,2,c
  5639  000964  D084               	goto	l2920
  5640                           
  5641                           ; BSR set to: 0
  5642                           ;inc\CANlib.h: 956: {
  5643                           ;inc\CANlib.h: 957: RXF3SIDLbits.EXIDEN = 0x01;
  5644  000966  010F               	movlb	15	; () banked
  5645  000968  870D               	bsf	13,3,b	;volatile
  5646                           
  5647                           ; BSR set to: 15
  5648                           ;inc\CANlib.h: 959: tamp = filter & 0x000000FF;
  5649  00096A  0100               	movlb	0	; () banked
  5650  00096C  5176               	movf	CANSetFilter@filter& (0+255),w,b
  5651  00096E  0100               	movlb	0	; () banked
  5652  000970  6F80               	movwf	CANSetFilter@tamp& (0+255),b
  5653  000972  6B81               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5654  000974  6B82               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5655  000976  6B83               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5656                           
  5657                           ; BSR set to: 0
  5658                           ;inc\CANlib.h: 960: RXF3EIDL = (unsigned char) tamp;
  5659  000978  C080  FF0F         	movff	CANSetFilter@tamp,3855	;volatile
  5660                           
  5661                           ; BSR set to: 0
  5662                           ;inc\CANlib.h: 962: tamp = filter & 0x0000FF00;
  5663  00097C  0E00               	movlw	0
  5664  00097E  0100               	movlb	0	; () banked
  5665  000980  1576               	andwf	CANSetFilter@filter& (0+255),w,b
  5666  000982  0100               	movlb	0	; () banked
  5667  000984  6F80               	movwf	CANSetFilter@tamp& (0+255),b
  5668  000986  0EFF               	movlw	255
  5669  000988  0100               	movlb	0	; () banked
  5670  00098A  1577               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  5671  00098C  0100               	movlb	0	; () banked
  5672  00098E  6F81               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  5673  000990  0E00               	movlw	0
  5674  000992  0100               	movlb	0	; () banked
  5675  000994  1578               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  5676  000996  0100               	movlb	0	; () banked
  5677  000998  6F82               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  5678  00099A  0E00               	movlw	0
  5679  00099C  0100               	movlb	0	; () banked
  5680  00099E  1579               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  5681  0009A0  0100               	movlb	0	; () banked
  5682  0009A2  6F83               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  5683                           
  5684                           ; BSR set to: 0
  5685                           ;inc\CANlib.h: 963: tamp = tamp >> 8;
  5686  0009A4  C080  F07B         	movff	CANSetFilter@tamp,??_CANSetFilter
  5687  0009A8  C081  F07C         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  5688  0009AC  C082  F07D         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  5689  0009B0  C083  F07E         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  5690  0009B4  C07C  F07B         	movff	??_CANSetFilter+1,??_CANSetFilter
  5691  0009B8  C07D  F07C         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  5692  0009BC  C07E  F07D         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  5693  0009C0  0100               	movlb	0	; () banked
  5694  0009C2  6B7E               	clrf	(??_CANSetFilter+3)& (0+255),b
  5695  0009C4  C07B  F080         	movff	??_CANSetFilter,CANSetFilter@tamp
  5696  0009C8  C07C  F081         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5697  0009CC  C07D  F082         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5698  0009D0  C07E  F083         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5699                           
  5700                           ; BSR set to: 0
  5701                           ;inc\CANlib.h: 964: RXF3EIDH = (unsigned char) tamp;
  5702  0009D4  C080  FF0E         	movff	CANSetFilter@tamp,3854	;volatile
  5703                           
  5704                           ; BSR set to: 0
  5705                           ;inc\CANlib.h: 966: if (filter & 0x00010000)
  5706  0009D8  0100               	movlb	0	; () banked
  5707  0009DA  A178               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
  5708  0009DC  D003               	goto	l490
  5709                           
  5710                           ; BSR set to: 0
  5711                           ;inc\CANlib.h: 967: RXF3SIDLbits.EID16 = 0x01;
  5712  0009DE  010F               	movlb	15	; () banked
  5713  0009E0  810D               	bsf	13,0,b	;volatile
  5714  0009E2  D002               	goto	l491
  5715  0009E4                     l490:
  5716                           
  5717                           ; BSR set to: 0
  5718                           ;inc\CANlib.h: 968: else
  5719                           ;inc\CANlib.h: 969: RXF3SIDLbits.EID16 = 0x00;
  5720  0009E4  010F               	movlb	15	; () banked
  5721  0009E6  910D               	bcf	13,0,b	;volatile
  5722  0009E8                     l491:
  5723                           
  5724                           ; BSR set to: 15
  5725                           ;inc\CANlib.h: 971: if (filter & 0x00020000)
  5726  0009E8  0100               	movlb	0	; () banked
  5727  0009EA  A378               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
  5728  0009EC  D003               	goto	l492
  5729                           
  5730                           ; BSR set to: 0
  5731                           ;inc\CANlib.h: 972: RXF3SIDLbits.EID17 = 0x01;
  5732  0009EE  010F               	movlb	15	; () banked
  5733  0009F0  830D               	bsf	13,1,b	;volatile
  5734  0009F2  D002               	goto	l493
  5735  0009F4                     l492:
  5736                           
  5737                           ; BSR set to: 0
  5738                           ;inc\CANlib.h: 973: else
  5739                           ;inc\CANlib.h: 974: RXF3SIDLbits.EID17 = 0x00;
  5740  0009F4  010F               	movlb	15	; () banked
  5741  0009F6  930D               	bcf	13,1,b	;volatile
  5742  0009F8                     l493:
  5743                           
  5744                           ; BSR set to: 15
  5745                           ;inc\CANlib.h: 976: if (filter & 0x00040000)
  5746  0009F8  0100               	movlb	0	; () banked
  5747  0009FA  A578               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
  5748  0009FC  D003               	goto	l494
  5749                           
  5750                           ; BSR set to: 0
  5751                           ;inc\CANlib.h: 977: RXF3SIDLbits.SID0 = 0x01;
  5752  0009FE  010F               	movlb	15	; () banked
  5753  000A00  8B0D               	bsf	13,5,b	;volatile
  5754  000A02  D002               	goto	l495
  5755  000A04                     l494:
  5756                           
  5757                           ; BSR set to: 0
  5758                           ;inc\CANlib.h: 978: else
  5759                           ;inc\CANlib.h: 979: RXF3SIDLbits.SID0 = 0x00;
  5760  000A04  010F               	movlb	15	; () banked
  5761  000A06  9B0D               	bcf	13,5,b	;volatile
  5762  000A08                     l495:
  5763                           
  5764                           ; BSR set to: 15
  5765                           ;inc\CANlib.h: 981: if (filter & 0x00080000)
  5766  000A08  0100               	movlb	0	; () banked
  5767  000A0A  A778               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
  5768  000A0C  D003               	goto	l496
  5769                           
  5770                           ; BSR set to: 0
  5771                           ;inc\CANlib.h: 982: RXF3SIDLbits.SID1 = 0x01;
  5772  000A0E  010F               	movlb	15	; () banked
  5773  000A10  8D0D               	bsf	13,6,b	;volatile
  5774  000A12  D002               	goto	l497
  5775  000A14                     l496:
  5776                           
  5777                           ; BSR set to: 0
  5778                           ;inc\CANlib.h: 983: else
  5779                           ;inc\CANlib.h: 984: RXF3SIDLbits.SID1 = 0x00;
  5780  000A14  010F               	movlb	15	; () banked
  5781  000A16  9D0D               	bcf	13,6,b	;volatile
  5782  000A18                     l497:
  5783                           
  5784                           ; BSR set to: 15
  5785                           ;inc\CANlib.h: 986: if (filter & 0x00100000)
  5786  000A18  0100               	movlb	0	; () banked
  5787  000A1A  A978               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
  5788  000A1C  D003               	goto	l498
  5789                           
  5790                           ; BSR set to: 0
  5791                           ;inc\CANlib.h: 987: RXF3SIDLbits.SID2 = 0x01 ;
  5792  000A1E  010F               	movlb	15	; () banked
  5793  000A20  8F0D               	bsf	13,7,b	;volatile
  5794  000A22  D002               	goto	l2914
  5795  000A24                     l498:
  5796                           
  5797                           ; BSR set to: 0
  5798                           ;inc\CANlib.h: 988: else
  5799                           ;inc\CANlib.h: 989: RXF3SIDLbits.SID2 = 0x00 ;
  5800  000A24  010F               	movlb	15	; () banked
  5801  000A26  9F0D               	bcf	13,7,b	;volatile
  5802  000A28                     l2914:
  5803                           
  5804                           ; BSR set to: 15
  5805                           ;inc\CANlib.h: 991: tamp = (filter >> 21);
  5806  000A28  C076  F07B         	movff	CANSetFilter@filter,??_CANSetFilter
  5807  000A2C  C077  F07C         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  5808  000A30  C078  F07D         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  5809  000A34  C079  F07E         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  5810  000A38  0E16               	movlw	22
  5811  000A3A  D006               	goto	u3010
  5812  000A3C                     u3015:
  5813  000A3C  0100               	movlb	0	; () banked
  5814  000A3E  90D8               	bcf	status,0,c
  5815  000A40  337E               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  5816  000A42  337D               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  5817  000A44  337C               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  5818  000A46  337B               	rrcf	??_CANSetFilter& (0+255),f,b
  5819  000A48                     u3010:
  5820  000A48  2EE8               	decfsz	wreg,f,c
  5821  000A4A  D7F8               	goto	u3015
  5822  000A4C  C07B  F080         	movff	??_CANSetFilter,CANSetFilter@tamp
  5823  000A50  C07C  F081         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5824  000A54  C07D  F082         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5825  000A58  C07E  F083         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5826                           
  5827                           ; BSR set to: 0
  5828                           ;inc\CANlib.h: 992: tamp = tamp & 0x000000FF;
  5829  000A5C  0100               	movlb	0	; () banked
  5830  000A5E  5180               	movf	CANSetFilter@tamp& (0+255),w,b
  5831  000A60  0100               	movlb	0	; () banked
  5832  000A62  6F80               	movwf	CANSetFilter@tamp& (0+255),b
  5833  000A64  6B81               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5834  000A66  6B82               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5835  000A68  6B83               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5836                           
  5837                           ; BSR set to: 0
  5838                           ;inc\CANlib.h: 993: RXF3SIDH = (unsigned char) tamp;
  5839  000A6A  C080  FF0C         	movff	CANSetFilter@tamp,3852	;volatile
  5840  000A6E                     l2920:
  5841                           
  5842                           ; BSR set to: 0
  5843                           ;inc\CANlib.h: 994: }
  5844                           ;inc\CANlib.h: 996: if ((numBuffer ==CAN_FILTER_B2_F3) && (type == CAN_CONFIG_XTD_MSG))
  5845  000A6E  0E04               	movlw	4
  5846  000A70  0100               	movlb	0	; () banked
  5847  000A72  197F               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  5848  000A74  A4D8               	btfss	status,2,c
  5849  000A76  D089               	goto	l2954
  5850                           
  5851                           ; BSR set to: 0
  5852  000A78  0EF7               	movlw	247
  5853  000A7A  0100               	movlb	0	; () banked
  5854  000A7C  197A               	xorwf	CANSetFilter@type& (0+255),w,b
  5855  000A7E  A4D8               	btfss	status,2,c
  5856  000A80  D084               	goto	l2954
  5857                           
  5858                           ; BSR set to: 0
  5859                           ;inc\CANlib.h: 997: {
  5860                           ;inc\CANlib.h: 998: RXF4SIDLbits.EXIDEN = 0x01;
  5861  000A82  010F               	movlb	15	; () banked
  5862  000A84  8711               	bsf	17,3,b	;volatile
  5863                           
  5864                           ; BSR set to: 15
  5865                           ;inc\CANlib.h: 1000: tamp = filter & 0x000000FF;
  5866  000A86  0100               	movlb	0	; () banked
  5867  000A88  5176               	movf	CANSetFilter@filter& (0+255),w,b
  5868  000A8A  0100               	movlb	0	; () banked
  5869  000A8C  6F80               	movwf	CANSetFilter@tamp& (0+255),b
  5870  000A8E  6B81               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5871  000A90  6B82               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5872  000A92  6B83               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5873                           
  5874                           ; BSR set to: 0
  5875                           ;inc\CANlib.h: 1001: RXF4EIDL = (unsigned char) tamp;
  5876  000A94  C080  FF13         	movff	CANSetFilter@tamp,3859	;volatile
  5877                           
  5878                           ; BSR set to: 0
  5879                           ;inc\CANlib.h: 1003: tamp = filter & 0x0000FF00;
  5880  000A98  0E00               	movlw	0
  5881  000A9A  0100               	movlb	0	; () banked
  5882  000A9C  1576               	andwf	CANSetFilter@filter& (0+255),w,b
  5883  000A9E  0100               	movlb	0	; () banked
  5884  000AA0  6F80               	movwf	CANSetFilter@tamp& (0+255),b
  5885  000AA2  0EFF               	movlw	255
  5886  000AA4  0100               	movlb	0	; () banked
  5887  000AA6  1577               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  5888  000AA8  0100               	movlb	0	; () banked
  5889  000AAA  6F81               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  5890  000AAC  0E00               	movlw	0
  5891  000AAE  0100               	movlb	0	; () banked
  5892  000AB0  1578               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  5893  000AB2  0100               	movlb	0	; () banked
  5894  000AB4  6F82               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  5895  000AB6  0E00               	movlw	0
  5896  000AB8  0100               	movlb	0	; () banked
  5897  000ABA  1579               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  5898  000ABC  0100               	movlb	0	; () banked
  5899  000ABE  6F83               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  5900                           
  5901                           ; BSR set to: 0
  5902                           ;inc\CANlib.h: 1004: tamp = tamp >> 8;
  5903  000AC0  C080  F07B         	movff	CANSetFilter@tamp,??_CANSetFilter
  5904  000AC4  C081  F07C         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  5905  000AC8  C082  F07D         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  5906  000ACC  C083  F07E         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  5907  000AD0  C07C  F07B         	movff	??_CANSetFilter+1,??_CANSetFilter
  5908  000AD4  C07D  F07C         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  5909  000AD8  C07E  F07D         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  5910  000ADC  0100               	movlb	0	; () banked
  5911  000ADE  6B7E               	clrf	(??_CANSetFilter+3)& (0+255),b
  5912  000AE0  C07B  F080         	movff	??_CANSetFilter,CANSetFilter@tamp
  5913  000AE4  C07C  F081         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5914  000AE8  C07D  F082         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5915  000AEC  C07E  F083         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5916                           
  5917                           ; BSR set to: 0
  5918                           ;inc\CANlib.h: 1005: RXF4EIDH = (unsigned char) tamp;
  5919  000AF0  C080  FF12         	movff	CANSetFilter@tamp,3858	;volatile
  5920                           
  5921                           ; BSR set to: 0
  5922                           ;inc\CANlib.h: 1007: if (filter & 0x00010000)
  5923  000AF4  0100               	movlb	0	; () banked
  5924  000AF6  A178               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
  5925  000AF8  D003               	goto	l501
  5926                           
  5927                           ; BSR set to: 0
  5928                           ;inc\CANlib.h: 1008: RXF4SIDLbits.EID16 = 0x01;
  5929  000AFA  010F               	movlb	15	; () banked
  5930  000AFC  8111               	bsf	17,0,b	;volatile
  5931  000AFE  D002               	goto	l502
  5932  000B00                     l501:
  5933                           
  5934                           ; BSR set to: 0
  5935                           ;inc\CANlib.h: 1009: else
  5936                           ;inc\CANlib.h: 1010: RXF4SIDLbits.EID16 = 0x00;
  5937  000B00  010F               	movlb	15	; () banked
  5938  000B02  9111               	bcf	17,0,b	;volatile
  5939  000B04                     l502:
  5940                           
  5941                           ; BSR set to: 15
  5942                           ;inc\CANlib.h: 1012: if (filter & 0x00020000)
  5943  000B04  0100               	movlb	0	; () banked
  5944  000B06  A378               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
  5945  000B08  D003               	goto	l503
  5946                           
  5947                           ; BSR set to: 0
  5948                           ;inc\CANlib.h: 1013: RXF4SIDLbits.EID17 = 0x01;
  5949  000B0A  010F               	movlb	15	; () banked
  5950  000B0C  8311               	bsf	17,1,b	;volatile
  5951  000B0E  D002               	goto	l504
  5952  000B10                     l503:
  5953                           
  5954                           ; BSR set to: 0
  5955                           ;inc\CANlib.h: 1014: else
  5956                           ;inc\CANlib.h: 1015: RXF4SIDLbits.EID17 = 0x00;
  5957  000B10  010F               	movlb	15	; () banked
  5958  000B12  9311               	bcf	17,1,b	;volatile
  5959  000B14                     l504:
  5960                           
  5961                           ; BSR set to: 15
  5962                           ;inc\CANlib.h: 1017: if (filter & 0x00040000)
  5963  000B14  0100               	movlb	0	; () banked
  5964  000B16  A578               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
  5965  000B18  D003               	goto	l505
  5966                           
  5967                           ; BSR set to: 0
  5968                           ;inc\CANlib.h: 1018: RXF4SIDLbits.SID0 = 0x01;
  5969  000B1A  010F               	movlb	15	; () banked
  5970  000B1C  8B11               	bsf	17,5,b	;volatile
  5971  000B1E  D002               	goto	l506
  5972  000B20                     l505:
  5973                           
  5974                           ; BSR set to: 0
  5975                           ;inc\CANlib.h: 1019: else
  5976                           ;inc\CANlib.h: 1020: RXF4SIDLbits.SID0 = 0x00;
  5977  000B20  010F               	movlb	15	; () banked
  5978  000B22  9B11               	bcf	17,5,b	;volatile
  5979  000B24                     l506:
  5980                           
  5981                           ; BSR set to: 15
  5982                           ;inc\CANlib.h: 1022: if (filter & 0x00080000)
  5983  000B24  0100               	movlb	0	; () banked
  5984  000B26  A778               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
  5985  000B28  D003               	goto	l507
  5986                           
  5987                           ; BSR set to: 0
  5988                           ;inc\CANlib.h: 1023: RXF4SIDLbits.SID1 = 0x01;
  5989  000B2A  010F               	movlb	15	; () banked
  5990  000B2C  8D11               	bsf	17,6,b	;volatile
  5991  000B2E  D002               	goto	l508
  5992  000B30                     l507:
  5993                           
  5994                           ; BSR set to: 0
  5995                           ;inc\CANlib.h: 1024: else
  5996                           ;inc\CANlib.h: 1025: RXF4SIDLbits.SID1 = 0x00;
  5997  000B30  010F               	movlb	15	; () banked
  5998  000B32  9D11               	bcf	17,6,b	;volatile
  5999  000B34                     l508:
  6000                           
  6001                           ; BSR set to: 15
  6002                           ;inc\CANlib.h: 1027: if (filter & 0x00100000)
  6003  000B34  0100               	movlb	0	; () banked
  6004  000B36  A978               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
  6005  000B38  D003               	goto	l509
  6006                           
  6007                           ; BSR set to: 0
  6008                           ;inc\CANlib.h: 1028: RXF4SIDLbits.SID2 = 0x01 ;
  6009  000B3A  010F               	movlb	15	; () banked
  6010  000B3C  8F11               	bsf	17,7,b	;volatile
  6011  000B3E  D002               	goto	l2948
  6012  000B40                     l509:
  6013                           
  6014                           ; BSR set to: 0
  6015                           ;inc\CANlib.h: 1029: else
  6016                           ;inc\CANlib.h: 1030: RXF4SIDLbits.SID2 = 0x00 ;
  6017  000B40  010F               	movlb	15	; () banked
  6018  000B42  9F11               	bcf	17,7,b	;volatile
  6019  000B44                     l2948:
  6020                           
  6021                           ; BSR set to: 15
  6022                           ;inc\CANlib.h: 1032: tamp = (filter >> 21);
  6023  000B44  C076  F07B         	movff	CANSetFilter@filter,??_CANSetFilter
  6024  000B48  C077  F07C         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  6025  000B4C  C078  F07D         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  6026  000B50  C079  F07E         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  6027  000B54  0E16               	movlw	22
  6028  000B56  D006               	goto	u3090
  6029  000B58                     u3095:
  6030  000B58  0100               	movlb	0	; () banked
  6031  000B5A  90D8               	bcf	status,0,c
  6032  000B5C  337E               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  6033  000B5E  337D               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  6034  000B60  337C               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  6035  000B62  337B               	rrcf	??_CANSetFilter& (0+255),f,b
  6036  000B64                     u3090:
  6037  000B64  2EE8               	decfsz	wreg,f,c
  6038  000B66  D7F8               	goto	u3095
  6039  000B68  C07B  F080         	movff	??_CANSetFilter,CANSetFilter@tamp
  6040  000B6C  C07C  F081         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  6041  000B70  C07D  F082         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  6042  000B74  C07E  F083         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  6043                           
  6044                           ; BSR set to: 0
  6045                           ;inc\CANlib.h: 1033: tamp = tamp & 0x000000FF;
  6046  000B78  0100               	movlb	0	; () banked
  6047  000B7A  5180               	movf	CANSetFilter@tamp& (0+255),w,b
  6048  000B7C  0100               	movlb	0	; () banked
  6049  000B7E  6F80               	movwf	CANSetFilter@tamp& (0+255),b
  6050  000B80  6B81               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  6051  000B82  6B82               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  6052  000B84  6B83               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  6053                           
  6054                           ; BSR set to: 0
  6055                           ;inc\CANlib.h: 1034: RXF4SIDH = (unsigned char) tamp;
  6056  000B86  C080  FF10         	movff	CANSetFilter@tamp,3856	;volatile
  6057  000B8A                     l2954:
  6058                           
  6059                           ; BSR set to: 0
  6060                           ;inc\CANlib.h: 1035: }
  6061                           ;inc\CANlib.h: 1037: if ((numBuffer ==CAN_FILTER_B2_F4) && (type == CAN_CONFIG_XTD_MSG))
  6062  000B8A  0E05               	movlw	5
  6063  000B8C  0100               	movlb	0	; () banked
  6064  000B8E  197F               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  6065  000B90  A4D8               	btfss	status,2,c
  6066  000B92  0012               	return	
  6067                           
  6068                           ; BSR set to: 0
  6069  000B94  0EF7               	movlw	247
  6070  000B96  0100               	movlb	0	; () banked
  6071  000B98  197A               	xorwf	CANSetFilter@type& (0+255),w,b
  6072  000B9A  A4D8               	btfss	status,2,c
  6073  000B9C  0012               	return	
  6074                           
  6075                           ; BSR set to: 0
  6076                           ;inc\CANlib.h: 1038: {
  6077                           ;inc\CANlib.h: 1039: RXF5SIDLbits.EXIDEN = 0x01;
  6078  000B9E  010F               	movlb	15	; () banked
  6079  000BA0  8715               	bsf	21,3,b	;volatile
  6080                           
  6081                           ; BSR set to: 15
  6082                           ;inc\CANlib.h: 1041: tamp = filter & 0x000000FF;
  6083  000BA2  0100               	movlb	0	; () banked
  6084  000BA4  5176               	movf	CANSetFilter@filter& (0+255),w,b
  6085  000BA6  0100               	movlb	0	; () banked
  6086  000BA8  6F80               	movwf	CANSetFilter@tamp& (0+255),b
  6087  000BAA  6B81               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  6088  000BAC  6B82               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  6089  000BAE  6B83               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  6090                           
  6091                           ; BSR set to: 0
  6092                           ;inc\CANlib.h: 1042: RXF5EIDL = (unsigned char) tamp;
  6093  000BB0  C080  FF17         	movff	CANSetFilter@tamp,3863	;volatile
  6094                           
  6095                           ; BSR set to: 0
  6096                           ;inc\CANlib.h: 1044: tamp = filter & 0x0000FF00;
  6097  000BB4  0E00               	movlw	0
  6098  000BB6  0100               	movlb	0	; () banked
  6099  000BB8  1576               	andwf	CANSetFilter@filter& (0+255),w,b
  6100  000BBA  0100               	movlb	0	; () banked
  6101  000BBC  6F80               	movwf	CANSetFilter@tamp& (0+255),b
  6102  000BBE  0EFF               	movlw	255
  6103  000BC0  0100               	movlb	0	; () banked
  6104  000BC2  1577               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  6105  000BC4  0100               	movlb	0	; () banked
  6106  000BC6  6F81               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  6107  000BC8  0E00               	movlw	0
  6108  000BCA  0100               	movlb	0	; () banked
  6109  000BCC  1578               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  6110  000BCE  0100               	movlb	0	; () banked
  6111  000BD0  6F82               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  6112  000BD2  0E00               	movlw	0
  6113  000BD4  0100               	movlb	0	; () banked
  6114  000BD6  1579               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  6115  000BD8  0100               	movlb	0	; () banked
  6116  000BDA  6F83               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  6117                           
  6118                           ; BSR set to: 0
  6119                           ;inc\CANlib.h: 1045: tamp = tamp >> 8;
  6120  000BDC  C080  F07B         	movff	CANSetFilter@tamp,??_CANSetFilter
  6121  000BE0  C081  F07C         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  6122  000BE4  C082  F07D         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  6123  000BE8  C083  F07E         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  6124  000BEC  C07C  F07B         	movff	??_CANSetFilter+1,??_CANSetFilter
  6125  000BF0  C07D  F07C         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  6126  000BF4  C07E  F07D         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  6127  000BF8  0100               	movlb	0	; () banked
  6128  000BFA  6B7E               	clrf	(??_CANSetFilter+3)& (0+255),b
  6129  000BFC  C07B  F080         	movff	??_CANSetFilter,CANSetFilter@tamp
  6130  000C00  C07C  F081         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  6131  000C04  C07D  F082         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  6132  000C08  C07E  F083         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  6133                           
  6134                           ; BSR set to: 0
  6135                           ;inc\CANlib.h: 1046: RXF5EIDH = (unsigned char) tamp;
  6136  000C0C  C080  FF16         	movff	CANSetFilter@tamp,3862	;volatile
  6137                           
  6138                           ; BSR set to: 0
  6139                           ;inc\CANlib.h: 1048: if (filter & 0x00010000)
  6140  000C10  0100               	movlb	0	; () banked
  6141  000C12  A178               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
  6142  000C14  D003               	goto	l512
  6143                           
  6144                           ; BSR set to: 0
  6145                           ;inc\CANlib.h: 1049: RXF5SIDLbits.EID16 = 0x01;
  6146  000C16  010F               	movlb	15	; () banked
  6147  000C18  8115               	bsf	21,0,b	;volatile
  6148  000C1A  D002               	goto	l513
  6149  000C1C                     l512:
  6150                           
  6151                           ; BSR set to: 0
  6152                           ;inc\CANlib.h: 1050: else
  6153                           ;inc\CANlib.h: 1051: RXF5SIDLbits.EID16 = 0x00;
  6154  000C1C  010F               	movlb	15	; () banked
  6155  000C1E  9115               	bcf	21,0,b	;volatile
  6156  000C20                     l513:
  6157                           
  6158                           ; BSR set to: 15
  6159                           ;inc\CANlib.h: 1053: if (filter & 0x00020000)
  6160  000C20  0100               	movlb	0	; () banked
  6161  000C22  A378               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
  6162  000C24  D003               	goto	l514
  6163                           
  6164                           ; BSR set to: 0
  6165                           ;inc\CANlib.h: 1054: RXF5SIDLbits.EID17 = 0x01;
  6166  000C26  010F               	movlb	15	; () banked
  6167  000C28  8315               	bsf	21,1,b	;volatile
  6168  000C2A  D002               	goto	l515
  6169  000C2C                     l514:
  6170                           
  6171                           ; BSR set to: 0
  6172                           ;inc\CANlib.h: 1055: else
  6173                           ;inc\CANlib.h: 1056: RXF5SIDLbits.EID17 = 0x00;
  6174  000C2C  010F               	movlb	15	; () banked
  6175  000C2E  9315               	bcf	21,1,b	;volatile
  6176  000C30                     l515:
  6177                           
  6178                           ; BSR set to: 15
  6179                           ;inc\CANlib.h: 1058: if (filter & 0x00040000)
  6180  000C30  0100               	movlb	0	; () banked
  6181  000C32  A578               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
  6182  000C34  D003               	goto	l516
  6183                           
  6184                           ; BSR set to: 0
  6185                           ;inc\CANlib.h: 1059: RXF5SIDLbits.SID0 = 0x01;
  6186  000C36  010F               	movlb	15	; () banked
  6187  000C38  8B15               	bsf	21,5,b	;volatile
  6188  000C3A  D002               	goto	l517
  6189  000C3C                     l516:
  6190                           
  6191                           ; BSR set to: 0
  6192                           ;inc\CANlib.h: 1060: else
  6193                           ;inc\CANlib.h: 1061: RXF5SIDLbits.SID0 = 0x00;
  6194  000C3C  010F               	movlb	15	; () banked
  6195  000C3E  9B15               	bcf	21,5,b	;volatile
  6196  000C40                     l517:
  6197                           
  6198                           ; BSR set to: 15
  6199                           ;inc\CANlib.h: 1063: if (filter & 0x00080000)
  6200  000C40  0100               	movlb	0	; () banked
  6201  000C42  A778               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
  6202  000C44  D003               	goto	l518
  6203                           
  6204                           ; BSR set to: 0
  6205                           ;inc\CANlib.h: 1064: RXF5SIDLbits.SID1 = 0x01;
  6206  000C46  010F               	movlb	15	; () banked
  6207  000C48  8D15               	bsf	21,6,b	;volatile
  6208  000C4A  D002               	goto	l519
  6209  000C4C                     l518:
  6210                           
  6211                           ; BSR set to: 0
  6212                           ;inc\CANlib.h: 1065: else
  6213                           ;inc\CANlib.h: 1066: RXF5SIDLbits.SID1 = 0x00;
  6214  000C4C  010F               	movlb	15	; () banked
  6215  000C4E  9D15               	bcf	21,6,b	;volatile
  6216  000C50                     l519:
  6217                           
  6218                           ; BSR set to: 15
  6219                           ;inc\CANlib.h: 1068: if (filter & 0x00100000)
  6220  000C50  0100               	movlb	0	; () banked
  6221  000C52  A978               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
  6222  000C54  D003               	goto	l520
  6223                           
  6224                           ; BSR set to: 0
  6225                           ;inc\CANlib.h: 1069: RXF5SIDLbits.SID2 = 0x01 ;
  6226  000C56  010F               	movlb	15	; () banked
  6227  000C58  8F15               	bsf	21,7,b	;volatile
  6228  000C5A  D002               	goto	l2982
  6229  000C5C                     l520:
  6230                           
  6231                           ; BSR set to: 0
  6232                           ;inc\CANlib.h: 1070: else
  6233                           ;inc\CANlib.h: 1071: RXF5SIDLbits.SID2 = 0x00 ;
  6234  000C5C  010F               	movlb	15	; () banked
  6235  000C5E  9F15               	bcf	21,7,b	;volatile
  6236  000C60                     l2982:
  6237                           
  6238                           ; BSR set to: 15
  6239                           ;inc\CANlib.h: 1073: tamp = (filter >> 21);
  6240  000C60  C076  F07B         	movff	CANSetFilter@filter,??_CANSetFilter
  6241  000C64  C077  F07C         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  6242  000C68  C078  F07D         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  6243  000C6C  C079  F07E         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  6244  000C70  0E16               	movlw	22
  6245  000C72  D006               	goto	u3170
  6246  000C74                     u3175:
  6247  000C74  0100               	movlb	0	; () banked
  6248  000C76  90D8               	bcf	status,0,c
  6249  000C78  337E               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  6250  000C7A  337D               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  6251  000C7C  337C               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  6252  000C7E  337B               	rrcf	??_CANSetFilter& (0+255),f,b
  6253  000C80                     u3170:
  6254  000C80  2EE8               	decfsz	wreg,f,c
  6255  000C82  D7F8               	goto	u3175
  6256  000C84  C07B  F080         	movff	??_CANSetFilter,CANSetFilter@tamp
  6257  000C88  C07C  F081         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  6258  000C8C  C07D  F082         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  6259  000C90  C07E  F083         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  6260                           
  6261                           ; BSR set to: 0
  6262                           ;inc\CANlib.h: 1074: tamp = tamp & 0x000000FF;
  6263  000C94  0100               	movlb	0	; () banked
  6264  000C96  5180               	movf	CANSetFilter@tamp& (0+255),w,b
  6265  000C98  0100               	movlb	0	; () banked
  6266  000C9A  6F80               	movwf	CANSetFilter@tamp& (0+255),b
  6267  000C9C  6B81               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  6268  000C9E  6B82               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  6269  000CA0  6B83               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  6270                           
  6271                           ; BSR set to: 0
  6272                           ;inc\CANlib.h: 1075: RXF5SIDH = (unsigned char) tamp;
  6273  000CA2  C080  FF14         	movff	CANSetFilter@tamp,3860	;volatile
  6274  000CA6  0012               	return	
  6275  000CA8                     __end_of_CANSetFilter:
  6276                           	opt stack 0
  6277                           tblptru	equ	0xFF8
  6278                           tblptrh	equ	0xFF7
  6279                           tblptrl	equ	0xFF6
  6280                           tablat	equ	0xFF5
  6281                           prodh	equ	0xFF4
  6282                           prodl	equ	0xFF3
  6283                           intcon	equ	0xFF2
  6284                           intcon2	equ	0xFF1
  6285                           postinc0	equ	0xFEE
  6286                           wreg	equ	0xFE8
  6287                           indf2	equ	0xFDF
  6288                           fsr2h	equ	0xFDA
  6289                           fsr2l	equ	0xFD9
  6290                           status	equ	0xFD8
  6291                           
  6292 ;; *************** function _CANOperationMode *****************
  6293 ;; Defined at:
  6294 ;;		line 206 in file "F:/Tesina/LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
  6295 ;; Parameters:    Size  Location     Type
  6296 ;;  mode            1    wreg     enum E16838
  6297 ;; Auto vars:     Size  Location     Type
  6298 ;;  mode            1   22[BANK0 ] enum E16838
  6299 ;; Return value:  Size  Location     Type
  6300 ;;		None               void
  6301 ;; Registers used:
  6302 ;;		wreg, status,2, status,0
  6303 ;; Tracked objects:
  6304 ;;		On entry : 0/0
  6305 ;;		On exit  : 0/0
  6306 ;;		Unchanged: 0/0
  6307 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  6308 ;;      Params:         0       0       0       0
  6309 ;;      Locals:         0       1       0       0
  6310 ;;      Temps:          0       0       0       0
  6311 ;;      Totals:         0       1       0       0
  6312 ;;Total ram usage:        1 bytes
  6313 ;; Hardware stack levels used:    1
  6314 ;; Hardware stack levels required when called:    5
  6315 ;; This function calls:
  6316 ;;		Nothing
  6317 ;; This function is called by:
  6318 ;;		_CANInitialize
  6319 ;; This function uses a non-reentrant model
  6320 ;;
  6321                           
  6322                           	psect	text10
  6323  0026FC                     __ptext10:
  6324                           	opt stack 0
  6325  0026FC                     _CANOperationMode:
  6326                           	opt stack 23
  6327                           
  6328                           ; BSR set to: 0
  6329                           ;incstack = 0
  6330                           ;CANOperationMode@mode stored from wreg
  6331  0026FC  0100               	movlb	0	; () banked
  6332  0026FE  6F76               	movwf	CANOperationMode@mode& (0+255),b
  6333                           
  6334                           ;inc\CANlib.h: 208: CANCON = mode;
  6335  002700  C076  FF6F         	movff	CANOperationMode@mode,3951	;volatile
  6336  002704                     l2578:
  6337  002704  506E               	movf	3950,w,c	;volatile
  6338  002706  0BE0               	andlw	224
  6339  002708  0100               	movlb	0	; () banked
  6340  00270A  1976               	xorwf	CANOperationMode@mode& (0+255),w,b
  6341  00270C  B4D8               	btfsc	status,2,c
  6342  00270E  0012               	return	
  6343  002710  D7F9               	goto	l2578
  6344  002712                     __end_of_CANOperationMode:
  6345                           	opt stack 0
  6346                           tblptru	equ	0xFF8
  6347                           tblptrh	equ	0xFF7
  6348                           tblptrl	equ	0xFF6
  6349                           tablat	equ	0xFF5
  6350                           prodh	equ	0xFF4
  6351                           prodl	equ	0xFF3
  6352                           intcon	equ	0xFF2
  6353                           intcon2	equ	0xFF1
  6354                           postinc0	equ	0xFEE
  6355                           wreg	equ	0xFE8
  6356                           indf2	equ	0xFDF
  6357                           fsr2h	equ	0xFDA
  6358                           fsr2l	equ	0xFD9
  6359                           status	equ	0xFD8
  6360                           
  6361 ;; *************** function _abs *****************
  6362 ;; Defined at:
  6363 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\abs.c"
  6364 ;; Parameters:    Size  Location     Type
  6365 ;;  a               2   22[BANK0 ] int 
  6366 ;; Auto vars:     Size  Location     Type
  6367 ;;		None
  6368 ;; Return value:  Size  Location     Type
  6369 ;;                  2   22[BANK0 ] int 
  6370 ;; Registers used:
  6371 ;;		wreg, status,2, status,0
  6372 ;; Tracked objects:
  6373 ;;		On entry : 0/0
  6374 ;;		On exit  : 0/0
  6375 ;;		Unchanged: 0/0
  6376 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  6377 ;;      Params:         0       2       0       0
  6378 ;;      Locals:         0       0       0       0
  6379 ;;      Temps:          0       2       0       0
  6380 ;;      Totals:         0       4       0       0
  6381 ;;Total ram usage:        4 bytes
  6382 ;; Hardware stack levels used:    1
  6383 ;; Hardware stack levels required when called:    5
  6384 ;; This function calls:
  6385 ;;		Nothing
  6386 ;; This function is called by:
  6387 ;;		_main
  6388 ;; This function uses a non-reentrant model
  6389 ;;
  6390                           
  6391                           	psect	text11
  6392  00268A                     __ptext11:
  6393                           	opt stack 0
  6394  00268A                     _abs:
  6395                           	opt stack 25
  6396                           
  6397                           ; BSR set to: 0
  6398                           ;incstack = 0
  6399  00268A  0100               	movlb	0	; () banked
  6400  00268C  AF77               	btfss	(abs@a+1)& (0+255),7,b
  6401  00268E  D00E               	goto	l766
  6402                           
  6403                           ; BSR set to: 0
  6404  002690  C076  F078         	movff	abs@a,??_abs
  6405  002694  C077  F079         	movff	abs@a+1,??_abs+1
  6406  002698  0100               	movlb	0	; () banked
  6407  00269A  1F78               	comf	??_abs& (0+255),f,b
  6408  00269C  1F79               	comf	(??_abs+1)& (0+255),f,b
  6409  00269E  4B78               	infsnz	??_abs& (0+255),f,b
  6410  0026A0  2B79               	incf	(??_abs+1)& (0+255),f,b
  6411  0026A2  C078  F076         	movff	??_abs,?_abs
  6412  0026A6  C079  F077         	movff	??_abs+1,?_abs+1
  6413  0026AA  0012               	return	
  6414  0026AC                     l766:
  6415                           
  6416                           ; BSR set to: 0
  6417  0026AC  C076  F076         	movff	abs@a,?_abs
  6418  0026B0  C077  F077         	movff	abs@a+1,?_abs+1
  6419                           
  6420                           ; BSR set to: 0
  6421  0026B4  0012               	return		;funcret
  6422  0026B6                     __end_of_abs:
  6423                           	opt stack 0
  6424                           tblptru	equ	0xFF8
  6425                           tblptrh	equ	0xFF7
  6426                           tblptrl	equ	0xFF6
  6427                           tablat	equ	0xFF5
  6428                           prodh	equ	0xFF4
  6429                           prodl	equ	0xFF3
  6430                           intcon	equ	0xFF2
  6431                           intcon2	equ	0xFF1
  6432                           postinc0	equ	0xFEE
  6433                           wreg	equ	0xFE8
  6434                           indf2	equ	0xFDF
  6435                           fsr2h	equ	0xFDA
  6436                           fsr2l	equ	0xFD9
  6437                           status	equ	0xFD8
  6438                           
  6439 ;; *************** function ___awdiv *****************
  6440 ;; Defined at:
  6441 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\awdiv.c"
  6442 ;; Parameters:    Size  Location     Type
  6443 ;;  dividend        2   22[BANK0 ] int 
  6444 ;;  divisor         2   24[BANK0 ] int 
  6445 ;; Auto vars:     Size  Location     Type
  6446 ;;  quotient        2   28[BANK0 ] int 
  6447 ;;  sign            1   27[BANK0 ] unsigned char 
  6448 ;;  counter         1   26[BANK0 ] unsigned char 
  6449 ;; Return value:  Size  Location     Type
  6450 ;;                  2   22[BANK0 ] int 
  6451 ;; Registers used:
  6452 ;;		wreg, status,2, status,0
  6453 ;; Tracked objects:
  6454 ;;		On entry : 0/0
  6455 ;;		On exit  : 0/0
  6456 ;;		Unchanged: 0/0
  6457 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  6458 ;;      Params:         0       4       0       0
  6459 ;;      Locals:         0       4       0       0
  6460 ;;      Temps:          0       0       0       0
  6461 ;;      Totals:         0       8       0       0
  6462 ;;Total ram usage:        8 bytes
  6463 ;; Hardware stack levels used:    1
  6464 ;; Hardware stack levels required when called:    5
  6465 ;; This function calls:
  6466 ;;		Nothing
  6467 ;; This function is called by:
  6468 ;;		_main
  6469 ;; This function uses a non-reentrant model
  6470 ;;
  6471                           
  6472                           	psect	text12
  6473  002278                     __ptext12:
  6474                           	opt stack 0
  6475  002278                     ___awdiv:
  6476                           	opt stack 25
  6477                           
  6478                           ; BSR set to: 0
  6479                           ;incstack = 0
  6480  002278  0E00               	movlw	0
  6481  00227A  0100               	movlb	0	; () banked
  6482  00227C  6F7B               	movwf	___awdiv@sign& (0+255),b
  6483                           
  6484                           ; BSR set to: 0
  6485  00227E  0100               	movlb	0	; () banked
  6486  002280  AF79               	btfss	(___awdiv@divisor+1)& (0+255),7,b
  6487  002282  D008               	goto	l3580
  6488                           
  6489                           ; BSR set to: 0
  6490  002284  0100               	movlb	0	; () banked
  6491  002286  6D78               	negf	___awdiv@divisor& (0+255),b
  6492  002288  1F79               	comf	(___awdiv@divisor+1)& (0+255),f,b
  6493  00228A  B0D8               	btfsc	status,0,c
  6494  00228C  2B79               	incf	(___awdiv@divisor+1)& (0+255),f,b
  6495                           
  6496                           ; BSR set to: 0
  6497  00228E  0E01               	movlw	1
  6498  002290  0100               	movlb	0	; () banked
  6499  002292  6F7B               	movwf	___awdiv@sign& (0+255),b
  6500  002294                     l3580:
  6501                           
  6502                           ; BSR set to: 0
  6503  002294  0100               	movlb	0	; () banked
  6504  002296  AF77               	btfss	(___awdiv@dividend+1)& (0+255),7,b
  6505  002298  D008               	goto	l3586
  6506                           
  6507                           ; BSR set to: 0
  6508  00229A  0100               	movlb	0	; () banked
  6509  00229C  6D76               	negf	___awdiv@dividend& (0+255),b
  6510  00229E  1F77               	comf	(___awdiv@dividend+1)& (0+255),f,b
  6511  0022A0  B0D8               	btfsc	status,0,c
  6512  0022A2  2B77               	incf	(___awdiv@dividend+1)& (0+255),f,b
  6513                           
  6514                           ; BSR set to: 0
  6515  0022A4  0E01               	movlw	1
  6516  0022A6  0100               	movlb	0	; () banked
  6517  0022A8  1B7B               	xorwf	___awdiv@sign& (0+255),f,b
  6518  0022AA                     l3586:
  6519                           
  6520                           ; BSR set to: 0
  6521  0022AA  0E00               	movlw	0
  6522  0022AC  0100               	movlb	0	; () banked
  6523  0022AE  6F7D               	movwf	(___awdiv@quotient+1)& (0+255),b
  6524  0022B0  0E00               	movlw	0
  6525  0022B2  6F7C               	movwf	___awdiv@quotient& (0+255),b
  6526                           
  6527                           ; BSR set to: 0
  6528  0022B4  0100               	movlb	0	; () banked
  6529  0022B6  5178               	movf	___awdiv@divisor& (0+255),w,b
  6530  0022B8  0100               	movlb	0	; () banked
  6531  0022BA  1179               	iorwf	(___awdiv@divisor+1)& (0+255),w,b
  6532  0022BC  B4D8               	btfsc	status,2,c
  6533  0022BE  D02C               	goto	l3608
  6534                           
  6535                           ; BSR set to: 0
  6536  0022C0  0E01               	movlw	1
  6537  0022C2  0100               	movlb	0	; () banked
  6538  0022C4  6F7A               	movwf	___awdiv@counter& (0+255),b
  6539  0022C6  D006               	goto	l3594
  6540  0022C8                     l3592:
  6541                           
  6542                           ; BSR set to: 0
  6543  0022C8  0100               	movlb	0	; () banked
  6544  0022CA  90D8               	bcf	status,0,c
  6545  0022CC  3778               	rlcf	___awdiv@divisor& (0+255),f,b
  6546  0022CE  3779               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
  6547  0022D0  0100               	movlb	0	; () banked
  6548  0022D2  2B7A               	incf	___awdiv@counter& (0+255),f,b
  6549  0022D4                     l3594:
  6550                           
  6551                           ; BSR set to: 0
  6552  0022D4  0100               	movlb	0	; () banked
  6553  0022D6  AF79               	btfss	(___awdiv@divisor+1)& (0+255),7,b
  6554  0022D8  D7F7               	goto	l3592
  6555  0022DA                     l3596:
  6556                           
  6557                           ; BSR set to: 0
  6558  0022DA  0100               	movlb	0	; () banked
  6559  0022DC  90D8               	bcf	status,0,c
  6560  0022DE  377C               	rlcf	___awdiv@quotient& (0+255),f,b
  6561  0022E0  377D               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
  6562                           
  6563                           ; BSR set to: 0
  6564  0022E2  0100               	movlb	0	; () banked
  6565  0022E4  5178               	movf	___awdiv@divisor& (0+255),w,b
  6566  0022E6  0100               	movlb	0	; () banked
  6567  0022E8  5D76               	subwf	___awdiv@dividend& (0+255),w,b
  6568  0022EA  0100               	movlb	0	; () banked
  6569  0022EC  5179               	movf	(___awdiv@divisor+1)& (0+255),w,b
  6570  0022EE  0100               	movlb	0	; () banked
  6571  0022F0  5977               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
  6572  0022F2  A0D8               	btfss	status,0,c
  6573  0022F4  D00A               	goto	l3604
  6574                           
  6575                           ; BSR set to: 0
  6576  0022F6  0100               	movlb	0	; () banked
  6577  0022F8  5178               	movf	___awdiv@divisor& (0+255),w,b
  6578  0022FA  0100               	movlb	0	; () banked
  6579  0022FC  5F76               	subwf	___awdiv@dividend& (0+255),f,b
  6580  0022FE  0100               	movlb	0	; () banked
  6581  002300  5179               	movf	(___awdiv@divisor+1)& (0+255),w,b
  6582  002302  0100               	movlb	0	; () banked
  6583  002304  5B77               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
  6584                           
  6585                           ; BSR set to: 0
  6586  002306  0100               	movlb	0	; () banked
  6587  002308  817C               	bsf	___awdiv@quotient& (0+255),0,b
  6588  00230A                     l3604:
  6589                           
  6590                           ; BSR set to: 0
  6591  00230A  0100               	movlb	0	; () banked
  6592  00230C  90D8               	bcf	status,0,c
  6593  00230E  3379               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
  6594  002310  3378               	rrcf	___awdiv@divisor& (0+255),f,b
  6595                           
  6596                           ; BSR set to: 0
  6597  002312  0100               	movlb	0	; () banked
  6598  002314  2F7A               	decfsz	___awdiv@counter& (0+255),f,b
  6599  002316  D7E1               	goto	l3596
  6600  002318                     l3608:
  6601                           
  6602                           ; BSR set to: 0
  6603  002318  0100               	movlb	0	; () banked
  6604  00231A  517B               	movf	___awdiv@sign& (0+255),w,b
  6605  00231C  0100               	movlb	0	; () banked
  6606  00231E  B4D8               	btfsc	status,2,c
  6607  002320  D005               	goto	l3612
  6608                           
  6609                           ; BSR set to: 0
  6610  002322  0100               	movlb	0	; () banked
  6611  002324  6D7C               	negf	___awdiv@quotient& (0+255),b
  6612  002326  1F7D               	comf	(___awdiv@quotient+1)& (0+255),f,b
  6613  002328  B0D8               	btfsc	status,0,c
  6614  00232A  2B7D               	incf	(___awdiv@quotient+1)& (0+255),f,b
  6615  00232C                     l3612:
  6616                           
  6617                           ; BSR set to: 0
  6618  00232C  C07C  F076         	movff	___awdiv@quotient,?___awdiv
  6619  002330  C07D  F077         	movff	___awdiv@quotient+1,?___awdiv+1
  6620  002334  0012               	return	
  6621  002336                     __end_of___awdiv:
  6622                           	opt stack 0
  6623                           tblptru	equ	0xFF8
  6624                           tblptrh	equ	0xFF7
  6625                           tblptrl	equ	0xFF6
  6626                           tablat	equ	0xFF5
  6627                           prodh	equ	0xFF4
  6628                           prodl	equ	0xFF3
  6629                           intcon	equ	0xFF2
  6630                           intcon2	equ	0xFF1
  6631                           postinc0	equ	0xFEE
  6632                           wreg	equ	0xFE8
  6633                           indf2	equ	0xFDF
  6634                           fsr2h	equ	0xFDA
  6635                           fsr2l	equ	0xFD9
  6636                           status	equ	0xFD8
  6637                           
  6638 ;; *************** function _SetOutputEPWM1 *****************
  6639 ;; Defined at:
  6640 ;;		line 18 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\pic18\plib\PWM\ew1setoc.c"
  6641 ;; Parameters:    Size  Location     Type
  6642 ;;  outputconfig    1    wreg     unsigned char 
  6643 ;;  outputmode      1   22[BANK0 ] unsigned char 
  6644 ;; Auto vars:     Size  Location     Type
  6645 ;;  outputconfig    1   23[BANK0 ] unsigned char 
  6646 ;; Return value:  Size  Location     Type
  6647 ;;		None               void
  6648 ;; Registers used:
  6649 ;;		wreg, status,2, status,0
  6650 ;; Tracked objects:
  6651 ;;		On entry : 0/0
  6652 ;;		On exit  : 0/0
  6653 ;;		Unchanged: 0/0
  6654 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  6655 ;;      Params:         0       1       0       0
  6656 ;;      Locals:         0       1       0       0
  6657 ;;      Temps:          0       0       0       0
  6658 ;;      Totals:         0       2       0       0
  6659 ;;Total ram usage:        2 bytes
  6660 ;; Hardware stack levels used:    1
  6661 ;; Hardware stack levels required when called:    5
  6662 ;; This function calls:
  6663 ;;		Nothing
  6664 ;; This function is called by:
  6665 ;;		_main
  6666 ;; This function uses a non-reentrant model
  6667 ;;
  6668                           
  6669                           	psect	text13
  6670  0024C8                     __ptext13:
  6671                           	opt stack 0
  6672  0024C8                     _SetOutputEPWM1:
  6673                           	opt stack 25
  6674                           
  6675                           ; BSR set to: 0
  6676                           ;incstack = 0
  6677                           ;SetOutputEPWM1@outputconfig stored from wreg
  6678  0024C8  0100               	movlb	0	; () banked
  6679  0024CA  6F77               	movwf	SetOutputEPWM1@outputconfig& (0+255),b
  6680  0024CC  50BA               	movf	4026,w,c	;volatile
  6681  0024CE  09C0               	iorlw	192
  6682  0024D0  0100               	movlb	0	; () banked
  6683  0024D2  1577               	andwf	SetOutputEPWM1@outputconfig& (0+255),w,b
  6684  0024D4  6EBA               	movwf	4026,c	;volatile
  6685  0024D6  50BA               	movf	4026,w,c	;volatile
  6686  0024D8  090F               	iorlw	15
  6687  0024DA  0100               	movlb	0	; () banked
  6688  0024DC  1576               	andwf	SetOutputEPWM1@outputmode& (0+255),w,b
  6689  0024DE  6EBA               	movwf	4026,c	;volatile
  6690  0024E0  0E3F               	movlw	63
  6691  0024E2  0100               	movlb	0	; () banked
  6692  0024E4  1977               	xorwf	SetOutputEPWM1@outputconfig& (0+255),w,b
  6693  0024E6  A4D8               	btfss	status,2,c
  6694  0024E8  D002               	goto	l3536
  6695                           
  6696                           ; BSR set to: 0
  6697  0024EA  9895               	bcf	3989,4,c	;volatile
  6698  0024EC  0012               	return	
  6699  0024EE                     l3536:
  6700                           
  6701                           ; BSR set to: 0
  6702  0024EE  0EBF               	movlw	191
  6703  0024F0  0100               	movlb	0	; () banked
  6704  0024F2  1977               	xorwf	SetOutputEPWM1@outputconfig& (0+255),w,b
  6705  0024F4  A4D8               	btfss	status,2,c
  6706  0024F6  D003               	goto	l3540
  6707                           
  6708                           ; BSR set to: 0
  6709  0024F8  9895               	bcf	3989,4,c	;volatile
  6710  0024FA  9A95               	bcf	3989,5,c	;volatile
  6711  0024FC  0012               	return	
  6712  0024FE                     l3540:
  6713                           
  6714                           ; BSR set to: 0
  6715  0024FE  0E7F               	movlw	127
  6716  002500  0100               	movlb	0	; () banked
  6717  002502  1977               	xorwf	SetOutputEPWM1@outputconfig& (0+255),w,b
  6718  002504  B4D8               	btfsc	status,2,c
  6719  002506  D004               	goto	l700
  6720                           
  6721                           ; BSR set to: 0
  6722  002508  0100               	movlb	0	; () banked
  6723  00250A  2977               	incf	SetOutputEPWM1@outputconfig& (0+255),w,b
  6724  00250C  A4D8               	btfss	status,2,c
  6725  00250E  0012               	return	
  6726  002510                     l700:
  6727                           
  6728                           ; BSR set to: 0
  6729  002510  9895               	bcf	3989,4,c	;volatile
  6730  002512  9A95               	bcf	3989,5,c	;volatile
  6731  002514  9C95               	bcf	3989,6,c	;volatile
  6732  002516  9E95               	bcf	3989,7,c	;volatile
  6733                           
  6734                           ; BSR set to: 0
  6735                           
  6736                           ; BSR set to: 0
  6737  002518  0012               	return	
  6738  00251A                     __end_of_SetOutputEPWM1:
  6739                           	opt stack 0
  6740                           tblptru	equ	0xFF8
  6741                           tblptrh	equ	0xFF7
  6742                           tblptrl	equ	0xFF6
  6743                           tablat	equ	0xFF5
  6744                           prodh	equ	0xFF4
  6745                           prodl	equ	0xFF3
  6746                           intcon	equ	0xFF2
  6747                           intcon2	equ	0xFF1
  6748                           postinc0	equ	0xFEE
  6749                           wreg	equ	0xFE8
  6750                           indf2	equ	0xFDF
  6751                           fsr2h	equ	0xFDA
  6752                           fsr2l	equ	0xFD9
  6753                           status	equ	0xFD8
  6754                           
  6755 ;; *************** function _SetDCEPWM1 *****************
  6756 ;; Defined at:
  6757 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\pic18\plib\PWM\ew1setdc.c"
  6758 ;; Parameters:    Size  Location     Type
  6759 ;;  dutycycle       2   22[BANK0 ] unsigned int 
  6760 ;; Auto vars:     Size  Location     Type
  6761 ;;  DCycle          2   26[BANK0 ] struct PWMDC
  6762 ;; Return value:  Size  Location     Type
  6763 ;;		None               void
  6764 ;; Registers used:
  6765 ;;		wreg, status,2, status,0
  6766 ;; Tracked objects:
  6767 ;;		On entry : 0/0
  6768 ;;		On exit  : 0/0
  6769 ;;		Unchanged: 0/0
  6770 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  6771 ;;      Params:         0       2       0       0
  6772 ;;      Locals:         0       2       0       0
  6773 ;;      Temps:          0       2       0       0
  6774 ;;      Totals:         0       6       0       0
  6775 ;;Total ram usage:        6 bytes
  6776 ;; Hardware stack levels used:    1
  6777 ;; Hardware stack levels required when called:    5
  6778 ;; This function calls:
  6779 ;;		Nothing
  6780 ;; This function is called by:
  6781 ;;		_main
  6782 ;; This function uses a non-reentrant model
  6783 ;;
  6784                           
  6785                           	psect	text14
  6786  002566                     __ptext14:
  6787                           	opt stack 0
  6788  002566                     _SetDCEPWM1:
  6789                           	opt stack 25
  6790                           
  6791                           ; BSR set to: 0
  6792                           ;incstack = 0
  6793  002566  C076  F078         	movff	SetDCEPWM1@dutycycle,??_SetDCEPWM1
  6794  00256A  C077  F079         	movff	SetDCEPWM1@dutycycle+1,??_SetDCEPWM1+1
  6795  00256E  0E06               	movlw	6
  6796  002570                     u3995:
  6797  002570  90D8               	bcf	status,0,c
  6798  002572  0100               	movlb	0	; () banked
  6799  002574  3778               	rlcf	??_SetDCEPWM1& (0+255),f,b
  6800  002576  3779               	rlcf	(??_SetDCEPWM1+1)& (0+255),f,b
  6801  002578  2EE8               	decfsz	wreg,f,c
  6802  00257A  D7FA               	goto	u3995
  6803  00257C  C078  F07A         	movff	??_SetDCEPWM1,SetDCEPWM1@DCycle
  6804  002580  C079  F07B         	movff	??_SetDCEPWM1+1,SetDCEPWM1@DCycle+1
  6805                           
  6806                           ; BSR set to: 0
  6807  002584  C07B  FFBB         	movff	SetDCEPWM1@DCycle+1,4027	;volatile
  6808  002588  C07A  F078         	movff	SetDCEPWM1@DCycle,??_SetDCEPWM1
  6809  00258C  0100               	movlb	0	; () banked
  6810  00258E  90D8               	bcf	status,0,c
  6811  002590  3378               	rrcf	??_SetDCEPWM1& (0+255),f,b
  6812  002592  0100               	movlb	0	; () banked
  6813  002594  90D8               	bcf	status,0,c
  6814  002596  3378               	rrcf	??_SetDCEPWM1& (0+255),f,b
  6815  002598  0E30               	movlw	48
  6816  00259A  0100               	movlb	0	; () banked
  6817  00259C  1778               	andwf	??_SetDCEPWM1& (0+255),f,b
  6818  00259E  50BA               	movf	4026,w,c	;volatile
  6819  0025A0  0BCF               	andlw	207
  6820  0025A2  0100               	movlb	0	; () banked
  6821  0025A4  1178               	iorwf	??_SetDCEPWM1& (0+255),w,b
  6822  0025A6  6EBA               	movwf	4026,c	;volatile
  6823                           
  6824                           ; BSR set to: 0
  6825  0025A8  0012               	return		;funcret
  6826  0025AA                     __end_of_SetDCEPWM1:
  6827                           	opt stack 0
  6828                           tblptru	equ	0xFF8
  6829                           tblptrh	equ	0xFF7
  6830                           tblptrl	equ	0xFF6
  6831                           tablat	equ	0xFF5
  6832                           prodh	equ	0xFF4
  6833                           prodl	equ	0xFF3
  6834                           intcon	equ	0xFF2
  6835                           intcon2	equ	0xFF1
  6836                           postinc0	equ	0xFEE
  6837                           wreg	equ	0xFE8
  6838                           indf2	equ	0xFDF
  6839                           fsr2h	equ	0xFDA
  6840                           fsr2l	equ	0xFD9
  6841                           status	equ	0xFD8
  6842                           
  6843 ;; *************** function _OpenTimer2 *****************
  6844 ;; Defined at:
  6845 ;;		line 17 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\pic18\plib\Timers\t2open.c"
  6846 ;; Parameters:    Size  Location     Type
  6847 ;;  config          1    wreg     unsigned char 
  6848 ;; Auto vars:     Size  Location     Type
  6849 ;;  config          1   22[BANK0 ] unsigned char 
  6850 ;; Return value:  Size  Location     Type
  6851 ;;		None               void
  6852 ;; Registers used:
  6853 ;;		wreg, status,2, status,0
  6854 ;; Tracked objects:
  6855 ;;		On entry : 0/0
  6856 ;;		On exit  : 0/0
  6857 ;;		Unchanged: 0/0
  6858 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  6859 ;;      Params:         0       0       0       0
  6860 ;;      Locals:         0       1       0       0
  6861 ;;      Temps:          0       0       0       0
  6862 ;;      Totals:         0       1       0       0
  6863 ;;Total ram usage:        1 bytes
  6864 ;; Hardware stack levels used:    1
  6865 ;; Hardware stack levels required when called:    5
  6866 ;; This function calls:
  6867 ;;		Nothing
  6868 ;; This function is called by:
  6869 ;;		_main
  6870 ;; This function uses a non-reentrant model
  6871 ;;
  6872                           
  6873                           	psect	text15
  6874  0026DA                     __ptext15:
  6875                           	opt stack 0
  6876  0026DA                     _OpenTimer2:
  6877                           	opt stack 25
  6878                           
  6879                           ; BSR set to: 0
  6880                           ;incstack = 0
  6881                           ;OpenTimer2@config stored from wreg
  6882  0026DA  0100               	movlb	0	; () banked
  6883  0026DC  6F76               	movwf	OpenTimer2@config& (0+255),b
  6884  0026DE  0100               	movlb	0	; () banked
  6885  0026E0  5176               	movf	OpenTimer2@config& (0+255),w,b
  6886  0026E2  0BFB               	andlw	251
  6887  0026E4  6ECA               	movwf	4042,c	;volatile
  6888                           
  6889                           ; BSR set to: 0
  6890  0026E6  0E00               	movlw	0
  6891  0026E8  6ECC               	movwf	4044,c	;volatile
  6892                           
  6893                           ; BSR set to: 0
  6894  0026EA  929E               	bcf	3998,1,c	;volatile
  6895                           
  6896                           ; BSR set to: 0
  6897  0026EC  0100               	movlb	0	; () banked
  6898  0026EE  AF76               	btfss	OpenTimer2@config& (0+255),7,b
  6899  0026F0  D002               	goto	l714
  6900                           
  6901                           ; BSR set to: 0
  6902  0026F2  829D               	bsf	3997,1,c	;volatile
  6903  0026F4  D001               	goto	l715
  6904  0026F6                     l714:
  6905                           
  6906                           ; BSR set to: 0
  6907  0026F6  929D               	bcf	3997,1,c	;volatile
  6908  0026F8                     l715:
  6909                           
  6910                           ; BSR set to: 0
  6911  0026F8  84CA               	bsf	4042,2,c	;volatile
  6912                           
  6913                           ; BSR set to: 0
  6914  0026FA  0012               	return		;funcret
  6915  0026FC                     __end_of_OpenTimer2:
  6916                           	opt stack 0
  6917                           tblptru	equ	0xFF8
  6918                           tblptrh	equ	0xFF7
  6919                           tblptrl	equ	0xFF6
  6920                           tablat	equ	0xFF5
  6921                           prodh	equ	0xFF4
  6922                           prodl	equ	0xFF3
  6923                           intcon	equ	0xFF2
  6924                           intcon2	equ	0xFF1
  6925                           postinc0	equ	0xFEE
  6926                           wreg	equ	0xFE8
  6927                           indf2	equ	0xFDF
  6928                           fsr2h	equ	0xFDA
  6929                           fsr2l	equ	0xFD9
  6930                           status	equ	0xFD8
  6931                           
  6932 ;; *************** function _OpenEPWM1 *****************
  6933 ;; Defined at:
  6934 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\pic18\plib\PWM\ew1open.c"
  6935 ;; Parameters:    Size  Location     Type
  6936 ;;  period          1    wreg     unsigned char 
  6937 ;; Auto vars:     Size  Location     Type
  6938 ;;  period          1   22[BANK0 ] unsigned char 
  6939 ;; Return value:  Size  Location     Type
  6940 ;;		None               void
  6941 ;; Registers used:
  6942 ;;		wreg, status,2
  6943 ;; Tracked objects:
  6944 ;;		On entry : 0/0
  6945 ;;		On exit  : 0/0
  6946 ;;		Unchanged: 0/0
  6947 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  6948 ;;      Params:         0       0       0       0
  6949 ;;      Locals:         0       1       0       0
  6950 ;;      Temps:          0       0       0       0
  6951 ;;      Totals:         0       1       0       0
  6952 ;;Total ram usage:        1 bytes
  6953 ;; Hardware stack levels used:    1
  6954 ;; Hardware stack levels required when called:    5
  6955 ;; This function calls:
  6956 ;;		Nothing
  6957 ;; This function is called by:
  6958 ;;		_main
  6959 ;; This function uses a non-reentrant model
  6960 ;;
  6961                           
  6962                           	psect	text16
  6963  002728                     __ptext16:
  6964                           	opt stack 0
  6965  002728                     _OpenEPWM1:
  6966                           	opt stack 25
  6967                           
  6968                           ; BSR set to: 0
  6969                           ;incstack = 0
  6970                           ;OpenEPWM1@period stored from wreg
  6971  002728  0100               	movlb	0	; () banked
  6972  00272A  6F76               	movwf	OpenEPWM1@period& (0+255),b
  6973  00272C  0E0C               	movlw	12
  6974  00272E  6EBA               	movwf	4026,c	;volatile
  6975  002730  94CA               	bcf	4042,2,c	;volatile
  6976  002732  C076  FFCB         	movff	OpenEPWM1@period,4043	;volatile
  6977  002736  84CA               	bsf	4042,2,c	;volatile
  6978  002738  0012               	return		;funcret
  6979  00273A                     __end_of_OpenEPWM1:
  6980                           	opt stack 0
  6981                           tblptru	equ	0xFF8
  6982                           tblptrh	equ	0xFF7
  6983                           tblptrl	equ	0xFF6
  6984                           tablat	equ	0xFF5
  6985                           prodh	equ	0xFF4
  6986                           prodl	equ	0xFF3
  6987                           intcon	equ	0xFF2
  6988                           intcon2	equ	0xFF1
  6989                           postinc0	equ	0xFEE
  6990                           wreg	equ	0xFE8
  6991                           indf2	equ	0xFDF
  6992                           fsr2h	equ	0xFDA
  6993                           fsr2l	equ	0xFD9
  6994                           status	equ	0xFD8
  6995                           
  6996 ;; *************** function _CANisTXwarningON *****************
  6997 ;; Defined at:
  6998 ;;		line 1119 in file "F:/Tesina/LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
  6999 ;; Parameters:    Size  Location     Type
  7000 ;;		None
  7001 ;; Auto vars:     Size  Location     Type
  7002 ;;		None
  7003 ;; Return value:  Size  Location     Type
  7004 ;;                  1    wreg      unsigned char 
  7005 ;; Registers used:
  7006 ;;		wreg
  7007 ;; Tracked objects:
  7008 ;;		On entry : 0/0
  7009 ;;		On exit  : 0/0
  7010 ;;		Unchanged: 0/0
  7011 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  7012 ;;      Params:         0       0       0       0
  7013 ;;      Locals:         0       0       0       0
  7014 ;;      Temps:          0       0       0       0
  7015 ;;      Totals:         0       0       0       0
  7016 ;;Total ram usage:        0 bytes
  7017 ;; Hardware stack levels used:    1
  7018 ;; Hardware stack levels required when called:    5
  7019 ;; This function calls:
  7020 ;;		Nothing
  7021 ;; This function is called by:
  7022 ;;		_main
  7023 ;; This function uses a non-reentrant model
  7024 ;;
  7025                           
  7026                           	psect	text17
  7027  00273A                     __ptext17:
  7028                           	opt stack 0
  7029  00273A                     _CANisTXwarningON:
  7030                           	opt stack 25
  7031                           
  7032                           ;inc\CANlib.h: 1121: return (COMSTATbits.TXWARN);
  7033                           
  7034                           ;incstack = 0
  7035  00273A  A474               	btfss	3956,2,c	;volatile
  7036  00273C  D002               	goto	u3890
  7037  00273E  0E01               	movlw	1
  7038  002740  0012               	return	
  7039  002742                     u3890:
  7040  002742  0E00               	movlw	0
  7041  002744  0012               	return	
  7042  002746                     __end_of_CANisTXwarningON:
  7043                           	opt stack 0
  7044                           tblptru	equ	0xFF8
  7045                           tblptrh	equ	0xFF7
  7046                           tblptrl	equ	0xFF6
  7047                           tablat	equ	0xFF5
  7048                           prodh	equ	0xFF4
  7049                           prodl	equ	0xFF3
  7050                           intcon	equ	0xFF2
  7051                           intcon2	equ	0xFF1
  7052                           postinc0	equ	0xFEE
  7053                           wreg	equ	0xFE8
  7054                           indf2	equ	0xFDF
  7055                           fsr2h	equ	0xFDA
  7056                           fsr2l	equ	0xFD9
  7057                           status	equ	0xFD8
  7058                           
  7059 ;; *************** function _CANisRXwarningON *****************
  7060 ;; Defined at:
  7061 ;;		line 1127 in file "F:/Tesina/LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
  7062 ;; Parameters:    Size  Location     Type
  7063 ;;		None
  7064 ;; Auto vars:     Size  Location     Type
  7065 ;;		None
  7066 ;; Return value:  Size  Location     Type
  7067 ;;                  1    wreg      unsigned char 
  7068 ;; Registers used:
  7069 ;;		wreg
  7070 ;; Tracked objects:
  7071 ;;		On entry : 0/0
  7072 ;;		On exit  : 0/0
  7073 ;;		Unchanged: 0/0
  7074 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  7075 ;;      Params:         0       0       0       0
  7076 ;;      Locals:         0       0       0       0
  7077 ;;      Temps:          0       0       0       0
  7078 ;;      Totals:         0       0       0       0
  7079 ;;Total ram usage:        0 bytes
  7080 ;; Hardware stack levels used:    1
  7081 ;; Hardware stack levels required when called:    5
  7082 ;; This function calls:
  7083 ;;		Nothing
  7084 ;; This function is called by:
  7085 ;;		_main
  7086 ;; This function uses a non-reentrant model
  7087 ;;
  7088                           
  7089                           	psect	text18
  7090  002746                     __ptext18:
  7091                           	opt stack 0
  7092  002746                     _CANisRXwarningON:
  7093                           	opt stack 25
  7094                           
  7095                           ;inc\CANlib.h: 1129: return (COMSTATbits.RXWARN);
  7096                           
  7097                           ;incstack = 0
  7098  002746  A274               	btfss	3956,1,c	;volatile
  7099  002748  D002               	goto	u3900
  7100  00274A  0E01               	movlw	1
  7101  00274C  0012               	return	
  7102  00274E                     u3900:
  7103  00274E  0E00               	movlw	0
  7104  002750  0012               	return	
  7105  002752                     __end_of_CANisRXwarningON:
  7106                           	opt stack 0
  7107                           tblptru	equ	0xFF8
  7108                           tblptrh	equ	0xFF7
  7109                           tblptrl	equ	0xFF6
  7110                           tablat	equ	0xFF5
  7111                           prodh	equ	0xFF4
  7112                           prodl	equ	0xFF3
  7113                           intcon	equ	0xFF2
  7114                           intcon2	equ	0xFF1
  7115                           postinc0	equ	0xFEE
  7116                           wreg	equ	0xFE8
  7117                           indf2	equ	0xFDF
  7118                           fsr2h	equ	0xFDA
  7119                           fsr2l	equ	0xFD9
  7120                           status	equ	0xFD8
  7121                           
  7122 ;; *************** function _ISR_bassa *****************
  7123 ;; Defined at:
  7124 ;;		line 75 in file "motore.c"
  7125 ;; Parameters:    Size  Location     Type
  7126 ;;		None
  7127 ;; Auto vars:     Size  Location     Type
  7128 ;;		None
  7129 ;; Return value:  Size  Location     Type
  7130 ;;		None               void
  7131 ;; Registers used:
  7132 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7133 ;; Tracked objects:
  7134 ;;		On entry : 0/0
  7135 ;;		On exit  : 0/0
  7136 ;;		Unchanged: 0/0
  7137 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  7138 ;;      Params:         0       0       0       0
  7139 ;;      Locals:         0       0       0       0
  7140 ;;      Temps:         17       0       0       0
  7141 ;;      Totals:        17       0       0       0
  7142 ;;Total ram usage:       17 bytes
  7143 ;; Hardware stack levels used:    1
  7144 ;; Hardware stack levels required when called:    4
  7145 ;; This function calls:
  7146 ;;		_CANisRxReady
  7147 ;;		_CANreceiveMessage
  7148 ;; This function is called by:
  7149 ;;		Interrupt level 1
  7150 ;; This function uses a non-reentrant model
  7151 ;;
  7152                           
  7153                           	psect	intcodelo
  7154  000018                     __pintcodelo:
  7155                           	opt stack 0
  7156  000018                     _ISR_bassa:
  7157                           	opt stack 23
  7158                           
  7159                           ;incstack = 0
  7160  000018  8049               	bsf	btemp,0,c	;set compiler interrupt flag (level 1)
  7161  00001A  CFD8 F036          	movff	status,??_ISR_bassa
  7162  00001E  CFE8 F037          	movff	wreg,??_ISR_bassa+1
  7163  000022  CFE0 F038          	movff	bsr,??_ISR_bassa+2
  7164  000026  CFFA F039          	movff	pclath,??_ISR_bassa+3
  7165  00002A  CFFB F03A          	movff	pclatu,??_ISR_bassa+4
  7166  00002E  CFE9 F03B          	movff	fsr0l,??_ISR_bassa+5
  7167  000032  CFEA F03C          	movff	fsr0h,??_ISR_bassa+6
  7168  000036  CFE1 F03D          	movff	fsr1l,??_ISR_bassa+7
  7169  00003A  CFE2 F03E          	movff	fsr1h,??_ISR_bassa+8
  7170  00003E  CFD9 F03F          	movff	fsr2l,??_ISR_bassa+9
  7171  000042  CFDA F040          	movff	fsr2h,??_ISR_bassa+10
  7172  000046  CFF3 F041          	movff	prodl,??_ISR_bassa+11
  7173  00004A  CFF4 F042          	movff	prodh,??_ISR_bassa+12
  7174  00004E  CFF6 F043          	movff	tblptrl,??_ISR_bassa+13
  7175  000052  CFF7 F044          	movff	tblptrh,??_ISR_bassa+14
  7176  000056  CFF8 F045          	movff	tblptru,??_ISR_bassa+15
  7177  00005A  CFF5 F046          	movff	tablat,??_ISR_bassa+16
  7178                           
  7179                           ;motore.c: 76: if ((PIR3bits.RXB0IF == 1) || (PIR3bits.RXB1IF == 1)) {
  7180  00005E  A0A4               	btfss	4004,0,c	;volatile
  7181  000060  B2A4               	btfsc	4004,1,c	;volatile
  7182  000062  D001               	goto	i1l3646
  7183  000064  D078               	goto	i1l637
  7184  000066                     i1l3646:
  7185                           
  7186                           ;motore.c: 77: if (CANisRxReady()) {
  7187  000066  EC89  F013         	call	_CANisRxReady	;wreg free
  7188  00006A  0900               	iorlw	0
  7189  00006C  B4D8               	btfsc	status,2,c
  7190  00006E  D066               	goto	i1l628
  7191                           
  7192                           ;motore.c: 78: CANreceiveMessage(&msg);
  7193  000070  0E13               	movlw	low _msg
  7194  000072  6E2A               	movwf	CANreceiveMessage@msg,c
  7195  000074  0E00               	movlw	high _msg
  7196  000076  6E2B               	movwf	CANreceiveMessage@msg+1,c
  7197  000078  EC1A  F00A         	call	_CANreceiveMessage	;wreg free
  7198                           
  7199                           ;motore.c: 79: if (msg.RTR == 1) {
  7200  00007C  0421               	decf	_msg+14,w,c
  7201  00007E  A4D8               	btfss	status,2,c
  7202  000080  D00D               	goto	i1l3654
  7203                           
  7204                           ;motore.c: 80: id = msg.identifier;
  7205  000082  C013  F0A1         	movff	_msg,_id
  7206  000086  C014  F0A2         	movff	_msg+1,_id+1
  7207  00008A  C015  F0A3         	movff	_msg+2,_id+2
  7208  00008E  C016  F0A4         	movff	_msg+3,_id+3
  7209                           
  7210                           ;motore.c: 81: remote_frame = msg.RTR;
  7211  000092  A021               	btfss	_msg+14,0,c
  7212  000094  D002               	goto	i1u419_20
  7213  000096  8247               	bsf	_remote_frame/(0+8),_remote_frame& (0+7),c
  7214  000098  D001               	goto	i1l3654
  7215  00009A                     i1u419_20:
  7216  00009A  9247               	bcf	_remote_frame/(0+8),_remote_frame& (0+7),c
  7217  00009C                     i1l3654:
  7218                           
  7219                           ;motore.c: 82: }
  7220                           ;motore.c: 83: if (msg.identifier == 0b00000000000000000000000000110) {
  7221  00009C  0E06               	movlw	6
  7222  00009E  1813               	xorwf	_msg,w,c
  7223  0000A0  1014               	iorwf	_msg+1,w,c
  7224  0000A2  1015               	iorwf	_msg+2,w,c
  7225  0000A4  1016               	iorwf	_msg+3,w,c
  7226  0000A6  B4D8               	btfsc	status,2,c
  7227                           
  7228                           ;motore.c: 84: misura = 1;
  7229  0000A8  8047               	bsf	_misura/(0+8),_misura& (0+7),c
  7230                           
  7231                           ;motore.c: 85: }
  7232                           ;motore.c: 86: if (msg.identifier == 0b00000000000000000000000000101) {
  7233  0000AA  0E05               	movlw	5
  7234  0000AC  1813               	xorwf	_msg,w,c
  7235  0000AE  1014               	iorwf	_msg+1,w,c
  7236  0000B0  1015               	iorwf	_msg+2,w,c
  7237  0000B2  1016               	iorwf	_msg+3,w,c
  7238  0000B4  A4D8               	btfss	status,2,c
  7239  0000B6  D00F               	goto	i1l3664
  7240                           
  7241                           ;motore.c: 87: misura = 0;
  7242  0000B8  9047               	bcf	_misura/(0+8),_misura& (0+7),c
  7243                           
  7244                           ;motore.c: 88: data_array[0] = counter;
  7245  0000BA  C009  F022         	movff	_counter,_data_array
  7246                           
  7247                           ;motore.c: 89: data_array[1] = counter >> 8;
  7248  0000BE  C00A  F023         	movff	_counter+1,_data_array+1
  7249                           
  7250                           ;motore.c: 90: data_array[2] = counter >> 8;
  7251  0000C2  C00A  F024         	movff	_counter+1,_data_array+2
  7252                           
  7253                           ;motore.c: 91: counter = 0;
  7254  0000C6  0E00               	movlw	0
  7255  0000C8  6E09               	movwf	_counter,c
  7256  0000CA  0E00               	movlw	0
  7257  0000CC  6E0A               	movwf	_counter+1,c
  7258  0000CE  0E00               	movlw	0
  7259  0000D0  6E0B               	movwf	_counter+2,c
  7260  0000D2  0E00               	movlw	0
  7261  0000D4  6E0C               	movwf	_counter+3,c
  7262  0000D6                     i1l3664:
  7263                           
  7264                           ;motore.c: 92: }
  7265                           ;motore.c: 93: if (msg.identifier == 0b00000000000000000000000001000) {
  7266  0000D6  0E08               	movlw	8
  7267  0000D8  1813               	xorwf	_msg,w,c
  7268  0000DA  1014               	iorwf	_msg+1,w,c
  7269  0000DC  1015               	iorwf	_msg+2,w,c
  7270  0000DE  1016               	iorwf	_msg+3,w,c
  7271  0000E0  B4D8               	btfsc	status,2,c
  7272                           
  7273                           ;motore.c: 94: data_array[0] = currentSpeed;
  7274  0000E2  C048  F022         	movff	_currentSpeed,_data_array
  7275                           
  7276                           ;motore.c: 95: }
  7277                           ;motore.c: 96: if (msg.identifier == 0b00000000000000000000000000010) {
  7278  0000E6  0E02               	movlw	2
  7279  0000E8  1813               	xorwf	_msg,w,c
  7280  0000EA  1014               	iorwf	_msg+1,w,c
  7281  0000EC  1015               	iorwf	_msg+2,w,c
  7282  0000EE  1016               	iorwf	_msg+3,w,c
  7283  0000F0  A4D8               	btfss	status,2,c
  7284  0000F2  D00E               	goto	i1l3672
  7285                           
  7286                           ;motore.c: 97: currentSpeed = msg.data[0];
  7287  0000F4  C017  F048         	movff	_msg+4,_currentSpeed
  7288                           
  7289                           ;motore.c: 98: dir = msg.data[1];
  7290  0000F8  C018  F0B1         	movff	_msg+5,_dir
  7291  0000FC  0100               	movlb	0	; () banked
  7292  0000FE  6BB2               	clrf	(_dir+1)& (0+255),b
  7293                           
  7294                           ;motore.c: 99: previousTimeCounter = timeCounter;
  7295  000100  C00D  F0A5         	movff	_timeCounter,_previousTimeCounter
  7296  000104  C00E  F0A6         	movff	_timeCounter+1,_previousTimeCounter+1
  7297  000108  C00F  F0A7         	movff	_timeCounter+2,_previousTimeCounter+2
  7298  00010C  C010  F0A8         	movff	_timeCounter+3,_previousTimeCounter+3
  7299  000110                     i1l3672:
  7300                           
  7301                           ;motore.c: 100: }
  7302                           ;motore.c: 101: if (msg.identifier == 0b00000000000000000000000000001) {
  7303  000110  0413               	decf	_msg,w,c
  7304  000112  1014               	iorwf	_msg+1,w,c
  7305  000114  1015               	iorwf	_msg+2,w,c
  7306  000116  1016               	iorwf	_msg+3,w,c
  7307  000118  A4D8               	btfss	status,2,c
  7308  00011A  D003               	goto	i1l3678
  7309                           
  7310                           ;motore.c: 102: currentSpeed = 0;
  7311  00011C  0E00               	movlw	0
  7312  00011E  6E48               	movwf	_currentSpeed,c
  7313                           
  7314                           ;motore.c: 103: PORTAbits.RA1 = 1;
  7315  000120  8280               	bsf	3968,1,c	;volatile
  7316  000122                     i1l3678:
  7317                           
  7318                           ;motore.c: 104: }
  7319                           ;motore.c: 105: if (msg.identifier == 0b00000000000000000000000000010) {
  7320  000122  0E02               	movlw	2
  7321  000124  1813               	xorwf	_msg,w,c
  7322  000126  1014               	iorwf	_msg+1,w,c
  7323  000128  1015               	iorwf	_msg+2,w,c
  7324  00012A  1016               	iorwf	_msg+3,w,c
  7325  00012C  A4D8               	btfss	status,2,c
  7326  00012E  D004               	goto	i1l635
  7327                           
  7328                           ;motore.c: 106: left_speed = msg.data[0];
  7329  000130  C017  F0B6         	movff	_msg+4,_left_speed
  7330                           
  7331                           ;motore.c: 107: right_speed = msg.data[1];
  7332  000134  C018  F0B9         	movff	_msg+5,_right_speed
  7333  000138                     i1l635:
  7334                           
  7335                           ;motore.c: 108: }
  7336                           ;motore.c: 109: PIR3bits.RXB0IF = 0;
  7337  000138  90A4               	bcf	4004,0,c	;volatile
  7338                           
  7339                           ;motore.c: 110: PIR3bits.RXB1IF = 0;
  7340  00013A  92A4               	bcf	4004,1,c	;volatile
  7341  00013C                     i1l628:
  7342                           
  7343                           ;motore.c: 111: }
  7344                           ;motore.c: 112: if (PIR2bits.TMR3IF) {
  7345  00013C  A2A1               	btfss	4001,1,c	;volatile
  7346  00013E  D00B               	goto	i1l637
  7347                           
  7348                           ;motore.c: 113: timeCounter++;
  7349  000140  0E01               	movlw	1
  7350  000142  260D               	addwf	_timeCounter,f,c
  7351  000144  0E00               	movlw	0
  7352  000146  220E               	addwfc	_timeCounter+1,f,c
  7353  000148  220F               	addwfc	_timeCounter+2,f,c
  7354  00014A  2210               	addwfc	_timeCounter+3,f,c
  7355                           
  7356                           ;motore.c: 114: TMR3H = 0x63;
  7357  00014C  0E63               	movlw	99
  7358  00014E  6EB3               	movwf	4019,c	;volatile
  7359                           
  7360                           ;motore.c: 115: TMR3L = 0xC0;
  7361  000150  0EC0               	movlw	192
  7362  000152  6EB2               	movwf	4018,c	;volatile
  7363                           
  7364                           ;motore.c: 116: PIR2bits.TMR3IF = 0;
  7365  000154  92A1               	bcf	4001,1,c	;volatile
  7366  000156                     i1l637:
  7367  000156  C046  FFF5         	movff	??_ISR_bassa+16,tablat
  7368  00015A  C045  FFF8         	movff	??_ISR_bassa+15,tblptru
  7369  00015E  C044  FFF7         	movff	??_ISR_bassa+14,tblptrh
  7370  000162  C043  FFF6         	movff	??_ISR_bassa+13,tblptrl
  7371  000166  C042  FFF4         	movff	??_ISR_bassa+12,prodh
  7372  00016A  C041  FFF3         	movff	??_ISR_bassa+11,prodl
  7373  00016E  C040  FFDA         	movff	??_ISR_bassa+10,fsr2h
  7374  000172  C03F  FFD9         	movff	??_ISR_bassa+9,fsr2l
  7375  000176  C03E  FFE2         	movff	??_ISR_bassa+8,fsr1h
  7376  00017A  C03D  FFE1         	movff	??_ISR_bassa+7,fsr1l
  7377  00017E  C03C  FFEA         	movff	??_ISR_bassa+6,fsr0h
  7378  000182  C03B  FFE9         	movff	??_ISR_bassa+5,fsr0l
  7379  000186  C03A  FFFB         	movff	??_ISR_bassa+4,pclatu
  7380  00018A  C039  FFFA         	movff	??_ISR_bassa+3,pclath
  7381  00018E  C038  FFE0         	movff	??_ISR_bassa+2,bsr
  7382  000192  C037  FFE8         	movff	??_ISR_bassa+1,wreg
  7383  000196  C036  FFD8         	movff	??_ISR_bassa,status
  7384  00019A  9049               	bcf	btemp,0,c	;clear compiler interrupt flag (level 1)
  7385  00019C  0010               	retfie	
  7386  00019E                     __end_of_ISR_bassa:
  7387                           	opt stack 0
  7388                           pclatu	equ	0xFFB
  7389                           pclath	equ	0xFFA
  7390                           tblptru	equ	0xFF8
  7391                           tblptrh	equ	0xFF7
  7392                           tblptrl	equ	0xFF6
  7393                           tablat	equ	0xFF5
  7394                           prodh	equ	0xFF4
  7395                           prodl	equ	0xFF3
  7396                           intcon	equ	0xFF2
  7397                           intcon2	equ	0xFF1
  7398                           postinc0	equ	0xFEE
  7399                           fsr0h	equ	0xFEA
  7400                           fsr0l	equ	0xFE9
  7401                           wreg	equ	0xFE8
  7402                           fsr1h	equ	0xFE2
  7403                           fsr1l	equ	0xFE1
  7404                           bsr	equ	0xFE0
  7405                           indf2	equ	0xFDF
  7406                           fsr2h	equ	0xFDA
  7407                           fsr2l	equ	0xFD9
  7408                           status	equ	0xFD8
  7409                           
  7410 ;; *************** function _CANreceiveMessage *****************
  7411 ;; Defined at:
  7412 ;;		line 528 in file "F:/Tesina/LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
  7413 ;; Parameters:    Size  Location     Type
  7414 ;;  msg             2    0[COMRAM] PTR struct .
  7415 ;;		 -> msg(15), 
  7416 ;; Auto vars:     Size  Location     Type
  7417 ;;  tamp            1   11[COMRAM] unsigned char 
  7418 ;;  error           1   10[COMRAM] unsigned char 
  7419 ;; Return value:  Size  Location     Type
  7420 ;;                  1    wreg      unsigned char 
  7421 ;; Registers used:
  7422 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7423 ;; Tracked objects:
  7424 ;;		On entry : 0/0
  7425 ;;		On exit  : 0/0
  7426 ;;		Unchanged: 0/0
  7427 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  7428 ;;      Params:         2       0       0       0
  7429 ;;      Locals:         2       0       0       0
  7430 ;;      Temps:          8       0       0       0
  7431 ;;      Totals:        12       0       0       0
  7432 ;;Total ram usage:       12 bytes
  7433 ;; Hardware stack levels used:    1
  7434 ;; Hardware stack levels required when called:    3
  7435 ;; This function calls:
  7436 ;;		Nothing
  7437 ;; This function is called by:
  7438 ;;		_ISR_bassa
  7439 ;; This function uses a non-reentrant model
  7440 ;;
  7441                           
  7442                           	psect	text20
  7443  001434                     __ptext20:
  7444                           	opt stack 0
  7445  001434                     _CANreceiveMessage:
  7446                           	opt stack 23
  7447                           
  7448                           ;inc\CANlib.h: 530: BYTE tamp;
  7449                           ;inc\CANlib.h: 531: BYTE error = 0;
  7450                           
  7451                           ;incstack = 0
  7452  001434  0E00               	movlw	0
  7453  001436  6E34               	movwf	CANreceiveMessage@error,c
  7454                           
  7455                           ;inc\CANlib.h: 533: if (COMSTATbits.RXB0OVFL == 0x01)
  7456  001438  BE74               	btfsc	3956,7,c	;volatile
  7457                           
  7458                           ;inc\CANlib.h: 534: error |= CAN_RX_BUFFER_1_OVFL;
  7459  00143A  8034               	bsf	CANreceiveMessage@error,0,c
  7460                           
  7461                           ;inc\CANlib.h: 536: if (COMSTATbits.RXB1OVFL == 0x01)
  7462  00143C  BC74               	btfsc	3956,6,c	;volatile
  7463                           
  7464                           ;inc\CANlib.h: 537: error |= CAN_RX_BUFFER_2_OVFL;
  7465  00143E  8234               	bsf	CANreceiveMessage@error,1,c
  7466                           
  7467                           ;inc\CANlib.h: 540: if (RXB1CONbits.RXFUL ==0x01)
  7468  001440  010F               	movlb	15	; () banked
  7469  001442  AF50               	btfss	80,7,b	;volatile
  7470  001444  D143               	goto	i1l404
  7471                           
  7472                           ; BSR set to: 15
  7473                           ;inc\CANlib.h: 541: {
  7474                           ;inc\CANlib.h: 542: msg->identifier = 0;
  7475  001446  C02A  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7476  00144A  C02B  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7477  00144E  6ADE               	clrf	postinc2,c
  7478  001450  6ADE               	clrf	postinc2,c
  7479  001452  6ADE               	clrf	postinc2,c
  7480  001454  6ADD               	clrf	postdec2,c
  7481                           
  7482                           ; BSR set to: 15
  7483                           ;inc\CANlib.h: 543: msg->data[0] =RXB1D0;
  7484  001456  EE20 F004          	lfsr	2,4
  7485  00145A  502A               	movf	CANreceiveMessage@msg,w,c
  7486  00145C  26D9               	addwf	fsr2l,f,c
  7487  00145E  502B               	movf	CANreceiveMessage@msg+1,w,c
  7488  001460  22DA               	addwfc	fsr2h,f,c
  7489  001462  CF56 FFDF          	movff	3926,indf2	;volatile
  7490                           
  7491                           ; BSR set to: 15
  7492                           ;inc\CANlib.h: 544: msg->data[1] =RXB1D1;
  7493  001466  EE20 F005          	lfsr	2,5
  7494  00146A  502A               	movf	CANreceiveMessage@msg,w,c
  7495  00146C  26D9               	addwf	fsr2l,f,c
  7496  00146E  502B               	movf	CANreceiveMessage@msg+1,w,c
  7497  001470  22DA               	addwfc	fsr2h,f,c
  7498  001472  CF57 FFDF          	movff	3927,indf2	;volatile
  7499                           
  7500                           ; BSR set to: 15
  7501                           ;inc\CANlib.h: 545: msg->data[2] =RXB1D2;
  7502  001476  EE20 F006          	lfsr	2,6
  7503  00147A  502A               	movf	CANreceiveMessage@msg,w,c
  7504  00147C  26D9               	addwf	fsr2l,f,c
  7505  00147E  502B               	movf	CANreceiveMessage@msg+1,w,c
  7506  001480  22DA               	addwfc	fsr2h,f,c
  7507  001482  CF58 FFDF          	movff	3928,indf2	;volatile
  7508                           
  7509                           ; BSR set to: 15
  7510                           ;inc\CANlib.h: 546: msg->data[3] =RXB1D3;
  7511  001486  EE20 F007          	lfsr	2,7
  7512  00148A  502A               	movf	CANreceiveMessage@msg,w,c
  7513  00148C  26D9               	addwf	fsr2l,f,c
  7514  00148E  502B               	movf	CANreceiveMessage@msg+1,w,c
  7515  001490  22DA               	addwfc	fsr2h,f,c
  7516  001492  CF59 FFDF          	movff	3929,indf2	;volatile
  7517                           
  7518                           ; BSR set to: 15
  7519                           ;inc\CANlib.h: 547: msg->data[4] =RXB1D4;
  7520  001496  EE20 F008          	lfsr	2,8
  7521  00149A  502A               	movf	CANreceiveMessage@msg,w,c
  7522  00149C  26D9               	addwf	fsr2l,f,c
  7523  00149E  502B               	movf	CANreceiveMessage@msg+1,w,c
  7524  0014A0  22DA               	addwfc	fsr2h,f,c
  7525  0014A2  CF5A FFDF          	movff	3930,indf2	;volatile
  7526                           
  7527                           ; BSR set to: 15
  7528                           ;inc\CANlib.h: 548: msg->data[5] =RXB1D5;
  7529  0014A6  EE20 F009          	lfsr	2,9
  7530  0014AA  502A               	movf	CANreceiveMessage@msg,w,c
  7531  0014AC  26D9               	addwf	fsr2l,f,c
  7532  0014AE  502B               	movf	CANreceiveMessage@msg+1,w,c
  7533  0014B0  22DA               	addwfc	fsr2h,f,c
  7534  0014B2  CF5B FFDF          	movff	3931,indf2	;volatile
  7535                           
  7536                           ; BSR set to: 15
  7537                           ;inc\CANlib.h: 549: msg->data[6] =RXB1D6;
  7538  0014B6  EE20 F00A          	lfsr	2,10
  7539  0014BA  502A               	movf	CANreceiveMessage@msg,w,c
  7540  0014BC  26D9               	addwf	fsr2l,f,c
  7541  0014BE  502B               	movf	CANreceiveMessage@msg+1,w,c
  7542  0014C0  22DA               	addwfc	fsr2h,f,c
  7543  0014C2  CF5C FFDF          	movff	3932,indf2	;volatile
  7544                           
  7545                           ; BSR set to: 15
  7546                           ;inc\CANlib.h: 550: msg->data[7] =RXB1D7;
  7547  0014C6  EE20 F00B          	lfsr	2,11
  7548  0014CA  502A               	movf	CANreceiveMessage@msg,w,c
  7549  0014CC  26D9               	addwf	fsr2l,f,c
  7550  0014CE  502B               	movf	CANreceiveMessage@msg+1,w,c
  7551  0014D0  22DA               	addwfc	fsr2h,f,c
  7552  0014D2  CF5D FFDF          	movff	3933,indf2	;volatile
  7553                           
  7554                           ; BSR set to: 15
  7555                           ;inc\CANlib.h: 552: msg->RTR = RXB1DLCbits.RXRTR;
  7556  0014D6  EE20 F00E          	lfsr	2,14
  7557  0014DA  502A               	movf	CANreceiveMessage@msg,w,c
  7558  0014DC  26D9               	addwf	fsr2l,f,c
  7559  0014DE  502B               	movf	CANreceiveMessage@msg+1,w,c
  7560  0014E0  22DA               	addwfc	fsr2h,f,c
  7561  0014E2  010F               	movlb	15	; () banked
  7562  0014E4  AD55               	btfss	85,6,b	;volatile
  7563  0014E6  D002               	goto	i1u368_20
  7564  0014E8  0E01               	movlw	1
  7565  0014EA  D001               	goto	i1u368_26
  7566  0014EC                     i1u368_20:
  7567  0014EC  0E00               	movlw	0
  7568  0014EE                     i1u368_26:
  7569  0014EE  6EDF               	movwf	indf2,c
  7570                           
  7571                           ; BSR set to: 15
  7572                           ;inc\CANlib.h: 554: msg->length = RXB1DLC & 0x0F;
  7573  0014F0  EE20 F00D          	lfsr	2,13
  7574  0014F4  502A               	movf	CANreceiveMessage@msg,w,c
  7575  0014F6  26D9               	addwf	fsr2l,f,c
  7576  0014F8  502B               	movf	CANreceiveMessage@msg+1,w,c
  7577  0014FA  22DA               	addwfc	fsr2h,f,c
  7578  0014FC  010F               	movlb	15	; () banked
  7579  0014FE  5155               	movf	85,w,b	;volatile
  7580  001500  0B0F               	andlw	15
  7581  001502  6EDF               	movwf	indf2,c
  7582                           
  7583                           ; BSR set to: 15
  7584                           ;inc\CANlib.h: 556: msg->type = RXB1SIDLbits.EXID;
  7585  001504  EE20 F00C          	lfsr	2,12
  7586  001508  502A               	movf	CANreceiveMessage@msg,w,c
  7587  00150A  26D9               	addwf	fsr2l,f,c
  7588  00150C  502B               	movf	CANreceiveMessage@msg+1,w,c
  7589  00150E  22DA               	addwfc	fsr2h,f,c
  7590  001510  010F               	movlb	15	; () banked
  7591  001512  A752               	btfss	82,3,b	;volatile
  7592  001514  D002               	goto	i1u369_20
  7593  001516  0E01               	movlw	1
  7594  001518  D001               	goto	i1u369_26
  7595  00151A                     i1u369_20:
  7596  00151A  0E00               	movlw	0
  7597  00151C                     i1u369_26:
  7598  00151C  6EDF               	movwf	indf2,c
  7599                           
  7600                           ; BSR set to: 15
  7601                           ;inc\CANlib.h: 558: if (RXB1SIDLbits.EXID == 0)
  7602  00151E  010F               	movlb	15	; () banked
  7603  001520  B752               	btfsc	82,3,b	;volatile
  7604  001522  D044               	goto	i1l3344
  7605                           
  7606                           ; BSR set to: 15
  7607                           ;inc\CANlib.h: 559: {
  7608                           ;inc\CANlib.h: 560: msg->identifier = ((unsigned long)RXB1SIDH)<< 3;
  7609  001524  CF51 F02C          	movff	3921,??_CANreceiveMessage	;volatile
  7610  001528  6A2D               	clrf	(??_CANreceiveMessage+1)& (0+255),c
  7611  00152A  6A2E               	clrf	(??_CANreceiveMessage+2)& (0+255),c
  7612  00152C  6A2F               	clrf	(??_CANreceiveMessage+3)& (0+255),c
  7613  00152E  0E03               	movlw	3
  7614  001530                     i1u371_25:
  7615  001530  90D8               	bcf	status,0,c
  7616  001532  362C               	rlcf	??_CANreceiveMessage,f,c
  7617  001534  362D               	rlcf	??_CANreceiveMessage+1,f,c
  7618  001536  362E               	rlcf	??_CANreceiveMessage+2,f,c
  7619  001538  362F               	rlcf	??_CANreceiveMessage+3,f,c
  7620  00153A  2EE8               	decfsz	wreg,f,c
  7621  00153C  D7F9               	goto	i1u371_25
  7622  00153E  C02A  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7623  001542  C02B  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7624  001546  C02C  FFDE         	movff	??_CANreceiveMessage,postinc2
  7625  00154A  C02D  FFDE         	movff	??_CANreceiveMessage+1,postinc2
  7626  00154E  C02E  FFDE         	movff	??_CANreceiveMessage+2,postinc2
  7627  001552  C02F  FFDE         	movff	??_CANreceiveMessage+3,postinc2
  7628                           
  7629                           ; BSR set to: 15
  7630                           ;inc\CANlib.h: 561: tamp = (RXB1SIDL >> 5 ) & 0x07;
  7631  001556  010F               	movlb	15	; () banked
  7632  001558  3952               	swapf	82,w,b	;volatile
  7633  00155A  42E8               	rrncf	wreg,f,c
  7634  00155C  0B07               	andlw	7
  7635  00155E  0B07               	andlw	7
  7636  001560  6E35               	movwf	CANreceiveMessage@tamp,c
  7637                           
  7638                           ; BSR set to: 15
  7639                           ;inc\CANlib.h: 562: msg->identifier = msg->identifier + tamp;
  7640  001562  C02A  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7641  001566  C02B  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7642  00156A  CFDE F02C          	movff	postinc2,??_CANreceiveMessage
  7643  00156E  CFDE F02D          	movff	postinc2,??_CANreceiveMessage+1
  7644  001572  CFDE F02E          	movff	postinc2,??_CANreceiveMessage+2
  7645  001576  CFDE F02F          	movff	postinc2,??_CANreceiveMessage+3
  7646  00157A  5035               	movf	CANreceiveMessage@tamp,w,c
  7647  00157C  242C               	addwf	??_CANreceiveMessage,w,c
  7648  00157E  6E30               	movwf	(??_CANreceiveMessage+4)& (0+255),c
  7649  001580  0E00               	movlw	0
  7650  001582  202D               	addwfc	??_CANreceiveMessage+1,w,c
  7651  001584  6E31               	movwf	(??_CANreceiveMessage+5)& (0+255),c
  7652  001586  0E00               	movlw	0
  7653  001588  202E               	addwfc	??_CANreceiveMessage+2,w,c
  7654  00158A  6E32               	movwf	(??_CANreceiveMessage+6)& (0+255),c
  7655  00158C  0E00               	movlw	0
  7656  00158E  202F               	addwfc	??_CANreceiveMessage+3,w,c
  7657  001590  6E33               	movwf	(??_CANreceiveMessage+7)& (0+255),c
  7658  001592  C02A  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7659  001596  C02B  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7660  00159A  C030  FFDE         	movff	??_CANreceiveMessage+4,postinc2
  7661  00159E  C031  FFDE         	movff	??_CANreceiveMessage+5,postinc2
  7662  0015A2  C032  FFDE         	movff	??_CANreceiveMessage+6,postinc2
  7663  0015A6  C033  FFDE         	movff	??_CANreceiveMessage+7,postinc2
  7664                           
  7665                           ;inc\CANlib.h: 563: }
  7666  0015AA  D08D               	goto	i1l3370
  7667  0015AC                     i1l3344:
  7668                           
  7669                           ; BSR set to: 15
  7670                           ;inc\CANlib.h: 564: else
  7671                           ;inc\CANlib.h: 565: {
  7672                           ;inc\CANlib.h: 566: msg->identifier = (unsigned long) RXB1EIDL;
  7673  0015AC  CF54 F02C          	movff	3924,??_CANreceiveMessage	;volatile
  7674  0015B0  6A2D               	clrf	(??_CANreceiveMessage+1)& (0+255),c
  7675  0015B2  6A2E               	clrf	(??_CANreceiveMessage+2)& (0+255),c
  7676  0015B4  6A2F               	clrf	(??_CANreceiveMessage+3)& (0+255),c
  7677  0015B6  C02A  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7678  0015BA  C02B  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7679  0015BE  C02C  FFDE         	movff	??_CANreceiveMessage,postinc2
  7680  0015C2  C02D  FFDE         	movff	??_CANreceiveMessage+1,postinc2
  7681  0015C6  C02E  FFDE         	movff	??_CANreceiveMessage+2,postinc2
  7682  0015CA  C02F  FFDE         	movff	??_CANreceiveMessage+3,postinc2
  7683                           
  7684                           ; BSR set to: 15
  7685                           ;inc\CANlib.h: 567: msg->identifier += ((unsigned long) RXB1EIDH) << 8;
  7686  0015CE  CF53 F02C          	movff	3923,??_CANreceiveMessage	;volatile
  7687  0015D2  6A2D               	clrf	(??_CANreceiveMessage+1)& (0+255),c
  7688  0015D4  6A2E               	clrf	(??_CANreceiveMessage+2)& (0+255),c
  7689  0015D6  6A2F               	clrf	(??_CANreceiveMessage+3)& (0+255),c
  7690  0015D8  C02E  F02F         	movff	??_CANreceiveMessage+2,??_CANreceiveMessage+3
  7691  0015DC  C02D  F02E         	movff	??_CANreceiveMessage+1,??_CANreceiveMessage+2
  7692  0015E0  C02C  F02D         	movff	??_CANreceiveMessage,??_CANreceiveMessage+1
  7693  0015E4  6A2C               	clrf	??_CANreceiveMessage,c
  7694  0015E6  C02A  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7695  0015EA  C02B  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7696  0015EE  502C               	movf	??_CANreceiveMessage,w,c
  7697  0015F0  26DE               	addwf	postinc2,f,c
  7698  0015F2  502D               	movf	??_CANreceiveMessage+1,w,c
  7699  0015F4  22DE               	addwfc	postinc2,f,c
  7700  0015F6  502E               	movf	??_CANreceiveMessage+2,w,c
  7701  0015F8  22DE               	addwfc	postinc2,f,c
  7702  0015FA  502F               	movf	??_CANreceiveMessage+3,w,c
  7703  0015FC  22DE               	addwfc	postinc2,f,c
  7704                           
  7705                           ; BSR set to: 15
  7706                           ;inc\CANlib.h: 569: if (RXB1SIDLbits.EID16)
  7707  0015FE  010F               	movlb	15	; () banked
  7708  001600  A152               	btfss	82,0,b	;volatile
  7709  001602  D00C               	goto	i1l3352
  7710                           
  7711                           ; BSR set to: 15
  7712                           ;inc\CANlib.h: 570: msg->identifier |= 0x00010000;
  7713  001604  C02A  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7714  001608  C02B  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7715  00160C  0E00               	movlw	0
  7716  00160E  12DE               	iorwf	postinc2,f,c
  7717  001610  0E00               	movlw	0
  7718  001612  12DE               	iorwf	postinc2,f,c
  7719  001614  0E01               	movlw	1
  7720  001616  12DE               	iorwf	postinc2,f,c
  7721  001618  0E00               	movlw	0
  7722  00161A  12DE               	iorwf	postinc2,f,c
  7723  00161C                     i1l3352:
  7724                           
  7725                           ; BSR set to: 15
  7726                           ;inc\CANlib.h: 571: if (RXB1SIDLbits.EID17)
  7727  00161C  010F               	movlb	15	; () banked
  7728  00161E  A352               	btfss	82,1,b	;volatile
  7729  001620  D00C               	goto	i1l3356
  7730                           
  7731                           ; BSR set to: 15
  7732                           ;inc\CANlib.h: 572: msg->identifier |= 0x00020000;
  7733  001622  C02A  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7734  001626  C02B  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7735  00162A  0E00               	movlw	0
  7736  00162C  12DE               	iorwf	postinc2,f,c
  7737  00162E  0E00               	movlw	0
  7738  001630  12DE               	iorwf	postinc2,f,c
  7739  001632  0E02               	movlw	2
  7740  001634  12DE               	iorwf	postinc2,f,c
  7741  001636  0E00               	movlw	0
  7742  001638  12DE               	iorwf	postinc2,f,c
  7743  00163A                     i1l3356:
  7744                           
  7745                           ; BSR set to: 15
  7746                           ;inc\CANlib.h: 573: if (RXB1SIDLbits.SID0)
  7747  00163A  010F               	movlb	15	; () banked
  7748  00163C  AB52               	btfss	82,5,b	;volatile
  7749  00163E  D00C               	goto	i1l3360
  7750                           
  7751                           ; BSR set to: 15
  7752                           ;inc\CANlib.h: 574: msg->identifier |= 0x00040000;
  7753  001640  C02A  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7754  001644  C02B  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7755  001648  0E00               	movlw	0
  7756  00164A  12DE               	iorwf	postinc2,f,c
  7757  00164C  0E00               	movlw	0
  7758  00164E  12DE               	iorwf	postinc2,f,c
  7759  001650  0E04               	movlw	4
  7760  001652  12DE               	iorwf	postinc2,f,c
  7761  001654  0E00               	movlw	0
  7762  001656  12DE               	iorwf	postinc2,f,c
  7763  001658                     i1l3360:
  7764                           
  7765                           ; BSR set to: 15
  7766                           ;inc\CANlib.h: 575: if (RXB1SIDLbits.SID1)
  7767  001658  010F               	movlb	15	; () banked
  7768  00165A  AD52               	btfss	82,6,b	;volatile
  7769  00165C  D00C               	goto	i1l3364
  7770                           
  7771                           ; BSR set to: 15
  7772                           ;inc\CANlib.h: 576: msg->identifier |= 0x00080000;
  7773  00165E  C02A  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7774  001662  C02B  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7775  001666  0E00               	movlw	0
  7776  001668  12DE               	iorwf	postinc2,f,c
  7777  00166A  0E00               	movlw	0
  7778  00166C  12DE               	iorwf	postinc2,f,c
  7779  00166E  0E08               	movlw	8
  7780  001670  12DE               	iorwf	postinc2,f,c
  7781  001672  0E00               	movlw	0
  7782  001674  12DE               	iorwf	postinc2,f,c
  7783  001676                     i1l3364:
  7784                           
  7785                           ; BSR set to: 15
  7786                           ;inc\CANlib.h: 577: if (RXB1SIDLbits.SID2)
  7787  001676  010F               	movlb	15	; () banked
  7788  001678  AF52               	btfss	82,7,b	;volatile
  7789  00167A  D00C               	goto	i1l3368
  7790                           
  7791                           ; BSR set to: 15
  7792                           ;inc\CANlib.h: 578: msg->identifier |= 0x00100000;
  7793  00167C  C02A  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7794  001680  C02B  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7795  001684  0E00               	movlw	0
  7796  001686  12DE               	iorwf	postinc2,f,c
  7797  001688  0E00               	movlw	0
  7798  00168A  12DE               	iorwf	postinc2,f,c
  7799  00168C  0E10               	movlw	16
  7800  00168E  12DE               	iorwf	postinc2,f,c
  7801  001690  0E00               	movlw	0
  7802  001692  12DE               	iorwf	postinc2,f,c
  7803  001694                     i1l3368:
  7804                           
  7805                           ; BSR set to: 15
  7806                           ;inc\CANlib.h: 580: msg->identifier |= ((unsigned long) RXB1SIDH) << 21;
  7807  001694  CF51 F02C          	movff	3921,??_CANreceiveMessage	;volatile
  7808  001698  6A2D               	clrf	(??_CANreceiveMessage+1)& (0+255),c
  7809  00169A  6A2E               	clrf	(??_CANreceiveMessage+2)& (0+255),c
  7810  00169C  6A2F               	clrf	(??_CANreceiveMessage+3)& (0+255),c
  7811  00169E  0E15               	movlw	21
  7812  0016A0                     i1u377_25:
  7813  0016A0  90D8               	bcf	status,0,c
  7814  0016A2  362C               	rlcf	??_CANreceiveMessage,f,c
  7815  0016A4  362D               	rlcf	??_CANreceiveMessage+1,f,c
  7816  0016A6  362E               	rlcf	??_CANreceiveMessage+2,f,c
  7817  0016A8  362F               	rlcf	??_CANreceiveMessage+3,f,c
  7818  0016AA  2EE8               	decfsz	wreg,f,c
  7819  0016AC  D7F9               	goto	i1u377_25
  7820  0016AE  C02A  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7821  0016B2  C02B  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7822  0016B6  502C               	movf	??_CANreceiveMessage,w,c
  7823  0016B8  12DE               	iorwf	postinc2,f,c
  7824  0016BA  502D               	movf	??_CANreceiveMessage+1,w,c
  7825  0016BC  12DE               	iorwf	postinc2,f,c
  7826  0016BE  502E               	movf	??_CANreceiveMessage+2,w,c
  7827  0016C0  12DE               	iorwf	postinc2,f,c
  7828  0016C2  502F               	movf	??_CANreceiveMessage+3,w,c
  7829  0016C4  12DE               	iorwf	postinc2,f,c
  7830  0016C6                     i1l3370:
  7831                           
  7832                           ; BSR set to: 15
  7833                           ;inc\CANlib.h: 581: }
  7834                           ;inc\CANlib.h: 583: RXB1CONbits.RXFUL = 0x00;
  7835  0016C6  010F               	movlb	15	; () banked
  7836  0016C8  9F50               	bcf	80,7,b	;volatile
  7837                           
  7838                           ; BSR set to: 15
  7839                           ;inc\CANlib.h: 584: return (error);
  7840                           ;	Return value of _CANreceiveMessage is never used
  7841  0016CA  0012               	return	
  7842  0016CC                     i1l404:
  7843                           
  7844                           ; BSR set to: 15
  7845                           ;inc\CANlib.h: 585: }
  7846                           ;inc\CANlib.h: 587: if (RXB0CONbits.RXFUL ==0x01)
  7847  0016CC  AE60               	btfss	3936,7,c	;volatile
  7848  0016CE  0012               	return	
  7849                           
  7850                           ; BSR set to: 15
  7851                           ;inc\CANlib.h: 588: {
  7852                           ;inc\CANlib.h: 589: msg->identifier = 0;
  7853  0016D0  C02A  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7854  0016D4  C02B  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7855  0016D8  6ADE               	clrf	postinc2,c
  7856  0016DA  6ADE               	clrf	postinc2,c
  7857  0016DC  6ADE               	clrf	postinc2,c
  7858  0016DE  6ADD               	clrf	postdec2,c
  7859                           
  7860                           ; BSR set to: 15
  7861                           ;inc\CANlib.h: 590: msg->data[0] =RXB0D0;
  7862  0016E0  EE20 F004          	lfsr	2,4
  7863  0016E4  502A               	movf	CANreceiveMessage@msg,w,c
  7864  0016E6  26D9               	addwf	fsr2l,f,c
  7865  0016E8  502B               	movf	CANreceiveMessage@msg+1,w,c
  7866  0016EA  22DA               	addwfc	fsr2h,f,c
  7867  0016EC  CF66 FFDF          	movff	3942,indf2	;volatile
  7868                           
  7869                           ; BSR set to: 15
  7870                           ;inc\CANlib.h: 591: msg->data[1] =RXB0D1;
  7871  0016F0  EE20 F005          	lfsr	2,5
  7872  0016F4  502A               	movf	CANreceiveMessage@msg,w,c
  7873  0016F6  26D9               	addwf	fsr2l,f,c
  7874  0016F8  502B               	movf	CANreceiveMessage@msg+1,w,c
  7875  0016FA  22DA               	addwfc	fsr2h,f,c
  7876  0016FC  CF67 FFDF          	movff	3943,indf2	;volatile
  7877                           
  7878                           ; BSR set to: 15
  7879                           ;inc\CANlib.h: 592: msg->data[2] =RXB0D2;
  7880  001700  EE20 F006          	lfsr	2,6
  7881  001704  502A               	movf	CANreceiveMessage@msg,w,c
  7882  001706  26D9               	addwf	fsr2l,f,c
  7883  001708  502B               	movf	CANreceiveMessage@msg+1,w,c
  7884  00170A  22DA               	addwfc	fsr2h,f,c
  7885  00170C  CF68 FFDF          	movff	3944,indf2	;volatile
  7886                           
  7887                           ; BSR set to: 15
  7888                           ;inc\CANlib.h: 593: msg->data[3] =RXB0D3;
  7889  001710  EE20 F007          	lfsr	2,7
  7890  001714  502A               	movf	CANreceiveMessage@msg,w,c
  7891  001716  26D9               	addwf	fsr2l,f,c
  7892  001718  502B               	movf	CANreceiveMessage@msg+1,w,c
  7893  00171A  22DA               	addwfc	fsr2h,f,c
  7894  00171C  CF69 FFDF          	movff	3945,indf2	;volatile
  7895                           
  7896                           ; BSR set to: 15
  7897                           ;inc\CANlib.h: 594: msg->data[4] =RXB0D4;
  7898  001720  EE20 F008          	lfsr	2,8
  7899  001724  502A               	movf	CANreceiveMessage@msg,w,c
  7900  001726  26D9               	addwf	fsr2l,f,c
  7901  001728  502B               	movf	CANreceiveMessage@msg+1,w,c
  7902  00172A  22DA               	addwfc	fsr2h,f,c
  7903  00172C  CF6A FFDF          	movff	3946,indf2	;volatile
  7904                           
  7905                           ; BSR set to: 15
  7906                           ;inc\CANlib.h: 595: msg->data[5] =RXB0D5;
  7907  001730  EE20 F009          	lfsr	2,9
  7908  001734  502A               	movf	CANreceiveMessage@msg,w,c
  7909  001736  26D9               	addwf	fsr2l,f,c
  7910  001738  502B               	movf	CANreceiveMessage@msg+1,w,c
  7911  00173A  22DA               	addwfc	fsr2h,f,c
  7912  00173C  CF6B FFDF          	movff	3947,indf2	;volatile
  7913                           
  7914                           ; BSR set to: 15
  7915                           ;inc\CANlib.h: 596: msg->data[6] =RXB0D6;
  7916  001740  EE20 F00A          	lfsr	2,10
  7917  001744  502A               	movf	CANreceiveMessage@msg,w,c
  7918  001746  26D9               	addwf	fsr2l,f,c
  7919  001748  502B               	movf	CANreceiveMessage@msg+1,w,c
  7920  00174A  22DA               	addwfc	fsr2h,f,c
  7921  00174C  CF6C FFDF          	movff	3948,indf2	;volatile
  7922                           
  7923                           ; BSR set to: 15
  7924                           ;inc\CANlib.h: 597: msg->data[7] =RXB0D7;
  7925  001750  EE20 F00B          	lfsr	2,11
  7926  001754  502A               	movf	CANreceiveMessage@msg,w,c
  7927  001756  26D9               	addwf	fsr2l,f,c
  7928  001758  502B               	movf	CANreceiveMessage@msg+1,w,c
  7929  00175A  22DA               	addwfc	fsr2h,f,c
  7930  00175C  CF6D FFDF          	movff	3949,indf2	;volatile
  7931                           
  7932                           ; BSR set to: 15
  7933                           ;inc\CANlib.h: 599: msg->RTR = RXB0DLCbits.RXRTR;
  7934  001760  EE20 F00E          	lfsr	2,14
  7935  001764  502A               	movf	CANreceiveMessage@msg,w,c
  7936  001766  26D9               	addwf	fsr2l,f,c
  7937  001768  502B               	movf	CANreceiveMessage@msg+1,w,c
  7938  00176A  22DA               	addwfc	fsr2h,f,c
  7939  00176C  AC65               	btfss	3941,6,c	;volatile
  7940  00176E  D002               	goto	i1u379_20
  7941  001770  0E01               	movlw	1
  7942  001772  D001               	goto	i1u379_26
  7943  001774                     i1u379_20:
  7944  001774  0E00               	movlw	0
  7945  001776                     i1u379_26:
  7946  001776  6EDF               	movwf	indf2,c
  7947                           
  7948                           ; BSR set to: 15
  7949                           ;inc\CANlib.h: 601: msg->length = RXB0DLC & 0x0F;
  7950  001778  EE20 F00D          	lfsr	2,13
  7951  00177C  502A               	movf	CANreceiveMessage@msg,w,c
  7952  00177E  26D9               	addwf	fsr2l,f,c
  7953  001780  502B               	movf	CANreceiveMessage@msg+1,w,c
  7954  001782  22DA               	addwfc	fsr2h,f,c
  7955  001784  5065               	movf	3941,w,c	;volatile
  7956  001786  0B0F               	andlw	15
  7957  001788  6EDF               	movwf	indf2,c
  7958                           
  7959                           ; BSR set to: 15
  7960                           ;inc\CANlib.h: 603: msg->type = RXB0SIDLbits.EXID;
  7961  00178A  EE20 F00C          	lfsr	2,12
  7962  00178E  502A               	movf	CANreceiveMessage@msg,w,c
  7963  001790  26D9               	addwf	fsr2l,f,c
  7964  001792  502B               	movf	CANreceiveMessage@msg+1,w,c
  7965  001794  22DA               	addwfc	fsr2h,f,c
  7966  001796  A662               	btfss	3938,3,c	;volatile
  7967  001798  D002               	goto	i1u380_20
  7968  00179A  0E01               	movlw	1
  7969  00179C  D001               	goto	i1u380_26
  7970  00179E                     i1u380_20:
  7971  00179E  0E00               	movlw	0
  7972  0017A0                     i1u380_26:
  7973  0017A0  6EDF               	movwf	indf2,c
  7974                           
  7975                           ; BSR set to: 15
  7976                           ;inc\CANlib.h: 605: if (RXB0SIDLbits.EXID == 0)
  7977  0017A2  B662               	btfsc	3938,3,c	;volatile
  7978  0017A4  D043               	goto	i1l3406
  7979                           
  7980                           ; BSR set to: 15
  7981                           ;inc\CANlib.h: 606: {
  7982                           ;inc\CANlib.h: 607: msg->identifier = ((unsigned long)RXB0SIDH)<< 3;
  7983  0017A6  CF61 F02C          	movff	3937,??_CANreceiveMessage	;volatile
  7984  0017AA  6A2D               	clrf	(??_CANreceiveMessage+1)& (0+255),c
  7985  0017AC  6A2E               	clrf	(??_CANreceiveMessage+2)& (0+255),c
  7986  0017AE  6A2F               	clrf	(??_CANreceiveMessage+3)& (0+255),c
  7987  0017B0  0E03               	movlw	3
  7988  0017B2                     i1u382_25:
  7989  0017B2  90D8               	bcf	status,0,c
  7990  0017B4  362C               	rlcf	??_CANreceiveMessage,f,c
  7991  0017B6  362D               	rlcf	??_CANreceiveMessage+1,f,c
  7992  0017B8  362E               	rlcf	??_CANreceiveMessage+2,f,c
  7993  0017BA  362F               	rlcf	??_CANreceiveMessage+3,f,c
  7994  0017BC  2EE8               	decfsz	wreg,f,c
  7995  0017BE  D7F9               	goto	i1u382_25
  7996  0017C0  C02A  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7997  0017C4  C02B  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7998  0017C8  C02C  FFDE         	movff	??_CANreceiveMessage,postinc2
  7999  0017CC  C02D  FFDE         	movff	??_CANreceiveMessage+1,postinc2
  8000  0017D0  C02E  FFDE         	movff	??_CANreceiveMessage+2,postinc2
  8001  0017D4  C02F  FFDE         	movff	??_CANreceiveMessage+3,postinc2
  8002                           
  8003                           ; BSR set to: 15
  8004                           ;inc\CANlib.h: 608: tamp = (RXB0SIDL >> 5 ) & 0x07;
  8005  0017D8  3862               	swapf	3938,w,c	;volatile
  8006  0017DA  42E8               	rrncf	wreg,f,c
  8007  0017DC  0B07               	andlw	7
  8008  0017DE  0B07               	andlw	7
  8009  0017E0  6E35               	movwf	CANreceiveMessage@tamp,c
  8010                           
  8011                           ; BSR set to: 15
  8012                           ;inc\CANlib.h: 609: msg->identifier = msg->identifier + tamp;
  8013  0017E2  C02A  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8014  0017E6  C02B  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8015  0017EA  CFDE F02C          	movff	postinc2,??_CANreceiveMessage
  8016  0017EE  CFDE F02D          	movff	postinc2,??_CANreceiveMessage+1
  8017  0017F2  CFDE F02E          	movff	postinc2,??_CANreceiveMessage+2
  8018  0017F6  CFDE F02F          	movff	postinc2,??_CANreceiveMessage+3
  8019  0017FA  5035               	movf	CANreceiveMessage@tamp,w,c
  8020  0017FC  242C               	addwf	??_CANreceiveMessage,w,c
  8021  0017FE  6E30               	movwf	(??_CANreceiveMessage+4)& (0+255),c
  8022  001800  0E00               	movlw	0
  8023  001802  202D               	addwfc	??_CANreceiveMessage+1,w,c
  8024  001804  6E31               	movwf	(??_CANreceiveMessage+5)& (0+255),c
  8025  001806  0E00               	movlw	0
  8026  001808  202E               	addwfc	??_CANreceiveMessage+2,w,c
  8027  00180A  6E32               	movwf	(??_CANreceiveMessage+6)& (0+255),c
  8028  00180C  0E00               	movlw	0
  8029  00180E  202F               	addwfc	??_CANreceiveMessage+3,w,c
  8030  001810  6E33               	movwf	(??_CANreceiveMessage+7)& (0+255),c
  8031  001812  C02A  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8032  001816  C02B  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8033  00181A  C030  FFDE         	movff	??_CANreceiveMessage+4,postinc2
  8034  00181E  C031  FFDE         	movff	??_CANreceiveMessage+5,postinc2
  8035  001822  C032  FFDE         	movff	??_CANreceiveMessage+6,postinc2
  8036  001826  C033  FFDE         	movff	??_CANreceiveMessage+7,postinc2
  8037                           
  8038                           ;inc\CANlib.h: 610: }
  8039  00182A  D088               	goto	i1l3432
  8040  00182C                     i1l3406:
  8041                           
  8042                           ; BSR set to: 15
  8043                           ;inc\CANlib.h: 611: else
  8044                           ;inc\CANlib.h: 612: {
  8045                           ;inc\CANlib.h: 613: msg->identifier = (unsigned long) RXB0EIDL;
  8046  00182C  CF64 F02C          	movff	3940,??_CANreceiveMessage	;volatile
  8047  001830  6A2D               	clrf	(??_CANreceiveMessage+1)& (0+255),c
  8048  001832  6A2E               	clrf	(??_CANreceiveMessage+2)& (0+255),c
  8049  001834  6A2F               	clrf	(??_CANreceiveMessage+3)& (0+255),c
  8050  001836  C02A  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8051  00183A  C02B  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8052  00183E  C02C  FFDE         	movff	??_CANreceiveMessage,postinc2
  8053  001842  C02D  FFDE         	movff	??_CANreceiveMessage+1,postinc2
  8054  001846  C02E  FFDE         	movff	??_CANreceiveMessage+2,postinc2
  8055  00184A  C02F  FFDE         	movff	??_CANreceiveMessage+3,postinc2
  8056                           
  8057                           ; BSR set to: 15
  8058                           ;inc\CANlib.h: 614: msg->identifier += ((unsigned long) RXB0EIDH) << 8;
  8059  00184E  CF63 F02C          	movff	3939,??_CANreceiveMessage	;volatile
  8060  001852  6A2D               	clrf	(??_CANreceiveMessage+1)& (0+255),c
  8061  001854  6A2E               	clrf	(??_CANreceiveMessage+2)& (0+255),c
  8062  001856  6A2F               	clrf	(??_CANreceiveMessage+3)& (0+255),c
  8063  001858  C02E  F02F         	movff	??_CANreceiveMessage+2,??_CANreceiveMessage+3
  8064  00185C  C02D  F02E         	movff	??_CANreceiveMessage+1,??_CANreceiveMessage+2
  8065  001860  C02C  F02D         	movff	??_CANreceiveMessage,??_CANreceiveMessage+1
  8066  001864  6A2C               	clrf	??_CANreceiveMessage,c
  8067  001866  C02A  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8068  00186A  C02B  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8069  00186E  502C               	movf	??_CANreceiveMessage,w,c
  8070  001870  26DE               	addwf	postinc2,f,c
  8071  001872  502D               	movf	??_CANreceiveMessage+1,w,c
  8072  001874  22DE               	addwfc	postinc2,f,c
  8073  001876  502E               	movf	??_CANreceiveMessage+2,w,c
  8074  001878  22DE               	addwfc	postinc2,f,c
  8075  00187A  502F               	movf	??_CANreceiveMessage+3,w,c
  8076  00187C  22DE               	addwfc	postinc2,f,c
  8077                           
  8078                           ; BSR set to: 15
  8079                           ;inc\CANlib.h: 616: if (RXB0SIDLbits.EID16)
  8080  00187E  A062               	btfss	3938,0,c	;volatile
  8081  001880  D00C               	goto	i1l3414
  8082                           
  8083                           ; BSR set to: 15
  8084                           ;inc\CANlib.h: 617: msg->identifier |= 0x00010000;
  8085  001882  C02A  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8086  001886  C02B  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8087  00188A  0E00               	movlw	0
  8088  00188C  12DE               	iorwf	postinc2,f,c
  8089  00188E  0E00               	movlw	0
  8090  001890  12DE               	iorwf	postinc2,f,c
  8091  001892  0E01               	movlw	1
  8092  001894  12DE               	iorwf	postinc2,f,c
  8093  001896  0E00               	movlw	0
  8094  001898  12DE               	iorwf	postinc2,f,c
  8095  00189A                     i1l3414:
  8096                           
  8097                           ; BSR set to: 15
  8098                           ;inc\CANlib.h: 618: if (RXB0SIDLbits.EID17)
  8099  00189A  A262               	btfss	3938,1,c	;volatile
  8100  00189C  D00C               	goto	i1l3418
  8101                           
  8102                           ; BSR set to: 15
  8103                           ;inc\CANlib.h: 619: msg->identifier |= 0x00020000;
  8104  00189E  C02A  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8105  0018A2  C02B  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8106  0018A6  0E00               	movlw	0
  8107  0018A8  12DE               	iorwf	postinc2,f,c
  8108  0018AA  0E00               	movlw	0
  8109  0018AC  12DE               	iorwf	postinc2,f,c
  8110  0018AE  0E02               	movlw	2
  8111  0018B0  12DE               	iorwf	postinc2,f,c
  8112  0018B2  0E00               	movlw	0
  8113  0018B4  12DE               	iorwf	postinc2,f,c
  8114  0018B6                     i1l3418:
  8115                           
  8116                           ; BSR set to: 15
  8117                           ;inc\CANlib.h: 620: if (RXB0SIDLbits.SID0)
  8118  0018B6  AA62               	btfss	3938,5,c	;volatile
  8119  0018B8  D00C               	goto	i1l3422
  8120                           
  8121                           ; BSR set to: 15
  8122                           ;inc\CANlib.h: 621: msg->identifier |= 0x00040000;
  8123  0018BA  C02A  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8124  0018BE  C02B  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8125  0018C2  0E00               	movlw	0
  8126  0018C4  12DE               	iorwf	postinc2,f,c
  8127  0018C6  0E00               	movlw	0
  8128  0018C8  12DE               	iorwf	postinc2,f,c
  8129  0018CA  0E04               	movlw	4
  8130  0018CC  12DE               	iorwf	postinc2,f,c
  8131  0018CE  0E00               	movlw	0
  8132  0018D0  12DE               	iorwf	postinc2,f,c
  8133  0018D2                     i1l3422:
  8134                           
  8135                           ; BSR set to: 15
  8136                           ;inc\CANlib.h: 622: if (RXB0SIDLbits.SID1)
  8137  0018D2  AC62               	btfss	3938,6,c	;volatile
  8138  0018D4  D00C               	goto	i1l3426
  8139                           
  8140                           ; BSR set to: 15
  8141                           ;inc\CANlib.h: 623: msg->identifier |= 0x00080000;
  8142  0018D6  C02A  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8143  0018DA  C02B  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8144  0018DE  0E00               	movlw	0
  8145  0018E0  12DE               	iorwf	postinc2,f,c
  8146  0018E2  0E00               	movlw	0
  8147  0018E4  12DE               	iorwf	postinc2,f,c
  8148  0018E6  0E08               	movlw	8
  8149  0018E8  12DE               	iorwf	postinc2,f,c
  8150  0018EA  0E00               	movlw	0
  8151  0018EC  12DE               	iorwf	postinc2,f,c
  8152  0018EE                     i1l3426:
  8153                           
  8154                           ; BSR set to: 15
  8155                           ;inc\CANlib.h: 624: if (RXB0SIDLbits.SID2)
  8156  0018EE  AE62               	btfss	3938,7,c	;volatile
  8157  0018F0  D00C               	goto	i1l3430
  8158                           
  8159                           ; BSR set to: 15
  8160                           ;inc\CANlib.h: 625: msg->identifier |= 0x00100000;
  8161  0018F2  C02A  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8162  0018F6  C02B  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8163  0018FA  0E00               	movlw	0
  8164  0018FC  12DE               	iorwf	postinc2,f,c
  8165  0018FE  0E00               	movlw	0
  8166  001900  12DE               	iorwf	postinc2,f,c
  8167  001902  0E10               	movlw	16
  8168  001904  12DE               	iorwf	postinc2,f,c
  8169  001906  0E00               	movlw	0
  8170  001908  12DE               	iorwf	postinc2,f,c
  8171  00190A                     i1l3430:
  8172                           
  8173                           ; BSR set to: 15
  8174                           ;inc\CANlib.h: 627: msg->identifier |= ((unsigned long) RXB0SIDH) << 21;
  8175  00190A  CF61 F02C          	movff	3937,??_CANreceiveMessage	;volatile
  8176  00190E  6A2D               	clrf	(??_CANreceiveMessage+1)& (0+255),c
  8177  001910  6A2E               	clrf	(??_CANreceiveMessage+2)& (0+255),c
  8178  001912  6A2F               	clrf	(??_CANreceiveMessage+3)& (0+255),c
  8179  001914  0E15               	movlw	21
  8180  001916                     i1u388_25:
  8181  001916  90D8               	bcf	status,0,c
  8182  001918  362C               	rlcf	??_CANreceiveMessage,f,c
  8183  00191A  362D               	rlcf	??_CANreceiveMessage+1,f,c
  8184  00191C  362E               	rlcf	??_CANreceiveMessage+2,f,c
  8185  00191E  362F               	rlcf	??_CANreceiveMessage+3,f,c
  8186  001920  2EE8               	decfsz	wreg,f,c
  8187  001922  D7F9               	goto	i1u388_25
  8188  001924  C02A  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8189  001928  C02B  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8190  00192C  502C               	movf	??_CANreceiveMessage,w,c
  8191  00192E  12DE               	iorwf	postinc2,f,c
  8192  001930  502D               	movf	??_CANreceiveMessage+1,w,c
  8193  001932  12DE               	iorwf	postinc2,f,c
  8194  001934  502E               	movf	??_CANreceiveMessage+2,w,c
  8195  001936  12DE               	iorwf	postinc2,f,c
  8196  001938  502F               	movf	??_CANreceiveMessage+3,w,c
  8197  00193A  12DE               	iorwf	postinc2,f,c
  8198  00193C                     i1l3432:
  8199                           
  8200                           ; BSR set to: 15
  8201                           ;inc\CANlib.h: 629: }
  8202                           ;inc\CANlib.h: 630: RXB0CONbits.RXFUL = 0x00;
  8203  00193C  9E60               	bcf	3936,7,c	;volatile
  8204                           
  8205                           ; BSR set to: 15
  8206                           ;inc\CANlib.h: 632: return (error);
  8207                           ;	Return value of _CANreceiveMessage is never used
  8208  00193E  0012               	return	
  8209  001940                     __end_of_CANreceiveMessage:
  8210                           	opt stack 0
  8211                           pclatu	equ	0xFFB
  8212                           pclath	equ	0xFFA
  8213                           tblptru	equ	0xFF8
  8214                           tblptrh	equ	0xFF7
  8215                           tblptrl	equ	0xFF6
  8216                           tablat	equ	0xFF5
  8217                           prodh	equ	0xFF4
  8218                           prodl	equ	0xFF3
  8219                           intcon	equ	0xFF2
  8220                           intcon2	equ	0xFF1
  8221                           postinc0	equ	0xFEE
  8222                           fsr0h	equ	0xFEA
  8223                           fsr0l	equ	0xFE9
  8224                           wreg	equ	0xFE8
  8225                           fsr1h	equ	0xFE2
  8226                           fsr1l	equ	0xFE1
  8227                           bsr	equ	0xFE0
  8228                           indf2	equ	0xFDF
  8229                           postinc2	equ	0xFDE
  8230                           postdec2	equ	0xFDD
  8231                           fsr2h	equ	0xFDA
  8232                           fsr2l	equ	0xFD9
  8233                           status	equ	0xFD8
  8234                           
  8235 ;; *************** function _CANisRxReady *****************
  8236 ;; Defined at:
  8237 ;;		line 1163 in file "F:/Tesina/LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
  8238 ;; Parameters:    Size  Location     Type
  8239 ;;		None
  8240 ;; Auto vars:     Size  Location     Type
  8241 ;;		None
  8242 ;; Return value:  Size  Location     Type
  8243 ;;                  1    wreg      unsigned char 
  8244 ;; Registers used:
  8245 ;;		wreg, status,2
  8246 ;; Tracked objects:
  8247 ;;		On entry : 0/0
  8248 ;;		On exit  : 0/0
  8249 ;;		Unchanged: 0/0
  8250 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  8251 ;;      Params:         0       0       0       0
  8252 ;;      Locals:         1       0       0       0
  8253 ;;      Temps:          0       0       0       0
  8254 ;;      Totals:         1       0       0       0
  8255 ;;Total ram usage:        1 bytes
  8256 ;; Hardware stack levels used:    1
  8257 ;; Hardware stack levels required when called:    3
  8258 ;; This function calls:
  8259 ;;		Nothing
  8260 ;; This function is called by:
  8261 ;;		_ISR_bassa
  8262 ;; This function uses a non-reentrant model
  8263 ;;
  8264                           
  8265                           	psect	text21
  8266  002712                     __ptext21:
  8267                           	opt stack 0
  8268  002712                     _CANisRxReady:
  8269                           	opt stack 23
  8270                           
  8271                           ;inc\CANlib.h: 1165: return (RXB0CONbits.RXFUL || RXB1CONbits.RXFUL);
  8272                           
  8273                           ; BSR set to: 15
  8274                           ;incstack = 0
  8275  002712  0E01               	movlw	1
  8276  002714  6E2A               	movwf	_CANisRxReady$2805,c
  8277  002716  BE60               	btfsc	3936,7,c	;volatile
  8278  002718  D005               	goto	i1l555
  8279  00271A  010F               	movlb	15	; () banked
  8280  00271C  BF50               	btfsc	80,7,b	;volatile
  8281  00271E  D002               	goto	i1l555
  8282                           
  8283                           ; BSR set to: 15
  8284  002720  0E00               	movlw	0
  8285  002722  6E2A               	movwf	_CANisRxReady$2805,c
  8286  002724                     i1l555:
  8287  002724  502A               	movf	_CANisRxReady$2805,w,c
  8288  002726  0012               	return	
  8289  002728                     __end_of_CANisRxReady:
  8290                           	opt stack 0
  8291                           pclatu	equ	0xFFB
  8292                           pclath	equ	0xFFA
  8293                           tblptru	equ	0xFF8
  8294                           tblptrh	equ	0xFF7
  8295                           tblptrl	equ	0xFF6
  8296                           tablat	equ	0xFF5
  8297                           prodh	equ	0xFF4
  8298                           prodl	equ	0xFF3
  8299                           intcon	equ	0xFF2
  8300                           intcon2	equ	0xFF1
  8301                           postinc0	equ	0xFEE
  8302                           fsr0h	equ	0xFEA
  8303                           fsr0l	equ	0xFE9
  8304                           wreg	equ	0xFE8
  8305                           fsr1h	equ	0xFE2
  8306                           fsr1l	equ	0xFE1
  8307                           bsr	equ	0xFE0
  8308                           indf2	equ	0xFDF
  8309                           postinc2	equ	0xFDE
  8310                           postdec2	equ	0xFDD
  8311                           fsr2h	equ	0xFDA
  8312                           fsr2l	equ	0xFD9
  8313                           status	equ	0xFD8
  8314                           
  8315 ;; *************** function _ISR_alta *****************
  8316 ;; Defined at:
  8317 ;;		line 61 in file "motore.c"
  8318 ;; Parameters:    Size  Location     Type
  8319 ;;		None
  8320 ;; Auto vars:     Size  Location     Type
  8321 ;;		None
  8322 ;; Return value:  Size  Location     Type
  8323 ;;		None               void
  8324 ;; Registers used:
  8325 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  8326 ;; Tracked objects:
  8327 ;;		On entry : 0/0
  8328 ;;		On exit  : 0/0
  8329 ;;		Unchanged: 0/0
  8330 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  8331 ;;      Params:         0       0       0       0
  8332 ;;      Locals:         0       0       0       0
  8333 ;;      Temps:          0      14       0       0
  8334 ;;      Totals:         0      14       0       0
  8335 ;;Total ram usage:       14 bytes
  8336 ;; Hardware stack levels used:    1
  8337 ;; Hardware stack levels required when called:    2
  8338 ;; This function calls:
  8339 ;;		i2_delay_ms
  8340 ;; This function is called by:
  8341 ;;		Interrupt level 2
  8342 ;; This function uses a non-reentrant model
  8343 ;;
  8344                           
  8345                           	psect	intcode
  8346  000008                     __pintcode:
  8347                           	opt stack 0
  8348  000008                     _ISR_alta:
  8349                           	opt stack 23
  8350                           
  8351                           ;incstack = 0
  8352  000008  8249               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  8353  00000A  CFFA F068          	movff	pclath,??_ISR_alta
  8354  00000E  CFFB F069          	movff	pclatu,??_ISR_alta+1
  8355  000012  ED9B  F011         	call	int_func,f	;refresh shadow registers
  8356                           pclatu	equ	0xFFB
  8357                           pclath	equ	0xFFA
  8358                           tblptru	equ	0xFF8
  8359                           tblptrh	equ	0xFF7
  8360                           tblptrl	equ	0xFF6
  8361                           tablat	equ	0xFF5
  8362                           prodh	equ	0xFF4
  8363                           prodl	equ	0xFF3
  8364                           intcon	equ	0xFF2
  8365                           intcon2	equ	0xFF1
  8366                           postinc0	equ	0xFEE
  8367                           fsr0h	equ	0xFEA
  8368                           fsr0l	equ	0xFE9
  8369                           wreg	equ	0xFE8
  8370                           fsr1h	equ	0xFE2
  8371                           fsr1l	equ	0xFE1
  8372                           bsr	equ	0xFE0
  8373                           indf2	equ	0xFDF
  8374                           postinc2	equ	0xFDE
  8375                           postdec2	equ	0xFDD
  8376                           fsr2h	equ	0xFDA
  8377                           fsr2l	equ	0xFD9
  8378                           status	equ	0xFD8
  8379                           
  8380                           	psect	intcode_body
  8381  002336                     __pintcode_body:
  8382                           	opt stack 23
  8383  002336                     int_func:
  8384                           	opt stack 23
  8385  002336  0006               	pop		; remove dummy address from shadow register refresh
  8386  002338  CFE9 F06A          	movff	fsr0l,??_ISR_alta+2
  8387  00233C  CFEA F06B          	movff	fsr0h,??_ISR_alta+3
  8388  002340  CFE1 F06C          	movff	fsr1l,??_ISR_alta+4
  8389  002344  CFE2 F06D          	movff	fsr1h,??_ISR_alta+5
  8390  002348  CFD9 F06E          	movff	fsr2l,??_ISR_alta+6
  8391  00234C  CFDA F06F          	movff	fsr2h,??_ISR_alta+7
  8392  002350  CFF3 F070          	movff	prodl,??_ISR_alta+8
  8393  002354  CFF4 F071          	movff	prodh,??_ISR_alta+9
  8394  002358  CFF6 F072          	movff	tblptrl,??_ISR_alta+10
  8395  00235C  CFF7 F073          	movff	tblptrh,??_ISR_alta+11
  8396  002360  CFF8 F074          	movff	tblptru,??_ISR_alta+12
  8397  002364  CFF5 F075          	movff	tablat,??_ISR_alta+13
  8398                           
  8399                           ;motore.c: 62: if (INTCONbits.INT0IF == 1) {
  8400  002368  A2F2               	btfss	intcon,1,c	;volatile
  8401  00236A  D010               	goto	i2l622
  8402                           
  8403                           ;motore.c: 63: delay_ms(1);
  8404  00236C  0E00               	movlw	0
  8405  00236E  0100               	movlb	0	; () banked
  8406  002370  6F67               	movwf	(i2delay_ms@value_ms+1)& (0+255),b
  8407  002372  0E01               	movlw	1
  8408  002374  6F66               	movwf	i2delay_ms@value_ms& (0+255),b
  8409  002376  ECF2  F012         	call	i2_delay_ms	;wreg free
  8410                           
  8411                           ;motore.c: 64: if (misura == 1) {
  8412  00237A  A047               	btfss	_misura/(0+8),_misura& (0+7),c
  8413  00237C  D006               	goto	i2l3816
  8414                           
  8415                           ;motore.c: 65: counter++;
  8416  00237E  0E01               	movlw	1
  8417  002380  2609               	addwf	_counter,f,c
  8418  002382  0E00               	movlw	0
  8419  002384  220A               	addwfc	_counter+1,f,c
  8420  002386  220B               	addwfc	_counter+2,f,c
  8421  002388  220C               	addwfc	_counter+3,f,c
  8422  00238A                     i2l3816:
  8423                           
  8424                           ;motore.c: 66: }
  8425                           ;motore.c: 67: INTCONbits.INT0IF = 0;
  8426  00238A  92F2               	bcf	intcon,1,c	;volatile
  8427  00238C                     i2l622:
  8428  00238C  C075  FFF5         	movff	??_ISR_alta+13,tablat
  8429  002390  C074  FFF8         	movff	??_ISR_alta+12,tblptru
  8430  002394  C073  FFF7         	movff	??_ISR_alta+11,tblptrh
  8431  002398  C072  FFF6         	movff	??_ISR_alta+10,tblptrl
  8432  00239C  C071  FFF4         	movff	??_ISR_alta+9,prodh
  8433  0023A0  C070  FFF3         	movff	??_ISR_alta+8,prodl
  8434  0023A4  C06F  FFDA         	movff	??_ISR_alta+7,fsr2h
  8435  0023A8  C06E  FFD9         	movff	??_ISR_alta+6,fsr2l
  8436  0023AC  C06D  FFE2         	movff	??_ISR_alta+5,fsr1h
  8437  0023B0  C06C  FFE1         	movff	??_ISR_alta+4,fsr1l
  8438  0023B4  C06B  FFEA         	movff	??_ISR_alta+3,fsr0h
  8439  0023B8  C06A  FFE9         	movff	??_ISR_alta+2,fsr0l
  8440  0023BC  C069  FFFB         	movff	??_ISR_alta+1,pclatu
  8441  0023C0  C068  FFFA         	movff	??_ISR_alta,pclath
  8442  0023C4  9249               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  8443  0023C6  0011               	retfie		f
  8444  0023C8                     __end_of_ISR_alta:
  8445                           	opt stack 0
  8446                           pclatu	equ	0xFFB
  8447                           pclath	equ	0xFFA
  8448                           tblptru	equ	0xFF8
  8449                           tblptrh	equ	0xFF7
  8450                           tblptrl	equ	0xFF6
  8451                           tablat	equ	0xFF5
  8452                           prodh	equ	0xFF4
  8453                           prodl	equ	0xFF3
  8454                           intcon	equ	0xFF2
  8455                           intcon2	equ	0xFF1
  8456                           postinc0	equ	0xFEE
  8457                           fsr0h	equ	0xFEA
  8458                           fsr0l	equ	0xFE9
  8459                           wreg	equ	0xFE8
  8460                           fsr1h	equ	0xFE2
  8461                           fsr1l	equ	0xFE1
  8462                           bsr	equ	0xFE0
  8463                           indf2	equ	0xFDF
  8464                           postinc2	equ	0xFDE
  8465                           postdec2	equ	0xFDD
  8466                           fsr2h	equ	0xFDA
  8467                           fsr2l	equ	0xFD9
  8468                           status	equ	0xFD8
  8469                           
  8470 ;; *************** function i2_delay_ms *****************
  8471 ;; Defined at:
  8472 ;;		line 61 in file "F:/Tesina/LaurTec_PIC_libraries_v_3.3.0/src\delay.c"
  8473 ;; Parameters:    Size  Location     Type
  8474 ;;  value_ms        2    6[BANK0 ] unsigned int 
  8475 ;; Auto vars:     Size  Location     Type
  8476 ;;		None
  8477 ;; Return value:  Size  Location     Type
  8478 ;;		None               void
  8479 ;; Registers used:
  8480 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  8481 ;; Tracked objects:
  8482 ;;		On entry : 0/0
  8483 ;;		On exit  : 0/0
  8484 ;;		Unchanged: 0/0
  8485 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  8486 ;;      Params:         0       2       0       0
  8487 ;;      Locals:         0       0       0       0
  8488 ;;      Temps:          0       0       0       0
  8489 ;;      Totals:         0       2       0       0
  8490 ;;Total ram usage:        2 bytes
  8491 ;; Hardware stack levels used:    1
  8492 ;; Hardware stack levels required when called:    1
  8493 ;; This function calls:
  8494 ;;		i2___wmul
  8495 ;; This function is called by:
  8496 ;;		_ISR_alta
  8497 ;; This function uses a non-reentrant model
  8498 ;;
  8499                           
  8500                           	psect	text23
  8501  0025E4                     __ptext23:
  8502                           	opt stack 0
  8503  0025E4                     i2_delay_ms:
  8504                           	opt stack 23
  8505                           
  8506                           ;src\delay.c: 73: clock_counter_reference = value_ms * delay_quartz_frequency_value;
  8507                           
  8508                           ;incstack = 0
  8509  0025E4  C0BA  F060         	movff	_delay_quartz_frequency_value,i2___wmul@multiplier	;volatile
  8510  0025E8  0100               	movlb	0	; () banked
  8511  0025EA  6B61               	clrf	(i2___wmul@multiplier+1)& (0+255),b
  8512  0025EC  C066  F062         	movff	i2delay_ms@value_ms,i2___wmul@multiplicand
  8513  0025F0  C067  F063         	movff	i2delay_ms@value_ms+1,i2___wmul@multiplicand+1
  8514  0025F4  EC2A  F013         	call	i2___wmul	;wreg free
  8515  0025F8  C060  F0AD         	movff	?i2___wmul,_clock_counter_reference	;volatile
  8516  0025FC  C061  F0AE         	movff	?i2___wmul+1,_clock_counter_reference+1	;volatile
  8517                           
  8518                           ;src\delay.c: 75: while (clock_counter_reference) {
  8519  002600  D007               	goto	i2l563
  8520  002602                     i2l3804:
  8521                           
  8522                           ;src\delay.c: 85: _delay(240);
  8523  002602  0E50               	movlw	80
  8524  002604                     i2u445_47:
  8525  002604  2EE8               	decfsz	wreg,f,c
  8526  002606  D7FE               	goto	i2u445_47
  8527                           
  8528                           ;src\delay.c: 88: clock_counter_reference--;
  8529  002608  0100               	movlb	0	; () banked
  8530  00260A  07AD               	decf	_clock_counter_reference& (0+255),f,b	;volatile
  8531  00260C  A0D8               	btfss	status,0,c
  8532  00260E  07AE               	decf	(_clock_counter_reference+1)& (0+255),f,b	;volatile
  8533  002610                     i2l563:
  8534  002610  0100               	movlb	0	; () banked
  8535  002612  51AD               	movf	_clock_counter_reference& (0+255),w,b	;volatile
  8536  002614  0100               	movlb	0	; () banked
  8537  002616  11AE               	iorwf	(_clock_counter_reference+1)& (0+255),w,b	;volatile
  8538  002618  B4D8               	btfsc	status,2,c
  8539  00261A  0012               	return	
  8540  00261C  D7F2               	goto	i2l3804
  8541  00261E                     __end_ofi2_delay_ms:
  8542                           	opt stack 0
  8543                           pclatu	equ	0xFFB
  8544                           pclath	equ	0xFFA
  8545                           tblptru	equ	0xFF8
  8546                           tblptrh	equ	0xFF7
  8547                           tblptrl	equ	0xFF6
  8548                           tablat	equ	0xFF5
  8549                           prodh	equ	0xFF4
  8550                           prodl	equ	0xFF3
  8551                           intcon	equ	0xFF2
  8552                           intcon2	equ	0xFF1
  8553                           postinc0	equ	0xFEE
  8554                           fsr0h	equ	0xFEA
  8555                           fsr0l	equ	0xFE9
  8556                           wreg	equ	0xFE8
  8557                           fsr1h	equ	0xFE2
  8558                           fsr1l	equ	0xFE1
  8559                           bsr	equ	0xFE0
  8560                           indf2	equ	0xFDF
  8561                           postinc2	equ	0xFDE
  8562                           postdec2	equ	0xFDD
  8563                           fsr2h	equ	0xFDA
  8564                           fsr2l	equ	0xFD9
  8565                           status	equ	0xFD8
  8566                           
  8567 ;; *************** function i2___wmul *****************
  8568 ;; Defined at:
  8569 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\Umul16.c"
  8570 ;; Parameters:    Size  Location     Type
  8571 ;;  multiplier      2    0[BANK0 ] unsigned int 
  8572 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  8573 ;; Auto vars:     Size  Location     Type
  8574 ;;  __wmul          2    4[BANK0 ] unsigned int 
  8575 ;; Return value:  Size  Location     Type
  8576 ;;                  2    0[BANK0 ] unsigned int 
  8577 ;; Registers used:
  8578 ;;		wreg, status,2, status,0, prodl, prodh
  8579 ;; Tracked objects:
  8580 ;;		On entry : 0/0
  8581 ;;		On exit  : 0/0
  8582 ;;		Unchanged: 0/0
  8583 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  8584 ;;      Params:         0       4       0       0
  8585 ;;      Locals:         0       2       0       0
  8586 ;;      Temps:          0       0       0       0
  8587 ;;      Totals:         0       6       0       0
  8588 ;;Total ram usage:        6 bytes
  8589 ;; Hardware stack levels used:    1
  8590 ;; This function calls:
  8591 ;;		Nothing
  8592 ;; This function is called by:
  8593 ;;		i2_delay_ms
  8594 ;; This function uses a non-reentrant model
  8595 ;;
  8596                           
  8597                           	psect	text24
  8598  002654                     __ptext24:
  8599                           	opt stack 0
  8600  002654                     i2___wmul:
  8601                           	opt stack 23
  8602                           
  8603                           ; BSR set to: 0
  8604                           ;incstack = 0
  8605  002654  0100               	movlb	0	; () banked
  8606  002656  5160               	movf	i2___wmul@multiplier& (0+255),w,b
  8607  002658  0100               	movlb	0	; () banked
  8608  00265A  0362               	mulwf	i2___wmul@multiplicand& (0+255),b
  8609  00265C  CFF3 F064          	movff	prodl,i2___wmul@product
  8610  002660  CFF4 F065          	movff	prodh,i2___wmul@product+1
  8611  002664  0100               	movlb	0	; () banked
  8612  002666  5160               	movf	i2___wmul@multiplier& (0+255),w,b
  8613  002668  0100               	movlb	0	; () banked
  8614  00266A  0363               	mulwf	(i2___wmul@multiplicand+1)& (0+255),b
  8615  00266C  50F3               	movf	prodl,w,c
  8616  00266E  0100               	movlb	0	; () banked
  8617  002670  2765               	addwf	(i2___wmul@product+1)& (0+255),f,b
  8618  002672  0100               	movlb	0	; () banked
  8619  002674  5161               	movf	(i2___wmul@multiplier+1)& (0+255),w,b
  8620  002676  0100               	movlb	0	; () banked
  8621  002678  0362               	mulwf	i2___wmul@multiplicand& (0+255),b
  8622  00267A  50F3               	movf	prodl,w,c
  8623  00267C  0100               	movlb	0	; () banked
  8624  00267E  2765               	addwf	(i2___wmul@product+1)& (0+255),f,b
  8625                           
  8626                           ; BSR set to: 0
  8627  002680  C064  F060         	movff	i2___wmul@product,?i2___wmul
  8628  002684  C065  F061         	movff	i2___wmul@product+1,?i2___wmul+1
  8629  002688  0012               	return	
  8630  00268A                     __end_ofi2___wmul:
  8631                           	opt stack 0
  8632  0000                     pclatu	equ	0xFFB
  8633                           pclath	equ	0xFFA
  8634                           tblptru	equ	0xFF8
  8635                           tblptrh	equ	0xFF7
  8636                           tblptrl	equ	0xFF6
  8637                           tablat	equ	0xFF5
  8638                           prodh	equ	0xFF4
  8639                           prodl	equ	0xFF3
  8640                           intcon	equ	0xFF2
  8641                           intcon2	equ	0xFF1
  8642                           postinc0	equ	0xFEE
  8643                           fsr0h	equ	0xFEA
  8644                           fsr0l	equ	0xFE9
  8645                           wreg	equ	0xFE8
  8646                           fsr1h	equ	0xFE2
  8647                           fsr1l	equ	0xFE1
  8648                           bsr	equ	0xFE0
  8649                           indf2	equ	0xFDF
  8650                           postinc2	equ	0xFDE
  8651                           postdec2	equ	0xFDD
  8652                           fsr2h	equ	0xFDA
  8653                           fsr2l	equ	0xFD9
  8654                           status	equ	0xFD8
  8655                           pclatu	equ	0xFFB
  8656                           pclath	equ	0xFFA
  8657                           tblptru	equ	0xFF8
  8658                           tblptrh	equ	0xFF7
  8659                           tblptrl	equ	0xFF6
  8660                           tablat	equ	0xFF5
  8661                           prodh	equ	0xFF4
  8662                           prodl	equ	0xFF3
  8663                           intcon	equ	0xFF2
  8664                           intcon2	equ	0xFF1
  8665                           postinc0	equ	0xFEE
  8666                           fsr0h	equ	0xFEA
  8667                           fsr0l	equ	0xFE9
  8668                           wreg	equ	0xFE8
  8669                           fsr1h	equ	0xFE2
  8670                           fsr1l	equ	0xFE1
  8671                           bsr	equ	0xFE0
  8672                           indf2	equ	0xFDF
  8673                           postinc2	equ	0xFDE
  8674                           postdec2	equ	0xFDD
  8675                           fsr2h	equ	0xFDA
  8676                           fsr2l	equ	0xFD9
  8677                           status	equ	0xFD8
  8678                           
  8679                           	psect	param0
  8680  0000                     pclatu	equ	0xFFB
  8681                           pclath	equ	0xFFA
  8682                           tblptru	equ	0xFF8
  8683                           tblptrh	equ	0xFF7
  8684                           tblptrl	equ	0xFF6
  8685                           tablat	equ	0xFF5
  8686                           prodh	equ	0xFF4
  8687                           prodl	equ	0xFF3
  8688                           intcon	equ	0xFF2
  8689                           intcon2	equ	0xFF1
  8690                           postinc0	equ	0xFEE
  8691                           fsr0h	equ	0xFEA
  8692                           fsr0l	equ	0xFE9
  8693                           wreg	equ	0xFE8
  8694                           fsr1h	equ	0xFE2
  8695                           fsr1l	equ	0xFE1
  8696                           bsr	equ	0xFE0
  8697                           indf2	equ	0xFDF
  8698                           postinc2	equ	0xFDE
  8699                           postdec2	equ	0xFDD
  8700                           fsr2h	equ	0xFDA
  8701                           fsr2l	equ	0xFD9
  8702                           status	equ	0xFD8
  8703                           
  8704                           	psect	temp
  8705  000049                     btemp:
  8706                           	opt stack 0
  8707  000049                     	ds	1
  8708  0000                     int$flags	set	btemp
  8709                           pclatu	equ	0xFFB
  8710                           pclath	equ	0xFFA
  8711                           tblptru	equ	0xFF8
  8712                           tblptrh	equ	0xFF7
  8713                           tblptrl	equ	0xFF6
  8714                           tablat	equ	0xFF5
  8715                           prodh	equ	0xFF4
  8716                           prodl	equ	0xFF3
  8717                           intcon	equ	0xFF2
  8718                           intcon2	equ	0xFF1
  8719                           postinc0	equ	0xFEE
  8720                           fsr0h	equ	0xFEA
  8721                           fsr0l	equ	0xFE9
  8722                           wreg	equ	0xFE8
  8723                           fsr1h	equ	0xFE2
  8724                           fsr1l	equ	0xFE1
  8725                           bsr	equ	0xFE0
  8726                           indf2	equ	0xFDF
  8727                           postinc2	equ	0xFDE
  8728                           postdec2	equ	0xFDD
  8729                           fsr2h	equ	0xFDA
  8730                           fsr2l	equ	0xFD9
  8731                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        2
    BSS         74
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     29      72
    BANK0           160     57      91
    BANK1           256      0       0
    BANK2           256      0       0

Pointer List with Targets:

    CANreceiveMessage@msg	PTR struct . size(2) Largest target is 15
		 -> msg(COMRAM[15]), 

    CANsendMessage@data	PTR unsigned char  size(2) Largest target is 8
		 -> NULL(NULL[0]), data_array(COMRAM[8]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _ISR_alta in COMRAM

    None.

Critical Paths under _ISR_bassa in COMRAM

    _ISR_bassa->_CANreceiveMessage

Critical Paths under _main in BANK0

    _send_data->_CANsendMessage
    _send_data->_delay_ms
    _delay_ms->___wmul
    ___wmul->___awdiv
    _configurazione_iniziale->_CANInitialize
    _CANInitialize->_CANSetFilter
    _CANInitialize->_CANSetMask

Critical Paths under _ISR_alta in BANK0

    _ISR_alta->i2_delay_ms
    i2_delay_ms->i2___wmul

Critical Paths under _ISR_bassa in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR_alta in BANK1

    None.

Critical Paths under _ISR_bassa in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR_alta in BANK2

    None.

Critical Paths under _ISR_bassa in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 9     9      0   15590
                                             48 BANK0      9     9      0
                   _CANisRXwarningON
                   _CANisTXwarningON
                     _CANsendMessage
                          _OpenEPWM1
                         _OpenTimer2
                         _SetDCEPWM1
                     _SetOutputEPWM1
                            ___awdiv
                             ___wmul
                                _abs
            _configurazione_iniziale
                           _delay_ms
                          _send_data
 ---------------------------------------------------------------------------------
 (1) _send_data                                            0     0      0    3920
                       _CANisTxReady
                     _CANsendMessage
                           _delay_ms
 ---------------------------------------------------------------------------------
 (2) _delay_ms                                             2     0      2     989
                                             36 BANK0      2     0      2
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     417
                                             30 BANK0      6     2      4
                            ___awdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) _CANsendMessage                                      16     8      8    2907
                                             22 BANK0     16     8      8
 ---------------------------------------------------------------------------------
 (2) _CANisTxReady                                         1     1      0      24
                                             22 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _configurazione_iniziale                              0     0      0    5934
                      _CANInitialize
 ---------------------------------------------------------------------------------
 (2) _CANInitialize                                       12     7      5    5934
                                             36 BANK0     12     7      5
                   _CANOperationMode
                       _CANSetFilter
                         _CANSetMask
 ---------------------------------------------------------------------------------
 (3) _CANSetMask                                          14     9      5    1286
                                             22 BANK0     14     9      5
 ---------------------------------------------------------------------------------
 (3) _CANSetFilter                                        14     9      5    3858
                                             22 BANK0     14     9      5
 ---------------------------------------------------------------------------------
 (3) _CANOperationMode                                     1     1      0      44
                                             22 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _abs                                                  4     2      2     130
                                             22 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (1) ___awdiv                                              8     4      4     684
                                             22 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (1) _SetOutputEPWM1                                       2     1      1     260
                                             22 BANK0      2     1      1
 ---------------------------------------------------------------------------------
 (1) _SetDCEPWM1                                           6     4      2     260
                                             22 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (1) _OpenTimer2                                           1     1      0      44
                                             22 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _OpenEPWM1                                            1     1      0      22
                                             22 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _CANisTXwarningON                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _CANisRXwarningON                                     0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _ISR_bassa                                           17    17      0    1161
                                             12 COMRAM    17    17      0
                       _CANisRxReady
                  _CANreceiveMessage
 ---------------------------------------------------------------------------------
 (5) _CANreceiveMessage                                   12    10      2    1137
                                              0 COMRAM    12    10      2
 ---------------------------------------------------------------------------------
 (5) _CANisRxReady                                         1     1      0      24
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _ISR_alta                                            14    14      0     362
                                              8 BANK0     14    14      0
                         i2_delay_ms
 ---------------------------------------------------------------------------------
 (7) i2_delay_ms                                           2     0      2     362
                                              6 BANK0      2     0      2
                           i2___wmul
 ---------------------------------------------------------------------------------
 (8) i2___wmul                                             6     2      4     296
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _CANisRXwarningON
   _CANisTXwarningON
   _CANsendMessage
   _OpenEPWM1
   _OpenTimer2
   _SetDCEPWM1
   _SetOutputEPWM1
   ___awdiv
   ___wmul
     ___awdiv (ARG)
   _abs
   _configurazione_iniziale
     _CANInitialize
       _CANOperationMode
       _CANSetFilter
       _CANSetMask
   _delay_ms
     ___wmul
       ___awdiv (ARG)
   _send_data
     _CANisTxReady
     _CANsendMessage
     _delay_ms
       ___wmul
         ___awdiv (ARG)

 _ISR_bassa (ROOT)
   _CANisRxReady
   _CANreceiveMessage

 _ISR_alta (ROOT)
   i2_delay_ms
     i2___wmul

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             2FF      0       0      10        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0       0       8        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100      0       0       6        0.0%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0     39      5B       4       56.9%
BITCOMRAM           5E      0       1       0        1.1%
COMRAM              5E     1D      48       1       76.6%
BITSFR_3             0      0       0      40        0.0%
SFR_3                0      0       0      40        0.0%
BITSFR_2             0      0       0      40        0.0%
SFR_2                0      0       0      40        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      A3       9        0.0%
DATA                 0      0      A3      11        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.35 build -356382666 
Symbol Table                                                                                   Mon Dec 07 17:07:39 2015

              ??_CANisTXwarningON 0076              __end_of_CANSetFilter 0CA8  
                    ___awdiv@sign 007B                                _id 00A1  
                              bsr 000FE0               ___wmul@multiplicand 0080  
                     __CFG_BORV$3 000000                    _SetOutputEPWM1 24C8  
                    __CFG_CP0$OFF 000000                      __CFG_CP1$OFF 000000  
                     __CFG_OSC$HS 000000              _previousTimeCounter1 00A9  
                             l501 0B00                               l502 0B04  
                             l430 1F2E                               l503 0B10  
                             l431 1F32                               l520 0C5C  
                             l512 0C1C                               l504 0B14  
                             l440 203A                               l432 1F3E  
                             l352 216E                               l360 0DBA  
                             l513 0C20                               l505 0B20  
                             l441 2046                               l433 1F42  
                             l353 2178                               l361 0D4A  
                             l514 0C2C                               l506 0B24  
                             l442 204A                               l434 1F4E  
                             l426 1F0E                               l362 0D54  
                             l515 0C30                               l507 0B30  
                             l443 2056                               l427 1F12  
                             l363 0D5E                               l700 2510  
                             l516 0C3C                               l508 0B34  
                             l460 06A6                               l444 205A  
                             l428 1F1E                               l372 11B0  
                             l364 0D68                               l517 0C40  
                             l509 0B40                               l461 06B2  
                             l445 2066                               l437 2026  
                             l429 1F22                               l373 0F42  
                             l357 0F2C                               l518 0C4C  
                             l470 07BC                               l462 06B6  
                             l438 202A                               l550 26D4  
                             l390 1252                               l382 10FC  
                             l374 0F46                               l358 0CBE  
                             l519 0C50                               l471 07C0  
                             l463 06C2                               l439 2036  
                             l391 125C                               l383 1100  
                             l375 103E                               l367 0E78  
                             l359 0CC2                               l480 08CC  
                             l472 07CC                               l464 06C6  
                             l392 1266                               l384 110C  
                             l376 0FCE                               l368 0E7C  
                             l640 199C                               l481 08D8  
                             l473 07D0                               l465 06D2  
                             l457 0692                               l393 1270  
                             l377 0FD8                               l369 0E88  
                             l714 26F6                               l490 09E4  
                             l482 08DC                               l474 07DC  
                             l458 0696                               l378 0FE2  
                             l715 26F8                               l491 09E8  
                             l483 08E8                               l475 07E0  
                             l459 06A2                               l387 11C6  
                             l379 0FEC                               l563 25D6  
                             l492 09F4                               l484 08EC  
                             l476 07EC                               l468 07AC  
                             l396 1380                               l388 11CA  
                             l493 09F8                               l485 08F8  
                             l469 07B0                               l397 1384  
                             l389 12C2                               l645 1C24  
                             l494 0A04                               l486 08FC  
                             l398 1390                               l646 1C16  
                             l495 0A08                               l487 0908  
                             l479 08C8                               l647 1BD8  
                             l496 0A14                               l497 0A18  
                             l498 0A24                               l766 26AC  
                    __CFG_CPB$OFF 000000                               _PR2 000FCB  
                    __CFG_CPD$OFF 000000                               _abs 268A  
                             _dir 00B1                               _msg 0013  
                             wreg 000FE8                        i2_delay_ms 25E4  
                    __CFG_LVP$OFF 000000                      __CFG_WDT$OFF 000000  
                            ?_abs 0076                              l3040 21C8  
                            l3032 2166                              l3104 0E8C  
                            l3034 217C                              l3038 2184  
                            l3230 127A                              l3250 1374  
                            l3154 0FF6                              l2612 1E82  
                            l3180 1110                              l3174 10F0  
                            l3078 0D72                              l2712 0318  
                            l3256 1394                              l2730 03D2  
                            l3098 0E6C                              l3290 25C8  
                            l3540 24FE                              l3612 232C  
                            l3604 230A                              l2812 06D6  
                            l2644 1F98                              l2670 206A  
                            l2638 1F52                              l3536 24EE  
                            l3608 2318                              l2920 0A6E  
                            l3560 2402                              l2578 2704  
                            l2914 0A28                              l2818 071C  
                            l3714 19B4                              l3580 2294  
                            l2852 0836                              l2748 048C  
                            l2596 1DCC                              l3564 240E  
                            l2846 07F0                              l2766 0546  
                            l2694 0260                              l3718 19CC  
                            l3592 22C8                              l2880 090C  
                            l2784 0600                              l3594 22D4  
                            l3586 22AA                              l2954 0B8A  
                            l3762 1C70                              l3754 1C4A  
                            l3596 22DA                              l2948 0B44  
                            l2982 0C60                              l2886 0952  
                            l3774 1CAE                              l3758 1C5E  
                            u3010 0A48                              _LATA 000F89  
                            _LATB 000F8A                              u3015 0A3C  
                            _LATC 000F8B                              u2240 1D48  
                            _LATD 000F8C                              _LATE 000F8D  
                            u3300 0D92                              u2245 1D3C  
                            u3310 0DDE                              u2255 1DA8  
                            u2600 0408                              u2520 0294  
                            u2280 1DFE                              u3305 0D86  
                            u3170 0C80                              u3090 0B64  
                            u2450 208A                              u2370 1F72  
                            u3315 0DD2                              u4300 1A30  
                            u2605 03FC                              u2525 0288  
                            u2285 1DF2                              u3325 0E3E  
                            u3430 1016                              u4310 1AC6  
                            u3175 0C74                              u3095 0B58  
                            u2615 0468                              u2535 02F4  
                            u2455 207E                              u2375 1F66  
                            u2295 1E5E                              u2640 04C2  
                            u2560 034E                              u2480 01DC  
                            u3440 1062                              u4320 1B7A  
                            u4330 1BBA                              u3435 100A  
                            u2645 04B6                              u2565 0342  
                            u2485 01D0                              u3445 1056  
                            u2655 0522                              u2575 03AE  
                            u2495 023C                              u3455 10C2  
                            u2680 057C                              u3560 129A  
                            u2930 092C                              u2850 0810  
                            u2770 06F6                              u3570 12E6  
                            u3900 274E                              u2685 0570  
                            u3565 128E                              u2935 0920  
                            u2855 0804                              u2775 06EA  
                            u2695 05DC                              u3575 12DA  
                            u4447 25CA                              u3585 1346  
                            u3890 2742                              u3995 2570  
                            _TMR2 000FCC               __size_of_CANSetMask 039E  
                            abs@a 0076                              _main 1940  
                            fsr0h 000FEA                              fsr1h 000FE2  
                            fsr0l 000FE9                              fsr2h 000FDA  
                            fsr1l 000FE1                              indf2 000FDF  
                            fsr2l 000FD9                              btemp 0049  
                            pclat 000FFA                              prodh 000FF4  
                            prodl 000FF3                              start 019E  
                   __CFG_IESO$OFF 000000                     __CFG_MCLRE$ON 000000  
                    ___param_bank 000000                  _CANOperationMode 26FC  
          __end_of_SetOutputEPWM1 251A                             ??_abs 0078  
      __size_of_CANreceiveMessage 050C                             ?_main 002A  
                 __end_of___awdiv 2336                   ___awdiv@divisor 0078  
                           _T2CON 000FCA                             _T3CON 000FB1  
                           i1l404 16CC                             i1l555 2724  
                           i1l635 0138                             i1l628 013C  
                           i1l637 0156                             i2l622 238C  
                           i2l563 2610                   ___awdiv@counter 007A  
                           _TMR3H 000FB3                             _TMR3L 000FB2  
                           _PORTD 000F83                 _CANisRxReady$2805 002A  
                           _TRISA 000F92                             _TRISB 000F93  
                           _TRISC 000F94                             _TRISD 000F95  
                           _TRISE 000F96                     __CFG_PWRT$OFF 000000  
                   __CFG_WRT0$OFF 000000                     __CFG_WRT1$OFF 000000  
              __size_of_ISR_bassa 0186                    __CFG_EBTR0$OFF 000000  
                  __CFG_FCMEN$OFF 000000                    __CFG_EBTR1$OFF 000000  
              CANInitialize@flags 0088                  __end_of_ISR_alta 23C8  
                   __CFG_WRTB$OFF 000000                     __CFG_WRTC$OFF 000000  
                   __CFG_WRTD$OFF 000000                    __CFG_EBTRB$OFF 000000  
                  __pbitbssCOMRAM 0238              __end_of_CANisRxReady 2728  
                           tablat 000FF5              __end_of_CANisTxReady 26DA  
                __end_ofi2___wmul 268A                             status 000FD8  
                  __CFG_PBADEN$ON 000000                        _SetDCEPWM1 2566  
                 __initialization 251A                      __end_of_main 1D14  
                 ?_SetOutputEPWM1 0076                            ??_main 0090  
                   __activetblptr 000002                 _CANisTxReady$2803 0076  
                     ?i2_delay_ms 0066                     _counter_array 0001  
                          _ADCON1 000FC1                            _CANCON 000F6F  
                ___awdiv@dividend 0076                   __CFG_BBSIZ$1024 000000  
                          i1l3430 190A                            i1l3422 18D2  
                          i1l3414 189A                            i1l3406 182C  
                          i1l3432 193C                            i1l3360 1658  
                          i1l3352 161C                            i1l3344 15AC  
                          i1l3426 18EE                            i1l3418 18B6  
                          i1l3370 16C6                            i1l3364 1676  
                          i1l3356 163A                            i1l3368 1694  
                          i1l3654 009C                            i1l3646 0066  
                          i1l3672 0110                            i1l3664 00D6  
                          i1l3678 0122                        _OpenTimer2 26DA  
                          i2l3804 2602                            i2l3816 238A  
                          _RXB0D0 000F66                            _RXB0D1 000F67  
                          _RXB0D2 000F68                            _RXB0D3 000F69  
                          _RXB0D4 000F6A                            _RXB1D0 000F56  
                          _RXB0D5 000F6B                            _RXB1D1 000F57  
                          _RXB0D6 000F6C                            _RXB1D2 000F58  
                          _RXB0D7 000F6D                            _RXB1D3 000F59  
                          _RXB1D4 000F5A                            _RXB1D5 000F5B  
                          _RXB1D6 000F5C                            _RXB1D7 000F5D  
                          _TXB0D0 000F46                            _TXB0D1 000F47  
                          _TXB0D2 000F48                            _TXB0D3 000F49  
                          _TXB1D0 000F36                            _TXB0D4 000F4A  
                          _TXB1D1 000F37                            _TXB0D5 000F4B  
                          _TXB1D2 000F38                            _TXB0D6 000F4C  
                          _TXB1D3 000F39                            _TXB0D7 000F4D  
                          _TXB2D0 000F26                            _TXB1D4 000F3A  
                          _TXB2D1 000F27                            _TXB1D5 000F3B  
                          _TXB2D2 000F28                            _TXB1D6 000F3C  
                          _TXB2D3 000F29                            _TXB1D7 000F3D  
                          _TXB2D4 000F2A                            _TXB2D5 000F2B  
                          _TXB2D6 000F2C                            _TXB2D7 000F2D  
              CANsendMessage@data 007A                CANsendMessage@tamp 0082  
                __end_of_delay_ms 25E4             __size_of_CANSetFilter 0B06  
                  __CFG_XINST$OFF 000000                __size_of_OpenEPWM1 0012  
               __end_of_ISR_bassa 019E                            ___wmul 261E  
                       ??___awdiv 007A                    __CFG_STVREN$ON 000000  
                    ??_CANSetMask 007B                            _errore 00B3  
                OpenTimer2@config 0076                            clear_0 2520  
                          clear_1 252E                  ___awdiv@quotient 007C  
                          _misura 0238          ?_configurazione_iniziale 002A  
                 __CFG_BOREN$BOHW 000000                      __pdataCOMRAM 0048  
                          tblptrh 000FF7                            tblptrl 000FF6  
                          tblptru 000FF8                      _CANSetFilter 01A2  
                      __accesstop 0060           __end_of__initialization 2558  
              __end_of_CANSetMask 20B2                     ___rparam_used 000000  
       __size_of_CANisRXwarningON 000C                       ?_SetDCEPWM1 0076  
                  __pcstackCOMRAM 002A               __size_ofi2_delay_ms 003A  
                    __pidataBANK0 2753                         ?_ISR_alta 002A  
           CANSetFilter@numBuffer 007F                         ?i2___wmul 0060  
                 OpenEPWM1@period 0076         __size_of_CANisTXwarningON 000C  
           __size_of_CANisRxReady 0016             __size_of_CANisTxReady 0024  
               __end_of_OpenEPWM1 273A          __end_of_CANOperationMode 2712  
                      __pbssBANK0 0099                       ?_OpenTimer2 002A  
                      _data_array 0022           __size_of_CANsendMessage 078C  
                         ?___wmul 007E                        ??_ISR_alta 0068  
              __size_of_send_data 0088                      _CANisRxReady 2712  
                         _ECCPR1L 000FBB                           _CANSTAT 000F6E  
                    _CANisTxReady 26B6                           _BRGCON1 000F70  
                         _BRGCON2 000F71                           _BRGCON3 000F72  
                      ??i2___wmul 0064            __size_of_CANInitialize 01C6  
                       ?_delay_ms 0084                           _RXB0DLC 000F65  
                         _RXB1DLC 000F55                           _RXB0CON 000F60  
             __size_of_SetDCEPWM1 0044                           _RXB1CON 000F50  
                         _TXB0DLC 000F45                           _TXB1DLC 000F35  
                         _TXB2DLC 000F25               CANsendMessage@flags 007D  
        SetOutputEPWM1@outputmode 0076                        _correzione 00AF  
                ??_SetOutputEPWM1 0077                           __Hparam 0000  
                      _left_speed 00B6                           __Lparam 0000  
                delay_ms@value_ms 0084                           ___awdiv 2278  
                 __size_of___wmul 0036              CANInitialize@propSeg 008D  
                         __pcinit 251A                           __ramtop 0300  
             __size_of_OpenTimer2 0022                           __ptext0 1940  
                         __ptext1 23C8                           __ptext2 25AA  
                         __ptext3 261E                           __ptext4 0CA8  
                         __ptext5 26B6                           __ptext6 2450  
                         __ptext7 20B2                           __ptext8 1D14  
                         __ptext9 01A2                           _counter 0009  
                       _T2CONbits 000FCA                      __size_of_abs 002C  
                      _duty_cycle 0011                      ??i2_delay_ms 0068  
                      ??_delay_ms 0086            CANreceiveMessage@error 0034  
                  __pintcode_body 2336              end_of_initialization 2558  
               __end_of_send_data 2450                     __Lmediumconst 0000  
                         int_func 2336               i2___wmul@multiplier 0060  
                _CANisRXwarningON 2746                     _CANInitialize 20B2  
                         postdec2 000FDD                           postinc0 000FEE  
                         postinc2 000FDE                __end_ofi2_delay_ms 261E  
                       _ISR_bassa 0018                         _PORTAbits 000F80  
                  CANSetMask@mask 0076                    CANSetMask@tamp 0080  
                  CANSetMask@type 007A                  _CANisTXwarningON 273A  
                       _TRISDbits 000F95  __size_of_configurazione_iniziale 0078  
             _previousTimeCounter 00A5           _clock_counter_reference 00AD  
                  _CANsendMessage 0CA8                  CANInitialize@BRP 0087  
                CANInitialize@SJW 0086                    ?_CANInitialize 0084  
                      main@period 0098                      ??_SetDCEPWM1 0078  
                      ?_ISR_bassa 002A                    __end_of___wmul 2654  
                   __pidataCOMRAM 2752                 __size_of_ISR_alta 23C0  
                i2___wmul@product 0064               start_initialization 251A  
               __size_ofi2___wmul 0036                       __end_of_abs 26B6  
              __end_of_SetDCEPWM1 25AA               CANSetMask@numBuffer 007F  
          __end_of_CANsendMessage 1434                 ?_CANOperationMode 002A  
                    ??_OpenTimer2 0076                         _OpenEPWM1 2728  
              ??_CANOperationMode 0076        CANInitialize@FilterConfig1 008E  
      CANInitialize@FilterConfig2 008F                          ??___wmul 0082  
                     __pdataBANK0 00BA                  __CFG_LPT1OSC$OFF 000000  
              __end_of_OpenTimer2 26FC            CANInitialize@phaseSeg1 0084  
          CANInitialize@phaseSeg2 0085                       __pbssCOMRAM 0001  
                   __pcstackBANK0 0060                       _BRGCON2bits 000F71  
                     _BRGCON3bits 000F72               SetDCEPWM1@dutycycle 0076  
               __size_of_delay_ms 003A                   ?_CANsendMessage 0076  
                      ?_OpenEPWM1 002A                   ??_CANInitialize 0089  
                    _currentSpeed 0048                CANSetFilter@filter 0076  
                       __pintcode 0008                          ?___awdiv 0076  
                     ??_ISR_bassa 0036                       __pintcodelo 0018  
                        _ECCP1CON 000FBA          __end_of_CANisRXwarningON 2752  
                     _COMSTATbits 000F74        SetOutputEPWM1@outputconfig 0077  
         _configurazione_iniziale 2450             CANreceiveMessage@tamp 0035  
                  ___wmul@product 0082                          _IPR2bits 000FA2  
    _delay_quartz_frequency_value 00BA                          _PIE1bits 000F9D  
                        _IPR3bits 000FA5                          _PIE2bits 000FA0  
                       _send_data 23C8                          _PIE3bits 000FA3  
        __end_of_CANisTXwarningON 2746                          i1u419_20 009A  
                        i1u371_25 1530                          i1u380_20 179E  
                        i1u380_26 17A0                          i1u382_25 17B2  
                        i1u368_20 14EC                          i1u368_26 14EE  
                        i1u369_20 151A                          i1u377_25 16A0  
                        i1u369_26 151C                          i1u379_20 1774  
                        i1u379_26 1776                          i1u388_25 1916  
                        _PIR1bits 000F9E                          _PIR2bits 000FA1  
                        _PIR3bits 000FA4                          i2u445_47 2604  
                        _RXB0EIDH 000F63                          _RXB0EIDL 000F64  
                        _RXB1EIDH 000F53                          _RXB1EIDL 000F54  
                        _RCONbits 000FD0                  __CFG_WDTPS$32768 000000  
                        _RXB0SIDH 000F61                          _RXB0SIDL 000F62  
                        _RXF0EIDH 000F02                          _RXB1SIDH 000F51  
                        _RXF0EIDL 000F03                          _RXB1SIDL 000F52  
                        _RXF1EIDH 000F06                          _RXF1EIDL 000F07  
                        _RXF2EIDH 000F0A                          _RXF2EIDL 000F0B  
                        _RXF3EIDH 000F0E                          _RXF3EIDL 000F0F  
                        _RXF4EIDH 000F12                          _RXF4EIDL 000F13  
                        _RXF5EIDH 000F16                          _RXF5EIDL 000F17  
                        _RXF0SIDH 000F00                          _RXF0SIDL 000F01  
                        _TXB0EIDH 000F43                          _RXF1SIDH 000F04  
                        _TXB0EIDL 000F44                          _RXF1SIDL 000F05  
                        _TXB1EIDH 000F33                          _RXF2SIDH 000F08  
                        _TXB1EIDL 000F34                          _RXF2SIDL 000F09  
                        _ISR_alta 0008                          _TXB2EIDH 000F23  
                        _RXF3SIDH 000F0C                          _TXB2EIDL 000F24  
                        _RXF3SIDL 000F0D                          _RXF4SIDH 000F10  
                        _RXF4SIDL 000F11                          _RXF5SIDH 000F14  
                        _RXF5SIDL 000F15                          _RXM0EIDH 000F1A  
                        _RXM0EIDL 000F1B                          _TXB0SIDH 000F41  
                        _RXM1EIDH 000F1E                          _TXB0SIDL 000F42  
                        _RXM1EIDL 000F1F                          _TXB1SIDH 000F31  
                        _TXB1SIDL 000F32                          _TXB2SIDH 000F21  
                        _TXB2SIDL 000F22                          _RXM0SIDH 000F18  
                        _RXM0SIDL 000F19                          _RXM1SIDH 000F1C  
                        _RXM1SIDL 000F1D                          _RXERRCNT 000F75  
              i2delay_ms@value_ms 0066                          _TXERRCNT 000F76  
               ___wmul@multiplier 007E                          i2___wmul 2654  
                   ?_CANSetFilter 0076                       _INTCON2bits 000FF1  
                      _CANCONbits 000F6F                       ??_OpenEPWM1 0076  
                        __Hparam0 0000                        ?_send_data 002A  
                        __Lparam0 0000                      _RXB0SIDLbits 000F62  
                SetDCEPWM1@DCycle 007A                      _RXB1SIDLbits 000F52  
                      _CANSetMask 1D14                  __size_of___awdiv 00BE  
           i2___wmul@multiplicand 0062           __size_of_SetOutputEPWM1 0052  
              _currentSpeed_array 0099         ??_configurazione_iniziale 0090  
                    _RXF0SIDLbits 000F01                          _delay_ms 25AA  
                    _RXF1SIDLbits 000F05                    ??_CANSetFilter 007B  
                        __ptext10 26FC                          __ptext11 268A  
                        __ptext20 1434                          __ptext12 2278  
                        __ptext21 2712                          __ptext13 24C8  
                        __ptext14 2566                          __ptext23 25E4  
                        __ptext15 26DA                          __ptext24 2654  
                        __ptext16 2728                          __ptext17 273A  
                        __ptext18 2746                      _RXF2SIDLbits 000F09  
                    _RXF3SIDLbits 000F0D                      _RXF4SIDLbits 000F11  
                    _RXF5SIDLbits 000F15          CANsendMessage@dataLength 007C  
                    _remote_frame 0239                     __size_of_main 03D4  
                        _duty_set 00B5              CANreceiveMessage@msg 002A  
                    _TXB0SIDLbits 000F42                      _TXB1SIDLbits 000F32  
                    _TXB2SIDLbits 000F22                          int$flags 0049  
       __size_of_CANOperationMode 0016                     ?_CANisRxReady 002A  
                   ?_CANisTxReady 002A                       _RXB0DLCbits 000F65  
                     _RXB1DLCbits 000F55                      _RXM0SIDLbits 000F19  
                     _RXB0CONbits 000F60                       _RXB1CONbits 000F50  
               _CANreceiveMessage 1434                      _RXM1SIDLbits 000F1D  
                      _INTCONbits 000FF2                  ??_CANsendMessage 007E  
                    _requestSpeed 00B8                ?_CANreceiveMessage 002A  
        CANsendMessage@identifier 0076                          intlevel1 0000  
                        intlevel2 0000                  CANSetFilter@tamp 0080  
                CANSetFilter@type 007A               ??_CANreceiveMessage 002C  
                     _TXB0DLCbits 000F45                       _right_speed 00B9  
                     _TXB1DLCbits 000F35                       _TXB0CONbits 000F40  
                     ??_send_data 0086                       _TXB2DLCbits 000F25  
 __end_of_configurazione_iniziale 24C8                       _TXB1CONbits 000F30  
                     _TXB2CONbits 000F20                       _timeCounter 000D  
            CANOperationMode@mode 0076                    ??_CANisRxReady 002A  
                     ?_CANSetMask 0076                    ??_CANisTxReady 0076  
       __end_of_CANreceiveMessage 1940                 ?_CANisRXwarningON 002A  
              ??_CANisRXwarningON 0076                       _previousPwm 00B7  
           __end_of_CANInitialize 2278                 ?_CANisTXwarningON 002A  
