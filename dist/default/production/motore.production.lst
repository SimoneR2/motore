

Microchip Technology PIC18 LITE Macro Assembler V1.35 build -356382666 
                                                                                               Thu Jan 28 18:03:45 2016

Microchip Technology Omniscient Code Generator v1.35 (Free mode) build 201507080246
     1                           	processor	18F4480
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bitbssCOMRAM,global,bit,class=COMRAM,space=1,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1
    18                           	psect	text5,global,reloc=2,class=CODE,delta=1
    19                           	psect	text6,global,reloc=2,class=CODE,delta=1
    20                           	psect	text7,global,reloc=2,class=CODE,delta=1
    21                           	psect	text8,global,reloc=2,class=CODE,delta=1
    22                           	psect	text9,global,reloc=2,class=CODE,delta=1
    23                           	psect	text10,global,reloc=2,class=CODE,delta=1
    24                           	psect	text11,global,reloc=2,class=CODE,delta=1
    25                           	psect	text12,global,reloc=2,class=CODE,delta=1
    26                           	psect	text13,global,reloc=2,class=CODE,delta=1
    27                           	psect	text14,global,reloc=2,class=CODE,delta=1
    28                           	psect	text15,global,reloc=2,class=CODE,delta=1
    29                           	psect	text16,global,reloc=2,class=CODE,delta=1
    30                           	psect	text17,global,reloc=2,class=CODE,delta=1
    31                           	psect	text18,global,reloc=2,class=CODE,delta=1
    32                           	psect	text19,global,reloc=2,class=CODE,delta=1
    33                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    34                           	psect	text21,global,reloc=2,class=CODE,delta=1
    35                           	psect	text22,global,reloc=2,class=CODE,delta=1
    36                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    37                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    38                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    39  0000                     
    40                           	psect	idataCOMRAM
    41  00262C                     __pidataCOMRAM:
    42                           	opt stack 0
    43                           
    44                           ;initializer for _currentSpeed
    45  00262C  01                 	db	1
    46                           
    47                           ;initializer for _delay_quartz_frequency_value
    48  00262D  10                 	db	16
    49  0000                     _RXB1CON	set	3920
    50  0000                     _RXB1CONbits	set	3920
    51  0000                     _RXB1D0	set	3926
    52  0000                     _RXB1D1	set	3927
    53  0000                     _RXB1D2	set	3928
    54  0000                     _RXB1D3	set	3929
    55  0000                     _RXB1D4	set	3930
    56  0000                     _RXB1D5	set	3931
    57  0000                     _RXB1D6	set	3932
    58  0000                     _RXB1D7	set	3933
    59  0000                     _RXB1DLC	set	3925
    60  0000                     _RXB1DLCbits	set	3925
    61  0000                     _RXB1EIDH	set	3923
    62  0000                     _RXB1EIDL	set	3924
    63  0000                     _RXB1SIDH	set	3921
    64  0000                     _RXB1SIDL	set	3922
    65  0000                     _RXB1SIDLbits	set	3922
    66  0000                     _RXF0EIDH	set	3842
    67  0000                     _RXF0EIDL	set	3843
    68  0000                     _RXF0SIDH	set	3840
    69  0000                     _RXF0SIDL	set	3841
    70  0000                     _RXF0SIDLbits	set	3841
    71  0000                     _RXF1EIDH	set	3846
    72  0000                     _RXF1EIDL	set	3847
    73  0000                     _RXF1SIDH	set	3844
    74  0000                     _RXF1SIDL	set	3845
    75  0000                     _RXF1SIDLbits	set	3845
    76  0000                     _RXF2EIDH	set	3850
    77  0000                     _RXF2EIDL	set	3851
    78  0000                     _RXF2SIDH	set	3848
    79  0000                     _RXF2SIDL	set	3849
    80  0000                     _RXF2SIDLbits	set	3849
    81  0000                     _RXF3EIDH	set	3854
    82  0000                     _RXF3EIDL	set	3855
    83  0000                     _RXF3SIDH	set	3852
    84  0000                     _RXF3SIDL	set	3853
    85  0000                     _RXF3SIDLbits	set	3853
    86  0000                     _RXF4EIDH	set	3858
    87  0000                     _RXF4EIDL	set	3859
    88  0000                     _RXF4SIDH	set	3856
    89  0000                     _RXF4SIDL	set	3857
    90  0000                     _RXF4SIDLbits	set	3857
    91  0000                     _RXF5EIDH	set	3862
    92  0000                     _RXF5EIDL	set	3863
    93  0000                     _RXF5SIDH	set	3860
    94  0000                     _RXF5SIDL	set	3861
    95  0000                     _RXF5SIDLbits	set	3861
    96  0000                     _RXM0EIDH	set	3866
    97  0000                     _RXM0EIDL	set	3867
    98  0000                     _RXM0SIDH	set	3864
    99  0000                     _RXM0SIDL	set	3865
   100  0000                     _RXM0SIDLbits	set	3865
   101  0000                     _RXM1EIDH	set	3870
   102  0000                     _RXM1EIDL	set	3871
   103  0000                     _RXM1SIDH	set	3868
   104  0000                     _RXM1SIDL	set	3869
   105  0000                     _RXM1SIDLbits	set	3869
   106  0000                     _TXB0CONbits	set	3904
   107  0000                     _TXB0D0	set	3910
   108  0000                     _TXB0D1	set	3911
   109  0000                     _TXB0D2	set	3912
   110  0000                     _TXB0D3	set	3913
   111  0000                     _TXB0D4	set	3914
   112  0000                     _TXB0D5	set	3915
   113  0000                     _TXB0D6	set	3916
   114  0000                     _TXB0D7	set	3917
   115  0000                     _TXB0DLC	set	3909
   116  0000                     _TXB0DLCbits	set	3909
   117  0000                     _TXB0EIDH	set	3907
   118  0000                     _TXB0EIDL	set	3908
   119  0000                     _TXB0SIDH	set	3905
   120  0000                     _TXB0SIDL	set	3906
   121  0000                     _TXB0SIDLbits	set	3906
   122  0000                     _TXB1CONbits	set	3888
   123  0000                     _TXB1D0	set	3894
   124  0000                     _TXB1D1	set	3895
   125  0000                     _TXB1D2	set	3896
   126  0000                     _TXB1D3	set	3897
   127  0000                     _TXB1D4	set	3898
   128  0000                     _TXB1D5	set	3899
   129  0000                     _TXB1D6	set	3900
   130  0000                     _TXB1D7	set	3901
   131  0000                     _TXB1DLC	set	3893
   132  0000                     _TXB1DLCbits	set	3893
   133  0000                     _TXB1EIDH	set	3891
   134  0000                     _TXB1EIDL	set	3892
   135  0000                     _TXB1SIDH	set	3889
   136  0000                     _TXB1SIDL	set	3890
   137  0000                     _TXB1SIDLbits	set	3890
   138  0000                     _TXB2CONbits	set	3872
   139  0000                     _TXB2D0	set	3878
   140  0000                     _TXB2D1	set	3879
   141  0000                     _TXB2D2	set	3880
   142  0000                     _TXB2D3	set	3881
   143  0000                     _TXB2D4	set	3882
   144  0000                     _TXB2D5	set	3883
   145  0000                     _TXB2D6	set	3884
   146  0000                     _TXB2D7	set	3885
   147  0000                     _TXB2DLC	set	3877
   148  0000                     _TXB2DLCbits	set	3877
   149  0000                     _TXB2EIDH	set	3875
   150  0000                     _TXB2EIDL	set	3876
   151  0000                     _TXB2SIDH	set	3873
   152  0000                     _TXB2SIDL	set	3874
   153  0000                     _TXB2SIDLbits	set	3874
   154  0000                     _ADCON0bits	set	4034
   155  0000                     _ADCON1bits	set	4033
   156  0000                     _ADCON2bits	set	4032
   157  0000                     _ADRESH	set	4036
   158  0000                     _BRGCON1	set	3952
   159  0000                     _BRGCON2	set	3953
   160  0000                     _BRGCON2bits	set	3953
   161  0000                     _BRGCON3	set	3954
   162  0000                     _BRGCON3bits	set	3954
   163  0000                     _CANCON	set	3951
   164  0000                     _CANCONbits	set	3951
   165  0000                     _CANSTAT	set	3950
   166  0000                     _COMSTATbits	set	3956
   167  0000                     _ECCP1CON	set	4026
   168  0000                     _ECCPR1L	set	4027
   169  0000                     _INTCON2bits	set	4081
   170  0000                     _INTCONbits	set	4082
   171  0000                     _IPR2bits	set	4002
   172  0000                     _IPR3bits	set	4005
   173  0000                     _LATA	set	3977
   174  0000                     _LATB	set	3978
   175  0000                     _LATC	set	3979
   176  0000                     _LATD	set	3980
   177  0000                     _LATE	set	3981
   178  0000                     _PIE1bits	set	3997
   179  0000                     _PIE2bits	set	4000
   180  0000                     _PIE3bits	set	4003
   181  0000                     _PIR1bits	set	3998
   182  0000                     _PIR2bits	set	4001
   183  0000                     _PIR3bits	set	4004
   184  0000                     _PORTAbits	set	3968
   185  0000                     _PORTCbits	set	3970
   186  0000                     _PR2	set	4043
   187  0000                     _RCONbits	set	4048
   188  0000                     _RXB0CON	set	3936
   189  0000                     _RXB0CONbits	set	3936
   190  0000                     _RXB0D0	set	3942
   191  0000                     _RXB0D1	set	3943
   192  0000                     _RXB0D2	set	3944
   193  0000                     _RXB0D3	set	3945
   194  0000                     _RXB0D4	set	3946
   195  0000                     _RXB0D5	set	3947
   196  0000                     _RXB0D6	set	3948
   197  0000                     _RXB0D7	set	3949
   198  0000                     _RXB0DLC	set	3941
   199  0000                     _RXB0DLCbits	set	3941
   200  0000                     _RXB0EIDH	set	3939
   201  0000                     _RXB0EIDL	set	3940
   202  0000                     _RXB0SIDH	set	3937
   203  0000                     _RXB0SIDL	set	3938
   204  0000                     _RXB0SIDLbits	set	3938
   205  0000                     _RXERRCNT	set	3957
   206  0000                     _T2CON	set	4042
   207  0000                     _T2CONbits	set	4042
   208  0000                     _T3CON	set	4017
   209  0000                     _TMR2	set	4044
   210  0000                     _TMR3H	set	4019
   211  0000                     _TMR3L	set	4018
   212  0000                     _TRISA	set	3986
   213  0000                     _TRISB	set	3987
   214  0000                     _TRISC	set	3988
   215  0000                     _TRISD	set	3989
   216  0000                     _TRISDbits	set	3989
   217  0000                     _TRISE	set	3990
   218  0000                     _TXERRCNT	set	3958
   219                           
   220                           ; #config settings
   221  0000                     
   222                           	psect	cinit
   223  002498                     __pcinit:
   224                           	opt stack 0
   225  002498                     start_initialization:
   226                           	opt stack 0
   227  002498                     __initialization:
   228                           	opt stack 0
   229                           
   230                           ; Clear objects allocated to BANK0 (67 bytes)
   231  002498  EE00  F060         	lfsr	0,__pbssBANK0
   232  00249C  0E43               	movlw	67
   233  00249E                     clear_0:
   234  00249E  6AEE               	clrf	postinc0,c
   235  0024A0  06E8               	decf	wreg,f,c
   236  0024A2  E1FD               	bnz	clear_0
   237                           
   238                           ; Clear objects allocated to BITCOMRAM (2 bytes)
   239  0024A4  6A3F               	clrf	((__pbitbssCOMRAM/(0+8)+1))& (0+255),c
   240  0024A6  6A3E               	clrf	(__pbitbssCOMRAM/(0+8))& (0+255),c
   241                           
   242                           ; Clear objects allocated to COMRAM (25 bytes)
   243  0024A8  EE00  F025         	lfsr	0,__pbssCOMRAM
   244  0024AC  0E19               	movlw	25
   245  0024AE                     clear_1:
   246  0024AE  6AEE               	clrf	postinc0,c
   247  0024B0  06E8               	decf	wreg,f,c
   248  0024B2  E1FD               	bnz	clear_1
   249                           
   250                           ; Initialize objects allocated to COMRAM (2 bytes)
   251                           ; load TBLPTR registers with __pidataCOMRAM
   252  0024B4  0E2C               	movlw	low __pidataCOMRAM
   253  0024B6  6EF6               	movwf	tblptrl,c
   254  0024B8  0E26               	movlw	high __pidataCOMRAM
   255  0024BA  6EF7               	movwf	tblptrh,c
   256  0024BC  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   257  0024BE  6EF8               	movwf	tblptru,c
   258  0024C0  0009               	tblrd		*+	;fetch initializer
   259  0024C2  CFF5 F040          	movff	tablat,__pdataCOMRAM
   260  0024C6  0009               	tblrd		*+	;fetch initializer
   261  0024C8  CFF5 F041          	movff	tablat,__pdataCOMRAM+1
   262  0024CC                     end_of_initialization:
   263                           	opt stack 0
   264  0024CC                     __end_of__initialization:
   265                           	opt stack 0
   266  0024CC  9042               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   267  0024CE  9242               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   268  0024D0  0E00               	movlw	low (__Lmediumconst shr (0+16))
   269  0024D2  6EF8               	movwf	tblptru,c
   270  0024D4  0100               	movlb	0
   271  0024D6  EF3A  F00C         	goto	_main	;jump to C main() function
   272                           tblptru	equ	0xFF8
   273                           tblptrh	equ	0xFF7
   274                           tblptrl	equ	0xFF6
   275                           tablat	equ	0xFF5
   276                           postinc0	equ	0xFEE
   277                           wreg	equ	0xFE8
   278                           
   279                           	psect	bitbssCOMRAM
   280  0001F0                     __pbitbssCOMRAM:
   281                           	opt stack 0
   282  0001F0                     _can_retry:
   283                           	opt stack 0
   284  0001F0                     	ds	1
   285  0001F1                     _centralina_abs:
   286                           	opt stack 0
   287  0001F1                     	ds	1
   288  0001F2                     _centralina_comando:
   289                           	opt stack 0
   290  0001F2                     	ds	1
   291  0001F3                     _centralina_sterzo:
   292                           	opt stack 0
   293  0001F3                     	ds	1
   294  0001F4                     _message_sent:
   295                           	opt stack 0
   296  0001F4                     	ds	1
   297  0001F5                     _remote_frame:
   298                           	opt stack 0
   299  0001F5                     	ds	1
   300  0001F6                     _remote_frame1:
   301                           	opt stack 0
   302  0001F6                     	ds	1
   303  0001F7                     _request_sent:
   304                           	opt stack 0
   305  0001F7                     	ds	1
   306  0001F8                     _speed_fetched:
   307                           	opt stack 0
   308  0001F8                     	ds	1
   309                           tblptru	equ	0xFF8
   310                           tblptrh	equ	0xFF7
   311                           tblptrl	equ	0xFF6
   312                           tablat	equ	0xFF5
   313                           postinc0	equ	0xFEE
   314                           wreg	equ	0xFE8
   315                           
   316                           	psect	bssCOMRAM
   317  000025                     __pbssCOMRAM:
   318                           	opt stack 0
   319  000025                     _id:
   320                           	opt stack 0
   321  000025                     	ds	4
   322  000029                     _timeCounter:
   323                           	opt stack 0
   324  000029                     	ds	4
   325  00002D                     _clock_counter_reference:
   326                           	opt stack 0
   327  00002D                     	ds	2
   328  00002F                     _correzione:
   329                           	opt stack 0
   330  00002F                     	ds	2
   331  000031                     _dir:
   332                           	opt stack 0
   333  000031                     	ds	2
   334  000033                     _duty_cycle:
   335                           	opt stack 0
   336  000033                     	ds	2
   337  000035                     _errore:
   338                           	opt stack 0
   339  000035                     	ds	2
   340  000037                     _vBatt:
   341                           	opt stack 0
   342  000037                     	ds	2
   343  000039                     _duty_set:
   344                           	opt stack 0
   345  000039                     	ds	1
   346  00003A                     _left_speed:
   347                           	opt stack 0
   348  00003A                     	ds	1
   349  00003B                     _previousPwm:
   350                           	opt stack 0
   351  00003B                     	ds	1
   352  00003C                     _requestSpeed:
   353                           	opt stack 0
   354  00003C                     	ds	1
   355  00003D                     _right_speed:
   356                           	opt stack 0
   357  00003D                     	ds	1
   358                           tblptru	equ	0xFF8
   359                           tblptrh	equ	0xFF7
   360                           tblptrl	equ	0xFF6
   361                           tablat	equ	0xFF5
   362                           postinc0	equ	0xFEE
   363                           wreg	equ	0xFE8
   364                           
   365                           	psect	dataCOMRAM
   366  000040                     __pdataCOMRAM:
   367                           	opt stack 0
   368  000040                     _currentSpeed:
   369                           	opt stack 0
   370  000040                     	ds	1
   371  000041                     _delay_quartz_frequency_value:
   372                           	opt stack 0
   373  000041                     	ds	1
   374                           tblptru	equ	0xFF8
   375                           tblptrh	equ	0xFF7
   376                           tblptrl	equ	0xFF6
   377                           tablat	equ	0xFF5
   378                           postinc0	equ	0xFEE
   379                           wreg	equ	0xFE8
   380                           
   381                           	psect	bssBANK0
   382  000060                     __pbssBANK0:
   383                           	opt stack 0
   384  000060                     _counter_array:
   385                           	opt stack 0
   386  000060                     	ds	8
   387  000068                     _currentSpeed_array:
   388                           	opt stack 0
   389  000068                     	ds	8
   390  000070                     _counter:
   391                           	opt stack 0
   392  000070                     	ds	4
   393  000074                     _id1:
   394                           	opt stack 0
   395  000074                     	ds	4
   396  000078                     _previousTimeCounter:
   397                           	opt stack 0
   398  000078                     	ds	4
   399  00007C                     _previousTimeCounter1:
   400                           	opt stack 0
   401  00007C                     	ds	4
   402  000080                     _previousTimeCounter2:
   403                           	opt stack 0
   404  000080                     	ds	4
   405  000084                     _msg:
   406                           	opt stack 0
   407  000084                     	ds	15
   408  000093                     _data_array:
   409                           	opt stack 0
   410  000093                     	ds	8
   411  00009B                     _data_array1:
   412                           	opt stack 0
   413  00009B                     	ds	8
   414                           tblptru	equ	0xFF8
   415                           tblptrh	equ	0xFF7
   416                           tblptrl	equ	0xFF6
   417                           tablat	equ	0xFF5
   418                           postinc0	equ	0xFEE
   419                           wreg	equ	0xFE8
   420                           
   421                           	psect	cstackBANK0
   422  0000A3                     __pcstackBANK0:
   423                           	opt stack 0
   424  0000A3                     ??_CANSetMask:
   425  0000A3                     ??_CANSetFilter:
   426  0000A3                     ___awdiv@counter:
   427                           	opt stack 0
   428  0000A3                     CANsendMessage@identifier:
   429                           	opt stack 0
   430                           
   431                           ; 4 bytes @ 0x0
   432  0000A3                     	ds	1
   433  0000A4                     ___awdiv@sign:
   434                           	opt stack 0
   435                           
   436                           ; 1 bytes @ 0x1
   437  0000A4                     	ds	1
   438  0000A5                     ___awdiv@quotient:
   439                           	opt stack 0
   440                           
   441                           ; 2 bytes @ 0x2
   442  0000A5                     	ds	2
   443  0000A7                     ?___wmul:
   444                           	opt stack 0
   445  0000A7                     CANSetMask@numBuffer:
   446                           	opt stack 0
   447  0000A7                     CANSetFilter@numBuffer:
   448                           	opt stack 0
   449  0000A7                     CANsendMessage@data:
   450                           	opt stack 0
   451  0000A7                     ___wmul@multiplier:
   452                           	opt stack 0
   453                           
   454                           ; 2 bytes @ 0x4
   455  0000A7                     	ds	1
   456  0000A8                     CANSetMask@tamp:
   457                           	opt stack 0
   458  0000A8                     CANSetFilter@tamp:
   459                           	opt stack 0
   460                           
   461                           ; 4 bytes @ 0x5
   462  0000A8                     	ds	1
   463  0000A9                     CANsendMessage@dataLength:
   464                           	opt stack 0
   465  0000A9                     ___wmul@multiplicand:
   466                           	opt stack 0
   467                           
   468                           ; 2 bytes @ 0x6
   469  0000A9                     	ds	1
   470  0000AA                     CANsendMessage@flags:
   471                           	opt stack 0
   472                           
   473                           ; 1 bytes @ 0x7
   474  0000AA                     	ds	1
   475  0000AB                     delay_ms@value_ms:
   476                           	opt stack 0
   477  0000AB                     CANsendMessage@tamp:
   478                           	opt stack 0
   479                           
   480                           ; 4 bytes @ 0x8
   481  0000AB                     	ds	1
   482  0000AC                     CANInitialize@phaseSeg1:
   483                           	opt stack 0
   484                           
   485                           ; 1 bytes @ 0x9
   486  0000AC                     	ds	1
   487  0000AD                     CANInitialize@phaseSeg2:
   488                           	opt stack 0
   489                           
   490                           ; 1 bytes @ 0xA
   491  0000AD                     	ds	1
   492  0000AE                     CANInitialize@SJW:
   493                           	opt stack 0
   494                           
   495                           ; 1 bytes @ 0xB
   496  0000AE                     	ds	1
   497  0000AF                     CANInitialize@BRP:
   498                           	opt stack 0
   499                           
   500                           ; 1 bytes @ 0xC
   501  0000AF                     	ds	1
   502  0000B0                     CANInitialize@flags:
   503                           	opt stack 0
   504                           
   505                           ; 1 bytes @ 0xD
   506  0000B0                     	ds	1
   507  0000B1                     ??_CANInitialize:
   508                           
   509                           ; 0 bytes @ 0xE
   510  0000B1                     	ds	4
   511  0000B5                     CANInitialize@propSeg:
   512                           	opt stack 0
   513                           
   514                           ; 1 bytes @ 0x12
   515  0000B5                     	ds	1
   516  0000B6                     CANInitialize@FilterConfig1:
   517                           	opt stack 0
   518                           
   519                           ; 1 bytes @ 0x13
   520  0000B6                     	ds	1
   521  0000B7                     CANInitialize@FilterConfig2:
   522                           	opt stack 0
   523                           
   524                           ; 1 bytes @ 0x14
   525  0000B7                     	ds	1
   526  0000B8                     ??_main:
   527                           
   528                           ; 0 bytes @ 0x15
   529  0000B8                     	ds	8
   530                           tblptru	equ	0xFF8
   531                           tblptrh	equ	0xFF7
   532                           tblptrl	equ	0xFF6
   533                           tablat	equ	0xFF5
   534                           postinc0	equ	0xFEE
   535                           wreg	equ	0xFE8
   536                           
   537                           	psect	cstackCOMRAM
   538  000001                     __pcstackCOMRAM:
   539                           	opt stack 0
   540  000001                     _CANisRxReady$3034:
   541                           	opt stack 0
   542  000001                     CANreceiveMessage@msg:
   543                           	opt stack 0
   544                           
   545                           ; 2 bytes @ 0x0
   546  000001                     	ds	2
   547  000003                     ??_CANreceiveMessage:
   548                           
   549                           ; 0 bytes @ 0x2
   550  000003                     	ds	8
   551  00000B                     CANreceiveMessage@error:
   552                           	opt stack 0
   553                           
   554                           ; 1 bytes @ 0xA
   555  00000B                     	ds	1
   556  00000C                     CANreceiveMessage@tamp:
   557                           	opt stack 0
   558                           
   559                           ; 1 bytes @ 0xB
   560  00000C                     	ds	1
   561  00000D                     ??_ISR_bassa:
   562                           
   563                           ; 0 bytes @ 0xC
   564  00000D                     	ds	17
   565  00001E                     ??_CANsendMessage:
   566  00001E                     ?_abs:
   567                           	opt stack 0
   568  00001E                     ?___awdiv:
   569                           	opt stack 0
   570  00001E                     CANOperationMode@mode:
   571                           	opt stack 0
   572  00001E                     _CANisTxReady$3032:
   573                           	opt stack 0
   574  00001E                     OpenEPWM1@period:
   575                           	opt stack 0
   576  00001E                     SetOutputEPWM1@outputmode:
   577                           	opt stack 0
   578  00001E                     OpenTimer2@config:
   579                           	opt stack 0
   580  00001E                     SetDCEPWM1@dutycycle:
   581                           	opt stack 0
   582  00001E                     abs@a:
   583                           	opt stack 0
   584  00001E                     ___awdiv@dividend:
   585                           	opt stack 0
   586  00001E                     CANSetMask@mask:
   587                           	opt stack 0
   588  00001E                     CANSetFilter@filter:
   589                           	opt stack 0
   590                           
   591                           ; 4 bytes @ 0x1D
   592  00001E                     	ds	1
   593  00001F                     SetOutputEPWM1@outputconfig:
   594                           	opt stack 0
   595                           
   596                           ; 1 bytes @ 0x1E
   597  00001F                     	ds	1
   598  000020                     ??_abs:
   599  000020                     ??_SetDCEPWM1:
   600  000020                     ___awdiv@divisor:
   601                           	opt stack 0
   602                           
   603                           ; 2 bytes @ 0x1F
   604  000020                     	ds	2
   605  000022                     CANSetMask@type:
   606                           	opt stack 0
   607  000022                     CANSetFilter@type:
   608                           	opt stack 0
   609  000022                     send_data@i:
   610                           	opt stack 0
   611  000022                     SetDCEPWM1@DCycle:
   612                           	opt stack 0
   613  000022                     ___wmul@product:
   614                           	opt stack 0
   615                           
   616                           ; 2 bytes @ 0x21
   617  000022                     	ds	2
   618  000024                     main@period:
   619                           	opt stack 0
   620                           
   621                           ; 1 bytes @ 0x23
   622  000024                     	ds	1
   623                           tblptru	equ	0xFF8
   624                           tblptrh	equ	0xFF7
   625                           tblptrl	equ	0xFF6
   626                           tablat	equ	0xFF5
   627                           postinc0	equ	0xFEE
   628                           wreg	equ	0xFE8
   629                           
   630 ;;
   631 ;;Main: autosize = 0, tempsize = 8, incstack = 0, save=0
   632 ;;
   633 ;; *************** function _main *****************
   634 ;; Defined at:
   635 ;;		line 133 in file "motore.c"
   636 ;; Parameters:    Size  Location     Type
   637 ;;		None
   638 ;; Auto vars:     Size  Location     Type
   639 ;;  period          1   35[COMRAM] unsigned char 
   640 ;; Return value:  Size  Location     Type
   641 ;;                  2  667[None  ] int 
   642 ;; Registers used:
   643 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   644 ;; Tracked objects:
   645 ;;		On entry : 0/0
   646 ;;		On exit  : 0/0
   647 ;;		Unchanged: 0/0
   648 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   649 ;;      Params:         0       0       0       0
   650 ;;      Locals:         1       0       0       0
   651 ;;      Temps:          0       8       0       0
   652 ;;      Totals:         1       8       0       0
   653 ;;Total ram usage:        9 bytes
   654 ;; Hardware stack levels required when called:    5
   655 ;; This function calls:
   656 ;;		_CANisRXwarningON
   657 ;;		_CANisTXwarningON
   658 ;;		_CANsendMessage
   659 ;;		_OpenEPWM1
   660 ;;		_OpenTimer2
   661 ;;		_SetDCEPWM1
   662 ;;		_SetOutputEPWM1
   663 ;;		___awdiv
   664 ;;		___wmul
   665 ;;		_abs
   666 ;;		_battery_measure
   667 ;;		_configurazione_iniziale
   668 ;;		_delay_ms
   669 ;;		_send_data
   670 ;; This function is called by:
   671 ;;		Startup code after reset
   672 ;; This function uses a non-reentrant model
   673 ;;
   674                           
   675                           	psect	text0
   676  001874                     __ptext0:
   677                           	opt stack 0
   678  001874                     _main:
   679                           	opt stack 26
   680                           
   681                           ;motore.c: 134: unsigned char period;
   682                           ;motore.c: 135: configurazione_iniziale();
   683                           
   684                           ;incstack = 0
   685  001874  EC43  F011         	call	_configurazione_iniziale	;wreg free
   686                           
   687                           ;motore.c: 136: PORTAbits.RA1 = 1;
   688  001878  8280               	bsf	3968,1,c	;volatile
   689                           
   690                           ;motore.c: 137: PORTCbits.RC0 = 1;
   691  00187A  8082               	bsf	3970,0,c	;volatile
   692                           
   693                           ;motore.c: 138: PORTCbits.RC1 = 1;
   694  00187C  8282               	bsf	3970,1,c	;volatile
   695                           
   696                           ;motore.c: 139: delay_ms(500);
   697  00187E  0E01               	movlw	1
   698  001880  0100               	movlb	0	; () banked
   699  001882  6FAC               	movwf	(delay_ms@value_ms+1)& (0+255),b
   700  001884  0EF4               	movlw	244
   701  001886  6FAB               	movwf	delay_ms@value_ms& (0+255),b
   702  001888  EC8A  F012         	call	_delay_ms	;wreg free
   703                           
   704                           ;motore.c: 140: PORTAbits.RA1 = 0;
   705  00188C  9280               	bcf	3968,1,c	;volatile
   706                           
   707                           ;motore.c: 141: PORTCbits.RC0 = 0;
   708  00188E  9082               	bcf	3970,0,c	;volatile
   709                           
   710                           ;motore.c: 142: PORTCbits.RC1 = 0;
   711  001890  9282               	bcf	3970,1,c	;volatile
   712                           
   713                           ;motore.c: 143: OpenTimer2(0b01111111 & 0b11111100 & 0b10000111);
   714  001892  0E04               	movlw	4
   715  001894  ECE0  F012         	call	_OpenTimer2
   716                           
   717                           ;motore.c: 144: period = 249;
   718  001898  0EF9               	movlw	249
   719  00189A  6E24               	movwf	main@period,c
   720                           
   721                           ;motore.c: 145: OpenEPWM1(period);
   722  00189C  5024               	movf	main@period,w,c
   723  00189E  EC02  F013         	call	_OpenEPWM1
   724  0018A2                     l4882:
   725                           
   726                           ;motore.c: 148: if (PORTAbits.RA7 == 0) {
   727  0018A2  BE80               	btfsc	3968,7,c	;volatile
   728  0018A4  D131               	goto	l4934
   729                           
   730                           ;motore.c: 149: if (dir == 1) {
   731  0018A6  0431               	decf	_dir,w,c
   732  0018A8  1032               	iorwf	_dir+1,w,c
   733  0018AA  A4D8               	btfss	status,2,c
   734  0018AC  D007               	goto	l4892
   735                           
   736                           ;motore.c: 150: SetOutputEPWM1(0b01111111, 0b11111111);
   737  0018AE  0EFF               	movlw	255
   738  0018B0  6E1E               	movwf	SetOutputEPWM1@outputmode,c
   739  0018B2  0E7F               	movlw	127
   740  0018B4  EC2A  F012         	call	_SetOutputEPWM1
   741                           
   742                           ;motore.c: 151: PORTCbits.RC0 = 1;
   743  0018B8  8082               	bsf	3970,0,c	;volatile
   744                           
   745                           ;motore.c: 152: PORTCbits.RC1 = 0;
   746  0018BA  9282               	bcf	3970,1,c	;volatile
   747  0018BC                     l4892:
   748                           
   749                           ;motore.c: 153: }
   750                           ;motore.c: 154: if (dir == 0) {
   751  0018BC  5031               	movf	_dir,w,c
   752  0018BE  1032               	iorwf	_dir+1,w,c
   753  0018C0  A4D8               	btfss	status,2,c
   754  0018C2  D006               	goto	l4898
   755                           
   756                           ;motore.c: 155: SetOutputEPWM1(0b11111111, 0b11111111);
   757  0018C4  0EFF               	movlw	255
   758  0018C6  6E1E               	movwf	SetOutputEPWM1@outputmode,c
   759  0018C8  0EFF               	movlw	255
   760  0018CA  EC2A  F012         	call	_SetOutputEPWM1
   761                           
   762                           ;motore.c: 156: PORTCbits.RC0 = 0;
   763  0018CE  9082               	bcf	3970,0,c	;volatile
   764  0018D0                     l4898:
   765                           
   766                           ;motore.c: 158: }
   767                           ;motore.c: 159: if (duty_set == 0) {
   768  0018D0  5039               	movf	_duty_set,w,c
   769  0018D2  A4D8               	btfss	status,2,c
   770  0018D4  D002               	goto	l4902
   771                           
   772                           ;motore.c: 160: PORTCbits.RC0 = 0;
   773  0018D6  9082               	bcf	3970,0,c	;volatile
   774                           
   775                           ;motore.c: 161: PORTCbits.RC1 = 0;
   776  0018D8  9282               	bcf	3970,1,c	;volatile
   777  0018DA                     l4902:
   778                           
   779                           ;motore.c: 162: }
   780                           ;motore.c: 163: if ((timeCounter - previousTimeCounter1 >= 10)) {
   781  0018DA  C07C  F0B8         	movff	_previousTimeCounter1,??_main
   782  0018DE  C07D  F0B9         	movff	_previousTimeCounter1+1,??_main+1
   783  0018E2  C07E  F0BA         	movff	_previousTimeCounter1+2,??_main+2
   784  0018E6  C07F  F0BB         	movff	_previousTimeCounter1+3,??_main+3
   785  0018EA  0100               	movlb	0	; () banked
   786  0018EC  1FB8               	comf	??_main& (0+255),f,b
   787  0018EE  1FB9               	comf	(??_main+1)& (0+255),f,b
   788  0018F0  1FBA               	comf	(??_main+2)& (0+255),f,b
   789  0018F2  1FBB               	comf	(??_main+3)& (0+255),f,b
   790  0018F4  2BB8               	incf	??_main& (0+255),f,b
   791  0018F6  0E00               	movlw	0
   792  0018F8  23B9               	addwfc	(??_main+1)& (0+255),f,b
   793  0018FA  23BA               	addwfc	(??_main+2)& (0+255),f,b
   794  0018FC  23BB               	addwfc	(??_main+3)& (0+255),f,b
   795  0018FE  5029               	movf	_timeCounter,w,c
   796  001900  0100               	movlb	0	; () banked
   797  001902  25B8               	addwf	??_main& (0+255),w,b
   798  001904  0100               	movlb	0	; () banked
   799  001906  6FBC               	movwf	(??_main+4)& (0+255),b
   800  001908  502A               	movf	_timeCounter+1,w,c
   801  00190A  0100               	movlb	0	; () banked
   802  00190C  21B9               	addwfc	(??_main+1)& (0+255),w,b
   803  00190E  0100               	movlb	0	; () banked
   804  001910  6FBD               	movwf	(??_main+5)& (0+255),b
   805  001912  502B               	movf	_timeCounter+2,w,c
   806  001914  0100               	movlb	0	; () banked
   807  001916  21BA               	addwfc	(??_main+2)& (0+255),w,b
   808  001918  0100               	movlb	0	; () banked
   809  00191A  6FBE               	movwf	(??_main+6)& (0+255),b
   810  00191C  502C               	movf	_timeCounter+3,w,c
   811  00191E  0100               	movlb	0	; () banked
   812  001920  21BB               	addwfc	(??_main+3)& (0+255),w,b
   813  001922  0100               	movlb	0	; () banked
   814  001924  6FBF               	movwf	(??_main+7)& (0+255),b
   815  001926  0100               	movlb	0	; () banked
   816  001928  51BF               	movf	(??_main+7)& (0+255),w,b
   817  00192A  0100               	movlb	0	; () banked
   818  00192C  11BE               	iorwf	(??_main+6)& (0+255),w,b
   819  00192E  0100               	movlb	0	; () banked
   820  001930  11BD               	iorwf	(??_main+5)& (0+255),w,b
   821  001932  E105               	bnz	u6380
   822  001934  0E0A               	movlw	10
   823  001936  0100               	movlb	0	; () banked
   824  001938  5DBC               	subwf	(??_main+4)& (0+255),w,b
   825  00193A  A0D8               	btfss	status,0,c
   826  00193C  D0E5               	goto	l4934
   827  00193E                     u6380:
   828                           
   829                           ; BSR set to: 0
   830                           ;motore.c: 164: CANsendMessage(0b00000000000000000000000000110, 0, 0, CAN_CONFIG_STD_MSG
      +                           & CAN_REMOTE_TX_FRAME & CAN_TX_PRIORITY_0);
   831  00193E  0E06               	movlw	6
   832  001940  0100               	movlb	0	; () banked
   833  001942  6FA3               	movwf	CANsendMessage@identifier& (0+255),b
   834  001944  0E00               	movlw	0
   835  001946  6FA4               	movwf	(CANsendMessage@identifier+1)& (0+255),b
   836  001948  0E00               	movlw	0
   837  00194A  6FA5               	movwf	(CANsendMessage@identifier+2)& (0+255),b
   838  00194C  0E00               	movlw	0
   839  00194E  6FA6               	movwf	(CANsendMessage@identifier+3)& (0+255),b
   840  001950  0E00               	movlw	0
   841  001952  0100               	movlb	0	; () banked
   842  001954  6FA7               	movwf	CANsendMessage@data& (0+255),b
   843  001956  0E00               	movlw	0
   844  001958  0100               	movlb	0	; () banked
   845  00195A  6FA8               	movwf	(CANsendMessage@data+1)& (0+255),b
   846  00195C  0E00               	movlw	0
   847  00195E  0100               	movlb	0	; () banked
   848  001960  6FA9               	movwf	CANsendMessage@dataLength& (0+255),b
   849  001962  0EFC               	movlw	252
   850  001964  0100               	movlb	0	; () banked
   851  001966  6FAA               	movwf	CANsendMessage@flags& (0+255),b
   852  001968  ECFA  F005         	call	_CANsendMessage	;wreg free
   853                           
   854                           ;motore.c: 165: if (speed_fetched == 1) {
   855  00196C  A03F               	btfss	_speed_fetched/(0+8),_speed_fetched& (0+7),c
   856  00196E  D0CC               	goto	l4934
   857                           
   858                           ;motore.c: 166: speed_fetched = 0;
   859  001970  903F               	bcf	_speed_fetched/(0+8),_speed_fetched& (0+7),c
   860                           
   861                           ;motore.c: 167: currentSpeed = ((left_speed + right_speed) / 2);
   862  001972  503A               	movf	_left_speed,w,c
   863  001974  243D               	addwf	_right_speed,w,c
   864  001976  6E1E               	movwf	___awdiv@dividend,c
   865  001978  6A1F               	clrf	___awdiv@dividend+1,c
   866  00197A  361F               	rlcf	___awdiv@dividend+1,f,c
   867  00197C  0E00               	movlw	0
   868  00197E  6E21               	movwf	___awdiv@divisor+1,c
   869  001980  0E02               	movlw	2
   870  001982  6E20               	movwf	___awdiv@divisor,c
   871  001984  EC97  F011         	call	___awdiv	;wreg free
   872  001988  501E               	movf	?___awdiv,w,c
   873  00198A  6E40               	movwf	_currentSpeed,c
   874                           
   875                           ;motore.c: 168: if (currentSpeed - requestSpeed > 0) {
   876  00198C  503C               	movf	_requestSpeed,w,c
   877  00198E  0100               	movlb	0	; () banked
   878  001990  6FB8               	movwf	??_main& (0+255),b
   879  001992  6BB9               	clrf	(??_main+1)& (0+255),b
   880  001994  0100               	movlb	0	; () banked
   881  001996  1FB8               	comf	??_main& (0+255),f,b
   882  001998  1FB9               	comf	(??_main+1)& (0+255),f,b
   883  00199A  4BB8               	infsnz	??_main& (0+255),f,b
   884  00199C  2BB9               	incf	(??_main+1)& (0+255),f,b
   885  00199E  5040               	movf	_currentSpeed,w,c
   886  0019A0  0100               	movlb	0	; () banked
   887  0019A2  6FBA               	movwf	(??_main+2)& (0+255),b
   888  0019A4  6BBB               	clrf	(??_main+3)& (0+255),b
   889  0019A6  0100               	movlb	0	; () banked
   890  0019A8  51B8               	movf	??_main& (0+255),w,b
   891  0019AA  0100               	movlb	0	; () banked
   892  0019AC  27BA               	addwf	(??_main+2)& (0+255),f,b
   893  0019AE  0100               	movlb	0	; () banked
   894  0019B0  51B9               	movf	(??_main+1)& (0+255),w,b
   895  0019B2  0100               	movlb	0	; () banked
   896  0019B4  23BB               	addwfc	(??_main+3)& (0+255),f,b
   897  0019B6  0100               	movlb	0	; () banked
   898  0019B8  BFBB               	btfsc	(??_main+3)& (0+255),7,b
   899  0019BA  D09E               	goto	l4932
   900  0019BC  0100               	movlb	0	; () banked
   901  0019BE  51BB               	movf	(??_main+3)& (0+255),w,b
   902  0019C0  E104               	bnz	u6400
   903  0019C2  0100               	movlb	0	; () banked
   904  0019C4  05BA               	decf	(??_main+2)& (0+255),w,b
   905  0019C6  A0D8               	btfss	status,0,c
   906  0019C8  D097               	goto	l4932
   907  0019CA                     u6400:
   908                           
   909                           ; BSR set to: 0
   910                           ;motore.c: 169: errore = abs(currentSpeed - requestSpeed);
   911  0019CA  503C               	movf	_requestSpeed,w,c
   912  0019CC  0100               	movlb	0	; () banked
   913  0019CE  6FB8               	movwf	??_main& (0+255),b
   914  0019D0  6BB9               	clrf	(??_main+1)& (0+255),b
   915  0019D2  0100               	movlb	0	; () banked
   916  0019D4  1FB8               	comf	??_main& (0+255),f,b
   917  0019D6  1FB9               	comf	(??_main+1)& (0+255),f,b
   918  0019D8  4BB8               	infsnz	??_main& (0+255),f,b
   919  0019DA  2BB9               	incf	(??_main+1)& (0+255),f,b
   920  0019DC  5040               	movf	_currentSpeed,w,c
   921  0019DE  0100               	movlb	0	; () banked
   922  0019E0  25B8               	addwf	??_main& (0+255),w,b
   923  0019E2  6E1E               	movwf	abs@a,c
   924  0019E4  0E00               	movlw	0
   925  0019E6  0100               	movlb	0	; () banked
   926  0019E8  21B9               	addwfc	(??_main+1)& (0+255),w,b
   927  0019EA  6E1F               	movwf	abs@a+1,c
   928  0019EC  ECBD  F012         	call	_abs	;wreg free
   929  0019F0  C01E  F035         	movff	?_abs,_errore
   930  0019F4  C01F  F036         	movff	?_abs+1,_errore+1
   931                           
   932                           ;motore.c: 170: correzione = ((errore / 17)*(errore / 17))*4;
   933  0019F8  0E00               	movlw	0
   934  0019FA  6E21               	movwf	___awdiv@divisor+1,c
   935  0019FC  0E11               	movlw	17
   936  0019FE  6E20               	movwf	___awdiv@divisor,c
   937  001A00  C035  F01E         	movff	_errore,___awdiv@dividend
   938  001A04  C036  F01F         	movff	_errore+1,___awdiv@dividend+1
   939  001A08  EC97  F011         	call	___awdiv	;wreg free
   940  001A0C  C01E  F0A7         	movff	?___awdiv,___wmul@multiplier
   941  001A10  C01F  F0A8         	movff	?___awdiv+1,___wmul@multiplier+1
   942  001A14  0E00               	movlw	0
   943  001A16  6E21               	movwf	___awdiv@divisor+1,c
   944  001A18  0E11               	movlw	17
   945  001A1A  6E20               	movwf	___awdiv@divisor,c
   946  001A1C  C035  F01E         	movff	_errore,___awdiv@dividend
   947  001A20  C036  F01F         	movff	_errore+1,___awdiv@dividend+1
   948  001A24  EC97  F011         	call	___awdiv	;wreg free
   949  001A28  C01E  F0A9         	movff	?___awdiv,___wmul@multiplicand
   950  001A2C  C01F  F0AA         	movff	?___awdiv+1,___wmul@multiplicand+1
   951  001A30  ECA4  F012         	call	___wmul	;wreg free
   952  001A34  0100               	movlb	0	; () banked
   953  001A36  90D8               	bcf	status,0,c
   954  001A38  37A7               	rlcf	?___wmul& (0+255),f,b
   955  001A3A  37A8               	rlcf	(?___wmul+1)& (0+255),f,b
   956  001A3C  0100               	movlb	0	; () banked
   957  001A3E  90D8               	bcf	status,0,c
   958  001A40  37A7               	rlcf	?___wmul& (0+255),f,b
   959  001A42  37A8               	rlcf	(?___wmul+1)& (0+255),f,b
   960  001A44  C0A7  F02F         	movff	?___wmul,_correzione
   961  001A48  C0A8  F030         	movff	?___wmul+1,_correzione+1
   962                           
   963                           ; BSR set to: 0
   964                           ;motore.c: 171: if (correzione > 1) {
   965  001A4C  5030               	movf	_correzione+1,w,c
   966  001A4E  E104               	bnz	u6410
   967  001A50  0E02               	movlw	2
   968  001A52  5C2F               	subwf	_correzione,w,c
   969  001A54  A0D8               	btfss	status,0,c
   970  001A56  D049               	goto	l676
   971  001A58                     u6410:
   972                           
   973                           ; BSR set to: 0
   974                           ;motore.c: 172: if ((currentSpeed - requestSpeed) > 0) {
   975  001A58  503C               	movf	_requestSpeed,w,c
   976  001A5A  0100               	movlb	0	; () banked
   977  001A5C  6FB8               	movwf	??_main& (0+255),b
   978  001A5E  6BB9               	clrf	(??_main+1)& (0+255),b
   979  001A60  0100               	movlb	0	; () banked
   980  001A62  1FB8               	comf	??_main& (0+255),f,b
   981  001A64  1FB9               	comf	(??_main+1)& (0+255),f,b
   982  001A66  4BB8               	infsnz	??_main& (0+255),f,b
   983  001A68  2BB9               	incf	(??_main+1)& (0+255),f,b
   984  001A6A  5040               	movf	_currentSpeed,w,c
   985  001A6C  0100               	movlb	0	; () banked
   986  001A6E  6FBA               	movwf	(??_main+2)& (0+255),b
   987  001A70  6BBB               	clrf	(??_main+3)& (0+255),b
   988  001A72  0100               	movlb	0	; () banked
   989  001A74  51B8               	movf	??_main& (0+255),w,b
   990  001A76  0100               	movlb	0	; () banked
   991  001A78  27BA               	addwf	(??_main+2)& (0+255),f,b
   992  001A7A  0100               	movlb	0	; () banked
   993  001A7C  51B9               	movf	(??_main+1)& (0+255),w,b
   994  001A7E  0100               	movlb	0	; () banked
   995  001A80  23BB               	addwfc	(??_main+3)& (0+255),f,b
   996  001A82  0100               	movlb	0	; () banked
   997  001A84  BFBB               	btfsc	(??_main+3)& (0+255),7,b
   998  001A86  D02C               	goto	l677
   999  001A88  0100               	movlb	0	; () banked
  1000  001A8A  51BB               	movf	(??_main+3)& (0+255),w,b
  1001  001A8C  E104               	bnz	u6420
  1002  001A8E  0100               	movlb	0	; () banked
  1003  001A90  05BA               	decf	(??_main+2)& (0+255),w,b
  1004  001A92  A0D8               	btfss	status,0,c
  1005  001A94  D025               	goto	l677
  1006  001A96                     u6420:
  1007                           
  1008                           ; BSR set to: 0
  1009                           ;motore.c: 173: if (previousPwm > correzione) {
  1010  001A96  503B               	movf	_previousPwm,w,c
  1011  001A98  5C2F               	subwf	_correzione,w,c
  1012  001A9A  0E00               	movlw	0
  1013  001A9C  5830               	subwfb	_correzione+1,w,c
  1014  001A9E  B0D8               	btfsc	status,0,c
  1015  001AA0  D004               	goto	l678
  1016                           
  1017                           ; BSR set to: 0
  1018                           ;motore.c: 174: duty_set = previousPwm - correzione;
  1019  001AA2  502F               	movf	_correzione,w,c
  1020  001AA4  0800               	sublw	0
  1021  001AA6  243B               	addwf	_previousPwm,w,c
  1022  001AA8  6E39               	movwf	_duty_set,c
  1023  001AAA                     l678:
  1024                           
  1025                           ; BSR set to: 0
  1026                           ;motore.c: 175: }
  1027                           ;motore.c: 176: if ((currentSpeed - requestSpeed) < 0) {
  1028  001AAA  503C               	movf	_requestSpeed,w,c
  1029  001AAC  0100               	movlb	0	; () banked
  1030  001AAE  6FB8               	movwf	??_main& (0+255),b
  1031  001AB0  6BB9               	clrf	(??_main+1)& (0+255),b
  1032  001AB2  0100               	movlb	0	; () banked
  1033  001AB4  1FB8               	comf	??_main& (0+255),f,b
  1034  001AB6  1FB9               	comf	(??_main+1)& (0+255),f,b
  1035  001AB8  4BB8               	infsnz	??_main& (0+255),f,b
  1036  001ABA  2BB9               	incf	(??_main+1)& (0+255),f,b
  1037  001ABC  5040               	movf	_currentSpeed,w,c
  1038  001ABE  0100               	movlb	0	; () banked
  1039  001AC0  6FBA               	movwf	(??_main+2)& (0+255),b
  1040  001AC2  6BBB               	clrf	(??_main+3)& (0+255),b
  1041  001AC4  0100               	movlb	0	; () banked
  1042  001AC6  51B8               	movf	??_main& (0+255),w,b
  1043  001AC8  0100               	movlb	0	; () banked
  1044  001ACA  27BA               	addwf	(??_main+2)& (0+255),f,b
  1045  001ACC  0100               	movlb	0	; () banked
  1046  001ACE  51B9               	movf	(??_main+1)& (0+255),w,b
  1047  001AD0  0100               	movlb	0	; () banked
  1048  001AD2  23BB               	addwfc	(??_main+3)& (0+255),f,b
  1049  001AD4  0100               	movlb	0	; () banked
  1050  001AD6  AFBB               	btfss	(??_main+3)& (0+255),7,b
  1051  001AD8  D003               	goto	l677
  1052                           
  1053                           ; BSR set to: 0
  1054                           ;motore.c: 177: duty_set = previousPwm + correzione;
  1055  001ADA  503B               	movf	_previousPwm,w,c
  1056  001ADC  242F               	addwf	_correzione,w,c
  1057  001ADE  6E39               	movwf	_duty_set,c
  1058  001AE0                     l677:
  1059                           
  1060                           ; BSR set to: 0
  1061                           ;motore.c: 178: }
  1062                           ;motore.c: 179: }
  1063                           ;motore.c: 180: if (correzione < 1) {
  1064  001AE0  502F               	movf	_correzione,w,c
  1065  001AE2  1030               	iorwf	_correzione+1,w,c
  1066  001AE4  B4D8               	btfsc	status,2,c
  1067                           
  1068                           ; BSR set to: 0
  1069                           ;motore.c: 181: duty_set = previousPwm;
  1070  001AE6  C03B  F039         	movff	_previousPwm,_duty_set
  1071  001AEA                     l676:
  1072                           
  1073                           ; BSR set to: 0
  1074                           ;motore.c: 182: }
  1075                           ;motore.c: 183: }
  1076                           ;motore.c: 184: previousPwm = duty_set;
  1077  001AEA  C039  F03B         	movff	_duty_set,_previousPwm
  1078                           
  1079                           ; BSR set to: 0
  1080                           ;motore.c: 185: SetDCEPWM1(duty_set);
  1081  001AEE  C039  F01E         	movff	_duty_set,SetDCEPWM1@dutycycle
  1082  001AF2  6A1F               	clrf	SetDCEPWM1@dutycycle+1,c
  1083  001AF4  EC6D  F012         	call	_SetDCEPWM1	;wreg free
  1084  001AF8                     l4932:
  1085                           
  1086                           ;motore.c: 186: }
  1087                           ;motore.c: 187: previousTimeCounter1 = timeCounter;
  1088  001AF8  C029  F07C         	movff	_timeCounter,_previousTimeCounter1
  1089  001AFC  C02A  F07D         	movff	_timeCounter+1,_previousTimeCounter1+1
  1090  001B00  C02B  F07E         	movff	_timeCounter+2,_previousTimeCounter1+2
  1091  001B04  C02C  F07F         	movff	_timeCounter+3,_previousTimeCounter1+3
  1092  001B08                     l4934:
  1093                           
  1094                           ;motore.c: 188: }
  1095                           ;motore.c: 189: }
  1096                           ;motore.c: 190: }
  1097                           ;motore.c: 191: if ((remote_frame == 1) || (can_retry == 1)) {
  1098  001B08  AA3E               	btfss	_remote_frame/(0+8),_remote_frame& (0+7),c
  1099  001B0A  B03E               	btfsc	_can_retry/(0+8),_can_retry& (0+7),c
  1100  001B0C  D001               	goto	l4938
  1101  001B0E  D002               	goto	l4940
  1102  001B10                     l4938:
  1103                           
  1104                           ;motore.c: 192: send_data();
  1105  001B10  ECC9  F010         	call	_send_data	;wreg free
  1106  001B14                     l4940:
  1107                           
  1108                           ;motore.c: 193: }
  1109                           ;motore.c: 194: if ((CANisTXwarningON() == 1) || (CANisRXwarningON() == 1)) {
  1110  001B14  EC0A  F013         	call	_CANisTXwarningON	;wreg free
  1111  001B18  06E8               	decf	wreg,f,c
  1112  001B1A  B4D8               	btfsc	status,2,c
  1113  001B1C  D005               	goto	l4944
  1114  001B1E  EC10  F013         	call	_CANisRXwarningON	;wreg free
  1115  001B22  06E8               	decf	wreg,f,c
  1116  001B24  A4D8               	btfss	status,2,c
  1117  001B26  D008               	goto	l684
  1118  001B28                     l4944:
  1119                           
  1120                           ;motore.c: 195: SetDCEPWM1(0);
  1121  001B28  0E00               	movlw	0
  1122  001B2A  6E1F               	movwf	SetDCEPWM1@dutycycle+1,c
  1123  001B2C  0E00               	movlw	0
  1124  001B2E  6E1E               	movwf	SetDCEPWM1@dutycycle,c
  1125  001B30  EC6D  F012         	call	_SetDCEPWM1	;wreg free
  1126                           
  1127                           ;motore.c: 196: PORTAbits.RA7 = 1;
  1128  001B34  8E80               	bsf	3968,7,c	;volatile
  1129                           
  1130                           ;motore.c: 197: } else {
  1131  001B36  D001               	goto	l4948
  1132  001B38                     l684:
  1133                           
  1134                           ;motore.c: 198: PORTAbits.RA7 = 0;
  1135  001B38  9E80               	bcf	3968,7,c	;volatile
  1136  001B3A                     l4948:
  1137                           
  1138                           ;motore.c: 199: }
  1139                           ;motore.c: 202: if ((timeCounter - previousTimeCounter) > 100) {
  1140  001B3A  C078  F0B8         	movff	_previousTimeCounter,??_main
  1141  001B3E  C079  F0B9         	movff	_previousTimeCounter+1,??_main+1
  1142  001B42  C07A  F0BA         	movff	_previousTimeCounter+2,??_main+2
  1143  001B46  C07B  F0BB         	movff	_previousTimeCounter+3,??_main+3
  1144  001B4A  0100               	movlb	0	; () banked
  1145  001B4C  1FB8               	comf	??_main& (0+255),f,b
  1146  001B4E  1FB9               	comf	(??_main+1)& (0+255),f,b
  1147  001B50  1FBA               	comf	(??_main+2)& (0+255),f,b
  1148  001B52  1FBB               	comf	(??_main+3)& (0+255),f,b
  1149  001B54  2BB8               	incf	??_main& (0+255),f,b
  1150  001B56  0E00               	movlw	0
  1151  001B58  23B9               	addwfc	(??_main+1)& (0+255),f,b
  1152  001B5A  23BA               	addwfc	(??_main+2)& (0+255),f,b
  1153  001B5C  23BB               	addwfc	(??_main+3)& (0+255),f,b
  1154  001B5E  5029               	movf	_timeCounter,w,c
  1155  001B60  0100               	movlb	0	; () banked
  1156  001B62  25B8               	addwf	??_main& (0+255),w,b
  1157  001B64  0100               	movlb	0	; () banked
  1158  001B66  6FBC               	movwf	(??_main+4)& (0+255),b
  1159  001B68  502A               	movf	_timeCounter+1,w,c
  1160  001B6A  0100               	movlb	0	; () banked
  1161  001B6C  21B9               	addwfc	(??_main+1)& (0+255),w,b
  1162  001B6E  0100               	movlb	0	; () banked
  1163  001B70  6FBD               	movwf	(??_main+5)& (0+255),b
  1164  001B72  502B               	movf	_timeCounter+2,w,c
  1165  001B74  0100               	movlb	0	; () banked
  1166  001B76  21BA               	addwfc	(??_main+2)& (0+255),w,b
  1167  001B78  0100               	movlb	0	; () banked
  1168  001B7A  6FBE               	movwf	(??_main+6)& (0+255),b
  1169  001B7C  502C               	movf	_timeCounter+3,w,c
  1170  001B7E  0100               	movlb	0	; () banked
  1171  001B80  21BB               	addwfc	(??_main+3)& (0+255),w,b
  1172  001B82  0100               	movlb	0	; () banked
  1173  001B84  6FBF               	movwf	(??_main+7)& (0+255),b
  1174  001B86  0100               	movlb	0	; () banked
  1175  001B88  51BF               	movf	(??_main+7)& (0+255),w,b
  1176  001B8A  0100               	movlb	0	; () banked
  1177  001B8C  11BE               	iorwf	(??_main+6)& (0+255),w,b
  1178  001B8E  0100               	movlb	0	; () banked
  1179  001B90  11BD               	iorwf	(??_main+5)& (0+255),w,b
  1180  001B92  E105               	bnz	u6500
  1181  001B94  0E65               	movlw	101
  1182  001B96  0100               	movlb	0	; () banked
  1183  001B98  5DBC               	subwf	(??_main+4)& (0+255),w,b
  1184  001B9A  A0D8               	btfss	status,0,c
  1185  001B9C  D035               	goto	l4972
  1186  001B9E                     u6500:
  1187                           
  1188                           ; BSR set to: 0
  1189                           ;motore.c: 203: if (request_sent == 0) {
  1190  001B9E  BE3E               	btfsc	_request_sent/(0+8),_request_sent& (0+7),c
  1191  001BA0  D018               	goto	l4956
  1192                           
  1193                           ; BSR set to: 0
  1194                           ;motore.c: 204: CANsendMessage(0b00000000000000000000000000010, data_array, 8, CAN_CONFI
      +                          G_STD_MSG & CAN_REMOTE_TX_FRAME & CAN_TX_PRIORITY_0);
  1195  001BA2  0E02               	movlw	2
  1196  001BA4  0100               	movlb	0	; () banked
  1197  001BA6  6FA3               	movwf	CANsendMessage@identifier& (0+255),b
  1198  001BA8  0E00               	movlw	0
  1199  001BAA  6FA4               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  1200  001BAC  0E00               	movlw	0
  1201  001BAE  6FA5               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  1202  001BB0  0E00               	movlw	0
  1203  001BB2  6FA6               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  1204  001BB4  0E93               	movlw	low _data_array
  1205  001BB6  0100               	movlb	0	; () banked
  1206  001BB8  6FA7               	movwf	CANsendMessage@data& (0+255),b
  1207  001BBA  0E00               	movlw	high _data_array
  1208  001BBC  0100               	movlb	0	; () banked
  1209  001BBE  6FA8               	movwf	(CANsendMessage@data+1)& (0+255),b
  1210  001BC0  0E08               	movlw	8
  1211  001BC2  0100               	movlb	0	; () banked
  1212  001BC4  6FA9               	movwf	CANsendMessage@dataLength& (0+255),b
  1213  001BC6  0EFC               	movlw	252
  1214  001BC8  0100               	movlb	0	; () banked
  1215  001BCA  6FAA               	movwf	CANsendMessage@flags& (0+255),b
  1216  001BCC  ECFA  F005         	call	_CANsendMessage	;wreg free
  1217                           
  1218                           ;motore.c: 205: request_sent = 1;
  1219  001BD0  8E3E               	bsf	_request_sent/(0+8),_request_sent& (0+7),c
  1220  001BD2                     l4956:
  1221                           
  1222                           ;motore.c: 206: }
  1223                           ;motore.c: 207: if (request_sent == 1) {
  1224  001BD2  AE3E               	btfss	_request_sent/(0+8),_request_sent& (0+7),c
  1225  001BD4  D011               	goto	l4970
  1226                           
  1227                           ;motore.c: 209: if ((centralina_abs == 1)&&(centralina_sterzo == 1)&&(centralina_comando
      +                           == 1)) {
  1228  001BD6  B23E               	btfsc	_centralina_abs/(0+8),_centralina_abs& (0+7),c
  1229  001BD8  A63E               	btfss	_centralina_sterzo/(0+8),_centralina_sterzo& (0+7),c
  1230  001BDA  D007               	goto	l4966
  1231  001BDC  A43E               	btfss	_centralina_comando/(0+8),_centralina_comando& (0+7),c
  1232  001BDE  D005               	goto	l4966
  1233                           
  1234                           ;motore.c: 210: centralina_abs = 0;
  1235  001BE0  923E               	bcf	_centralina_abs/(0+8),_centralina_abs& (0+7),c
  1236                           
  1237                           ;motore.c: 211: centralina_sterzo = 0;
  1238  001BE2  963E               	bcf	_centralina_sterzo/(0+8),_centralina_sterzo& (0+7),c
  1239                           
  1240                           ;motore.c: 212: centralina_comando = 0;
  1241  001BE4  943E               	bcf	_centralina_comando/(0+8),_centralina_comando& (0+7),c
  1242                           
  1243                           ;motore.c: 213: PORTAbits.RA7 = 0;
  1244  001BE6  9E80               	bcf	3968,7,c	;volatile
  1245                           
  1246                           ;motore.c: 214: } else {
  1247  001BE8  D007               	goto	l4970
  1248  001BEA                     l4966:
  1249                           
  1250                           ;motore.c: 215: SetDCEPWM1(0);
  1251  001BEA  0E00               	movlw	0
  1252  001BEC  6E1F               	movwf	SetDCEPWM1@dutycycle+1,c
  1253  001BEE  0E00               	movlw	0
  1254  001BF0  6E1E               	movwf	SetDCEPWM1@dutycycle,c
  1255  001BF2  EC6D  F012         	call	_SetDCEPWM1	;wreg free
  1256                           
  1257                           ;motore.c: 216: PORTAbits.RA7 = 1;
  1258  001BF6  8E80               	bsf	3968,7,c	;volatile
  1259  001BF8                     l4970:
  1260                           
  1261                           ;motore.c: 217: }
  1262                           ;motore.c: 218: }
  1263                           ;motore.c: 219: previousTimeCounter = timeCounter;
  1264  001BF8  C029  F078         	movff	_timeCounter,_previousTimeCounter
  1265  001BFC  C02A  F079         	movff	_timeCounter+1,_previousTimeCounter+1
  1266  001C00  C02B  F07A         	movff	_timeCounter+2,_previousTimeCounter+2
  1267  001C04  C02C  F07B         	movff	_timeCounter+3,_previousTimeCounter+3
  1268  001C08                     l4972:
  1269                           
  1270                           ;motore.c: 220: }
  1271                           ;motore.c: 221: if ((timeCounter - previousTimeCounter2 >= 100)) {
  1272  001C08  C080  F0B8         	movff	_previousTimeCounter2,??_main
  1273  001C0C  C081  F0B9         	movff	_previousTimeCounter2+1,??_main+1
  1274  001C10  C082  F0BA         	movff	_previousTimeCounter2+2,??_main+2
  1275  001C14  C083  F0BB         	movff	_previousTimeCounter2+3,??_main+3
  1276  001C18  0100               	movlb	0	; () banked
  1277  001C1A  1FB8               	comf	??_main& (0+255),f,b
  1278  001C1C  1FB9               	comf	(??_main+1)& (0+255),f,b
  1279  001C1E  1FBA               	comf	(??_main+2)& (0+255),f,b
  1280  001C20  1FBB               	comf	(??_main+3)& (0+255),f,b
  1281  001C22  2BB8               	incf	??_main& (0+255),f,b
  1282  001C24  0E00               	movlw	0
  1283  001C26  23B9               	addwfc	(??_main+1)& (0+255),f,b
  1284  001C28  23BA               	addwfc	(??_main+2)& (0+255),f,b
  1285  001C2A  23BB               	addwfc	(??_main+3)& (0+255),f,b
  1286  001C2C  5029               	movf	_timeCounter,w,c
  1287  001C2E  0100               	movlb	0	; () banked
  1288  001C30  25B8               	addwf	??_main& (0+255),w,b
  1289  001C32  0100               	movlb	0	; () banked
  1290  001C34  6FBC               	movwf	(??_main+4)& (0+255),b
  1291  001C36  502A               	movf	_timeCounter+1,w,c
  1292  001C38  0100               	movlb	0	; () banked
  1293  001C3A  21B9               	addwfc	(??_main+1)& (0+255),w,b
  1294  001C3C  0100               	movlb	0	; () banked
  1295  001C3E  6FBD               	movwf	(??_main+5)& (0+255),b
  1296  001C40  502B               	movf	_timeCounter+2,w,c
  1297  001C42  0100               	movlb	0	; () banked
  1298  001C44  21BA               	addwfc	(??_main+2)& (0+255),w,b
  1299  001C46  0100               	movlb	0	; () banked
  1300  001C48  6FBE               	movwf	(??_main+6)& (0+255),b
  1301  001C4A  502C               	movf	_timeCounter+3,w,c
  1302  001C4C  0100               	movlb	0	; () banked
  1303  001C4E  21BB               	addwfc	(??_main+3)& (0+255),w,b
  1304  001C50  0100               	movlb	0	; () banked
  1305  001C52  6FBF               	movwf	(??_main+7)& (0+255),b
  1306  001C54  0100               	movlb	0	; () banked
  1307  001C56  51BF               	movf	(??_main+7)& (0+255),w,b
  1308  001C58  0100               	movlb	0	; () banked
  1309  001C5A  11BE               	iorwf	(??_main+6)& (0+255),w,b
  1310  001C5C  0100               	movlb	0	; () banked
  1311  001C5E  11BD               	iorwf	(??_main+5)& (0+255),w,b
  1312  001C60  E105               	bnz	u6560
  1313  001C62  0E64               	movlw	100
  1314  001C64  0100               	movlb	0	; () banked
  1315  001C66  5DBC               	subwf	(??_main+4)& (0+255),w,b
  1316  001C68  A0D8               	btfss	status,0,c
  1317  001C6A  D61B               	goto	l4882
  1318  001C6C                     u6560:
  1319                           
  1320                           ; BSR set to: 0
  1321                           ;motore.c: 223: battery_measure();
  1322  001C6C  ECE5  F011         	call	_battery_measure	;wreg free
  1323                           
  1324                           ;motore.c: 224: previousTimeCounter2 = timeCounter;
  1325  001C70  C029  F080         	movff	_timeCounter,_previousTimeCounter2
  1326  001C74  C02A  F081         	movff	_timeCounter+1,_previousTimeCounter2+1
  1327  001C78  C02B  F082         	movff	_timeCounter+2,_previousTimeCounter2+2
  1328  001C7C  C02C  F083         	movff	_timeCounter+3,_previousTimeCounter2+3
  1329  001C80  D610               	goto	l4882
  1330  001C82                     __end_of_main:
  1331                           	opt stack 0
  1332                           tblptru	equ	0xFF8
  1333                           tblptrh	equ	0xFF7
  1334                           tblptrl	equ	0xFF6
  1335                           tablat	equ	0xFF5
  1336                           postinc0	equ	0xFEE
  1337                           wreg	equ	0xFE8
  1338                           status	equ	0xFD8
  1339                           
  1340 ;; *************** function _send_data *****************
  1341 ;; Defined at:
  1342 ;;		line 229 in file "motore.c"
  1343 ;; Parameters:    Size  Location     Type
  1344 ;;		None
  1345 ;; Auto vars:     Size  Location     Type
  1346 ;;  i               1   33[COMRAM] unsigned char 
  1347 ;; Return value:  Size  Location     Type
  1348 ;;		None               void
  1349 ;; Registers used:
  1350 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1351 ;; Tracked objects:
  1352 ;;		On entry : 0/0
  1353 ;;		On exit  : 0/0
  1354 ;;		Unchanged: 0/0
  1355 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1356 ;;      Params:         0       0       0       0
  1357 ;;      Locals:         1       0       0       0
  1358 ;;      Temps:          0       0       0       0
  1359 ;;      Totals:         1       0       0       0
  1360 ;;Total ram usage:        1 bytes
  1361 ;; Hardware stack levels used:    1
  1362 ;; Hardware stack levels required when called:    3
  1363 ;; This function calls:
  1364 ;;		_CANisTxReady
  1365 ;;		_CANsendMessage
  1366 ;; This function is called by:
  1367 ;;		_main
  1368 ;; This function uses a non-reentrant model
  1369 ;;
  1370                           
  1371                           	psect	text1
  1372  002192                     __ptext1:
  1373                           	opt stack 0
  1374  002192                     _send_data:
  1375                           	opt stack 27
  1376                           
  1377                           ;motore.c: 230: if (CANisTxReady()) {
  1378                           
  1379                           ;incstack = 0
  1380  002192  ECD1  F012         	call	_CANisTxReady	;wreg free
  1381  002196  0900               	iorlw	0
  1382  002198  B4D8               	btfsc	status,2,c
  1383  00219A  D031               	goto	l4824
  1384                           
  1385                           ;motore.c: 231: if (remote_frame == 1) {
  1386  00219C  AA3E               	btfss	_remote_frame/(0+8),_remote_frame& (0+7),c
  1387  00219E  D017               	goto	l4820
  1388                           
  1389                           ;motore.c: 232: CANsendMessage(id, data_array, 8, CAN_CONFIG_STD_MSG & CAN_NORMAL_TX_FRA
      +                          ME & CAN_TX_PRIORITY_0);
  1390  0021A0  C025  F0A3         	movff	_id,CANsendMessage@identifier
  1391  0021A4  C026  F0A4         	movff	_id+1,CANsendMessage@identifier+1
  1392  0021A8  C027  F0A5         	movff	_id+2,CANsendMessage@identifier+2
  1393  0021AC  C028  F0A6         	movff	_id+3,CANsendMessage@identifier+3
  1394  0021B0  0E93               	movlw	low _data_array
  1395  0021B2  0100               	movlb	0	; () banked
  1396  0021B4  6FA7               	movwf	CANsendMessage@data& (0+255),b
  1397  0021B6  0E00               	movlw	high _data_array
  1398  0021B8  0100               	movlb	0	; () banked
  1399  0021BA  6FA8               	movwf	(CANsendMessage@data+1)& (0+255),b
  1400  0021BC  0E08               	movlw	8
  1401  0021BE  0100               	movlb	0	; () banked
  1402  0021C0  6FA9               	movwf	CANsendMessage@dataLength& (0+255),b
  1403  0021C2  0EBC               	movlw	188
  1404  0021C4  0100               	movlb	0	; () banked
  1405  0021C6  6FAA               	movwf	CANsendMessage@flags& (0+255),b
  1406  0021C8  ECFA  F005         	call	_CANsendMessage	;wreg free
  1407                           
  1408                           ;motore.c: 233: remote_frame = 0;
  1409  0021CC  9A3E               	bcf	_remote_frame/(0+8),_remote_frame& (0+7),c
  1410  0021CE                     l4820:
  1411                           
  1412                           ;motore.c: 234: }
  1413                           ;motore.c: 235: if (can_retry == 1) {
  1414  0021CE  A03E               	btfss	_can_retry/(0+8),_can_retry& (0+7),c
  1415  0021D0  D016               	goto	l4824
  1416                           
  1417                           ;motore.c: 236: CANsendMessage(id1, data_array1, 8, CAN_CONFIG_STD_MSG & CAN_NORMAL_TX_F
      +                          RAME & CAN_TX_PRIORITY_0);
  1418  0021D2  C074  F0A3         	movff	_id1,CANsendMessage@identifier
  1419  0021D6  C075  F0A4         	movff	_id1+1,CANsendMessage@identifier+1
  1420  0021DA  C076  F0A5         	movff	_id1+2,CANsendMessage@identifier+2
  1421  0021DE  C077  F0A6         	movff	_id1+3,CANsendMessage@identifier+3
  1422  0021E2  0E9B               	movlw	low _data_array1
  1423  0021E4  0100               	movlb	0	; () banked
  1424  0021E6  6FA7               	movwf	CANsendMessage@data& (0+255),b
  1425  0021E8  0E00               	movlw	high _data_array1
  1426  0021EA  0100               	movlb	0	; () banked
  1427  0021EC  6FA8               	movwf	(CANsendMessage@data+1)& (0+255),b
  1428  0021EE  0E08               	movlw	8
  1429  0021F0  0100               	movlb	0	; () banked
  1430  0021F2  6FA9               	movwf	CANsendMessage@dataLength& (0+255),b
  1431  0021F4  0EBC               	movlw	188
  1432  0021F6  0100               	movlb	0	; () banked
  1433  0021F8  6FAA               	movwf	CANsendMessage@flags& (0+255),b
  1434  0021FA  ECFA  F005         	call	_CANsendMessage	;wreg free
  1435  0021FE                     l4824:
  1436                           
  1437                           ;motore.c: 237: }
  1438                           ;motore.c: 238: }
  1439                           ;motore.c: 239: if ((TXB0CONbits.TXABT) || (TXB1CONbits.TXABT)) {
  1440  0021FE  010F               	movlb	15	; () banked
  1441  002200  BD40               	btfsc	64,6,b	;volatile
  1442  002202  D003               	goto	l704
  1443                           
  1444                           ; BSR set to: 15
  1445  002204  010F               	movlb	15	; () banked
  1446  002206  AD30               	btfss	48,6,b	;volatile
  1447  002208  D028               	goto	l702
  1448  00220A                     l704:
  1449                           
  1450                           ; BSR set to: 15
  1451                           ;motore.c: 240: can_retry = 1;
  1452  00220A  803E               	bsf	_can_retry/(0+8),_can_retry& (0+7),c
  1453                           
  1454                           ;motore.c: 241: id1 = id;
  1455  00220C  C025  F074         	movff	_id,_id1
  1456  002210  C026  F075         	movff	_id+1,_id1+1
  1457  002214  C027  F076         	movff	_id+2,_id1+2
  1458  002218  C028  F077         	movff	_id+3,_id1+3
  1459                           
  1460                           ;motore.c: 242: remote_frame1 = remote_frame;
  1461  00221C  AA3E               	btfss	_remote_frame/(0+8),_remote_frame& (0+7),c
  1462  00221E  D002               	goto	u6230
  1463  002220  8C3E               	bsf	_remote_frame1/(0+8),_remote_frame1& (0+7),c
  1464  002222  D001               	goto	l4828
  1465  002224                     u6230:
  1466  002224  9C3E               	bcf	_remote_frame1/(0+8),_remote_frame1& (0+7),c
  1467  002226                     l4828:
  1468                           
  1469                           ;motore.c: 243: for (char i = 0; i < 8; i++) {
  1470  002226  0E00               	movlw	0
  1471  002228  6E22               	movwf	send_data@i,c
  1472  00222A                     l4830:
  1473  00222A  0E07               	movlw	7
  1474  00222C  6422               	cpfsgt	send_data@i,c
  1475  00222E  D001               	goto	l4834
  1476  002230  D028               	goto	l707
  1477  002232                     l4834:
  1478                           
  1479                           ;motore.c: 244: data_array1[i] = data_array[i];
  1480  002232  5022               	movf	send_data@i,w,c
  1481  002234  0D01               	mullw	1
  1482  002236  0E93               	movlw	low _data_array
  1483  002238  24F3               	addwf	prodl,w,c
  1484  00223A  6ED9               	movwf	fsr2l,c
  1485  00223C  0E00               	movlw	high _data_array
  1486  00223E  20F4               	addwfc	prodh,w,c
  1487  002240  6EDA               	movwf	fsr2h,c
  1488  002242  5022               	movf	send_data@i,w,c
  1489  002244  0D01               	mullw	1
  1490  002246  0E9B               	movlw	low _data_array1
  1491  002248  24F3               	addwf	prodl,w,c
  1492  00224A  6EE1               	movwf	fsr1l,c
  1493  00224C  0E00               	movlw	high _data_array1
  1494  00224E  20F4               	addwfc	prodh,w,c
  1495  002250  6EE2               	movwf	fsr1h,c
  1496  002252  CFDF FFE7          	movff	indf2,indf1
  1497  002256  2A22               	incf	send_data@i,f,c
  1498  002258  D7E8               	goto	l4830
  1499  00225A                     l702:
  1500                           
  1501                           ; BSR set to: 15
  1502                           ;motore.c: 247: can_retry = 0;
  1503  00225A  903E               	bcf	_can_retry/(0+8),_can_retry& (0+7),c
  1504                           
  1505                           ;motore.c: 248: if (remote_frame1 != 0) {
  1506  00225C  AC3E               	btfss	_remote_frame1/(0+8),_remote_frame1& (0+7),c
  1507  00225E  D010               	goto	l708
  1508                           
  1509                           ; BSR set to: 15
  1510                           ;motore.c: 249: remote_frame = remote_frame1;
  1511  002260  AC3E               	btfss	_remote_frame1/(0+8),_remote_frame1& (0+7),c
  1512  002262  D002               	goto	u6280
  1513  002264  8A3E               	bsf	_remote_frame/(0+8),_remote_frame& (0+7),c
  1514  002266  D001               	goto	u6295
  1515  002268                     u6280:
  1516  002268  9A3E               	bcf	_remote_frame/(0+8),_remote_frame& (0+7),c
  1517  00226A                     u6295:
  1518                           
  1519                           ;motore.c: 250: id = id1;
  1520  00226A  C074  F025         	movff	_id1,_id
  1521  00226E  C075  F026         	movff	_id1+1,_id+1
  1522  002272  C076  F027         	movff	_id1+2,_id+2
  1523  002276  C077  F028         	movff	_id1+3,_id+3
  1524                           
  1525                           ;motore.c: 251: message_sent = 1;
  1526  00227A  883E               	bsf	_message_sent/(0+8),_message_sent& (0+7),c
  1527                           
  1528                           ;motore.c: 252: remote_frame1 = 0;
  1529  00227C  9C3E               	bcf	_remote_frame1/(0+8),_remote_frame1& (0+7),c
  1530                           
  1531                           ;motore.c: 253: } else {
  1532  00227E  D001               	goto	l707
  1533  002280                     l708:
  1534                           
  1535                           ; BSR set to: 15
  1536                           ;motore.c: 255: message_sent = 0;
  1537  002280  983E               	bcf	_message_sent/(0+8),_message_sent& (0+7),c
  1538  002282                     l707:
  1539                           
  1540                           ;motore.c: 256: }
  1541                           ;motore.c: 257: }
  1542                           ;motore.c: 258: remote_frame = 0;
  1543  002282  9A3E               	bcf	_remote_frame/(0+8),_remote_frame& (0+7),c
  1544  002284  0012               	return		;funcret
  1545  002286                     __end_of_send_data:
  1546                           	opt stack 0
  1547                           tblptru	equ	0xFF8
  1548                           tblptrh	equ	0xFF7
  1549                           tblptrl	equ	0xFF6
  1550                           tablat	equ	0xFF5
  1551                           prodh	equ	0xFF4
  1552                           prodl	equ	0xFF3
  1553                           postinc0	equ	0xFEE
  1554                           wreg	equ	0xFE8
  1555                           indf1	equ	0xFE7
  1556                           fsr1h	equ	0xFE2
  1557                           fsr1l	equ	0xFE1
  1558                           indf2	equ	0xFDF
  1559                           fsr2h	equ	0xFDA
  1560                           fsr2l	equ	0xFD9
  1561                           status	equ	0xFD8
  1562                           
  1563 ;; *************** function _configurazione_iniziale *****************
  1564 ;; Defined at:
  1565 ;;		line 273 in file "motore.c"
  1566 ;; Parameters:    Size  Location     Type
  1567 ;;		None
  1568 ;; Auto vars:     Size  Location     Type
  1569 ;;		None
  1570 ;; Return value:  Size  Location     Type
  1571 ;;		None               void
  1572 ;; Registers used:
  1573 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  1574 ;; Tracked objects:
  1575 ;;		On entry : 0/0
  1576 ;;		On exit  : 0/0
  1577 ;;		Unchanged: 0/0
  1578 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1579 ;;      Params:         0       0       0       0
  1580 ;;      Locals:         0       0       0       0
  1581 ;;      Temps:          0       0       0       0
  1582 ;;      Totals:         0       0       0       0
  1583 ;;Total ram usage:        0 bytes
  1584 ;; Hardware stack levels used:    1
  1585 ;; Hardware stack levels required when called:    4
  1586 ;; This function calls:
  1587 ;;		_CANInitialize
  1588 ;;		_delay_ms
  1589 ;; This function is called by:
  1590 ;;		_main
  1591 ;; This function uses a non-reentrant model
  1592 ;;
  1593                           
  1594                           	psect	text2
  1595  002286                     __ptext2:
  1596                           	opt stack 0
  1597  002286                     _configurazione_iniziale:
  1598                           	opt stack 26
  1599                           
  1600                           ;motore.c: 276: CANInitialize(4, 6, 5, 1, 3, CAN_CONFIG_LINE_FILTER_OFF & CAN_CONFIG_SAM
      +                          PLE_ONCE & CAN_CONFIG_ALL_VALID_MSG & CAN_CONFIG_DBL_BUFFER_ON);
  1601                           
  1602                           ;incstack = 0
  1603  002286  0E06               	movlw	6
  1604  002288  0100               	movlb	0	; () banked
  1605  00228A  6FAC               	movwf	CANInitialize@phaseSeg1& (0+255),b
  1606  00228C  0E05               	movlw	5
  1607  00228E  0100               	movlb	0	; () banked
  1608  002290  6FAD               	movwf	CANInitialize@phaseSeg2& (0+255),b
  1609  002292  0E01               	movlw	1
  1610  002294  0100               	movlb	0	; () banked
  1611  002296  6FAE               	movwf	CANInitialize@SJW& (0+255),b
  1612  002298  0E03               	movlw	3
  1613  00229A  0100               	movlb	0	; () banked
  1614  00229C  6FAF               	movwf	CANInitialize@BRP& (0+255),b
  1615  00229E  0E9D               	movlw	157
  1616  0022A0  0100               	movlb	0	; () banked
  1617  0022A2  6FB0               	movwf	CANInitialize@flags& (0+255),b
  1618  0022A4  0E04               	movlw	4
  1619  0022A6  ECF0  F00F         	call	_CANInitialize
  1620                           
  1621                           ;motore.c: 277: RCONbits.IPEN = 1;
  1622  0022AA  8ED0               	bsf	4048,7,c	;volatile
  1623                           
  1624                           ;motore.c: 278: INTCONbits.INT0IF = 0;
  1625  0022AC  92F2               	bcf	intcon,1,c	;volatile
  1626                           
  1627                           ;motore.c: 279: PIR3bits.RXB1IF = 0;
  1628  0022AE  92A4               	bcf	4004,1,c	;volatile
  1629                           
  1630                           ;motore.c: 280: PIR3bits.RXB0IF = 0;
  1631  0022B0  90A4               	bcf	4004,0,c	;volatile
  1632                           
  1633                           ;motore.c: 282: IPR3bits.RXB1IP = 0;
  1634  0022B2  92A5               	bcf	4005,1,c	;volatile
  1635                           
  1636                           ;motore.c: 283: IPR3bits.RXB0IP = 0;
  1637  0022B4  90A5               	bcf	4005,0,c	;volatile
  1638                           
  1639                           ;motore.c: 284: INTCONbits.GIEH = 0;
  1640  0022B6  9EF2               	bcf	intcon,7,c	;volatile
  1641                           
  1642                           ;motore.c: 285: INTCONbits.GIEL = 1;
  1643  0022B8  8CF2               	bsf	intcon,6,c	;volatile
  1644                           
  1645                           ;motore.c: 286: INTCON2bits.INTEDG0 = 1;
  1646  0022BA  8CF1               	bsf	intcon2,6,c	;volatile
  1647                           
  1648                           ;motore.c: 289: T3CON = 0x01;
  1649  0022BC  0E01               	movlw	1
  1650  0022BE  6EB1               	movwf	4017,c	;volatile
  1651                           
  1652                           ;motore.c: 290: PIR2bits.TMR3IF = 0;
  1653  0022C0  92A1               	bcf	4001,1,c	;volatile
  1654                           
  1655                           ;motore.c: 291: IPR2bits.TMR3IP = 0;
  1656  0022C2  92A2               	bcf	4002,1,c	;volatile
  1657                           
  1658                           ;motore.c: 292: TMR3H = 0x63;
  1659  0022C4  0E63               	movlw	99
  1660  0022C6  6EB3               	movwf	4019,c	;volatile
  1661                           
  1662                           ;motore.c: 293: TMR3L = 0xC0;
  1663  0022C8  0EC0               	movlw	192
  1664  0022CA  6EB2               	movwf	4018,c	;volatile
  1665                           
  1666                           ;motore.c: 298: ADCON0bits.ADON = 1;
  1667  0022CC  80C2               	bsf	4034,0,c	;volatile
  1668                           
  1669                           ;motore.c: 299: ADCON0bits.CHS0 = 0;
  1670  0022CE  94C2               	bcf	4034,2,c	;volatile
  1671                           
  1672                           ;motore.c: 300: ADCON0bits.CHS1 = 0;
  1673  0022D0  96C2               	bcf	4034,3,c	;volatile
  1674                           
  1675                           ;motore.c: 301: ADCON0bits.CHS2 = 0;
  1676  0022D2  98C2               	bcf	4034,4,c	;volatile
  1677                           
  1678                           ;motore.c: 302: ADCON0bits.CHS3 = 0;
  1679  0022D4  9AC2               	bcf	4034,5,c	;volatile
  1680                           
  1681                           ;motore.c: 303: ADCON1bits.PCFG0 = 0;
  1682  0022D6  90C1               	bcf	4033,0,c	;volatile
  1683                           
  1684                           ;motore.c: 304: ADCON1bits.PCFG1 = 1;
  1685  0022D8  82C1               	bsf	4033,1,c	;volatile
  1686                           
  1687                           ;motore.c: 305: ADCON1bits.PCFG2 = 1;
  1688  0022DA  84C1               	bsf	4033,2,c	;volatile
  1689                           
  1690                           ;motore.c: 306: ADCON1bits.PCFG3 = 1;
  1691  0022DC  86C1               	bsf	4033,3,c	;volatile
  1692                           
  1693                           ;motore.c: 307: ADCON1bits.VCFG0 = 0;
  1694  0022DE  98C1               	bcf	4033,4,c	;volatile
  1695                           
  1696                           ;motore.c: 308: ADCON1bits.VCFG1 = 0;
  1697  0022E0  9AC1               	bcf	4033,5,c	;volatile
  1698                           
  1699                           ;motore.c: 309: ADCON2bits.ADCS0 = 1;
  1700  0022E2  80C0               	bsf	4032,0,c	;volatile
  1701                           
  1702                           ;motore.c: 310: ADCON2bits.ADCS1 = 0;
  1703  0022E4  92C0               	bcf	4032,1,c	;volatile
  1704                           
  1705                           ;motore.c: 311: ADCON2bits.ADCS2 = 1;
  1706  0022E6  84C0               	bsf	4032,2,c	;volatile
  1707                           
  1708                           ;motore.c: 312: ADCON2bits.ACQT0 = 0;
  1709  0022E8  96C0               	bcf	4032,3,c	;volatile
  1710                           
  1711                           ;motore.c: 313: ADCON2bits.ACQT1 = 1;
  1712  0022EA  88C0               	bsf	4032,4,c	;volatile
  1713                           
  1714                           ;motore.c: 314: ADCON2bits.ACQT2 = 1;
  1715  0022EC  8AC0               	bsf	4032,5,c	;volatile
  1716                           
  1717                           ;motore.c: 315: ADCON2bits.ADFM = 0;
  1718  0022EE  9EC0               	bcf	4032,7,c	;volatile
  1719                           
  1720                           ;motore.c: 318: INTCONbits.INT0IE = 1;
  1721  0022F0  88F2               	bsf	intcon,4,c	;volatile
  1722                           
  1723                           ;motore.c: 319: PIE3bits.RXB1IE = 1;
  1724  0022F2  82A3               	bsf	4003,1,c	;volatile
  1725                           
  1726                           ;motore.c: 320: PIE3bits.RXB0IE = 1;
  1727  0022F4  80A3               	bsf	4003,0,c	;volatile
  1728                           
  1729                           ;motore.c: 321: PIE2bits.TMR3IE = 1;
  1730  0022F6  82A0               	bsf	4000,1,c	;volatile
  1731                           
  1732                           ;motore.c: 323: LATA = 0x00;
  1733  0022F8  0E00               	movlw	0
  1734  0022FA  6E89               	movwf	3977,c	;volatile
  1735                           
  1736                           ;motore.c: 324: TRISA = 0b01111101;
  1737  0022FC  0E7D               	movlw	125
  1738  0022FE  6E92               	movwf	3986,c	;volatile
  1739                           
  1740                           ;motore.c: 326: LATB = 0x00;
  1741  002300  0E00               	movlw	0
  1742  002302  6E8A               	movwf	3978,c	;volatile
  1743                           
  1744                           ;motore.c: 327: TRISB = 0b11111011;
  1745  002304  0EFB               	movlw	251
  1746  002306  6E93               	movwf	3987,c	;volatile
  1747                           
  1748                           ;motore.c: 329: LATC = 0x00;
  1749  002308  0E00               	movlw	0
  1750  00230A  6E8B               	movwf	3979,c	;volatile
  1751                           
  1752                           ;motore.c: 330: TRISC = 0x00;
  1753  00230C  0E00               	movlw	0
  1754  00230E  6E94               	movwf	3988,c	;volatile
  1755                           
  1756                           ;motore.c: 332: LATD = 0x00;
  1757  002310  0E00               	movlw	0
  1758  002312  6E8C               	movwf	3980,c	;volatile
  1759                           
  1760                           ;motore.c: 333: TRISD = 0x00;
  1761  002314  0E00               	movlw	0
  1762  002316  6E95               	movwf	3989,c	;volatile
  1763                           
  1764                           ;motore.c: 335: LATE = 0x00;
  1765  002318  0E00               	movlw	0
  1766  00231A  6E8D               	movwf	3981,c	;volatile
  1767                           
  1768                           ;motore.c: 336: TRISE = 0xFF;
  1769  00231C  6896               	setf	3990,c	;volatile
  1770                           
  1771                           ;motore.c: 337: delay_ms(2);
  1772  00231E  0E00               	movlw	0
  1773  002320  0100               	movlb	0	; () banked
  1774  002322  6FAC               	movwf	(delay_ms@value_ms+1)& (0+255),b
  1775  002324  0E02               	movlw	2
  1776  002326  6FAB               	movwf	delay_ms@value_ms& (0+255),b
  1777  002328  EC8A  F012         	call	_delay_ms	;wreg free
  1778  00232C  0012               	return		;funcret
  1779  00232E                     __end_of_configurazione_iniziale:
  1780                           	opt stack 0
  1781                           tblptru	equ	0xFF8
  1782                           tblptrh	equ	0xFF7
  1783                           tblptrl	equ	0xFF6
  1784                           tablat	equ	0xFF5
  1785                           prodh	equ	0xFF4
  1786                           prodl	equ	0xFF3
  1787                           intcon	equ	0xFF2
  1788                           intcon2	equ	0xFF1
  1789                           postinc0	equ	0xFEE
  1790                           wreg	equ	0xFE8
  1791                           indf1	equ	0xFE7
  1792                           fsr1h	equ	0xFE2
  1793                           fsr1l	equ	0xFE1
  1794                           indf2	equ	0xFDF
  1795                           fsr2h	equ	0xFDA
  1796                           fsr2l	equ	0xFD9
  1797                           status	equ	0xFD8
  1798                           
  1799 ;; *************** function _delay_ms *****************
  1800 ;; Defined at:
  1801 ;;		line 61 in file "delay.c"
  1802 ;; Parameters:    Size  Location     Type
  1803 ;;  value_ms        2    8[BANK0 ] unsigned int 
  1804 ;; Auto vars:     Size  Location     Type
  1805 ;;		None
  1806 ;; Return value:  Size  Location     Type
  1807 ;;		None               void
  1808 ;; Registers used:
  1809 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  1810 ;; Tracked objects:
  1811 ;;		On entry : 0/0
  1812 ;;		On exit  : 0/0
  1813 ;;		Unchanged: 0/0
  1814 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1815 ;;      Params:         0       2       0       0
  1816 ;;      Locals:         0       0       0       0
  1817 ;;      Temps:          0       0       0       0
  1818 ;;      Totals:         0       2       0       0
  1819 ;;Total ram usage:        2 bytes
  1820 ;; Hardware stack levels used:    1
  1821 ;; Hardware stack levels required when called:    3
  1822 ;; This function calls:
  1823 ;;		___wmul
  1824 ;; This function is called by:
  1825 ;;		_main
  1826 ;;		_configurazione_iniziale
  1827 ;;		_delay_s
  1828 ;; This function uses a non-reentrant model
  1829 ;;
  1830                           
  1831                           	psect	text3
  1832  002514                     __ptext3:
  1833                           	opt stack 0
  1834  002514                     _delay_ms:
  1835                           	opt stack 27
  1836                           
  1837                           ;delay.c: 73: clock_counter_reference = value_ms * delay_quartz_frequency_value;
  1838                           
  1839                           ;incstack = 0
  1840  002514  C041  F0A7         	movff	_delay_quartz_frequency_value,___wmul@multiplier	;volatile
  1841  002518  0100               	movlb	0	; () banked
  1842  00251A  6BA8               	clrf	(___wmul@multiplier+1)& (0+255),b
  1843  00251C  C0AB  F0A9         	movff	delay_ms@value_ms,___wmul@multiplicand
  1844  002520  C0AC  F0AA         	movff	delay_ms@value_ms+1,___wmul@multiplicand+1
  1845  002524  ECA4  F012         	call	___wmul	;wreg free
  1846  002528  C0A7  F02D         	movff	?___wmul,_clock_counter_reference	;volatile
  1847  00252C  C0A8  F02E         	movff	?___wmul+1,_clock_counter_reference+1	;volatile
  1848                           
  1849                           ;delay.c: 75: while (clock_counter_reference) {
  1850  002530  D006               	goto	l571
  1851  002532                     l4668:
  1852                           
  1853                           ;delay.c: 85: _delay(240);
  1854  002532  0E50               	movlw	80
  1855  002534                     u6577:
  1856  002534  2EE8               	decfsz	wreg,f,c
  1857  002536  D7FE               	goto	u6577
  1858                           
  1859                           ;delay.c: 88: clock_counter_reference--;
  1860  002538  062D               	decf	_clock_counter_reference,f,c	;volatile
  1861  00253A  A0D8               	btfss	status,0,c
  1862  00253C  062E               	decf	_clock_counter_reference+1,f,c	;volatile
  1863  00253E                     l571:
  1864  00253E  502D               	movf	_clock_counter_reference,w,c	;volatile
  1865  002540  102E               	iorwf	_clock_counter_reference+1,w,c	;volatile
  1866  002542  B4D8               	btfsc	status,2,c
  1867  002544  0012               	return	
  1868  002546  D7F5               	goto	l4668
  1869  002548                     __end_of_delay_ms:
  1870                           	opt stack 0
  1871                           tblptru	equ	0xFF8
  1872                           tblptrh	equ	0xFF7
  1873                           tblptrl	equ	0xFF6
  1874                           tablat	equ	0xFF5
  1875                           prodh	equ	0xFF4
  1876                           prodl	equ	0xFF3
  1877                           intcon	equ	0xFF2
  1878                           intcon2	equ	0xFF1
  1879                           postinc0	equ	0xFEE
  1880                           wreg	equ	0xFE8
  1881                           indf1	equ	0xFE7
  1882                           fsr1h	equ	0xFE2
  1883                           fsr1l	equ	0xFE1
  1884                           indf2	equ	0xFDF
  1885                           fsr2h	equ	0xFDA
  1886                           fsr2l	equ	0xFD9
  1887                           status	equ	0xFD8
  1888                           
  1889 ;; *************** function _CANInitialize *****************
  1890 ;; Defined at:
  1891 ;;		line 218 in file "CANlib.h"
  1892 ;; Parameters:    Size  Location     Type
  1893 ;;  propSeg         1    wreg     unsigned char 
  1894 ;;  phaseSeg1       1    9[BANK0 ] unsigned char 
  1895 ;;  phaseSeg2       1   10[BANK0 ] unsigned char 
  1896 ;;  SJW             1   11[BANK0 ] unsigned char 
  1897 ;;  BRP             1   12[BANK0 ] unsigned char 
  1898 ;;  flags           1   13[BANK0 ] enum E16844
  1899 ;; Auto vars:     Size  Location     Type
  1900 ;;  propSeg         1   18[BANK0 ] unsigned char 
  1901 ;;  FilterConfig    1   20[BANK0 ] unsigned char 
  1902 ;;  FilterConfig    1   19[BANK0 ] unsigned char 
  1903 ;; Return value:  Size  Location     Type
  1904 ;;		None               void
  1905 ;; Registers used:
  1906 ;;		wreg, status,2, status,0, cstack
  1907 ;; Tracked objects:
  1908 ;;		On entry : 0/0
  1909 ;;		On exit  : 0/0
  1910 ;;		Unchanged: 0/0
  1911 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1912 ;;      Params:         0       5       0       0
  1913 ;;      Locals:         0       3       0       0
  1914 ;;      Temps:          0       4       0       0
  1915 ;;      Totals:         0      12       0       0
  1916 ;;Total ram usage:       12 bytes
  1917 ;; Hardware stack levels used:    1
  1918 ;; Hardware stack levels required when called:    3
  1919 ;; This function calls:
  1920 ;;		_CANOperationMode
  1921 ;;		_CANSetFilter
  1922 ;;		_CANSetMask
  1923 ;; This function is called by:
  1924 ;;		_configurazione_iniziale
  1925 ;; This function uses a non-reentrant model
  1926 ;;
  1927                           
  1928                           	psect	text4
  1929  001FE0                     __ptext4:
  1930                           	opt stack 0
  1931  001FE0                     _CANInitialize:
  1932                           	opt stack 26
  1933                           
  1934                           ;incstack = 0
  1935                           ;CANInitialize@propSeg stored from wreg
  1936  001FE0  0100               	movlb	0	; () banked
  1937  001FE2  6FB5               	movwf	CANInitialize@propSeg& (0+255),b
  1938                           
  1939                           ;CANlib.h: 220: BYTE FilterConfig1;
  1940                           ;CANlib.h: 221: BYTE FilterConfig2;
  1941                           ;CANlib.h: 223: CANOperationMode(CAN_OP_MODE_CONFIG);
  1942  001FE4  0E80               	movlw	128
  1943  001FE6  ECF9  F012         	call	_CANOperationMode
  1944                           
  1945                           ;CANlib.h: 225: BRGCON1 = 0x00;
  1946  001FEA  0E00               	movlw	0
  1947  001FEC  6E70               	movwf	3952,c	;volatile
  1948                           
  1949                           ;CANlib.h: 226: BRGCON2 = 0x00;
  1950  001FEE  0E00               	movlw	0
  1951  001FF0  6E71               	movwf	3953,c	;volatile
  1952                           
  1953                           ;CANlib.h: 227: BRGCON3 = 0x00;
  1954  001FF2  0E00               	movlw	0
  1955  001FF4  6E72               	movwf	3954,c	;volatile
  1956                           
  1957                           ;CANlib.h: 229: SJW= SJW << 6;
  1958  001FF6  0100               	movlb	0	; () banked
  1959  001FF8  41AE               	rrncf	CANInitialize@SJW& (0+255),w,b
  1960  001FFA  42E8               	rrncf	wreg,f,c
  1961  001FFC  0BC0               	andlw	192
  1962  001FFE  0100               	movlb	0	; () banked
  1963  002000  6FAE               	movwf	CANInitialize@SJW& (0+255),b
  1964                           
  1965                           ; BSR set to: 0
  1966                           ;CANlib.h: 230: BRGCON1 |= SJW;
  1967  002002  0100               	movlb	0	; () banked
  1968  002004  51AE               	movf	CANInitialize@SJW& (0+255),w,b
  1969  002006  1270               	iorwf	3952,f,c	;volatile
  1970                           
  1971                           ; BSR set to: 0
  1972                           ;CANlib.h: 231: BRGCON1 |= BRP;
  1973  002008  0100               	movlb	0	; () banked
  1974  00200A  51AF               	movf	CANInitialize@BRP& (0+255),w,b
  1975  00200C  1270               	iorwf	3952,f,c	;volatile
  1976                           
  1977                           ; BSR set to: 0
  1978                           ;CANlib.h: 233: BRGCON2 |= propSeg;
  1979  00200E  0100               	movlb	0	; () banked
  1980  002010  51B5               	movf	CANInitialize@propSeg& (0+255),w,b
  1981  002012  1271               	iorwf	3953,f,c	;volatile
  1982                           
  1983                           ; BSR set to: 0
  1984                           ;CANlib.h: 234: phaseSeg1 = phaseSeg1 <<3;
  1985  002014  0100               	movlb	0	; () banked
  1986  002016  39AC               	swapf	CANInitialize@phaseSeg1& (0+255),w,b
  1987  002018  42E8               	rrncf	wreg,f,c
  1988  00201A  0BF8               	andlw	248
  1989  00201C  0100               	movlb	0	; () banked
  1990  00201E  6FAC               	movwf	CANInitialize@phaseSeg1& (0+255),b
  1991                           
  1992                           ; BSR set to: 0
  1993                           ;CANlib.h: 235: BRGCON2 |= phaseSeg1;
  1994  002020  0100               	movlb	0	; () banked
  1995  002022  51AC               	movf	CANInitialize@phaseSeg1& (0+255),w,b
  1996  002024  1271               	iorwf	3953,f,c	;volatile
  1997                           
  1998                           ; BSR set to: 0
  1999                           ;CANlib.h: 237: if ( !(flags & CAN_CONFIG_SAMPLE_BIT) )
  2000  002026  0100               	movlb	0	; () banked
  2001  002028  A5B0               	btfss	CANInitialize@flags& (0+255),2,b
  2002                           
  2003                           ; BSR set to: 0
  2004                           ;CANlib.h: 238: BRGCON2bits.SAM= 1;
  2005  00202A  8C71               	bsf	3953,6,c	;volatile
  2006                           
  2007                           ; BSR set to: 0
  2008                           ;CANlib.h: 240: if ( flags & CAN_CONFIG_PHSEG2_PRG_BIT )
  2009  00202C  0100               	movlb	0	; () banked
  2010  00202E  B1B0               	btfsc	CANInitialize@flags& (0+255),0,b
  2011                           
  2012                           ; BSR set to: 0
  2013                           ;CANlib.h: 241: BRGCON2bits.SEG2PHTS = 1;
  2014  002030  8E71               	bsf	3953,7,c	;volatile
  2015                           
  2016                           ; BSR set to: 0
  2017                           ;CANlib.h: 243: BRGCON3 |= phaseSeg2;
  2018                           
  2019                           ; BSR set to: 0
  2020  002032  0100               	movlb	0	; () banked
  2021  002034  51AD               	movf	CANInitialize@phaseSeg2& (0+255),w,b
  2022  002036  1272               	iorwf	3954,f,c	;volatile
  2023                           
  2024                           ; BSR set to: 0
  2025                           ;CANlib.h: 245: if ( flags & CAN_CONFIG_LINE_FILTER_BIT )
  2026  002038  0100               	movlb	0	; () banked
  2027  00203A  B3B0               	btfsc	CANInitialize@flags& (0+255),1,b
  2028                           
  2029                           ; BSR set to: 0
  2030                           ;CANlib.h: 246: BRGCON3bits.WAKFIL = 1;
  2031  00203C  8C72               	bsf	3954,6,c	;volatile
  2032                           
  2033                           ; BSR set to: 0
  2034                           ;CANlib.h: 251: RXB0CON = flags & CAN_CONFIG_MSG_BITS;
  2035                           
  2036                           ; BSR set to: 0
  2037  00203E  0100               	movlb	0	; () banked
  2038  002040  51B0               	movf	CANInitialize@flags& (0+255),w,b
  2039  002042  0B60               	andlw	96
  2040  002044  6E60               	movwf	3936,c	;volatile
  2041                           
  2042                           ;CANlib.h: 252: if ( (flags & CAN_CONFIG_DBL_BUFFER_BIT)== CAN_CONFIG_DBL_BUFFER_ON )
  2043  002046  0100               	movlb	0	; () banked
  2044  002048  51B0               	movf	CANInitialize@flags& (0+255),w,b
  2045  00204A  0B10               	andlw	16
  2046  00204C  0AFF               	xorlw	255
  2047  00204E  B4D8               	btfsc	status,2,c
  2048                           
  2049                           ; BSR set to: 0
  2050                           ;CANlib.h: 253: RXB0CONbits.RXB0DBEN = 1;
  2051  002050  8460               	bsf	3936,2,c	;volatile
  2052                           
  2053                           ; BSR set to: 0
  2054                           ;CANlib.h: 255: RXB1CON = RXB0CON;
  2055  002052  CF60 FF50          	movff	3936,3920	;volatile
  2056                           
  2057                           ; BSR set to: 0
  2058                           ;CANlib.h: 259: CANSetMask (CAN_MASK_B1, 0x00000000, CAN_CONFIG_XTD_MSG);
  2059  002056  0E00               	movlw	0
  2060  002058  6E1E               	movwf	CANSetMask@mask,c
  2061  00205A  0E00               	movlw	0
  2062  00205C  6E1F               	movwf	CANSetMask@mask+1,c
  2063  00205E  0E00               	movlw	0
  2064  002060  6E20               	movwf	CANSetMask@mask+2,c
  2065  002062  0E00               	movlw	0
  2066  002064  6E21               	movwf	CANSetMask@mask+3,c
  2067  002066  0EF7               	movlw	247
  2068  002068  6E22               	movwf	CANSetMask@type,c
  2069  00206A  0E01               	movlw	1
  2070  00206C  EC41  F00E         	call	_CANSetMask
  2071                           
  2072                           ;CANlib.h: 260: CANSetMask (CAN_MASK_B2, 0x00000000, CAN_CONFIG_XTD_MSG);
  2073  002070  0E00               	movlw	0
  2074  002072  6E1E               	movwf	CANSetMask@mask,c
  2075  002074  0E00               	movlw	0
  2076  002076  6E1F               	movwf	CANSetMask@mask+1,c
  2077  002078  0E00               	movlw	0
  2078  00207A  6E20               	movwf	CANSetMask@mask+2,c
  2079  00207C  0E00               	movlw	0
  2080  00207E  6E21               	movwf	CANSetMask@mask+3,c
  2081  002080  0EF7               	movlw	247
  2082  002082  6E22               	movwf	CANSetMask@type,c
  2083  002084  0E02               	movlw	2
  2084  002086  EC41  F00E         	call	_CANSetMask
  2085                           
  2086                           ;CANlib.h: 263: switch( (flags & CAN_CONFIG_MSG_BITS) | ~CAN_CONFIG_MSG_BITS )
  2087  00208A  D00F               	goto	l4428
  2088  00208C                     l4422:
  2089                           
  2090                           ;CANlib.h: 266: FilterConfig1 = CAN_CONFIG_XTD_MSG;
  2091  00208C  0EF7               	movlw	247
  2092  00208E  0100               	movlb	0	; () banked
  2093  002090  6FB6               	movwf	CANInitialize@FilterConfig1& (0+255),b
  2094  002092  D007               	goto	l4424
  2095  002094                     l360:
  2096                           
  2097                           ; BSR set to: 0
  2098                           ;CANlib.h: 271: FilterConfig1 = CAN_CONFIG_STD_MSG;
  2099  002094  0100               	movlb	0	; () banked
  2100  002096  69B6               	setf	CANInitialize@FilterConfig1& (0+255),b
  2101                           
  2102                           ;CANlib.h: 272: FilterConfig2 = CAN_CONFIG_STD_MSG;
  2103  002098  0100               	movlb	0	; () banked
  2104  00209A  69B7               	setf	CANInitialize@FilterConfig2& (0+255),b
  2105                           
  2106                           ;CANlib.h: 273: break;
  2107  00209C  D028               	goto	l4430
  2108  00209E                     l361:
  2109                           
  2110                           ; BSR set to: 0
  2111                           ;CANlib.h: 275: FilterConfig1 = CAN_CONFIG_STD_MSG;
  2112  00209E  0100               	movlb	0	; () banked
  2113  0020A0  69B6               	setf	CANInitialize@FilterConfig1& (0+255),b
  2114  0020A2                     l4424:
  2115                           
  2116                           ; BSR set to: 0
  2117                           ;CANlib.h: 276: FilterConfig2 = CAN_CONFIG_XTD_MSG;
  2118  0020A2  0EF7               	movlw	247
  2119  0020A4  0100               	movlb	0	; () banked
  2120  0020A6  6FB7               	movwf	CANInitialize@FilterConfig2& (0+255),b
  2121                           
  2122                           ; BSR set to: 0
  2123                           ;CANlib.h: 278: }
  2124                           
  2125                           ;CANlib.h: 277: break;
  2126  0020A8  D022               	goto	l4430
  2127  0020AA                     l4428:
  2128  0020AA  0E9F               	movlw	159
  2129  0020AC  0100               	movlb	0	; () banked
  2130  0020AE  6FB1               	movwf	??_CANInitialize& (0+255),b
  2131  0020B0  0EFF               	movlw	255
  2132  0020B2  0100               	movlb	0	; () banked
  2133  0020B4  6FB2               	movwf	(??_CANInitialize+1)& (0+255),b
  2134  0020B6  0100               	movlb	0	; () banked
  2135  0020B8  51B0               	movf	CANInitialize@flags& (0+255),w,b
  2136  0020BA  0B60               	andlw	96
  2137  0020BC  0100               	movlb	0	; () banked
  2138  0020BE  6FB3               	movwf	(??_CANInitialize+2)& (0+255),b
  2139  0020C0  6BB4               	clrf	(??_CANInitialize+3)& (0+255),b
  2140  0020C2  0100               	movlb	0	; () banked
  2141  0020C4  51B1               	movf	??_CANInitialize& (0+255),w,b
  2142  0020C6  0100               	movlb	0	; () banked
  2143  0020C8  13B3               	iorwf	(??_CANInitialize+2)& (0+255),f,b
  2144  0020CA  0100               	movlb	0	; () banked
  2145  0020CC  51B2               	movf	(??_CANInitialize+1)& (0+255),w,b
  2146  0020CE  0100               	movlb	0	; () banked
  2147  0020D0  13B4               	iorwf	(??_CANInitialize+3)& (0+255),f,b
  2148                           
  2149                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2150                           ; Switch size 1, requested type "space"
  2151                           ; Number of cases is 1, Range of values is 0 to 0
  2152                           ; switch strategies available:
  2153                           ; Name         Instructions Cycles
  2154                           ; simple_byte            4     3 (average)
  2155                           ;	Chosen strategy is simple_byte
  2156  0020D2  0100               	movlb	0	; () banked
  2157  0020D4  51B4               	movf	(??_CANInitialize+3)& (0+255),w,b
  2158  0020D6  0A00               	xorlw	0	; case 0
  2159  0020D8  A4D8               	btfss	status,2,c
  2160  0020DA  D7E1               	goto	l361
  2161                           
  2162                           ; BSR set to: 0
  2163                           ; Switch size 1, requested type "space"
  2164                           ; Number of cases is 2, Range of values is 191 to 223
  2165                           ; switch strategies available:
  2166                           ; Name         Instructions Cycles
  2167                           ; simple_byte            7     4 (average)
  2168                           ;	Chosen strategy is simple_byte
  2169  0020DC  0100               	movlb	0	; () banked
  2170  0020DE  51B3               	movf	(??_CANInitialize+2)& (0+255),w,b
  2171  0020E0  0ABF               	xorlw	191	; case 191
  2172  0020E2  B4D8               	btfsc	status,2,c
  2173  0020E4  D7D7               	goto	l360
  2174  0020E6  0A60               	xorlw	96	; case 223
  2175  0020E8  B4D8               	btfsc	status,2,c
  2176  0020EA  D7D0               	goto	l4422
  2177  0020EC  D7D8               	goto	l361
  2178  0020EE                     l4430:
  2179                           
  2180                           ; BSR set to: 0
  2181                           ;CANlib.h: 280: CANSetFilter(CAN_FILTER_B1_F1, 0, FilterConfig1);
  2182  0020EE  0E00               	movlw	0
  2183  0020F0  6E1E               	movwf	CANSetFilter@filter,c
  2184  0020F2  0E00               	movlw	0
  2185  0020F4  6E1F               	movwf	CANSetFilter@filter+1,c
  2186  0020F6  0E00               	movlw	0
  2187  0020F8  6E20               	movwf	CANSetFilter@filter+2,c
  2188  0020FA  0E00               	movlw	0
  2189  0020FC  6E21               	movwf	CANSetFilter@filter+3,c
  2190  0020FE  C0B6  F022         	movff	CANInitialize@FilterConfig1,CANSetFilter@type
  2191  002102  0E00               	movlw	0
  2192  002104  ECD7  F000         	call	_CANSetFilter
  2193                           
  2194                           ;CANlib.h: 281: CANSetFilter(CAN_FILTER_B1_F2, 0, FilterConfig1);
  2195  002108  0E00               	movlw	0
  2196  00210A  6E1E               	movwf	CANSetFilter@filter,c
  2197  00210C  0E00               	movlw	0
  2198  00210E  6E1F               	movwf	CANSetFilter@filter+1,c
  2199  002110  0E00               	movlw	0
  2200  002112  6E20               	movwf	CANSetFilter@filter+2,c
  2201  002114  0E00               	movlw	0
  2202  002116  6E21               	movwf	CANSetFilter@filter+3,c
  2203  002118  C0B6  F022         	movff	CANInitialize@FilterConfig1,CANSetFilter@type
  2204  00211C  0E01               	movlw	1
  2205  00211E  ECD7  F000         	call	_CANSetFilter
  2206                           
  2207                           ;CANlib.h: 282: CANSetFilter(CAN_FILTER_B2_F1, 0, FilterConfig2);
  2208  002122  0E00               	movlw	0
  2209  002124  6E1E               	movwf	CANSetFilter@filter,c
  2210  002126  0E00               	movlw	0
  2211  002128  6E1F               	movwf	CANSetFilter@filter+1,c
  2212  00212A  0E00               	movlw	0
  2213  00212C  6E20               	movwf	CANSetFilter@filter+2,c
  2214  00212E  0E00               	movlw	0
  2215  002130  6E21               	movwf	CANSetFilter@filter+3,c
  2216  002132  C0B7  F022         	movff	CANInitialize@FilterConfig2,CANSetFilter@type
  2217  002136  0E02               	movlw	2
  2218  002138  ECD7  F000         	call	_CANSetFilter
  2219                           
  2220                           ;CANlib.h: 283: CANSetFilter(CAN_FILTER_B2_F2, 0, FilterConfig2);
  2221  00213C  0E00               	movlw	0
  2222  00213E  6E1E               	movwf	CANSetFilter@filter,c
  2223  002140  0E00               	movlw	0
  2224  002142  6E1F               	movwf	CANSetFilter@filter+1,c
  2225  002144  0E00               	movlw	0
  2226  002146  6E20               	movwf	CANSetFilter@filter+2,c
  2227  002148  0E00               	movlw	0
  2228  00214A  6E21               	movwf	CANSetFilter@filter+3,c
  2229  00214C  C0B7  F022         	movff	CANInitialize@FilterConfig2,CANSetFilter@type
  2230  002150  0E03               	movlw	3
  2231  002152  ECD7  F000         	call	_CANSetFilter
  2232                           
  2233                           ;CANlib.h: 284: CANSetFilter(CAN_FILTER_B2_F3, 0, FilterConfig2);
  2234  002156  0E00               	movlw	0
  2235  002158  6E1E               	movwf	CANSetFilter@filter,c
  2236  00215A  0E00               	movlw	0
  2237  00215C  6E1F               	movwf	CANSetFilter@filter+1,c
  2238  00215E  0E00               	movlw	0
  2239  002160  6E20               	movwf	CANSetFilter@filter+2,c
  2240  002162  0E00               	movlw	0
  2241  002164  6E21               	movwf	CANSetFilter@filter+3,c
  2242  002166  C0B7  F022         	movff	CANInitialize@FilterConfig2,CANSetFilter@type
  2243  00216A  0E04               	movlw	4
  2244  00216C  ECD7  F000         	call	_CANSetFilter
  2245                           
  2246                           ;CANlib.h: 285: CANSetFilter(CAN_FILTER_B2_F4, 0, FilterConfig2);
  2247  002170  0E00               	movlw	0
  2248  002172  6E1E               	movwf	CANSetFilter@filter,c
  2249  002174  0E00               	movlw	0
  2250  002176  6E1F               	movwf	CANSetFilter@filter+1,c
  2251  002178  0E00               	movlw	0
  2252  00217A  6E20               	movwf	CANSetFilter@filter+2,c
  2253  00217C  0E00               	movlw	0
  2254  00217E  6E21               	movwf	CANSetFilter@filter+3,c
  2255  002180  C0B7  F022         	movff	CANInitialize@FilterConfig2,CANSetFilter@type
  2256  002184  0E05               	movlw	5
  2257  002186  ECD7  F000         	call	_CANSetFilter
  2258                           
  2259                           ;CANlib.h: 287: CANOperationMode(CAN_OP_MODE_NORMAL);
  2260  00218A  0E00               	movlw	0
  2261  00218C  ECF9  F012         	call	_CANOperationMode
  2262  002190  0012               	return		;funcret
  2263  002192                     __end_of_CANInitialize:
  2264                           	opt stack 0
  2265                           tblptru	equ	0xFF8
  2266                           tblptrh	equ	0xFF7
  2267                           tblptrl	equ	0xFF6
  2268                           tablat	equ	0xFF5
  2269                           prodh	equ	0xFF4
  2270                           prodl	equ	0xFF3
  2271                           intcon	equ	0xFF2
  2272                           intcon2	equ	0xFF1
  2273                           postinc0	equ	0xFEE
  2274                           wreg	equ	0xFE8
  2275                           indf1	equ	0xFE7
  2276                           fsr1h	equ	0xFE2
  2277                           fsr1l	equ	0xFE1
  2278                           indf2	equ	0xFDF
  2279                           fsr2h	equ	0xFDA
  2280                           fsr2l	equ	0xFD9
  2281                           status	equ	0xFD8
  2282                           
  2283 ;; *************** function _CANSetMask *****************
  2284 ;; Defined at:
  2285 ;;		line 640 in file "CANlib.h"
  2286 ;; Parameters:    Size  Location     Type
  2287 ;;  numBuffer       1    wreg     enum E16878
  2288 ;;  mask            4   29[COMRAM] unsigned long 
  2289 ;;  type            1   33[COMRAM] enum E16844
  2290 ;; Auto vars:     Size  Location     Type
  2291 ;;  numBuffer       1    4[BANK0 ] enum E16878
  2292 ;;  tamp            4    5[BANK0 ] unsigned long 
  2293 ;; Return value:  Size  Location     Type
  2294 ;;		None               void
  2295 ;; Registers used:
  2296 ;;		wreg, status,2, status,0
  2297 ;; Tracked objects:
  2298 ;;		On entry : 0/0
  2299 ;;		On exit  : 0/0
  2300 ;;		Unchanged: 0/0
  2301 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2302 ;;      Params:         5       0       0       0
  2303 ;;      Locals:         0       5       0       0
  2304 ;;      Temps:          0       4       0       0
  2305 ;;      Totals:         5       9       0       0
  2306 ;;Total ram usage:       14 bytes
  2307 ;; Hardware stack levels used:    1
  2308 ;; Hardware stack levels required when called:    2
  2309 ;; This function calls:
  2310 ;;		Nothing
  2311 ;; This function is called by:
  2312 ;;		_CANInitialize
  2313 ;; This function uses a non-reentrant model
  2314 ;;
  2315                           
  2316                           	psect	text5
  2317  001C82                     __ptext5:
  2318                           	opt stack 0
  2319  001C82                     _CANSetMask:
  2320                           	opt stack 26
  2321                           
  2322                           ;incstack = 0
  2323                           ;CANSetMask@numBuffer stored from wreg
  2324  001C82  0100               	movlb	0	; () banked
  2325  001C84  6FA7               	movwf	CANSetMask@numBuffer& (0+255),b
  2326                           
  2327                           ;CANlib.h: 643: if ((numBuffer ==CAN_MASK_B1) && (type == CAN_CONFIG_STD_MSG))
  2328  001C86  0100               	movlb	0	; () banked
  2329  001C88  05A7               	decf	CANSetMask@numBuffer& (0+255),w,b
  2330  001C8A  A4D8               	btfss	status,2,c
  2331  001C8C  D051               	goto	l3986
  2332                           
  2333                           ; BSR set to: 0
  2334  001C8E  2822               	incf	CANSetMask@type,w,c
  2335  001C90  A4D8               	btfss	status,2,c
  2336  001C92  D04E               	goto	l3986
  2337                           
  2338                           ; BSR set to: 0
  2339                           ;CANlib.h: 644: {
  2340                           ;CANlib.h: 645: tamp = (mask >> 3);
  2341  001C94  C01E  F0A3         	movff	CANSetMask@mask,??_CANSetMask
  2342  001C98  C01F  F0A4         	movff	CANSetMask@mask+1,??_CANSetMask+1
  2343  001C9C  C020  F0A5         	movff	CANSetMask@mask+2,??_CANSetMask+2
  2344  001CA0  C021  F0A6         	movff	CANSetMask@mask+3,??_CANSetMask+3
  2345  001CA4  0E04               	movlw	4
  2346  001CA6  D006               	goto	u4740
  2347  001CA8                     u4745:
  2348  001CA8  0100               	movlb	0	; () banked
  2349  001CAA  90D8               	bcf	status,0,c
  2350  001CAC  33A6               	rrcf	(??_CANSetMask+3)& (0+255),f,b
  2351  001CAE  33A5               	rrcf	(??_CANSetMask+2)& (0+255),f,b
  2352  001CB0  33A4               	rrcf	(??_CANSetMask+1)& (0+255),f,b
  2353  001CB2  33A3               	rrcf	??_CANSetMask& (0+255),f,b
  2354  001CB4                     u4740:
  2355  001CB4  2EE8               	decfsz	wreg,f,c
  2356  001CB6  D7F8               	goto	u4745
  2357  001CB8  C0A3  F0A8         	movff	??_CANSetMask,CANSetMask@tamp
  2358  001CBC  C0A4  F0A9         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  2359  001CC0  C0A5  F0AA         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  2360  001CC4  C0A6  F0AB         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  2361                           
  2362                           ; BSR set to: 0
  2363                           ;CANlib.h: 646: tamp = tamp & 0x000000FF;
  2364  001CC8  0100               	movlb	0	; () banked
  2365  001CCA  51A8               	movf	CANSetMask@tamp& (0+255),w,b
  2366  001CCC  0100               	movlb	0	; () banked
  2367  001CCE  6FA8               	movwf	CANSetMask@tamp& (0+255),b
  2368  001CD0  6BA9               	clrf	(CANSetMask@tamp+1)& (0+255),b
  2369  001CD2  6BAA               	clrf	(CANSetMask@tamp+2)& (0+255),b
  2370  001CD4  6BAB               	clrf	(CANSetMask@tamp+3)& (0+255),b
  2371                           
  2372                           ; BSR set to: 0
  2373                           ;CANlib.h: 647: RXM0SIDH = (unsigned char) tamp;
  2374  001CD6  C0A8  FF18         	movff	CANSetMask@tamp,3864	;volatile
  2375                           
  2376                           ; BSR set to: 0
  2377                           ;CANlib.h: 649: tamp = mask & 0x00000007;
  2378  001CDA  0E07               	movlw	7
  2379  001CDC  141E               	andwf	CANSetMask@mask,w,c
  2380  001CDE  0100               	movlb	0	; () banked
  2381  001CE0  6FA8               	movwf	CANSetMask@tamp& (0+255),b
  2382  001CE2  0E00               	movlw	0
  2383  001CE4  141F               	andwf	CANSetMask@mask+1,w,c
  2384  001CE6  0100               	movlb	0	; () banked
  2385  001CE8  6FA9               	movwf	(CANSetMask@tamp+1)& (0+255),b
  2386  001CEA  0E00               	movlw	0
  2387  001CEC  1420               	andwf	CANSetMask@mask+2,w,c
  2388  001CEE  0100               	movlb	0	; () banked
  2389  001CF0  6FAA               	movwf	(CANSetMask@tamp+2)& (0+255),b
  2390  001CF2  0E00               	movlw	0
  2391  001CF4  1421               	andwf	CANSetMask@mask+3,w,c
  2392  001CF6  0100               	movlb	0	; () banked
  2393  001CF8  6FAB               	movwf	(CANSetMask@tamp+3)& (0+255),b
  2394                           
  2395                           ; BSR set to: 0
  2396                           ;CANlib.h: 650: tamp = tamp << 5;
  2397  001CFA  C0A8  F0A3         	movff	CANSetMask@tamp,??_CANSetMask
  2398  001CFE  C0A9  F0A4         	movff	CANSetMask@tamp+1,??_CANSetMask+1
  2399  001D02  C0AA  F0A5         	movff	CANSetMask@tamp+2,??_CANSetMask+2
  2400  001D06  C0AB  F0A6         	movff	CANSetMask@tamp+3,??_CANSetMask+3
  2401  001D0A  0E05               	movlw	5
  2402  001D0C                     u4755:
  2403  001D0C  90D8               	bcf	status,0,c
  2404  001D0E  0100               	movlb	0	; () banked
  2405  001D10  37A3               	rlcf	??_CANSetMask& (0+255),f,b
  2406  001D12  37A4               	rlcf	(??_CANSetMask+1)& (0+255),f,b
  2407  001D14  37A5               	rlcf	(??_CANSetMask+2)& (0+255),f,b
  2408  001D16  37A6               	rlcf	(??_CANSetMask+3)& (0+255),f,b
  2409  001D18  2EE8               	decfsz	wreg,f,c
  2410  001D1A  D7F8               	goto	u4755
  2411  001D1C  C0A3  F0A8         	movff	??_CANSetMask,CANSetMask@tamp
  2412  001D20  C0A4  F0A9         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  2413  001D24  C0A5  F0AA         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  2414  001D28  C0A6  F0AB         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  2415                           
  2416                           ; BSR set to: 0
  2417                           ;CANlib.h: 651: RXM0SIDL = (unsigned char) tamp;
  2418  001D2C  C0A8  FF19         	movff	CANSetMask@tamp,3865	;volatile
  2419  001D30                     l3986:
  2420                           
  2421                           ; BSR set to: 0
  2422                           ;CANlib.h: 652: }
  2423                           ;CANlib.h: 654: if ((numBuffer ==CAN_MASK_B2) && (type == CAN_CONFIG_STD_MSG))
  2424  001D30  0E02               	movlw	2
  2425  001D32  0100               	movlb	0	; () banked
  2426  001D34  19A7               	xorwf	CANSetMask@numBuffer& (0+255),w,b
  2427  001D36  A4D8               	btfss	status,2,c
  2428  001D38  D051               	goto	l4002
  2429                           
  2430                           ; BSR set to: 0
  2431  001D3A  2822               	incf	CANSetMask@type,w,c
  2432  001D3C  A4D8               	btfss	status,2,c
  2433  001D3E  D04E               	goto	l4002
  2434                           
  2435                           ; BSR set to: 0
  2436                           ;CANlib.h: 655: {
  2437                           ;CANlib.h: 656: tamp = (mask >> 3);
  2438  001D40  C01E  F0A3         	movff	CANSetMask@mask,??_CANSetMask
  2439  001D44  C01F  F0A4         	movff	CANSetMask@mask+1,??_CANSetMask+1
  2440  001D48  C020  F0A5         	movff	CANSetMask@mask+2,??_CANSetMask+2
  2441  001D4C  C021  F0A6         	movff	CANSetMask@mask+3,??_CANSetMask+3
  2442  001D50  0E04               	movlw	4
  2443  001D52  D006               	goto	u4780
  2444  001D54                     u4785:
  2445  001D54  0100               	movlb	0	; () banked
  2446  001D56  90D8               	bcf	status,0,c
  2447  001D58  33A6               	rrcf	(??_CANSetMask+3)& (0+255),f,b
  2448  001D5A  33A5               	rrcf	(??_CANSetMask+2)& (0+255),f,b
  2449  001D5C  33A4               	rrcf	(??_CANSetMask+1)& (0+255),f,b
  2450  001D5E  33A3               	rrcf	??_CANSetMask& (0+255),f,b
  2451  001D60                     u4780:
  2452  001D60  2EE8               	decfsz	wreg,f,c
  2453  001D62  D7F8               	goto	u4785
  2454  001D64  C0A3  F0A8         	movff	??_CANSetMask,CANSetMask@tamp
  2455  001D68  C0A4  F0A9         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  2456  001D6C  C0A5  F0AA         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  2457  001D70  C0A6  F0AB         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  2458                           
  2459                           ; BSR set to: 0
  2460                           ;CANlib.h: 657: tamp = tamp & 0x000000FF;
  2461  001D74  0100               	movlb	0	; () banked
  2462  001D76  51A8               	movf	CANSetMask@tamp& (0+255),w,b
  2463  001D78  0100               	movlb	0	; () banked
  2464  001D7A  6FA8               	movwf	CANSetMask@tamp& (0+255),b
  2465  001D7C  6BA9               	clrf	(CANSetMask@tamp+1)& (0+255),b
  2466  001D7E  6BAA               	clrf	(CANSetMask@tamp+2)& (0+255),b
  2467  001D80  6BAB               	clrf	(CANSetMask@tamp+3)& (0+255),b
  2468                           
  2469                           ; BSR set to: 0
  2470                           ;CANlib.h: 658: RXM1SIDH = (unsigned char) tamp;
  2471  001D82  C0A8  FF1C         	movff	CANSetMask@tamp,3868	;volatile
  2472                           
  2473                           ; BSR set to: 0
  2474                           ;CANlib.h: 660: tamp = mask & 0x00000007;
  2475  001D86  0E07               	movlw	7
  2476  001D88  141E               	andwf	CANSetMask@mask,w,c
  2477  001D8A  0100               	movlb	0	; () banked
  2478  001D8C  6FA8               	movwf	CANSetMask@tamp& (0+255),b
  2479  001D8E  0E00               	movlw	0
  2480  001D90  141F               	andwf	CANSetMask@mask+1,w,c
  2481  001D92  0100               	movlb	0	; () banked
  2482  001D94  6FA9               	movwf	(CANSetMask@tamp+1)& (0+255),b
  2483  001D96  0E00               	movlw	0
  2484  001D98  1420               	andwf	CANSetMask@mask+2,w,c
  2485  001D9A  0100               	movlb	0	; () banked
  2486  001D9C  6FAA               	movwf	(CANSetMask@tamp+2)& (0+255),b
  2487  001D9E  0E00               	movlw	0
  2488  001DA0  1421               	andwf	CANSetMask@mask+3,w,c
  2489  001DA2  0100               	movlb	0	; () banked
  2490  001DA4  6FAB               	movwf	(CANSetMask@tamp+3)& (0+255),b
  2491                           
  2492                           ; BSR set to: 0
  2493                           ;CANlib.h: 661: tamp = tamp << 5;
  2494  001DA6  C0A8  F0A3         	movff	CANSetMask@tamp,??_CANSetMask
  2495  001DAA  C0A9  F0A4         	movff	CANSetMask@tamp+1,??_CANSetMask+1
  2496  001DAE  C0AA  F0A5         	movff	CANSetMask@tamp+2,??_CANSetMask+2
  2497  001DB2  C0AB  F0A6         	movff	CANSetMask@tamp+3,??_CANSetMask+3
  2498  001DB6  0E05               	movlw	5
  2499  001DB8                     u4795:
  2500  001DB8  90D8               	bcf	status,0,c
  2501  001DBA  0100               	movlb	0	; () banked
  2502  001DBC  37A3               	rlcf	??_CANSetMask& (0+255),f,b
  2503  001DBE  37A4               	rlcf	(??_CANSetMask+1)& (0+255),f,b
  2504  001DC0  37A5               	rlcf	(??_CANSetMask+2)& (0+255),f,b
  2505  001DC2  37A6               	rlcf	(??_CANSetMask+3)& (0+255),f,b
  2506  001DC4  2EE8               	decfsz	wreg,f,c
  2507  001DC6  D7F8               	goto	u4795
  2508  001DC8  C0A3  F0A8         	movff	??_CANSetMask,CANSetMask@tamp
  2509  001DCC  C0A4  F0A9         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  2510  001DD0  C0A5  F0AA         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  2511  001DD4  C0A6  F0AB         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  2512                           
  2513                           ; BSR set to: 0
  2514                           ;CANlib.h: 662: RXM1SIDL = (unsigned char) tamp;
  2515  001DD8  C0A8  FF1D         	movff	CANSetMask@tamp,3869	;volatile
  2516  001DDC                     l4002:
  2517                           
  2518                           ; BSR set to: 0
  2519                           ;CANlib.h: 663: }
  2520                           ;CANlib.h: 665: if ((numBuffer ==CAN_MASK_B1) && (type == CAN_CONFIG_XTD_MSG))
  2521  001DDC  0100               	movlb	0	; () banked
  2522  001DDE  05A7               	decf	CANSetMask@numBuffer& (0+255),w,b
  2523  001DE0  A4D8               	btfss	status,2,c
  2524  001DE2  D07C               	goto	l4034
  2525                           
  2526                           ; BSR set to: 0
  2527  001DE4  0EF7               	movlw	247
  2528  001DE6  1822               	xorwf	CANSetMask@type,w,c
  2529  001DE8  A4D8               	btfss	status,2,c
  2530  001DEA  D078               	goto	l4034
  2531                           
  2532                           ; BSR set to: 0
  2533                           ;CANlib.h: 666: {
  2534                           ;CANlib.h: 667: tamp = mask & 0x000000FF;
  2535  001DEC  501E               	movf	CANSetMask@mask,w,c
  2536  001DEE  0100               	movlb	0	; () banked
  2537  001DF0  6FA8               	movwf	CANSetMask@tamp& (0+255),b
  2538  001DF2  6BA9               	clrf	(CANSetMask@tamp+1)& (0+255),b
  2539  001DF4  6BAA               	clrf	(CANSetMask@tamp+2)& (0+255),b
  2540  001DF6  6BAB               	clrf	(CANSetMask@tamp+3)& (0+255),b
  2541                           
  2542                           ; BSR set to: 0
  2543                           ;CANlib.h: 668: RXM0EIDL = (unsigned char) tamp;
  2544  001DF8  C0A8  FF1B         	movff	CANSetMask@tamp,3867	;volatile
  2545                           
  2546                           ; BSR set to: 0
  2547                           ;CANlib.h: 670: tamp = mask & 0x0000FF00;
  2548  001DFC  0E00               	movlw	0
  2549  001DFE  141E               	andwf	CANSetMask@mask,w,c
  2550  001E00  0100               	movlb	0	; () banked
  2551  001E02  6FA8               	movwf	CANSetMask@tamp& (0+255),b
  2552  001E04  0EFF               	movlw	255
  2553  001E06  141F               	andwf	CANSetMask@mask+1,w,c
  2554  001E08  0100               	movlb	0	; () banked
  2555  001E0A  6FA9               	movwf	(CANSetMask@tamp+1)& (0+255),b
  2556  001E0C  0E00               	movlw	0
  2557  001E0E  1420               	andwf	CANSetMask@mask+2,w,c
  2558  001E10  0100               	movlb	0	; () banked
  2559  001E12  6FAA               	movwf	(CANSetMask@tamp+2)& (0+255),b
  2560  001E14  0E00               	movlw	0
  2561  001E16  1421               	andwf	CANSetMask@mask+3,w,c
  2562  001E18  0100               	movlb	0	; () banked
  2563  001E1A  6FAB               	movwf	(CANSetMask@tamp+3)& (0+255),b
  2564                           
  2565                           ; BSR set to: 0
  2566                           ;CANlib.h: 671: tamp = tamp >> 8;
  2567  001E1C  C0A8  F0A3         	movff	CANSetMask@tamp,??_CANSetMask
  2568  001E20  C0A9  F0A4         	movff	CANSetMask@tamp+1,??_CANSetMask+1
  2569  001E24  C0AA  F0A5         	movff	CANSetMask@tamp+2,??_CANSetMask+2
  2570  001E28  C0AB  F0A6         	movff	CANSetMask@tamp+3,??_CANSetMask+3
  2571  001E2C  C0A4  F0A3         	movff	??_CANSetMask+1,??_CANSetMask
  2572  001E30  C0A5  F0A4         	movff	??_CANSetMask+2,??_CANSetMask+1
  2573  001E34  C0A6  F0A5         	movff	??_CANSetMask+3,??_CANSetMask+2
  2574  001E38  0100               	movlb	0	; () banked
  2575  001E3A  6BA6               	clrf	(??_CANSetMask+3)& (0+255),b
  2576  001E3C  C0A3  F0A8         	movff	??_CANSetMask,CANSetMask@tamp
  2577  001E40  C0A4  F0A9         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  2578  001E44  C0A5  F0AA         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  2579  001E48  C0A6  F0AB         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  2580                           
  2581                           ; BSR set to: 0
  2582                           ;CANlib.h: 672: RXM0EIDH = (unsigned char) tamp;
  2583  001E4C  C0A8  FF1A         	movff	CANSetMask@tamp,3866	;volatile
  2584                           
  2585                           ; BSR set to: 0
  2586                           ;CANlib.h: 674: if (mask & 0x00010000)
  2587  001E50  A020               	btfss	CANSetMask@mask+2,0,c
  2588  001E52  D003               	goto	l434
  2589                           
  2590                           ; BSR set to: 0
  2591                           ;CANlib.h: 675: RXM0SIDLbits.EID16 = 0x01;
  2592  001E54  010F               	movlb	15	; () banked
  2593  001E56  8119               	bsf	25,0,b	;volatile
  2594  001E58  D002               	goto	l435
  2595  001E5A                     l434:
  2596                           
  2597                           ; BSR set to: 0
  2598                           ;CANlib.h: 676: else
  2599                           ;CANlib.h: 677: RXM0SIDLbits.EID16 = 0x00;
  2600  001E5A  010F               	movlb	15	; () banked
  2601  001E5C  9119               	bcf	25,0,b	;volatile
  2602  001E5E                     l435:
  2603                           
  2604                           ; BSR set to: 15
  2605                           ;CANlib.h: 679: if (mask & 0x00020000)
  2606  001E5E  A220               	btfss	CANSetMask@mask+2,1,c
  2607  001E60  D003               	goto	l436
  2608                           
  2609                           ; BSR set to: 15
  2610                           ;CANlib.h: 680: RXM0SIDLbits.EID17 = 0x01;
  2611  001E62  010F               	movlb	15	; () banked
  2612  001E64  8319               	bsf	25,1,b	;volatile
  2613  001E66  D002               	goto	l437
  2614  001E68                     l436:
  2615                           
  2616                           ; BSR set to: 15
  2617                           ;CANlib.h: 681: else
  2618                           ;CANlib.h: 682: RXM0SIDLbits.EID17 = 0x00;
  2619  001E68  010F               	movlb	15	; () banked
  2620  001E6A  9319               	bcf	25,1,b	;volatile
  2621  001E6C                     l437:
  2622                           
  2623                           ; BSR set to: 15
  2624                           ;CANlib.h: 684: if (mask & 0x00040000)
  2625  001E6C  A420               	btfss	CANSetMask@mask+2,2,c
  2626  001E6E  D003               	goto	l438
  2627                           
  2628                           ; BSR set to: 15
  2629                           ;CANlib.h: 685: RXM0SIDLbits.SID0 = 0x01;
  2630  001E70  010F               	movlb	15	; () banked
  2631  001E72  8B19               	bsf	25,5,b	;volatile
  2632  001E74  D002               	goto	l439
  2633  001E76                     l438:
  2634                           
  2635                           ; BSR set to: 15
  2636                           ;CANlib.h: 686: else
  2637                           ;CANlib.h: 687: RXM0SIDLbits.SID0 = 0x00;
  2638  001E76  010F               	movlb	15	; () banked
  2639  001E78  9B19               	bcf	25,5,b	;volatile
  2640  001E7A                     l439:
  2641                           
  2642                           ; BSR set to: 15
  2643                           ;CANlib.h: 689: if (mask & 0x00080000)
  2644  001E7A  A620               	btfss	CANSetMask@mask+2,3,c
  2645  001E7C  D003               	goto	l440
  2646                           
  2647                           ; BSR set to: 15
  2648                           ;CANlib.h: 690: RXM0SIDLbits.SID1 = 0x01;
  2649  001E7E  010F               	movlb	15	; () banked
  2650  001E80  8D19               	bsf	25,6,b	;volatile
  2651  001E82  D002               	goto	l441
  2652  001E84                     l440:
  2653                           
  2654                           ; BSR set to: 15
  2655                           ;CANlib.h: 691: else
  2656                           ;CANlib.h: 692: RXM0SIDLbits.SID1 = 0x00;
  2657  001E84  010F               	movlb	15	; () banked
  2658  001E86  9D19               	bcf	25,6,b	;volatile
  2659  001E88                     l441:
  2660                           
  2661                           ; BSR set to: 15
  2662                           ;CANlib.h: 694: if (mask & 0x00100000)
  2663  001E88  A820               	btfss	CANSetMask@mask+2,4,c
  2664  001E8A  D003               	goto	l442
  2665                           
  2666                           ; BSR set to: 15
  2667                           ;CANlib.h: 695: RXM0SIDLbits.SID2 = 0x01 ;
  2668  001E8C  010F               	movlb	15	; () banked
  2669  001E8E  8F19               	bsf	25,7,b	;volatile
  2670  001E90  D002               	goto	l4028
  2671  001E92                     l442:
  2672                           
  2673                           ; BSR set to: 15
  2674                           ;CANlib.h: 696: else
  2675                           ;CANlib.h: 697: RXM0SIDLbits.SID2 = 0x00 ;
  2676  001E92  010F               	movlb	15	; () banked
  2677  001E94  9F19               	bcf	25,7,b	;volatile
  2678  001E96                     l4028:
  2679                           
  2680                           ; BSR set to: 15
  2681                           ;CANlib.h: 699: tamp = (mask >> 21);
  2682  001E96  C01E  F0A3         	movff	CANSetMask@mask,??_CANSetMask
  2683  001E9A  C01F  F0A4         	movff	CANSetMask@mask+1,??_CANSetMask+1
  2684  001E9E  C020  F0A5         	movff	CANSetMask@mask+2,??_CANSetMask+2
  2685  001EA2  C021  F0A6         	movff	CANSetMask@mask+3,??_CANSetMask+3
  2686  001EA6  0E16               	movlw	22
  2687  001EA8  D006               	goto	u4870
  2688  001EAA                     u4875:
  2689  001EAA  0100               	movlb	0	; () banked
  2690  001EAC  90D8               	bcf	status,0,c
  2691  001EAE  33A6               	rrcf	(??_CANSetMask+3)& (0+255),f,b
  2692  001EB0  33A5               	rrcf	(??_CANSetMask+2)& (0+255),f,b
  2693  001EB2  33A4               	rrcf	(??_CANSetMask+1)& (0+255),f,b
  2694  001EB4  33A3               	rrcf	??_CANSetMask& (0+255),f,b
  2695  001EB6                     u4870:
  2696  001EB6  2EE8               	decfsz	wreg,f,c
  2697  001EB8  D7F8               	goto	u4875
  2698  001EBA  C0A3  F0A8         	movff	??_CANSetMask,CANSetMask@tamp
  2699  001EBE  C0A4  F0A9         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  2700  001EC2  C0A5  F0AA         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  2701  001EC6  C0A6  F0AB         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  2702                           
  2703                           ; BSR set to: 0
  2704                           ;CANlib.h: 700: tamp = tamp & 0x000000FF;
  2705  001ECA  0100               	movlb	0	; () banked
  2706  001ECC  51A8               	movf	CANSetMask@tamp& (0+255),w,b
  2707  001ECE  0100               	movlb	0	; () banked
  2708  001ED0  6FA8               	movwf	CANSetMask@tamp& (0+255),b
  2709  001ED2  6BA9               	clrf	(CANSetMask@tamp+1)& (0+255),b
  2710  001ED4  6BAA               	clrf	(CANSetMask@tamp+2)& (0+255),b
  2711  001ED6  6BAB               	clrf	(CANSetMask@tamp+3)& (0+255),b
  2712                           
  2713                           ; BSR set to: 0
  2714                           ;CANlib.h: 701: RXM0SIDH = (unsigned char) tamp;
  2715  001ED8  C0A8  FF18         	movff	CANSetMask@tamp,3864	;volatile
  2716  001EDC                     l4034:
  2717                           
  2718                           ; BSR set to: 0
  2719                           ;CANlib.h: 702: }
  2720                           ;CANlib.h: 704: if ((numBuffer ==CAN_MASK_B2) && (type == CAN_CONFIG_XTD_MSG))
  2721  001EDC  0E02               	movlw	2
  2722  001EDE  0100               	movlb	0	; () banked
  2723  001EE0  19A7               	xorwf	CANSetMask@numBuffer& (0+255),w,b
  2724  001EE2  A4D8               	btfss	status,2,c
  2725  001EE4  0012               	return	
  2726                           
  2727                           ; BSR set to: 0
  2728  001EE6  0EF7               	movlw	247
  2729  001EE8  1822               	xorwf	CANSetMask@type,w,c
  2730  001EEA  A4D8               	btfss	status,2,c
  2731  001EEC  0012               	return	
  2732                           
  2733                           ; BSR set to: 0
  2734                           ;CANlib.h: 705: {
  2735                           ;CANlib.h: 706: tamp = mask & 0x000000FF;
  2736  001EEE  501E               	movf	CANSetMask@mask,w,c
  2737  001EF0  0100               	movlb	0	; () banked
  2738  001EF2  6FA8               	movwf	CANSetMask@tamp& (0+255),b
  2739  001EF4  6BA9               	clrf	(CANSetMask@tamp+1)& (0+255),b
  2740  001EF6  6BAA               	clrf	(CANSetMask@tamp+2)& (0+255),b
  2741  001EF8  6BAB               	clrf	(CANSetMask@tamp+3)& (0+255),b
  2742                           
  2743                           ; BSR set to: 0
  2744                           ;CANlib.h: 707: RXM1EIDL = (unsigned char) tamp;
  2745  001EFA  C0A8  FF1F         	movff	CANSetMask@tamp,3871	;volatile
  2746                           
  2747                           ; BSR set to: 0
  2748                           ;CANlib.h: 709: tamp = mask & 0x0000FF00;
  2749  001EFE  0E00               	movlw	0
  2750  001F00  141E               	andwf	CANSetMask@mask,w,c
  2751  001F02  0100               	movlb	0	; () banked
  2752  001F04  6FA8               	movwf	CANSetMask@tamp& (0+255),b
  2753  001F06  0EFF               	movlw	255
  2754  001F08  141F               	andwf	CANSetMask@mask+1,w,c
  2755  001F0A  0100               	movlb	0	; () banked
  2756  001F0C  6FA9               	movwf	(CANSetMask@tamp+1)& (0+255),b
  2757  001F0E  0E00               	movlw	0
  2758  001F10  1420               	andwf	CANSetMask@mask+2,w,c
  2759  001F12  0100               	movlb	0	; () banked
  2760  001F14  6FAA               	movwf	(CANSetMask@tamp+2)& (0+255),b
  2761  001F16  0E00               	movlw	0
  2762  001F18  1421               	andwf	CANSetMask@mask+3,w,c
  2763  001F1A  0100               	movlb	0	; () banked
  2764  001F1C  6FAB               	movwf	(CANSetMask@tamp+3)& (0+255),b
  2765                           
  2766                           ; BSR set to: 0
  2767                           ;CANlib.h: 710: tamp = tamp >> 8;
  2768  001F1E  C0A8  F0A3         	movff	CANSetMask@tamp,??_CANSetMask
  2769  001F22  C0A9  F0A4         	movff	CANSetMask@tamp+1,??_CANSetMask+1
  2770  001F26  C0AA  F0A5         	movff	CANSetMask@tamp+2,??_CANSetMask+2
  2771  001F2A  C0AB  F0A6         	movff	CANSetMask@tamp+3,??_CANSetMask+3
  2772  001F2E  C0A4  F0A3         	movff	??_CANSetMask+1,??_CANSetMask
  2773  001F32  C0A5  F0A4         	movff	??_CANSetMask+2,??_CANSetMask+1
  2774  001F36  C0A6  F0A5         	movff	??_CANSetMask+3,??_CANSetMask+2
  2775  001F3A  0100               	movlb	0	; () banked
  2776  001F3C  6BA6               	clrf	(??_CANSetMask+3)& (0+255),b
  2777  001F3E  C0A3  F0A8         	movff	??_CANSetMask,CANSetMask@tamp
  2778  001F42  C0A4  F0A9         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  2779  001F46  C0A5  F0AA         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  2780  001F4A  C0A6  F0AB         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  2781                           
  2782                           ; BSR set to: 0
  2783                           ;CANlib.h: 711: RXM1EIDH = (unsigned char) tamp;
  2784  001F4E  C0A8  FF1E         	movff	CANSetMask@tamp,3870	;volatile
  2785                           
  2786                           ; BSR set to: 0
  2787                           ;CANlib.h: 713: if (mask & 0x00010000)
  2788  001F52  A020               	btfss	CANSetMask@mask+2,0,c
  2789  001F54  D003               	goto	l445
  2790                           
  2791                           ; BSR set to: 0
  2792                           ;CANlib.h: 714: RXM1SIDLbits.EID16 = 0x01;
  2793  001F56  010F               	movlb	15	; () banked
  2794  001F58  811D               	bsf	29,0,b	;volatile
  2795  001F5A  D002               	goto	l446
  2796  001F5C                     l445:
  2797                           
  2798                           ; BSR set to: 0
  2799                           ;CANlib.h: 715: else
  2800                           ;CANlib.h: 716: RXM1SIDLbits.EID16 = 0x00;
  2801  001F5C  010F               	movlb	15	; () banked
  2802  001F5E  911D               	bcf	29,0,b	;volatile
  2803  001F60                     l446:
  2804                           
  2805                           ; BSR set to: 15
  2806                           ;CANlib.h: 718: if (mask & 0x00020000)
  2807  001F60  A220               	btfss	CANSetMask@mask+2,1,c
  2808  001F62  D003               	goto	l447
  2809                           
  2810                           ; BSR set to: 15
  2811                           ;CANlib.h: 719: RXM1SIDLbits.EID17 = 0x01;
  2812  001F64  010F               	movlb	15	; () banked
  2813  001F66  831D               	bsf	29,1,b	;volatile
  2814  001F68  D002               	goto	l448
  2815  001F6A                     l447:
  2816                           
  2817                           ; BSR set to: 15
  2818                           ;CANlib.h: 720: else
  2819                           ;CANlib.h: 721: RXM1SIDLbits.EID17 = 0x00;
  2820  001F6A  010F               	movlb	15	; () banked
  2821  001F6C  931D               	bcf	29,1,b	;volatile
  2822  001F6E                     l448:
  2823                           
  2824                           ; BSR set to: 15
  2825                           ;CANlib.h: 723: if (mask & 0x00040000)
  2826  001F6E  A420               	btfss	CANSetMask@mask+2,2,c
  2827  001F70  D003               	goto	l449
  2828                           
  2829                           ; BSR set to: 15
  2830                           ;CANlib.h: 724: RXM1SIDLbits.SID0 = 0x01;
  2831  001F72  010F               	movlb	15	; () banked
  2832  001F74  8B1D               	bsf	29,5,b	;volatile
  2833  001F76  D002               	goto	l450
  2834  001F78                     l449:
  2835                           
  2836                           ; BSR set to: 15
  2837                           ;CANlib.h: 725: else
  2838                           ;CANlib.h: 726: RXM1SIDLbits.SID0 = 0x00;
  2839  001F78  010F               	movlb	15	; () banked
  2840  001F7A  9B1D               	bcf	29,5,b	;volatile
  2841  001F7C                     l450:
  2842                           
  2843                           ; BSR set to: 15
  2844                           ;CANlib.h: 728: if (mask & 0x00080000)
  2845  001F7C  A620               	btfss	CANSetMask@mask+2,3,c
  2846  001F7E  D003               	goto	l451
  2847                           
  2848                           ; BSR set to: 15
  2849                           ;CANlib.h: 729: RXM1SIDLbits.SID1 = 0x01;
  2850  001F80  010F               	movlb	15	; () banked
  2851  001F82  8D1D               	bsf	29,6,b	;volatile
  2852  001F84  D002               	goto	l452
  2853  001F86                     l451:
  2854                           
  2855                           ; BSR set to: 15
  2856                           ;CANlib.h: 730: else
  2857                           ;CANlib.h: 731: RXM1SIDLbits.SID1 = 0x00;
  2858  001F86  010F               	movlb	15	; () banked
  2859  001F88  9D1D               	bcf	29,6,b	;volatile
  2860  001F8A                     l452:
  2861                           
  2862                           ; BSR set to: 15
  2863                           ;CANlib.h: 733: if (mask & 0x00100000)
  2864  001F8A  A820               	btfss	CANSetMask@mask+2,4,c
  2865  001F8C  D003               	goto	l453
  2866                           
  2867                           ; BSR set to: 15
  2868                           ;CANlib.h: 734: RXM1SIDLbits.SID2 = 0x01 ;
  2869  001F8E  010F               	movlb	15	; () banked
  2870  001F90  8F1D               	bsf	29,7,b	;volatile
  2871  001F92  D002               	goto	l4060
  2872  001F94                     l453:
  2873                           
  2874                           ; BSR set to: 15
  2875                           ;CANlib.h: 735: else
  2876                           ;CANlib.h: 736: RXM1SIDLbits.SID2 = 0x00 ;
  2877  001F94  010F               	movlb	15	; () banked
  2878  001F96  9F1D               	bcf	29,7,b	;volatile
  2879  001F98                     l4060:
  2880                           
  2881                           ; BSR set to: 15
  2882                           ;CANlib.h: 738: tamp = (mask >> 21);
  2883  001F98  C01E  F0A3         	movff	CANSetMask@mask,??_CANSetMask
  2884  001F9C  C01F  F0A4         	movff	CANSetMask@mask+1,??_CANSetMask+1
  2885  001FA0  C020  F0A5         	movff	CANSetMask@mask+2,??_CANSetMask+2
  2886  001FA4  C021  F0A6         	movff	CANSetMask@mask+3,??_CANSetMask+3
  2887  001FA8  0E16               	movlw	22
  2888  001FAA  D006               	goto	u4950
  2889  001FAC                     u4955:
  2890  001FAC  0100               	movlb	0	; () banked
  2891  001FAE  90D8               	bcf	status,0,c
  2892  001FB0  33A6               	rrcf	(??_CANSetMask+3)& (0+255),f,b
  2893  001FB2  33A5               	rrcf	(??_CANSetMask+2)& (0+255),f,b
  2894  001FB4  33A4               	rrcf	(??_CANSetMask+1)& (0+255),f,b
  2895  001FB6  33A3               	rrcf	??_CANSetMask& (0+255),f,b
  2896  001FB8                     u4950:
  2897  001FB8  2EE8               	decfsz	wreg,f,c
  2898  001FBA  D7F8               	goto	u4955
  2899  001FBC  C0A3  F0A8         	movff	??_CANSetMask,CANSetMask@tamp
  2900  001FC0  C0A4  F0A9         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  2901  001FC4  C0A5  F0AA         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  2902  001FC8  C0A6  F0AB         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  2903                           
  2904                           ; BSR set to: 0
  2905                           ;CANlib.h: 739: tamp = tamp & 0x000000FF;
  2906  001FCC  0100               	movlb	0	; () banked
  2907  001FCE  51A8               	movf	CANSetMask@tamp& (0+255),w,b
  2908  001FD0  0100               	movlb	0	; () banked
  2909  001FD2  6FA8               	movwf	CANSetMask@tamp& (0+255),b
  2910  001FD4  6BA9               	clrf	(CANSetMask@tamp+1)& (0+255),b
  2911  001FD6  6BAA               	clrf	(CANSetMask@tamp+2)& (0+255),b
  2912  001FD8  6BAB               	clrf	(CANSetMask@tamp+3)& (0+255),b
  2913                           
  2914                           ; BSR set to: 0
  2915                           ;CANlib.h: 740: RXM1SIDH = (unsigned char) tamp;
  2916  001FDA  C0A8  FF1C         	movff	CANSetMask@tamp,3868	;volatile
  2917  001FDE  0012               	return	
  2918  001FE0                     __end_of_CANSetMask:
  2919                           	opt stack 0
  2920                           tblptru	equ	0xFF8
  2921                           tblptrh	equ	0xFF7
  2922                           tblptrl	equ	0xFF6
  2923                           tablat	equ	0xFF5
  2924                           prodh	equ	0xFF4
  2925                           prodl	equ	0xFF3
  2926                           intcon	equ	0xFF2
  2927                           intcon2	equ	0xFF1
  2928                           postinc0	equ	0xFEE
  2929                           wreg	equ	0xFE8
  2930                           indf1	equ	0xFE7
  2931                           fsr1h	equ	0xFE2
  2932                           fsr1l	equ	0xFE1
  2933                           indf2	equ	0xFDF
  2934                           fsr2h	equ	0xFDA
  2935                           fsr2l	equ	0xFD9
  2936                           status	equ	0xFD8
  2937                           
  2938 ;; *************** function _CANSetFilter *****************
  2939 ;; Defined at:
  2940 ;;		line 748 in file "CANlib.h"
  2941 ;; Parameters:    Size  Location     Type
  2942 ;;  numBuffer       1    wreg     enum E16881
  2943 ;;  filter          4   29[COMRAM] unsigned long 
  2944 ;;  type            1   33[COMRAM] enum E16844
  2945 ;; Auto vars:     Size  Location     Type
  2946 ;;  numBuffer       1    4[BANK0 ] enum E16881
  2947 ;;  tamp            4    5[BANK0 ] unsigned long 
  2948 ;; Return value:  Size  Location     Type
  2949 ;;		None               void
  2950 ;; Registers used:
  2951 ;;		wreg, status,2, status,0
  2952 ;; Tracked objects:
  2953 ;;		On entry : 0/0
  2954 ;;		On exit  : 0/0
  2955 ;;		Unchanged: 0/0
  2956 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2957 ;;      Params:         5       0       0       0
  2958 ;;      Locals:         0       5       0       0
  2959 ;;      Temps:          0       4       0       0
  2960 ;;      Totals:         5       9       0       0
  2961 ;;Total ram usage:       14 bytes
  2962 ;; Hardware stack levels used:    1
  2963 ;; Hardware stack levels required when called:    2
  2964 ;; This function calls:
  2965 ;;		Nothing
  2966 ;; This function is called by:
  2967 ;;		_CANInitialize
  2968 ;; This function uses a non-reentrant model
  2969 ;;
  2970                           
  2971                           	psect	text6
  2972  0001AE                     __ptext6:
  2973                           	opt stack 0
  2974  0001AE                     _CANSetFilter:
  2975                           	opt stack 26
  2976                           
  2977                           ; BSR set to: 0
  2978                           ;incstack = 0
  2979                           ;CANSetFilter@numBuffer stored from wreg
  2980  0001AE  0100               	movlb	0	; () banked
  2981  0001B0  6FA7               	movwf	CANSetFilter@numBuffer& (0+255),b
  2982                           
  2983                           ;CANlib.h: 750: unsigned long tamp;
  2984                           ;CANlib.h: 752: if ((numBuffer ==CAN_FILTER_B1_F1) && (type == CAN_CONFIG_STD_MSG))
  2985  0001B2  0100               	movlb	0	; () banked
  2986  0001B4  51A7               	movf	CANSetFilter@numBuffer& (0+255),w,b
  2987  0001B6  0100               	movlb	0	; () banked
  2988  0001B8  A4D8               	btfss	status,2,c
  2989  0001BA  D053               	goto	l4084
  2990                           
  2991                           ; BSR set to: 0
  2992  0001BC  2822               	incf	CANSetFilter@type,w,c
  2993  0001BE  A4D8               	btfss	status,2,c
  2994  0001C0  D050               	goto	l4084
  2995                           
  2996                           ; BSR set to: 0
  2997                           ;CANlib.h: 753: {
  2998                           ;CANlib.h: 754: RXF0SIDLbits.EXIDEN = 0x00;
  2999  0001C2  010F               	movlb	15	; () banked
  3000  0001C4  9701               	bcf	1,3,b	;volatile
  3001                           
  3002                           ; BSR set to: 15
  3003                           ;CANlib.h: 756: tamp = (filter >> 3);
  3004  0001C6  C01E  F0A3         	movff	CANSetFilter@filter,??_CANSetFilter
  3005  0001CA  C01F  F0A4         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  3006  0001CE  C020  F0A5         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  3007  0001D2  C021  F0A6         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  3008  0001D6  0E04               	movlw	4
  3009  0001D8  D006               	goto	u4980
  3010  0001DA                     u4985:
  3011  0001DA  0100               	movlb	0	; () banked
  3012  0001DC  90D8               	bcf	status,0,c
  3013  0001DE  33A6               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  3014  0001E0  33A5               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  3015  0001E2  33A4               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  3016  0001E4  33A3               	rrcf	??_CANSetFilter& (0+255),f,b
  3017  0001E6                     u4980:
  3018  0001E6  2EE8               	decfsz	wreg,f,c
  3019  0001E8  D7F8               	goto	u4985
  3020  0001EA  C0A3  F0A8         	movff	??_CANSetFilter,CANSetFilter@tamp
  3021  0001EE  C0A4  F0A9         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  3022  0001F2  C0A5  F0AA         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  3023  0001F6  C0A6  F0AB         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  3024                           
  3025                           ; BSR set to: 0
  3026                           ;CANlib.h: 757: tamp = tamp & 0x000000FF;
  3027  0001FA  0100               	movlb	0	; () banked
  3028  0001FC  51A8               	movf	CANSetFilter@tamp& (0+255),w,b
  3029  0001FE  0100               	movlb	0	; () banked
  3030  000200  6FA8               	movwf	CANSetFilter@tamp& (0+255),b
  3031  000202  6BA9               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  3032  000204  6BAA               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  3033  000206  6BAB               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  3034                           
  3035                           ; BSR set to: 0
  3036                           ;CANlib.h: 758: RXF0SIDH = (unsigned char) tamp;
  3037  000208  C0A8  FF00         	movff	CANSetFilter@tamp,3840	;volatile
  3038                           
  3039                           ; BSR set to: 0
  3040                           ;CANlib.h: 760: tamp = filter & 0x00000007;
  3041  00020C  0E07               	movlw	7
  3042  00020E  141E               	andwf	CANSetFilter@filter,w,c
  3043  000210  0100               	movlb	0	; () banked
  3044  000212  6FA8               	movwf	CANSetFilter@tamp& (0+255),b
  3045  000214  0E00               	movlw	0
  3046  000216  141F               	andwf	CANSetFilter@filter+1,w,c
  3047  000218  0100               	movlb	0	; () banked
  3048  00021A  6FA9               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  3049  00021C  0E00               	movlw	0
  3050  00021E  1420               	andwf	CANSetFilter@filter+2,w,c
  3051  000220  0100               	movlb	0	; () banked
  3052  000222  6FAA               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  3053  000224  0E00               	movlw	0
  3054  000226  1421               	andwf	CANSetFilter@filter+3,w,c
  3055  000228  0100               	movlb	0	; () banked
  3056  00022A  6FAB               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  3057                           
  3058                           ; BSR set to: 0
  3059                           ;CANlib.h: 761: tamp = tamp << 5;
  3060  00022C  C0A8  F0A3         	movff	CANSetFilter@tamp,??_CANSetFilter
  3061  000230  C0A9  F0A4         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  3062  000234  C0AA  F0A5         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  3063  000238  C0AB  F0A6         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  3064  00023C  0E05               	movlw	5
  3065  00023E                     u4995:
  3066  00023E  90D8               	bcf	status,0,c
  3067  000240  0100               	movlb	0	; () banked
  3068  000242  37A3               	rlcf	??_CANSetFilter& (0+255),f,b
  3069  000244  37A4               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  3070  000246  37A5               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  3071  000248  37A6               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  3072  00024A  2EE8               	decfsz	wreg,f,c
  3073  00024C  D7F8               	goto	u4995
  3074  00024E  C0A3  F0A8         	movff	??_CANSetFilter,CANSetFilter@tamp
  3075  000252  C0A4  F0A9         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  3076  000256  C0A5  F0AA         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  3077  00025A  C0A6  F0AB         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  3078                           
  3079                           ; BSR set to: 0
  3080                           ;CANlib.h: 762: RXF0SIDL = (unsigned char) tamp;
  3081  00025E  C0A8  FF01         	movff	CANSetFilter@tamp,3841	;volatile
  3082  000262                     l4084:
  3083                           
  3084                           ; BSR set to: 0
  3085                           ;CANlib.h: 763: }
  3086                           ;CANlib.h: 765: if ((numBuffer ==CAN_FILTER_B1_F2) && (type == CAN_CONFIG_STD_MSG))
  3087  000262  0100               	movlb	0	; () banked
  3088  000264  05A7               	decf	CANSetFilter@numBuffer& (0+255),w,b
  3089  000266  A4D8               	btfss	status,2,c
  3090  000268  D053               	goto	l4102
  3091                           
  3092                           ; BSR set to: 0
  3093  00026A  2822               	incf	CANSetFilter@type,w,c
  3094  00026C  A4D8               	btfss	status,2,c
  3095  00026E  D050               	goto	l4102
  3096                           
  3097                           ; BSR set to: 0
  3098                           ;CANlib.h: 766: {
  3099                           ;CANlib.h: 767: RXF1SIDLbits.EXIDEN = 0x00;
  3100  000270  010F               	movlb	15	; () banked
  3101  000272  9705               	bcf	5,3,b	;volatile
  3102                           
  3103                           ; BSR set to: 15
  3104                           ;CANlib.h: 769: tamp = (filter >> 3);
  3105  000274  C01E  F0A3         	movff	CANSetFilter@filter,??_CANSetFilter
  3106  000278  C01F  F0A4         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  3107  00027C  C020  F0A5         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  3108  000280  C021  F0A6         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  3109  000284  0E04               	movlw	4
  3110  000286  D006               	goto	u5020
  3111  000288                     u5025:
  3112  000288  0100               	movlb	0	; () banked
  3113  00028A  90D8               	bcf	status,0,c
  3114  00028C  33A6               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  3115  00028E  33A5               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  3116  000290  33A4               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  3117  000292  33A3               	rrcf	??_CANSetFilter& (0+255),f,b
  3118  000294                     u5020:
  3119  000294  2EE8               	decfsz	wreg,f,c
  3120  000296  D7F8               	goto	u5025
  3121  000298  C0A3  F0A8         	movff	??_CANSetFilter,CANSetFilter@tamp
  3122  00029C  C0A4  F0A9         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  3123  0002A0  C0A5  F0AA         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  3124  0002A4  C0A6  F0AB         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  3125                           
  3126                           ; BSR set to: 0
  3127                           ;CANlib.h: 770: tamp = tamp & 0x000000FF;
  3128  0002A8  0100               	movlb	0	; () banked
  3129  0002AA  51A8               	movf	CANSetFilter@tamp& (0+255),w,b
  3130  0002AC  0100               	movlb	0	; () banked
  3131  0002AE  6FA8               	movwf	CANSetFilter@tamp& (0+255),b
  3132  0002B0  6BA9               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  3133  0002B2  6BAA               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  3134  0002B4  6BAB               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  3135                           
  3136                           ; BSR set to: 0
  3137                           ;CANlib.h: 771: RXF1SIDH = (unsigned char) tamp;
  3138  0002B6  C0A8  FF04         	movff	CANSetFilter@tamp,3844	;volatile
  3139                           
  3140                           ; BSR set to: 0
  3141                           ;CANlib.h: 773: tamp = filter & 0x00000007;
  3142  0002BA  0E07               	movlw	7
  3143  0002BC  141E               	andwf	CANSetFilter@filter,w,c
  3144  0002BE  0100               	movlb	0	; () banked
  3145  0002C0  6FA8               	movwf	CANSetFilter@tamp& (0+255),b
  3146  0002C2  0E00               	movlw	0
  3147  0002C4  141F               	andwf	CANSetFilter@filter+1,w,c
  3148  0002C6  0100               	movlb	0	; () banked
  3149  0002C8  6FA9               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  3150  0002CA  0E00               	movlw	0
  3151  0002CC  1420               	andwf	CANSetFilter@filter+2,w,c
  3152  0002CE  0100               	movlb	0	; () banked
  3153  0002D0  6FAA               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  3154  0002D2  0E00               	movlw	0
  3155  0002D4  1421               	andwf	CANSetFilter@filter+3,w,c
  3156  0002D6  0100               	movlb	0	; () banked
  3157  0002D8  6FAB               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  3158                           
  3159                           ; BSR set to: 0
  3160                           ;CANlib.h: 774: tamp = tamp << 5;
  3161  0002DA  C0A8  F0A3         	movff	CANSetFilter@tamp,??_CANSetFilter
  3162  0002DE  C0A9  F0A4         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  3163  0002E2  C0AA  F0A5         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  3164  0002E6  C0AB  F0A6         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  3165  0002EA  0E05               	movlw	5
  3166  0002EC                     u5035:
  3167  0002EC  90D8               	bcf	status,0,c
  3168  0002EE  0100               	movlb	0	; () banked
  3169  0002F0  37A3               	rlcf	??_CANSetFilter& (0+255),f,b
  3170  0002F2  37A4               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  3171  0002F4  37A5               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  3172  0002F6  37A6               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  3173  0002F8  2EE8               	decfsz	wreg,f,c
  3174  0002FA  D7F8               	goto	u5035
  3175  0002FC  C0A3  F0A8         	movff	??_CANSetFilter,CANSetFilter@tamp
  3176  000300  C0A4  F0A9         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  3177  000304  C0A5  F0AA         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  3178  000308  C0A6  F0AB         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  3179                           
  3180                           ; BSR set to: 0
  3181                           ;CANlib.h: 775: RXF1SIDL = (unsigned char) tamp;
  3182  00030C  C0A8  FF05         	movff	CANSetFilter@tamp,3845	;volatile
  3183  000310                     l4102:
  3184                           
  3185                           ; BSR set to: 0
  3186                           ;CANlib.h: 776: }
  3187                           ;CANlib.h: 778: if ((numBuffer ==CAN_FILTER_B2_F1) && (type == CAN_CONFIG_STD_MSG))
  3188  000310  0E02               	movlw	2
  3189  000312  0100               	movlb	0	; () banked
  3190  000314  19A7               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  3191  000316  A4D8               	btfss	status,2,c
  3192  000318  D053               	goto	l4120
  3193                           
  3194                           ; BSR set to: 0
  3195  00031A  2822               	incf	CANSetFilter@type,w,c
  3196  00031C  A4D8               	btfss	status,2,c
  3197  00031E  D050               	goto	l4120
  3198                           
  3199                           ; BSR set to: 0
  3200                           ;CANlib.h: 779: {
  3201                           ;CANlib.h: 780: RXF2SIDLbits.EXIDEN = 0x00;
  3202  000320  010F               	movlb	15	; () banked
  3203  000322  9709               	bcf	9,3,b	;volatile
  3204                           
  3205                           ; BSR set to: 15
  3206                           ;CANlib.h: 782: tamp = (filter >> 3);
  3207  000324  C01E  F0A3         	movff	CANSetFilter@filter,??_CANSetFilter
  3208  000328  C01F  F0A4         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  3209  00032C  C020  F0A5         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  3210  000330  C021  F0A6         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  3211  000334  0E04               	movlw	4
  3212  000336  D006               	goto	u5060
  3213  000338                     u5065:
  3214  000338  0100               	movlb	0	; () banked
  3215  00033A  90D8               	bcf	status,0,c
  3216  00033C  33A6               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  3217  00033E  33A5               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  3218  000340  33A4               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  3219  000342  33A3               	rrcf	??_CANSetFilter& (0+255),f,b
  3220  000344                     u5060:
  3221  000344  2EE8               	decfsz	wreg,f,c
  3222  000346  D7F8               	goto	u5065
  3223  000348  C0A3  F0A8         	movff	??_CANSetFilter,CANSetFilter@tamp
  3224  00034C  C0A4  F0A9         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  3225  000350  C0A5  F0AA         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  3226  000354  C0A6  F0AB         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  3227                           
  3228                           ; BSR set to: 0
  3229                           ;CANlib.h: 783: tamp = tamp & 0x000000FF;
  3230  000358  0100               	movlb	0	; () banked
  3231  00035A  51A8               	movf	CANSetFilter@tamp& (0+255),w,b
  3232  00035C  0100               	movlb	0	; () banked
  3233  00035E  6FA8               	movwf	CANSetFilter@tamp& (0+255),b
  3234  000360  6BA9               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  3235  000362  6BAA               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  3236  000364  6BAB               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  3237                           
  3238                           ; BSR set to: 0
  3239                           ;CANlib.h: 784: RXF2SIDH = (unsigned char) tamp;
  3240  000366  C0A8  FF08         	movff	CANSetFilter@tamp,3848	;volatile
  3241                           
  3242                           ; BSR set to: 0
  3243                           ;CANlib.h: 786: tamp = filter & 0x00000007;
  3244  00036A  0E07               	movlw	7
  3245  00036C  141E               	andwf	CANSetFilter@filter,w,c
  3246  00036E  0100               	movlb	0	; () banked
  3247  000370  6FA8               	movwf	CANSetFilter@tamp& (0+255),b
  3248  000372  0E00               	movlw	0
  3249  000374  141F               	andwf	CANSetFilter@filter+1,w,c
  3250  000376  0100               	movlb	0	; () banked
  3251  000378  6FA9               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  3252  00037A  0E00               	movlw	0
  3253  00037C  1420               	andwf	CANSetFilter@filter+2,w,c
  3254  00037E  0100               	movlb	0	; () banked
  3255  000380  6FAA               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  3256  000382  0E00               	movlw	0
  3257  000384  1421               	andwf	CANSetFilter@filter+3,w,c
  3258  000386  0100               	movlb	0	; () banked
  3259  000388  6FAB               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  3260                           
  3261                           ; BSR set to: 0
  3262                           ;CANlib.h: 787: tamp = tamp << 5;
  3263  00038A  C0A8  F0A3         	movff	CANSetFilter@tamp,??_CANSetFilter
  3264  00038E  C0A9  F0A4         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  3265  000392  C0AA  F0A5         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  3266  000396  C0AB  F0A6         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  3267  00039A  0E05               	movlw	5
  3268  00039C                     u5075:
  3269  00039C  90D8               	bcf	status,0,c
  3270  00039E  0100               	movlb	0	; () banked
  3271  0003A0  37A3               	rlcf	??_CANSetFilter& (0+255),f,b
  3272  0003A2  37A4               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  3273  0003A4  37A5               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  3274  0003A6  37A6               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  3275  0003A8  2EE8               	decfsz	wreg,f,c
  3276  0003AA  D7F8               	goto	u5075
  3277  0003AC  C0A3  F0A8         	movff	??_CANSetFilter,CANSetFilter@tamp
  3278  0003B0  C0A4  F0A9         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  3279  0003B4  C0A5  F0AA         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  3280  0003B8  C0A6  F0AB         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  3281                           
  3282                           ; BSR set to: 0
  3283                           ;CANlib.h: 788: RXF2SIDL = (unsigned char) tamp;
  3284  0003BC  C0A8  FF09         	movff	CANSetFilter@tamp,3849	;volatile
  3285  0003C0                     l4120:
  3286                           
  3287                           ; BSR set to: 0
  3288                           ;CANlib.h: 789: }
  3289                           ;CANlib.h: 791: if ((numBuffer ==CAN_FILTER_B2_F2) && (type == CAN_CONFIG_STD_MSG))
  3290  0003C0  0E03               	movlw	3
  3291  0003C2  0100               	movlb	0	; () banked
  3292  0003C4  19A7               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  3293  0003C6  A4D8               	btfss	status,2,c
  3294  0003C8  D053               	goto	l4138
  3295                           
  3296                           ; BSR set to: 0
  3297  0003CA  2822               	incf	CANSetFilter@type,w,c
  3298  0003CC  A4D8               	btfss	status,2,c
  3299  0003CE  D050               	goto	l4138
  3300                           
  3301                           ; BSR set to: 0
  3302                           ;CANlib.h: 792: {
  3303                           ;CANlib.h: 793: RXF3SIDLbits.EXIDEN = 0x00;
  3304  0003D0  010F               	movlb	15	; () banked
  3305  0003D2  970D               	bcf	13,3,b	;volatile
  3306                           
  3307                           ; BSR set to: 15
  3308                           ;CANlib.h: 795: tamp = (filter >> 3);
  3309  0003D4  C01E  F0A3         	movff	CANSetFilter@filter,??_CANSetFilter
  3310  0003D8  C01F  F0A4         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  3311  0003DC  C020  F0A5         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  3312  0003E0  C021  F0A6         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  3313  0003E4  0E04               	movlw	4
  3314  0003E6  D006               	goto	u5100
  3315  0003E8                     u5105:
  3316  0003E8  0100               	movlb	0	; () banked
  3317  0003EA  90D8               	bcf	status,0,c
  3318  0003EC  33A6               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  3319  0003EE  33A5               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  3320  0003F0  33A4               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  3321  0003F2  33A3               	rrcf	??_CANSetFilter& (0+255),f,b
  3322  0003F4                     u5100:
  3323  0003F4  2EE8               	decfsz	wreg,f,c
  3324  0003F6  D7F8               	goto	u5105
  3325  0003F8  C0A3  F0A8         	movff	??_CANSetFilter,CANSetFilter@tamp
  3326  0003FC  C0A4  F0A9         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  3327  000400  C0A5  F0AA         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  3328  000404  C0A6  F0AB         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  3329                           
  3330                           ; BSR set to: 0
  3331                           ;CANlib.h: 796: tamp = tamp & 0x000000FF;
  3332  000408  0100               	movlb	0	; () banked
  3333  00040A  51A8               	movf	CANSetFilter@tamp& (0+255),w,b
  3334  00040C  0100               	movlb	0	; () banked
  3335  00040E  6FA8               	movwf	CANSetFilter@tamp& (0+255),b
  3336  000410  6BA9               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  3337  000412  6BAA               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  3338  000414  6BAB               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  3339                           
  3340                           ; BSR set to: 0
  3341                           ;CANlib.h: 797: RXF3SIDH = (unsigned char) tamp;
  3342  000416  C0A8  FF0C         	movff	CANSetFilter@tamp,3852	;volatile
  3343                           
  3344                           ; BSR set to: 0
  3345                           ;CANlib.h: 799: tamp = filter & 0x00000007;
  3346  00041A  0E07               	movlw	7
  3347  00041C  141E               	andwf	CANSetFilter@filter,w,c
  3348  00041E  0100               	movlb	0	; () banked
  3349  000420  6FA8               	movwf	CANSetFilter@tamp& (0+255),b
  3350  000422  0E00               	movlw	0
  3351  000424  141F               	andwf	CANSetFilter@filter+1,w,c
  3352  000426  0100               	movlb	0	; () banked
  3353  000428  6FA9               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  3354  00042A  0E00               	movlw	0
  3355  00042C  1420               	andwf	CANSetFilter@filter+2,w,c
  3356  00042E  0100               	movlb	0	; () banked
  3357  000430  6FAA               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  3358  000432  0E00               	movlw	0
  3359  000434  1421               	andwf	CANSetFilter@filter+3,w,c
  3360  000436  0100               	movlb	0	; () banked
  3361  000438  6FAB               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  3362                           
  3363                           ; BSR set to: 0
  3364                           ;CANlib.h: 800: tamp = tamp << 5;
  3365  00043A  C0A8  F0A3         	movff	CANSetFilter@tamp,??_CANSetFilter
  3366  00043E  C0A9  F0A4         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  3367  000442  C0AA  F0A5         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  3368  000446  C0AB  F0A6         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  3369  00044A  0E05               	movlw	5
  3370  00044C                     u5115:
  3371  00044C  90D8               	bcf	status,0,c
  3372  00044E  0100               	movlb	0	; () banked
  3373  000450  37A3               	rlcf	??_CANSetFilter& (0+255),f,b
  3374  000452  37A4               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  3375  000454  37A5               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  3376  000456  37A6               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  3377  000458  2EE8               	decfsz	wreg,f,c
  3378  00045A  D7F8               	goto	u5115
  3379  00045C  C0A3  F0A8         	movff	??_CANSetFilter,CANSetFilter@tamp
  3380  000460  C0A4  F0A9         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  3381  000464  C0A5  F0AA         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  3382  000468  C0A6  F0AB         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  3383                           
  3384                           ; BSR set to: 0
  3385                           ;CANlib.h: 801: RXF3SIDL = (unsigned char) tamp;
  3386  00046C  C0A8  FF0D         	movff	CANSetFilter@tamp,3853	;volatile
  3387  000470                     l4138:
  3388                           
  3389                           ; BSR set to: 0
  3390                           ;CANlib.h: 802: }
  3391                           ;CANlib.h: 804: if ((numBuffer ==CAN_FILTER_B2_F3) && (type == CAN_CONFIG_STD_MSG))
  3392  000470  0E04               	movlw	4
  3393  000472  0100               	movlb	0	; () banked
  3394  000474  19A7               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  3395  000476  A4D8               	btfss	status,2,c
  3396  000478  D053               	goto	l4156
  3397                           
  3398                           ; BSR set to: 0
  3399  00047A  2822               	incf	CANSetFilter@type,w,c
  3400  00047C  A4D8               	btfss	status,2,c
  3401  00047E  D050               	goto	l4156
  3402                           
  3403                           ; BSR set to: 0
  3404                           ;CANlib.h: 805: {
  3405                           ;CANlib.h: 806: RXF4SIDLbits.EXIDEN = 0x00;
  3406  000480  010F               	movlb	15	; () banked
  3407  000482  9711               	bcf	17,3,b	;volatile
  3408                           
  3409                           ; BSR set to: 15
  3410                           ;CANlib.h: 808: tamp = (filter >> 3);
  3411  000484  C01E  F0A3         	movff	CANSetFilter@filter,??_CANSetFilter
  3412  000488  C01F  F0A4         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  3413  00048C  C020  F0A5         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  3414  000490  C021  F0A6         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  3415  000494  0E04               	movlw	4
  3416  000496  D006               	goto	u5140
  3417  000498                     u5145:
  3418  000498  0100               	movlb	0	; () banked
  3419  00049A  90D8               	bcf	status,0,c
  3420  00049C  33A6               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  3421  00049E  33A5               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  3422  0004A0  33A4               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  3423  0004A2  33A3               	rrcf	??_CANSetFilter& (0+255),f,b
  3424  0004A4                     u5140:
  3425  0004A4  2EE8               	decfsz	wreg,f,c
  3426  0004A6  D7F8               	goto	u5145
  3427  0004A8  C0A3  F0A8         	movff	??_CANSetFilter,CANSetFilter@tamp
  3428  0004AC  C0A4  F0A9         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  3429  0004B0  C0A5  F0AA         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  3430  0004B4  C0A6  F0AB         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  3431                           
  3432                           ; BSR set to: 0
  3433                           ;CANlib.h: 809: tamp = tamp & 0x000000FF;
  3434  0004B8  0100               	movlb	0	; () banked
  3435  0004BA  51A8               	movf	CANSetFilter@tamp& (0+255),w,b
  3436  0004BC  0100               	movlb	0	; () banked
  3437  0004BE  6FA8               	movwf	CANSetFilter@tamp& (0+255),b
  3438  0004C0  6BA9               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  3439  0004C2  6BAA               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  3440  0004C4  6BAB               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  3441                           
  3442                           ; BSR set to: 0
  3443                           ;CANlib.h: 810: RXF4SIDH = (unsigned char) tamp;
  3444  0004C6  C0A8  FF10         	movff	CANSetFilter@tamp,3856	;volatile
  3445                           
  3446                           ; BSR set to: 0
  3447                           ;CANlib.h: 812: tamp = filter & 0x00000007;
  3448  0004CA  0E07               	movlw	7
  3449  0004CC  141E               	andwf	CANSetFilter@filter,w,c
  3450  0004CE  0100               	movlb	0	; () banked
  3451  0004D0  6FA8               	movwf	CANSetFilter@tamp& (0+255),b
  3452  0004D2  0E00               	movlw	0
  3453  0004D4  141F               	andwf	CANSetFilter@filter+1,w,c
  3454  0004D6  0100               	movlb	0	; () banked
  3455  0004D8  6FA9               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  3456  0004DA  0E00               	movlw	0
  3457  0004DC  1420               	andwf	CANSetFilter@filter+2,w,c
  3458  0004DE  0100               	movlb	0	; () banked
  3459  0004E0  6FAA               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  3460  0004E2  0E00               	movlw	0
  3461  0004E4  1421               	andwf	CANSetFilter@filter+3,w,c
  3462  0004E6  0100               	movlb	0	; () banked
  3463  0004E8  6FAB               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  3464                           
  3465                           ; BSR set to: 0
  3466                           ;CANlib.h: 813: tamp = tamp << 5;
  3467  0004EA  C0A8  F0A3         	movff	CANSetFilter@tamp,??_CANSetFilter
  3468  0004EE  C0A9  F0A4         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  3469  0004F2  C0AA  F0A5         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  3470  0004F6  C0AB  F0A6         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  3471  0004FA  0E05               	movlw	5
  3472  0004FC                     u5155:
  3473  0004FC  90D8               	bcf	status,0,c
  3474  0004FE  0100               	movlb	0	; () banked
  3475  000500  37A3               	rlcf	??_CANSetFilter& (0+255),f,b
  3476  000502  37A4               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  3477  000504  37A5               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  3478  000506  37A6               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  3479  000508  2EE8               	decfsz	wreg,f,c
  3480  00050A  D7F8               	goto	u5155
  3481  00050C  C0A3  F0A8         	movff	??_CANSetFilter,CANSetFilter@tamp
  3482  000510  C0A4  F0A9         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  3483  000514  C0A5  F0AA         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  3484  000518  C0A6  F0AB         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  3485                           
  3486                           ; BSR set to: 0
  3487                           ;CANlib.h: 814: RXF4SIDL = (unsigned char) tamp;
  3488  00051C  C0A8  FF11         	movff	CANSetFilter@tamp,3857	;volatile
  3489  000520                     l4156:
  3490                           
  3491                           ; BSR set to: 0
  3492                           ;CANlib.h: 815: }
  3493                           ;CANlib.h: 817: if ((numBuffer ==CAN_FILTER_B2_F4) && (type == CAN_CONFIG_STD_MSG))
  3494  000520  0E05               	movlw	5
  3495  000522  0100               	movlb	0	; () banked
  3496  000524  19A7               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  3497  000526  A4D8               	btfss	status,2,c
  3498  000528  D053               	goto	l4174
  3499                           
  3500                           ; BSR set to: 0
  3501  00052A  2822               	incf	CANSetFilter@type,w,c
  3502  00052C  A4D8               	btfss	status,2,c
  3503  00052E  D050               	goto	l4174
  3504                           
  3505                           ; BSR set to: 0
  3506                           ;CANlib.h: 818: {
  3507                           ;CANlib.h: 819: RXF5SIDLbits.EXIDEN = 0x00;
  3508  000530  010F               	movlb	15	; () banked
  3509  000532  9715               	bcf	21,3,b	;volatile
  3510                           
  3511                           ; BSR set to: 15
  3512                           ;CANlib.h: 821: tamp = (filter >> 3);
  3513  000534  C01E  F0A3         	movff	CANSetFilter@filter,??_CANSetFilter
  3514  000538  C01F  F0A4         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  3515  00053C  C020  F0A5         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  3516  000540  C021  F0A6         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  3517  000544  0E04               	movlw	4
  3518  000546  D006               	goto	u5180
  3519  000548                     u5185:
  3520  000548  0100               	movlb	0	; () banked
  3521  00054A  90D8               	bcf	status,0,c
  3522  00054C  33A6               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  3523  00054E  33A5               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  3524  000550  33A4               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  3525  000552  33A3               	rrcf	??_CANSetFilter& (0+255),f,b
  3526  000554                     u5180:
  3527  000554  2EE8               	decfsz	wreg,f,c
  3528  000556  D7F8               	goto	u5185
  3529  000558  C0A3  F0A8         	movff	??_CANSetFilter,CANSetFilter@tamp
  3530  00055C  C0A4  F0A9         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  3531  000560  C0A5  F0AA         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  3532  000564  C0A6  F0AB         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  3533                           
  3534                           ; BSR set to: 0
  3535                           ;CANlib.h: 822: tamp = tamp & 0x000000FF;
  3536  000568  0100               	movlb	0	; () banked
  3537  00056A  51A8               	movf	CANSetFilter@tamp& (0+255),w,b
  3538  00056C  0100               	movlb	0	; () banked
  3539  00056E  6FA8               	movwf	CANSetFilter@tamp& (0+255),b
  3540  000570  6BA9               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  3541  000572  6BAA               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  3542  000574  6BAB               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  3543                           
  3544                           ; BSR set to: 0
  3545                           ;CANlib.h: 823: RXF5SIDH = (unsigned char) tamp;
  3546  000576  C0A8  FF14         	movff	CANSetFilter@tamp,3860	;volatile
  3547                           
  3548                           ; BSR set to: 0
  3549                           ;CANlib.h: 825: tamp = filter & 0x00000007;
  3550  00057A  0E07               	movlw	7
  3551  00057C  141E               	andwf	CANSetFilter@filter,w,c
  3552  00057E  0100               	movlb	0	; () banked
  3553  000580  6FA8               	movwf	CANSetFilter@tamp& (0+255),b
  3554  000582  0E00               	movlw	0
  3555  000584  141F               	andwf	CANSetFilter@filter+1,w,c
  3556  000586  0100               	movlb	0	; () banked
  3557  000588  6FA9               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  3558  00058A  0E00               	movlw	0
  3559  00058C  1420               	andwf	CANSetFilter@filter+2,w,c
  3560  00058E  0100               	movlb	0	; () banked
  3561  000590  6FAA               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  3562  000592  0E00               	movlw	0
  3563  000594  1421               	andwf	CANSetFilter@filter+3,w,c
  3564  000596  0100               	movlb	0	; () banked
  3565  000598  6FAB               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  3566                           
  3567                           ; BSR set to: 0
  3568                           ;CANlib.h: 826: tamp = tamp << 5;
  3569  00059A  C0A8  F0A3         	movff	CANSetFilter@tamp,??_CANSetFilter
  3570  00059E  C0A9  F0A4         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  3571  0005A2  C0AA  F0A5         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  3572  0005A6  C0AB  F0A6         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  3573  0005AA  0E05               	movlw	5
  3574  0005AC                     u5195:
  3575  0005AC  90D8               	bcf	status,0,c
  3576  0005AE  0100               	movlb	0	; () banked
  3577  0005B0  37A3               	rlcf	??_CANSetFilter& (0+255),f,b
  3578  0005B2  37A4               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  3579  0005B4  37A5               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  3580  0005B6  37A6               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  3581  0005B8  2EE8               	decfsz	wreg,f,c
  3582  0005BA  D7F8               	goto	u5195
  3583  0005BC  C0A3  F0A8         	movff	??_CANSetFilter,CANSetFilter@tamp
  3584  0005C0  C0A4  F0A9         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  3585  0005C4  C0A5  F0AA         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  3586  0005C8  C0A6  F0AB         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  3587                           
  3588                           ; BSR set to: 0
  3589                           ;CANlib.h: 827: RXF5SIDL = (unsigned char) tamp;
  3590  0005CC  C0A8  FF15         	movff	CANSetFilter@tamp,3861	;volatile
  3591  0005D0                     l4174:
  3592                           
  3593                           ; BSR set to: 0
  3594                           ;CANlib.h: 828: }
  3595                           ;CANlib.h: 831: if ((numBuffer ==CAN_FILTER_B1_F1) && (type == CAN_CONFIG_XTD_MSG))
  3596  0005D0  0100               	movlb	0	; () banked
  3597  0005D2  51A7               	movf	CANSetFilter@numBuffer& (0+255),w,b
  3598  0005D4  0100               	movlb	0	; () banked
  3599  0005D6  A4D8               	btfss	status,2,c
  3600  0005D8  D07E               	goto	l4208
  3601                           
  3602                           ; BSR set to: 0
  3603  0005DA  0EF7               	movlw	247
  3604  0005DC  1822               	xorwf	CANSetFilter@type,w,c
  3605  0005DE  A4D8               	btfss	status,2,c
  3606  0005E0  D07A               	goto	l4208
  3607                           
  3608                           ; BSR set to: 0
  3609                           ;CANlib.h: 832: {
  3610                           ;CANlib.h: 833: RXF0SIDLbits.EXIDEN = 0x01;
  3611  0005E2  010F               	movlb	15	; () banked
  3612  0005E4  8701               	bsf	1,3,b	;volatile
  3613                           
  3614                           ; BSR set to: 15
  3615                           ;CANlib.h: 835: tamp = filter & 0x000000FF;
  3616  0005E6  501E               	movf	CANSetFilter@filter,w,c
  3617  0005E8  0100               	movlb	0	; () banked
  3618  0005EA  6FA8               	movwf	CANSetFilter@tamp& (0+255),b
  3619  0005EC  6BA9               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  3620  0005EE  6BAA               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  3621  0005F0  6BAB               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  3622                           
  3623                           ; BSR set to: 0
  3624                           ;CANlib.h: 836: RXF0EIDL = (unsigned char) tamp;
  3625  0005F2  C0A8  FF03         	movff	CANSetFilter@tamp,3843	;volatile
  3626                           
  3627                           ; BSR set to: 0
  3628                           ;CANlib.h: 838: tamp = filter & 0x0000FF00;
  3629  0005F6  0E00               	movlw	0
  3630  0005F8  141E               	andwf	CANSetFilter@filter,w,c
  3631  0005FA  0100               	movlb	0	; () banked
  3632  0005FC  6FA8               	movwf	CANSetFilter@tamp& (0+255),b
  3633  0005FE  0EFF               	movlw	255
  3634  000600  141F               	andwf	CANSetFilter@filter+1,w,c
  3635  000602  0100               	movlb	0	; () banked
  3636  000604  6FA9               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  3637  000606  0E00               	movlw	0
  3638  000608  1420               	andwf	CANSetFilter@filter+2,w,c
  3639  00060A  0100               	movlb	0	; () banked
  3640  00060C  6FAA               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  3641  00060E  0E00               	movlw	0
  3642  000610  1421               	andwf	CANSetFilter@filter+3,w,c
  3643  000612  0100               	movlb	0	; () banked
  3644  000614  6FAB               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  3645                           
  3646                           ; BSR set to: 0
  3647                           ;CANlib.h: 839: tamp = tamp >> 8;
  3648  000616  C0A8  F0A3         	movff	CANSetFilter@tamp,??_CANSetFilter
  3649  00061A  C0A9  F0A4         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  3650  00061E  C0AA  F0A5         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  3651  000622  C0AB  F0A6         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  3652  000626  C0A4  F0A3         	movff	??_CANSetFilter+1,??_CANSetFilter
  3653  00062A  C0A5  F0A4         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  3654  00062E  C0A6  F0A5         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  3655  000632  0100               	movlb	0	; () banked
  3656  000634  6BA6               	clrf	(??_CANSetFilter+3)& (0+255),b
  3657  000636  C0A3  F0A8         	movff	??_CANSetFilter,CANSetFilter@tamp
  3658  00063A  C0A4  F0A9         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  3659  00063E  C0A5  F0AA         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  3660  000642  C0A6  F0AB         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  3661                           
  3662                           ; BSR set to: 0
  3663                           ;CANlib.h: 840: RXF0EIDH = (unsigned char) tamp;
  3664  000646  C0A8  FF02         	movff	CANSetFilter@tamp,3842	;volatile
  3665                           
  3666                           ; BSR set to: 0
  3667                           ;CANlib.h: 842: if (filter & 0x00010000)
  3668  00064A  A020               	btfss	CANSetFilter@filter+2,0,c
  3669  00064C  D003               	goto	l465
  3670                           
  3671                           ; BSR set to: 0
  3672                           ;CANlib.h: 843: RXF0SIDLbits.EID16 = 0x01;
  3673  00064E  010F               	movlb	15	; () banked
  3674  000650  8101               	bsf	1,0,b	;volatile
  3675  000652  D002               	goto	l466
  3676  000654                     l465:
  3677                           
  3678                           ; BSR set to: 0
  3679                           ;CANlib.h: 844: else
  3680                           ;CANlib.h: 845: RXF0SIDLbits.EID16 = 0x00;
  3681  000654  010F               	movlb	15	; () banked
  3682  000656  9101               	bcf	1,0,b	;volatile
  3683  000658                     l466:
  3684                           
  3685                           ; BSR set to: 15
  3686                           ;CANlib.h: 847: if (filter & 0x00020000)
  3687  000658  A220               	btfss	CANSetFilter@filter+2,1,c
  3688  00065A  D003               	goto	l467
  3689                           
  3690                           ; BSR set to: 15
  3691                           ;CANlib.h: 848: RXF0SIDLbits.EID17 = 0x01;
  3692  00065C  010F               	movlb	15	; () banked
  3693  00065E  8301               	bsf	1,1,b	;volatile
  3694  000660  D002               	goto	l468
  3695  000662                     l467:
  3696                           
  3697                           ; BSR set to: 15
  3698                           ;CANlib.h: 849: else
  3699                           ;CANlib.h: 850: RXF0SIDLbits.EID17 = 0x00;
  3700  000662  010F               	movlb	15	; () banked
  3701  000664  9301               	bcf	1,1,b	;volatile
  3702  000666                     l468:
  3703                           
  3704                           ; BSR set to: 15
  3705                           ;CANlib.h: 852: if (filter & 0x00040000)
  3706  000666  A420               	btfss	CANSetFilter@filter+2,2,c
  3707  000668  D003               	goto	l469
  3708                           
  3709                           ; BSR set to: 15
  3710                           ;CANlib.h: 853: RXF0SIDLbits.SID0 = 0x01;
  3711  00066A  010F               	movlb	15	; () banked
  3712  00066C  8B01               	bsf	1,5,b	;volatile
  3713  00066E  D002               	goto	l470
  3714  000670                     l469:
  3715                           
  3716                           ; BSR set to: 15
  3717                           ;CANlib.h: 854: else
  3718                           ;CANlib.h: 855: RXF0SIDLbits.SID0 = 0x00;
  3719  000670  010F               	movlb	15	; () banked
  3720  000672  9B01               	bcf	1,5,b	;volatile
  3721  000674                     l470:
  3722                           
  3723                           ; BSR set to: 15
  3724                           ;CANlib.h: 857: if (filter & 0x00080000)
  3725  000674  A620               	btfss	CANSetFilter@filter+2,3,c
  3726  000676  D003               	goto	l471
  3727                           
  3728                           ; BSR set to: 15
  3729                           ;CANlib.h: 858: RXF0SIDLbits.SID1 = 0x01;
  3730  000678  010F               	movlb	15	; () banked
  3731  00067A  8D01               	bsf	1,6,b	;volatile
  3732  00067C  D002               	goto	l472
  3733  00067E                     l471:
  3734                           
  3735                           ; BSR set to: 15
  3736                           ;CANlib.h: 859: else
  3737                           ;CANlib.h: 860: RXF0SIDLbits.SID1 = 0x00;
  3738  00067E  010F               	movlb	15	; () banked
  3739  000680  9D01               	bcf	1,6,b	;volatile
  3740  000682                     l472:
  3741                           
  3742                           ; BSR set to: 15
  3743                           ;CANlib.h: 862: if (filter & 0x00100000)
  3744  000682  A820               	btfss	CANSetFilter@filter+2,4,c
  3745  000684  D003               	goto	l473
  3746                           
  3747                           ; BSR set to: 15
  3748                           ;CANlib.h: 863: RXF0SIDLbits.SID2 = 0x01 ;
  3749  000686  010F               	movlb	15	; () banked
  3750  000688  8F01               	bsf	1,7,b	;volatile
  3751  00068A  D002               	goto	l4202
  3752  00068C                     l473:
  3753                           
  3754                           ; BSR set to: 15
  3755                           ;CANlib.h: 864: else
  3756                           ;CANlib.h: 865: RXF0SIDLbits.SID2 = 0x00 ;
  3757  00068C  010F               	movlb	15	; () banked
  3758  00068E  9F01               	bcf	1,7,b	;volatile
  3759  000690                     l4202:
  3760                           
  3761                           ; BSR set to: 15
  3762                           ;CANlib.h: 867: tamp = (filter >> 21);
  3763  000690  C01E  F0A3         	movff	CANSetFilter@filter,??_CANSetFilter
  3764  000694  C01F  F0A4         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  3765  000698  C020  F0A5         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  3766  00069C  C021  F0A6         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  3767  0006A0  0E16               	movlw	22
  3768  0006A2  D006               	goto	u5270
  3769  0006A4                     u5275:
  3770  0006A4  0100               	movlb	0	; () banked
  3771  0006A6  90D8               	bcf	status,0,c
  3772  0006A8  33A6               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  3773  0006AA  33A5               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  3774  0006AC  33A4               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  3775  0006AE  33A3               	rrcf	??_CANSetFilter& (0+255),f,b
  3776  0006B0                     u5270:
  3777  0006B0  2EE8               	decfsz	wreg,f,c
  3778  0006B2  D7F8               	goto	u5275
  3779  0006B4  C0A3  F0A8         	movff	??_CANSetFilter,CANSetFilter@tamp
  3780  0006B8  C0A4  F0A9         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  3781  0006BC  C0A5  F0AA         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  3782  0006C0  C0A6  F0AB         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  3783                           
  3784                           ; BSR set to: 0
  3785                           ;CANlib.h: 868: tamp = tamp & 0x000000FF;
  3786  0006C4  0100               	movlb	0	; () banked
  3787  0006C6  51A8               	movf	CANSetFilter@tamp& (0+255),w,b
  3788  0006C8  0100               	movlb	0	; () banked
  3789  0006CA  6FA8               	movwf	CANSetFilter@tamp& (0+255),b
  3790  0006CC  6BA9               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  3791  0006CE  6BAA               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  3792  0006D0  6BAB               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  3793                           
  3794                           ; BSR set to: 0
  3795                           ;CANlib.h: 869: RXF0SIDH = (unsigned char) tamp;
  3796  0006D2  C0A8  FF00         	movff	CANSetFilter@tamp,3840	;volatile
  3797  0006D6                     l4208:
  3798                           
  3799                           ; BSR set to: 0
  3800                           ;CANlib.h: 870: }
  3801                           ;CANlib.h: 872: if ((numBuffer ==CAN_FILTER_B1_F2) && (type == CAN_CONFIG_XTD_MSG))
  3802  0006D6  0100               	movlb	0	; () banked
  3803  0006D8  05A7               	decf	CANSetFilter@numBuffer& (0+255),w,b
  3804  0006DA  A4D8               	btfss	status,2,c
  3805  0006DC  D07E               	goto	l4242
  3806                           
  3807                           ; BSR set to: 0
  3808  0006DE  0EF7               	movlw	247
  3809  0006E0  1822               	xorwf	CANSetFilter@type,w,c
  3810  0006E2  A4D8               	btfss	status,2,c
  3811  0006E4  D07A               	goto	l4242
  3812                           
  3813                           ; BSR set to: 0
  3814                           ;CANlib.h: 873: {
  3815                           ;CANlib.h: 874: RXF1SIDLbits.EXIDEN = 0x01;
  3816  0006E6  010F               	movlb	15	; () banked
  3817  0006E8  8705               	bsf	5,3,b	;volatile
  3818                           
  3819                           ; BSR set to: 15
  3820                           ;CANlib.h: 876: tamp = filter & 0x000000FF;
  3821  0006EA  501E               	movf	CANSetFilter@filter,w,c
  3822  0006EC  0100               	movlb	0	; () banked
  3823  0006EE  6FA8               	movwf	CANSetFilter@tamp& (0+255),b
  3824  0006F0  6BA9               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  3825  0006F2  6BAA               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  3826  0006F4  6BAB               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  3827                           
  3828                           ; BSR set to: 0
  3829                           ;CANlib.h: 877: RXF1EIDL = (unsigned char) tamp;
  3830  0006F6  C0A8  FF07         	movff	CANSetFilter@tamp,3847	;volatile
  3831                           
  3832                           ; BSR set to: 0
  3833                           ;CANlib.h: 879: tamp = filter & 0x0000FF00;
  3834  0006FA  0E00               	movlw	0
  3835  0006FC  141E               	andwf	CANSetFilter@filter,w,c
  3836  0006FE  0100               	movlb	0	; () banked
  3837  000700  6FA8               	movwf	CANSetFilter@tamp& (0+255),b
  3838  000702  0EFF               	movlw	255
  3839  000704  141F               	andwf	CANSetFilter@filter+1,w,c
  3840  000706  0100               	movlb	0	; () banked
  3841  000708  6FA9               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  3842  00070A  0E00               	movlw	0
  3843  00070C  1420               	andwf	CANSetFilter@filter+2,w,c
  3844  00070E  0100               	movlb	0	; () banked
  3845  000710  6FAA               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  3846  000712  0E00               	movlw	0
  3847  000714  1421               	andwf	CANSetFilter@filter+3,w,c
  3848  000716  0100               	movlb	0	; () banked
  3849  000718  6FAB               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  3850                           
  3851                           ; BSR set to: 0
  3852                           ;CANlib.h: 880: tamp = tamp >> 8;
  3853  00071A  C0A8  F0A3         	movff	CANSetFilter@tamp,??_CANSetFilter
  3854  00071E  C0A9  F0A4         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  3855  000722  C0AA  F0A5         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  3856  000726  C0AB  F0A6         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  3857  00072A  C0A4  F0A3         	movff	??_CANSetFilter+1,??_CANSetFilter
  3858  00072E  C0A5  F0A4         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  3859  000732  C0A6  F0A5         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  3860  000736  0100               	movlb	0	; () banked
  3861  000738  6BA6               	clrf	(??_CANSetFilter+3)& (0+255),b
  3862  00073A  C0A3  F0A8         	movff	??_CANSetFilter,CANSetFilter@tamp
  3863  00073E  C0A4  F0A9         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  3864  000742  C0A5  F0AA         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  3865  000746  C0A6  F0AB         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  3866                           
  3867                           ; BSR set to: 0
  3868                           ;CANlib.h: 881: RXF1EIDH = (unsigned char) tamp;
  3869  00074A  C0A8  FF06         	movff	CANSetFilter@tamp,3846	;volatile
  3870                           
  3871                           ; BSR set to: 0
  3872                           ;CANlib.h: 883: if (filter & 0x00010000)
  3873  00074E  A020               	btfss	CANSetFilter@filter+2,0,c
  3874  000750  D003               	goto	l476
  3875                           
  3876                           ; BSR set to: 0
  3877                           ;CANlib.h: 884: RXF1SIDLbits.EID16 = 0x01;
  3878  000752  010F               	movlb	15	; () banked
  3879  000754  8105               	bsf	5,0,b	;volatile
  3880  000756  D002               	goto	l477
  3881  000758                     l476:
  3882                           
  3883                           ; BSR set to: 0
  3884                           ;CANlib.h: 885: else
  3885                           ;CANlib.h: 886: RXF1SIDLbits.EID16 = 0x00;
  3886  000758  010F               	movlb	15	; () banked
  3887  00075A  9105               	bcf	5,0,b	;volatile
  3888  00075C                     l477:
  3889                           
  3890                           ; BSR set to: 15
  3891                           ;CANlib.h: 888: if (filter & 0x00020000)
  3892  00075C  A220               	btfss	CANSetFilter@filter+2,1,c
  3893  00075E  D003               	goto	l478
  3894                           
  3895                           ; BSR set to: 15
  3896                           ;CANlib.h: 889: RXF1SIDLbits.EID17 = 0x01;
  3897  000760  010F               	movlb	15	; () banked
  3898  000762  8305               	bsf	5,1,b	;volatile
  3899  000764  D002               	goto	l479
  3900  000766                     l478:
  3901                           
  3902                           ; BSR set to: 15
  3903                           ;CANlib.h: 890: else
  3904                           ;CANlib.h: 891: RXF1SIDLbits.EID17 = 0x00;
  3905  000766  010F               	movlb	15	; () banked
  3906  000768  9305               	bcf	5,1,b	;volatile
  3907  00076A                     l479:
  3908                           
  3909                           ; BSR set to: 15
  3910                           ;CANlib.h: 893: if (filter & 0x00040000)
  3911  00076A  A420               	btfss	CANSetFilter@filter+2,2,c
  3912  00076C  D003               	goto	l480
  3913                           
  3914                           ; BSR set to: 15
  3915                           ;CANlib.h: 894: RXF1SIDLbits.SID0 = 0x01;
  3916  00076E  010F               	movlb	15	; () banked
  3917  000770  8B05               	bsf	5,5,b	;volatile
  3918  000772  D002               	goto	l481
  3919  000774                     l480:
  3920                           
  3921                           ; BSR set to: 15
  3922                           ;CANlib.h: 895: else
  3923                           ;CANlib.h: 896: RXF1SIDLbits.SID0 = 0x00;
  3924  000774  010F               	movlb	15	; () banked
  3925  000776  9B05               	bcf	5,5,b	;volatile
  3926  000778                     l481:
  3927                           
  3928                           ; BSR set to: 15
  3929                           ;CANlib.h: 898: if (filter & 0x00080000)
  3930  000778  A620               	btfss	CANSetFilter@filter+2,3,c
  3931  00077A  D003               	goto	l482
  3932                           
  3933                           ; BSR set to: 15
  3934                           ;CANlib.h: 899: RXF1SIDLbits.SID1 = 0x01;
  3935  00077C  010F               	movlb	15	; () banked
  3936  00077E  8D05               	bsf	5,6,b	;volatile
  3937  000780  D002               	goto	l483
  3938  000782                     l482:
  3939                           
  3940                           ; BSR set to: 15
  3941                           ;CANlib.h: 900: else
  3942                           ;CANlib.h: 901: RXF1SIDLbits.SID1 = 0x00;
  3943  000782  010F               	movlb	15	; () banked
  3944  000784  9D05               	bcf	5,6,b	;volatile
  3945  000786                     l483:
  3946                           
  3947                           ; BSR set to: 15
  3948                           ;CANlib.h: 903: if (filter & 0x00100000)
  3949  000786  A820               	btfss	CANSetFilter@filter+2,4,c
  3950  000788  D003               	goto	l484
  3951                           
  3952                           ; BSR set to: 15
  3953                           ;CANlib.h: 904: RXF1SIDLbits.SID2 = 0x01 ;
  3954  00078A  010F               	movlb	15	; () banked
  3955  00078C  8F05               	bsf	5,7,b	;volatile
  3956  00078E  D002               	goto	l4236
  3957  000790                     l484:
  3958                           
  3959                           ; BSR set to: 15
  3960                           ;CANlib.h: 905: else
  3961                           ;CANlib.h: 906: RXF1SIDLbits.SID2 = 0x00 ;
  3962  000790  010F               	movlb	15	; () banked
  3963  000792  9F05               	bcf	5,7,b	;volatile
  3964  000794                     l4236:
  3965                           
  3966                           ; BSR set to: 15
  3967                           ;CANlib.h: 908: tamp = (filter >> 21);
  3968  000794  C01E  F0A3         	movff	CANSetFilter@filter,??_CANSetFilter
  3969  000798  C01F  F0A4         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  3970  00079C  C020  F0A5         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  3971  0007A0  C021  F0A6         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  3972  0007A4  0E16               	movlw	22
  3973  0007A6  D006               	goto	u5350
  3974  0007A8                     u5355:
  3975  0007A8  0100               	movlb	0	; () banked
  3976  0007AA  90D8               	bcf	status,0,c
  3977  0007AC  33A6               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  3978  0007AE  33A5               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  3979  0007B0  33A4               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  3980  0007B2  33A3               	rrcf	??_CANSetFilter& (0+255),f,b
  3981  0007B4                     u5350:
  3982  0007B4  2EE8               	decfsz	wreg,f,c
  3983  0007B6  D7F8               	goto	u5355
  3984  0007B8  C0A3  F0A8         	movff	??_CANSetFilter,CANSetFilter@tamp
  3985  0007BC  C0A4  F0A9         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  3986  0007C0  C0A5  F0AA         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  3987  0007C4  C0A6  F0AB         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  3988                           
  3989                           ; BSR set to: 0
  3990                           ;CANlib.h: 909: tamp = tamp & 0x000000FF;
  3991  0007C8  0100               	movlb	0	; () banked
  3992  0007CA  51A8               	movf	CANSetFilter@tamp& (0+255),w,b
  3993  0007CC  0100               	movlb	0	; () banked
  3994  0007CE  6FA8               	movwf	CANSetFilter@tamp& (0+255),b
  3995  0007D0  6BA9               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  3996  0007D2  6BAA               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  3997  0007D4  6BAB               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  3998                           
  3999                           ; BSR set to: 0
  4000                           ;CANlib.h: 910: RXF1SIDH = (unsigned char) tamp;
  4001  0007D6  C0A8  FF04         	movff	CANSetFilter@tamp,3844	;volatile
  4002  0007DA                     l4242:
  4003                           
  4004                           ; BSR set to: 0
  4005                           ;CANlib.h: 911: }
  4006                           ;CANlib.h: 914: if ((numBuffer ==CAN_FILTER_B2_F1) && (type == CAN_CONFIG_XTD_MSG))
  4007  0007DA  0E02               	movlw	2
  4008  0007DC  0100               	movlb	0	; () banked
  4009  0007DE  19A7               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  4010  0007E0  A4D8               	btfss	status,2,c
  4011  0007E2  D07E               	goto	l4276
  4012                           
  4013                           ; BSR set to: 0
  4014  0007E4  0EF7               	movlw	247
  4015  0007E6  1822               	xorwf	CANSetFilter@type,w,c
  4016  0007E8  A4D8               	btfss	status,2,c
  4017  0007EA  D07A               	goto	l4276
  4018                           
  4019                           ; BSR set to: 0
  4020                           ;CANlib.h: 915: {
  4021                           ;CANlib.h: 916: RXF2SIDLbits.EXIDEN = 0x01;
  4022  0007EC  010F               	movlb	15	; () banked
  4023  0007EE  8709               	bsf	9,3,b	;volatile
  4024                           
  4025                           ; BSR set to: 15
  4026                           ;CANlib.h: 918: tamp = filter & 0x000000FF;
  4027  0007F0  501E               	movf	CANSetFilter@filter,w,c
  4028  0007F2  0100               	movlb	0	; () banked
  4029  0007F4  6FA8               	movwf	CANSetFilter@tamp& (0+255),b
  4030  0007F6  6BA9               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4031  0007F8  6BAA               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4032  0007FA  6BAB               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4033                           
  4034                           ; BSR set to: 0
  4035                           ;CANlib.h: 919: RXF2EIDL = (unsigned char) tamp;
  4036  0007FC  C0A8  FF0B         	movff	CANSetFilter@tamp,3851	;volatile
  4037                           
  4038                           ; BSR set to: 0
  4039                           ;CANlib.h: 921: tamp = filter & 0x0000FF00;
  4040  000800  0E00               	movlw	0
  4041  000802  141E               	andwf	CANSetFilter@filter,w,c
  4042  000804  0100               	movlb	0	; () banked
  4043  000806  6FA8               	movwf	CANSetFilter@tamp& (0+255),b
  4044  000808  0EFF               	movlw	255
  4045  00080A  141F               	andwf	CANSetFilter@filter+1,w,c
  4046  00080C  0100               	movlb	0	; () banked
  4047  00080E  6FA9               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  4048  000810  0E00               	movlw	0
  4049  000812  1420               	andwf	CANSetFilter@filter+2,w,c
  4050  000814  0100               	movlb	0	; () banked
  4051  000816  6FAA               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  4052  000818  0E00               	movlw	0
  4053  00081A  1421               	andwf	CANSetFilter@filter+3,w,c
  4054  00081C  0100               	movlb	0	; () banked
  4055  00081E  6FAB               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  4056                           
  4057                           ; BSR set to: 0
  4058                           ;CANlib.h: 922: tamp = tamp >> 8;
  4059  000820  C0A8  F0A3         	movff	CANSetFilter@tamp,??_CANSetFilter
  4060  000824  C0A9  F0A4         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  4061  000828  C0AA  F0A5         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  4062  00082C  C0AB  F0A6         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  4063  000830  C0A4  F0A3         	movff	??_CANSetFilter+1,??_CANSetFilter
  4064  000834  C0A5  F0A4         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  4065  000838  C0A6  F0A5         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  4066  00083C  0100               	movlb	0	; () banked
  4067  00083E  6BA6               	clrf	(??_CANSetFilter+3)& (0+255),b
  4068  000840  C0A3  F0A8         	movff	??_CANSetFilter,CANSetFilter@tamp
  4069  000844  C0A4  F0A9         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4070  000848  C0A5  F0AA         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4071  00084C  C0A6  F0AB         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4072                           
  4073                           ; BSR set to: 0
  4074                           ;CANlib.h: 923: RXF2EIDH = (unsigned char) tamp;
  4075  000850  C0A8  FF0A         	movff	CANSetFilter@tamp,3850	;volatile
  4076                           
  4077                           ; BSR set to: 0
  4078                           ;CANlib.h: 925: if (filter & 0x00010000)
  4079  000854  A020               	btfss	CANSetFilter@filter+2,0,c
  4080  000856  D003               	goto	l487
  4081                           
  4082                           ; BSR set to: 0
  4083                           ;CANlib.h: 926: RXF2SIDLbits.EID16 = 0x01;
  4084  000858  010F               	movlb	15	; () banked
  4085  00085A  8109               	bsf	9,0,b	;volatile
  4086  00085C  D002               	goto	l488
  4087  00085E                     l487:
  4088                           
  4089                           ; BSR set to: 0
  4090                           ;CANlib.h: 927: else
  4091                           ;CANlib.h: 928: RXF2SIDLbits.EID16 = 0x00;
  4092  00085E  010F               	movlb	15	; () banked
  4093  000860  9109               	bcf	9,0,b	;volatile
  4094  000862                     l488:
  4095                           
  4096                           ; BSR set to: 15
  4097                           ;CANlib.h: 930: if (filter & 0x00020000)
  4098  000862  A220               	btfss	CANSetFilter@filter+2,1,c
  4099  000864  D003               	goto	l489
  4100                           
  4101                           ; BSR set to: 15
  4102                           ;CANlib.h: 931: RXF2SIDLbits.EID17 = 0x01;
  4103  000866  010F               	movlb	15	; () banked
  4104  000868  8309               	bsf	9,1,b	;volatile
  4105  00086A  D002               	goto	l490
  4106  00086C                     l489:
  4107                           
  4108                           ; BSR set to: 15
  4109                           ;CANlib.h: 932: else
  4110                           ;CANlib.h: 933: RXF2SIDLbits.EID17 = 0x00;
  4111  00086C  010F               	movlb	15	; () banked
  4112  00086E  9309               	bcf	9,1,b	;volatile
  4113  000870                     l490:
  4114                           
  4115                           ; BSR set to: 15
  4116                           ;CANlib.h: 935: if (filter & 0x00040000)
  4117  000870  A420               	btfss	CANSetFilter@filter+2,2,c
  4118  000872  D003               	goto	l491
  4119                           
  4120                           ; BSR set to: 15
  4121                           ;CANlib.h: 936: RXF2SIDLbits.SID0 = 0x01;
  4122  000874  010F               	movlb	15	; () banked
  4123  000876  8B09               	bsf	9,5,b	;volatile
  4124  000878  D002               	goto	l492
  4125  00087A                     l491:
  4126                           
  4127                           ; BSR set to: 15
  4128                           ;CANlib.h: 937: else
  4129                           ;CANlib.h: 938: RXF2SIDLbits.SID0 = 0x00;
  4130  00087A  010F               	movlb	15	; () banked
  4131  00087C  9B09               	bcf	9,5,b	;volatile
  4132  00087E                     l492:
  4133                           
  4134                           ; BSR set to: 15
  4135                           ;CANlib.h: 940: if (filter & 0x00080000)
  4136  00087E  A620               	btfss	CANSetFilter@filter+2,3,c
  4137  000880  D003               	goto	l493
  4138                           
  4139                           ; BSR set to: 15
  4140                           ;CANlib.h: 941: RXF2SIDLbits.SID1 = 0x01;
  4141  000882  010F               	movlb	15	; () banked
  4142  000884  8D09               	bsf	9,6,b	;volatile
  4143  000886  D002               	goto	l494
  4144  000888                     l493:
  4145                           
  4146                           ; BSR set to: 15
  4147                           ;CANlib.h: 942: else
  4148                           ;CANlib.h: 943: RXF2SIDLbits.SID1 = 0x00;
  4149  000888  010F               	movlb	15	; () banked
  4150  00088A  9D09               	bcf	9,6,b	;volatile
  4151  00088C                     l494:
  4152                           
  4153                           ; BSR set to: 15
  4154                           ;CANlib.h: 945: if (filter & 0x00100000)
  4155  00088C  A820               	btfss	CANSetFilter@filter+2,4,c
  4156  00088E  D003               	goto	l495
  4157                           
  4158                           ; BSR set to: 15
  4159                           ;CANlib.h: 946: RXF2SIDLbits.SID2 = 0x01 ;
  4160  000890  010F               	movlb	15	; () banked
  4161  000892  8F09               	bsf	9,7,b	;volatile
  4162  000894  D002               	goto	l4270
  4163  000896                     l495:
  4164                           
  4165                           ; BSR set to: 15
  4166                           ;CANlib.h: 947: else
  4167                           ;CANlib.h: 948: RXF2SIDLbits.SID2 = 0x00 ;
  4168  000896  010F               	movlb	15	; () banked
  4169  000898  9F09               	bcf	9,7,b	;volatile
  4170  00089A                     l4270:
  4171                           
  4172                           ; BSR set to: 15
  4173                           ;CANlib.h: 950: tamp = (filter >> 21);
  4174  00089A  C01E  F0A3         	movff	CANSetFilter@filter,??_CANSetFilter
  4175  00089E  C01F  F0A4         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  4176  0008A2  C020  F0A5         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  4177  0008A6  C021  F0A6         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  4178  0008AA  0E16               	movlw	22
  4179  0008AC  D006               	goto	u5430
  4180  0008AE                     u5435:
  4181  0008AE  0100               	movlb	0	; () banked
  4182  0008B0  90D8               	bcf	status,0,c
  4183  0008B2  33A6               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  4184  0008B4  33A5               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  4185  0008B6  33A4               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  4186  0008B8  33A3               	rrcf	??_CANSetFilter& (0+255),f,b
  4187  0008BA                     u5430:
  4188  0008BA  2EE8               	decfsz	wreg,f,c
  4189  0008BC  D7F8               	goto	u5435
  4190  0008BE  C0A3  F0A8         	movff	??_CANSetFilter,CANSetFilter@tamp
  4191  0008C2  C0A4  F0A9         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4192  0008C6  C0A5  F0AA         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4193  0008CA  C0A6  F0AB         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4194                           
  4195                           ; BSR set to: 0
  4196                           ;CANlib.h: 951: tamp = tamp & 0x000000FF;
  4197  0008CE  0100               	movlb	0	; () banked
  4198  0008D0  51A8               	movf	CANSetFilter@tamp& (0+255),w,b
  4199  0008D2  0100               	movlb	0	; () banked
  4200  0008D4  6FA8               	movwf	CANSetFilter@tamp& (0+255),b
  4201  0008D6  6BA9               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4202  0008D8  6BAA               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4203  0008DA  6BAB               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4204                           
  4205                           ; BSR set to: 0
  4206                           ;CANlib.h: 952: RXF2SIDH = (unsigned char) tamp;
  4207  0008DC  C0A8  FF08         	movff	CANSetFilter@tamp,3848	;volatile
  4208  0008E0                     l4276:
  4209                           
  4210                           ; BSR set to: 0
  4211                           ;CANlib.h: 953: }
  4212                           ;CANlib.h: 955: if ((numBuffer ==CAN_FILTER_B2_F2) && (type == CAN_CONFIG_XTD_MSG))
  4213  0008E0  0E03               	movlw	3
  4214  0008E2  0100               	movlb	0	; () banked
  4215  0008E4  19A7               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  4216  0008E6  A4D8               	btfss	status,2,c
  4217  0008E8  D07E               	goto	l4310
  4218                           
  4219                           ; BSR set to: 0
  4220  0008EA  0EF7               	movlw	247
  4221  0008EC  1822               	xorwf	CANSetFilter@type,w,c
  4222  0008EE  A4D8               	btfss	status,2,c
  4223  0008F0  D07A               	goto	l4310
  4224                           
  4225                           ; BSR set to: 0
  4226                           ;CANlib.h: 956: {
  4227                           ;CANlib.h: 957: RXF3SIDLbits.EXIDEN = 0x01;
  4228  0008F2  010F               	movlb	15	; () banked
  4229  0008F4  870D               	bsf	13,3,b	;volatile
  4230                           
  4231                           ; BSR set to: 15
  4232                           ;CANlib.h: 959: tamp = filter & 0x000000FF;
  4233  0008F6  501E               	movf	CANSetFilter@filter,w,c
  4234  0008F8  0100               	movlb	0	; () banked
  4235  0008FA  6FA8               	movwf	CANSetFilter@tamp& (0+255),b
  4236  0008FC  6BA9               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4237  0008FE  6BAA               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4238  000900  6BAB               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4239                           
  4240                           ; BSR set to: 0
  4241                           ;CANlib.h: 960: RXF3EIDL = (unsigned char) tamp;
  4242  000902  C0A8  FF0F         	movff	CANSetFilter@tamp,3855	;volatile
  4243                           
  4244                           ; BSR set to: 0
  4245                           ;CANlib.h: 962: tamp = filter & 0x0000FF00;
  4246  000906  0E00               	movlw	0
  4247  000908  141E               	andwf	CANSetFilter@filter,w,c
  4248  00090A  0100               	movlb	0	; () banked
  4249  00090C  6FA8               	movwf	CANSetFilter@tamp& (0+255),b
  4250  00090E  0EFF               	movlw	255
  4251  000910  141F               	andwf	CANSetFilter@filter+1,w,c
  4252  000912  0100               	movlb	0	; () banked
  4253  000914  6FA9               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  4254  000916  0E00               	movlw	0
  4255  000918  1420               	andwf	CANSetFilter@filter+2,w,c
  4256  00091A  0100               	movlb	0	; () banked
  4257  00091C  6FAA               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  4258  00091E  0E00               	movlw	0
  4259  000920  1421               	andwf	CANSetFilter@filter+3,w,c
  4260  000922  0100               	movlb	0	; () banked
  4261  000924  6FAB               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  4262                           
  4263                           ; BSR set to: 0
  4264                           ;CANlib.h: 963: tamp = tamp >> 8;
  4265  000926  C0A8  F0A3         	movff	CANSetFilter@tamp,??_CANSetFilter
  4266  00092A  C0A9  F0A4         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  4267  00092E  C0AA  F0A5         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  4268  000932  C0AB  F0A6         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  4269  000936  C0A4  F0A3         	movff	??_CANSetFilter+1,??_CANSetFilter
  4270  00093A  C0A5  F0A4         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  4271  00093E  C0A6  F0A5         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  4272  000942  0100               	movlb	0	; () banked
  4273  000944  6BA6               	clrf	(??_CANSetFilter+3)& (0+255),b
  4274  000946  C0A3  F0A8         	movff	??_CANSetFilter,CANSetFilter@tamp
  4275  00094A  C0A4  F0A9         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4276  00094E  C0A5  F0AA         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4277  000952  C0A6  F0AB         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4278                           
  4279                           ; BSR set to: 0
  4280                           ;CANlib.h: 964: RXF3EIDH = (unsigned char) tamp;
  4281  000956  C0A8  FF0E         	movff	CANSetFilter@tamp,3854	;volatile
  4282                           
  4283                           ; BSR set to: 0
  4284                           ;CANlib.h: 966: if (filter & 0x00010000)
  4285  00095A  A020               	btfss	CANSetFilter@filter+2,0,c
  4286  00095C  D003               	goto	l498
  4287                           
  4288                           ; BSR set to: 0
  4289                           ;CANlib.h: 967: RXF3SIDLbits.EID16 = 0x01;
  4290  00095E  010F               	movlb	15	; () banked
  4291  000960  810D               	bsf	13,0,b	;volatile
  4292  000962  D002               	goto	l499
  4293  000964                     l498:
  4294                           
  4295                           ; BSR set to: 0
  4296                           ;CANlib.h: 968: else
  4297                           ;CANlib.h: 969: RXF3SIDLbits.EID16 = 0x00;
  4298  000964  010F               	movlb	15	; () banked
  4299  000966  910D               	bcf	13,0,b	;volatile
  4300  000968                     l499:
  4301                           
  4302                           ; BSR set to: 15
  4303                           ;CANlib.h: 971: if (filter & 0x00020000)
  4304  000968  A220               	btfss	CANSetFilter@filter+2,1,c
  4305  00096A  D003               	goto	l500
  4306                           
  4307                           ; BSR set to: 15
  4308                           ;CANlib.h: 972: RXF3SIDLbits.EID17 = 0x01;
  4309  00096C  010F               	movlb	15	; () banked
  4310  00096E  830D               	bsf	13,1,b	;volatile
  4311  000970  D002               	goto	l501
  4312  000972                     l500:
  4313                           
  4314                           ; BSR set to: 15
  4315                           ;CANlib.h: 973: else
  4316                           ;CANlib.h: 974: RXF3SIDLbits.EID17 = 0x00;
  4317  000972  010F               	movlb	15	; () banked
  4318  000974  930D               	bcf	13,1,b	;volatile
  4319  000976                     l501:
  4320                           
  4321                           ; BSR set to: 15
  4322                           ;CANlib.h: 976: if (filter & 0x00040000)
  4323  000976  A420               	btfss	CANSetFilter@filter+2,2,c
  4324  000978  D003               	goto	l502
  4325                           
  4326                           ; BSR set to: 15
  4327                           ;CANlib.h: 977: RXF3SIDLbits.SID0 = 0x01;
  4328  00097A  010F               	movlb	15	; () banked
  4329  00097C  8B0D               	bsf	13,5,b	;volatile
  4330  00097E  D002               	goto	l503
  4331  000980                     l502:
  4332                           
  4333                           ; BSR set to: 15
  4334                           ;CANlib.h: 978: else
  4335                           ;CANlib.h: 979: RXF3SIDLbits.SID0 = 0x00;
  4336  000980  010F               	movlb	15	; () banked
  4337  000982  9B0D               	bcf	13,5,b	;volatile
  4338  000984                     l503:
  4339                           
  4340                           ; BSR set to: 15
  4341                           ;CANlib.h: 981: if (filter & 0x00080000)
  4342  000984  A620               	btfss	CANSetFilter@filter+2,3,c
  4343  000986  D003               	goto	l504
  4344                           
  4345                           ; BSR set to: 15
  4346                           ;CANlib.h: 982: RXF3SIDLbits.SID1 = 0x01;
  4347  000988  010F               	movlb	15	; () banked
  4348  00098A  8D0D               	bsf	13,6,b	;volatile
  4349  00098C  D002               	goto	l505
  4350  00098E                     l504:
  4351                           
  4352                           ; BSR set to: 15
  4353                           ;CANlib.h: 983: else
  4354                           ;CANlib.h: 984: RXF3SIDLbits.SID1 = 0x00;
  4355  00098E  010F               	movlb	15	; () banked
  4356  000990  9D0D               	bcf	13,6,b	;volatile
  4357  000992                     l505:
  4358                           
  4359                           ; BSR set to: 15
  4360                           ;CANlib.h: 986: if (filter & 0x00100000)
  4361  000992  A820               	btfss	CANSetFilter@filter+2,4,c
  4362  000994  D003               	goto	l506
  4363                           
  4364                           ; BSR set to: 15
  4365                           ;CANlib.h: 987: RXF3SIDLbits.SID2 = 0x01 ;
  4366  000996  010F               	movlb	15	; () banked
  4367  000998  8F0D               	bsf	13,7,b	;volatile
  4368  00099A  D002               	goto	l4304
  4369  00099C                     l506:
  4370                           
  4371                           ; BSR set to: 15
  4372                           ;CANlib.h: 988: else
  4373                           ;CANlib.h: 989: RXF3SIDLbits.SID2 = 0x00 ;
  4374  00099C  010F               	movlb	15	; () banked
  4375  00099E  9F0D               	bcf	13,7,b	;volatile
  4376  0009A0                     l4304:
  4377                           
  4378                           ; BSR set to: 15
  4379                           ;CANlib.h: 991: tamp = (filter >> 21);
  4380  0009A0  C01E  F0A3         	movff	CANSetFilter@filter,??_CANSetFilter
  4381  0009A4  C01F  F0A4         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  4382  0009A8  C020  F0A5         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  4383  0009AC  C021  F0A6         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  4384  0009B0  0E16               	movlw	22
  4385  0009B2  D006               	goto	u5510
  4386  0009B4                     u5515:
  4387  0009B4  0100               	movlb	0	; () banked
  4388  0009B6  90D8               	bcf	status,0,c
  4389  0009B8  33A6               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  4390  0009BA  33A5               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  4391  0009BC  33A4               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  4392  0009BE  33A3               	rrcf	??_CANSetFilter& (0+255),f,b
  4393  0009C0                     u5510:
  4394  0009C0  2EE8               	decfsz	wreg,f,c
  4395  0009C2  D7F8               	goto	u5515
  4396  0009C4  C0A3  F0A8         	movff	??_CANSetFilter,CANSetFilter@tamp
  4397  0009C8  C0A4  F0A9         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4398  0009CC  C0A5  F0AA         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4399  0009D0  C0A6  F0AB         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4400                           
  4401                           ; BSR set to: 0
  4402                           ;CANlib.h: 992: tamp = tamp & 0x000000FF;
  4403  0009D4  0100               	movlb	0	; () banked
  4404  0009D6  51A8               	movf	CANSetFilter@tamp& (0+255),w,b
  4405  0009D8  0100               	movlb	0	; () banked
  4406  0009DA  6FA8               	movwf	CANSetFilter@tamp& (0+255),b
  4407  0009DC  6BA9               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4408  0009DE  6BAA               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4409  0009E0  6BAB               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4410                           
  4411                           ; BSR set to: 0
  4412                           ;CANlib.h: 993: RXF3SIDH = (unsigned char) tamp;
  4413  0009E2  C0A8  FF0C         	movff	CANSetFilter@tamp,3852	;volatile
  4414  0009E6                     l4310:
  4415                           
  4416                           ; BSR set to: 0
  4417                           ;CANlib.h: 994: }
  4418                           ;CANlib.h: 996: if ((numBuffer ==CAN_FILTER_B2_F3) && (type == CAN_CONFIG_XTD_MSG))
  4419  0009E6  0E04               	movlw	4
  4420  0009E8  0100               	movlb	0	; () banked
  4421  0009EA  19A7               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  4422  0009EC  A4D8               	btfss	status,2,c
  4423  0009EE  D07E               	goto	l4344
  4424                           
  4425                           ; BSR set to: 0
  4426  0009F0  0EF7               	movlw	247
  4427  0009F2  1822               	xorwf	CANSetFilter@type,w,c
  4428  0009F4  A4D8               	btfss	status,2,c
  4429  0009F6  D07A               	goto	l4344
  4430                           
  4431                           ; BSR set to: 0
  4432                           ;CANlib.h: 997: {
  4433                           ;CANlib.h: 998: RXF4SIDLbits.EXIDEN = 0x01;
  4434  0009F8  010F               	movlb	15	; () banked
  4435  0009FA  8711               	bsf	17,3,b	;volatile
  4436                           
  4437                           ; BSR set to: 15
  4438                           ;CANlib.h: 1000: tamp = filter & 0x000000FF;
  4439  0009FC  501E               	movf	CANSetFilter@filter,w,c
  4440  0009FE  0100               	movlb	0	; () banked
  4441  000A00  6FA8               	movwf	CANSetFilter@tamp& (0+255),b
  4442  000A02  6BA9               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4443  000A04  6BAA               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4444  000A06  6BAB               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4445                           
  4446                           ; BSR set to: 0
  4447                           ;CANlib.h: 1001: RXF4EIDL = (unsigned char) tamp;
  4448  000A08  C0A8  FF13         	movff	CANSetFilter@tamp,3859	;volatile
  4449                           
  4450                           ; BSR set to: 0
  4451                           ;CANlib.h: 1003: tamp = filter & 0x0000FF00;
  4452  000A0C  0E00               	movlw	0
  4453  000A0E  141E               	andwf	CANSetFilter@filter,w,c
  4454  000A10  0100               	movlb	0	; () banked
  4455  000A12  6FA8               	movwf	CANSetFilter@tamp& (0+255),b
  4456  000A14  0EFF               	movlw	255
  4457  000A16  141F               	andwf	CANSetFilter@filter+1,w,c
  4458  000A18  0100               	movlb	0	; () banked
  4459  000A1A  6FA9               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  4460  000A1C  0E00               	movlw	0
  4461  000A1E  1420               	andwf	CANSetFilter@filter+2,w,c
  4462  000A20  0100               	movlb	0	; () banked
  4463  000A22  6FAA               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  4464  000A24  0E00               	movlw	0
  4465  000A26  1421               	andwf	CANSetFilter@filter+3,w,c
  4466  000A28  0100               	movlb	0	; () banked
  4467  000A2A  6FAB               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  4468                           
  4469                           ; BSR set to: 0
  4470                           ;CANlib.h: 1004: tamp = tamp >> 8;
  4471  000A2C  C0A8  F0A3         	movff	CANSetFilter@tamp,??_CANSetFilter
  4472  000A30  C0A9  F0A4         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  4473  000A34  C0AA  F0A5         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  4474  000A38  C0AB  F0A6         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  4475  000A3C  C0A4  F0A3         	movff	??_CANSetFilter+1,??_CANSetFilter
  4476  000A40  C0A5  F0A4         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  4477  000A44  C0A6  F0A5         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  4478  000A48  0100               	movlb	0	; () banked
  4479  000A4A  6BA6               	clrf	(??_CANSetFilter+3)& (0+255),b
  4480  000A4C  C0A3  F0A8         	movff	??_CANSetFilter,CANSetFilter@tamp
  4481  000A50  C0A4  F0A9         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4482  000A54  C0A5  F0AA         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4483  000A58  C0A6  F0AB         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4484                           
  4485                           ; BSR set to: 0
  4486                           ;CANlib.h: 1005: RXF4EIDH = (unsigned char) tamp;
  4487  000A5C  C0A8  FF12         	movff	CANSetFilter@tamp,3858	;volatile
  4488                           
  4489                           ; BSR set to: 0
  4490                           ;CANlib.h: 1007: if (filter & 0x00010000)
  4491  000A60  A020               	btfss	CANSetFilter@filter+2,0,c
  4492  000A62  D003               	goto	l509
  4493                           
  4494                           ; BSR set to: 0
  4495                           ;CANlib.h: 1008: RXF4SIDLbits.EID16 = 0x01;
  4496  000A64  010F               	movlb	15	; () banked
  4497  000A66  8111               	bsf	17,0,b	;volatile
  4498  000A68  D002               	goto	l510
  4499  000A6A                     l509:
  4500                           
  4501                           ; BSR set to: 0
  4502                           ;CANlib.h: 1009: else
  4503                           ;CANlib.h: 1010: RXF4SIDLbits.EID16 = 0x00;
  4504  000A6A  010F               	movlb	15	; () banked
  4505  000A6C  9111               	bcf	17,0,b	;volatile
  4506  000A6E                     l510:
  4507                           
  4508                           ; BSR set to: 15
  4509                           ;CANlib.h: 1012: if (filter & 0x00020000)
  4510  000A6E  A220               	btfss	CANSetFilter@filter+2,1,c
  4511  000A70  D003               	goto	l511
  4512                           
  4513                           ; BSR set to: 15
  4514                           ;CANlib.h: 1013: RXF4SIDLbits.EID17 = 0x01;
  4515  000A72  010F               	movlb	15	; () banked
  4516  000A74  8311               	bsf	17,1,b	;volatile
  4517  000A76  D002               	goto	l512
  4518  000A78                     l511:
  4519                           
  4520                           ; BSR set to: 15
  4521                           ;CANlib.h: 1014: else
  4522                           ;CANlib.h: 1015: RXF4SIDLbits.EID17 = 0x00;
  4523  000A78  010F               	movlb	15	; () banked
  4524  000A7A  9311               	bcf	17,1,b	;volatile
  4525  000A7C                     l512:
  4526                           
  4527                           ; BSR set to: 15
  4528                           ;CANlib.h: 1017: if (filter & 0x00040000)
  4529  000A7C  A420               	btfss	CANSetFilter@filter+2,2,c
  4530  000A7E  D003               	goto	l513
  4531                           
  4532                           ; BSR set to: 15
  4533                           ;CANlib.h: 1018: RXF4SIDLbits.SID0 = 0x01;
  4534  000A80  010F               	movlb	15	; () banked
  4535  000A82  8B11               	bsf	17,5,b	;volatile
  4536  000A84  D002               	goto	l514
  4537  000A86                     l513:
  4538                           
  4539                           ; BSR set to: 15
  4540                           ;CANlib.h: 1019: else
  4541                           ;CANlib.h: 1020: RXF4SIDLbits.SID0 = 0x00;
  4542  000A86  010F               	movlb	15	; () banked
  4543  000A88  9B11               	bcf	17,5,b	;volatile
  4544  000A8A                     l514:
  4545                           
  4546                           ; BSR set to: 15
  4547                           ;CANlib.h: 1022: if (filter & 0x00080000)
  4548  000A8A  A620               	btfss	CANSetFilter@filter+2,3,c
  4549  000A8C  D003               	goto	l515
  4550                           
  4551                           ; BSR set to: 15
  4552                           ;CANlib.h: 1023: RXF4SIDLbits.SID1 = 0x01;
  4553  000A8E  010F               	movlb	15	; () banked
  4554  000A90  8D11               	bsf	17,6,b	;volatile
  4555  000A92  D002               	goto	l516
  4556  000A94                     l515:
  4557                           
  4558                           ; BSR set to: 15
  4559                           ;CANlib.h: 1024: else
  4560                           ;CANlib.h: 1025: RXF4SIDLbits.SID1 = 0x00;
  4561  000A94  010F               	movlb	15	; () banked
  4562  000A96  9D11               	bcf	17,6,b	;volatile
  4563  000A98                     l516:
  4564                           
  4565                           ; BSR set to: 15
  4566                           ;CANlib.h: 1027: if (filter & 0x00100000)
  4567  000A98  A820               	btfss	CANSetFilter@filter+2,4,c
  4568  000A9A  D003               	goto	l517
  4569                           
  4570                           ; BSR set to: 15
  4571                           ;CANlib.h: 1028: RXF4SIDLbits.SID2 = 0x01 ;
  4572  000A9C  010F               	movlb	15	; () banked
  4573  000A9E  8F11               	bsf	17,7,b	;volatile
  4574  000AA0  D002               	goto	l4338
  4575  000AA2                     l517:
  4576                           
  4577                           ; BSR set to: 15
  4578                           ;CANlib.h: 1029: else
  4579                           ;CANlib.h: 1030: RXF4SIDLbits.SID2 = 0x00 ;
  4580  000AA2  010F               	movlb	15	; () banked
  4581  000AA4  9F11               	bcf	17,7,b	;volatile
  4582  000AA6                     l4338:
  4583                           
  4584                           ; BSR set to: 15
  4585                           ;CANlib.h: 1032: tamp = (filter >> 21);
  4586  000AA6  C01E  F0A3         	movff	CANSetFilter@filter,??_CANSetFilter
  4587  000AAA  C01F  F0A4         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  4588  000AAE  C020  F0A5         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  4589  000AB2  C021  F0A6         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  4590  000AB6  0E16               	movlw	22
  4591  000AB8  D006               	goto	u5590
  4592  000ABA                     u5595:
  4593  000ABA  0100               	movlb	0	; () banked
  4594  000ABC  90D8               	bcf	status,0,c
  4595  000ABE  33A6               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  4596  000AC0  33A5               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  4597  000AC2  33A4               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  4598  000AC4  33A3               	rrcf	??_CANSetFilter& (0+255),f,b
  4599  000AC6                     u5590:
  4600  000AC6  2EE8               	decfsz	wreg,f,c
  4601  000AC8  D7F8               	goto	u5595
  4602  000ACA  C0A3  F0A8         	movff	??_CANSetFilter,CANSetFilter@tamp
  4603  000ACE  C0A4  F0A9         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4604  000AD2  C0A5  F0AA         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4605  000AD6  C0A6  F0AB         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4606                           
  4607                           ; BSR set to: 0
  4608                           ;CANlib.h: 1033: tamp = tamp & 0x000000FF;
  4609  000ADA  0100               	movlb	0	; () banked
  4610  000ADC  51A8               	movf	CANSetFilter@tamp& (0+255),w,b
  4611  000ADE  0100               	movlb	0	; () banked
  4612  000AE0  6FA8               	movwf	CANSetFilter@tamp& (0+255),b
  4613  000AE2  6BA9               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4614  000AE4  6BAA               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4615  000AE6  6BAB               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4616                           
  4617                           ; BSR set to: 0
  4618                           ;CANlib.h: 1034: RXF4SIDH = (unsigned char) tamp;
  4619  000AE8  C0A8  FF10         	movff	CANSetFilter@tamp,3856	;volatile
  4620  000AEC                     l4344:
  4621                           
  4622                           ; BSR set to: 0
  4623                           ;CANlib.h: 1035: }
  4624                           ;CANlib.h: 1037: if ((numBuffer ==CAN_FILTER_B2_F4) && (type == CAN_CONFIG_XTD_MSG))
  4625  000AEC  0E05               	movlw	5
  4626  000AEE  0100               	movlb	0	; () banked
  4627  000AF0  19A7               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  4628  000AF2  A4D8               	btfss	status,2,c
  4629  000AF4  0012               	return	
  4630                           
  4631                           ; BSR set to: 0
  4632  000AF6  0EF7               	movlw	247
  4633  000AF8  1822               	xorwf	CANSetFilter@type,w,c
  4634  000AFA  A4D8               	btfss	status,2,c
  4635  000AFC  0012               	return	
  4636                           
  4637                           ; BSR set to: 0
  4638                           ;CANlib.h: 1038: {
  4639                           ;CANlib.h: 1039: RXF5SIDLbits.EXIDEN = 0x01;
  4640  000AFE  010F               	movlb	15	; () banked
  4641  000B00  8715               	bsf	21,3,b	;volatile
  4642                           
  4643                           ; BSR set to: 15
  4644                           ;CANlib.h: 1041: tamp = filter & 0x000000FF;
  4645  000B02  501E               	movf	CANSetFilter@filter,w,c
  4646  000B04  0100               	movlb	0	; () banked
  4647  000B06  6FA8               	movwf	CANSetFilter@tamp& (0+255),b
  4648  000B08  6BA9               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4649  000B0A  6BAA               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4650  000B0C  6BAB               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4651                           
  4652                           ; BSR set to: 0
  4653                           ;CANlib.h: 1042: RXF5EIDL = (unsigned char) tamp;
  4654  000B0E  C0A8  FF17         	movff	CANSetFilter@tamp,3863	;volatile
  4655                           
  4656                           ; BSR set to: 0
  4657                           ;CANlib.h: 1044: tamp = filter & 0x0000FF00;
  4658  000B12  0E00               	movlw	0
  4659  000B14  141E               	andwf	CANSetFilter@filter,w,c
  4660  000B16  0100               	movlb	0	; () banked
  4661  000B18  6FA8               	movwf	CANSetFilter@tamp& (0+255),b
  4662  000B1A  0EFF               	movlw	255
  4663  000B1C  141F               	andwf	CANSetFilter@filter+1,w,c
  4664  000B1E  0100               	movlb	0	; () banked
  4665  000B20  6FA9               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  4666  000B22  0E00               	movlw	0
  4667  000B24  1420               	andwf	CANSetFilter@filter+2,w,c
  4668  000B26  0100               	movlb	0	; () banked
  4669  000B28  6FAA               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  4670  000B2A  0E00               	movlw	0
  4671  000B2C  1421               	andwf	CANSetFilter@filter+3,w,c
  4672  000B2E  0100               	movlb	0	; () banked
  4673  000B30  6FAB               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  4674                           
  4675                           ; BSR set to: 0
  4676                           ;CANlib.h: 1045: tamp = tamp >> 8;
  4677  000B32  C0A8  F0A3         	movff	CANSetFilter@tamp,??_CANSetFilter
  4678  000B36  C0A9  F0A4         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  4679  000B3A  C0AA  F0A5         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  4680  000B3E  C0AB  F0A6         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  4681  000B42  C0A4  F0A3         	movff	??_CANSetFilter+1,??_CANSetFilter
  4682  000B46  C0A5  F0A4         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  4683  000B4A  C0A6  F0A5         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  4684  000B4E  0100               	movlb	0	; () banked
  4685  000B50  6BA6               	clrf	(??_CANSetFilter+3)& (0+255),b
  4686  000B52  C0A3  F0A8         	movff	??_CANSetFilter,CANSetFilter@tamp
  4687  000B56  C0A4  F0A9         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4688  000B5A  C0A5  F0AA         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4689  000B5E  C0A6  F0AB         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4690                           
  4691                           ; BSR set to: 0
  4692                           ;CANlib.h: 1046: RXF5EIDH = (unsigned char) tamp;
  4693  000B62  C0A8  FF16         	movff	CANSetFilter@tamp,3862	;volatile
  4694                           
  4695                           ; BSR set to: 0
  4696                           ;CANlib.h: 1048: if (filter & 0x00010000)
  4697  000B66  A020               	btfss	CANSetFilter@filter+2,0,c
  4698  000B68  D003               	goto	l520
  4699                           
  4700                           ; BSR set to: 0
  4701                           ;CANlib.h: 1049: RXF5SIDLbits.EID16 = 0x01;
  4702  000B6A  010F               	movlb	15	; () banked
  4703  000B6C  8115               	bsf	21,0,b	;volatile
  4704  000B6E  D002               	goto	l521
  4705  000B70                     l520:
  4706                           
  4707                           ; BSR set to: 0
  4708                           ;CANlib.h: 1050: else
  4709                           ;CANlib.h: 1051: RXF5SIDLbits.EID16 = 0x00;
  4710  000B70  010F               	movlb	15	; () banked
  4711  000B72  9115               	bcf	21,0,b	;volatile
  4712  000B74                     l521:
  4713                           
  4714                           ; BSR set to: 15
  4715                           ;CANlib.h: 1053: if (filter & 0x00020000)
  4716  000B74  A220               	btfss	CANSetFilter@filter+2,1,c
  4717  000B76  D003               	goto	l522
  4718                           
  4719                           ; BSR set to: 15
  4720                           ;CANlib.h: 1054: RXF5SIDLbits.EID17 = 0x01;
  4721  000B78  010F               	movlb	15	; () banked
  4722  000B7A  8315               	bsf	21,1,b	;volatile
  4723  000B7C  D002               	goto	l523
  4724  000B7E                     l522:
  4725                           
  4726                           ; BSR set to: 15
  4727                           ;CANlib.h: 1055: else
  4728                           ;CANlib.h: 1056: RXF5SIDLbits.EID17 = 0x00;
  4729  000B7E  010F               	movlb	15	; () banked
  4730  000B80  9315               	bcf	21,1,b	;volatile
  4731  000B82                     l523:
  4732                           
  4733                           ; BSR set to: 15
  4734                           ;CANlib.h: 1058: if (filter & 0x00040000)
  4735  000B82  A420               	btfss	CANSetFilter@filter+2,2,c
  4736  000B84  D003               	goto	l524
  4737                           
  4738                           ; BSR set to: 15
  4739                           ;CANlib.h: 1059: RXF5SIDLbits.SID0 = 0x01;
  4740  000B86  010F               	movlb	15	; () banked
  4741  000B88  8B15               	bsf	21,5,b	;volatile
  4742  000B8A  D002               	goto	l525
  4743  000B8C                     l524:
  4744                           
  4745                           ; BSR set to: 15
  4746                           ;CANlib.h: 1060: else
  4747                           ;CANlib.h: 1061: RXF5SIDLbits.SID0 = 0x00;
  4748  000B8C  010F               	movlb	15	; () banked
  4749  000B8E  9B15               	bcf	21,5,b	;volatile
  4750  000B90                     l525:
  4751                           
  4752                           ; BSR set to: 15
  4753                           ;CANlib.h: 1063: if (filter & 0x00080000)
  4754  000B90  A620               	btfss	CANSetFilter@filter+2,3,c
  4755  000B92  D003               	goto	l526
  4756                           
  4757                           ; BSR set to: 15
  4758                           ;CANlib.h: 1064: RXF5SIDLbits.SID1 = 0x01;
  4759  000B94  010F               	movlb	15	; () banked
  4760  000B96  8D15               	bsf	21,6,b	;volatile
  4761  000B98  D002               	goto	l527
  4762  000B9A                     l526:
  4763                           
  4764                           ; BSR set to: 15
  4765                           ;CANlib.h: 1065: else
  4766                           ;CANlib.h: 1066: RXF5SIDLbits.SID1 = 0x00;
  4767  000B9A  010F               	movlb	15	; () banked
  4768  000B9C  9D15               	bcf	21,6,b	;volatile
  4769  000B9E                     l527:
  4770                           
  4771                           ; BSR set to: 15
  4772                           ;CANlib.h: 1068: if (filter & 0x00100000)
  4773  000B9E  A820               	btfss	CANSetFilter@filter+2,4,c
  4774  000BA0  D003               	goto	l528
  4775                           
  4776                           ; BSR set to: 15
  4777                           ;CANlib.h: 1069: RXF5SIDLbits.SID2 = 0x01 ;
  4778  000BA2  010F               	movlb	15	; () banked
  4779  000BA4  8F15               	bsf	21,7,b	;volatile
  4780  000BA6  D002               	goto	l4372
  4781  000BA8                     l528:
  4782                           
  4783                           ; BSR set to: 15
  4784                           ;CANlib.h: 1070: else
  4785                           ;CANlib.h: 1071: RXF5SIDLbits.SID2 = 0x00 ;
  4786  000BA8  010F               	movlb	15	; () banked
  4787  000BAA  9F15               	bcf	21,7,b	;volatile
  4788  000BAC                     l4372:
  4789                           
  4790                           ; BSR set to: 15
  4791                           ;CANlib.h: 1073: tamp = (filter >> 21);
  4792  000BAC  C01E  F0A3         	movff	CANSetFilter@filter,??_CANSetFilter
  4793  000BB0  C01F  F0A4         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  4794  000BB4  C020  F0A5         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  4795  000BB8  C021  F0A6         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  4796  000BBC  0E16               	movlw	22
  4797  000BBE  D006               	goto	u5670
  4798  000BC0                     u5675:
  4799  000BC0  0100               	movlb	0	; () banked
  4800  000BC2  90D8               	bcf	status,0,c
  4801  000BC4  33A6               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  4802  000BC6  33A5               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  4803  000BC8  33A4               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  4804  000BCA  33A3               	rrcf	??_CANSetFilter& (0+255),f,b
  4805  000BCC                     u5670:
  4806  000BCC  2EE8               	decfsz	wreg,f,c
  4807  000BCE  D7F8               	goto	u5675
  4808  000BD0  C0A3  F0A8         	movff	??_CANSetFilter,CANSetFilter@tamp
  4809  000BD4  C0A4  F0A9         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4810  000BD8  C0A5  F0AA         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4811  000BDC  C0A6  F0AB         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4812                           
  4813                           ; BSR set to: 0
  4814                           ;CANlib.h: 1074: tamp = tamp & 0x000000FF;
  4815  000BE0  0100               	movlb	0	; () banked
  4816  000BE2  51A8               	movf	CANSetFilter@tamp& (0+255),w,b
  4817  000BE4  0100               	movlb	0	; () banked
  4818  000BE6  6FA8               	movwf	CANSetFilter@tamp& (0+255),b
  4819  000BE8  6BA9               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4820  000BEA  6BAA               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4821  000BEC  6BAB               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4822                           
  4823                           ; BSR set to: 0
  4824                           ;CANlib.h: 1075: RXF5SIDH = (unsigned char) tamp;
  4825  000BEE  C0A8  FF14         	movff	CANSetFilter@tamp,3860	;volatile
  4826  000BF2  0012               	return	
  4827  000BF4                     __end_of_CANSetFilter:
  4828                           	opt stack 0
  4829                           tblptru	equ	0xFF8
  4830                           tblptrh	equ	0xFF7
  4831                           tblptrl	equ	0xFF6
  4832                           tablat	equ	0xFF5
  4833                           prodh	equ	0xFF4
  4834                           prodl	equ	0xFF3
  4835                           intcon	equ	0xFF2
  4836                           intcon2	equ	0xFF1
  4837                           postinc0	equ	0xFEE
  4838                           wreg	equ	0xFE8
  4839                           indf1	equ	0xFE7
  4840                           fsr1h	equ	0xFE2
  4841                           fsr1l	equ	0xFE1
  4842                           indf2	equ	0xFDF
  4843                           fsr2h	equ	0xFDA
  4844                           fsr2l	equ	0xFD9
  4845                           status	equ	0xFD8
  4846                           
  4847 ;; *************** function _CANOperationMode *****************
  4848 ;; Defined at:
  4849 ;;		line 206 in file "CANlib.h"
  4850 ;; Parameters:    Size  Location     Type
  4851 ;;  mode            1    wreg     enum E16838
  4852 ;; Auto vars:     Size  Location     Type
  4853 ;;  mode            1   29[COMRAM] enum E16838
  4854 ;; Return value:  Size  Location     Type
  4855 ;;		None               void
  4856 ;; Registers used:
  4857 ;;		wreg, status,2, status,0
  4858 ;; Tracked objects:
  4859 ;;		On entry : 0/0
  4860 ;;		On exit  : 0/0
  4861 ;;		Unchanged: 0/0
  4862 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  4863 ;;      Params:         0       0       0       0
  4864 ;;      Locals:         1       0       0       0
  4865 ;;      Temps:          0       0       0       0
  4866 ;;      Totals:         1       0       0       0
  4867 ;;Total ram usage:        1 bytes
  4868 ;; Hardware stack levels used:    1
  4869 ;; Hardware stack levels required when called:    2
  4870 ;; This function calls:
  4871 ;;		Nothing
  4872 ;; This function is called by:
  4873 ;;		_CANInitialize
  4874 ;; This function uses a non-reentrant model
  4875 ;;
  4876                           
  4877                           	psect	text7
  4878  0025F2                     __ptext7:
  4879                           	opt stack 0
  4880  0025F2                     _CANOperationMode:
  4881                           	opt stack 26
  4882                           
  4883                           ; BSR set to: 0
  4884                           ;incstack = 0
  4885                           ;CANOperationMode@mode stored from wreg
  4886  0025F2  6E1E               	movwf	CANOperationMode@mode,c
  4887                           
  4888                           ;CANlib.h: 208: CANCON = mode;
  4889  0025F4  C01E  FF6F         	movff	CANOperationMode@mode,3951	;volatile
  4890  0025F8                     l3968:
  4891  0025F8  506E               	movf	3950,w,c	;volatile
  4892  0025FA  0BE0               	andlw	224
  4893  0025FC  181E               	xorwf	CANOperationMode@mode,w,c
  4894  0025FE  B4D8               	btfsc	status,2,c
  4895  002600  0012               	return	
  4896  002602  D7FA               	goto	l3968
  4897  002604                     __end_of_CANOperationMode:
  4898                           	opt stack 0
  4899                           tblptru	equ	0xFF8
  4900                           tblptrh	equ	0xFF7
  4901                           tblptrl	equ	0xFF6
  4902                           tablat	equ	0xFF5
  4903                           prodh	equ	0xFF4
  4904                           prodl	equ	0xFF3
  4905                           intcon	equ	0xFF2
  4906                           intcon2	equ	0xFF1
  4907                           postinc0	equ	0xFEE
  4908                           wreg	equ	0xFE8
  4909                           indf1	equ	0xFE7
  4910                           fsr1h	equ	0xFE2
  4911                           fsr1l	equ	0xFE1
  4912                           indf2	equ	0xFDF
  4913                           fsr2h	equ	0xFDA
  4914                           fsr2l	equ	0xFD9
  4915                           status	equ	0xFD8
  4916                           
  4917 ;; *************** function _battery_measure *****************
  4918 ;; Defined at:
  4919 ;;		line 261 in file "motore.c"
  4920 ;; Parameters:    Size  Location     Type
  4921 ;;		None
  4922 ;; Auto vars:     Size  Location     Type
  4923 ;;		None
  4924 ;; Return value:  Size  Location     Type
  4925 ;;		None               void
  4926 ;; Registers used:
  4927 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4928 ;; Tracked objects:
  4929 ;;		On entry : 0/0
  4930 ;;		On exit  : 0/0
  4931 ;;		Unchanged: 0/0
  4932 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  4933 ;;      Params:         0       0       0       0
  4934 ;;      Locals:         0       0       0       0
  4935 ;;      Temps:          0       0       0       0
  4936 ;;      Totals:         0       0       0       0
  4937 ;;Total ram usage:        0 bytes
  4938 ;; Hardware stack levels used:    1
  4939 ;; Hardware stack levels required when called:    3
  4940 ;; This function calls:
  4941 ;;		_CANisTxReady
  4942 ;;		_CANsendMessage
  4943 ;;		___awdiv
  4944 ;;		___wmul
  4945 ;; This function is called by:
  4946 ;;		_main
  4947 ;; This function uses a non-reentrant model
  4948 ;;
  4949                           
  4950                           	psect	text8
  4951  0023CA                     __ptext8:
  4952                           	opt stack 0
  4953  0023CA                     _battery_measure:
  4954                           	opt stack 27
  4955                           
  4956                           ;motore.c: 262: ADCON0bits.GO = 1;
  4957                           
  4958                           ;incstack = 0
  4959  0023CA  82C2               	bsf	4034,1,c	;volatile
  4960  0023CC                     l713:
  4961  0023CC  B2C2               	btfsc	4034,1,c	;volatile
  4962  0023CE  D7FE               	goto	l713
  4963                           
  4964                           ;motore.c: 264: vBatt = ADRESH;
  4965  0023D0  CFC4 F037          	movff	4036,_vBatt	;volatile
  4966  0023D4  6A38               	clrf	_vBatt+1,c
  4967                           
  4968                           ;motore.c: 265: vBatt = (vBatt * 14) / 235;
  4969  0023D6  C037  F0A7         	movff	_vBatt,___wmul@multiplier
  4970  0023DA  C038  F0A8         	movff	_vBatt+1,___wmul@multiplier+1
  4971  0023DE  0E00               	movlw	0
  4972  0023E0  0100               	movlb	0	; () banked
  4973  0023E2  6FAA               	movwf	(___wmul@multiplicand+1)& (0+255),b
  4974  0023E4  0E0E               	movlw	14
  4975  0023E6  6FA9               	movwf	___wmul@multiplicand& (0+255),b
  4976  0023E8  ECA4  F012         	call	___wmul	;wreg free
  4977  0023EC  C0A7  F01E         	movff	?___wmul,___awdiv@dividend
  4978  0023F0  C0A8  F01F         	movff	?___wmul+1,___awdiv@dividend+1
  4979  0023F4  0E00               	movlw	0
  4980  0023F6  6E21               	movwf	___awdiv@divisor+1,c
  4981  0023F8  0EEB               	movlw	235
  4982  0023FA  6E20               	movwf	___awdiv@divisor,c
  4983  0023FC  EC97  F011         	call	___awdiv	;wreg free
  4984  002400  C01E  F037         	movff	?___awdiv,_vBatt
  4985  002404  C01F  F038         	movff	?___awdiv+1,_vBatt+1
  4986                           
  4987                           ;motore.c: 266: if (vBatt < 10) {
  4988  002408  BE38               	btfsc	_vBatt+1,7,c
  4989  00240A  D006               	goto	l4850
  4990  00240C  5038               	movf	_vBatt+1,w,c
  4991  00240E  E121               	bnz	l720
  4992  002410  0E0A               	movlw	10
  4993  002412  5C37               	subwf	_vBatt,w,c
  4994  002414  B0D8               	btfsc	status,0,c
  4995  002416  0012               	return	
  4996  002418                     l4850:
  4997  002418  ECD1  F012         	call	_CANisTxReady	;wreg free
  4998  00241C  0900               	iorlw	0
  4999  00241E  B4D8               	btfsc	status,2,c
  5000  002420  D7FB               	goto	l4850
  5001                           
  5002                           ;motore.c: 269: CANsendMessage(0b00000000000000000000000001001, data_array, 8, CAN_CONFI
      +                          G_STD_MSG & CAN_REMOTE_TX_FRAME & CAN_TX_PRIORITY_0);
  5003  002422  0E09               	movlw	9
  5004  002424  0100               	movlb	0	; () banked
  5005  002426  6FA3               	movwf	CANsendMessage@identifier& (0+255),b
  5006  002428  0E00               	movlw	0
  5007  00242A  6FA4               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  5008  00242C  0E00               	movlw	0
  5009  00242E  6FA5               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  5010  002430  0E00               	movlw	0
  5011  002432  6FA6               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  5012  002434  0E93               	movlw	low _data_array
  5013  002436  0100               	movlb	0	; () banked
  5014  002438  6FA7               	movwf	CANsendMessage@data& (0+255),b
  5015  00243A  0E00               	movlw	high _data_array
  5016  00243C  0100               	movlb	0	; () banked
  5017  00243E  6FA8               	movwf	(CANsendMessage@data+1)& (0+255),b
  5018  002440  0E08               	movlw	8
  5019  002442  0100               	movlb	0	; () banked
  5020  002444  6FA9               	movwf	CANsendMessage@dataLength& (0+255),b
  5021  002446  0EFC               	movlw	252
  5022  002448  0100               	movlb	0	; () banked
  5023  00244A  6FAA               	movwf	CANsendMessage@flags& (0+255),b
  5024  00244C  ECFA  F005         	call	_CANsendMessage	;wreg free
  5025  002450  0012               	return	
  5026  002452                     l720:
  5027  002452  0012               	return		;funcret
  5028  002454                     __end_of_battery_measure:
  5029                           	opt stack 0
  5030                           tblptru	equ	0xFF8
  5031                           tblptrh	equ	0xFF7
  5032                           tblptrl	equ	0xFF6
  5033                           tablat	equ	0xFF5
  5034                           prodh	equ	0xFF4
  5035                           prodl	equ	0xFF3
  5036                           intcon	equ	0xFF2
  5037                           intcon2	equ	0xFF1
  5038                           postinc0	equ	0xFEE
  5039                           wreg	equ	0xFE8
  5040                           indf1	equ	0xFE7
  5041                           fsr1h	equ	0xFE2
  5042                           fsr1l	equ	0xFE1
  5043                           indf2	equ	0xFDF
  5044                           fsr2h	equ	0xFDA
  5045                           fsr2l	equ	0xFD9
  5046                           status	equ	0xFD8
  5047                           
  5048 ;; *************** function ___wmul *****************
  5049 ;; Defined at:
  5050 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\Umul16.c"
  5051 ;; Parameters:    Size  Location     Type
  5052 ;;  multiplier      2    4[BANK0 ] unsigned int 
  5053 ;;  multiplicand    2    6[BANK0 ] unsigned int 
  5054 ;; Auto vars:     Size  Location     Type
  5055 ;;  product         2   33[COMRAM] unsigned int 
  5056 ;; Return value:  Size  Location     Type
  5057 ;;                  2    4[BANK0 ] unsigned int 
  5058 ;; Registers used:
  5059 ;;		wreg, status,2, status,0, prodl, prodh
  5060 ;; Tracked objects:
  5061 ;;		On entry : 0/0
  5062 ;;		On exit  : 0/0
  5063 ;;		Unchanged: 0/0
  5064 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  5065 ;;      Params:         0       4       0       0
  5066 ;;      Locals:         2       0       0       0
  5067 ;;      Temps:          0       0       0       0
  5068 ;;      Totals:         2       4       0       0
  5069 ;;Total ram usage:        6 bytes
  5070 ;; Hardware stack levels used:    1
  5071 ;; Hardware stack levels required when called:    2
  5072 ;; This function calls:
  5073 ;;		Nothing
  5074 ;; This function is called by:
  5075 ;;		_delay_ms
  5076 ;;		_main
  5077 ;;		_battery_measure
  5078 ;; This function uses a non-reentrant model
  5079 ;;
  5080                           
  5081                           	psect	text9
  5082  002548                     __ptext9:
  5083                           	opt stack 0
  5084  002548                     ___wmul:
  5085                           	opt stack 27
  5086                           
  5087                           ;incstack = 0
  5088  002548  0100               	movlb	0	; () banked
  5089  00254A  51A7               	movf	___wmul@multiplier& (0+255),w,b
  5090  00254C  0100               	movlb	0	; () banked
  5091  00254E  03A9               	mulwf	___wmul@multiplicand& (0+255),b
  5092  002550  CFF3 F022          	movff	prodl,___wmul@product
  5093  002554  CFF4 F023          	movff	prodh,___wmul@product+1
  5094  002558  0100               	movlb	0	; () banked
  5095  00255A  51A7               	movf	___wmul@multiplier& (0+255),w,b
  5096  00255C  0100               	movlb	0	; () banked
  5097  00255E  03AA               	mulwf	(___wmul@multiplicand+1)& (0+255),b
  5098  002560  50F3               	movf	prodl,w,c
  5099  002562  2623               	addwf	___wmul@product+1,f,c
  5100  002564  0100               	movlb	0	; () banked
  5101  002566  51A8               	movf	(___wmul@multiplier+1)& (0+255),w,b
  5102  002568  0100               	movlb	0	; () banked
  5103  00256A  03A9               	mulwf	___wmul@multiplicand& (0+255),b
  5104  00256C  50F3               	movf	prodl,w,c
  5105  00256E  2623               	addwf	___wmul@product+1,f,c
  5106                           
  5107                           ; BSR set to: 0
  5108  002570  C022  F0A7         	movff	___wmul@product,?___wmul
  5109  002574  C023  F0A8         	movff	___wmul@product+1,?___wmul+1
  5110  002578  0012               	return	
  5111  00257A                     __end_of___wmul:
  5112                           	opt stack 0
  5113                           tblptru	equ	0xFF8
  5114                           tblptrh	equ	0xFF7
  5115                           tblptrl	equ	0xFF6
  5116                           tablat	equ	0xFF5
  5117                           prodh	equ	0xFF4
  5118                           prodl	equ	0xFF3
  5119                           intcon	equ	0xFF2
  5120                           intcon2	equ	0xFF1
  5121                           postinc0	equ	0xFEE
  5122                           wreg	equ	0xFE8
  5123                           indf1	equ	0xFE7
  5124                           fsr1h	equ	0xFE2
  5125                           fsr1l	equ	0xFE1
  5126                           indf2	equ	0xFDF
  5127                           fsr2h	equ	0xFDA
  5128                           fsr2l	equ	0xFD9
  5129                           status	equ	0xFD8
  5130                           
  5131 ;; *************** function ___awdiv *****************
  5132 ;; Defined at:
  5133 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\awdiv.c"
  5134 ;; Parameters:    Size  Location     Type
  5135 ;;  dividend        2   29[COMRAM] int 
  5136 ;;  divisor         2   31[COMRAM] int 
  5137 ;; Auto vars:     Size  Location     Type
  5138 ;;  quotient        2    2[BANK0 ] int 
  5139 ;;  sign            1    1[BANK0 ] unsigned char 
  5140 ;;  counter         1    0[BANK0 ] unsigned char 
  5141 ;; Return value:  Size  Location     Type
  5142 ;;                  2   29[COMRAM] int 
  5143 ;; Registers used:
  5144 ;;		wreg, status,2, status,0
  5145 ;; Tracked objects:
  5146 ;;		On entry : 0/0
  5147 ;;		On exit  : 0/0
  5148 ;;		Unchanged: 0/0
  5149 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  5150 ;;      Params:         4       0       0       0
  5151 ;;      Locals:         0       4       0       0
  5152 ;;      Temps:          0       0       0       0
  5153 ;;      Totals:         4       4       0       0
  5154 ;;Total ram usage:        8 bytes
  5155 ;; Hardware stack levels used:    1
  5156 ;; Hardware stack levels required when called:    2
  5157 ;; This function calls:
  5158 ;;		Nothing
  5159 ;; This function is called by:
  5160 ;;		_main
  5161 ;;		_battery_measure
  5162 ;; This function uses a non-reentrant model
  5163 ;;
  5164                           
  5165                           	psect	text10
  5166  00232E                     __ptext10:
  5167                           	opt stack 0
  5168  00232E                     ___awdiv:
  5169                           	opt stack 27
  5170                           
  5171                           ; BSR set to: 0
  5172                           ;incstack = 0
  5173  00232E  0E00               	movlw	0
  5174  002330  0100               	movlb	0	; () banked
  5175  002332  6FA4               	movwf	___awdiv@sign& (0+255),b
  5176                           
  5177                           ; BSR set to: 0
  5178  002334  AE21               	btfss	___awdiv@divisor+1,7,c
  5179  002336  D007               	goto	l4680
  5180                           
  5181                           ; BSR set to: 0
  5182  002338  6C20               	negf	___awdiv@divisor,c
  5183  00233A  1E21               	comf	___awdiv@divisor+1,f,c
  5184  00233C  B0D8               	btfsc	status,0,c
  5185  00233E  2A21               	incf	___awdiv@divisor+1,f,c
  5186                           
  5187                           ; BSR set to: 0
  5188  002340  0E01               	movlw	1
  5189  002342  0100               	movlb	0	; () banked
  5190  002344  6FA4               	movwf	___awdiv@sign& (0+255),b
  5191  002346                     l4680:
  5192                           
  5193                           ; BSR set to: 0
  5194  002346  AE1F               	btfss	___awdiv@dividend+1,7,c
  5195  002348  D007               	goto	l4686
  5196                           
  5197                           ; BSR set to: 0
  5198  00234A  6C1E               	negf	___awdiv@dividend,c
  5199  00234C  1E1F               	comf	___awdiv@dividend+1,f,c
  5200  00234E  B0D8               	btfsc	status,0,c
  5201  002350  2A1F               	incf	___awdiv@dividend+1,f,c
  5202                           
  5203                           ; BSR set to: 0
  5204  002352  0E01               	movlw	1
  5205  002354  0100               	movlb	0	; () banked
  5206  002356  1BA4               	xorwf	___awdiv@sign& (0+255),f,b
  5207  002358                     l4686:
  5208                           
  5209                           ; BSR set to: 0
  5210  002358  0E00               	movlw	0
  5211  00235A  0100               	movlb	0	; () banked
  5212  00235C  6FA6               	movwf	(___awdiv@quotient+1)& (0+255),b
  5213  00235E  0E00               	movlw	0
  5214  002360  6FA5               	movwf	___awdiv@quotient& (0+255),b
  5215                           
  5216                           ; BSR set to: 0
  5217  002362  5020               	movf	___awdiv@divisor,w,c
  5218  002364  1021               	iorwf	___awdiv@divisor+1,w,c
  5219  002366  B4D8               	btfsc	status,2,c
  5220  002368  D021               	goto	l4708
  5221                           
  5222                           ; BSR set to: 0
  5223  00236A  0E01               	movlw	1
  5224  00236C  0100               	movlb	0	; () banked
  5225  00236E  6FA3               	movwf	___awdiv@counter& (0+255),b
  5226  002370  D005               	goto	l4694
  5227  002372                     l4692:
  5228                           
  5229                           ; BSR set to: 0
  5230  002372  90D8               	bcf	status,0,c
  5231  002374  3620               	rlcf	___awdiv@divisor,f,c
  5232  002376  3621               	rlcf	___awdiv@divisor+1,f,c
  5233  002378  0100               	movlb	0	; () banked
  5234  00237A  2BA3               	incf	___awdiv@counter& (0+255),f,b
  5235  00237C                     l4694:
  5236                           
  5237                           ; BSR set to: 0
  5238  00237C  AE21               	btfss	___awdiv@divisor+1,7,c
  5239  00237E  D7F9               	goto	l4692
  5240  002380                     l4696:
  5241                           
  5242                           ; BSR set to: 0
  5243  002380  0100               	movlb	0	; () banked
  5244  002382  90D8               	bcf	status,0,c
  5245  002384  37A5               	rlcf	___awdiv@quotient& (0+255),f,b
  5246  002386  37A6               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
  5247                           
  5248                           ; BSR set to: 0
  5249  002388  5020               	movf	___awdiv@divisor,w,c
  5250  00238A  5C1E               	subwf	___awdiv@dividend,w,c
  5251  00238C  5021               	movf	___awdiv@divisor+1,w,c
  5252  00238E  581F               	subwfb	___awdiv@dividend+1,w,c
  5253  002390  A0D8               	btfss	status,0,c
  5254  002392  D006               	goto	l4704
  5255                           
  5256                           ; BSR set to: 0
  5257  002394  5020               	movf	___awdiv@divisor,w,c
  5258  002396  5E1E               	subwf	___awdiv@dividend,f,c
  5259  002398  5021               	movf	___awdiv@divisor+1,w,c
  5260  00239A  5A1F               	subwfb	___awdiv@dividend+1,f,c
  5261                           
  5262                           ; BSR set to: 0
  5263  00239C  0100               	movlb	0	; () banked
  5264  00239E  81A5               	bsf	___awdiv@quotient& (0+255),0,b
  5265  0023A0                     l4704:
  5266                           
  5267                           ; BSR set to: 0
  5268  0023A0  90D8               	bcf	status,0,c
  5269  0023A2  3221               	rrcf	___awdiv@divisor+1,f,c
  5270  0023A4  3220               	rrcf	___awdiv@divisor,f,c
  5271                           
  5272                           ; BSR set to: 0
  5273  0023A6  0100               	movlb	0	; () banked
  5274  0023A8  2FA3               	decfsz	___awdiv@counter& (0+255),f,b
  5275  0023AA  D7EA               	goto	l4696
  5276  0023AC                     l4708:
  5277                           
  5278                           ; BSR set to: 0
  5279  0023AC  0100               	movlb	0	; () banked
  5280  0023AE  51A4               	movf	___awdiv@sign& (0+255),w,b
  5281  0023B0  0100               	movlb	0	; () banked
  5282  0023B2  B4D8               	btfsc	status,2,c
  5283  0023B4  D005               	goto	l4712
  5284                           
  5285                           ; BSR set to: 0
  5286  0023B6  0100               	movlb	0	; () banked
  5287  0023B8  6DA5               	negf	___awdiv@quotient& (0+255),b
  5288  0023BA  1FA6               	comf	(___awdiv@quotient+1)& (0+255),f,b
  5289  0023BC  B0D8               	btfsc	status,0,c
  5290  0023BE  2BA6               	incf	(___awdiv@quotient+1)& (0+255),f,b
  5291  0023C0                     l4712:
  5292                           
  5293                           ; BSR set to: 0
  5294  0023C0  C0A5  F01E         	movff	___awdiv@quotient,?___awdiv
  5295  0023C4  C0A6  F01F         	movff	___awdiv@quotient+1,?___awdiv+1
  5296  0023C8  0012               	return	
  5297  0023CA                     __end_of___awdiv:
  5298                           	opt stack 0
  5299                           tblptru	equ	0xFF8
  5300                           tblptrh	equ	0xFF7
  5301                           tblptrl	equ	0xFF6
  5302                           tablat	equ	0xFF5
  5303                           prodh	equ	0xFF4
  5304                           prodl	equ	0xFF3
  5305                           intcon	equ	0xFF2
  5306                           intcon2	equ	0xFF1
  5307                           postinc0	equ	0xFEE
  5308                           wreg	equ	0xFE8
  5309                           indf1	equ	0xFE7
  5310                           fsr1h	equ	0xFE2
  5311                           fsr1l	equ	0xFE1
  5312                           indf2	equ	0xFDF
  5313                           fsr2h	equ	0xFDA
  5314                           fsr2l	equ	0xFD9
  5315                           status	equ	0xFD8
  5316                           
  5317 ;; *************** function _CANsendMessage *****************
  5318 ;; Defined at:
  5319 ;;		line 294 in file "CANlib.h"
  5320 ;; Parameters:    Size  Location     Type
  5321 ;;  identifier      4    0[BANK0 ] unsigned long 
  5322 ;;  data            2    4[BANK0 ] PTR unsigned char 
  5323 ;;		 -> data_array1(8), data_array(8), NULL(0), 
  5324 ;;  dataLength      1    6[BANK0 ] unsigned char 
  5325 ;;  flags           1    7[BANK0 ] enum E16866
  5326 ;; Auto vars:     Size  Location     Type
  5327 ;;  tamp            4    8[BANK0 ] unsigned long 
  5328 ;; Return value:  Size  Location     Type
  5329 ;;		None               void
  5330 ;; Registers used:
  5331 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5332 ;; Tracked objects:
  5333 ;;		On entry : 0/0
  5334 ;;		On exit  : 0/0
  5335 ;;		Unchanged: 0/0
  5336 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  5337 ;;      Params:         0       8       0       0
  5338 ;;      Locals:         0       4       0       0
  5339 ;;      Temps:          4       0       0       0
  5340 ;;      Totals:         4      12       0       0
  5341 ;;Total ram usage:       16 bytes
  5342 ;; Hardware stack levels used:    1
  5343 ;; Hardware stack levels required when called:    2
  5344 ;; This function calls:
  5345 ;;		Nothing
  5346 ;; This function is called by:
  5347 ;;		_main
  5348 ;;		_send_data
  5349 ;;		_battery_measure
  5350 ;; This function uses a non-reentrant model
  5351 ;;
  5352                           
  5353                           	psect	text11
  5354  000BF4                     __ptext11:
  5355                           	opt stack 0
  5356  000BF4                     _CANsendMessage:
  5357                           	opt stack 27
  5358                           
  5359                           ;CANlib.h: 296: unsigned long tamp;
  5360                           ;CANlib.h: 298: if (TXB0CONbits.TXREQ == 0)
  5361                           
  5362                           ; BSR set to: 0
  5363                           ;incstack = 0
  5364  000BF4  010F               	movlb	15	; () banked
  5365  000BF6  B740               	btfsc	64,3,b	;volatile
  5366  000BF8  D13B               	goto	l365
  5367                           
  5368                           ; BSR set to: 15
  5369                           ;CANlib.h: 299: { TXB0DLC = dataLength;
  5370  000BFA  C0A9  FF45         	movff	CANsendMessage@dataLength,3909	;volatile
  5371                           
  5372                           ;CANlib.h: 300: if (0b01000000 & flags)
  5373  000BFE  0100               	movlb	0	; () banked
  5374  000C00  ADAA               	btfss	CANsendMessage@flags& (0+255),6,b
  5375  000C02  D003               	goto	l366
  5376                           
  5377                           ; BSR set to: 0
  5378                           ;CANlib.h: 301: TXB0DLCbits.TXRTR = 0x01;
  5379  000C04  010F               	movlb	15	; () banked
  5380  000C06  8D45               	bsf	69,6,b	;volatile
  5381  000C08  D002               	goto	l367
  5382  000C0A                     l366:
  5383                           
  5384                           ; BSR set to: 0
  5385                           ;CANlib.h: 302: else
  5386                           ;CANlib.h: 303: TXB0DLCbits.TXRTR = 0x00;
  5387  000C0A  010F               	movlb	15	; () banked
  5388  000C0C  9D45               	bcf	69,6,b	;volatile
  5389  000C0E                     l367:
  5390                           
  5391                           ; BSR set to: 15
  5392                           ;CANlib.h: 305: if (CAN_TX_FRAME_MASK & flags)
  5393  000C0E  0100               	movlb	0	; () banked
  5394  000C10  A7AA               	btfss	CANsendMessage@flags& (0+255),3,b
  5395  000C12  D077               	goto	l368
  5396                           
  5397                           ; BSR set to: 0
  5398                           ;CANlib.h: 306: {
  5399                           ;CANlib.h: 308: tamp = identifier & 0x000000FF;
  5400  000C14  0100               	movlb	0	; () banked
  5401  000C16  51A3               	movf	CANsendMessage@identifier& (0+255),w,b
  5402  000C18  0100               	movlb	0	; () banked
  5403  000C1A  6FAB               	movwf	CANsendMessage@tamp& (0+255),b
  5404  000C1C  6BAC               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  5405  000C1E  6BAD               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  5406  000C20  6BAE               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  5407                           
  5408                           ; BSR set to: 0
  5409                           ;CANlib.h: 309: TXB0EIDL = (unsigned char) tamp;
  5410  000C22  C0AB  FF44         	movff	CANsendMessage@tamp,3908	;volatile
  5411                           
  5412                           ; BSR set to: 0
  5413                           ;CANlib.h: 311: tamp = identifier & 0x0000FF00;
  5414  000C26  0E00               	movlw	0
  5415  000C28  0100               	movlb	0	; () banked
  5416  000C2A  15A3               	andwf	CANsendMessage@identifier& (0+255),w,b
  5417  000C2C  0100               	movlb	0	; () banked
  5418  000C2E  6FAB               	movwf	CANsendMessage@tamp& (0+255),b
  5419  000C30  0EFF               	movlw	255
  5420  000C32  0100               	movlb	0	; () banked
  5421  000C34  15A4               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
  5422  000C36  0100               	movlb	0	; () banked
  5423  000C38  6FAC               	movwf	(CANsendMessage@tamp+1)& (0+255),b
  5424  000C3A  0E00               	movlw	0
  5425  000C3C  0100               	movlb	0	; () banked
  5426  000C3E  15A5               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
  5427  000C40  0100               	movlb	0	; () banked
  5428  000C42  6FAD               	movwf	(CANsendMessage@tamp+2)& (0+255),b
  5429  000C44  0E00               	movlw	0
  5430  000C46  0100               	movlb	0	; () banked
  5431  000C48  15A6               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
  5432  000C4A  0100               	movlb	0	; () banked
  5433  000C4C  6FAE               	movwf	(CANsendMessage@tamp+3)& (0+255),b
  5434                           
  5435                           ; BSR set to: 0
  5436                           ;CANlib.h: 312: tamp = tamp >> 8;
  5437  000C4E  C0AB  F01E         	movff	CANsendMessage@tamp,??_CANsendMessage
  5438  000C52  C0AC  F01F         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
  5439  000C56  C0AD  F020         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
  5440  000C5A  C0AE  F021         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
  5441  000C5E  C01F  F01E         	movff	??_CANsendMessage+1,??_CANsendMessage
  5442  000C62  C020  F01F         	movff	??_CANsendMessage+2,??_CANsendMessage+1
  5443  000C66  C021  F020         	movff	??_CANsendMessage+3,??_CANsendMessage+2
  5444  000C6A  6A21               	clrf	??_CANsendMessage+3,c
  5445  000C6C  C01E  F0AB         	movff	??_CANsendMessage,CANsendMessage@tamp
  5446  000C70  C01F  F0AC         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  5447  000C74  C020  F0AD         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  5448  000C78  C021  F0AE         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  5449                           
  5450                           ; BSR set to: 0
  5451                           ;CANlib.h: 313: TXB0EIDH = (unsigned char) tamp;
  5452  000C7C  C0AB  FF43         	movff	CANsendMessage@tamp,3907	;volatile
  5453                           
  5454                           ; BSR set to: 0
  5455                           ;CANlib.h: 315: TXB0SIDL = 0x00;
  5456  000C80  0E00               	movlw	0
  5457  000C82  010F               	movlb	15	; () banked
  5458  000C84  6F42               	movwf	66,b	;volatile
  5459                           
  5460                           ; BSR set to: 15
  5461                           ;CANlib.h: 316: TXB0SIDLbits.EXIDE = 0x01;
  5462  000C86  010F               	movlb	15	; () banked
  5463  000C88  8742               	bsf	66,3,b	;volatile
  5464                           
  5465                           ; BSR set to: 15
  5466                           ;CANlib.h: 318: if (identifier & 0x00010000)
  5467  000C8A  0100               	movlb	0	; () banked
  5468  000C8C  A1A5               	btfss	(CANsendMessage@identifier+2)& (0+255),0,b
  5469  000C8E  D002               	goto	l369
  5470                           
  5471                           ; BSR set to: 0
  5472                           ;CANlib.h: 319: TXB0SIDLbits.EID16 = 0x01;
  5473  000C90  010F               	movlb	15	; () banked
  5474  000C92  8142               	bsf	66,0,b	;volatile
  5475  000C94                     l369:
  5476                           
  5477                           ;CANlib.h: 320: if (identifier & 0x00020000)
  5478  000C94  0100               	movlb	0	; () banked
  5479  000C96  A3A5               	btfss	(CANsendMessage@identifier+2)& (0+255),1,b
  5480  000C98  D002               	goto	l370
  5481                           
  5482                           ; BSR set to: 0
  5483                           ;CANlib.h: 321: TXB0SIDLbits.EID17 = 0x01;
  5484  000C9A  010F               	movlb	15	; () banked
  5485  000C9C  8342               	bsf	66,1,b	;volatile
  5486  000C9E                     l370:
  5487                           
  5488                           ;CANlib.h: 322: if (identifier & 0x00040000)
  5489  000C9E  0100               	movlb	0	; () banked
  5490  000CA0  A5A5               	btfss	(CANsendMessage@identifier+2)& (0+255),2,b
  5491  000CA2  D002               	goto	l371
  5492                           
  5493                           ; BSR set to: 0
  5494                           ;CANlib.h: 323: TXB0SIDLbits.SID0 = 0x01;
  5495  000CA4  010F               	movlb	15	; () banked
  5496  000CA6  8B42               	bsf	66,5,b	;volatile
  5497  000CA8                     l371:
  5498                           
  5499                           ;CANlib.h: 324: if (identifier & 0x00080000)
  5500  000CA8  0100               	movlb	0	; () banked
  5501  000CAA  A7A5               	btfss	(CANsendMessage@identifier+2)& (0+255),3,b
  5502  000CAC  D002               	goto	l372
  5503                           
  5504                           ; BSR set to: 0
  5505                           ;CANlib.h: 325: TXB0SIDLbits.SID1 = 0x01;
  5506  000CAE  010F               	movlb	15	; () banked
  5507  000CB0  8D42               	bsf	66,6,b	;volatile
  5508  000CB2                     l372:
  5509                           
  5510                           ;CANlib.h: 326: if (identifier & 0x00100000)
  5511  000CB2  0100               	movlb	0	; () banked
  5512  000CB4  A9A5               	btfss	(CANsendMessage@identifier+2)& (0+255),4,b
  5513  000CB6  D002               	goto	l4468
  5514                           
  5515                           ; BSR set to: 0
  5516                           ;CANlib.h: 327: TXB0SIDLbits.SID2 = 0x01;
  5517  000CB8  010F               	movlb	15	; () banked
  5518  000CBA  8F42               	bsf	66,7,b	;volatile
  5519  000CBC                     l4468:
  5520                           
  5521                           ;CANlib.h: 329: tamp = (identifier >> 21);
  5522  000CBC  C0A3  F01E         	movff	CANsendMessage@identifier,??_CANsendMessage
  5523  000CC0  C0A4  F01F         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
  5524  000CC4  C0A5  F020         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
  5525  000CC8  C0A6  F021         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
  5526  000CCC  0E16               	movlw	22
  5527  000CCE  D005               	goto	u5800
  5528  000CD0                     u5805:
  5529  000CD0  90D8               	bcf	status,0,c
  5530  000CD2  3221               	rrcf	??_CANsendMessage+3,f,c
  5531  000CD4  3220               	rrcf	??_CANsendMessage+2,f,c
  5532  000CD6  321F               	rrcf	??_CANsendMessage+1,f,c
  5533  000CD8  321E               	rrcf	??_CANsendMessage,f,c
  5534  000CDA                     u5800:
  5535  000CDA  2EE8               	decfsz	wreg,f,c
  5536  000CDC  D7F9               	goto	u5805
  5537  000CDE  C01E  F0AB         	movff	??_CANsendMessage,CANsendMessage@tamp
  5538  000CE2  C01F  F0AC         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  5539  000CE6  C020  F0AD         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  5540  000CEA  C021  F0AE         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  5541                           
  5542                           ;CANlib.h: 330: tamp = tamp & 0x000000FF;
  5543  000CEE  0100               	movlb	0	; () banked
  5544  000CF0  51AB               	movf	CANsendMessage@tamp& (0+255),w,b
  5545  000CF2  0100               	movlb	0	; () banked
  5546  000CF4  6FAB               	movwf	CANsendMessage@tamp& (0+255),b
  5547  000CF6  6BAC               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  5548  000CF8  6BAD               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  5549  000CFA  6BAE               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  5550                           
  5551                           ; BSR set to: 0
  5552                           ;CANlib.h: 331: TXB0SIDH = (unsigned char) tamp;
  5553  000CFC  C0AB  FF41         	movff	CANsendMessage@tamp,3905	;volatile
  5554                           
  5555                           ;CANlib.h: 332: }
  5556  000D00  D057               	goto	l4488
  5557  000D02                     l368:
  5558                           
  5559                           ; BSR set to: 0
  5560                           ;CANlib.h: 334: else
  5561                           ;CANlib.h: 336: {
  5562                           ;CANlib.h: 337: TXB0SIDLbits.EXIDE = 0x00;
  5563  000D02  010F               	movlb	15	; () banked
  5564  000D04  9742               	bcf	66,3,b	;volatile
  5565                           
  5566                           ; BSR set to: 15
  5567                           ;CANlib.h: 339: tamp = (identifier >> 3);
  5568  000D06  C0A3  F01E         	movff	CANsendMessage@identifier,??_CANsendMessage
  5569  000D0A  C0A4  F01F         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
  5570  000D0E  C0A5  F020         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
  5571  000D12  C0A6  F021         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
  5572  000D16  0E04               	movlw	4
  5573  000D18  D005               	goto	u5810
  5574  000D1A                     u5815:
  5575  000D1A  90D8               	bcf	status,0,c
  5576  000D1C  3221               	rrcf	??_CANsendMessage+3,f,c
  5577  000D1E  3220               	rrcf	??_CANsendMessage+2,f,c
  5578  000D20  321F               	rrcf	??_CANsendMessage+1,f,c
  5579  000D22  321E               	rrcf	??_CANsendMessage,f,c
  5580  000D24                     u5810:
  5581  000D24  2EE8               	decfsz	wreg,f,c
  5582  000D26  D7F9               	goto	u5815
  5583  000D28  C01E  F0AB         	movff	??_CANsendMessage,CANsendMessage@tamp
  5584  000D2C  C01F  F0AC         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  5585  000D30  C020  F0AD         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  5586  000D34  C021  F0AE         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  5587                           
  5588                           ; BSR set to: 15
  5589                           ;CANlib.h: 340: tamp = tamp & 0x000000FF;
  5590  000D38  0100               	movlb	0	; () banked
  5591  000D3A  51AB               	movf	CANsendMessage@tamp& (0+255),w,b
  5592  000D3C  0100               	movlb	0	; () banked
  5593  000D3E  6FAB               	movwf	CANsendMessage@tamp& (0+255),b
  5594  000D40  6BAC               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  5595  000D42  6BAD               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  5596  000D44  6BAE               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  5597                           
  5598                           ; BSR set to: 0
  5599                           ;CANlib.h: 341: TXB0SIDH = (unsigned char) tamp;
  5600  000D46  C0AB  FF41         	movff	CANsendMessage@tamp,3905	;volatile
  5601                           
  5602                           ; BSR set to: 0
  5603                           ;CANlib.h: 343: tamp = identifier & 0x00000007;
  5604  000D4A  0E07               	movlw	7
  5605  000D4C  0100               	movlb	0	; () banked
  5606  000D4E  15A3               	andwf	CANsendMessage@identifier& (0+255),w,b
  5607  000D50  0100               	movlb	0	; () banked
  5608  000D52  6FAB               	movwf	CANsendMessage@tamp& (0+255),b
  5609  000D54  0E00               	movlw	0
  5610  000D56  0100               	movlb	0	; () banked
  5611  000D58  15A4               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
  5612  000D5A  0100               	movlb	0	; () banked
  5613  000D5C  6FAC               	movwf	(CANsendMessage@tamp+1)& (0+255),b
  5614  000D5E  0E00               	movlw	0
  5615  000D60  0100               	movlb	0	; () banked
  5616  000D62  15A5               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
  5617  000D64  0100               	movlb	0	; () banked
  5618  000D66  6FAD               	movwf	(CANsendMessage@tamp+2)& (0+255),b
  5619  000D68  0E00               	movlw	0
  5620  000D6A  0100               	movlb	0	; () banked
  5621  000D6C  15A6               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
  5622  000D6E  0100               	movlb	0	; () banked
  5623  000D70  6FAE               	movwf	(CANsendMessage@tamp+3)& (0+255),b
  5624                           
  5625                           ; BSR set to: 0
  5626                           ;CANlib.h: 344: tamp = tamp << 5;
  5627  000D72  C0AB  F01E         	movff	CANsendMessage@tamp,??_CANsendMessage
  5628  000D76  C0AC  F01F         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
  5629  000D7A  C0AD  F020         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
  5630  000D7E  C0AE  F021         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
  5631  000D82  0E05               	movlw	5
  5632  000D84                     u5825:
  5633  000D84  90D8               	bcf	status,0,c
  5634  000D86  361E               	rlcf	??_CANsendMessage,f,c
  5635  000D88  361F               	rlcf	??_CANsendMessage+1,f,c
  5636  000D8A  3620               	rlcf	??_CANsendMessage+2,f,c
  5637  000D8C  3621               	rlcf	??_CANsendMessage+3,f,c
  5638  000D8E  2EE8               	decfsz	wreg,f,c
  5639  000D90  D7F9               	goto	u5825
  5640  000D92  C01E  F0AB         	movff	??_CANsendMessage,CANsendMessage@tamp
  5641  000D96  C01F  F0AC         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  5642  000D9A  C020  F0AD         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  5643  000D9E  C021  F0AE         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  5644                           
  5645                           ; BSR set to: 0
  5646                           ;CANlib.h: 345: TXB0SIDL = TXB0SIDL & 0b00011111;
  5647  000DA2  010F               	movlb	15	; () banked
  5648  000DA4  5142               	movf	66,w,b	;volatile
  5649  000DA6  0B1F               	andlw	31
  5650  000DA8  010F               	movlb	15	; () banked
  5651  000DAA  6F42               	movwf	66,b	;volatile
  5652                           
  5653                           ; BSR set to: 15
  5654                           ;CANlib.h: 346: TXB0SIDL = (unsigned char) tamp;
  5655  000DAC  C0AB  FF42         	movff	CANsendMessage@tamp,3906	;volatile
  5656  000DB0                     l4488:
  5657                           
  5658                           ;CANlib.h: 347: }
  5659                           ;CANlib.h: 349: if (0b00000001 & flags)
  5660  000DB0  0100               	movlb	0	; () banked
  5661  000DB2  A1AA               	btfss	CANsendMessage@flags& (0+255),0,b
  5662  000DB4  D003               	goto	l375
  5663                           
  5664                           ; BSR set to: 0
  5665                           ;CANlib.h: 350: TXB0CONbits.TXPRI0 = 0x01;
  5666  000DB6  010F               	movlb	15	; () banked
  5667  000DB8  8140               	bsf	64,0,b	;volatile
  5668  000DBA  D002               	goto	l376
  5669  000DBC                     l375:
  5670                           
  5671                           ; BSR set to: 0
  5672                           ;CANlib.h: 351: else
  5673                           ;CANlib.h: 352: TXB0CONbits.TXPRI0 = 0x00;
  5674  000DBC  010F               	movlb	15	; () banked
  5675  000DBE  9140               	bcf	64,0,b	;volatile
  5676  000DC0                     l376:
  5677                           
  5678                           ; BSR set to: 15
  5679                           ;CANlib.h: 353: if (0b00000010 & flags)
  5680  000DC0  0100               	movlb	0	; () banked
  5681  000DC2  A3AA               	btfss	CANsendMessage@flags& (0+255),1,b
  5682  000DC4  D003               	goto	l377
  5683                           
  5684                           ; BSR set to: 0
  5685                           ;CANlib.h: 354: TXB0CONbits.TXPRI1 = 0x01;
  5686  000DC6  010F               	movlb	15	; () banked
  5687  000DC8  8340               	bsf	64,1,b	;volatile
  5688  000DCA  D002               	goto	l4494
  5689  000DCC                     l377:
  5690                           
  5691                           ; BSR set to: 0
  5692                           ;CANlib.h: 355: else
  5693                           ;CANlib.h: 356: TXB0CONbits.TXPRI1 = 0x00;
  5694  000DCC  010F               	movlb	15	; () banked
  5695  000DCE  9340               	bcf	64,1,b	;volatile
  5696  000DD0                     l4494:
  5697                           
  5698                           ; BSR set to: 15
  5699                           ;CANlib.h: 358: TXB0D0 = data[0];
  5700  000DD0  C0A7  FFD9         	movff	CANsendMessage@data,fsr2l
  5701  000DD4  C0A8  FFDA         	movff	CANsendMessage@data+1,fsr2h
  5702  000DD8  50DF               	movf	indf2,w,c
  5703  000DDA  010F               	movlb	15	; () banked
  5704  000DDC  6F46               	movwf	70,b	;volatile
  5705                           
  5706                           ; BSR set to: 15
  5707                           ;CANlib.h: 359: TXB0D1 = data[1];
  5708  000DDE  0100               	movlb	0	; () banked
  5709  000DE0  EE20 F001          	lfsr	2,1
  5710  000DE4  51A7               	movf	CANsendMessage@data& (0+255),w,b
  5711  000DE6  26D9               	addwf	fsr2l,f,c
  5712  000DE8  51A8               	movf	(CANsendMessage@data+1)& (0+255),w,b
  5713  000DEA  22DA               	addwfc	fsr2h,f,c
  5714  000DEC  50DF               	movf	indf2,w,c
  5715  000DEE  010F               	movlb	15	; () banked
  5716  000DF0  6F47               	movwf	71,b	;volatile
  5717                           
  5718                           ; BSR set to: 15
  5719                           ;CANlib.h: 360: TXB0D2 = data[2];
  5720  000DF2  0100               	movlb	0	; () banked
  5721  000DF4  EE20 F002          	lfsr	2,2
  5722  000DF8  51A7               	movf	CANsendMessage@data& (0+255),w,b
  5723  000DFA  26D9               	addwf	fsr2l,f,c
  5724  000DFC  51A8               	movf	(CANsendMessage@data+1)& (0+255),w,b
  5725  000DFE  22DA               	addwfc	fsr2h,f,c
  5726  000E00  50DF               	movf	indf2,w,c
  5727  000E02  010F               	movlb	15	; () banked
  5728  000E04  6F48               	movwf	72,b	;volatile
  5729                           
  5730                           ; BSR set to: 15
  5731                           ;CANlib.h: 361: TXB0D3 = data[3];
  5732  000E06  0100               	movlb	0	; () banked
  5733  000E08  EE20 F003          	lfsr	2,3
  5734  000E0C  51A7               	movf	CANsendMessage@data& (0+255),w,b
  5735  000E0E  26D9               	addwf	fsr2l,f,c
  5736  000E10  51A8               	movf	(CANsendMessage@data+1)& (0+255),w,b
  5737  000E12  22DA               	addwfc	fsr2h,f,c
  5738  000E14  50DF               	movf	indf2,w,c
  5739  000E16  010F               	movlb	15	; () banked
  5740  000E18  6F49               	movwf	73,b	;volatile
  5741                           
  5742                           ; BSR set to: 15
  5743                           ;CANlib.h: 362: TXB0D4 = data[4];
  5744  000E1A  0100               	movlb	0	; () banked
  5745  000E1C  EE20 F004          	lfsr	2,4
  5746  000E20  51A7               	movf	CANsendMessage@data& (0+255),w,b
  5747  000E22  26D9               	addwf	fsr2l,f,c
  5748  000E24  51A8               	movf	(CANsendMessage@data+1)& (0+255),w,b
  5749  000E26  22DA               	addwfc	fsr2h,f,c
  5750  000E28  50DF               	movf	indf2,w,c
  5751  000E2A  010F               	movlb	15	; () banked
  5752  000E2C  6F4A               	movwf	74,b	;volatile
  5753                           
  5754                           ; BSR set to: 15
  5755                           ;CANlib.h: 363: TXB0D5 = data[5];
  5756  000E2E  0100               	movlb	0	; () banked
  5757  000E30  EE20 F005          	lfsr	2,5
  5758  000E34  51A7               	movf	CANsendMessage@data& (0+255),w,b
  5759  000E36  26D9               	addwf	fsr2l,f,c
  5760  000E38  51A8               	movf	(CANsendMessage@data+1)& (0+255),w,b
  5761  000E3A  22DA               	addwfc	fsr2h,f,c
  5762  000E3C  50DF               	movf	indf2,w,c
  5763  000E3E  010F               	movlb	15	; () banked
  5764  000E40  6F4B               	movwf	75,b	;volatile
  5765                           
  5766                           ; BSR set to: 15
  5767                           ;CANlib.h: 364: TXB0D6 = data[6];
  5768  000E42  0100               	movlb	0	; () banked
  5769  000E44  EE20 F006          	lfsr	2,6
  5770  000E48  51A7               	movf	CANsendMessage@data& (0+255),w,b
  5771  000E4A  26D9               	addwf	fsr2l,f,c
  5772  000E4C  51A8               	movf	(CANsendMessage@data+1)& (0+255),w,b
  5773  000E4E  22DA               	addwfc	fsr2h,f,c
  5774  000E50  50DF               	movf	indf2,w,c
  5775  000E52  010F               	movlb	15	; () banked
  5776  000E54  6F4C               	movwf	76,b	;volatile
  5777                           
  5778                           ; BSR set to: 15
  5779                           ;CANlib.h: 365: TXB0D7 = data[7];
  5780  000E56  0100               	movlb	0	; () banked
  5781  000E58  EE20 F007          	lfsr	2,7
  5782  000E5C  51A7               	movf	CANsendMessage@data& (0+255),w,b
  5783  000E5E  26D9               	addwf	fsr2l,f,c
  5784  000E60  51A8               	movf	(CANsendMessage@data+1)& (0+255),w,b
  5785  000E62  22DA               	addwfc	fsr2h,f,c
  5786  000E64  50DF               	movf	indf2,w,c
  5787  000E66  010F               	movlb	15	; () banked
  5788  000E68  6F4D               	movwf	77,b	;volatile
  5789                           
  5790                           ; BSR set to: 15
  5791                           ;CANlib.h: 367: TXB0CONbits.TXREQ = 0x01;
  5792  000E6A  010F               	movlb	15	; () banked
  5793  000E6C  8740               	bsf	64,3,b	;volatile
  5794                           
  5795                           ; BSR set to: 15
  5796                           ;CANlib.h: 368: return;
  5797  000E6E  0012               	return	
  5798  000E70                     l365:
  5799                           
  5800                           ; BSR set to: 15
  5801                           ;CANlib.h: 369: }
  5802                           ;CANlib.h: 373: if (TXB1CONbits.TXREQ == 0)
  5803  000E70  010F               	movlb	15	; () banked
  5804  000E72  B730               	btfsc	48,3,b	;volatile
  5805  000E74  D13B               	goto	l380
  5806                           
  5807                           ; BSR set to: 15
  5808                           ;CANlib.h: 374: { TXB1DLC = dataLength;
  5809  000E76  C0A9  FF35         	movff	CANsendMessage@dataLength,3893	;volatile
  5810                           
  5811                           ;CANlib.h: 376: if (0b01000000 & flags)
  5812  000E7A  0100               	movlb	0	; () banked
  5813  000E7C  ADAA               	btfss	CANsendMessage@flags& (0+255),6,b
  5814  000E7E  D003               	goto	l381
  5815                           
  5816                           ; BSR set to: 0
  5817                           ;CANlib.h: 377: TXB1DLCbits.TXRTR = 0x01;
  5818  000E80  010F               	movlb	15	; () banked
  5819  000E82  8D35               	bsf	53,6,b	;volatile
  5820  000E84  D002               	goto	l382
  5821  000E86                     l381:
  5822                           
  5823                           ; BSR set to: 0
  5824                           ;CANlib.h: 378: else
  5825                           ;CANlib.h: 379: TXB1DLCbits.TXRTR = 0x00;
  5826  000E86  010F               	movlb	15	; () banked
  5827  000E88  9D35               	bcf	53,6,b	;volatile
  5828  000E8A                     l382:
  5829                           
  5830                           ; BSR set to: 15
  5831                           ;CANlib.h: 381: if (CAN_TX_FRAME_MASK & flags)
  5832  000E8A  0100               	movlb	0	; () banked
  5833  000E8C  A7AA               	btfss	CANsendMessage@flags& (0+255),3,b
  5834  000E8E  D077               	goto	l383
  5835                           
  5836                           ; BSR set to: 0
  5837                           ;CANlib.h: 382: {
  5838                           ;CANlib.h: 383: tamp = identifier & 0x000000FF;
  5839  000E90  0100               	movlb	0	; () banked
  5840  000E92  51A3               	movf	CANsendMessage@identifier& (0+255),w,b
  5841  000E94  0100               	movlb	0	; () banked
  5842  000E96  6FAB               	movwf	CANsendMessage@tamp& (0+255),b
  5843  000E98  6BAC               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  5844  000E9A  6BAD               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  5845  000E9C  6BAE               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  5846                           
  5847                           ; BSR set to: 0
  5848                           ;CANlib.h: 384: TXB1EIDL = (unsigned char) tamp;
  5849  000E9E  C0AB  FF34         	movff	CANsendMessage@tamp,3892	;volatile
  5850                           
  5851                           ; BSR set to: 0
  5852                           ;CANlib.h: 386: tamp = identifier & 0x0000FF00;
  5853  000EA2  0E00               	movlw	0
  5854  000EA4  0100               	movlb	0	; () banked
  5855  000EA6  15A3               	andwf	CANsendMessage@identifier& (0+255),w,b
  5856  000EA8  0100               	movlb	0	; () banked
  5857  000EAA  6FAB               	movwf	CANsendMessage@tamp& (0+255),b
  5858  000EAC  0EFF               	movlw	255
  5859  000EAE  0100               	movlb	0	; () banked
  5860  000EB0  15A4               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
  5861  000EB2  0100               	movlb	0	; () banked
  5862  000EB4  6FAC               	movwf	(CANsendMessage@tamp+1)& (0+255),b
  5863  000EB6  0E00               	movlw	0
  5864  000EB8  0100               	movlb	0	; () banked
  5865  000EBA  15A5               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
  5866  000EBC  0100               	movlb	0	; () banked
  5867  000EBE  6FAD               	movwf	(CANsendMessage@tamp+2)& (0+255),b
  5868  000EC0  0E00               	movlw	0
  5869  000EC2  0100               	movlb	0	; () banked
  5870  000EC4  15A6               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
  5871  000EC6  0100               	movlb	0	; () banked
  5872  000EC8  6FAE               	movwf	(CANsendMessage@tamp+3)& (0+255),b
  5873                           
  5874                           ; BSR set to: 0
  5875                           ;CANlib.h: 387: tamp = tamp >> 8;
  5876  000ECA  C0AB  F01E         	movff	CANsendMessage@tamp,??_CANsendMessage
  5877  000ECE  C0AC  F01F         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
  5878  000ED2  C0AD  F020         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
  5879  000ED6  C0AE  F021         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
  5880  000EDA  C01F  F01E         	movff	??_CANsendMessage+1,??_CANsendMessage
  5881  000EDE  C020  F01F         	movff	??_CANsendMessage+2,??_CANsendMessage+1
  5882  000EE2  C021  F020         	movff	??_CANsendMessage+3,??_CANsendMessage+2
  5883  000EE6  6A21               	clrf	??_CANsendMessage+3,c
  5884  000EE8  C01E  F0AB         	movff	??_CANsendMessage,CANsendMessage@tamp
  5885  000EEC  C01F  F0AC         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  5886  000EF0  C020  F0AD         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  5887  000EF4  C021  F0AE         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  5888                           
  5889                           ; BSR set to: 0
  5890                           ;CANlib.h: 388: TXB1EIDH = (unsigned char) tamp;
  5891  000EF8  C0AB  FF33         	movff	CANsendMessage@tamp,3891	;volatile
  5892                           
  5893                           ; BSR set to: 0
  5894                           ;CANlib.h: 390: TXB1SIDL = 0x00;
  5895  000EFC  0E00               	movlw	0
  5896  000EFE  010F               	movlb	15	; () banked
  5897  000F00  6F32               	movwf	50,b	;volatile
  5898                           
  5899                           ; BSR set to: 15
  5900                           ;CANlib.h: 391: TXB1SIDLbits.EXIDE = 0x01;
  5901  000F02  010F               	movlb	15	; () banked
  5902  000F04  8732               	bsf	50,3,b	;volatile
  5903                           
  5904                           ; BSR set to: 15
  5905                           ;CANlib.h: 393: if (identifier & 0x00010000)
  5906  000F06  0100               	movlb	0	; () banked
  5907  000F08  A1A5               	btfss	(CANsendMessage@identifier+2)& (0+255),0,b
  5908  000F0A  D002               	goto	l384
  5909                           
  5910                           ; BSR set to: 0
  5911                           ;CANlib.h: 394: TXB1SIDLbits.EID16 = 0x01;
  5912  000F0C  010F               	movlb	15	; () banked
  5913  000F0E  8132               	bsf	50,0,b	;volatile
  5914  000F10                     l384:
  5915                           
  5916                           ;CANlib.h: 395: if (identifier & 0x00020000)
  5917  000F10  0100               	movlb	0	; () banked
  5918  000F12  A3A5               	btfss	(CANsendMessage@identifier+2)& (0+255),1,b
  5919  000F14  D002               	goto	l385
  5920                           
  5921                           ; BSR set to: 0
  5922                           ;CANlib.h: 396: TXB1SIDLbits.EID17 = 0x01;
  5923  000F16  010F               	movlb	15	; () banked
  5924  000F18  8332               	bsf	50,1,b	;volatile
  5925  000F1A                     l385:
  5926                           
  5927                           ;CANlib.h: 397: if (identifier & 0x00040000)
  5928  000F1A  0100               	movlb	0	; () banked
  5929  000F1C  A5A5               	btfss	(CANsendMessage@identifier+2)& (0+255),2,b
  5930  000F1E  D002               	goto	l386
  5931                           
  5932                           ; BSR set to: 0
  5933                           ;CANlib.h: 398: TXB1SIDLbits.SID0 = 0x01;
  5934  000F20  010F               	movlb	15	; () banked
  5935  000F22  8B32               	bsf	50,5,b	;volatile
  5936  000F24                     l386:
  5937                           
  5938                           ;CANlib.h: 399: if (identifier & 0x00080000)
  5939  000F24  0100               	movlb	0	; () banked
  5940  000F26  A7A5               	btfss	(CANsendMessage@identifier+2)& (0+255),3,b
  5941  000F28  D002               	goto	l387
  5942                           
  5943                           ; BSR set to: 0
  5944                           ;CANlib.h: 400: TXB1SIDLbits.SID1 = 0x01;
  5945  000F2A  010F               	movlb	15	; () banked
  5946  000F2C  8D32               	bsf	50,6,b	;volatile
  5947  000F2E                     l387:
  5948                           
  5949                           ;CANlib.h: 401: if (identifier & 0x00100000)
  5950  000F2E  0100               	movlb	0	; () banked
  5951  000F30  A9A5               	btfss	(CANsendMessage@identifier+2)& (0+255),4,b
  5952  000F32  D002               	goto	l4544
  5953                           
  5954                           ; BSR set to: 0
  5955                           ;CANlib.h: 402: TXB1SIDLbits.SID2 = 0x01;
  5956  000F34  010F               	movlb	15	; () banked
  5957  000F36  8F32               	bsf	50,7,b	;volatile
  5958  000F38                     l4544:
  5959                           
  5960                           ;CANlib.h: 404: tamp = (identifier >> 21);
  5961  000F38  C0A3  F01E         	movff	CANsendMessage@identifier,??_CANsendMessage
  5962  000F3C  C0A4  F01F         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
  5963  000F40  C0A5  F020         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
  5964  000F44  C0A6  F021         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
  5965  000F48  0E16               	movlw	22
  5966  000F4A  D005               	goto	u5930
  5967  000F4C                     u5935:
  5968  000F4C  90D8               	bcf	status,0,c
  5969  000F4E  3221               	rrcf	??_CANsendMessage+3,f,c
  5970  000F50  3220               	rrcf	??_CANsendMessage+2,f,c
  5971  000F52  321F               	rrcf	??_CANsendMessage+1,f,c
  5972  000F54  321E               	rrcf	??_CANsendMessage,f,c
  5973  000F56                     u5930:
  5974  000F56  2EE8               	decfsz	wreg,f,c
  5975  000F58  D7F9               	goto	u5935
  5976  000F5A  C01E  F0AB         	movff	??_CANsendMessage,CANsendMessage@tamp
  5977  000F5E  C01F  F0AC         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  5978  000F62  C020  F0AD         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  5979  000F66  C021  F0AE         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  5980                           
  5981                           ;CANlib.h: 405: tamp = tamp & 0x000000FF;
  5982  000F6A  0100               	movlb	0	; () banked
  5983  000F6C  51AB               	movf	CANsendMessage@tamp& (0+255),w,b
  5984  000F6E  0100               	movlb	0	; () banked
  5985  000F70  6FAB               	movwf	CANsendMessage@tamp& (0+255),b
  5986  000F72  6BAC               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  5987  000F74  6BAD               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  5988  000F76  6BAE               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  5989                           
  5990                           ; BSR set to: 0
  5991                           ;CANlib.h: 406: TXB1SIDH = (unsigned char) tamp;
  5992  000F78  C0AB  FF31         	movff	CANsendMessage@tamp,3889	;volatile
  5993                           
  5994                           ;CANlib.h: 407: }
  5995  000F7C  D057               	goto	l4564
  5996  000F7E                     l383:
  5997                           
  5998                           ; BSR set to: 0
  5999                           ;CANlib.h: 409: else
  6000                           ;CANlib.h: 411: {
  6001                           ;CANlib.h: 412: TXB1SIDLbits.EXIDE = 0x00;
  6002  000F7E  010F               	movlb	15	; () banked
  6003  000F80  9732               	bcf	50,3,b	;volatile
  6004                           
  6005                           ; BSR set to: 15
  6006                           ;CANlib.h: 414: tamp = (identifier >> 3);
  6007  000F82  C0A3  F01E         	movff	CANsendMessage@identifier,??_CANsendMessage
  6008  000F86  C0A4  F01F         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
  6009  000F8A  C0A5  F020         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
  6010  000F8E  C0A6  F021         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
  6011  000F92  0E04               	movlw	4
  6012  000F94  D005               	goto	u5940
  6013  000F96                     u5945:
  6014  000F96  90D8               	bcf	status,0,c
  6015  000F98  3221               	rrcf	??_CANsendMessage+3,f,c
  6016  000F9A  3220               	rrcf	??_CANsendMessage+2,f,c
  6017  000F9C  321F               	rrcf	??_CANsendMessage+1,f,c
  6018  000F9E  321E               	rrcf	??_CANsendMessage,f,c
  6019  000FA0                     u5940:
  6020  000FA0  2EE8               	decfsz	wreg,f,c
  6021  000FA2  D7F9               	goto	u5945
  6022  000FA4  C01E  F0AB         	movff	??_CANsendMessage,CANsendMessage@tamp
  6023  000FA8  C01F  F0AC         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  6024  000FAC  C020  F0AD         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  6025  000FB0  C021  F0AE         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  6026                           
  6027                           ; BSR set to: 15
  6028                           ;CANlib.h: 415: tamp = tamp & 0x000000FF;
  6029  000FB4  0100               	movlb	0	; () banked
  6030  000FB6  51AB               	movf	CANsendMessage@tamp& (0+255),w,b
  6031  000FB8  0100               	movlb	0	; () banked
  6032  000FBA  6FAB               	movwf	CANsendMessage@tamp& (0+255),b
  6033  000FBC  6BAC               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  6034  000FBE  6BAD               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  6035  000FC0  6BAE               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  6036                           
  6037                           ; BSR set to: 0
  6038                           ;CANlib.h: 416: TXB1SIDH = (unsigned char) tamp;
  6039  000FC2  C0AB  FF31         	movff	CANsendMessage@tamp,3889	;volatile
  6040                           
  6041                           ; BSR set to: 0
  6042                           ;CANlib.h: 418: tamp = identifier & 0x00000007;
  6043  000FC6  0E07               	movlw	7
  6044  000FC8  0100               	movlb	0	; () banked
  6045  000FCA  15A3               	andwf	CANsendMessage@identifier& (0+255),w,b
  6046  000FCC  0100               	movlb	0	; () banked
  6047  000FCE  6FAB               	movwf	CANsendMessage@tamp& (0+255),b
  6048  000FD0  0E00               	movlw	0
  6049  000FD2  0100               	movlb	0	; () banked
  6050  000FD4  15A4               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
  6051  000FD6  0100               	movlb	0	; () banked
  6052  000FD8  6FAC               	movwf	(CANsendMessage@tamp+1)& (0+255),b
  6053  000FDA  0E00               	movlw	0
  6054  000FDC  0100               	movlb	0	; () banked
  6055  000FDE  15A5               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
  6056  000FE0  0100               	movlb	0	; () banked
  6057  000FE2  6FAD               	movwf	(CANsendMessage@tamp+2)& (0+255),b
  6058  000FE4  0E00               	movlw	0
  6059  000FE6  0100               	movlb	0	; () banked
  6060  000FE8  15A6               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
  6061  000FEA  0100               	movlb	0	; () banked
  6062  000FEC  6FAE               	movwf	(CANsendMessage@tamp+3)& (0+255),b
  6063                           
  6064                           ; BSR set to: 0
  6065                           ;CANlib.h: 419: tamp = tamp << 5;
  6066  000FEE  C0AB  F01E         	movff	CANsendMessage@tamp,??_CANsendMessage
  6067  000FF2  C0AC  F01F         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
  6068  000FF6  C0AD  F020         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
  6069  000FFA  C0AE  F021         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
  6070  000FFE  0E05               	movlw	5
  6071  001000                     u5955:
  6072  001000  90D8               	bcf	status,0,c
  6073  001002  361E               	rlcf	??_CANsendMessage,f,c
  6074  001004  361F               	rlcf	??_CANsendMessage+1,f,c
  6075  001006  3620               	rlcf	??_CANsendMessage+2,f,c
  6076  001008  3621               	rlcf	??_CANsendMessage+3,f,c
  6077  00100A  2EE8               	decfsz	wreg,f,c
  6078  00100C  D7F9               	goto	u5955
  6079  00100E  C01E  F0AB         	movff	??_CANsendMessage,CANsendMessage@tamp
  6080  001012  C01F  F0AC         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  6081  001016  C020  F0AD         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  6082  00101A  C021  F0AE         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  6083                           
  6084                           ; BSR set to: 0
  6085                           ;CANlib.h: 420: TXB1SIDL = TXB1SIDL & 0b00011111;
  6086  00101E  010F               	movlb	15	; () banked
  6087  001020  5132               	movf	50,w,b	;volatile
  6088  001022  0B1F               	andlw	31
  6089  001024  010F               	movlb	15	; () banked
  6090  001026  6F32               	movwf	50,b	;volatile
  6091                           
  6092                           ; BSR set to: 15
  6093                           ;CANlib.h: 421: TXB1SIDL = (unsigned char) tamp;
  6094  001028  C0AB  FF32         	movff	CANsendMessage@tamp,3890	;volatile
  6095  00102C                     l4564:
  6096                           
  6097                           ;CANlib.h: 422: }
  6098                           ;CANlib.h: 424: if (0b00000001 & flags)
  6099  00102C  0100               	movlb	0	; () banked
  6100  00102E  A1AA               	btfss	CANsendMessage@flags& (0+255),0,b
  6101  001030  D003               	goto	l390
  6102                           
  6103                           ; BSR set to: 0
  6104                           ;CANlib.h: 425: TXB1CONbits.TXPRI0 = 0x01;
  6105  001032  010F               	movlb	15	; () banked
  6106  001034  8130               	bsf	48,0,b	;volatile
  6107  001036  D002               	goto	l391
  6108  001038                     l390:
  6109                           
  6110                           ; BSR set to: 0
  6111                           ;CANlib.h: 426: else
  6112                           ;CANlib.h: 427: TXB1CONbits.TXPRI0 = 0x00;
  6113  001038  010F               	movlb	15	; () banked
  6114  00103A  9130               	bcf	48,0,b	;volatile
  6115  00103C                     l391:
  6116                           
  6117                           ; BSR set to: 15
  6118                           ;CANlib.h: 428: if (0b00000010 & flags)
  6119  00103C  0100               	movlb	0	; () banked
  6120  00103E  A3AA               	btfss	CANsendMessage@flags& (0+255),1,b
  6121  001040  D003               	goto	l392
  6122                           
  6123                           ; BSR set to: 0
  6124                           ;CANlib.h: 429: TXB1CONbits.TXPRI1 = 0x01;
  6125  001042  010F               	movlb	15	; () banked
  6126  001044  8330               	bsf	48,1,b	;volatile
  6127  001046  D002               	goto	l4570
  6128  001048                     l392:
  6129                           
  6130                           ; BSR set to: 0
  6131                           ;CANlib.h: 430: else
  6132                           ;CANlib.h: 431: TXB1CONbits.TXPRI1 = 0x00;
  6133  001048  010F               	movlb	15	; () banked
  6134  00104A  9330               	bcf	48,1,b	;volatile
  6135  00104C                     l4570:
  6136                           
  6137                           ; BSR set to: 15
  6138                           ;CANlib.h: 433: TXB1D0 = data[0];
  6139  00104C  C0A7  FFD9         	movff	CANsendMessage@data,fsr2l
  6140  001050  C0A8  FFDA         	movff	CANsendMessage@data+1,fsr2h
  6141  001054  50DF               	movf	indf2,w,c
  6142  001056  010F               	movlb	15	; () banked
  6143  001058  6F36               	movwf	54,b	;volatile
  6144                           
  6145                           ; BSR set to: 15
  6146                           ;CANlib.h: 434: TXB1D1 = data[1];
  6147  00105A  0100               	movlb	0	; () banked
  6148  00105C  EE20 F001          	lfsr	2,1
  6149  001060  51A7               	movf	CANsendMessage@data& (0+255),w,b
  6150  001062  26D9               	addwf	fsr2l,f,c
  6151  001064  51A8               	movf	(CANsendMessage@data+1)& (0+255),w,b
  6152  001066  22DA               	addwfc	fsr2h,f,c
  6153  001068  50DF               	movf	indf2,w,c
  6154  00106A  010F               	movlb	15	; () banked
  6155  00106C  6F37               	movwf	55,b	;volatile
  6156                           
  6157                           ; BSR set to: 15
  6158                           ;CANlib.h: 435: TXB1D2 = data[2];
  6159  00106E  0100               	movlb	0	; () banked
  6160  001070  EE20 F002          	lfsr	2,2
  6161  001074  51A7               	movf	CANsendMessage@data& (0+255),w,b
  6162  001076  26D9               	addwf	fsr2l,f,c
  6163  001078  51A8               	movf	(CANsendMessage@data+1)& (0+255),w,b
  6164  00107A  22DA               	addwfc	fsr2h,f,c
  6165  00107C  50DF               	movf	indf2,w,c
  6166  00107E  010F               	movlb	15	; () banked
  6167  001080  6F38               	movwf	56,b	;volatile
  6168                           
  6169                           ; BSR set to: 15
  6170                           ;CANlib.h: 436: TXB1D3 = data[3];
  6171  001082  0100               	movlb	0	; () banked
  6172  001084  EE20 F003          	lfsr	2,3
  6173  001088  51A7               	movf	CANsendMessage@data& (0+255),w,b
  6174  00108A  26D9               	addwf	fsr2l,f,c
  6175  00108C  51A8               	movf	(CANsendMessage@data+1)& (0+255),w,b
  6176  00108E  22DA               	addwfc	fsr2h,f,c
  6177  001090  50DF               	movf	indf2,w,c
  6178  001092  010F               	movlb	15	; () banked
  6179  001094  6F39               	movwf	57,b	;volatile
  6180                           
  6181                           ; BSR set to: 15
  6182                           ;CANlib.h: 437: TXB1D4 = data[4];
  6183  001096  0100               	movlb	0	; () banked
  6184  001098  EE20 F004          	lfsr	2,4
  6185  00109C  51A7               	movf	CANsendMessage@data& (0+255),w,b
  6186  00109E  26D9               	addwf	fsr2l,f,c
  6187  0010A0  51A8               	movf	(CANsendMessage@data+1)& (0+255),w,b
  6188  0010A2  22DA               	addwfc	fsr2h,f,c
  6189  0010A4  50DF               	movf	indf2,w,c
  6190  0010A6  010F               	movlb	15	; () banked
  6191  0010A8  6F3A               	movwf	58,b	;volatile
  6192                           
  6193                           ; BSR set to: 15
  6194                           ;CANlib.h: 438: TXB1D5 = data[5];
  6195  0010AA  0100               	movlb	0	; () banked
  6196  0010AC  EE20 F005          	lfsr	2,5
  6197  0010B0  51A7               	movf	CANsendMessage@data& (0+255),w,b
  6198  0010B2  26D9               	addwf	fsr2l,f,c
  6199  0010B4  51A8               	movf	(CANsendMessage@data+1)& (0+255),w,b
  6200  0010B6  22DA               	addwfc	fsr2h,f,c
  6201  0010B8  50DF               	movf	indf2,w,c
  6202  0010BA  010F               	movlb	15	; () banked
  6203  0010BC  6F3B               	movwf	59,b	;volatile
  6204                           
  6205                           ; BSR set to: 15
  6206                           ;CANlib.h: 439: TXB1D6 = data[6];
  6207  0010BE  0100               	movlb	0	; () banked
  6208  0010C0  EE20 F006          	lfsr	2,6
  6209  0010C4  51A7               	movf	CANsendMessage@data& (0+255),w,b
  6210  0010C6  26D9               	addwf	fsr2l,f,c
  6211  0010C8  51A8               	movf	(CANsendMessage@data+1)& (0+255),w,b
  6212  0010CA  22DA               	addwfc	fsr2h,f,c
  6213  0010CC  50DF               	movf	indf2,w,c
  6214  0010CE  010F               	movlb	15	; () banked
  6215  0010D0  6F3C               	movwf	60,b	;volatile
  6216                           
  6217                           ; BSR set to: 15
  6218                           ;CANlib.h: 440: TXB1D7 = data[7];
  6219  0010D2  0100               	movlb	0	; () banked
  6220  0010D4  EE20 F007          	lfsr	2,7
  6221  0010D8  51A7               	movf	CANsendMessage@data& (0+255),w,b
  6222  0010DA  26D9               	addwf	fsr2l,f,c
  6223  0010DC  51A8               	movf	(CANsendMessage@data+1)& (0+255),w,b
  6224  0010DE  22DA               	addwfc	fsr2h,f,c
  6225  0010E0  50DF               	movf	indf2,w,c
  6226  0010E2  010F               	movlb	15	; () banked
  6227  0010E4  6F3D               	movwf	61,b	;volatile
  6228                           
  6229                           ; BSR set to: 15
  6230                           ;CANlib.h: 442: TXB1CONbits.TXREQ = 0x01;
  6231  0010E6  010F               	movlb	15	; () banked
  6232  0010E8  8730               	bsf	48,3,b	;volatile
  6233                           
  6234                           ; BSR set to: 15
  6235                           ;CANlib.h: 444: return;
  6236  0010EA  0012               	return	
  6237  0010EC                     l380:
  6238                           
  6239                           ; BSR set to: 15
  6240                           ;CANlib.h: 445: }
  6241                           ;CANlib.h: 449: if (TXB2CONbits.TXREQ == 0)
  6242  0010EC  010F               	movlb	15	; () banked
  6243  0010EE  B720               	btfsc	32,3,b	;volatile
  6244  0010F0  0012               	return	
  6245                           
  6246                           ; BSR set to: 15
  6247                           ;CANlib.h: 450: { TXB2DLC = dataLength;
  6248  0010F2  C0A9  FF25         	movff	CANsendMessage@dataLength,3877	;volatile
  6249                           
  6250                           ;CANlib.h: 452: if (0b01000000 & flags)
  6251  0010F6  0100               	movlb	0	; () banked
  6252  0010F8  ADAA               	btfss	CANsendMessage@flags& (0+255),6,b
  6253  0010FA  D003               	goto	l395
  6254                           
  6255                           ; BSR set to: 0
  6256                           ;CANlib.h: 453: TXB2DLCbits.TXRTR = 0x01;
  6257  0010FC  010F               	movlb	15	; () banked
  6258  0010FE  8D25               	bsf	37,6,b	;volatile
  6259  001100  D002               	goto	l396
  6260  001102                     l395:
  6261                           
  6262                           ; BSR set to: 0
  6263                           ;CANlib.h: 454: else
  6264                           ;CANlib.h: 455: TXB2DLCbits.TXRTR = 0x00;
  6265  001102  010F               	movlb	15	; () banked
  6266  001104  9D25               	bcf	37,6,b	;volatile
  6267  001106                     l396:
  6268                           
  6269                           ; BSR set to: 15
  6270                           ;CANlib.h: 457: if (CAN_TX_FRAME_MASK & flags)
  6271  001106  0100               	movlb	0	; () banked
  6272  001108  A7AA               	btfss	CANsendMessage@flags& (0+255),3,b
  6273  00110A  D077               	goto	l397
  6274                           
  6275                           ; BSR set to: 0
  6276                           ;CANlib.h: 458: {
  6277                           ;CANlib.h: 459: tamp = identifier & 0x000000FF;
  6278  00110C  0100               	movlb	0	; () banked
  6279  00110E  51A3               	movf	CANsendMessage@identifier& (0+255),w,b
  6280  001110  0100               	movlb	0	; () banked
  6281  001112  6FAB               	movwf	CANsendMessage@tamp& (0+255),b
  6282  001114  6BAC               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  6283  001116  6BAD               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  6284  001118  6BAE               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  6285                           
  6286                           ; BSR set to: 0
  6287                           ;CANlib.h: 460: TXB2EIDL = (unsigned char) tamp;
  6288  00111A  C0AB  FF24         	movff	CANsendMessage@tamp,3876	;volatile
  6289                           
  6290                           ; BSR set to: 0
  6291                           ;CANlib.h: 462: tamp = identifier & 0x0000FF00;
  6292  00111E  0E00               	movlw	0
  6293  001120  0100               	movlb	0	; () banked
  6294  001122  15A3               	andwf	CANsendMessage@identifier& (0+255),w,b
  6295  001124  0100               	movlb	0	; () banked
  6296  001126  6FAB               	movwf	CANsendMessage@tamp& (0+255),b
  6297  001128  0EFF               	movlw	255
  6298  00112A  0100               	movlb	0	; () banked
  6299  00112C  15A4               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
  6300  00112E  0100               	movlb	0	; () banked
  6301  001130  6FAC               	movwf	(CANsendMessage@tamp+1)& (0+255),b
  6302  001132  0E00               	movlw	0
  6303  001134  0100               	movlb	0	; () banked
  6304  001136  15A5               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
  6305  001138  0100               	movlb	0	; () banked
  6306  00113A  6FAD               	movwf	(CANsendMessage@tamp+2)& (0+255),b
  6307  00113C  0E00               	movlw	0
  6308  00113E  0100               	movlb	0	; () banked
  6309  001140  15A6               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
  6310  001142  0100               	movlb	0	; () banked
  6311  001144  6FAE               	movwf	(CANsendMessage@tamp+3)& (0+255),b
  6312                           
  6313                           ; BSR set to: 0
  6314                           ;CANlib.h: 463: tamp = tamp >> 8;
  6315  001146  C0AB  F01E         	movff	CANsendMessage@tamp,??_CANsendMessage
  6316  00114A  C0AC  F01F         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
  6317  00114E  C0AD  F020         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
  6318  001152  C0AE  F021         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
  6319  001156  C01F  F01E         	movff	??_CANsendMessage+1,??_CANsendMessage
  6320  00115A  C020  F01F         	movff	??_CANsendMessage+2,??_CANsendMessage+1
  6321  00115E  C021  F020         	movff	??_CANsendMessage+3,??_CANsendMessage+2
  6322  001162  6A21               	clrf	??_CANsendMessage+3,c
  6323  001164  C01E  F0AB         	movff	??_CANsendMessage,CANsendMessage@tamp
  6324  001168  C01F  F0AC         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  6325  00116C  C020  F0AD         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  6326  001170  C021  F0AE         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  6327                           
  6328                           ; BSR set to: 0
  6329                           ;CANlib.h: 464: TXB2EIDH = (unsigned char) tamp;
  6330  001174  C0AB  FF23         	movff	CANsendMessage@tamp,3875	;volatile
  6331                           
  6332                           ; BSR set to: 0
  6333                           ;CANlib.h: 466: TXB2SIDL = 0x00;
  6334  001178  0E00               	movlw	0
  6335  00117A  010F               	movlb	15	; () banked
  6336  00117C  6F22               	movwf	34,b	;volatile
  6337                           
  6338                           ; BSR set to: 15
  6339                           ;CANlib.h: 467: TXB2SIDLbits.EXIDE = 0x01;
  6340  00117E  010F               	movlb	15	; () banked
  6341  001180  8722               	bsf	34,3,b	;volatile
  6342                           
  6343                           ; BSR set to: 15
  6344                           ;CANlib.h: 469: if (identifier & 0x00010000)
  6345  001182  0100               	movlb	0	; () banked
  6346  001184  A1A5               	btfss	(CANsendMessage@identifier+2)& (0+255),0,b
  6347  001186  D002               	goto	l398
  6348                           
  6349                           ; BSR set to: 0
  6350                           ;CANlib.h: 470: TXB2SIDLbits.EID16 = 0x01;
  6351  001188  010F               	movlb	15	; () banked
  6352  00118A  8122               	bsf	34,0,b	;volatile
  6353  00118C                     l398:
  6354                           
  6355                           ;CANlib.h: 471: if (identifier & 0x00020000)
  6356  00118C  0100               	movlb	0	; () banked
  6357  00118E  A3A5               	btfss	(CANsendMessage@identifier+2)& (0+255),1,b
  6358  001190  D002               	goto	l399
  6359                           
  6360                           ; BSR set to: 0
  6361                           ;CANlib.h: 472: TXB2SIDLbits.EID17 = 0x01;
  6362  001192  010F               	movlb	15	; () banked
  6363  001194  8322               	bsf	34,1,b	;volatile
  6364  001196                     l399:
  6365                           
  6366                           ;CANlib.h: 473: if (identifier & 0x00040000)
  6367  001196  0100               	movlb	0	; () banked
  6368  001198  A5A5               	btfss	(CANsendMessage@identifier+2)& (0+255),2,b
  6369  00119A  D002               	goto	l400
  6370                           
  6371                           ; BSR set to: 0
  6372                           ;CANlib.h: 474: TXB2SIDLbits.SID0 = 0x01;
  6373  00119C  010F               	movlb	15	; () banked
  6374  00119E  8B22               	bsf	34,5,b	;volatile
  6375  0011A0                     l400:
  6376                           
  6377                           ;CANlib.h: 475: if (identifier & 0x00080000)
  6378  0011A0  0100               	movlb	0	; () banked
  6379  0011A2  A7A5               	btfss	(CANsendMessage@identifier+2)& (0+255),3,b
  6380  0011A4  D002               	goto	l401
  6381                           
  6382                           ; BSR set to: 0
  6383                           ;CANlib.h: 476: TXB2SIDLbits.SID1 = 0x01;
  6384  0011A6  010F               	movlb	15	; () banked
  6385  0011A8  8D22               	bsf	34,6,b	;volatile
  6386  0011AA                     l401:
  6387                           
  6388                           ;CANlib.h: 477: if (identifier & 0x00100000)
  6389  0011AA  0100               	movlb	0	; () banked
  6390  0011AC  A9A5               	btfss	(CANsendMessage@identifier+2)& (0+255),4,b
  6391  0011AE  D002               	goto	l4620
  6392                           
  6393                           ; BSR set to: 0
  6394                           ;CANlib.h: 478: TXB2SIDLbits.SID2 = 0x01;
  6395  0011B0  010F               	movlb	15	; () banked
  6396  0011B2  8F22               	bsf	34,7,b	;volatile
  6397  0011B4                     l4620:
  6398                           
  6399                           ;CANlib.h: 480: tamp = (identifier >> 21);
  6400  0011B4  C0A3  F01E         	movff	CANsendMessage@identifier,??_CANsendMessage
  6401  0011B8  C0A4  F01F         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
  6402  0011BC  C0A5  F020         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
  6403  0011C0  C0A6  F021         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
  6404  0011C4  0E16               	movlw	22
  6405  0011C6  D005               	goto	u6060
  6406  0011C8                     u6065:
  6407  0011C8  90D8               	bcf	status,0,c
  6408  0011CA  3221               	rrcf	??_CANsendMessage+3,f,c
  6409  0011CC  3220               	rrcf	??_CANsendMessage+2,f,c
  6410  0011CE  321F               	rrcf	??_CANsendMessage+1,f,c
  6411  0011D0  321E               	rrcf	??_CANsendMessage,f,c
  6412  0011D2                     u6060:
  6413  0011D2  2EE8               	decfsz	wreg,f,c
  6414  0011D4  D7F9               	goto	u6065
  6415  0011D6  C01E  F0AB         	movff	??_CANsendMessage,CANsendMessage@tamp
  6416  0011DA  C01F  F0AC         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  6417  0011DE  C020  F0AD         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  6418  0011E2  C021  F0AE         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  6419                           
  6420                           ;CANlib.h: 481: tamp = tamp & 0x000000FF;
  6421  0011E6  0100               	movlb	0	; () banked
  6422  0011E8  51AB               	movf	CANsendMessage@tamp& (0+255),w,b
  6423  0011EA  0100               	movlb	0	; () banked
  6424  0011EC  6FAB               	movwf	CANsendMessage@tamp& (0+255),b
  6425  0011EE  6BAC               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  6426  0011F0  6BAD               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  6427  0011F2  6BAE               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  6428                           
  6429                           ; BSR set to: 0
  6430                           ;CANlib.h: 482: TXB2SIDH = (unsigned char) tamp;
  6431  0011F4  C0AB  FF21         	movff	CANsendMessage@tamp,3873	;volatile
  6432                           
  6433                           ;CANlib.h: 483: }
  6434  0011F8  D057               	goto	l4640
  6435  0011FA                     l397:
  6436                           
  6437                           ; BSR set to: 0
  6438                           ;CANlib.h: 485: else
  6439                           ;CANlib.h: 487: {
  6440                           ;CANlib.h: 488: TXB2SIDLbits.EXIDE = 0x00;
  6441  0011FA  010F               	movlb	15	; () banked
  6442  0011FC  9722               	bcf	34,3,b	;volatile
  6443                           
  6444                           ; BSR set to: 15
  6445                           ;CANlib.h: 490: tamp = (identifier >> 3);
  6446  0011FE  C0A3  F01E         	movff	CANsendMessage@identifier,??_CANsendMessage
  6447  001202  C0A4  F01F         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
  6448  001206  C0A5  F020         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
  6449  00120A  C0A6  F021         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
  6450  00120E  0E04               	movlw	4
  6451  001210  D005               	goto	u6070
  6452  001212                     u6075:
  6453  001212  90D8               	bcf	status,0,c
  6454  001214  3221               	rrcf	??_CANsendMessage+3,f,c
  6455  001216  3220               	rrcf	??_CANsendMessage+2,f,c
  6456  001218  321F               	rrcf	??_CANsendMessage+1,f,c
  6457  00121A  321E               	rrcf	??_CANsendMessage,f,c
  6458  00121C                     u6070:
  6459  00121C  2EE8               	decfsz	wreg,f,c
  6460  00121E  D7F9               	goto	u6075
  6461  001220  C01E  F0AB         	movff	??_CANsendMessage,CANsendMessage@tamp
  6462  001224  C01F  F0AC         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  6463  001228  C020  F0AD         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  6464  00122C  C021  F0AE         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  6465                           
  6466                           ; BSR set to: 15
  6467                           ;CANlib.h: 491: tamp = tamp & 0x000000FF;
  6468  001230  0100               	movlb	0	; () banked
  6469  001232  51AB               	movf	CANsendMessage@tamp& (0+255),w,b
  6470  001234  0100               	movlb	0	; () banked
  6471  001236  6FAB               	movwf	CANsendMessage@tamp& (0+255),b
  6472  001238  6BAC               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  6473  00123A  6BAD               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  6474  00123C  6BAE               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  6475                           
  6476                           ; BSR set to: 0
  6477                           ;CANlib.h: 492: TXB2SIDH = (unsigned char) tamp;
  6478  00123E  C0AB  FF21         	movff	CANsendMessage@tamp,3873	;volatile
  6479                           
  6480                           ; BSR set to: 0
  6481                           ;CANlib.h: 494: tamp = identifier & 0x00000007;
  6482  001242  0E07               	movlw	7
  6483  001244  0100               	movlb	0	; () banked
  6484  001246  15A3               	andwf	CANsendMessage@identifier& (0+255),w,b
  6485  001248  0100               	movlb	0	; () banked
  6486  00124A  6FAB               	movwf	CANsendMessage@tamp& (0+255),b
  6487  00124C  0E00               	movlw	0
  6488  00124E  0100               	movlb	0	; () banked
  6489  001250  15A4               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
  6490  001252  0100               	movlb	0	; () banked
  6491  001254  6FAC               	movwf	(CANsendMessage@tamp+1)& (0+255),b
  6492  001256  0E00               	movlw	0
  6493  001258  0100               	movlb	0	; () banked
  6494  00125A  15A5               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
  6495  00125C  0100               	movlb	0	; () banked
  6496  00125E  6FAD               	movwf	(CANsendMessage@tamp+2)& (0+255),b
  6497  001260  0E00               	movlw	0
  6498  001262  0100               	movlb	0	; () banked
  6499  001264  15A6               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
  6500  001266  0100               	movlb	0	; () banked
  6501  001268  6FAE               	movwf	(CANsendMessage@tamp+3)& (0+255),b
  6502                           
  6503                           ; BSR set to: 0
  6504                           ;CANlib.h: 495: tamp = tamp << 5;
  6505  00126A  C0AB  F01E         	movff	CANsendMessage@tamp,??_CANsendMessage
  6506  00126E  C0AC  F01F         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
  6507  001272  C0AD  F020         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
  6508  001276  C0AE  F021         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
  6509  00127A  0E05               	movlw	5
  6510  00127C                     u6085:
  6511  00127C  90D8               	bcf	status,0,c
  6512  00127E  361E               	rlcf	??_CANsendMessage,f,c
  6513  001280  361F               	rlcf	??_CANsendMessage+1,f,c
  6514  001282  3620               	rlcf	??_CANsendMessage+2,f,c
  6515  001284  3621               	rlcf	??_CANsendMessage+3,f,c
  6516  001286  2EE8               	decfsz	wreg,f,c
  6517  001288  D7F9               	goto	u6085
  6518  00128A  C01E  F0AB         	movff	??_CANsendMessage,CANsendMessage@tamp
  6519  00128E  C01F  F0AC         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  6520  001292  C020  F0AD         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  6521  001296  C021  F0AE         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  6522                           
  6523                           ; BSR set to: 0
  6524                           ;CANlib.h: 496: TXB2SIDL = TXB2SIDL & 0b00011111;
  6525  00129A  010F               	movlb	15	; () banked
  6526  00129C  5122               	movf	34,w,b	;volatile
  6527  00129E  0B1F               	andlw	31
  6528  0012A0  010F               	movlb	15	; () banked
  6529  0012A2  6F22               	movwf	34,b	;volatile
  6530                           
  6531                           ; BSR set to: 15
  6532                           ;CANlib.h: 497: TXB2SIDL = (unsigned char) tamp;
  6533  0012A4  C0AB  FF22         	movff	CANsendMessage@tamp,3874	;volatile
  6534  0012A8                     l4640:
  6535                           
  6536                           ;CANlib.h: 498: }
  6537                           ;CANlib.h: 500: if (0b00000001 & flags)
  6538  0012A8  0100               	movlb	0	; () banked
  6539  0012AA  A1AA               	btfss	CANsendMessage@flags& (0+255),0,b
  6540  0012AC  D003               	goto	l404
  6541                           
  6542                           ; BSR set to: 0
  6543                           ;CANlib.h: 501: TXB2CONbits.TXPRI0 = 0x01;
  6544  0012AE  010F               	movlb	15	; () banked
  6545  0012B0  8120               	bsf	32,0,b	;volatile
  6546  0012B2  D002               	goto	l405
  6547  0012B4                     l404:
  6548                           
  6549                           ; BSR set to: 0
  6550                           ;CANlib.h: 502: else
  6551                           ;CANlib.h: 503: TXB2CONbits.TXPRI0 = 0x00;
  6552  0012B4  010F               	movlb	15	; () banked
  6553  0012B6  9120               	bcf	32,0,b	;volatile
  6554  0012B8                     l405:
  6555                           
  6556                           ; BSR set to: 15
  6557                           ;CANlib.h: 504: if (0b00000010 & flags)
  6558  0012B8  0100               	movlb	0	; () banked
  6559  0012BA  A3AA               	btfss	CANsendMessage@flags& (0+255),1,b
  6560  0012BC  D003               	goto	l406
  6561                           
  6562                           ; BSR set to: 0
  6563                           ;CANlib.h: 505: TXB2CONbits.TXPRI1 = 0x01;
  6564  0012BE  010F               	movlb	15	; () banked
  6565  0012C0  8320               	bsf	32,1,b	;volatile
  6566  0012C2  D002               	goto	l4646
  6567  0012C4                     l406:
  6568                           
  6569                           ; BSR set to: 0
  6570                           ;CANlib.h: 506: else
  6571                           ;CANlib.h: 507: TXB2CONbits.TXPRI1 = 0x00;
  6572  0012C4  010F               	movlb	15	; () banked
  6573  0012C6  9320               	bcf	32,1,b	;volatile
  6574  0012C8                     l4646:
  6575                           
  6576                           ; BSR set to: 15
  6577                           ;CANlib.h: 509: TXB2D0 = data[0];
  6578  0012C8  C0A7  FFD9         	movff	CANsendMessage@data,fsr2l
  6579  0012CC  C0A8  FFDA         	movff	CANsendMessage@data+1,fsr2h
  6580  0012D0  50DF               	movf	indf2,w,c
  6581  0012D2  010F               	movlb	15	; () banked
  6582  0012D4  6F26               	movwf	38,b	;volatile
  6583                           
  6584                           ; BSR set to: 15
  6585                           ;CANlib.h: 510: TXB2D1 = data[1];
  6586  0012D6  0100               	movlb	0	; () banked
  6587  0012D8  EE20 F001          	lfsr	2,1
  6588  0012DC  51A7               	movf	CANsendMessage@data& (0+255),w,b
  6589  0012DE  26D9               	addwf	fsr2l,f,c
  6590  0012E0  51A8               	movf	(CANsendMessage@data+1)& (0+255),w,b
  6591  0012E2  22DA               	addwfc	fsr2h,f,c
  6592  0012E4  50DF               	movf	indf2,w,c
  6593  0012E6  010F               	movlb	15	; () banked
  6594  0012E8  6F27               	movwf	39,b	;volatile
  6595                           
  6596                           ; BSR set to: 15
  6597                           ;CANlib.h: 511: TXB2D2 = data[2];
  6598  0012EA  0100               	movlb	0	; () banked
  6599  0012EC  EE20 F002          	lfsr	2,2
  6600  0012F0  51A7               	movf	CANsendMessage@data& (0+255),w,b
  6601  0012F2  26D9               	addwf	fsr2l,f,c
  6602  0012F4  51A8               	movf	(CANsendMessage@data+1)& (0+255),w,b
  6603  0012F6  22DA               	addwfc	fsr2h,f,c
  6604  0012F8  50DF               	movf	indf2,w,c
  6605  0012FA  010F               	movlb	15	; () banked
  6606  0012FC  6F28               	movwf	40,b	;volatile
  6607                           
  6608                           ; BSR set to: 15
  6609                           ;CANlib.h: 512: TXB2D3 = data[3];
  6610  0012FE  0100               	movlb	0	; () banked
  6611  001300  EE20 F003          	lfsr	2,3
  6612  001304  51A7               	movf	CANsendMessage@data& (0+255),w,b
  6613  001306  26D9               	addwf	fsr2l,f,c
  6614  001308  51A8               	movf	(CANsendMessage@data+1)& (0+255),w,b
  6615  00130A  22DA               	addwfc	fsr2h,f,c
  6616  00130C  50DF               	movf	indf2,w,c
  6617  00130E  010F               	movlb	15	; () banked
  6618  001310  6F29               	movwf	41,b	;volatile
  6619                           
  6620                           ; BSR set to: 15
  6621                           ;CANlib.h: 513: TXB2D4 = data[4];
  6622  001312  0100               	movlb	0	; () banked
  6623  001314  EE20 F004          	lfsr	2,4
  6624  001318  51A7               	movf	CANsendMessage@data& (0+255),w,b
  6625  00131A  26D9               	addwf	fsr2l,f,c
  6626  00131C  51A8               	movf	(CANsendMessage@data+1)& (0+255),w,b
  6627  00131E  22DA               	addwfc	fsr2h,f,c
  6628  001320  50DF               	movf	indf2,w,c
  6629  001322  010F               	movlb	15	; () banked
  6630  001324  6F2A               	movwf	42,b	;volatile
  6631                           
  6632                           ; BSR set to: 15
  6633                           ;CANlib.h: 514: TXB2D5 = data[5];
  6634  001326  0100               	movlb	0	; () banked
  6635  001328  EE20 F005          	lfsr	2,5
  6636  00132C  51A7               	movf	CANsendMessage@data& (0+255),w,b
  6637  00132E  26D9               	addwf	fsr2l,f,c
  6638  001330  51A8               	movf	(CANsendMessage@data+1)& (0+255),w,b
  6639  001332  22DA               	addwfc	fsr2h,f,c
  6640  001334  50DF               	movf	indf2,w,c
  6641  001336  010F               	movlb	15	; () banked
  6642  001338  6F2B               	movwf	43,b	;volatile
  6643                           
  6644                           ; BSR set to: 15
  6645                           ;CANlib.h: 515: TXB2D6 = data[6];
  6646  00133A  0100               	movlb	0	; () banked
  6647  00133C  EE20 F006          	lfsr	2,6
  6648  001340  51A7               	movf	CANsendMessage@data& (0+255),w,b
  6649  001342  26D9               	addwf	fsr2l,f,c
  6650  001344  51A8               	movf	(CANsendMessage@data+1)& (0+255),w,b
  6651  001346  22DA               	addwfc	fsr2h,f,c
  6652  001348  50DF               	movf	indf2,w,c
  6653  00134A  010F               	movlb	15	; () banked
  6654  00134C  6F2C               	movwf	44,b	;volatile
  6655                           
  6656                           ; BSR set to: 15
  6657                           ;CANlib.h: 516: TXB2D7 = data[7];
  6658  00134E  0100               	movlb	0	; () banked
  6659  001350  EE20 F007          	lfsr	2,7
  6660  001354  51A7               	movf	CANsendMessage@data& (0+255),w,b
  6661  001356  26D9               	addwf	fsr2l,f,c
  6662  001358  51A8               	movf	(CANsendMessage@data+1)& (0+255),w,b
  6663  00135A  22DA               	addwfc	fsr2h,f,c
  6664  00135C  50DF               	movf	indf2,w,c
  6665  00135E  010F               	movlb	15	; () banked
  6666  001360  6F2D               	movwf	45,b	;volatile
  6667                           
  6668                           ; BSR set to: 15
  6669                           ;CANlib.h: 518: TXB2CONbits.TXREQ = 0x01;
  6670  001362  010F               	movlb	15	; () banked
  6671  001364  8720               	bsf	32,3,b	;volatile
  6672                           
  6673                           ; BSR set to: 15
  6674                           ;CANlib.h: 520: return;
  6675  001366  0012               	return	
  6676  001368                     __end_of_CANsendMessage:
  6677                           	opt stack 0
  6678                           tblptru	equ	0xFF8
  6679                           tblptrh	equ	0xFF7
  6680                           tblptrl	equ	0xFF6
  6681                           tablat	equ	0xFF5
  6682                           prodh	equ	0xFF4
  6683                           prodl	equ	0xFF3
  6684                           intcon	equ	0xFF2
  6685                           intcon2	equ	0xFF1
  6686                           postinc0	equ	0xFEE
  6687                           wreg	equ	0xFE8
  6688                           indf1	equ	0xFE7
  6689                           fsr1h	equ	0xFE2
  6690                           fsr1l	equ	0xFE1
  6691                           indf2	equ	0xFDF
  6692                           fsr2h	equ	0xFDA
  6693                           fsr2l	equ	0xFD9
  6694                           status	equ	0xFD8
  6695                           
  6696 ;; *************** function _CANisTxReady *****************
  6697 ;; Defined at:
  6698 ;;		line 1154 in file "CANlib.h"
  6699 ;; Parameters:    Size  Location     Type
  6700 ;;		None
  6701 ;; Auto vars:     Size  Location     Type
  6702 ;;		None
  6703 ;; Return value:  Size  Location     Type
  6704 ;;                  1    wreg      unsigned char 
  6705 ;; Registers used:
  6706 ;;		wreg, status,2
  6707 ;; Tracked objects:
  6708 ;;		On entry : 0/0
  6709 ;;		On exit  : 0/0
  6710 ;;		Unchanged: 0/0
  6711 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  6712 ;;      Params:         0       0       0       0
  6713 ;;      Locals:         1       0       0       0
  6714 ;;      Temps:          0       0       0       0
  6715 ;;      Totals:         1       0       0       0
  6716 ;;Total ram usage:        1 bytes
  6717 ;; Hardware stack levels used:    1
  6718 ;; Hardware stack levels required when called:    2
  6719 ;; This function calls:
  6720 ;;		Nothing
  6721 ;; This function is called by:
  6722 ;;		_send_data
  6723 ;;		_battery_measure
  6724 ;; This function uses a non-reentrant model
  6725 ;;
  6726                           
  6727                           	psect	text12
  6728  0025A2                     __ptext12:
  6729                           	opt stack 0
  6730  0025A2                     _CANisTxReady:
  6731                           	opt stack 27
  6732                           
  6733                           ;CANlib.h: 1156: return (!TXB0CONbits.TXREQ || !TXB1CONbits.TXREQ || !TXB2CONbits.TXREQ)
      +                          ;
  6734                           
  6735                           ; BSR set to: 15
  6736                           ;incstack = 0
  6737  0025A2  0E01               	movlw	1
  6738  0025A4  6E1E               	movwf	_CANisTxReady$3032,c
  6739  0025A6  010F               	movlb	15	; () banked
  6740  0025A8  A740               	btfss	64,3,b	;volatile
  6741  0025AA  D008               	goto	l558
  6742                           
  6743                           ; BSR set to: 15
  6744  0025AC  010F               	movlb	15	; () banked
  6745  0025AE  A730               	btfss	48,3,b	;volatile
  6746  0025B0  D005               	goto	l558
  6747                           
  6748                           ; BSR set to: 15
  6749  0025B2  010F               	movlb	15	; () banked
  6750  0025B4  A720               	btfss	32,3,b	;volatile
  6751  0025B6  D002               	goto	l558
  6752                           
  6753                           ; BSR set to: 15
  6754  0025B8  0E00               	movlw	0
  6755  0025BA  6E1E               	movwf	_CANisTxReady$3032,c
  6756  0025BC                     l558:
  6757                           
  6758                           ; BSR set to: 15
  6759  0025BC  501E               	movf	_CANisTxReady$3032,w,c
  6760  0025BE  0012               	return	
  6761  0025C0                     __end_of_CANisTxReady:
  6762                           	opt stack 0
  6763                           tblptru	equ	0xFF8
  6764                           tblptrh	equ	0xFF7
  6765                           tblptrl	equ	0xFF6
  6766                           tablat	equ	0xFF5
  6767                           prodh	equ	0xFF4
  6768                           prodl	equ	0xFF3
  6769                           intcon	equ	0xFF2
  6770                           intcon2	equ	0xFF1
  6771                           postinc0	equ	0xFEE
  6772                           wreg	equ	0xFE8
  6773                           indf1	equ	0xFE7
  6774                           fsr1h	equ	0xFE2
  6775                           fsr1l	equ	0xFE1
  6776                           indf2	equ	0xFDF
  6777                           fsr2h	equ	0xFDA
  6778                           fsr2l	equ	0xFD9
  6779                           status	equ	0xFD8
  6780                           
  6781 ;; *************** function _abs *****************
  6782 ;; Defined at:
  6783 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\abs.c"
  6784 ;; Parameters:    Size  Location     Type
  6785 ;;  a               2   29[COMRAM] int 
  6786 ;; Auto vars:     Size  Location     Type
  6787 ;;		None
  6788 ;; Return value:  Size  Location     Type
  6789 ;;                  2   29[COMRAM] int 
  6790 ;; Registers used:
  6791 ;;		wreg, status,2, status,0
  6792 ;; Tracked objects:
  6793 ;;		On entry : 0/0
  6794 ;;		On exit  : 0/0
  6795 ;;		Unchanged: 0/0
  6796 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  6797 ;;      Params:         2       0       0       0
  6798 ;;      Locals:         0       0       0       0
  6799 ;;      Temps:          2       0       0       0
  6800 ;;      Totals:         4       0       0       0
  6801 ;;Total ram usage:        4 bytes
  6802 ;; Hardware stack levels used:    1
  6803 ;; Hardware stack levels required when called:    2
  6804 ;; This function calls:
  6805 ;;		Nothing
  6806 ;; This function is called by:
  6807 ;;		_main
  6808 ;; This function uses a non-reentrant model
  6809 ;;
  6810                           
  6811                           	psect	text13
  6812  00257A                     __ptext13:
  6813                           	opt stack 0
  6814  00257A                     _abs:
  6815                           	opt stack 28
  6816                           
  6817                           ; BSR set to: 15
  6818                           ;incstack = 0
  6819  00257A  AE1F               	btfss	abs@a+1,7,c
  6820  00257C  D00D               	goto	l818
  6821  00257E  C01E  F020         	movff	abs@a,??_abs
  6822  002582  C01F  F021         	movff	abs@a+1,??_abs+1
  6823  002586  1E20               	comf	??_abs,f,c
  6824  002588  1E21               	comf	??_abs+1,f,c
  6825  00258A  4A20               	infsnz	??_abs,f,c
  6826  00258C  2A21               	incf	??_abs+1,f,c
  6827  00258E  C020  F01E         	movff	??_abs,?_abs
  6828  002592  C021  F01F         	movff	??_abs+1,?_abs+1
  6829  002596  0012               	return	
  6830  002598                     l818:
  6831  002598  C01E  F01E         	movff	abs@a,?_abs
  6832  00259C  C01F  F01F         	movff	abs@a+1,?_abs+1
  6833  0025A0  0012               	return		;funcret
  6834  0025A2                     __end_of_abs:
  6835                           	opt stack 0
  6836                           tblptru	equ	0xFF8
  6837                           tblptrh	equ	0xFF7
  6838                           tblptrl	equ	0xFF6
  6839                           tablat	equ	0xFF5
  6840                           prodh	equ	0xFF4
  6841                           prodl	equ	0xFF3
  6842                           intcon	equ	0xFF2
  6843                           intcon2	equ	0xFF1
  6844                           postinc0	equ	0xFEE
  6845                           wreg	equ	0xFE8
  6846                           indf1	equ	0xFE7
  6847                           fsr1h	equ	0xFE2
  6848                           fsr1l	equ	0xFE1
  6849                           indf2	equ	0xFDF
  6850                           fsr2h	equ	0xFDA
  6851                           fsr2l	equ	0xFD9
  6852                           status	equ	0xFD8
  6853                           
  6854 ;; *************** function _SetOutputEPWM1 *****************
  6855 ;; Defined at:
  6856 ;;		line 18 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\pic18\plib\PWM\ew1setoc.c"
  6857 ;; Parameters:    Size  Location     Type
  6858 ;;  outputconfig    1    wreg     unsigned char 
  6859 ;;  outputmode      1   29[COMRAM] unsigned char 
  6860 ;; Auto vars:     Size  Location     Type
  6861 ;;  outputconfig    1   30[COMRAM] unsigned char 
  6862 ;; Return value:  Size  Location     Type
  6863 ;;		None               void
  6864 ;; Registers used:
  6865 ;;		wreg, status,2, status,0
  6866 ;; Tracked objects:
  6867 ;;		On entry : 0/0
  6868 ;;		On exit  : 0/0
  6869 ;;		Unchanged: 0/0
  6870 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  6871 ;;      Params:         1       0       0       0
  6872 ;;      Locals:         1       0       0       0
  6873 ;;      Temps:          0       0       0       0
  6874 ;;      Totals:         2       0       0       0
  6875 ;;Total ram usage:        2 bytes
  6876 ;; Hardware stack levels used:    1
  6877 ;; Hardware stack levels required when called:    2
  6878 ;; This function calls:
  6879 ;;		Nothing
  6880 ;; This function is called by:
  6881 ;;		_main
  6882 ;; This function uses a non-reentrant model
  6883 ;;
  6884                           
  6885                           	psect	text14
  6886  002454                     __ptext14:
  6887                           	opt stack 0
  6888  002454                     _SetOutputEPWM1:
  6889                           	opt stack 28
  6890                           
  6891                           ;incstack = 0
  6892                           ;SetOutputEPWM1@outputconfig stored from wreg
  6893  002454  6E1F               	movwf	SetOutputEPWM1@outputconfig,c
  6894  002456  50BA               	movf	4026,w,c	;volatile
  6895  002458  09C0               	iorlw	192
  6896  00245A  141F               	andwf	SetOutputEPWM1@outputconfig,w,c
  6897  00245C  6EBA               	movwf	4026,c	;volatile
  6898  00245E  50BA               	movf	4026,w,c	;volatile
  6899  002460  090F               	iorlw	15
  6900  002462  141E               	andwf	SetOutputEPWM1@outputmode,w,c
  6901  002464  6EBA               	movwf	4026,c	;volatile
  6902  002466  0E3F               	movlw	63
  6903  002468  181F               	xorwf	SetOutputEPWM1@outputconfig,w,c
  6904  00246A  A4D8               	btfss	status,2,c
  6905  00246C  D002               	goto	l3722
  6906  00246E  9895               	bcf	3989,4,c	;volatile
  6907  002470  0012               	return	
  6908  002472                     l3722:
  6909  002472  0EBF               	movlw	191
  6910  002474  181F               	xorwf	SetOutputEPWM1@outputconfig,w,c
  6911  002476  A4D8               	btfss	status,2,c
  6912  002478  D003               	goto	l3726
  6913  00247A  9895               	bcf	3989,4,c	;volatile
  6914  00247C  9A95               	bcf	3989,5,c	;volatile
  6915  00247E  0012               	return	
  6916  002480                     l3726:
  6917  002480  0E7F               	movlw	127
  6918  002482  181F               	xorwf	SetOutputEPWM1@outputconfig,w,c
  6919  002484  B4D8               	btfsc	status,2,c
  6920  002486  D003               	goto	l752
  6921  002488  281F               	incf	SetOutputEPWM1@outputconfig,w,c
  6922  00248A  A4D8               	btfss	status,2,c
  6923  00248C  0012               	return	
  6924  00248E                     l752:
  6925  00248E  9895               	bcf	3989,4,c	;volatile
  6926  002490  9A95               	bcf	3989,5,c	;volatile
  6927  002492  9C95               	bcf	3989,6,c	;volatile
  6928  002494  9E95               	bcf	3989,7,c	;volatile
  6929  002496  0012               	return	
  6930  002498                     __end_of_SetOutputEPWM1:
  6931                           	opt stack 0
  6932                           tblptru	equ	0xFF8
  6933                           tblptrh	equ	0xFF7
  6934                           tblptrl	equ	0xFF6
  6935                           tablat	equ	0xFF5
  6936                           prodh	equ	0xFF4
  6937                           prodl	equ	0xFF3
  6938                           intcon	equ	0xFF2
  6939                           intcon2	equ	0xFF1
  6940                           postinc0	equ	0xFEE
  6941                           wreg	equ	0xFE8
  6942                           indf1	equ	0xFE7
  6943                           fsr1h	equ	0xFE2
  6944                           fsr1l	equ	0xFE1
  6945                           indf2	equ	0xFDF
  6946                           fsr2h	equ	0xFDA
  6947                           fsr2l	equ	0xFD9
  6948                           status	equ	0xFD8
  6949                           
  6950 ;; *************** function _SetDCEPWM1 *****************
  6951 ;; Defined at:
  6952 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\pic18\plib\PWM\ew1setdc.c"
  6953 ;; Parameters:    Size  Location     Type
  6954 ;;  dutycycle       2   29[COMRAM] unsigned int 
  6955 ;; Auto vars:     Size  Location     Type
  6956 ;;  DCycle          2   33[COMRAM] struct PWMDC
  6957 ;; Return value:  Size  Location     Type
  6958 ;;		None               void
  6959 ;; Registers used:
  6960 ;;		wreg, status,2, status,0
  6961 ;; Tracked objects:
  6962 ;;		On entry : 0/0
  6963 ;;		On exit  : 0/0
  6964 ;;		Unchanged: 0/0
  6965 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  6966 ;;      Params:         2       0       0       0
  6967 ;;      Locals:         2       0       0       0
  6968 ;;      Temps:          2       0       0       0
  6969 ;;      Totals:         6       0       0       0
  6970 ;;Total ram usage:        6 bytes
  6971 ;; Hardware stack levels used:    1
  6972 ;; Hardware stack levels required when called:    2
  6973 ;; This function calls:
  6974 ;;		Nothing
  6975 ;; This function is called by:
  6976 ;;		_main
  6977 ;; This function uses a non-reentrant model
  6978 ;;
  6979                           
  6980                           	psect	text15
  6981  0024DA                     __ptext15:
  6982                           	opt stack 0
  6983  0024DA                     _SetDCEPWM1:
  6984                           	opt stack 28
  6985                           
  6986                           ;incstack = 0
  6987  0024DA  C01E  F020         	movff	SetDCEPWM1@dutycycle,??_SetDCEPWM1
  6988  0024DE  C01F  F021         	movff	SetDCEPWM1@dutycycle+1,??_SetDCEPWM1+1
  6989  0024E2  0E06               	movlw	6
  6990  0024E4                     u4205:
  6991  0024E4  90D8               	bcf	status,0,c
  6992  0024E6  3620               	rlcf	??_SetDCEPWM1,f,c
  6993  0024E8  3621               	rlcf	??_SetDCEPWM1+1,f,c
  6994  0024EA  2EE8               	decfsz	wreg,f,c
  6995  0024EC  D7FB               	goto	u4205
  6996  0024EE  C020  F022         	movff	??_SetDCEPWM1,SetDCEPWM1@DCycle
  6997  0024F2  C021  F023         	movff	??_SetDCEPWM1+1,SetDCEPWM1@DCycle+1
  6998  0024F6  C023  FFBB         	movff	SetDCEPWM1@DCycle+1,4027	;volatile
  6999  0024FA  C022  F020         	movff	SetDCEPWM1@DCycle,??_SetDCEPWM1
  7000  0024FE  90D8               	bcf	status,0,c
  7001  002500  3220               	rrcf	??_SetDCEPWM1,f,c
  7002  002502  90D8               	bcf	status,0,c
  7003  002504  3220               	rrcf	??_SetDCEPWM1,f,c
  7004  002506  0E30               	movlw	48
  7005  002508  1620               	andwf	??_SetDCEPWM1,f,c
  7006  00250A  50BA               	movf	4026,w,c	;volatile
  7007  00250C  0BCF               	andlw	207
  7008  00250E  1020               	iorwf	??_SetDCEPWM1,w,c
  7009  002510  6EBA               	movwf	4026,c	;volatile
  7010  002512  0012               	return		;funcret
  7011  002514                     __end_of_SetDCEPWM1:
  7012                           	opt stack 0
  7013                           tblptru	equ	0xFF8
  7014                           tblptrh	equ	0xFF7
  7015                           tblptrl	equ	0xFF6
  7016                           tablat	equ	0xFF5
  7017                           prodh	equ	0xFF4
  7018                           prodl	equ	0xFF3
  7019                           intcon	equ	0xFF2
  7020                           intcon2	equ	0xFF1
  7021                           postinc0	equ	0xFEE
  7022                           wreg	equ	0xFE8
  7023                           indf1	equ	0xFE7
  7024                           fsr1h	equ	0xFE2
  7025                           fsr1l	equ	0xFE1
  7026                           indf2	equ	0xFDF
  7027                           fsr2h	equ	0xFDA
  7028                           fsr2l	equ	0xFD9
  7029                           status	equ	0xFD8
  7030                           
  7031 ;; *************** function _OpenTimer2 *****************
  7032 ;; Defined at:
  7033 ;;		line 17 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\pic18\plib\Timers\t2open.c"
  7034 ;; Parameters:    Size  Location     Type
  7035 ;;  config          1    wreg     unsigned char 
  7036 ;; Auto vars:     Size  Location     Type
  7037 ;;  config          1   29[COMRAM] unsigned char 
  7038 ;; Return value:  Size  Location     Type
  7039 ;;		None               void
  7040 ;; Registers used:
  7041 ;;		wreg, status,2, status,0
  7042 ;; Tracked objects:
  7043 ;;		On entry : 0/0
  7044 ;;		On exit  : 0/0
  7045 ;;		Unchanged: 0/0
  7046 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  7047 ;;      Params:         0       0       0       0
  7048 ;;      Locals:         1       0       0       0
  7049 ;;      Temps:          0       0       0       0
  7050 ;;      Totals:         1       0       0       0
  7051 ;;Total ram usage:        1 bytes
  7052 ;; Hardware stack levels used:    1
  7053 ;; Hardware stack levels required when called:    2
  7054 ;; This function calls:
  7055 ;;		Nothing
  7056 ;; This function is called by:
  7057 ;;		_main
  7058 ;; This function uses a non-reentrant model
  7059 ;;
  7060                           
  7061                           	psect	text16
  7062  0025C0                     __ptext16:
  7063                           	opt stack 0
  7064  0025C0                     _OpenTimer2:
  7065                           	opt stack 28
  7066                           
  7067                           ;incstack = 0
  7068                           ;OpenTimer2@config stored from wreg
  7069  0025C0  6E1E               	movwf	OpenTimer2@config,c
  7070  0025C2  501E               	movf	OpenTimer2@config,w,c
  7071  0025C4  0BFB               	andlw	251
  7072  0025C6  6ECA               	movwf	4042,c	;volatile
  7073  0025C8  0E00               	movlw	0
  7074  0025CA  6ECC               	movwf	4044,c	;volatile
  7075  0025CC  929E               	bcf	3998,1,c	;volatile
  7076  0025CE  AE1E               	btfss	OpenTimer2@config,7,c
  7077  0025D0  D002               	goto	l766
  7078  0025D2  829D               	bsf	3997,1,c	;volatile
  7079  0025D4  D001               	goto	l767
  7080  0025D6                     l766:
  7081  0025D6  929D               	bcf	3997,1,c	;volatile
  7082  0025D8                     l767:
  7083  0025D8  84CA               	bsf	4042,2,c	;volatile
  7084  0025DA  0012               	return		;funcret
  7085  0025DC                     __end_of_OpenTimer2:
  7086                           	opt stack 0
  7087                           tblptru	equ	0xFF8
  7088                           tblptrh	equ	0xFF7
  7089                           tblptrl	equ	0xFF6
  7090                           tablat	equ	0xFF5
  7091                           prodh	equ	0xFF4
  7092                           prodl	equ	0xFF3
  7093                           intcon	equ	0xFF2
  7094                           intcon2	equ	0xFF1
  7095                           postinc0	equ	0xFEE
  7096                           wreg	equ	0xFE8
  7097                           indf1	equ	0xFE7
  7098                           fsr1h	equ	0xFE2
  7099                           fsr1l	equ	0xFE1
  7100                           indf2	equ	0xFDF
  7101                           fsr2h	equ	0xFDA
  7102                           fsr2l	equ	0xFD9
  7103                           status	equ	0xFD8
  7104                           
  7105 ;; *************** function _OpenEPWM1 *****************
  7106 ;; Defined at:
  7107 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\pic18\plib\PWM\ew1open.c"
  7108 ;; Parameters:    Size  Location     Type
  7109 ;;  period          1    wreg     unsigned char 
  7110 ;; Auto vars:     Size  Location     Type
  7111 ;;  period          1   29[COMRAM] unsigned char 
  7112 ;; Return value:  Size  Location     Type
  7113 ;;		None               void
  7114 ;; Registers used:
  7115 ;;		wreg, status,2
  7116 ;; Tracked objects:
  7117 ;;		On entry : 0/0
  7118 ;;		On exit  : 0/0
  7119 ;;		Unchanged: 0/0
  7120 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  7121 ;;      Params:         0       0       0       0
  7122 ;;      Locals:         1       0       0       0
  7123 ;;      Temps:          0       0       0       0
  7124 ;;      Totals:         1       0       0       0
  7125 ;;Total ram usage:        1 bytes
  7126 ;; Hardware stack levels used:    1
  7127 ;; Hardware stack levels required when called:    2
  7128 ;; This function calls:
  7129 ;;		Nothing
  7130 ;; This function is called by:
  7131 ;;		_main
  7132 ;; This function uses a non-reentrant model
  7133 ;;
  7134                           
  7135                           	psect	text17
  7136  002604                     __ptext17:
  7137                           	opt stack 0
  7138  002604                     _OpenEPWM1:
  7139                           	opt stack 28
  7140                           
  7141                           ;incstack = 0
  7142                           ;OpenEPWM1@period stored from wreg
  7143  002604  6E1E               	movwf	OpenEPWM1@period,c
  7144  002606  0E0C               	movlw	12
  7145  002608  6EBA               	movwf	4026,c	;volatile
  7146  00260A  94CA               	bcf	4042,2,c	;volatile
  7147  00260C  C01E  FFCB         	movff	OpenEPWM1@period,4043	;volatile
  7148  002610  84CA               	bsf	4042,2,c	;volatile
  7149  002612  0012               	return		;funcret
  7150  002614                     __end_of_OpenEPWM1:
  7151                           	opt stack 0
  7152                           tblptru	equ	0xFF8
  7153                           tblptrh	equ	0xFF7
  7154                           tblptrl	equ	0xFF6
  7155                           tablat	equ	0xFF5
  7156                           prodh	equ	0xFF4
  7157                           prodl	equ	0xFF3
  7158                           intcon	equ	0xFF2
  7159                           intcon2	equ	0xFF1
  7160                           postinc0	equ	0xFEE
  7161                           wreg	equ	0xFE8
  7162                           indf1	equ	0xFE7
  7163                           fsr1h	equ	0xFE2
  7164                           fsr1l	equ	0xFE1
  7165                           indf2	equ	0xFDF
  7166                           fsr2h	equ	0xFDA
  7167                           fsr2l	equ	0xFD9
  7168                           status	equ	0xFD8
  7169                           
  7170 ;; *************** function _CANisTXwarningON *****************
  7171 ;; Defined at:
  7172 ;;		line 1119 in file "CANlib.h"
  7173 ;; Parameters:    Size  Location     Type
  7174 ;;		None
  7175 ;; Auto vars:     Size  Location     Type
  7176 ;;		None
  7177 ;; Return value:  Size  Location     Type
  7178 ;;                  1    wreg      unsigned char 
  7179 ;; Registers used:
  7180 ;;		wreg
  7181 ;; Tracked objects:
  7182 ;;		On entry : 0/0
  7183 ;;		On exit  : 0/0
  7184 ;;		Unchanged: 0/0
  7185 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  7186 ;;      Params:         0       0       0       0
  7187 ;;      Locals:         0       0       0       0
  7188 ;;      Temps:          0       0       0       0
  7189 ;;      Totals:         0       0       0       0
  7190 ;;Total ram usage:        0 bytes
  7191 ;; Hardware stack levels used:    1
  7192 ;; Hardware stack levels required when called:    2
  7193 ;; This function calls:
  7194 ;;		Nothing
  7195 ;; This function is called by:
  7196 ;;		_main
  7197 ;; This function uses a non-reentrant model
  7198 ;;
  7199                           
  7200                           	psect	text18
  7201  002614                     __ptext18:
  7202                           	opt stack 0
  7203  002614                     _CANisTXwarningON:
  7204                           	opt stack 28
  7205                           
  7206                           ;CANlib.h: 1121: return (COMSTATbits.TXWARN);
  7207                           
  7208                           ;incstack = 0
  7209  002614  A474               	btfss	3956,2,c	;volatile
  7210  002616  D002               	goto	u4100
  7211  002618  0E01               	movlw	1
  7212  00261A  0012               	return	
  7213  00261C                     u4100:
  7214  00261C  0E00               	movlw	0
  7215  00261E  0012               	return	
  7216  002620                     __end_of_CANisTXwarningON:
  7217                           	opt stack 0
  7218                           tblptru	equ	0xFF8
  7219                           tblptrh	equ	0xFF7
  7220                           tblptrl	equ	0xFF6
  7221                           tablat	equ	0xFF5
  7222                           prodh	equ	0xFF4
  7223                           prodl	equ	0xFF3
  7224                           intcon	equ	0xFF2
  7225                           intcon2	equ	0xFF1
  7226                           postinc0	equ	0xFEE
  7227                           wreg	equ	0xFE8
  7228                           indf1	equ	0xFE7
  7229                           fsr1h	equ	0xFE2
  7230                           fsr1l	equ	0xFE1
  7231                           indf2	equ	0xFDF
  7232                           fsr2h	equ	0xFDA
  7233                           fsr2l	equ	0xFD9
  7234                           status	equ	0xFD8
  7235                           
  7236 ;; *************** function _CANisRXwarningON *****************
  7237 ;; Defined at:
  7238 ;;		line 1127 in file "CANlib.h"
  7239 ;; Parameters:    Size  Location     Type
  7240 ;;		None
  7241 ;; Auto vars:     Size  Location     Type
  7242 ;;		None
  7243 ;; Return value:  Size  Location     Type
  7244 ;;                  1    wreg      unsigned char 
  7245 ;; Registers used:
  7246 ;;		wreg
  7247 ;; Tracked objects:
  7248 ;;		On entry : 0/0
  7249 ;;		On exit  : 0/0
  7250 ;;		Unchanged: 0/0
  7251 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  7252 ;;      Params:         0       0       0       0
  7253 ;;      Locals:         0       0       0       0
  7254 ;;      Temps:          0       0       0       0
  7255 ;;      Totals:         0       0       0       0
  7256 ;;Total ram usage:        0 bytes
  7257 ;; Hardware stack levels used:    1
  7258 ;; Hardware stack levels required when called:    2
  7259 ;; This function calls:
  7260 ;;		Nothing
  7261 ;; This function is called by:
  7262 ;;		_main
  7263 ;; This function uses a non-reentrant model
  7264 ;;
  7265                           
  7266                           	psect	text19
  7267  002620                     __ptext19:
  7268                           	opt stack 0
  7269  002620                     _CANisRXwarningON:
  7270                           	opt stack 28
  7271                           
  7272                           ;CANlib.h: 1129: return (COMSTATbits.RXWARN);
  7273                           
  7274                           ;incstack = 0
  7275  002620  A274               	btfss	3956,1,c	;volatile
  7276  002622  D002               	goto	u4110
  7277  002624  0E01               	movlw	1
  7278  002626  0012               	return	
  7279  002628                     u4110:
  7280  002628  0E00               	movlw	0
  7281  00262A  0012               	return	
  7282  00262C                     __end_of_CANisRXwarningON:
  7283                           	opt stack 0
  7284                           tblptru	equ	0xFF8
  7285                           tblptrh	equ	0xFF7
  7286                           tblptrl	equ	0xFF6
  7287                           tablat	equ	0xFF5
  7288                           prodh	equ	0xFF4
  7289                           prodl	equ	0xFF3
  7290                           intcon	equ	0xFF2
  7291                           intcon2	equ	0xFF1
  7292                           postinc0	equ	0xFEE
  7293                           wreg	equ	0xFE8
  7294                           indf1	equ	0xFE7
  7295                           fsr1h	equ	0xFE2
  7296                           fsr1l	equ	0xFE1
  7297                           indf2	equ	0xFDF
  7298                           fsr2h	equ	0xFDA
  7299                           fsr2l	equ	0xFD9
  7300                           status	equ	0xFD8
  7301                           
  7302 ;; *************** function _ISR_bassa *****************
  7303 ;; Defined at:
  7304 ;;		line 89 in file "motore.c"
  7305 ;; Parameters:    Size  Location     Type
  7306 ;;		None
  7307 ;; Auto vars:     Size  Location     Type
  7308 ;;		None
  7309 ;; Return value:  Size  Location     Type
  7310 ;;		None               void
  7311 ;; Registers used:
  7312 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7313 ;; Tracked objects:
  7314 ;;		On entry : 0/0
  7315 ;;		On exit  : 0/0
  7316 ;;		Unchanged: 0/0
  7317 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  7318 ;;      Params:         0       0       0       0
  7319 ;;      Locals:         0       0       0       0
  7320 ;;      Temps:         17       0       0       0
  7321 ;;      Totals:        17       0       0       0
  7322 ;;Total ram usage:       17 bytes
  7323 ;; Hardware stack levels used:    1
  7324 ;; Hardware stack levels required when called:    1
  7325 ;; This function calls:
  7326 ;;		_CANisRxReady
  7327 ;;		_CANreceiveMessage
  7328 ;; This function is called by:
  7329 ;;		Interrupt level 1
  7330 ;; This function uses a non-reentrant model
  7331 ;;
  7332                           
  7333                           	psect	intcodelo
  7334  000018                     __pintcodelo:
  7335                           	opt stack 0
  7336  000018                     _ISR_bassa:
  7337                           	opt stack 26
  7338                           
  7339                           ;incstack = 0
  7340  000018  8042               	bsf	btemp,0,c	;set compiler interrupt flag (level 1)
  7341  00001A  CFD8 F00D          	movff	status,??_ISR_bassa
  7342  00001E  CFE8 F00E          	movff	wreg,??_ISR_bassa+1
  7343  000022  CFE0 F00F          	movff	bsr,??_ISR_bassa+2
  7344  000026  CFFA F010          	movff	pclath,??_ISR_bassa+3
  7345  00002A  CFFB F011          	movff	pclatu,??_ISR_bassa+4
  7346  00002E  CFE9 F012          	movff	fsr0l,??_ISR_bassa+5
  7347  000032  CFEA F013          	movff	fsr0h,??_ISR_bassa+6
  7348  000036  CFE1 F014          	movff	fsr1l,??_ISR_bassa+7
  7349  00003A  CFE2 F015          	movff	fsr1h,??_ISR_bassa+8
  7350  00003E  CFD9 F016          	movff	fsr2l,??_ISR_bassa+9
  7351  000042  CFDA F017          	movff	fsr2h,??_ISR_bassa+10
  7352  000046  CFF3 F018          	movff	prodl,??_ISR_bassa+11
  7353  00004A  CFF4 F019          	movff	prodh,??_ISR_bassa+12
  7354  00004E  CFF6 F01A          	movff	tblptrl,??_ISR_bassa+13
  7355  000052  CFF7 F01B          	movff	tblptrh,??_ISR_bassa+14
  7356  000056  CFF8 F01C          	movff	tblptru,??_ISR_bassa+15
  7357  00005A  CFF5 F01D          	movff	tablat,??_ISR_bassa+16
  7358                           
  7359                           ;motore.c: 90: if ((PIR3bits.RXB0IF == 1) || (PIR3bits.RXB1IF == 1)) {
  7360  00005E  A0A4               	btfss	4004,0,c	;volatile
  7361  000060  B2A4               	btfsc	4004,1,c	;volatile
  7362  000062  D001               	goto	i1l3792
  7363  000064  D07E               	goto	i1l665
  7364  000066                     i1l3792:
  7365                           
  7366                           ;motore.c: 91: if (CANisRxReady()) {
  7367  000066  ECEE  F012         	call	_CANisRxReady	;wreg free
  7368  00006A  0900               	iorlw	0
  7369  00006C  B4D8               	btfsc	status,2,c
  7370  00006E  D06C               	goto	i1l653
  7371                           
  7372                           ;motore.c: 92: CANreceiveMessage(&msg);
  7373  000070  0E84               	movlw	low _msg
  7374  000072  6E01               	movwf	CANreceiveMessage@msg,c
  7375  000074  0E00               	movlw	high _msg
  7376  000076  6E02               	movwf	CANreceiveMessage@msg+1,c
  7377  000078  ECB4  F009         	call	_CANreceiveMessage	;wreg free
  7378                           
  7379                           ;motore.c: 93: if (msg.RTR == 1) {
  7380  00007C  0100               	movlb	0	; () banked
  7381  00007E  0592               	decf	(_msg+14)& (0+255),w,b
  7382  000080  A4D8               	btfss	status,2,c
  7383  000082  D00E               	goto	i1l3800
  7384                           
  7385                           ; BSR set to: 0
  7386                           ;motore.c: 94: id = msg.identifier;
  7387  000084  C084  F025         	movff	_msg,_id
  7388  000088  C085  F026         	movff	_msg+1,_id+1
  7389  00008C  C086  F027         	movff	_msg+2,_id+2
  7390  000090  C087  F028         	movff	_msg+3,_id+3
  7391                           
  7392                           ;motore.c: 95: remote_frame = msg.RTR;
  7393  000094  0100               	movlb	0	; () banked
  7394  000096  A192               	btfss	(_msg+14)& (0+255),0,b
  7395  000098  D002               	goto	i1u441_20
  7396  00009A  8A3E               	bsf	_remote_frame/(0+8),_remote_frame& (0+7),c
  7397  00009C  D001               	goto	i1l3800
  7398  00009E                     i1u441_20:
  7399  00009E  9A3E               	bcf	_remote_frame/(0+8),_remote_frame& (0+7),c
  7400  0000A0                     i1l3800:
  7401                           
  7402                           ;motore.c: 96: }
  7403                           ;motore.c: 97: if (msg.identifier == 0b00000000000000000000000000011) {
  7404  0000A0  0E03               	movlw	3
  7405  0000A2  0100               	movlb	0	; () banked
  7406  0000A4  1984               	xorwf	_msg& (0+255),w,b
  7407  0000A6  0100               	movlb	0	; () banked
  7408  0000A8  1185               	iorwf	(_msg+1)& (0+255),w,b
  7409  0000AA  0100               	movlb	0	; () banked
  7410  0000AC  1186               	iorwf	(_msg+2)& (0+255),w,b
  7411  0000AE  0100               	movlb	0	; () banked
  7412  0000B0  1187               	iorwf	(_msg+3)& (0+255),w,b
  7413  0000B2  A4D8               	btfss	status,2,c
  7414  0000B4  D00D               	goto	i1l3804
  7415                           
  7416                           ; BSR set to: 0
  7417                           ;motore.c: 98: currentSpeed = msg.data[0];
  7418  0000B6  C088  F040         	movff	_msg+4,_currentSpeed
  7419                           
  7420                           ;motore.c: 99: dir = msg.data[1];
  7421  0000BA  C089  F031         	movff	_msg+5,_dir
  7422  0000BE  6A32               	clrf	_dir+1,c
  7423                           
  7424                           ;motore.c: 100: previousTimeCounter = timeCounter;
  7425  0000C0  C029  F078         	movff	_timeCounter,_previousTimeCounter
  7426  0000C4  C02A  F079         	movff	_timeCounter+1,_previousTimeCounter+1
  7427  0000C8  C02B  F07A         	movff	_timeCounter+2,_previousTimeCounter+2
  7428  0000CC  C02C  F07B         	movff	_timeCounter+3,_previousTimeCounter+3
  7429  0000D0                     i1l3804:
  7430                           
  7431                           ; BSR set to: 0
  7432                           ;motore.c: 101: }
  7433                           ;motore.c: 102: if (msg.identifier == 0b00000000000000000000000000001) {
  7434  0000D0  0100               	movlb	0	; () banked
  7435  0000D2  0584               	decf	_msg& (0+255),w,b
  7436  0000D4  0100               	movlb	0	; () banked
  7437  0000D6  1185               	iorwf	(_msg+1)& (0+255),w,b
  7438  0000D8  0100               	movlb	0	; () banked
  7439  0000DA  1186               	iorwf	(_msg+2)& (0+255),w,b
  7440  0000DC  0100               	movlb	0	; () banked
  7441  0000DE  1187               	iorwf	(_msg+3)& (0+255),w,b
  7442  0000E0  A4D8               	btfss	status,2,c
  7443  0000E2  D003               	goto	i1l3810
  7444                           
  7445                           ; BSR set to: 0
  7446                           ;motore.c: 103: currentSpeed = 0;
  7447  0000E4  0E00               	movlw	0
  7448  0000E6  6E40               	movwf	_currentSpeed,c
  7449                           
  7450                           ; BSR set to: 0
  7451                           ;motore.c: 104: PORTAbits.RA1 = 1;
  7452  0000E8  8280               	bsf	3968,1,c	;volatile
  7453  0000EA                     i1l3810:
  7454                           
  7455                           ; BSR set to: 0
  7456                           ;motore.c: 105: }
  7457                           ;motore.c: 106: if (msg.identifier == 0b00000000000000000000000000110) {
  7458  0000EA  0E06               	movlw	6
  7459  0000EC  0100               	movlb	0	; () banked
  7460  0000EE  1984               	xorwf	_msg& (0+255),w,b
  7461  0000F0  0100               	movlb	0	; () banked
  7462  0000F2  1185               	iorwf	(_msg+1)& (0+255),w,b
  7463  0000F4  0100               	movlb	0	; () banked
  7464  0000F6  1186               	iorwf	(_msg+2)& (0+255),w,b
  7465  0000F8  0100               	movlb	0	; () banked
  7466  0000FA  1187               	iorwf	(_msg+3)& (0+255),w,b
  7467  0000FC  A4D8               	btfss	status,2,c
  7468  0000FE  D005               	goto	i1l3814
  7469                           
  7470                           ; BSR set to: 0
  7471                           ;motore.c: 107: left_speed = msg.data[0];
  7472  000100  C088  F03A         	movff	_msg+4,_left_speed
  7473                           
  7474                           ;motore.c: 108: right_speed = msg.data[1];
  7475  000104  C089  F03D         	movff	_msg+5,_right_speed
  7476                           
  7477                           ;motore.c: 109: speed_fetched = 1;
  7478  000108  803F               	bsf	_speed_fetched/(0+8),_speed_fetched& (0+7),c
  7479  00010A                     i1l3814:
  7480                           
  7481                           ; BSR set to: 0
  7482                           ;motore.c: 110: }
  7483                           ;motore.c: 111: if (msg.identifier == 0b00000000000000000000000000010) {
  7484  00010A  0E02               	movlw	2
  7485  00010C  0100               	movlb	0	; () banked
  7486  00010E  1984               	xorwf	_msg& (0+255),w,b
  7487  000110  0100               	movlb	0	; () banked
  7488  000112  1185               	iorwf	(_msg+1)& (0+255),w,b
  7489  000114  0100               	movlb	0	; () banked
  7490  000116  1186               	iorwf	(_msg+2)& (0+255),w,b
  7491  000118  0100               	movlb	0	; () banked
  7492  00011A  1187               	iorwf	(_msg+3)& (0+255),w,b
  7493  00011C  B4D8               	btfsc	status,2,c
  7494  00011E  D007               	goto	i1l3820
  7495  000120  D013               	goto	i1l653
  7496  000122                     i1l660:
  7497                           
  7498                           ; BSR set to: 0
  7499  000122  823E               	bsf	_centralina_abs/(0+8),_centralina_abs& (0+7),c
  7500                           
  7501                           ;motore.c: 114: break;
  7502  000124  D00F               	goto	i1l661
  7503  000126                     i1l662:
  7504                           
  7505                           ; BSR set to: 0
  7506  000126  863E               	bsf	_centralina_sterzo/(0+8),_centralina_sterzo& (0+7),c
  7507                           
  7508                           ;motore.c: 116: break;
  7509  000128  D00D               	goto	i1l661
  7510  00012A                     i1l663:
  7511                           
  7512                           ; BSR set to: 0
  7513  00012A  843E               	bsf	_centralina_comando/(0+8),_centralina_comando& (0+7),c
  7514                           
  7515                           ; BSR set to: 0
  7516                           ;motore.c: 119: }
  7517                           
  7518                           ;motore.c: 118: break;
  7519  00012C  D00B               	goto	i1l661
  7520  00012E                     i1l3820:
  7521                           
  7522                           ; BSR set to: 0
  7523  00012E  0100               	movlb	0	; () banked
  7524  000130  5188               	movf	(_msg+4)& (0+255),w,b
  7525                           
  7526                           ; Switch size 1, requested type "space"
  7527                           ; Number of cases is 3, Range of values is 1 to 3
  7528                           ; switch strategies available:
  7529                           ; Name         Instructions Cycles
  7530                           ; simple_byte           10     6 (average)
  7531                           ;	Chosen strategy is simple_byte
  7532  000132  0A01               	xorlw	1	; case 1
  7533  000134  B4D8               	btfsc	status,2,c
  7534  000136  D7F5               	goto	i1l660
  7535  000138  0A03               	xorlw	3	; case 2
  7536  00013A  B4D8               	btfsc	status,2,c
  7537  00013C  D7F4               	goto	i1l662
  7538  00013E  0A01               	xorlw	1	; case 3
  7539  000140  B4D8               	btfsc	status,2,c
  7540  000142  D7F3               	goto	i1l663
  7541  000144                     i1l661:
  7542                           
  7543                           ; BSR set to: 0
  7544                           ;motore.c: 120: PIR3bits.RXB0IF = 0;
  7545  000144  90A4               	bcf	4004,0,c	;volatile
  7546                           
  7547                           ;motore.c: 121: PIR3bits.RXB1IF = 0;
  7548  000146  92A4               	bcf	4004,1,c	;volatile
  7549  000148                     i1l653:
  7550                           
  7551                           ;motore.c: 122: }
  7552                           ;motore.c: 123: }
  7553                           ;motore.c: 124: if (PIR2bits.TMR3IF) {
  7554  000148  A2A1               	btfss	4001,1,c	;volatile
  7555  00014A  D00B               	goto	i1l665
  7556                           
  7557                           ;motore.c: 125: timeCounter++;
  7558  00014C  0E01               	movlw	1
  7559  00014E  2629               	addwf	_timeCounter,f,c
  7560  000150  0E00               	movlw	0
  7561  000152  222A               	addwfc	_timeCounter+1,f,c
  7562  000154  222B               	addwfc	_timeCounter+2,f,c
  7563  000156  222C               	addwfc	_timeCounter+3,f,c
  7564                           
  7565                           ;motore.c: 126: TMR3H = 0x63;
  7566  000158  0E63               	movlw	99
  7567  00015A  6EB3               	movwf	4019,c	;volatile
  7568                           
  7569                           ;motore.c: 127: TMR3L = 0xC0;
  7570  00015C  0EC0               	movlw	192
  7571  00015E  6EB2               	movwf	4018,c	;volatile
  7572                           
  7573                           ;motore.c: 128: PIR2bits.TMR3IF = 0;
  7574  000160  92A1               	bcf	4001,1,c	;volatile
  7575  000162                     i1l665:
  7576  000162  C01D  FFF5         	movff	??_ISR_bassa+16,tablat
  7577  000166  C01C  FFF8         	movff	??_ISR_bassa+15,tblptru
  7578  00016A  C01B  FFF7         	movff	??_ISR_bassa+14,tblptrh
  7579  00016E  C01A  FFF6         	movff	??_ISR_bassa+13,tblptrl
  7580  000172  C019  FFF4         	movff	??_ISR_bassa+12,prodh
  7581  000176  C018  FFF3         	movff	??_ISR_bassa+11,prodl
  7582  00017A  C017  FFDA         	movff	??_ISR_bassa+10,fsr2h
  7583  00017E  C016  FFD9         	movff	??_ISR_bassa+9,fsr2l
  7584  000182  C015  FFE2         	movff	??_ISR_bassa+8,fsr1h
  7585  000186  C014  FFE1         	movff	??_ISR_bassa+7,fsr1l
  7586  00018A  C013  FFEA         	movff	??_ISR_bassa+6,fsr0h
  7587  00018E  C012  FFE9         	movff	??_ISR_bassa+5,fsr0l
  7588  000192  C011  FFFB         	movff	??_ISR_bassa+4,pclatu
  7589  000196  C010  FFFA         	movff	??_ISR_bassa+3,pclath
  7590  00019A  C00F  FFE0         	movff	??_ISR_bassa+2,bsr
  7591  00019E  C00E  FFE8         	movff	??_ISR_bassa+1,wreg
  7592  0001A2  C00D  FFD8         	movff	??_ISR_bassa,status
  7593  0001A6  9042               	bcf	btemp,0,c	;clear compiler interrupt flag (level 1)
  7594  0001A8  0010               	retfie	
  7595  0001AA                     __end_of_ISR_bassa:
  7596                           	opt stack 0
  7597                           pclatu	equ	0xFFB
  7598                           pclath	equ	0xFFA
  7599                           tblptru	equ	0xFF8
  7600                           tblptrh	equ	0xFF7
  7601                           tblptrl	equ	0xFF6
  7602                           tablat	equ	0xFF5
  7603                           prodh	equ	0xFF4
  7604                           prodl	equ	0xFF3
  7605                           intcon	equ	0xFF2
  7606                           intcon2	equ	0xFF1
  7607                           postinc0	equ	0xFEE
  7608                           fsr0h	equ	0xFEA
  7609                           fsr0l	equ	0xFE9
  7610                           wreg	equ	0xFE8
  7611                           indf1	equ	0xFE7
  7612                           fsr1h	equ	0xFE2
  7613                           fsr1l	equ	0xFE1
  7614                           bsr	equ	0xFE0
  7615                           indf2	equ	0xFDF
  7616                           fsr2h	equ	0xFDA
  7617                           fsr2l	equ	0xFD9
  7618                           status	equ	0xFD8
  7619                           
  7620 ;; *************** function _CANreceiveMessage *****************
  7621 ;; Defined at:
  7622 ;;		line 528 in file "CANlib.h"
  7623 ;; Parameters:    Size  Location     Type
  7624 ;;  msg             2    0[COMRAM] PTR struct .
  7625 ;;		 -> msg(15), 
  7626 ;; Auto vars:     Size  Location     Type
  7627 ;;  tamp            1   11[COMRAM] unsigned char 
  7628 ;;  error           1   10[COMRAM] unsigned char 
  7629 ;; Return value:  Size  Location     Type
  7630 ;;                  1    wreg      unsigned char 
  7631 ;; Registers used:
  7632 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7633 ;; Tracked objects:
  7634 ;;		On entry : 0/0
  7635 ;;		On exit  : 0/0
  7636 ;;		Unchanged: 0/0
  7637 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  7638 ;;      Params:         2       0       0       0
  7639 ;;      Locals:         2       0       0       0
  7640 ;;      Temps:          8       0       0       0
  7641 ;;      Totals:        12       0       0       0
  7642 ;;Total ram usage:       12 bytes
  7643 ;; Hardware stack levels used:    1
  7644 ;; This function calls:
  7645 ;;		Nothing
  7646 ;; This function is called by:
  7647 ;;		_ISR_bassa
  7648 ;; This function uses a non-reentrant model
  7649 ;;
  7650                           
  7651                           	psect	text21
  7652  001368                     __ptext21:
  7653                           	opt stack 0
  7654  001368                     _CANreceiveMessage:
  7655                           	opt stack 26
  7656                           
  7657                           ;CANlib.h: 530: BYTE tamp;
  7658                           ;CANlib.h: 531: BYTE error = 0;
  7659                           
  7660                           ;incstack = 0
  7661  001368  0E00               	movlw	0
  7662  00136A  6E0B               	movwf	CANreceiveMessage@error,c
  7663                           
  7664                           ;CANlib.h: 533: if (COMSTATbits.RXB0OVFL == 0x01)
  7665  00136C  BE74               	btfsc	3956,7,c	;volatile
  7666                           
  7667                           ;CANlib.h: 534: error |= CAN_RX_BUFFER_1_OVFL;
  7668  00136E  800B               	bsf	CANreceiveMessage@error,0,c
  7669                           
  7670                           ;CANlib.h: 536: if (COMSTATbits.RXB1OVFL == 0x01)
  7671  001370  BC74               	btfsc	3956,6,c	;volatile
  7672                           
  7673                           ;CANlib.h: 537: error |= CAN_RX_BUFFER_2_OVFL;
  7674  001372  820B               	bsf	CANreceiveMessage@error,1,c
  7675                           
  7676                           ;CANlib.h: 540: if (RXB1CONbits.RXFUL ==0x01)
  7677  001374  010F               	movlb	15	; () banked
  7678  001376  AF50               	btfss	80,7,b	;volatile
  7679  001378  D143               	goto	i1l412
  7680                           
  7681                           ; BSR set to: 15
  7682                           ;CANlib.h: 541: {
  7683                           ;CANlib.h: 542: msg->identifier = 0;
  7684  00137A  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7685  00137E  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7686  001382  6ADE               	clrf	postinc2,c
  7687  001384  6ADE               	clrf	postinc2,c
  7688  001386  6ADE               	clrf	postinc2,c
  7689  001388  6ADD               	clrf	postdec2,c
  7690                           
  7691                           ; BSR set to: 15
  7692                           ;CANlib.h: 543: msg->data[0] =RXB1D0;
  7693  00138A  EE20 F004          	lfsr	2,4
  7694  00138E  5001               	movf	CANreceiveMessage@msg,w,c
  7695  001390  26D9               	addwf	fsr2l,f,c
  7696  001392  5002               	movf	CANreceiveMessage@msg+1,w,c
  7697  001394  22DA               	addwfc	fsr2h,f,c
  7698  001396  CF56 FFDF          	movff	3926,indf2	;volatile
  7699                           
  7700                           ; BSR set to: 15
  7701                           ;CANlib.h: 544: msg->data[1] =RXB1D1;
  7702  00139A  EE20 F005          	lfsr	2,5
  7703  00139E  5001               	movf	CANreceiveMessage@msg,w,c
  7704  0013A0  26D9               	addwf	fsr2l,f,c
  7705  0013A2  5002               	movf	CANreceiveMessage@msg+1,w,c
  7706  0013A4  22DA               	addwfc	fsr2h,f,c
  7707  0013A6  CF57 FFDF          	movff	3927,indf2	;volatile
  7708                           
  7709                           ; BSR set to: 15
  7710                           ;CANlib.h: 545: msg->data[2] =RXB1D2;
  7711  0013AA  EE20 F006          	lfsr	2,6
  7712  0013AE  5001               	movf	CANreceiveMessage@msg,w,c
  7713  0013B0  26D9               	addwf	fsr2l,f,c
  7714  0013B2  5002               	movf	CANreceiveMessage@msg+1,w,c
  7715  0013B4  22DA               	addwfc	fsr2h,f,c
  7716  0013B6  CF58 FFDF          	movff	3928,indf2	;volatile
  7717                           
  7718                           ; BSR set to: 15
  7719                           ;CANlib.h: 546: msg->data[3] =RXB1D3;
  7720  0013BA  EE20 F007          	lfsr	2,7
  7721  0013BE  5001               	movf	CANreceiveMessage@msg,w,c
  7722  0013C0  26D9               	addwf	fsr2l,f,c
  7723  0013C2  5002               	movf	CANreceiveMessage@msg+1,w,c
  7724  0013C4  22DA               	addwfc	fsr2h,f,c
  7725  0013C6  CF59 FFDF          	movff	3929,indf2	;volatile
  7726                           
  7727                           ; BSR set to: 15
  7728                           ;CANlib.h: 547: msg->data[4] =RXB1D4;
  7729  0013CA  EE20 F008          	lfsr	2,8
  7730  0013CE  5001               	movf	CANreceiveMessage@msg,w,c
  7731  0013D0  26D9               	addwf	fsr2l,f,c
  7732  0013D2  5002               	movf	CANreceiveMessage@msg+1,w,c
  7733  0013D4  22DA               	addwfc	fsr2h,f,c
  7734  0013D6  CF5A FFDF          	movff	3930,indf2	;volatile
  7735                           
  7736                           ; BSR set to: 15
  7737                           ;CANlib.h: 548: msg->data[5] =RXB1D5;
  7738  0013DA  EE20 F009          	lfsr	2,9
  7739  0013DE  5001               	movf	CANreceiveMessage@msg,w,c
  7740  0013E0  26D9               	addwf	fsr2l,f,c
  7741  0013E2  5002               	movf	CANreceiveMessage@msg+1,w,c
  7742  0013E4  22DA               	addwfc	fsr2h,f,c
  7743  0013E6  CF5B FFDF          	movff	3931,indf2	;volatile
  7744                           
  7745                           ; BSR set to: 15
  7746                           ;CANlib.h: 549: msg->data[6] =RXB1D6;
  7747  0013EA  EE20 F00A          	lfsr	2,10
  7748  0013EE  5001               	movf	CANreceiveMessage@msg,w,c
  7749  0013F0  26D9               	addwf	fsr2l,f,c
  7750  0013F2  5002               	movf	CANreceiveMessage@msg+1,w,c
  7751  0013F4  22DA               	addwfc	fsr2h,f,c
  7752  0013F6  CF5C FFDF          	movff	3932,indf2	;volatile
  7753                           
  7754                           ; BSR set to: 15
  7755                           ;CANlib.h: 550: msg->data[7] =RXB1D7;
  7756  0013FA  EE20 F00B          	lfsr	2,11
  7757  0013FE  5001               	movf	CANreceiveMessage@msg,w,c
  7758  001400  26D9               	addwf	fsr2l,f,c
  7759  001402  5002               	movf	CANreceiveMessage@msg+1,w,c
  7760  001404  22DA               	addwfc	fsr2h,f,c
  7761  001406  CF5D FFDF          	movff	3933,indf2	;volatile
  7762                           
  7763                           ; BSR set to: 15
  7764                           ;CANlib.h: 552: msg->RTR = RXB1DLCbits.RXRTR;
  7765  00140A  EE20 F00E          	lfsr	2,14
  7766  00140E  5001               	movf	CANreceiveMessage@msg,w,c
  7767  001410  26D9               	addwf	fsr2l,f,c
  7768  001412  5002               	movf	CANreceiveMessage@msg+1,w,c
  7769  001414  22DA               	addwfc	fsr2h,f,c
  7770  001416  010F               	movlb	15	; () banked
  7771  001418  AD55               	btfss	85,6,b	;volatile
  7772  00141A  D002               	goto	i1u389_20
  7773  00141C  0E01               	movlw	1
  7774  00141E  D001               	goto	i1u389_26
  7775  001420                     i1u389_20:
  7776  001420  0E00               	movlw	0
  7777  001422                     i1u389_26:
  7778  001422  6EDF               	movwf	indf2,c
  7779                           
  7780                           ; BSR set to: 15
  7781                           ;CANlib.h: 554: msg->length = RXB1DLC & 0x0F;
  7782  001424  EE20 F00D          	lfsr	2,13
  7783  001428  5001               	movf	CANreceiveMessage@msg,w,c
  7784  00142A  26D9               	addwf	fsr2l,f,c
  7785  00142C  5002               	movf	CANreceiveMessage@msg+1,w,c
  7786  00142E  22DA               	addwfc	fsr2h,f,c
  7787  001430  010F               	movlb	15	; () banked
  7788  001432  5155               	movf	85,w,b	;volatile
  7789  001434  0B0F               	andlw	15
  7790  001436  6EDF               	movwf	indf2,c
  7791                           
  7792                           ; BSR set to: 15
  7793                           ;CANlib.h: 556: msg->type = RXB1SIDLbits.EXID;
  7794  001438  EE20 F00C          	lfsr	2,12
  7795  00143C  5001               	movf	CANreceiveMessage@msg,w,c
  7796  00143E  26D9               	addwf	fsr2l,f,c
  7797  001440  5002               	movf	CANreceiveMessage@msg+1,w,c
  7798  001442  22DA               	addwfc	fsr2h,f,c
  7799  001444  010F               	movlb	15	; () banked
  7800  001446  A752               	btfss	82,3,b	;volatile
  7801  001448  D002               	goto	i1u390_20
  7802  00144A  0E01               	movlw	1
  7803  00144C  D001               	goto	i1u390_26
  7804  00144E                     i1u390_20:
  7805  00144E  0E00               	movlw	0
  7806  001450                     i1u390_26:
  7807  001450  6EDF               	movwf	indf2,c
  7808                           
  7809                           ; BSR set to: 15
  7810                           ;CANlib.h: 558: if (RXB1SIDLbits.EXID == 0)
  7811  001452  010F               	movlb	15	; () banked
  7812  001454  B752               	btfsc	82,3,b	;volatile
  7813  001456  D044               	goto	i1l3494
  7814                           
  7815                           ; BSR set to: 15
  7816                           ;CANlib.h: 559: {
  7817                           ;CANlib.h: 560: msg->identifier = ((unsigned long)RXB1SIDH)<< 3;
  7818  001458  CF51 F003          	movff	3921,??_CANreceiveMessage	;volatile
  7819  00145C  6A04               	clrf	(??_CANreceiveMessage+1)& (0+255),c
  7820  00145E  6A05               	clrf	(??_CANreceiveMessage+2)& (0+255),c
  7821  001460  6A06               	clrf	(??_CANreceiveMessage+3)& (0+255),c
  7822  001462  0E03               	movlw	3
  7823  001464                     i1u392_25:
  7824  001464  90D8               	bcf	status,0,c
  7825  001466  3603               	rlcf	??_CANreceiveMessage,f,c
  7826  001468  3604               	rlcf	??_CANreceiveMessage+1,f,c
  7827  00146A  3605               	rlcf	??_CANreceiveMessage+2,f,c
  7828  00146C  3606               	rlcf	??_CANreceiveMessage+3,f,c
  7829  00146E  2EE8               	decfsz	wreg,f,c
  7830  001470  D7F9               	goto	i1u392_25
  7831  001472  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7832  001476  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7833  00147A  C003  FFDE         	movff	??_CANreceiveMessage,postinc2
  7834  00147E  C004  FFDE         	movff	??_CANreceiveMessage+1,postinc2
  7835  001482  C005  FFDE         	movff	??_CANreceiveMessage+2,postinc2
  7836  001486  C006  FFDE         	movff	??_CANreceiveMessage+3,postinc2
  7837                           
  7838                           ; BSR set to: 15
  7839                           ;CANlib.h: 561: tamp = (RXB1SIDL >> 5 ) & 0x07;
  7840  00148A  010F               	movlb	15	; () banked
  7841  00148C  3952               	swapf	82,w,b	;volatile
  7842  00148E  42E8               	rrncf	wreg,f,c
  7843  001490  0B07               	andlw	7
  7844  001492  0B07               	andlw	7
  7845  001494  6E0C               	movwf	CANreceiveMessage@tamp,c
  7846                           
  7847                           ; BSR set to: 15
  7848                           ;CANlib.h: 562: msg->identifier = msg->identifier + tamp;
  7849  001496  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7850  00149A  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7851  00149E  CFDE F003          	movff	postinc2,??_CANreceiveMessage
  7852  0014A2  CFDE F004          	movff	postinc2,??_CANreceiveMessage+1
  7853  0014A6  CFDE F005          	movff	postinc2,??_CANreceiveMessage+2
  7854  0014AA  CFDE F006          	movff	postinc2,??_CANreceiveMessage+3
  7855  0014AE  500C               	movf	CANreceiveMessage@tamp,w,c
  7856  0014B0  2403               	addwf	??_CANreceiveMessage,w,c
  7857  0014B2  6E07               	movwf	(??_CANreceiveMessage+4)& (0+255),c
  7858  0014B4  0E00               	movlw	0
  7859  0014B6  2004               	addwfc	??_CANreceiveMessage+1,w,c
  7860  0014B8  6E08               	movwf	(??_CANreceiveMessage+5)& (0+255),c
  7861  0014BA  0E00               	movlw	0
  7862  0014BC  2005               	addwfc	??_CANreceiveMessage+2,w,c
  7863  0014BE  6E09               	movwf	(??_CANreceiveMessage+6)& (0+255),c
  7864  0014C0  0E00               	movlw	0
  7865  0014C2  2006               	addwfc	??_CANreceiveMessage+3,w,c
  7866  0014C4  6E0A               	movwf	(??_CANreceiveMessage+7)& (0+255),c
  7867  0014C6  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7868  0014CA  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7869  0014CE  C007  FFDE         	movff	??_CANreceiveMessage+4,postinc2
  7870  0014D2  C008  FFDE         	movff	??_CANreceiveMessage+5,postinc2
  7871  0014D6  C009  FFDE         	movff	??_CANreceiveMessage+6,postinc2
  7872  0014DA  C00A  FFDE         	movff	??_CANreceiveMessage+7,postinc2
  7873                           
  7874                           ;CANlib.h: 563: }
  7875  0014DE  D08D               	goto	i1l3520
  7876  0014E0                     i1l3494:
  7877                           
  7878                           ; BSR set to: 15
  7879                           ;CANlib.h: 564: else
  7880                           ;CANlib.h: 565: {
  7881                           ;CANlib.h: 566: msg->identifier = (unsigned long) RXB1EIDL;
  7882  0014E0  CF54 F003          	movff	3924,??_CANreceiveMessage	;volatile
  7883  0014E4  6A04               	clrf	(??_CANreceiveMessage+1)& (0+255),c
  7884  0014E6  6A05               	clrf	(??_CANreceiveMessage+2)& (0+255),c
  7885  0014E8  6A06               	clrf	(??_CANreceiveMessage+3)& (0+255),c
  7886  0014EA  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7887  0014EE  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7888  0014F2  C003  FFDE         	movff	??_CANreceiveMessage,postinc2
  7889  0014F6  C004  FFDE         	movff	??_CANreceiveMessage+1,postinc2
  7890  0014FA  C005  FFDE         	movff	??_CANreceiveMessage+2,postinc2
  7891  0014FE  C006  FFDE         	movff	??_CANreceiveMessage+3,postinc2
  7892                           
  7893                           ; BSR set to: 15
  7894                           ;CANlib.h: 567: msg->identifier += ((unsigned long) RXB1EIDH) << 8;
  7895  001502  CF53 F003          	movff	3923,??_CANreceiveMessage	;volatile
  7896  001506  6A04               	clrf	(??_CANreceiveMessage+1)& (0+255),c
  7897  001508  6A05               	clrf	(??_CANreceiveMessage+2)& (0+255),c
  7898  00150A  6A06               	clrf	(??_CANreceiveMessage+3)& (0+255),c
  7899  00150C  C005  F006         	movff	??_CANreceiveMessage+2,??_CANreceiveMessage+3
  7900  001510  C004  F005         	movff	??_CANreceiveMessage+1,??_CANreceiveMessage+2
  7901  001514  C003  F004         	movff	??_CANreceiveMessage,??_CANreceiveMessage+1
  7902  001518  6A03               	clrf	??_CANreceiveMessage,c
  7903  00151A  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7904  00151E  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7905  001522  5003               	movf	??_CANreceiveMessage,w,c
  7906  001524  26DE               	addwf	postinc2,f,c
  7907  001526  5004               	movf	??_CANreceiveMessage+1,w,c
  7908  001528  22DE               	addwfc	postinc2,f,c
  7909  00152A  5005               	movf	??_CANreceiveMessage+2,w,c
  7910  00152C  22DE               	addwfc	postinc2,f,c
  7911  00152E  5006               	movf	??_CANreceiveMessage+3,w,c
  7912  001530  22DE               	addwfc	postinc2,f,c
  7913                           
  7914                           ; BSR set to: 15
  7915                           ;CANlib.h: 569: if (RXB1SIDLbits.EID16)
  7916  001532  010F               	movlb	15	; () banked
  7917  001534  A152               	btfss	82,0,b	;volatile
  7918  001536  D00C               	goto	i1l3502
  7919                           
  7920                           ; BSR set to: 15
  7921                           ;CANlib.h: 570: msg->identifier |= 0x00010000;
  7922  001538  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7923  00153C  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7924  001540  0E00               	movlw	0
  7925  001542  12DE               	iorwf	postinc2,f,c
  7926  001544  0E00               	movlw	0
  7927  001546  12DE               	iorwf	postinc2,f,c
  7928  001548  0E01               	movlw	1
  7929  00154A  12DE               	iorwf	postinc2,f,c
  7930  00154C  0E00               	movlw	0
  7931  00154E  12DE               	iorwf	postinc2,f,c
  7932  001550                     i1l3502:
  7933                           
  7934                           ; BSR set to: 15
  7935                           ;CANlib.h: 571: if (RXB1SIDLbits.EID17)
  7936  001550  010F               	movlb	15	; () banked
  7937  001552  A352               	btfss	82,1,b	;volatile
  7938  001554  D00C               	goto	i1l3506
  7939                           
  7940                           ; BSR set to: 15
  7941                           ;CANlib.h: 572: msg->identifier |= 0x00020000;
  7942  001556  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7943  00155A  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7944  00155E  0E00               	movlw	0
  7945  001560  12DE               	iorwf	postinc2,f,c
  7946  001562  0E00               	movlw	0
  7947  001564  12DE               	iorwf	postinc2,f,c
  7948  001566  0E02               	movlw	2
  7949  001568  12DE               	iorwf	postinc2,f,c
  7950  00156A  0E00               	movlw	0
  7951  00156C  12DE               	iorwf	postinc2,f,c
  7952  00156E                     i1l3506:
  7953                           
  7954                           ; BSR set to: 15
  7955                           ;CANlib.h: 573: if (RXB1SIDLbits.SID0)
  7956  00156E  010F               	movlb	15	; () banked
  7957  001570  AB52               	btfss	82,5,b	;volatile
  7958  001572  D00C               	goto	i1l3510
  7959                           
  7960                           ; BSR set to: 15
  7961                           ;CANlib.h: 574: msg->identifier |= 0x00040000;
  7962  001574  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7963  001578  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7964  00157C  0E00               	movlw	0
  7965  00157E  12DE               	iorwf	postinc2,f,c
  7966  001580  0E00               	movlw	0
  7967  001582  12DE               	iorwf	postinc2,f,c
  7968  001584  0E04               	movlw	4
  7969  001586  12DE               	iorwf	postinc2,f,c
  7970  001588  0E00               	movlw	0
  7971  00158A  12DE               	iorwf	postinc2,f,c
  7972  00158C                     i1l3510:
  7973                           
  7974                           ; BSR set to: 15
  7975                           ;CANlib.h: 575: if (RXB1SIDLbits.SID1)
  7976  00158C  010F               	movlb	15	; () banked
  7977  00158E  AD52               	btfss	82,6,b	;volatile
  7978  001590  D00C               	goto	i1l3514
  7979                           
  7980                           ; BSR set to: 15
  7981                           ;CANlib.h: 576: msg->identifier |= 0x00080000;
  7982  001592  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7983  001596  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7984  00159A  0E00               	movlw	0
  7985  00159C  12DE               	iorwf	postinc2,f,c
  7986  00159E  0E00               	movlw	0
  7987  0015A0  12DE               	iorwf	postinc2,f,c
  7988  0015A2  0E08               	movlw	8
  7989  0015A4  12DE               	iorwf	postinc2,f,c
  7990  0015A6  0E00               	movlw	0
  7991  0015A8  12DE               	iorwf	postinc2,f,c
  7992  0015AA                     i1l3514:
  7993                           
  7994                           ; BSR set to: 15
  7995                           ;CANlib.h: 577: if (RXB1SIDLbits.SID2)
  7996  0015AA  010F               	movlb	15	; () banked
  7997  0015AC  AF52               	btfss	82,7,b	;volatile
  7998  0015AE  D00C               	goto	i1l3518
  7999                           
  8000                           ; BSR set to: 15
  8001                           ;CANlib.h: 578: msg->identifier |= 0x00100000;
  8002  0015B0  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8003  0015B4  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8004  0015B8  0E00               	movlw	0
  8005  0015BA  12DE               	iorwf	postinc2,f,c
  8006  0015BC  0E00               	movlw	0
  8007  0015BE  12DE               	iorwf	postinc2,f,c
  8008  0015C0  0E10               	movlw	16
  8009  0015C2  12DE               	iorwf	postinc2,f,c
  8010  0015C4  0E00               	movlw	0
  8011  0015C6  12DE               	iorwf	postinc2,f,c
  8012  0015C8                     i1l3518:
  8013                           
  8014                           ; BSR set to: 15
  8015                           ;CANlib.h: 580: msg->identifier |= ((unsigned long) RXB1SIDH) << 21;
  8016  0015C8  CF51 F003          	movff	3921,??_CANreceiveMessage	;volatile
  8017  0015CC  6A04               	clrf	(??_CANreceiveMessage+1)& (0+255),c
  8018  0015CE  6A05               	clrf	(??_CANreceiveMessage+2)& (0+255),c
  8019  0015D0  6A06               	clrf	(??_CANreceiveMessage+3)& (0+255),c
  8020  0015D2  0E15               	movlw	21
  8021  0015D4                     i1u398_25:
  8022  0015D4  90D8               	bcf	status,0,c
  8023  0015D6  3603               	rlcf	??_CANreceiveMessage,f,c
  8024  0015D8  3604               	rlcf	??_CANreceiveMessage+1,f,c
  8025  0015DA  3605               	rlcf	??_CANreceiveMessage+2,f,c
  8026  0015DC  3606               	rlcf	??_CANreceiveMessage+3,f,c
  8027  0015DE  2EE8               	decfsz	wreg,f,c
  8028  0015E0  D7F9               	goto	i1u398_25
  8029  0015E2  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8030  0015E6  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8031  0015EA  5003               	movf	??_CANreceiveMessage,w,c
  8032  0015EC  12DE               	iorwf	postinc2,f,c
  8033  0015EE  5004               	movf	??_CANreceiveMessage+1,w,c
  8034  0015F0  12DE               	iorwf	postinc2,f,c
  8035  0015F2  5005               	movf	??_CANreceiveMessage+2,w,c
  8036  0015F4  12DE               	iorwf	postinc2,f,c
  8037  0015F6  5006               	movf	??_CANreceiveMessage+3,w,c
  8038  0015F8  12DE               	iorwf	postinc2,f,c
  8039  0015FA                     i1l3520:
  8040                           
  8041                           ; BSR set to: 15
  8042                           ;CANlib.h: 581: }
  8043                           ;CANlib.h: 583: RXB1CONbits.RXFUL = 0x00;
  8044  0015FA  010F               	movlb	15	; () banked
  8045  0015FC  9F50               	bcf	80,7,b	;volatile
  8046                           
  8047                           ; BSR set to: 15
  8048                           ;CANlib.h: 584: return (error);
  8049                           ;	Return value of _CANreceiveMessage is never used
  8050  0015FE  0012               	return	
  8051  001600                     i1l412:
  8052                           
  8053                           ; BSR set to: 15
  8054                           ;CANlib.h: 585: }
  8055                           ;CANlib.h: 587: if (RXB0CONbits.RXFUL ==0x01)
  8056  001600  AE60               	btfss	3936,7,c	;volatile
  8057  001602  0012               	return	
  8058                           
  8059                           ; BSR set to: 15
  8060                           ;CANlib.h: 588: {
  8061                           ;CANlib.h: 589: msg->identifier = 0;
  8062  001604  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8063  001608  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8064  00160C  6ADE               	clrf	postinc2,c
  8065  00160E  6ADE               	clrf	postinc2,c
  8066  001610  6ADE               	clrf	postinc2,c
  8067  001612  6ADD               	clrf	postdec2,c
  8068                           
  8069                           ; BSR set to: 15
  8070                           ;CANlib.h: 590: msg->data[0] =RXB0D0;
  8071  001614  EE20 F004          	lfsr	2,4
  8072  001618  5001               	movf	CANreceiveMessage@msg,w,c
  8073  00161A  26D9               	addwf	fsr2l,f,c
  8074  00161C  5002               	movf	CANreceiveMessage@msg+1,w,c
  8075  00161E  22DA               	addwfc	fsr2h,f,c
  8076  001620  CF66 FFDF          	movff	3942,indf2	;volatile
  8077                           
  8078                           ; BSR set to: 15
  8079                           ;CANlib.h: 591: msg->data[1] =RXB0D1;
  8080  001624  EE20 F005          	lfsr	2,5
  8081  001628  5001               	movf	CANreceiveMessage@msg,w,c
  8082  00162A  26D9               	addwf	fsr2l,f,c
  8083  00162C  5002               	movf	CANreceiveMessage@msg+1,w,c
  8084  00162E  22DA               	addwfc	fsr2h,f,c
  8085  001630  CF67 FFDF          	movff	3943,indf2	;volatile
  8086                           
  8087                           ; BSR set to: 15
  8088                           ;CANlib.h: 592: msg->data[2] =RXB0D2;
  8089  001634  EE20 F006          	lfsr	2,6
  8090  001638  5001               	movf	CANreceiveMessage@msg,w,c
  8091  00163A  26D9               	addwf	fsr2l,f,c
  8092  00163C  5002               	movf	CANreceiveMessage@msg+1,w,c
  8093  00163E  22DA               	addwfc	fsr2h,f,c
  8094  001640  CF68 FFDF          	movff	3944,indf2	;volatile
  8095                           
  8096                           ; BSR set to: 15
  8097                           ;CANlib.h: 593: msg->data[3] =RXB0D3;
  8098  001644  EE20 F007          	lfsr	2,7
  8099  001648  5001               	movf	CANreceiveMessage@msg,w,c
  8100  00164A  26D9               	addwf	fsr2l,f,c
  8101  00164C  5002               	movf	CANreceiveMessage@msg+1,w,c
  8102  00164E  22DA               	addwfc	fsr2h,f,c
  8103  001650  CF69 FFDF          	movff	3945,indf2	;volatile
  8104                           
  8105                           ; BSR set to: 15
  8106                           ;CANlib.h: 594: msg->data[4] =RXB0D4;
  8107  001654  EE20 F008          	lfsr	2,8
  8108  001658  5001               	movf	CANreceiveMessage@msg,w,c
  8109  00165A  26D9               	addwf	fsr2l,f,c
  8110  00165C  5002               	movf	CANreceiveMessage@msg+1,w,c
  8111  00165E  22DA               	addwfc	fsr2h,f,c
  8112  001660  CF6A FFDF          	movff	3946,indf2	;volatile
  8113                           
  8114                           ; BSR set to: 15
  8115                           ;CANlib.h: 595: msg->data[5] =RXB0D5;
  8116  001664  EE20 F009          	lfsr	2,9
  8117  001668  5001               	movf	CANreceiveMessage@msg,w,c
  8118  00166A  26D9               	addwf	fsr2l,f,c
  8119  00166C  5002               	movf	CANreceiveMessage@msg+1,w,c
  8120  00166E  22DA               	addwfc	fsr2h,f,c
  8121  001670  CF6B FFDF          	movff	3947,indf2	;volatile
  8122                           
  8123                           ; BSR set to: 15
  8124                           ;CANlib.h: 596: msg->data[6] =RXB0D6;
  8125  001674  EE20 F00A          	lfsr	2,10
  8126  001678  5001               	movf	CANreceiveMessage@msg,w,c
  8127  00167A  26D9               	addwf	fsr2l,f,c
  8128  00167C  5002               	movf	CANreceiveMessage@msg+1,w,c
  8129  00167E  22DA               	addwfc	fsr2h,f,c
  8130  001680  CF6C FFDF          	movff	3948,indf2	;volatile
  8131                           
  8132                           ; BSR set to: 15
  8133                           ;CANlib.h: 597: msg->data[7] =RXB0D7;
  8134  001684  EE20 F00B          	lfsr	2,11
  8135  001688  5001               	movf	CANreceiveMessage@msg,w,c
  8136  00168A  26D9               	addwf	fsr2l,f,c
  8137  00168C  5002               	movf	CANreceiveMessage@msg+1,w,c
  8138  00168E  22DA               	addwfc	fsr2h,f,c
  8139  001690  CF6D FFDF          	movff	3949,indf2	;volatile
  8140                           
  8141                           ; BSR set to: 15
  8142                           ;CANlib.h: 599: msg->RTR = RXB0DLCbits.RXRTR;
  8143  001694  EE20 F00E          	lfsr	2,14
  8144  001698  5001               	movf	CANreceiveMessage@msg,w,c
  8145  00169A  26D9               	addwf	fsr2l,f,c
  8146  00169C  5002               	movf	CANreceiveMessage@msg+1,w,c
  8147  00169E  22DA               	addwfc	fsr2h,f,c
  8148  0016A0  AC65               	btfss	3941,6,c	;volatile
  8149  0016A2  D002               	goto	i1u400_20
  8150  0016A4  0E01               	movlw	1
  8151  0016A6  D001               	goto	i1u400_26
  8152  0016A8                     i1u400_20:
  8153  0016A8  0E00               	movlw	0
  8154  0016AA                     i1u400_26:
  8155  0016AA  6EDF               	movwf	indf2,c
  8156                           
  8157                           ; BSR set to: 15
  8158                           ;CANlib.h: 601: msg->length = RXB0DLC & 0x0F;
  8159  0016AC  EE20 F00D          	lfsr	2,13
  8160  0016B0  5001               	movf	CANreceiveMessage@msg,w,c
  8161  0016B2  26D9               	addwf	fsr2l,f,c
  8162  0016B4  5002               	movf	CANreceiveMessage@msg+1,w,c
  8163  0016B6  22DA               	addwfc	fsr2h,f,c
  8164  0016B8  5065               	movf	3941,w,c	;volatile
  8165  0016BA  0B0F               	andlw	15
  8166  0016BC  6EDF               	movwf	indf2,c
  8167                           
  8168                           ; BSR set to: 15
  8169                           ;CANlib.h: 603: msg->type = RXB0SIDLbits.EXID;
  8170  0016BE  EE20 F00C          	lfsr	2,12
  8171  0016C2  5001               	movf	CANreceiveMessage@msg,w,c
  8172  0016C4  26D9               	addwf	fsr2l,f,c
  8173  0016C6  5002               	movf	CANreceiveMessage@msg+1,w,c
  8174  0016C8  22DA               	addwfc	fsr2h,f,c
  8175  0016CA  A662               	btfss	3938,3,c	;volatile
  8176  0016CC  D002               	goto	i1u401_20
  8177  0016CE  0E01               	movlw	1
  8178  0016D0  D001               	goto	i1u401_26
  8179  0016D2                     i1u401_20:
  8180  0016D2  0E00               	movlw	0
  8181  0016D4                     i1u401_26:
  8182  0016D4  6EDF               	movwf	indf2,c
  8183                           
  8184                           ; BSR set to: 15
  8185                           ;CANlib.h: 605: if (RXB0SIDLbits.EXID == 0)
  8186  0016D6  B662               	btfsc	3938,3,c	;volatile
  8187  0016D8  D043               	goto	i1l3556
  8188                           
  8189                           ; BSR set to: 15
  8190                           ;CANlib.h: 606: {
  8191                           ;CANlib.h: 607: msg->identifier = ((unsigned long)RXB0SIDH)<< 3;
  8192  0016DA  CF61 F003          	movff	3937,??_CANreceiveMessage	;volatile
  8193  0016DE  6A04               	clrf	(??_CANreceiveMessage+1)& (0+255),c
  8194  0016E0  6A05               	clrf	(??_CANreceiveMessage+2)& (0+255),c
  8195  0016E2  6A06               	clrf	(??_CANreceiveMessage+3)& (0+255),c
  8196  0016E4  0E03               	movlw	3
  8197  0016E6                     i1u403_25:
  8198  0016E6  90D8               	bcf	status,0,c
  8199  0016E8  3603               	rlcf	??_CANreceiveMessage,f,c
  8200  0016EA  3604               	rlcf	??_CANreceiveMessage+1,f,c
  8201  0016EC  3605               	rlcf	??_CANreceiveMessage+2,f,c
  8202  0016EE  3606               	rlcf	??_CANreceiveMessage+3,f,c
  8203  0016F0  2EE8               	decfsz	wreg,f,c
  8204  0016F2  D7F9               	goto	i1u403_25
  8205  0016F4  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8206  0016F8  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8207  0016FC  C003  FFDE         	movff	??_CANreceiveMessage,postinc2
  8208  001700  C004  FFDE         	movff	??_CANreceiveMessage+1,postinc2
  8209  001704  C005  FFDE         	movff	??_CANreceiveMessage+2,postinc2
  8210  001708  C006  FFDE         	movff	??_CANreceiveMessage+3,postinc2
  8211                           
  8212                           ; BSR set to: 15
  8213                           ;CANlib.h: 608: tamp = (RXB0SIDL >> 5 ) & 0x07;
  8214  00170C  3862               	swapf	3938,w,c	;volatile
  8215  00170E  42E8               	rrncf	wreg,f,c
  8216  001710  0B07               	andlw	7
  8217  001712  0B07               	andlw	7
  8218  001714  6E0C               	movwf	CANreceiveMessage@tamp,c
  8219                           
  8220                           ; BSR set to: 15
  8221                           ;CANlib.h: 609: msg->identifier = msg->identifier + tamp;
  8222  001716  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8223  00171A  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8224  00171E  CFDE F003          	movff	postinc2,??_CANreceiveMessage
  8225  001722  CFDE F004          	movff	postinc2,??_CANreceiveMessage+1
  8226  001726  CFDE F005          	movff	postinc2,??_CANreceiveMessage+2
  8227  00172A  CFDE F006          	movff	postinc2,??_CANreceiveMessage+3
  8228  00172E  500C               	movf	CANreceiveMessage@tamp,w,c
  8229  001730  2403               	addwf	??_CANreceiveMessage,w,c
  8230  001732  6E07               	movwf	(??_CANreceiveMessage+4)& (0+255),c
  8231  001734  0E00               	movlw	0
  8232  001736  2004               	addwfc	??_CANreceiveMessage+1,w,c
  8233  001738  6E08               	movwf	(??_CANreceiveMessage+5)& (0+255),c
  8234  00173A  0E00               	movlw	0
  8235  00173C  2005               	addwfc	??_CANreceiveMessage+2,w,c
  8236  00173E  6E09               	movwf	(??_CANreceiveMessage+6)& (0+255),c
  8237  001740  0E00               	movlw	0
  8238  001742  2006               	addwfc	??_CANreceiveMessage+3,w,c
  8239  001744  6E0A               	movwf	(??_CANreceiveMessage+7)& (0+255),c
  8240  001746  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8241  00174A  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8242  00174E  C007  FFDE         	movff	??_CANreceiveMessage+4,postinc2
  8243  001752  C008  FFDE         	movff	??_CANreceiveMessage+5,postinc2
  8244  001756  C009  FFDE         	movff	??_CANreceiveMessage+6,postinc2
  8245  00175A  C00A  FFDE         	movff	??_CANreceiveMessage+7,postinc2
  8246                           
  8247                           ;CANlib.h: 610: }
  8248  00175E  D088               	goto	i1l3582
  8249  001760                     i1l3556:
  8250                           
  8251                           ; BSR set to: 15
  8252                           ;CANlib.h: 611: else
  8253                           ;CANlib.h: 612: {
  8254                           ;CANlib.h: 613: msg->identifier = (unsigned long) RXB0EIDL;
  8255  001760  CF64 F003          	movff	3940,??_CANreceiveMessage	;volatile
  8256  001764  6A04               	clrf	(??_CANreceiveMessage+1)& (0+255),c
  8257  001766  6A05               	clrf	(??_CANreceiveMessage+2)& (0+255),c
  8258  001768  6A06               	clrf	(??_CANreceiveMessage+3)& (0+255),c
  8259  00176A  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8260  00176E  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8261  001772  C003  FFDE         	movff	??_CANreceiveMessage,postinc2
  8262  001776  C004  FFDE         	movff	??_CANreceiveMessage+1,postinc2
  8263  00177A  C005  FFDE         	movff	??_CANreceiveMessage+2,postinc2
  8264  00177E  C006  FFDE         	movff	??_CANreceiveMessage+3,postinc2
  8265                           
  8266                           ; BSR set to: 15
  8267                           ;CANlib.h: 614: msg->identifier += ((unsigned long) RXB0EIDH) << 8;
  8268  001782  CF63 F003          	movff	3939,??_CANreceiveMessage	;volatile
  8269  001786  6A04               	clrf	(??_CANreceiveMessage+1)& (0+255),c
  8270  001788  6A05               	clrf	(??_CANreceiveMessage+2)& (0+255),c
  8271  00178A  6A06               	clrf	(??_CANreceiveMessage+3)& (0+255),c
  8272  00178C  C005  F006         	movff	??_CANreceiveMessage+2,??_CANreceiveMessage+3
  8273  001790  C004  F005         	movff	??_CANreceiveMessage+1,??_CANreceiveMessage+2
  8274  001794  C003  F004         	movff	??_CANreceiveMessage,??_CANreceiveMessage+1
  8275  001798  6A03               	clrf	??_CANreceiveMessage,c
  8276  00179A  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8277  00179E  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8278  0017A2  5003               	movf	??_CANreceiveMessage,w,c
  8279  0017A4  26DE               	addwf	postinc2,f,c
  8280  0017A6  5004               	movf	??_CANreceiveMessage+1,w,c
  8281  0017A8  22DE               	addwfc	postinc2,f,c
  8282  0017AA  5005               	movf	??_CANreceiveMessage+2,w,c
  8283  0017AC  22DE               	addwfc	postinc2,f,c
  8284  0017AE  5006               	movf	??_CANreceiveMessage+3,w,c
  8285  0017B0  22DE               	addwfc	postinc2,f,c
  8286                           
  8287                           ; BSR set to: 15
  8288                           ;CANlib.h: 616: if (RXB0SIDLbits.EID16)
  8289  0017B2  A062               	btfss	3938,0,c	;volatile
  8290  0017B4  D00C               	goto	i1l3564
  8291                           
  8292                           ; BSR set to: 15
  8293                           ;CANlib.h: 617: msg->identifier |= 0x00010000;
  8294  0017B6  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8295  0017BA  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8296  0017BE  0E00               	movlw	0
  8297  0017C0  12DE               	iorwf	postinc2,f,c
  8298  0017C2  0E00               	movlw	0
  8299  0017C4  12DE               	iorwf	postinc2,f,c
  8300  0017C6  0E01               	movlw	1
  8301  0017C8  12DE               	iorwf	postinc2,f,c
  8302  0017CA  0E00               	movlw	0
  8303  0017CC  12DE               	iorwf	postinc2,f,c
  8304  0017CE                     i1l3564:
  8305                           
  8306                           ; BSR set to: 15
  8307                           ;CANlib.h: 618: if (RXB0SIDLbits.EID17)
  8308  0017CE  A262               	btfss	3938,1,c	;volatile
  8309  0017D0  D00C               	goto	i1l3568
  8310                           
  8311                           ; BSR set to: 15
  8312                           ;CANlib.h: 619: msg->identifier |= 0x00020000;
  8313  0017D2  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8314  0017D6  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8315  0017DA  0E00               	movlw	0
  8316  0017DC  12DE               	iorwf	postinc2,f,c
  8317  0017DE  0E00               	movlw	0
  8318  0017E0  12DE               	iorwf	postinc2,f,c
  8319  0017E2  0E02               	movlw	2
  8320  0017E4  12DE               	iorwf	postinc2,f,c
  8321  0017E6  0E00               	movlw	0
  8322  0017E8  12DE               	iorwf	postinc2,f,c
  8323  0017EA                     i1l3568:
  8324                           
  8325                           ; BSR set to: 15
  8326                           ;CANlib.h: 620: if (RXB0SIDLbits.SID0)
  8327  0017EA  AA62               	btfss	3938,5,c	;volatile
  8328  0017EC  D00C               	goto	i1l3572
  8329                           
  8330                           ; BSR set to: 15
  8331                           ;CANlib.h: 621: msg->identifier |= 0x00040000;
  8332  0017EE  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8333  0017F2  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8334  0017F6  0E00               	movlw	0
  8335  0017F8  12DE               	iorwf	postinc2,f,c
  8336  0017FA  0E00               	movlw	0
  8337  0017FC  12DE               	iorwf	postinc2,f,c
  8338  0017FE  0E04               	movlw	4
  8339  001800  12DE               	iorwf	postinc2,f,c
  8340  001802  0E00               	movlw	0
  8341  001804  12DE               	iorwf	postinc2,f,c
  8342  001806                     i1l3572:
  8343                           
  8344                           ; BSR set to: 15
  8345                           ;CANlib.h: 622: if (RXB0SIDLbits.SID1)
  8346  001806  AC62               	btfss	3938,6,c	;volatile
  8347  001808  D00C               	goto	i1l3576
  8348                           
  8349                           ; BSR set to: 15
  8350                           ;CANlib.h: 623: msg->identifier |= 0x00080000;
  8351  00180A  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8352  00180E  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8353  001812  0E00               	movlw	0
  8354  001814  12DE               	iorwf	postinc2,f,c
  8355  001816  0E00               	movlw	0
  8356  001818  12DE               	iorwf	postinc2,f,c
  8357  00181A  0E08               	movlw	8
  8358  00181C  12DE               	iorwf	postinc2,f,c
  8359  00181E  0E00               	movlw	0
  8360  001820  12DE               	iorwf	postinc2,f,c
  8361  001822                     i1l3576:
  8362                           
  8363                           ; BSR set to: 15
  8364                           ;CANlib.h: 624: if (RXB0SIDLbits.SID2)
  8365  001822  AE62               	btfss	3938,7,c	;volatile
  8366  001824  D00C               	goto	i1l3580
  8367                           
  8368                           ; BSR set to: 15
  8369                           ;CANlib.h: 625: msg->identifier |= 0x00100000;
  8370  001826  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8371  00182A  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8372  00182E  0E00               	movlw	0
  8373  001830  12DE               	iorwf	postinc2,f,c
  8374  001832  0E00               	movlw	0
  8375  001834  12DE               	iorwf	postinc2,f,c
  8376  001836  0E10               	movlw	16
  8377  001838  12DE               	iorwf	postinc2,f,c
  8378  00183A  0E00               	movlw	0
  8379  00183C  12DE               	iorwf	postinc2,f,c
  8380  00183E                     i1l3580:
  8381                           
  8382                           ; BSR set to: 15
  8383                           ;CANlib.h: 627: msg->identifier |= ((unsigned long) RXB0SIDH) << 21;
  8384  00183E  CF61 F003          	movff	3937,??_CANreceiveMessage	;volatile
  8385  001842  6A04               	clrf	(??_CANreceiveMessage+1)& (0+255),c
  8386  001844  6A05               	clrf	(??_CANreceiveMessage+2)& (0+255),c
  8387  001846  6A06               	clrf	(??_CANreceiveMessage+3)& (0+255),c
  8388  001848  0E15               	movlw	21
  8389  00184A                     i1u409_25:
  8390  00184A  90D8               	bcf	status,0,c
  8391  00184C  3603               	rlcf	??_CANreceiveMessage,f,c
  8392  00184E  3604               	rlcf	??_CANreceiveMessage+1,f,c
  8393  001850  3605               	rlcf	??_CANreceiveMessage+2,f,c
  8394  001852  3606               	rlcf	??_CANreceiveMessage+3,f,c
  8395  001854  2EE8               	decfsz	wreg,f,c
  8396  001856  D7F9               	goto	i1u409_25
  8397  001858  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8398  00185C  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8399  001860  5003               	movf	??_CANreceiveMessage,w,c
  8400  001862  12DE               	iorwf	postinc2,f,c
  8401  001864  5004               	movf	??_CANreceiveMessage+1,w,c
  8402  001866  12DE               	iorwf	postinc2,f,c
  8403  001868  5005               	movf	??_CANreceiveMessage+2,w,c
  8404  00186A  12DE               	iorwf	postinc2,f,c
  8405  00186C  5006               	movf	??_CANreceiveMessage+3,w,c
  8406  00186E  12DE               	iorwf	postinc2,f,c
  8407  001870                     i1l3582:
  8408                           
  8409                           ; BSR set to: 15
  8410                           ;CANlib.h: 629: }
  8411                           ;CANlib.h: 630: RXB0CONbits.RXFUL = 0x00;
  8412  001870  9E60               	bcf	3936,7,c	;volatile
  8413                           
  8414                           ; BSR set to: 15
  8415                           ;CANlib.h: 632: return (error);
  8416                           ;	Return value of _CANreceiveMessage is never used
  8417  001872  0012               	return	
  8418  001874                     __end_of_CANreceiveMessage:
  8419                           	opt stack 0
  8420                           pclatu	equ	0xFFB
  8421                           pclath	equ	0xFFA
  8422                           tblptru	equ	0xFF8
  8423                           tblptrh	equ	0xFF7
  8424                           tblptrl	equ	0xFF6
  8425                           tablat	equ	0xFF5
  8426                           prodh	equ	0xFF4
  8427                           prodl	equ	0xFF3
  8428                           intcon	equ	0xFF2
  8429                           intcon2	equ	0xFF1
  8430                           postinc0	equ	0xFEE
  8431                           fsr0h	equ	0xFEA
  8432                           fsr0l	equ	0xFE9
  8433                           wreg	equ	0xFE8
  8434                           indf1	equ	0xFE7
  8435                           fsr1h	equ	0xFE2
  8436                           fsr1l	equ	0xFE1
  8437                           bsr	equ	0xFE0
  8438                           indf2	equ	0xFDF
  8439                           postinc2	equ	0xFDE
  8440                           postdec2	equ	0xFDD
  8441                           fsr2h	equ	0xFDA
  8442                           fsr2l	equ	0xFD9
  8443                           status	equ	0xFD8
  8444                           
  8445 ;; *************** function _CANisRxReady *****************
  8446 ;; Defined at:
  8447 ;;		line 1163 in file "CANlib.h"
  8448 ;; Parameters:    Size  Location     Type
  8449 ;;		None
  8450 ;; Auto vars:     Size  Location     Type
  8451 ;;		None
  8452 ;; Return value:  Size  Location     Type
  8453 ;;                  1    wreg      unsigned char 
  8454 ;; Registers used:
  8455 ;;		wreg, status,2
  8456 ;; Tracked objects:
  8457 ;;		On entry : 0/0
  8458 ;;		On exit  : 0/0
  8459 ;;		Unchanged: 0/0
  8460 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  8461 ;;      Params:         0       0       0       0
  8462 ;;      Locals:         1       0       0       0
  8463 ;;      Temps:          0       0       0       0
  8464 ;;      Totals:         1       0       0       0
  8465 ;;Total ram usage:        1 bytes
  8466 ;; Hardware stack levels used:    1
  8467 ;; This function calls:
  8468 ;;		Nothing
  8469 ;; This function is called by:
  8470 ;;		_ISR_bassa
  8471 ;; This function uses a non-reentrant model
  8472 ;;
  8473                           
  8474                           	psect	text22
  8475  0025DC                     __ptext22:
  8476                           	opt stack 0
  8477  0025DC                     _CANisRxReady:
  8478                           	opt stack 26
  8479                           
  8480                           ;CANlib.h: 1165: return (RXB0CONbits.RXFUL || RXB1CONbits.RXFUL);
  8481                           
  8482                           ; BSR set to: 15
  8483                           ;incstack = 0
  8484  0025DC  0E01               	movlw	1
  8485  0025DE  6E01               	movwf	_CANisRxReady$3034,c
  8486  0025E0  BE60               	btfsc	3936,7,c	;volatile
  8487  0025E2  D005               	goto	i1l563
  8488  0025E4  010F               	movlb	15	; () banked
  8489  0025E6  BF50               	btfsc	80,7,b	;volatile
  8490  0025E8  D002               	goto	i1l563
  8491                           
  8492                           ; BSR set to: 15
  8493  0025EA  0E00               	movlw	0
  8494  0025EC  6E01               	movwf	_CANisRxReady$3034,c
  8495  0025EE                     i1l563:
  8496  0025EE  5001               	movf	_CANisRxReady$3034,w,c
  8497  0025F0  0012               	return	
  8498  0025F2                     __end_of_CANisRxReady:
  8499                           	opt stack 0
  8500  0000                     pclatu	equ	0xFFB
  8501                           pclath	equ	0xFFA
  8502                           tblptru	equ	0xFF8
  8503                           tblptrh	equ	0xFF7
  8504                           tblptrl	equ	0xFF6
  8505                           tablat	equ	0xFF5
  8506                           prodh	equ	0xFF4
  8507                           prodl	equ	0xFF3
  8508                           intcon	equ	0xFF2
  8509                           intcon2	equ	0xFF1
  8510                           postinc0	equ	0xFEE
  8511                           fsr0h	equ	0xFEA
  8512                           fsr0l	equ	0xFE9
  8513                           wreg	equ	0xFE8
  8514                           indf1	equ	0xFE7
  8515                           fsr1h	equ	0xFE2
  8516                           fsr1l	equ	0xFE1
  8517                           bsr	equ	0xFE0
  8518                           indf2	equ	0xFDF
  8519                           postinc2	equ	0xFDE
  8520                           postdec2	equ	0xFDD
  8521                           fsr2h	equ	0xFDA
  8522                           fsr2l	equ	0xFD9
  8523                           status	equ	0xFD8
  8524                           pclatu	equ	0xFFB
  8525                           pclath	equ	0xFFA
  8526                           tblptru	equ	0xFF8
  8527                           tblptrh	equ	0xFF7
  8528                           tblptrl	equ	0xFF6
  8529                           tablat	equ	0xFF5
  8530                           prodh	equ	0xFF4
  8531                           prodl	equ	0xFF3
  8532                           intcon	equ	0xFF2
  8533                           intcon2	equ	0xFF1
  8534                           postinc0	equ	0xFEE
  8535                           fsr0h	equ	0xFEA
  8536                           fsr0l	equ	0xFE9
  8537                           wreg	equ	0xFE8
  8538                           indf1	equ	0xFE7
  8539                           fsr1h	equ	0xFE2
  8540                           fsr1l	equ	0xFE1
  8541                           bsr	equ	0xFE0
  8542                           indf2	equ	0xFDF
  8543                           postinc2	equ	0xFDE
  8544                           postdec2	equ	0xFDD
  8545                           fsr2h	equ	0xFDA
  8546                           fsr2l	equ	0xFD9
  8547                           status	equ	0xFD8
  8548                           
  8549                           	psect	rparam
  8550  0000                     pclatu	equ	0xFFB
  8551                           pclath	equ	0xFFA
  8552                           tblptru	equ	0xFF8
  8553                           tblptrh	equ	0xFF7
  8554                           tblptrl	equ	0xFF6
  8555                           tablat	equ	0xFF5
  8556                           prodh	equ	0xFF4
  8557                           prodl	equ	0xFF3
  8558                           intcon	equ	0xFF2
  8559                           intcon2	equ	0xFF1
  8560                           postinc0	equ	0xFEE
  8561                           fsr0h	equ	0xFEA
  8562                           fsr0l	equ	0xFE9
  8563                           wreg	equ	0xFE8
  8564                           indf1	equ	0xFE7
  8565                           fsr1h	equ	0xFE2
  8566                           fsr1l	equ	0xFE1
  8567                           bsr	equ	0xFE0
  8568                           indf2	equ	0xFDF
  8569                           postinc2	equ	0xFDE
  8570                           postdec2	equ	0xFDD
  8571                           fsr2h	equ	0xFDA
  8572                           fsr2l	equ	0xFD9
  8573                           status	equ	0xFD8
  8574                           
  8575                           	psect	temp
  8576  000042                     btemp:
  8577                           	opt stack 0
  8578  000042                     	ds	1
  8579  0000                     int$flags	set	btemp
  8580                           pclatu	equ	0xFFB
  8581                           pclath	equ	0xFFA
  8582                           tblptru	equ	0xFF8
  8583                           tblptrh	equ	0xFF7
  8584                           tblptrl	equ	0xFF6
  8585                           tablat	equ	0xFF5
  8586                           prodh	equ	0xFF4
  8587                           prodl	equ	0xFF3
  8588                           intcon	equ	0xFF2
  8589                           intcon2	equ	0xFF1
  8590                           postinc0	equ	0xFEE
  8591                           fsr0h	equ	0xFEA
  8592                           fsr0l	equ	0xFE9
  8593                           wreg	equ	0xFE8
  8594                           indf1	equ	0xFE7
  8595                           fsr1h	equ	0xFE2
  8596                           fsr1l	equ	0xFE1
  8597                           bsr	equ	0xFE0
  8598                           indf2	equ	0xFDF
  8599                           postinc2	equ	0xFDE
  8600                           postdec2	equ	0xFDD
  8601                           fsr2h	equ	0xFDA
  8602                           fsr2l	equ	0xFD9
  8603                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        2
    BSS         92
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     36      65
    BANK0           160     29      96
    BANK1           256      0       0
    BANK2           256      0       0

Pointer List with Targets:

    CANreceiveMessage@msg	PTR struct . size(2) Largest target is 15
		 -> msg(BANK0[15]), 

    CANsendMessage@data	PTR unsigned char  size(2) Largest target is 8
		 -> data_array1(BANK0[8]), data_array(BANK0[8]), NULL(NULL[0]), 


Critical Paths under _main in COMRAM

    _main->_SetDCEPWM1
    _main->___wmul
    _send_data->_CANsendMessage
    _delay_ms->___wmul
    _CANInitialize->_CANSetFilter
    _CANInitialize->_CANSetMask
    _battery_measure->___wmul
    ___wmul->___awdiv

Critical Paths under _ISR_bassa in COMRAM

    _ISR_bassa->_CANreceiveMessage

Critical Paths under _main in BANK0

    _send_data->_CANsendMessage
    _configurazione_iniziale->_CANInitialize
    _delay_ms->___wmul
    _CANInitialize->_CANSetFilter
    _CANInitialize->_CANSetMask
    _battery_measure->_CANsendMessage
    ___wmul->___awdiv

Critical Paths under _ISR_bassa in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR_bassa in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR_bassa in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 9     9      0   28353
                                             35 COMRAM     1     1      0
                                             21 BANK0      8     8      0
                   _CANisRXwarningON
                   _CANisTXwarningON
                     _CANsendMessage
                          _OpenEPWM1
                         _OpenTimer2
                         _SetDCEPWM1
                     _SetOutputEPWM1
                            ___awdiv
                             ___wmul
                                _abs
                    _battery_measure
            _configurazione_iniziale
                           _delay_ms
                          _send_data
 ---------------------------------------------------------------------------------
 (1) _send_data                                            1     1      0    4751
                                             33 COMRAM     1     1      0
                       _CANisTxReady
                     _CANsendMessage
 ---------------------------------------------------------------------------------
 (1) _configurazione_iniziale                              0     0      0    9168
                      _CANInitialize
                           _delay_ms
 ---------------------------------------------------------------------------------
 (1) _delay_ms                                             2     0      2     956
                                              8 BANK0      2     0      2
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) _CANInitialize                                       12     7      5    8212
                                              9 BANK0     12     7      5
                   _CANOperationMode
                       _CANSetFilter
                         _CANSetMask
 ---------------------------------------------------------------------------------
 (3) _CANSetMask                                          14     9      5    1788
                                             29 COMRAM     5     0      5
                                              0 BANK0      9     9      0
 ---------------------------------------------------------------------------------
 (3) _CANSetFilter                                        14     9      5    5364
                                             29 COMRAM     5     0      5
                                              0 BANK0      9     9      0
 ---------------------------------------------------------------------------------
 (3) _CANOperationMode                                     1     1      0      62
                                             29 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _battery_measure                                      0     0      0    6376
                       _CANisTxReady
                     _CANsendMessage
                            ___awdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     694
                                             33 COMRAM     2     2      0
                                              4 BANK0      4     0      4
                            ___awdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              8     4      4    1061
                                             29 COMRAM     4     0      4
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (2) _CANsendMessage                                      16     8      8    4597
                                             29 COMRAM     4     4      0
                                              0 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (2) _CANisTxReady                                         1     1      0      24
                                             29 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _abs                                                  4     2      2     130
                                             29 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (1) _SetOutputEPWM1                                       2     1      1     260
                                             29 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (1) _SetDCEPWM1                                           6     4      2     260
                                             29 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (1) _OpenTimer2                                           1     1      0      44
                                             29 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _OpenEPWM1                                            1     1      0      22
                                             29 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _CANisTXwarningON                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _CANisRXwarningON                                     0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _ISR_bassa                                           17    17      0    1161
                                             12 COMRAM    17    17      0
                       _CANisRxReady
                  _CANreceiveMessage
 ---------------------------------------------------------------------------------
 (5) _CANreceiveMessage                                   12    10      2    1137
                                              0 COMRAM    12    10      2
 ---------------------------------------------------------------------------------
 (5) _CANisRxReady                                         1     1      0      24
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _CANisRXwarningON
   _CANisTXwarningON
   _CANsendMessage
   _OpenEPWM1
   _OpenTimer2
   _SetDCEPWM1
   _SetOutputEPWM1
   ___awdiv
   ___wmul
     ___awdiv (ARG)
   _abs
   _battery_measure
     _CANisTxReady
     _CANsendMessage
     ___awdiv
     ___wmul
       ___awdiv (ARG)
   _configurazione_iniziale
     _CANInitialize
       _CANOperationMode
       _CANSetFilter
       _CANSetMask
     _delay_ms
       ___wmul
         ___awdiv (ARG)
   _delay_ms
     ___wmul
       ___awdiv (ARG)
   _send_data
     _CANisTxReady
     _CANsendMessage

 _ISR_bassa (ROOT)
   _CANisRxReady
   _CANreceiveMessage

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             2FF      0       0      10        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0       0       8        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100      0       0       6        0.0%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0     1D      60       4       60.0%
BITCOMRAM           5E      0       2       0        2.1%
COMRAM              5E     24      41       1       69.1%
BITSFR_3             0      0       0      40        0.0%
SFR_3                0      0       0      40        0.0%
BITSFR_2             0      0       0      40        0.0%
SFR_2                0      0       0      40        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      A1       9        0.0%
DATA                 0      0      A1      11        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.35 build -356382666 
Symbol Table                                                                                   Thu Jan 28 18:03:45 2016

              ??_CANisTXwarningON 001E              __end_of_CANSetFilter 0BF4  
                    ___awdiv@sign 00A4                                _id 0025  
                              bsr 000FE0               ___wmul@multiplicand 00A9  
                     __CFG_BORV$3 000000                    _SetOutputEPWM1 2454  
                    __CFG_CP0$OFF 000000                      __CFG_CP1$OFF 000000  
                     __CFG_OSC$HS 000000                       __CFG_LVP$ON 000000  
            _previousTimeCounter1 007C              _previousTimeCounter2 0080  
                             l400 11A0                               l401 11AA  
                             l404 12B4                               l500 0972  
                             l405 12B8                               l501 0976  
                             l406 12C4                               l510 0A6E  
                             l502 0980                               l511 0A78  
                             l503 0984                               l520 0B70  
                             l512 0A7C                               l504 098E  
                             l440 1E84                               l360 2094  
                             l521 0B74                               l513 0A86  
                             l505 0992                               l441 1E88  
                             l361 209E                               l370 0C9E  
                             l522 0B7E                               l514 0A8A  
                             l506 099C                               l450 1F7C  
                             l442 1E92                               l434 1E5A  
                             l371 0CA8                               l523 0B82  
                             l515 0A94                               l451 1F86  
                             l435 1E5E                               l380 10EC  
                             l372 0CB2                               l524 0B8C  
                             l516 0A98                               l452 1F8A  
                             l436 1E68                               l381 0E86  
                             l365 0E70                               l525 0B90  
                             l517 0AA2                               l509 0A6A  
                             l453 1F94                               l445 1F5C  
                             l437 1E6C                               l390 1038  
                             l382 0E8A                               l366 0C0A  
                             l526 0B9A                               l470 0674  
                             l446 1F60                               l438 1E76  
                             l702 225A                               l391 103C  
                             l383 0F7E                               l375 0DBC  
                             l367 0C0E                               l527 0B9E  
                             l471 067E                               l447 1F6A  
                             l439 1E7A                               l392 1048  
                             l384 0F10                               l376 0DC0  
                             l368 0D02                               l720 2452  
                             l528 0BA8                               l480 0774  
                             l472 0682                               l448 1F6E  
                             l704 220A                               l385 0F1A  
                             l377 0DCC                               l369 0C94  
                             l713 23CC                               l481 0778  
                             l473 068C                               l465 0654  
                             l449 1F78                               l386 0F24  
                             l490 0870                               l482 0782  
                             l466 0658                               l395 1102  
                             l387 0F2E                               l491 087A  
                             l483 0786                               l467 0662  
                             l571 253E                               l707 2282  
                             l396 1106                               l492 087E  
                             l484 0790                               l476 0758  
                             l468 0666                               l708 2280  
                             l397 11FA                               l493 0888  
                             l477 075C                               l469 0670  
                             l558 25BC                               l398 118C  
                             l494 088C                               l478 0766  
                             l399 1196                               l495 0896  
                             l487 085E                               l479 076A  
                             l752 248E                               l488 0862  
                             l489 086C                               l818 2598  
                             l498 0964                               l499 0968  
                             l684 1B38                               l676 1AEA  
                             l677 1AE0                               l766 25D6  
                             l678 1AAA                               l767 25D8  
                    __CFG_CPB$OFF 000000                               _PR2 000FCB  
                    __CFG_CPD$OFF 000000                               _id1 0074  
                             _abs 257A                               _dir 0031  
                             _msg 0084                               prod 000FF3  
                             wreg 000FE8                      __CFG_WDT$OFF 000000  
                            ?_abs 001E                              l4002 1DDC  
                            l4102 0310                              l4120 03C0  
                            l4202 0690                              l4034 1EDC  
                            l4060 1F98                              l4028 1E96  
                            l4310 09E6                              l4304 09A0  
                            l4208 06D6                              l4242 07DA  
                            l4138 0470                              l4236 0794  
                            l4156 0520                              l4084 0262  
                            l4270 089A                              l4174 05D0  
                            l4430 20EE                              l4422 208C  
                            l4344 0AEC                              l4424 20A2  
                            l3722 2472                              l4338 0AA6  
                            l4620 11B4                              l4372 0BAC  
                            l4276 08E0                              l4428 20AA  
                            l3726 2480                              l4640 12A8  
                            l4544 0F38                              l4712 23C0  
                            l4704 23A0                              l4570 104C  
                            l4564 102C                              l4468 0CBC  
                            l4708 23AC                              l4820 21CE  
                            l4646 12C8                              l4494 0DD0  
                            l4830 222A                              l4902 18DA  
                            l4488 0DB0                              l4680 2346  
                            l4824 21FE                              l4850 2418  
                            l4834 2232                              l4692 2372  
                            l4668 2532                              l4828 2226  
                            l4940 1B14                              l4932 1AF8  
                            l4694 237C                              l4686 2358  
                            l4934 1B08                              l4696 2380  
                            l3968 25F8                              l4944 1B28  
                            l3986 1D30                              l4970 1BF8  
                            l4938 1B10                              l4882 18A2  
                            l4956 1BD2                              l4972 1C08  
                            l4948 1B3A                              l4892 18BC  
                            l4966 1BEA                              l4898 18D0  
                            _LATA 000F89                              _LATB 000F8A  
                            _LATC 000F8B                              _LATD 000F8C  
                            _LATE 000F8D                              u4100 261C  
                            u4110 2628                              u5100 03F4  
                            u5020 0294                              u4205 24E4  
                            u5105 03E8                              u5025 0288  
                            u5115 044C                              u5035 02EC  
                            u5140 04A4                              u5060 0344  
                            u5145 0498                              u5065 0338  
                            u5155 04FC                              u5075 039C  
                            u6060 11D2                              u5180 0554  
                            u6070 121C                              u5510 09C0  
                            u5430 08BA                              u5350 07B4  
                            u5270 06B0                              u6230 2224  
                            u6400 19CA                              u6065 11C8  
                            u5185 0548                              u6410 1A58  
                            u6075 1212                              u5515 09B4  
                            u5435 08AE                              u5355 07A8  
                            u5275 06A4                              u5195 05AC  
                            u4740 1CB4                              u6500 1B9E  
                            u6420 1A96                              u6085 127C  
                            u5800 0CDA                              u6280 2268  
                            u4745 1CA8                              u5810 0D24  
                            u4755 1D0C                              u4780 1D60  
                            u6380 193E                              u5805 0CD0  
                            u5670 0BCC                              u5590 0AC6  
                            u4950 1FB8                              u4870 1EB6  
                            u5815 0D1A                              u6295 226A  
                            u6560 1C6C                              u5825 0D84  
                            u4785 1D54                              u5930 0F56  
                            u5675 0BC0                              u5595 0ABA  
                            u4955 1FAC                              u4875 1EAA  
                            u4795 1DB8                              u5940 0FA0  
                            u4980 01E6                              u5935 0F4C  
                            u5945 0F96                              u4985 01DA  
                            u6577 2534                              u5955 1000  
                            u4995 023E                              _TMR2 000FCC  
             __size_of_CANSetMask 035E                              abs@a 001E  
                            _main 1874                              fsr0h 000FEA  
                            fsr1h 000FE2                              fsr0l 000FE9  
                            fsr2h 000FDA                              indf1 000FE7  
                            fsr1l 000FE1                              indf2 000FDF  
                            fsr2l 000FD9                              btemp 0042  
                            pclat 000FFA                              prodh 000FF4  
                            prodl 000FF3                              start 01AA  
                   __CFG_IESO$OFF 000000                     __CFG_MCLRE$ON 000000  
                    ___param_bank 000010                  _CANOperationMode 25F2  
          __end_of_SetOutputEPWM1 2498                             ??_abs 0020  
      __size_of_CANreceiveMessage 050C                             ?_main 0001  
                 __end_of___awdiv 23CA                   ___awdiv@divisor 0020  
                           _T2CON 000FCA                             _T3CON 000FB1  
                           i1l412 1600                             i1l563 25EE  
                           i1l660 0122                             i1l661 0144  
                           i1l653 0148                             i1l662 0126  
                           i1l663 012A                             i1l665 0162  
                 ___awdiv@counter 00A3                             _TMR3H 000FB3  
                           _TMR3L 000FB2                 _CANisRxReady$3034 0001  
                           _TRISA 000F92                             _TRISB 000F93  
                           _TRISC 000F94                             _TRISD 000F95  
                           _TRISE 000F96                     __CFG_PWRT$OFF 000000  
                   __CFG_WRT0$OFF 000000                     __CFG_WRT1$OFF 000000  
              __size_of_ISR_bassa 0192                    __CFG_EBTR0$OFF 000000  
                  __CFG_FCMEN$OFF 000000                    __CFG_EBTR1$OFF 000000  
              CANInitialize@flags 00B0                     __CFG_WRTB$OFF 000000  
                   __CFG_WRTC$OFF 000000                     __CFG_WRTD$OFF 000000  
                  __CFG_EBTRB$OFF 000000                             _vBatt 0037  
                  __pbitbssCOMRAM 01F0              __end_of_CANisRxReady 25F2  
                           tablat 000FF5              __end_of_CANisTxReady 25C0  
                           status 000FD8                    __CFG_PBADEN$ON 000000  
                      _SetDCEPWM1 24DA                   __initialization 2498  
        __size_of_battery_measure 008A                      __end_of_main 1C82  
                 ?_SetOutputEPWM1 001E                            ??_main 00B8  
                   __activetblptr 000002                 _CANisTxReady$3032 001E  
                   _counter_array 0060                            _CANCON 000F6F  
                          _ADRESH 000FC4                  ___awdiv@dividend 001E  
                 __CFG_BBSIZ$1024 000000                            i1l3510 158C  
                          i1l3502 1550                            i1l3520 15FA  
                          i1l3514 15AA                            i1l3506 156E  
                          i1l3518 15C8                            i1l3800 00A0  
                          i1l3810 00EA                            i1l3580 183E  
                          i1l3572 1806                            i1l3564 17CE  
                          i1l3556 1760                            i1l3820 012E  
                          i1l3804 00D0                            i1l3582 1870  
                          i1l3494 14E0                            i1l3814 010A  
                          i1l3576 1822                            i1l3568 17EA  
                          i1l3792 0066                        _OpenTimer2 25C0  
                          _RXB0D0 000F66                            _RXB0D1 000F67  
                          _RXB0D2 000F68                            _RXB0D3 000F69  
                          _RXB0D4 000F6A                            _RXB1D0 000F56  
                          _RXB0D5 000F6B                            _RXB1D1 000F57  
                          _RXB0D6 000F6C                            _RXB1D2 000F58  
                          _RXB0D7 000F6D                            _RXB1D3 000F59  
                          _RXB1D4 000F5A                            _RXB1D5 000F5B  
                          _RXB1D6 000F5C                            _RXB1D7 000F5D  
                          _TXB0D0 000F46                            _TXB0D1 000F47  
                          _TXB0D2 000F48                            _TXB0D3 000F49  
                          _TXB1D0 000F36                            _TXB0D4 000F4A  
                          _TXB1D1 000F37                            _TXB0D5 000F4B  
                          _TXB1D2 000F38                            _TXB0D6 000F4C  
                          _TXB1D3 000F39                            _TXB0D7 000F4D  
                          _TXB2D0 000F26                            _TXB1D4 000F3A  
                          _TXB2D1 000F27                            _TXB1D5 000F3B  
                          _TXB2D2 000F28                            _TXB1D6 000F3C  
                          _TXB2D3 000F29                            _TXB1D7 000F3D  
                          _TXB2D4 000F2A                            _TXB2D5 000F2B  
                          _TXB2D6 000F2C                            _TXB2D7 000F2D  
              CANsendMessage@data 00A7                CANsendMessage@tamp 00AB  
                __end_of_delay_ms 2548             __size_of_CANSetFilter 0A46  
                  __CFG_XINST$OFF 000000                __size_of_OpenEPWM1 0010  
               __end_of_ISR_bassa 01AA                            ___wmul 2548  
                       ??___awdiv 0022                    __CFG_STVREN$ON 000000  
                    ??_CANSetMask 00A3                            _errore 0035  
                OpenTimer2@config 001E                            clear_0 249E  
                          clear_1 24AE                  ___awdiv@quotient 00A5  
        ?_configurazione_iniziale 0001                   __CFG_BOREN$BOHW 000000  
                    __pdataCOMRAM 0040                            tblptrh 000FF7  
                          tblptrl 000FF6                            tblptru 000FF8  
                    _CANSetFilter 01AE                        __accesstop 0060  
         __end_of__initialization 24CC                __end_of_CANSetMask 1FE0  
                   ___rparam_used 000001         __size_of_CANisRXwarningON 000C  
                     ?_SetDCEPWM1 001E                    __pcstackCOMRAM 0001  
               ??_battery_measure 0024             CANSetFilter@numBuffer 00A7  
                 OpenEPWM1@period 001E         __size_of_CANisTXwarningON 000C  
           __size_of_CANisRxReady 0016             __size_of_CANisTxReady 001E  
               __end_of_OpenEPWM1 2614          __end_of_CANOperationMode 2604  
                      __pbssBANK0 0060                       ?_OpenTimer2 0001  
                      _data_array 0093           __size_of_CANsendMessage 0774  
                         ?___wmul 00A7                __size_of_send_data 00F4  
                    _CANisRxReady 25DC                           _ECCPR1L 000FBB  
                         _CANSTAT 000F6E                      _CANisTxReady 25A2  
                         _BRGCON1 000F70                           _BRGCON2 000F71  
                         _BRGCON3 000F72            __size_of_CANInitialize 01B2  
                       ?_delay_ms 00AB                           _RXB0DLC 000F65  
                         _RXB1DLC 000F55                           _RXB0CON 000F60  
             __size_of_SetDCEPWM1 003A                           _RXB1CON 000F50  
                         _TXB0DLC 000F45                           _TXB1DLC 000F35  
                         _TXB2DLC 000F25               CANsendMessage@flags 00AA  
        SetOutputEPWM1@outputmode 001E                        _correzione 002F  
                ??_SetOutputEPWM1 001F                           __Hparam 0000  
                      _left_speed 003A                           __Lparam 0000  
                delay_ms@value_ms 00AB                           ___awdiv 232E  
                 __size_of___wmul 0032              CANInitialize@propSeg 00B5  
                         __pcinit 2498                           __ramtop 0300  
             __size_of_OpenTimer2 001C                           __ptext0 1874  
                         __ptext1 2192                           __ptext2 2286  
                         __ptext3 2514                           __ptext4 1FE0  
                         __ptext5 1C82                           __ptext6 01AE  
                         __ptext7 25F2                           __ptext8 23CA  
                         __ptext9 2548                           _counter 0070  
                       _T2CONbits 000FCA                      __size_of_abs 0028  
                      _duty_cycle 0033                        ??_delay_ms 0024  
          CANreceiveMessage@error 000B              end_of_initialization 24CC  
               __end_of_send_data 2286                     __Lmediumconst 0000  
                _CANisRXwarningON 2620                     _CANInitialize 1FE0  
                         postdec2 000FDD                           postinc0 000FEE  
                         postinc2 000FDE                         _ISR_bassa 0018  
                       _PORTAbits 000F80                    CANSetMask@mask 001E  
                       _PORTCbits 000F82                    CANSetMask@tamp 00A8  
                  _centralina_abs 01F1                    CANSetMask@type 0022  
                _CANisTXwarningON 2614                         _TRISDbits 000F95  
__size_of_configurazione_iniziale 00A8               _previousTimeCounter 0078  
         _clock_counter_reference 002D                    _CANsendMessage 0BF4  
                CANInitialize@BRP 00AF                  CANInitialize@SJW 00AE  
                  ?_CANInitialize 00AC                        main@period 0024  
                    ??_SetDCEPWM1 0020                   _battery_measure 23CA  
                      ?_ISR_bassa 0001                    __end_of___wmul 257A  
                   __pidataCOMRAM 262C               start_initialization 2498  
                     __end_of_abs 25A2                __end_of_SetDCEPWM1 2514  
             CANSetMask@numBuffer 00A7            __end_of_CANsendMessage 1368  
               ?_CANOperationMode 0001                      ??_OpenTimer2 001E  
                       _OpenEPWM1 2604                ??_CANOperationMode 001E  
      CANInitialize@FilterConfig1 00B6        CANInitialize@FilterConfig2 00B7  
                        ??___wmul 0022                  __CFG_LPT1OSC$OFF 000000  
              __end_of_OpenTimer2 25DC            CANInitialize@phaseSeg1 00AC  
          CANInitialize@phaseSeg2 00AD                       __pbssCOMRAM 0025  
                   __pcstackBANK0 00A3                       _BRGCON2bits 000F71  
                     _BRGCON3bits 000F72                       _data_array1 009B  
             SetDCEPWM1@dutycycle 001E                 __size_of_delay_ms 0034  
                 ?_CANsendMessage 00A3                        ?_OpenEPWM1 0001  
         __end_of_battery_measure 2454                   ??_CANInitialize 00B1  
                       _can_retry 01F0                      _currentSpeed 0040  
              CANSetFilter@filter 001E                          ?___awdiv 001E  
                     ??_ISR_bassa 000D                       __pintcodelo 0018  
                      send_data@i 0022                          _ECCP1CON 000FBA  
        __end_of_CANisRXwarningON 262C                       _COMSTATbits 000F74  
      SetOutputEPWM1@outputconfig 001F                     _remote_frame1 01F6  
         _configurazione_iniziale 2286                      _message_sent 01F4  
           CANreceiveMessage@tamp 000C                    ___wmul@product 0022  
                        _IPR2bits 000FA2      _delay_quartz_frequency_value 0041  
                        _PIE1bits 000F9D                          _IPR3bits 000FA5  
                        _PIE2bits 000FA0                         _send_data 2192  
                        _PIE3bits 000FA3          __end_of_CANisTXwarningON 2620  
                        i1u400_20 16A8                          i1u400_26 16AA  
                        i1u401_20 16D2                          i1u401_26 16D4  
                        i1u403_25 16E6                          i1u441_20 009E  
                        i1u409_25 184A                          i1u390_20 144E  
                        i1u390_26 1450                          i1u392_25 1464  
                        i1u389_20 1420                          i1u389_26 1422  
                        i1u398_25 15D4                          _PIR1bits 000F9E  
                        _PIR2bits 000FA1                          _PIR3bits 000FA4  
                        _RXB0EIDH 000F63                          _RXB0EIDL 000F64  
                        _RXB1EIDH 000F53                          _RXB1EIDL 000F54  
                        _RCONbits 000FD0                  __CFG_WDTPS$32768 000000  
                        _RXB0SIDH 000F61                          _RXB0SIDL 000F62  
                        _RXF0EIDH 000F02                          _RXB1SIDH 000F51  
                        _RXF0EIDL 000F03                          _RXB1SIDL 000F52  
                        _RXF1EIDH 000F06                          _RXF1EIDL 000F07  
                        _RXF2EIDH 000F0A                          _RXF2EIDL 000F0B  
                        _RXF3EIDH 000F0E                          _RXF3EIDL 000F0F  
                        _RXF4EIDH 000F12                          _RXF4EIDL 000F13  
                        _RXF5EIDH 000F16                          _RXF5EIDL 000F17  
                        _RXF0SIDH 000F00                          _RXF0SIDL 000F01  
                        _TXB0EIDH 000F43                          _RXF1SIDH 000F04  
                        _TXB0EIDL 000F44                          _RXF1SIDL 000F05  
                        _TXB1EIDH 000F33                          _RXF2SIDH 000F08  
                        _TXB1EIDL 000F34                          _RXF2SIDL 000F09  
                        _TXB2EIDH 000F23                          _RXF3SIDH 000F0C  
                        _TXB2EIDL 000F24                          _RXF3SIDL 000F0D  
                        _RXF4SIDH 000F10                          _RXF4SIDL 000F11  
                        _RXF5SIDH 000F14                          _RXF5SIDL 000F15  
                        _RXM0EIDH 000F1A                          _RXM0EIDL 000F1B  
                        _TXB0SIDH 000F41                          _RXM1EIDH 000F1E  
                        _TXB0SIDL 000F42                          _RXM1EIDL 000F1F  
                        _TXB1SIDH 000F31                          _TXB1SIDL 000F32  
                        _TXB2SIDH 000F21                          _TXB2SIDL 000F22  
                        _RXM0SIDH 000F18                          _RXM0SIDL 000F19  
                        _RXM1SIDH 000F1C                          _RXM1SIDL 000F1D  
                        _RXERRCNT 000F75                          _TXERRCNT 000F76  
                      _ADCON0bits 000FC2                        _ADCON1bits 000FC1  
                      _ADCON2bits 000FC0                 ___wmul@multiplier 00A7  
                   ?_CANSetFilter 001E                       _INTCON2bits 000FF1  
                      _CANCONbits 000F6F                       ??_OpenEPWM1 001E  
                ?_battery_measure 0001                        ?_send_data 0001  
                        __Hrparam 0000                      _RXB0SIDLbits 000F62  
                SetDCEPWM1@DCycle 0022                          __Lrparam 0000  
                    _RXB1SIDLbits 000F52                _centralina_comando 01F2  
                      _CANSetMask 1C82                  __size_of___awdiv 009C  
         __size_of_SetOutputEPWM1 0044                _currentSpeed_array 0068  
       ??_configurazione_iniziale 0024                      _RXF0SIDLbits 000F01  
                        _delay_ms 2514                      _RXF1SIDLbits 000F05  
                  ??_CANSetFilter 00A3                          __ptext10 232E  
                        __ptext11 0BF4                          __ptext12 25A2  
                        __ptext21 1368                          __ptext13 257A  
                        __ptext22 25DC                          __ptext14 2454  
                        __ptext15 24DA                          __ptext16 25C0  
                        __ptext17 2604                          __ptext18 2614  
                        __ptext19 2620                      _RXF2SIDLbits 000F09  
                    _RXF3SIDLbits 000F0D                      _RXF4SIDLbits 000F11  
                   _speed_fetched 01F8                      _RXF5SIDLbits 000F15  
        CANsendMessage@dataLength 00A9                      _remote_frame 01F5  
                   __size_of_main 040E                          _duty_set 0039  
            CANreceiveMessage@msg 0001                      _TXB0SIDLbits 000F42  
                    _TXB1SIDLbits 000F32                      _TXB2SIDLbits 000F22  
                        int$flags 0042         __size_of_CANOperationMode 0012  
                   ?_CANisRxReady 0001                     ?_CANisTxReady 0001  
                     _RXB0DLCbits 000F65                       _RXB1DLCbits 000F55  
                    _RXM0SIDLbits 000F19                       _RXB0CONbits 000F60  
                     _RXB1CONbits 000F50                 _CANreceiveMessage 1368  
                    _RXM1SIDLbits 000F1D                        _INTCONbits 000FF2  
                ??_CANsendMessage 001E                      _requestSpeed 003C  
              ?_CANreceiveMessage 0001                      _request_sent 01F7  
        CANsendMessage@identifier 00A3                          intlevel1 0000  
               _centralina_sterzo 01F3                  CANSetFilter@tamp 00A8  
                CANSetFilter@type 0022               ??_CANreceiveMessage 0003  
                     _TXB0DLCbits 000F45                       _right_speed 003D  
                     _TXB1DLCbits 000F35                       _TXB0CONbits 000F40  
                     ??_send_data 0022                       _TXB2DLCbits 000F25  
 __end_of_configurazione_iniziale 232E                       _TXB1CONbits 000F30  
                     _TXB2CONbits 000F20                       _timeCounter 0029  
            CANOperationMode@mode 001E                    ??_CANisRxReady 0001  
                     ?_CANSetMask 001E                    ??_CANisTxReady 001E  
       __end_of_CANreceiveMessage 1874                 ?_CANisRXwarningON 0001  
              ??_CANisRXwarningON 001E                       _previousPwm 003B  
           __end_of_CANInitialize 2192                 ?_CANisTXwarningON 0001  
