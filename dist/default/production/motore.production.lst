

Microchip Technology PIC18 LITE Macro Assembler V1.35 build -356382666 
                                                                                               Thu Jan 28 18:06:32 2016

Microchip Technology Omniscient Code Generator v1.35 (Free mode) build 201507080246
     1                           	processor	18F4480
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bitbssCOMRAM,global,bit,class=COMRAM,space=1,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1
    18                           	psect	text5,global,reloc=2,class=CODE,delta=1
    19                           	psect	text6,global,reloc=2,class=CODE,delta=1
    20                           	psect	text7,global,reloc=2,class=CODE,delta=1
    21                           	psect	text8,global,reloc=2,class=CODE,delta=1
    22                           	psect	text9,global,reloc=2,class=CODE,delta=1
    23                           	psect	text10,global,reloc=2,class=CODE,delta=1
    24                           	psect	text11,global,reloc=2,class=CODE,delta=1
    25                           	psect	text12,global,reloc=2,class=CODE,delta=1
    26                           	psect	text13,global,reloc=2,class=CODE,delta=1
    27                           	psect	text14,global,reloc=2,class=CODE,delta=1
    28                           	psect	text15,global,reloc=2,class=CODE,delta=1
    29                           	psect	text16,global,reloc=2,class=CODE,delta=1
    30                           	psect	text17,global,reloc=2,class=CODE,delta=1
    31                           	psect	text18,global,reloc=2,class=CODE,delta=1
    32                           	psect	text19,global,reloc=2,class=CODE,delta=1
    33                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    34                           	psect	text21,global,reloc=2,class=CODE,delta=1
    35                           	psect	text22,global,reloc=2,class=CODE,delta=1
    36                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    37                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    38                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    39  0000                     
    40                           	psect	idataCOMRAM
    41  00262E                     __pidataCOMRAM:
    42                           	opt stack 0
    43                           
    44                           ;initializer for _currentSpeed
    45  00262E  01                 	db	1
    46                           
    47                           ;initializer for _delay_quartz_frequency_value
    48  00262F  10                 	db	16
    49  0000                     _RXB1CON	set	3920
    50  0000                     _RXB1CONbits	set	3920
    51  0000                     _RXB1D0	set	3926
    52  0000                     _RXB1D1	set	3927
    53  0000                     _RXB1D2	set	3928
    54  0000                     _RXB1D3	set	3929
    55  0000                     _RXB1D4	set	3930
    56  0000                     _RXB1D5	set	3931
    57  0000                     _RXB1D6	set	3932
    58  0000                     _RXB1D7	set	3933
    59  0000                     _RXB1DLC	set	3925
    60  0000                     _RXB1DLCbits	set	3925
    61  0000                     _RXB1EIDH	set	3923
    62  0000                     _RXB1EIDL	set	3924
    63  0000                     _RXB1SIDH	set	3921
    64  0000                     _RXB1SIDL	set	3922
    65  0000                     _RXB1SIDLbits	set	3922
    66  0000                     _RXF0EIDH	set	3842
    67  0000                     _RXF0EIDL	set	3843
    68  0000                     _RXF0SIDH	set	3840
    69  0000                     _RXF0SIDL	set	3841
    70  0000                     _RXF0SIDLbits	set	3841
    71  0000                     _RXF1EIDH	set	3846
    72  0000                     _RXF1EIDL	set	3847
    73  0000                     _RXF1SIDH	set	3844
    74  0000                     _RXF1SIDL	set	3845
    75  0000                     _RXF1SIDLbits	set	3845
    76  0000                     _RXF2EIDH	set	3850
    77  0000                     _RXF2EIDL	set	3851
    78  0000                     _RXF2SIDH	set	3848
    79  0000                     _RXF2SIDL	set	3849
    80  0000                     _RXF2SIDLbits	set	3849
    81  0000                     _RXF3EIDH	set	3854
    82  0000                     _RXF3EIDL	set	3855
    83  0000                     _RXF3SIDH	set	3852
    84  0000                     _RXF3SIDL	set	3853
    85  0000                     _RXF3SIDLbits	set	3853
    86  0000                     _RXF4EIDH	set	3858
    87  0000                     _RXF4EIDL	set	3859
    88  0000                     _RXF4SIDH	set	3856
    89  0000                     _RXF4SIDL	set	3857
    90  0000                     _RXF4SIDLbits	set	3857
    91  0000                     _RXF5EIDH	set	3862
    92  0000                     _RXF5EIDL	set	3863
    93  0000                     _RXF5SIDH	set	3860
    94  0000                     _RXF5SIDL	set	3861
    95  0000                     _RXF5SIDLbits	set	3861
    96  0000                     _RXM0EIDH	set	3866
    97  0000                     _RXM0EIDL	set	3867
    98  0000                     _RXM0SIDH	set	3864
    99  0000                     _RXM0SIDL	set	3865
   100  0000                     _RXM0SIDLbits	set	3865
   101  0000                     _RXM1EIDH	set	3870
   102  0000                     _RXM1EIDL	set	3871
   103  0000                     _RXM1SIDH	set	3868
   104  0000                     _RXM1SIDL	set	3869
   105  0000                     _RXM1SIDLbits	set	3869
   106  0000                     _TXB0CONbits	set	3904
   107  0000                     _TXB0D0	set	3910
   108  0000                     _TXB0D1	set	3911
   109  0000                     _TXB0D2	set	3912
   110  0000                     _TXB0D3	set	3913
   111  0000                     _TXB0D4	set	3914
   112  0000                     _TXB0D5	set	3915
   113  0000                     _TXB0D6	set	3916
   114  0000                     _TXB0D7	set	3917
   115  0000                     _TXB0DLC	set	3909
   116  0000                     _TXB0DLCbits	set	3909
   117  0000                     _TXB0EIDH	set	3907
   118  0000                     _TXB0EIDL	set	3908
   119  0000                     _TXB0SIDH	set	3905
   120  0000                     _TXB0SIDL	set	3906
   121  0000                     _TXB0SIDLbits	set	3906
   122  0000                     _TXB1CONbits	set	3888
   123  0000                     _TXB1D0	set	3894
   124  0000                     _TXB1D1	set	3895
   125  0000                     _TXB1D2	set	3896
   126  0000                     _TXB1D3	set	3897
   127  0000                     _TXB1D4	set	3898
   128  0000                     _TXB1D5	set	3899
   129  0000                     _TXB1D6	set	3900
   130  0000                     _TXB1D7	set	3901
   131  0000                     _TXB1DLC	set	3893
   132  0000                     _TXB1DLCbits	set	3893
   133  0000                     _TXB1EIDH	set	3891
   134  0000                     _TXB1EIDL	set	3892
   135  0000                     _TXB1SIDH	set	3889
   136  0000                     _TXB1SIDL	set	3890
   137  0000                     _TXB1SIDLbits	set	3890
   138  0000                     _TXB2CONbits	set	3872
   139  0000                     _TXB2D0	set	3878
   140  0000                     _TXB2D1	set	3879
   141  0000                     _TXB2D2	set	3880
   142  0000                     _TXB2D3	set	3881
   143  0000                     _TXB2D4	set	3882
   144  0000                     _TXB2D5	set	3883
   145  0000                     _TXB2D6	set	3884
   146  0000                     _TXB2D7	set	3885
   147  0000                     _TXB2DLC	set	3877
   148  0000                     _TXB2DLCbits	set	3877
   149  0000                     _TXB2EIDH	set	3875
   150  0000                     _TXB2EIDL	set	3876
   151  0000                     _TXB2SIDH	set	3873
   152  0000                     _TXB2SIDL	set	3874
   153  0000                     _TXB2SIDLbits	set	3874
   154  0000                     _ADCON0bits	set	4034
   155  0000                     _ADCON1bits	set	4033
   156  0000                     _ADCON2bits	set	4032
   157  0000                     _ADRESH	set	4036
   158  0000                     _BRGCON1	set	3952
   159  0000                     _BRGCON2	set	3953
   160  0000                     _BRGCON2bits	set	3953
   161  0000                     _BRGCON3	set	3954
   162  0000                     _BRGCON3bits	set	3954
   163  0000                     _CANCON	set	3951
   164  0000                     _CANCONbits	set	3951
   165  0000                     _CANSTAT	set	3950
   166  0000                     _COMSTATbits	set	3956
   167  0000                     _ECCP1CON	set	4026
   168  0000                     _ECCPR1L	set	4027
   169  0000                     _INTCON2bits	set	4081
   170  0000                     _INTCONbits	set	4082
   171  0000                     _IPR2bits	set	4002
   172  0000                     _IPR3bits	set	4005
   173  0000                     _LATA	set	3977
   174  0000                     _LATB	set	3978
   175  0000                     _LATC	set	3979
   176  0000                     _LATD	set	3980
   177  0000                     _LATE	set	3981
   178  0000                     _PIE1bits	set	3997
   179  0000                     _PIE2bits	set	4000
   180  0000                     _PIE3bits	set	4003
   181  0000                     _PIR1bits	set	3998
   182  0000                     _PIR2bits	set	4001
   183  0000                     _PIR3bits	set	4004
   184  0000                     _PORTAbits	set	3968
   185  0000                     _PORTCbits	set	3970
   186  0000                     _PR2	set	4043
   187  0000                     _RCONbits	set	4048
   188  0000                     _RXB0CON	set	3936
   189  0000                     _RXB0CONbits	set	3936
   190  0000                     _RXB0D0	set	3942
   191  0000                     _RXB0D1	set	3943
   192  0000                     _RXB0D2	set	3944
   193  0000                     _RXB0D3	set	3945
   194  0000                     _RXB0D4	set	3946
   195  0000                     _RXB0D5	set	3947
   196  0000                     _RXB0D6	set	3948
   197  0000                     _RXB0D7	set	3949
   198  0000                     _RXB0DLC	set	3941
   199  0000                     _RXB0DLCbits	set	3941
   200  0000                     _RXB0EIDH	set	3939
   201  0000                     _RXB0EIDL	set	3940
   202  0000                     _RXB0SIDH	set	3937
   203  0000                     _RXB0SIDL	set	3938
   204  0000                     _RXB0SIDLbits	set	3938
   205  0000                     _RXERRCNT	set	3957
   206  0000                     _T2CON	set	4042
   207  0000                     _T2CONbits	set	4042
   208  0000                     _T3CON	set	4017
   209  0000                     _TMR2	set	4044
   210  0000                     _TMR3H	set	4019
   211  0000                     _TMR3L	set	4018
   212  0000                     _TRISA	set	3986
   213  0000                     _TRISB	set	3987
   214  0000                     _TRISC	set	3988
   215  0000                     _TRISD	set	3989
   216  0000                     _TRISDbits	set	3989
   217  0000                     _TRISE	set	3990
   218  0000                     _TXERRCNT	set	3958
   219                           
   220                           ; #config settings
   221  0000                     
   222                           	psect	cinit
   223  00249A                     __pcinit:
   224                           	opt stack 0
   225  00249A                     start_initialization:
   226                           	opt stack 0
   227  00249A                     __initialization:
   228                           	opt stack 0
   229                           
   230                           ; Clear objects allocated to BANK0 (67 bytes)
   231  00249A  EE00  F060         	lfsr	0,__pbssBANK0
   232  00249E  0E43               	movlw	67
   233  0024A0                     clear_0:
   234  0024A0  6AEE               	clrf	postinc0,c
   235  0024A2  06E8               	decf	wreg,f,c
   236  0024A4  E1FD               	bnz	clear_0
   237                           
   238                           ; Clear objects allocated to BITCOMRAM (2 bytes)
   239  0024A6  6A3F               	clrf	((__pbitbssCOMRAM/(0+8)+1))& (0+255),c
   240  0024A8  6A3E               	clrf	(__pbitbssCOMRAM/(0+8))& (0+255),c
   241                           
   242                           ; Clear objects allocated to COMRAM (25 bytes)
   243  0024AA  EE00  F025         	lfsr	0,__pbssCOMRAM
   244  0024AE  0E19               	movlw	25
   245  0024B0                     clear_1:
   246  0024B0  6AEE               	clrf	postinc0,c
   247  0024B2  06E8               	decf	wreg,f,c
   248  0024B4  E1FD               	bnz	clear_1
   249                           
   250                           ; Initialize objects allocated to COMRAM (2 bytes)
   251                           ; load TBLPTR registers with __pidataCOMRAM
   252  0024B6  0E2E               	movlw	low __pidataCOMRAM
   253  0024B8  6EF6               	movwf	tblptrl,c
   254  0024BA  0E26               	movlw	high __pidataCOMRAM
   255  0024BC  6EF7               	movwf	tblptrh,c
   256  0024BE  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   257  0024C0  6EF8               	movwf	tblptru,c
   258  0024C2  0009               	tblrd		*+	;fetch initializer
   259  0024C4  CFF5 F040          	movff	tablat,__pdataCOMRAM
   260  0024C8  0009               	tblrd		*+	;fetch initializer
   261  0024CA  CFF5 F041          	movff	tablat,__pdataCOMRAM+1
   262  0024CE                     end_of_initialization:
   263                           	opt stack 0
   264  0024CE                     __end_of__initialization:
   265                           	opt stack 0
   266  0024CE  9042               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   267  0024D0  9242               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   268  0024D2  0E00               	movlw	low (__Lmediumconst shr (0+16))
   269  0024D4  6EF8               	movwf	tblptru,c
   270  0024D6  0100               	movlb	0
   271  0024D8  EF3A  F00C         	goto	_main	;jump to C main() function
   272                           tblptru	equ	0xFF8
   273                           tblptrh	equ	0xFF7
   274                           tblptrl	equ	0xFF6
   275                           tablat	equ	0xFF5
   276                           postinc0	equ	0xFEE
   277                           wreg	equ	0xFE8
   278                           
   279                           	psect	bitbssCOMRAM
   280  0001F0                     __pbitbssCOMRAM:
   281                           	opt stack 0
   282  0001F0                     _can_retry:
   283                           	opt stack 0
   284  0001F0                     	ds	1
   285  0001F1                     _centralina_abs:
   286                           	opt stack 0
   287  0001F1                     	ds	1
   288  0001F2                     _centralina_comando:
   289                           	opt stack 0
   290  0001F2                     	ds	1
   291  0001F3                     _centralina_sterzo:
   292                           	opt stack 0
   293  0001F3                     	ds	1
   294  0001F4                     _message_sent:
   295                           	opt stack 0
   296  0001F4                     	ds	1
   297  0001F5                     _remote_frame:
   298                           	opt stack 0
   299  0001F5                     	ds	1
   300  0001F6                     _remote_frame1:
   301                           	opt stack 0
   302  0001F6                     	ds	1
   303  0001F7                     _request_sent:
   304                           	opt stack 0
   305  0001F7                     	ds	1
   306  0001F8                     _speed_fetched:
   307                           	opt stack 0
   308  0001F8                     	ds	1
   309                           tblptru	equ	0xFF8
   310                           tblptrh	equ	0xFF7
   311                           tblptrl	equ	0xFF6
   312                           tablat	equ	0xFF5
   313                           postinc0	equ	0xFEE
   314                           wreg	equ	0xFE8
   315                           
   316                           	psect	bssCOMRAM
   317  000025                     __pbssCOMRAM:
   318                           	opt stack 0
   319  000025                     _id:
   320                           	opt stack 0
   321  000025                     	ds	4
   322  000029                     _timeCounter:
   323                           	opt stack 0
   324  000029                     	ds	4
   325  00002D                     _clock_counter_reference:
   326                           	opt stack 0
   327  00002D                     	ds	2
   328  00002F                     _correzione:
   329                           	opt stack 0
   330  00002F                     	ds	2
   331  000031                     _dir:
   332                           	opt stack 0
   333  000031                     	ds	2
   334  000033                     _duty_cycle:
   335                           	opt stack 0
   336  000033                     	ds	2
   337  000035                     _errore:
   338                           	opt stack 0
   339  000035                     	ds	2
   340  000037                     _vBatt:
   341                           	opt stack 0
   342  000037                     	ds	2
   343  000039                     _duty_set:
   344                           	opt stack 0
   345  000039                     	ds	1
   346  00003A                     _left_speed:
   347                           	opt stack 0
   348  00003A                     	ds	1
   349  00003B                     _previousPwm:
   350                           	opt stack 0
   351  00003B                     	ds	1
   352  00003C                     _requestSpeed:
   353                           	opt stack 0
   354  00003C                     	ds	1
   355  00003D                     _right_speed:
   356                           	opt stack 0
   357  00003D                     	ds	1
   358                           tblptru	equ	0xFF8
   359                           tblptrh	equ	0xFF7
   360                           tblptrl	equ	0xFF6
   361                           tablat	equ	0xFF5
   362                           postinc0	equ	0xFEE
   363                           wreg	equ	0xFE8
   364                           
   365                           	psect	dataCOMRAM
   366  000040                     __pdataCOMRAM:
   367                           	opt stack 0
   368  000040                     _currentSpeed:
   369                           	opt stack 0
   370  000040                     	ds	1
   371  000041                     _delay_quartz_frequency_value:
   372                           	opt stack 0
   373  000041                     	ds	1
   374                           tblptru	equ	0xFF8
   375                           tblptrh	equ	0xFF7
   376                           tblptrl	equ	0xFF6
   377                           tablat	equ	0xFF5
   378                           postinc0	equ	0xFEE
   379                           wreg	equ	0xFE8
   380                           
   381                           	psect	bssBANK0
   382  000060                     __pbssBANK0:
   383                           	opt stack 0
   384  000060                     _counter_array:
   385                           	opt stack 0
   386  000060                     	ds	8
   387  000068                     _currentSpeed_array:
   388                           	opt stack 0
   389  000068                     	ds	8
   390  000070                     _counter:
   391                           	opt stack 0
   392  000070                     	ds	4
   393  000074                     _id1:
   394                           	opt stack 0
   395  000074                     	ds	4
   396  000078                     _previousTimeCounter:
   397                           	opt stack 0
   398  000078                     	ds	4
   399  00007C                     _previousTimeCounter1:
   400                           	opt stack 0
   401  00007C                     	ds	4
   402  000080                     _previousTimeCounter2:
   403                           	opt stack 0
   404  000080                     	ds	4
   405  000084                     _msg:
   406                           	opt stack 0
   407  000084                     	ds	15
   408  000093                     _data_array:
   409                           	opt stack 0
   410  000093                     	ds	8
   411  00009B                     _data_array1:
   412                           	opt stack 0
   413  00009B                     	ds	8
   414                           tblptru	equ	0xFF8
   415                           tblptrh	equ	0xFF7
   416                           tblptrl	equ	0xFF6
   417                           tablat	equ	0xFF5
   418                           postinc0	equ	0xFEE
   419                           wreg	equ	0xFE8
   420                           
   421                           	psect	cstackBANK0
   422  0000A3                     __pcstackBANK0:
   423                           	opt stack 0
   424  0000A3                     ??_CANSetMask:
   425  0000A3                     ??_CANSetFilter:
   426  0000A3                     ___awdiv@counter:
   427                           	opt stack 0
   428  0000A3                     CANsendMessage@identifier:
   429                           	opt stack 0
   430                           
   431                           ; 4 bytes @ 0x0
   432  0000A3                     	ds	1
   433  0000A4                     ___awdiv@sign:
   434                           	opt stack 0
   435                           
   436                           ; 1 bytes @ 0x1
   437  0000A4                     	ds	1
   438  0000A5                     ___awdiv@quotient:
   439                           	opt stack 0
   440                           
   441                           ; 2 bytes @ 0x2
   442  0000A5                     	ds	2
   443  0000A7                     ?___wmul:
   444                           	opt stack 0
   445  0000A7                     CANSetMask@numBuffer:
   446                           	opt stack 0
   447  0000A7                     CANSetFilter@numBuffer:
   448                           	opt stack 0
   449  0000A7                     CANsendMessage@data:
   450                           	opt stack 0
   451  0000A7                     ___wmul@multiplier:
   452                           	opt stack 0
   453                           
   454                           ; 2 bytes @ 0x4
   455  0000A7                     	ds	1
   456  0000A8                     CANSetMask@tamp:
   457                           	opt stack 0
   458  0000A8                     CANSetFilter@tamp:
   459                           	opt stack 0
   460                           
   461                           ; 4 bytes @ 0x5
   462  0000A8                     	ds	1
   463  0000A9                     CANsendMessage@dataLength:
   464                           	opt stack 0
   465  0000A9                     ___wmul@multiplicand:
   466                           	opt stack 0
   467                           
   468                           ; 2 bytes @ 0x6
   469  0000A9                     	ds	1
   470  0000AA                     CANsendMessage@flags:
   471                           	opt stack 0
   472                           
   473                           ; 1 bytes @ 0x7
   474  0000AA                     	ds	1
   475  0000AB                     delay_ms@value_ms:
   476                           	opt stack 0
   477  0000AB                     CANsendMessage@tamp:
   478                           	opt stack 0
   479                           
   480                           ; 4 bytes @ 0x8
   481  0000AB                     	ds	1
   482  0000AC                     CANInitialize@phaseSeg1:
   483                           	opt stack 0
   484                           
   485                           ; 1 bytes @ 0x9
   486  0000AC                     	ds	1
   487  0000AD                     CANInitialize@phaseSeg2:
   488                           	opt stack 0
   489                           
   490                           ; 1 bytes @ 0xA
   491  0000AD                     	ds	1
   492  0000AE                     CANInitialize@SJW:
   493                           	opt stack 0
   494                           
   495                           ; 1 bytes @ 0xB
   496  0000AE                     	ds	1
   497  0000AF                     CANInitialize@BRP:
   498                           	opt stack 0
   499                           
   500                           ; 1 bytes @ 0xC
   501  0000AF                     	ds	1
   502  0000B0                     CANInitialize@flags:
   503                           	opt stack 0
   504                           
   505                           ; 1 bytes @ 0xD
   506  0000B0                     	ds	1
   507  0000B1                     ??_CANInitialize:
   508                           
   509                           ; 0 bytes @ 0xE
   510  0000B1                     	ds	4
   511  0000B5                     CANInitialize@propSeg:
   512                           	opt stack 0
   513                           
   514                           ; 1 bytes @ 0x12
   515  0000B5                     	ds	1
   516  0000B6                     CANInitialize@FilterConfig1:
   517                           	opt stack 0
   518                           
   519                           ; 1 bytes @ 0x13
   520  0000B6                     	ds	1
   521  0000B7                     CANInitialize@FilterConfig2:
   522                           	opt stack 0
   523                           
   524                           ; 1 bytes @ 0x14
   525  0000B7                     	ds	1
   526  0000B8                     ??_main:
   527                           
   528                           ; 0 bytes @ 0x15
   529  0000B8                     	ds	8
   530                           tblptru	equ	0xFF8
   531                           tblptrh	equ	0xFF7
   532                           tblptrl	equ	0xFF6
   533                           tablat	equ	0xFF5
   534                           postinc0	equ	0xFEE
   535                           wreg	equ	0xFE8
   536                           
   537                           	psect	cstackCOMRAM
   538  000001                     __pcstackCOMRAM:
   539                           	opt stack 0
   540  000001                     _CANisRxReady$3034:
   541                           	opt stack 0
   542  000001                     CANreceiveMessage@msg:
   543                           	opt stack 0
   544                           
   545                           ; 2 bytes @ 0x0
   546  000001                     	ds	2
   547  000003                     ??_CANreceiveMessage:
   548                           
   549                           ; 0 bytes @ 0x2
   550  000003                     	ds	8
   551  00000B                     CANreceiveMessage@error:
   552                           	opt stack 0
   553                           
   554                           ; 1 bytes @ 0xA
   555  00000B                     	ds	1
   556  00000C                     CANreceiveMessage@tamp:
   557                           	opt stack 0
   558                           
   559                           ; 1 bytes @ 0xB
   560  00000C                     	ds	1
   561  00000D                     ??_ISR_bassa:
   562                           
   563                           ; 0 bytes @ 0xC
   564  00000D                     	ds	17
   565  00001E                     ??_CANsendMessage:
   566  00001E                     ?_abs:
   567                           	opt stack 0
   568  00001E                     ?___awdiv:
   569                           	opt stack 0
   570  00001E                     CANOperationMode@mode:
   571                           	opt stack 0
   572  00001E                     _CANisTxReady$3032:
   573                           	opt stack 0
   574  00001E                     OpenEPWM1@period:
   575                           	opt stack 0
   576  00001E                     SetOutputEPWM1@outputmode:
   577                           	opt stack 0
   578  00001E                     OpenTimer2@config:
   579                           	opt stack 0
   580  00001E                     SetDCEPWM1@dutycycle:
   581                           	opt stack 0
   582  00001E                     abs@a:
   583                           	opt stack 0
   584  00001E                     ___awdiv@dividend:
   585                           	opt stack 0
   586  00001E                     CANSetMask@mask:
   587                           	opt stack 0
   588  00001E                     CANSetFilter@filter:
   589                           	opt stack 0
   590                           
   591                           ; 4 bytes @ 0x1D
   592  00001E                     	ds	1
   593  00001F                     SetOutputEPWM1@outputconfig:
   594                           	opt stack 0
   595                           
   596                           ; 1 bytes @ 0x1E
   597  00001F                     	ds	1
   598  000020                     ??_abs:
   599  000020                     ??_SetDCEPWM1:
   600  000020                     ___awdiv@divisor:
   601                           	opt stack 0
   602                           
   603                           ; 2 bytes @ 0x1F
   604  000020                     	ds	2
   605  000022                     CANSetMask@type:
   606                           	opt stack 0
   607  000022                     CANSetFilter@type:
   608                           	opt stack 0
   609  000022                     send_data@i:
   610                           	opt stack 0
   611  000022                     SetDCEPWM1@DCycle:
   612                           	opt stack 0
   613  000022                     ___wmul@product:
   614                           	opt stack 0
   615                           
   616                           ; 2 bytes @ 0x21
   617  000022                     	ds	2
   618  000024                     main@period:
   619                           	opt stack 0
   620                           
   621                           ; 1 bytes @ 0x23
   622  000024                     	ds	1
   623                           tblptru	equ	0xFF8
   624                           tblptrh	equ	0xFF7
   625                           tblptrl	equ	0xFF6
   626                           tablat	equ	0xFF5
   627                           postinc0	equ	0xFEE
   628                           wreg	equ	0xFE8
   629                           
   630 ;;
   631 ;;Main: autosize = 0, tempsize = 8, incstack = 0, save=0
   632 ;;
   633 ;; *************** function _main *****************
   634 ;; Defined at:
   635 ;;		line 133 in file "motore.c"
   636 ;; Parameters:    Size  Location     Type
   637 ;;		None
   638 ;; Auto vars:     Size  Location     Type
   639 ;;  period          1   35[COMRAM] unsigned char 
   640 ;; Return value:  Size  Location     Type
   641 ;;                  2  667[None  ] int 
   642 ;; Registers used:
   643 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   644 ;; Tracked objects:
   645 ;;		On entry : 0/0
   646 ;;		On exit  : 0/0
   647 ;;		Unchanged: 0/0
   648 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   649 ;;      Params:         0       0       0       0
   650 ;;      Locals:         1       0       0       0
   651 ;;      Temps:          0       8       0       0
   652 ;;      Totals:         1       8       0       0
   653 ;;Total ram usage:        9 bytes
   654 ;; Hardware stack levels required when called:    5
   655 ;; This function calls:
   656 ;;		_CANisRXwarningON
   657 ;;		_CANisTXwarningON
   658 ;;		_CANsendMessage
   659 ;;		_OpenEPWM1
   660 ;;		_OpenTimer2
   661 ;;		_SetDCEPWM1
   662 ;;		_SetOutputEPWM1
   663 ;;		___awdiv
   664 ;;		___wmul
   665 ;;		_abs
   666 ;;		_battery_measure
   667 ;;		_configurazione_iniziale
   668 ;;		_delay_ms
   669 ;;		_send_data
   670 ;; This function is called by:
   671 ;;		Startup code after reset
   672 ;; This function uses a non-reentrant model
   673 ;;
   674                           
   675                           	psect	text0
   676  001874                     __ptext0:
   677                           	opt stack 0
   678  001874                     _main:
   679                           	opt stack 26
   680                           
   681                           ;motore.c: 134: unsigned char period;
   682                           ;motore.c: 135: configurazione_iniziale();
   683                           
   684                           ;incstack = 0
   685  001874  EC44  F011         	call	_configurazione_iniziale	;wreg free
   686                           
   687                           ;motore.c: 136: PORTAbits.RA1 = 1;
   688  001878  8280               	bsf	3968,1,c	;volatile
   689                           
   690                           ;motore.c: 137: PORTCbits.RC0 = 1;
   691  00187A  8082               	bsf	3970,0,c	;volatile
   692                           
   693                           ;motore.c: 138: PORTCbits.RC1 = 1;
   694  00187C  8282               	bsf	3970,1,c	;volatile
   695                           
   696                           ;motore.c: 139: delay_ms(500);
   697  00187E  0E01               	movlw	1
   698  001880  0100               	movlb	0	; () banked
   699  001882  6FAC               	movwf	(delay_ms@value_ms+1)& (0+255),b
   700  001884  0EF4               	movlw	244
   701  001886  6FAB               	movwf	delay_ms@value_ms& (0+255),b
   702  001888  EC8B  F012         	call	_delay_ms	;wreg free
   703                           
   704                           ;motore.c: 140: PORTAbits.RA1 = 0;
   705  00188C  9280               	bcf	3968,1,c	;volatile
   706                           
   707                           ;motore.c: 141: PORTCbits.RC0 = 0;
   708  00188E  9082               	bcf	3970,0,c	;volatile
   709                           
   710                           ;motore.c: 142: PORTCbits.RC1 = 0;
   711  001890  9282               	bcf	3970,1,c	;volatile
   712                           
   713                           ;motore.c: 143: OpenTimer2(0b01111111 & 0b11111100 & 0b10000111);
   714  001892  0E04               	movlw	4
   715  001894  ECE1  F012         	call	_OpenTimer2
   716                           
   717                           ;motore.c: 144: period = 249;
   718  001898  0EF9               	movlw	249
   719  00189A  6E24               	movwf	main@period,c
   720                           
   721                           ;motore.c: 145: OpenEPWM1(period);
   722  00189C  5024               	movf	main@period,w,c
   723  00189E  EC03  F013         	call	_OpenEPWM1
   724  0018A2                     l4886:
   725                           
   726                           ;motore.c: 148: if (PORTAbits.RA7 == 0) {
   727  0018A2  BE80               	btfsc	3968,7,c	;volatile
   728  0018A4  D132               	goto	l4940
   729                           
   730                           ;motore.c: 149: if (dir == 1) {
   731  0018A6  0431               	decf	_dir,w,c
   732  0018A8  1032               	iorwf	_dir+1,w,c
   733  0018AA  A4D8               	btfss	status,2,c
   734  0018AC  D007               	goto	l4896
   735                           
   736                           ;motore.c: 150: SetOutputEPWM1(0b01111111, 0b11111111);
   737  0018AE  0EFF               	movlw	255
   738  0018B0  6E1E               	movwf	SetOutputEPWM1@outputmode,c
   739  0018B2  0E7F               	movlw	127
   740  0018B4  EC2B  F012         	call	_SetOutputEPWM1
   741                           
   742                           ;motore.c: 151: PORTCbits.RC0 = 1;
   743  0018B8  8082               	bsf	3970,0,c	;volatile
   744                           
   745                           ;motore.c: 152: PORTCbits.RC1 = 0;
   746  0018BA  9282               	bcf	3970,1,c	;volatile
   747  0018BC                     l4896:
   748                           
   749                           ;motore.c: 153: }
   750                           ;motore.c: 154: if (dir == 0) {
   751  0018BC  5031               	movf	_dir,w,c
   752  0018BE  1032               	iorwf	_dir+1,w,c
   753  0018C0  A4D8               	btfss	status,2,c
   754  0018C2  D007               	goto	l4904
   755                           
   756                           ;motore.c: 155: SetOutputEPWM1(0b11111111, 0b11111111);
   757  0018C4  0EFF               	movlw	255
   758  0018C6  6E1E               	movwf	SetOutputEPWM1@outputmode,c
   759  0018C8  0EFF               	movlw	255
   760  0018CA  EC2B  F012         	call	_SetOutputEPWM1
   761                           
   762                           ;motore.c: 156: PORTCbits.RC0 = 0;
   763  0018CE  9082               	bcf	3970,0,c	;volatile
   764                           
   765                           ;motore.c: 157: PORTCbits.RC1 = 1;
   766  0018D0  8282               	bsf	3970,1,c	;volatile
   767  0018D2                     l4904:
   768                           
   769                           ;motore.c: 158: }
   770                           ;motore.c: 159: if (duty_set == 0) {
   771  0018D2  5039               	movf	_duty_set,w,c
   772  0018D4  A4D8               	btfss	status,2,c
   773  0018D6  D002               	goto	l4908
   774                           
   775                           ;motore.c: 160: PORTCbits.RC0 = 0;
   776  0018D8  9082               	bcf	3970,0,c	;volatile
   777                           
   778                           ;motore.c: 161: PORTCbits.RC1 = 0;
   779  0018DA  9282               	bcf	3970,1,c	;volatile
   780  0018DC                     l4908:
   781                           
   782                           ;motore.c: 162: }
   783                           ;motore.c: 163: if ((timeCounter - previousTimeCounter1 >= 10)) {
   784  0018DC  C07C  F0B8         	movff	_previousTimeCounter1,??_main
   785  0018E0  C07D  F0B9         	movff	_previousTimeCounter1+1,??_main+1
   786  0018E4  C07E  F0BA         	movff	_previousTimeCounter1+2,??_main+2
   787  0018E8  C07F  F0BB         	movff	_previousTimeCounter1+3,??_main+3
   788  0018EC  0100               	movlb	0	; () banked
   789  0018EE  1FB8               	comf	??_main& (0+255),f,b
   790  0018F0  1FB9               	comf	(??_main+1)& (0+255),f,b
   791  0018F2  1FBA               	comf	(??_main+2)& (0+255),f,b
   792  0018F4  1FBB               	comf	(??_main+3)& (0+255),f,b
   793  0018F6  2BB8               	incf	??_main& (0+255),f,b
   794  0018F8  0E00               	movlw	0
   795  0018FA  23B9               	addwfc	(??_main+1)& (0+255),f,b
   796  0018FC  23BA               	addwfc	(??_main+2)& (0+255),f,b
   797  0018FE  23BB               	addwfc	(??_main+3)& (0+255),f,b
   798  001900  5029               	movf	_timeCounter,w,c
   799  001902  0100               	movlb	0	; () banked
   800  001904  25B8               	addwf	??_main& (0+255),w,b
   801  001906  0100               	movlb	0	; () banked
   802  001908  6FBC               	movwf	(??_main+4)& (0+255),b
   803  00190A  502A               	movf	_timeCounter+1,w,c
   804  00190C  0100               	movlb	0	; () banked
   805  00190E  21B9               	addwfc	(??_main+1)& (0+255),w,b
   806  001910  0100               	movlb	0	; () banked
   807  001912  6FBD               	movwf	(??_main+5)& (0+255),b
   808  001914  502B               	movf	_timeCounter+2,w,c
   809  001916  0100               	movlb	0	; () banked
   810  001918  21BA               	addwfc	(??_main+2)& (0+255),w,b
   811  00191A  0100               	movlb	0	; () banked
   812  00191C  6FBE               	movwf	(??_main+6)& (0+255),b
   813  00191E  502C               	movf	_timeCounter+3,w,c
   814  001920  0100               	movlb	0	; () banked
   815  001922  21BB               	addwfc	(??_main+3)& (0+255),w,b
   816  001924  0100               	movlb	0	; () banked
   817  001926  6FBF               	movwf	(??_main+7)& (0+255),b
   818  001928  0100               	movlb	0	; () banked
   819  00192A  51BF               	movf	(??_main+7)& (0+255),w,b
   820  00192C  0100               	movlb	0	; () banked
   821  00192E  11BE               	iorwf	(??_main+6)& (0+255),w,b
   822  001930  0100               	movlb	0	; () banked
   823  001932  11BD               	iorwf	(??_main+5)& (0+255),w,b
   824  001934  E105               	bnz	u6380
   825  001936  0E0A               	movlw	10
   826  001938  0100               	movlb	0	; () banked
   827  00193A  5DBC               	subwf	(??_main+4)& (0+255),w,b
   828  00193C  A0D8               	btfss	status,0,c
   829  00193E  D0E5               	goto	l4940
   830  001940                     u6380:
   831                           
   832                           ; BSR set to: 0
   833                           ;motore.c: 164: CANsendMessage(0b00000000000000000000000000110, 0, 0, CAN_CONFIG_STD_MSG
      +                           & CAN_REMOTE_TX_FRAME & CAN_TX_PRIORITY_0);
   834  001940  0E06               	movlw	6
   835  001942  0100               	movlb	0	; () banked
   836  001944  6FA3               	movwf	CANsendMessage@identifier& (0+255),b
   837  001946  0E00               	movlw	0
   838  001948  6FA4               	movwf	(CANsendMessage@identifier+1)& (0+255),b
   839  00194A  0E00               	movlw	0
   840  00194C  6FA5               	movwf	(CANsendMessage@identifier+2)& (0+255),b
   841  00194E  0E00               	movlw	0
   842  001950  6FA6               	movwf	(CANsendMessage@identifier+3)& (0+255),b
   843  001952  0E00               	movlw	0
   844  001954  0100               	movlb	0	; () banked
   845  001956  6FA7               	movwf	CANsendMessage@data& (0+255),b
   846  001958  0E00               	movlw	0
   847  00195A  0100               	movlb	0	; () banked
   848  00195C  6FA8               	movwf	(CANsendMessage@data+1)& (0+255),b
   849  00195E  0E00               	movlw	0
   850  001960  0100               	movlb	0	; () banked
   851  001962  6FA9               	movwf	CANsendMessage@dataLength& (0+255),b
   852  001964  0EFC               	movlw	252
   853  001966  0100               	movlb	0	; () banked
   854  001968  6FAA               	movwf	CANsendMessage@flags& (0+255),b
   855  00196A  ECFA  F005         	call	_CANsendMessage	;wreg free
   856                           
   857                           ;motore.c: 165: if (speed_fetched == 1) {
   858  00196E  A03F               	btfss	_speed_fetched/(0+8),_speed_fetched& (0+7),c
   859  001970  D0CC               	goto	l4940
   860                           
   861                           ;motore.c: 166: speed_fetched = 0;
   862  001972  903F               	bcf	_speed_fetched/(0+8),_speed_fetched& (0+7),c
   863                           
   864                           ;motore.c: 167: currentSpeed = ((left_speed + right_speed) / 2);
   865  001974  503A               	movf	_left_speed,w,c
   866  001976  243D               	addwf	_right_speed,w,c
   867  001978  6E1E               	movwf	___awdiv@dividend,c
   868  00197A  6A1F               	clrf	___awdiv@dividend+1,c
   869  00197C  361F               	rlcf	___awdiv@dividend+1,f,c
   870  00197E  0E00               	movlw	0
   871  001980  6E21               	movwf	___awdiv@divisor+1,c
   872  001982  0E02               	movlw	2
   873  001984  6E20               	movwf	___awdiv@divisor,c
   874  001986  EC98  F011         	call	___awdiv	;wreg free
   875  00198A  501E               	movf	?___awdiv,w,c
   876  00198C  6E40               	movwf	_currentSpeed,c
   877                           
   878                           ;motore.c: 168: if (currentSpeed - requestSpeed > 0) {
   879  00198E  503C               	movf	_requestSpeed,w,c
   880  001990  0100               	movlb	0	; () banked
   881  001992  6FB8               	movwf	??_main& (0+255),b
   882  001994  6BB9               	clrf	(??_main+1)& (0+255),b
   883  001996  0100               	movlb	0	; () banked
   884  001998  1FB8               	comf	??_main& (0+255),f,b
   885  00199A  1FB9               	comf	(??_main+1)& (0+255),f,b
   886  00199C  4BB8               	infsnz	??_main& (0+255),f,b
   887  00199E  2BB9               	incf	(??_main+1)& (0+255),f,b
   888  0019A0  5040               	movf	_currentSpeed,w,c
   889  0019A2  0100               	movlb	0	; () banked
   890  0019A4  6FBA               	movwf	(??_main+2)& (0+255),b
   891  0019A6  6BBB               	clrf	(??_main+3)& (0+255),b
   892  0019A8  0100               	movlb	0	; () banked
   893  0019AA  51B8               	movf	??_main& (0+255),w,b
   894  0019AC  0100               	movlb	0	; () banked
   895  0019AE  27BA               	addwf	(??_main+2)& (0+255),f,b
   896  0019B0  0100               	movlb	0	; () banked
   897  0019B2  51B9               	movf	(??_main+1)& (0+255),w,b
   898  0019B4  0100               	movlb	0	; () banked
   899  0019B6  23BB               	addwfc	(??_main+3)& (0+255),f,b
   900  0019B8  0100               	movlb	0	; () banked
   901  0019BA  BFBB               	btfsc	(??_main+3)& (0+255),7,b
   902  0019BC  D09E               	goto	l4938
   903  0019BE  0100               	movlb	0	; () banked
   904  0019C0  51BB               	movf	(??_main+3)& (0+255),w,b
   905  0019C2  E104               	bnz	u6400
   906  0019C4  0100               	movlb	0	; () banked
   907  0019C6  05BA               	decf	(??_main+2)& (0+255),w,b
   908  0019C8  A0D8               	btfss	status,0,c
   909  0019CA  D097               	goto	l4938
   910  0019CC                     u6400:
   911                           
   912                           ; BSR set to: 0
   913                           ;motore.c: 169: errore = abs(currentSpeed - requestSpeed);
   914  0019CC  503C               	movf	_requestSpeed,w,c
   915  0019CE  0100               	movlb	0	; () banked
   916  0019D0  6FB8               	movwf	??_main& (0+255),b
   917  0019D2  6BB9               	clrf	(??_main+1)& (0+255),b
   918  0019D4  0100               	movlb	0	; () banked
   919  0019D6  1FB8               	comf	??_main& (0+255),f,b
   920  0019D8  1FB9               	comf	(??_main+1)& (0+255),f,b
   921  0019DA  4BB8               	infsnz	??_main& (0+255),f,b
   922  0019DC  2BB9               	incf	(??_main+1)& (0+255),f,b
   923  0019DE  5040               	movf	_currentSpeed,w,c
   924  0019E0  0100               	movlb	0	; () banked
   925  0019E2  25B8               	addwf	??_main& (0+255),w,b
   926  0019E4  6E1E               	movwf	abs@a,c
   927  0019E6  0E00               	movlw	0
   928  0019E8  0100               	movlb	0	; () banked
   929  0019EA  21B9               	addwfc	(??_main+1)& (0+255),w,b
   930  0019EC  6E1F               	movwf	abs@a+1,c
   931  0019EE  ECBE  F012         	call	_abs	;wreg free
   932  0019F2  C01E  F035         	movff	?_abs,_errore
   933  0019F6  C01F  F036         	movff	?_abs+1,_errore+1
   934                           
   935                           ;motore.c: 170: correzione = ((errore / 17)*(errore / 17))*4;
   936  0019FA  0E00               	movlw	0
   937  0019FC  6E21               	movwf	___awdiv@divisor+1,c
   938  0019FE  0E11               	movlw	17
   939  001A00  6E20               	movwf	___awdiv@divisor,c
   940  001A02  C035  F01E         	movff	_errore,___awdiv@dividend
   941  001A06  C036  F01F         	movff	_errore+1,___awdiv@dividend+1
   942  001A0A  EC98  F011         	call	___awdiv	;wreg free
   943  001A0E  C01E  F0A7         	movff	?___awdiv,___wmul@multiplier
   944  001A12  C01F  F0A8         	movff	?___awdiv+1,___wmul@multiplier+1
   945  001A16  0E00               	movlw	0
   946  001A18  6E21               	movwf	___awdiv@divisor+1,c
   947  001A1A  0E11               	movlw	17
   948  001A1C  6E20               	movwf	___awdiv@divisor,c
   949  001A1E  C035  F01E         	movff	_errore,___awdiv@dividend
   950  001A22  C036  F01F         	movff	_errore+1,___awdiv@dividend+1
   951  001A26  EC98  F011         	call	___awdiv	;wreg free
   952  001A2A  C01E  F0A9         	movff	?___awdiv,___wmul@multiplicand
   953  001A2E  C01F  F0AA         	movff	?___awdiv+1,___wmul@multiplicand+1
   954  001A32  ECA5  F012         	call	___wmul	;wreg free
   955  001A36  0100               	movlb	0	; () banked
   956  001A38  90D8               	bcf	status,0,c
   957  001A3A  37A7               	rlcf	?___wmul& (0+255),f,b
   958  001A3C  37A8               	rlcf	(?___wmul+1)& (0+255),f,b
   959  001A3E  0100               	movlb	0	; () banked
   960  001A40  90D8               	bcf	status,0,c
   961  001A42  37A7               	rlcf	?___wmul& (0+255),f,b
   962  001A44  37A8               	rlcf	(?___wmul+1)& (0+255),f,b
   963  001A46  C0A7  F02F         	movff	?___wmul,_correzione
   964  001A4A  C0A8  F030         	movff	?___wmul+1,_correzione+1
   965                           
   966                           ; BSR set to: 0
   967                           ;motore.c: 171: if (correzione > 1) {
   968  001A4E  5030               	movf	_correzione+1,w,c
   969  001A50  E104               	bnz	u6410
   970  001A52  0E02               	movlw	2
   971  001A54  5C2F               	subwf	_correzione,w,c
   972  001A56  A0D8               	btfss	status,0,c
   973  001A58  D049               	goto	l676
   974  001A5A                     u6410:
   975                           
   976                           ; BSR set to: 0
   977                           ;motore.c: 172: if ((currentSpeed - requestSpeed) > 0) {
   978  001A5A  503C               	movf	_requestSpeed,w,c
   979  001A5C  0100               	movlb	0	; () banked
   980  001A5E  6FB8               	movwf	??_main& (0+255),b
   981  001A60  6BB9               	clrf	(??_main+1)& (0+255),b
   982  001A62  0100               	movlb	0	; () banked
   983  001A64  1FB8               	comf	??_main& (0+255),f,b
   984  001A66  1FB9               	comf	(??_main+1)& (0+255),f,b
   985  001A68  4BB8               	infsnz	??_main& (0+255),f,b
   986  001A6A  2BB9               	incf	(??_main+1)& (0+255),f,b
   987  001A6C  5040               	movf	_currentSpeed,w,c
   988  001A6E  0100               	movlb	0	; () banked
   989  001A70  6FBA               	movwf	(??_main+2)& (0+255),b
   990  001A72  6BBB               	clrf	(??_main+3)& (0+255),b
   991  001A74  0100               	movlb	0	; () banked
   992  001A76  51B8               	movf	??_main& (0+255),w,b
   993  001A78  0100               	movlb	0	; () banked
   994  001A7A  27BA               	addwf	(??_main+2)& (0+255),f,b
   995  001A7C  0100               	movlb	0	; () banked
   996  001A7E  51B9               	movf	(??_main+1)& (0+255),w,b
   997  001A80  0100               	movlb	0	; () banked
   998  001A82  23BB               	addwfc	(??_main+3)& (0+255),f,b
   999  001A84  0100               	movlb	0	; () banked
  1000  001A86  BFBB               	btfsc	(??_main+3)& (0+255),7,b
  1001  001A88  D02C               	goto	l677
  1002  001A8A  0100               	movlb	0	; () banked
  1003  001A8C  51BB               	movf	(??_main+3)& (0+255),w,b
  1004  001A8E  E104               	bnz	u6420
  1005  001A90  0100               	movlb	0	; () banked
  1006  001A92  05BA               	decf	(??_main+2)& (0+255),w,b
  1007  001A94  A0D8               	btfss	status,0,c
  1008  001A96  D025               	goto	l677
  1009  001A98                     u6420:
  1010                           
  1011                           ; BSR set to: 0
  1012                           ;motore.c: 173: if (previousPwm > correzione) {
  1013  001A98  503B               	movf	_previousPwm,w,c
  1014  001A9A  5C2F               	subwf	_correzione,w,c
  1015  001A9C  0E00               	movlw	0
  1016  001A9E  5830               	subwfb	_correzione+1,w,c
  1017  001AA0  B0D8               	btfsc	status,0,c
  1018  001AA2  D004               	goto	l678
  1019                           
  1020                           ; BSR set to: 0
  1021                           ;motore.c: 174: duty_set = previousPwm - correzione;
  1022  001AA4  502F               	movf	_correzione,w,c
  1023  001AA6  0800               	sublw	0
  1024  001AA8  243B               	addwf	_previousPwm,w,c
  1025  001AAA  6E39               	movwf	_duty_set,c
  1026  001AAC                     l678:
  1027                           
  1028                           ; BSR set to: 0
  1029                           ;motore.c: 175: }
  1030                           ;motore.c: 176: if ((currentSpeed - requestSpeed) < 0) {
  1031  001AAC  503C               	movf	_requestSpeed,w,c
  1032  001AAE  0100               	movlb	0	; () banked
  1033  001AB0  6FB8               	movwf	??_main& (0+255),b
  1034  001AB2  6BB9               	clrf	(??_main+1)& (0+255),b
  1035  001AB4  0100               	movlb	0	; () banked
  1036  001AB6  1FB8               	comf	??_main& (0+255),f,b
  1037  001AB8  1FB9               	comf	(??_main+1)& (0+255),f,b
  1038  001ABA  4BB8               	infsnz	??_main& (0+255),f,b
  1039  001ABC  2BB9               	incf	(??_main+1)& (0+255),f,b
  1040  001ABE  5040               	movf	_currentSpeed,w,c
  1041  001AC0  0100               	movlb	0	; () banked
  1042  001AC2  6FBA               	movwf	(??_main+2)& (0+255),b
  1043  001AC4  6BBB               	clrf	(??_main+3)& (0+255),b
  1044  001AC6  0100               	movlb	0	; () banked
  1045  001AC8  51B8               	movf	??_main& (0+255),w,b
  1046  001ACA  0100               	movlb	0	; () banked
  1047  001ACC  27BA               	addwf	(??_main+2)& (0+255),f,b
  1048  001ACE  0100               	movlb	0	; () banked
  1049  001AD0  51B9               	movf	(??_main+1)& (0+255),w,b
  1050  001AD2  0100               	movlb	0	; () banked
  1051  001AD4  23BB               	addwfc	(??_main+3)& (0+255),f,b
  1052  001AD6  0100               	movlb	0	; () banked
  1053  001AD8  AFBB               	btfss	(??_main+3)& (0+255),7,b
  1054  001ADA  D003               	goto	l677
  1055                           
  1056                           ; BSR set to: 0
  1057                           ;motore.c: 177: duty_set = previousPwm + correzione;
  1058  001ADC  503B               	movf	_previousPwm,w,c
  1059  001ADE  242F               	addwf	_correzione,w,c
  1060  001AE0  6E39               	movwf	_duty_set,c
  1061  001AE2                     l677:
  1062                           
  1063                           ; BSR set to: 0
  1064                           ;motore.c: 178: }
  1065                           ;motore.c: 179: }
  1066                           ;motore.c: 180: if (correzione < 1) {
  1067  001AE2  502F               	movf	_correzione,w,c
  1068  001AE4  1030               	iorwf	_correzione+1,w,c
  1069  001AE6  B4D8               	btfsc	status,2,c
  1070                           
  1071                           ; BSR set to: 0
  1072                           ;motore.c: 181: duty_set = previousPwm;
  1073  001AE8  C03B  F039         	movff	_previousPwm,_duty_set
  1074  001AEC                     l676:
  1075                           
  1076                           ; BSR set to: 0
  1077                           ;motore.c: 182: }
  1078                           ;motore.c: 183: }
  1079                           ;motore.c: 184: previousPwm = duty_set;
  1080  001AEC  C039  F03B         	movff	_duty_set,_previousPwm
  1081                           
  1082                           ; BSR set to: 0
  1083                           ;motore.c: 185: SetDCEPWM1(duty_set);
  1084  001AF0  C039  F01E         	movff	_duty_set,SetDCEPWM1@dutycycle
  1085  001AF4  6A1F               	clrf	SetDCEPWM1@dutycycle+1,c
  1086  001AF6  EC6E  F012         	call	_SetDCEPWM1	;wreg free
  1087  001AFA                     l4938:
  1088                           
  1089                           ;motore.c: 186: }
  1090                           ;motore.c: 187: previousTimeCounter1 = timeCounter;
  1091  001AFA  C029  F07C         	movff	_timeCounter,_previousTimeCounter1
  1092  001AFE  C02A  F07D         	movff	_timeCounter+1,_previousTimeCounter1+1
  1093  001B02  C02B  F07E         	movff	_timeCounter+2,_previousTimeCounter1+2
  1094  001B06  C02C  F07F         	movff	_timeCounter+3,_previousTimeCounter1+3
  1095  001B0A                     l4940:
  1096                           
  1097                           ;motore.c: 188: }
  1098                           ;motore.c: 189: }
  1099                           ;motore.c: 190: }
  1100                           ;motore.c: 191: if ((remote_frame == 1) || (can_retry == 1)) {
  1101  001B0A  AA3E               	btfss	_remote_frame/(0+8),_remote_frame& (0+7),c
  1102  001B0C  B03E               	btfsc	_can_retry/(0+8),_can_retry& (0+7),c
  1103  001B0E  D001               	goto	l4944
  1104  001B10  D002               	goto	l4946
  1105  001B12                     l4944:
  1106                           
  1107                           ;motore.c: 192: send_data();
  1108  001B12  ECCA  F010         	call	_send_data	;wreg free
  1109  001B16                     l4946:
  1110                           
  1111                           ;motore.c: 193: }
  1112                           ;motore.c: 194: if ((CANisTXwarningON() == 1) || (CANisRXwarningON() == 1)) {
  1113  001B16  EC0B  F013         	call	_CANisTXwarningON	;wreg free
  1114  001B1A  06E8               	decf	wreg,f,c
  1115  001B1C  B4D8               	btfsc	status,2,c
  1116  001B1E  D005               	goto	l4950
  1117  001B20  EC11  F013         	call	_CANisRXwarningON	;wreg free
  1118  001B24  06E8               	decf	wreg,f,c
  1119  001B26  A4D8               	btfss	status,2,c
  1120  001B28  D008               	goto	l684
  1121  001B2A                     l4950:
  1122                           
  1123                           ;motore.c: 195: SetDCEPWM1(0);
  1124  001B2A  0E00               	movlw	0
  1125  001B2C  6E1F               	movwf	SetDCEPWM1@dutycycle+1,c
  1126  001B2E  0E00               	movlw	0
  1127  001B30  6E1E               	movwf	SetDCEPWM1@dutycycle,c
  1128  001B32  EC6E  F012         	call	_SetDCEPWM1	;wreg free
  1129                           
  1130                           ;motore.c: 196: PORTAbits.RA7 = 1;
  1131  001B36  8E80               	bsf	3968,7,c	;volatile
  1132                           
  1133                           ;motore.c: 197: } else {
  1134  001B38  D001               	goto	l4954
  1135  001B3A                     l684:
  1136                           
  1137                           ;motore.c: 198: PORTAbits.RA7 = 0;
  1138  001B3A  9E80               	bcf	3968,7,c	;volatile
  1139  001B3C                     l4954:
  1140                           
  1141                           ;motore.c: 199: }
  1142                           ;motore.c: 202: if ((timeCounter - previousTimeCounter) > 100) {
  1143  001B3C  C078  F0B8         	movff	_previousTimeCounter,??_main
  1144  001B40  C079  F0B9         	movff	_previousTimeCounter+1,??_main+1
  1145  001B44  C07A  F0BA         	movff	_previousTimeCounter+2,??_main+2
  1146  001B48  C07B  F0BB         	movff	_previousTimeCounter+3,??_main+3
  1147  001B4C  0100               	movlb	0	; () banked
  1148  001B4E  1FB8               	comf	??_main& (0+255),f,b
  1149  001B50  1FB9               	comf	(??_main+1)& (0+255),f,b
  1150  001B52  1FBA               	comf	(??_main+2)& (0+255),f,b
  1151  001B54  1FBB               	comf	(??_main+3)& (0+255),f,b
  1152  001B56  2BB8               	incf	??_main& (0+255),f,b
  1153  001B58  0E00               	movlw	0
  1154  001B5A  23B9               	addwfc	(??_main+1)& (0+255),f,b
  1155  001B5C  23BA               	addwfc	(??_main+2)& (0+255),f,b
  1156  001B5E  23BB               	addwfc	(??_main+3)& (0+255),f,b
  1157  001B60  5029               	movf	_timeCounter,w,c
  1158  001B62  0100               	movlb	0	; () banked
  1159  001B64  25B8               	addwf	??_main& (0+255),w,b
  1160  001B66  0100               	movlb	0	; () banked
  1161  001B68  6FBC               	movwf	(??_main+4)& (0+255),b
  1162  001B6A  502A               	movf	_timeCounter+1,w,c
  1163  001B6C  0100               	movlb	0	; () banked
  1164  001B6E  21B9               	addwfc	(??_main+1)& (0+255),w,b
  1165  001B70  0100               	movlb	0	; () banked
  1166  001B72  6FBD               	movwf	(??_main+5)& (0+255),b
  1167  001B74  502B               	movf	_timeCounter+2,w,c
  1168  001B76  0100               	movlb	0	; () banked
  1169  001B78  21BA               	addwfc	(??_main+2)& (0+255),w,b
  1170  001B7A  0100               	movlb	0	; () banked
  1171  001B7C  6FBE               	movwf	(??_main+6)& (0+255),b
  1172  001B7E  502C               	movf	_timeCounter+3,w,c
  1173  001B80  0100               	movlb	0	; () banked
  1174  001B82  21BB               	addwfc	(??_main+3)& (0+255),w,b
  1175  001B84  0100               	movlb	0	; () banked
  1176  001B86  6FBF               	movwf	(??_main+7)& (0+255),b
  1177  001B88  0100               	movlb	0	; () banked
  1178  001B8A  51BF               	movf	(??_main+7)& (0+255),w,b
  1179  001B8C  0100               	movlb	0	; () banked
  1180  001B8E  11BE               	iorwf	(??_main+6)& (0+255),w,b
  1181  001B90  0100               	movlb	0	; () banked
  1182  001B92  11BD               	iorwf	(??_main+5)& (0+255),w,b
  1183  001B94  E105               	bnz	u6500
  1184  001B96  0E65               	movlw	101
  1185  001B98  0100               	movlb	0	; () banked
  1186  001B9A  5DBC               	subwf	(??_main+4)& (0+255),w,b
  1187  001B9C  A0D8               	btfss	status,0,c
  1188  001B9E  D035               	goto	l4978
  1189  001BA0                     u6500:
  1190                           
  1191                           ; BSR set to: 0
  1192                           ;motore.c: 203: if (request_sent == 0) {
  1193  001BA0  BE3E               	btfsc	_request_sent/(0+8),_request_sent& (0+7),c
  1194  001BA2  D018               	goto	l4962
  1195                           
  1196                           ; BSR set to: 0
  1197                           ;motore.c: 204: CANsendMessage(0b00000000000000000000000000010, data_array, 8, CAN_CONFI
      +                          G_STD_MSG & CAN_REMOTE_TX_FRAME & CAN_TX_PRIORITY_0);
  1198  001BA4  0E02               	movlw	2
  1199  001BA6  0100               	movlb	0	; () banked
  1200  001BA8  6FA3               	movwf	CANsendMessage@identifier& (0+255),b
  1201  001BAA  0E00               	movlw	0
  1202  001BAC  6FA4               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  1203  001BAE  0E00               	movlw	0
  1204  001BB0  6FA5               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  1205  001BB2  0E00               	movlw	0
  1206  001BB4  6FA6               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  1207  001BB6  0E93               	movlw	low _data_array
  1208  001BB8  0100               	movlb	0	; () banked
  1209  001BBA  6FA7               	movwf	CANsendMessage@data& (0+255),b
  1210  001BBC  0E00               	movlw	high _data_array
  1211  001BBE  0100               	movlb	0	; () banked
  1212  001BC0  6FA8               	movwf	(CANsendMessage@data+1)& (0+255),b
  1213  001BC2  0E08               	movlw	8
  1214  001BC4  0100               	movlb	0	; () banked
  1215  001BC6  6FA9               	movwf	CANsendMessage@dataLength& (0+255),b
  1216  001BC8  0EFC               	movlw	252
  1217  001BCA  0100               	movlb	0	; () banked
  1218  001BCC  6FAA               	movwf	CANsendMessage@flags& (0+255),b
  1219  001BCE  ECFA  F005         	call	_CANsendMessage	;wreg free
  1220                           
  1221                           ;motore.c: 205: request_sent = 1;
  1222  001BD2  8E3E               	bsf	_request_sent/(0+8),_request_sent& (0+7),c
  1223  001BD4                     l4962:
  1224                           
  1225                           ;motore.c: 206: }
  1226                           ;motore.c: 207: if (request_sent == 1) {
  1227  001BD4  AE3E               	btfss	_request_sent/(0+8),_request_sent& (0+7),c
  1228  001BD6  D011               	goto	l4976
  1229                           
  1230                           ;motore.c: 209: if ((centralina_abs == 1)&&(centralina_sterzo == 1)&&(centralina_comando
      +                           == 1)) {
  1231  001BD8  B23E               	btfsc	_centralina_abs/(0+8),_centralina_abs& (0+7),c
  1232  001BDA  A63E               	btfss	_centralina_sterzo/(0+8),_centralina_sterzo& (0+7),c
  1233  001BDC  D007               	goto	l4972
  1234  001BDE  A43E               	btfss	_centralina_comando/(0+8),_centralina_comando& (0+7),c
  1235  001BE0  D005               	goto	l4972
  1236                           
  1237                           ;motore.c: 210: centralina_abs = 0;
  1238  001BE2  923E               	bcf	_centralina_abs/(0+8),_centralina_abs& (0+7),c
  1239                           
  1240                           ;motore.c: 211: centralina_sterzo = 0;
  1241  001BE4  963E               	bcf	_centralina_sterzo/(0+8),_centralina_sterzo& (0+7),c
  1242                           
  1243                           ;motore.c: 212: centralina_comando = 0;
  1244  001BE6  943E               	bcf	_centralina_comando/(0+8),_centralina_comando& (0+7),c
  1245                           
  1246                           ;motore.c: 213: PORTAbits.RA7 = 0;
  1247  001BE8  9E80               	bcf	3968,7,c	;volatile
  1248                           
  1249                           ;motore.c: 214: } else {
  1250  001BEA  D007               	goto	l4976
  1251  001BEC                     l4972:
  1252                           
  1253                           ;motore.c: 215: SetDCEPWM1(0);
  1254  001BEC  0E00               	movlw	0
  1255  001BEE  6E1F               	movwf	SetDCEPWM1@dutycycle+1,c
  1256  001BF0  0E00               	movlw	0
  1257  001BF2  6E1E               	movwf	SetDCEPWM1@dutycycle,c
  1258  001BF4  EC6E  F012         	call	_SetDCEPWM1	;wreg free
  1259                           
  1260                           ;motore.c: 216: PORTAbits.RA7 = 1;
  1261  001BF8  8E80               	bsf	3968,7,c	;volatile
  1262  001BFA                     l4976:
  1263                           
  1264                           ;motore.c: 217: }
  1265                           ;motore.c: 218: }
  1266                           ;motore.c: 219: previousTimeCounter = timeCounter;
  1267  001BFA  C029  F078         	movff	_timeCounter,_previousTimeCounter
  1268  001BFE  C02A  F079         	movff	_timeCounter+1,_previousTimeCounter+1
  1269  001C02  C02B  F07A         	movff	_timeCounter+2,_previousTimeCounter+2
  1270  001C06  C02C  F07B         	movff	_timeCounter+3,_previousTimeCounter+3
  1271  001C0A                     l4978:
  1272                           
  1273                           ;motore.c: 220: }
  1274                           ;motore.c: 221: if ((timeCounter - previousTimeCounter2 >= 100)) {
  1275  001C0A  C080  F0B8         	movff	_previousTimeCounter2,??_main
  1276  001C0E  C081  F0B9         	movff	_previousTimeCounter2+1,??_main+1
  1277  001C12  C082  F0BA         	movff	_previousTimeCounter2+2,??_main+2
  1278  001C16  C083  F0BB         	movff	_previousTimeCounter2+3,??_main+3
  1279  001C1A  0100               	movlb	0	; () banked
  1280  001C1C  1FB8               	comf	??_main& (0+255),f,b
  1281  001C1E  1FB9               	comf	(??_main+1)& (0+255),f,b
  1282  001C20  1FBA               	comf	(??_main+2)& (0+255),f,b
  1283  001C22  1FBB               	comf	(??_main+3)& (0+255),f,b
  1284  001C24  2BB8               	incf	??_main& (0+255),f,b
  1285  001C26  0E00               	movlw	0
  1286  001C28  23B9               	addwfc	(??_main+1)& (0+255),f,b
  1287  001C2A  23BA               	addwfc	(??_main+2)& (0+255),f,b
  1288  001C2C  23BB               	addwfc	(??_main+3)& (0+255),f,b
  1289  001C2E  5029               	movf	_timeCounter,w,c
  1290  001C30  0100               	movlb	0	; () banked
  1291  001C32  25B8               	addwf	??_main& (0+255),w,b
  1292  001C34  0100               	movlb	0	; () banked
  1293  001C36  6FBC               	movwf	(??_main+4)& (0+255),b
  1294  001C38  502A               	movf	_timeCounter+1,w,c
  1295  001C3A  0100               	movlb	0	; () banked
  1296  001C3C  21B9               	addwfc	(??_main+1)& (0+255),w,b
  1297  001C3E  0100               	movlb	0	; () banked
  1298  001C40  6FBD               	movwf	(??_main+5)& (0+255),b
  1299  001C42  502B               	movf	_timeCounter+2,w,c
  1300  001C44  0100               	movlb	0	; () banked
  1301  001C46  21BA               	addwfc	(??_main+2)& (0+255),w,b
  1302  001C48  0100               	movlb	0	; () banked
  1303  001C4A  6FBE               	movwf	(??_main+6)& (0+255),b
  1304  001C4C  502C               	movf	_timeCounter+3,w,c
  1305  001C4E  0100               	movlb	0	; () banked
  1306  001C50  21BB               	addwfc	(??_main+3)& (0+255),w,b
  1307  001C52  0100               	movlb	0	; () banked
  1308  001C54  6FBF               	movwf	(??_main+7)& (0+255),b
  1309  001C56  0100               	movlb	0	; () banked
  1310  001C58  51BF               	movf	(??_main+7)& (0+255),w,b
  1311  001C5A  0100               	movlb	0	; () banked
  1312  001C5C  11BE               	iorwf	(??_main+6)& (0+255),w,b
  1313  001C5E  0100               	movlb	0	; () banked
  1314  001C60  11BD               	iorwf	(??_main+5)& (0+255),w,b
  1315  001C62  E105               	bnz	u6560
  1316  001C64  0E64               	movlw	100
  1317  001C66  0100               	movlb	0	; () banked
  1318  001C68  5DBC               	subwf	(??_main+4)& (0+255),w,b
  1319  001C6A  A0D8               	btfss	status,0,c
  1320  001C6C  D61A               	goto	l4886
  1321  001C6E                     u6560:
  1322                           
  1323                           ; BSR set to: 0
  1324                           ;motore.c: 223: battery_measure();
  1325  001C6E  ECE6  F011         	call	_battery_measure	;wreg free
  1326                           
  1327                           ;motore.c: 224: previousTimeCounter2 = timeCounter;
  1328  001C72  C029  F080         	movff	_timeCounter,_previousTimeCounter2
  1329  001C76  C02A  F081         	movff	_timeCounter+1,_previousTimeCounter2+1
  1330  001C7A  C02B  F082         	movff	_timeCounter+2,_previousTimeCounter2+2
  1331  001C7E  C02C  F083         	movff	_timeCounter+3,_previousTimeCounter2+3
  1332  001C82  D60F               	goto	l4886
  1333  001C84                     __end_of_main:
  1334                           	opt stack 0
  1335                           tblptru	equ	0xFF8
  1336                           tblptrh	equ	0xFF7
  1337                           tblptrl	equ	0xFF6
  1338                           tablat	equ	0xFF5
  1339                           postinc0	equ	0xFEE
  1340                           wreg	equ	0xFE8
  1341                           status	equ	0xFD8
  1342                           
  1343 ;; *************** function _send_data *****************
  1344 ;; Defined at:
  1345 ;;		line 229 in file "motore.c"
  1346 ;; Parameters:    Size  Location     Type
  1347 ;;		None
  1348 ;; Auto vars:     Size  Location     Type
  1349 ;;  i               1   33[COMRAM] unsigned char 
  1350 ;; Return value:  Size  Location     Type
  1351 ;;		None               void
  1352 ;; Registers used:
  1353 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1354 ;; Tracked objects:
  1355 ;;		On entry : 0/0
  1356 ;;		On exit  : 0/0
  1357 ;;		Unchanged: 0/0
  1358 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1359 ;;      Params:         0       0       0       0
  1360 ;;      Locals:         1       0       0       0
  1361 ;;      Temps:          0       0       0       0
  1362 ;;      Totals:         1       0       0       0
  1363 ;;Total ram usage:        1 bytes
  1364 ;; Hardware stack levels used:    1
  1365 ;; Hardware stack levels required when called:    3
  1366 ;; This function calls:
  1367 ;;		_CANisTxReady
  1368 ;;		_CANsendMessage
  1369 ;; This function is called by:
  1370 ;;		_main
  1371 ;; This function uses a non-reentrant model
  1372 ;;
  1373                           
  1374                           	psect	text1
  1375  002194                     __ptext1:
  1376                           	opt stack 0
  1377  002194                     _send_data:
  1378                           	opt stack 27
  1379                           
  1380                           ;motore.c: 230: if (CANisTxReady()) {
  1381                           
  1382                           ;incstack = 0
  1383  002194  ECD2  F012         	call	_CANisTxReady	;wreg free
  1384  002198  0900               	iorlw	0
  1385  00219A  B4D8               	btfsc	status,2,c
  1386  00219C  D031               	goto	l4828
  1387                           
  1388                           ;motore.c: 231: if (remote_frame == 1) {
  1389  00219E  AA3E               	btfss	_remote_frame/(0+8),_remote_frame& (0+7),c
  1390  0021A0  D017               	goto	l4824
  1391                           
  1392                           ;motore.c: 232: CANsendMessage(id, data_array, 8, CAN_CONFIG_STD_MSG & CAN_NORMAL_TX_FRA
      +                          ME & CAN_TX_PRIORITY_0);
  1393  0021A2  C025  F0A3         	movff	_id,CANsendMessage@identifier
  1394  0021A6  C026  F0A4         	movff	_id+1,CANsendMessage@identifier+1
  1395  0021AA  C027  F0A5         	movff	_id+2,CANsendMessage@identifier+2
  1396  0021AE  C028  F0A6         	movff	_id+3,CANsendMessage@identifier+3
  1397  0021B2  0E93               	movlw	low _data_array
  1398  0021B4  0100               	movlb	0	; () banked
  1399  0021B6  6FA7               	movwf	CANsendMessage@data& (0+255),b
  1400  0021B8  0E00               	movlw	high _data_array
  1401  0021BA  0100               	movlb	0	; () banked
  1402  0021BC  6FA8               	movwf	(CANsendMessage@data+1)& (0+255),b
  1403  0021BE  0E08               	movlw	8
  1404  0021C0  0100               	movlb	0	; () banked
  1405  0021C2  6FA9               	movwf	CANsendMessage@dataLength& (0+255),b
  1406  0021C4  0EBC               	movlw	188
  1407  0021C6  0100               	movlb	0	; () banked
  1408  0021C8  6FAA               	movwf	CANsendMessage@flags& (0+255),b
  1409  0021CA  ECFA  F005         	call	_CANsendMessage	;wreg free
  1410                           
  1411                           ;motore.c: 233: remote_frame = 0;
  1412  0021CE  9A3E               	bcf	_remote_frame/(0+8),_remote_frame& (0+7),c
  1413  0021D0                     l4824:
  1414                           
  1415                           ;motore.c: 234: }
  1416                           ;motore.c: 235: if (can_retry == 1) {
  1417  0021D0  A03E               	btfss	_can_retry/(0+8),_can_retry& (0+7),c
  1418  0021D2  D016               	goto	l4828
  1419                           
  1420                           ;motore.c: 236: CANsendMessage(id1, data_array1, 8, CAN_CONFIG_STD_MSG & CAN_NORMAL_TX_F
      +                          RAME & CAN_TX_PRIORITY_0);
  1421  0021D4  C074  F0A3         	movff	_id1,CANsendMessage@identifier
  1422  0021D8  C075  F0A4         	movff	_id1+1,CANsendMessage@identifier+1
  1423  0021DC  C076  F0A5         	movff	_id1+2,CANsendMessage@identifier+2
  1424  0021E0  C077  F0A6         	movff	_id1+3,CANsendMessage@identifier+3
  1425  0021E4  0E9B               	movlw	low _data_array1
  1426  0021E6  0100               	movlb	0	; () banked
  1427  0021E8  6FA7               	movwf	CANsendMessage@data& (0+255),b
  1428  0021EA  0E00               	movlw	high _data_array1
  1429  0021EC  0100               	movlb	0	; () banked
  1430  0021EE  6FA8               	movwf	(CANsendMessage@data+1)& (0+255),b
  1431  0021F0  0E08               	movlw	8
  1432  0021F2  0100               	movlb	0	; () banked
  1433  0021F4  6FA9               	movwf	CANsendMessage@dataLength& (0+255),b
  1434  0021F6  0EBC               	movlw	188
  1435  0021F8  0100               	movlb	0	; () banked
  1436  0021FA  6FAA               	movwf	CANsendMessage@flags& (0+255),b
  1437  0021FC  ECFA  F005         	call	_CANsendMessage	;wreg free
  1438  002200                     l4828:
  1439                           
  1440                           ;motore.c: 237: }
  1441                           ;motore.c: 238: }
  1442                           ;motore.c: 239: if ((TXB0CONbits.TXABT) || (TXB1CONbits.TXABT)) {
  1443  002200  010F               	movlb	15	; () banked
  1444  002202  BD40               	btfsc	64,6,b	;volatile
  1445  002204  D003               	goto	l704
  1446                           
  1447                           ; BSR set to: 15
  1448  002206  010F               	movlb	15	; () banked
  1449  002208  AD30               	btfss	48,6,b	;volatile
  1450  00220A  D028               	goto	l702
  1451  00220C                     l704:
  1452                           
  1453                           ; BSR set to: 15
  1454                           ;motore.c: 240: can_retry = 1;
  1455  00220C  803E               	bsf	_can_retry/(0+8),_can_retry& (0+7),c
  1456                           
  1457                           ;motore.c: 241: id1 = id;
  1458  00220E  C025  F074         	movff	_id,_id1
  1459  002212  C026  F075         	movff	_id+1,_id1+1
  1460  002216  C027  F076         	movff	_id+2,_id1+2
  1461  00221A  C028  F077         	movff	_id+3,_id1+3
  1462                           
  1463                           ;motore.c: 242: remote_frame1 = remote_frame;
  1464  00221E  AA3E               	btfss	_remote_frame/(0+8),_remote_frame& (0+7),c
  1465  002220  D002               	goto	u6230
  1466  002222  8C3E               	bsf	_remote_frame1/(0+8),_remote_frame1& (0+7),c
  1467  002224  D001               	goto	l4832
  1468  002226                     u6230:
  1469  002226  9C3E               	bcf	_remote_frame1/(0+8),_remote_frame1& (0+7),c
  1470  002228                     l4832:
  1471                           
  1472                           ;motore.c: 243: for (char i = 0; i < 8; i++) {
  1473  002228  0E00               	movlw	0
  1474  00222A  6E22               	movwf	send_data@i,c
  1475  00222C                     l4834:
  1476  00222C  0E07               	movlw	7
  1477  00222E  6422               	cpfsgt	send_data@i,c
  1478  002230  D001               	goto	l4838
  1479  002232  D028               	goto	l707
  1480  002234                     l4838:
  1481                           
  1482                           ;motore.c: 244: data_array1[i] = data_array[i];
  1483  002234  5022               	movf	send_data@i,w,c
  1484  002236  0D01               	mullw	1
  1485  002238  0E93               	movlw	low _data_array
  1486  00223A  24F3               	addwf	prodl,w,c
  1487  00223C  6ED9               	movwf	fsr2l,c
  1488  00223E  0E00               	movlw	high _data_array
  1489  002240  20F4               	addwfc	prodh,w,c
  1490  002242  6EDA               	movwf	fsr2h,c
  1491  002244  5022               	movf	send_data@i,w,c
  1492  002246  0D01               	mullw	1
  1493  002248  0E9B               	movlw	low _data_array1
  1494  00224A  24F3               	addwf	prodl,w,c
  1495  00224C  6EE1               	movwf	fsr1l,c
  1496  00224E  0E00               	movlw	high _data_array1
  1497  002250  20F4               	addwfc	prodh,w,c
  1498  002252  6EE2               	movwf	fsr1h,c
  1499  002254  CFDF FFE7          	movff	indf2,indf1
  1500  002258  2A22               	incf	send_data@i,f,c
  1501  00225A  D7E8               	goto	l4834
  1502  00225C                     l702:
  1503                           
  1504                           ; BSR set to: 15
  1505                           ;motore.c: 247: can_retry = 0;
  1506  00225C  903E               	bcf	_can_retry/(0+8),_can_retry& (0+7),c
  1507                           
  1508                           ;motore.c: 248: if (remote_frame1 != 0) {
  1509  00225E  AC3E               	btfss	_remote_frame1/(0+8),_remote_frame1& (0+7),c
  1510  002260  D010               	goto	l708
  1511                           
  1512                           ; BSR set to: 15
  1513                           ;motore.c: 249: remote_frame = remote_frame1;
  1514  002262  AC3E               	btfss	_remote_frame1/(0+8),_remote_frame1& (0+7),c
  1515  002264  D002               	goto	u6280
  1516  002266  8A3E               	bsf	_remote_frame/(0+8),_remote_frame& (0+7),c
  1517  002268  D001               	goto	u6295
  1518  00226A                     u6280:
  1519  00226A  9A3E               	bcf	_remote_frame/(0+8),_remote_frame& (0+7),c
  1520  00226C                     u6295:
  1521                           
  1522                           ;motore.c: 250: id = id1;
  1523  00226C  C074  F025         	movff	_id1,_id
  1524  002270  C075  F026         	movff	_id1+1,_id+1
  1525  002274  C076  F027         	movff	_id1+2,_id+2
  1526  002278  C077  F028         	movff	_id1+3,_id+3
  1527                           
  1528                           ;motore.c: 251: message_sent = 1;
  1529  00227C  883E               	bsf	_message_sent/(0+8),_message_sent& (0+7),c
  1530                           
  1531                           ;motore.c: 252: remote_frame1 = 0;
  1532  00227E  9C3E               	bcf	_remote_frame1/(0+8),_remote_frame1& (0+7),c
  1533                           
  1534                           ;motore.c: 253: } else {
  1535  002280  D001               	goto	l707
  1536  002282                     l708:
  1537                           
  1538                           ; BSR set to: 15
  1539                           ;motore.c: 255: message_sent = 0;
  1540  002282  983E               	bcf	_message_sent/(0+8),_message_sent& (0+7),c
  1541  002284                     l707:
  1542                           
  1543                           ;motore.c: 256: }
  1544                           ;motore.c: 257: }
  1545                           ;motore.c: 258: remote_frame = 0;
  1546  002284  9A3E               	bcf	_remote_frame/(0+8),_remote_frame& (0+7),c
  1547  002286  0012               	return		;funcret
  1548  002288                     __end_of_send_data:
  1549                           	opt stack 0
  1550                           tblptru	equ	0xFF8
  1551                           tblptrh	equ	0xFF7
  1552                           tblptrl	equ	0xFF6
  1553                           tablat	equ	0xFF5
  1554                           prodh	equ	0xFF4
  1555                           prodl	equ	0xFF3
  1556                           postinc0	equ	0xFEE
  1557                           wreg	equ	0xFE8
  1558                           indf1	equ	0xFE7
  1559                           fsr1h	equ	0xFE2
  1560                           fsr1l	equ	0xFE1
  1561                           indf2	equ	0xFDF
  1562                           fsr2h	equ	0xFDA
  1563                           fsr2l	equ	0xFD9
  1564                           status	equ	0xFD8
  1565                           
  1566 ;; *************** function _configurazione_iniziale *****************
  1567 ;; Defined at:
  1568 ;;		line 273 in file "motore.c"
  1569 ;; Parameters:    Size  Location     Type
  1570 ;;		None
  1571 ;; Auto vars:     Size  Location     Type
  1572 ;;		None
  1573 ;; Return value:  Size  Location     Type
  1574 ;;		None               void
  1575 ;; Registers used:
  1576 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  1577 ;; Tracked objects:
  1578 ;;		On entry : 0/0
  1579 ;;		On exit  : 0/0
  1580 ;;		Unchanged: 0/0
  1581 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1582 ;;      Params:         0       0       0       0
  1583 ;;      Locals:         0       0       0       0
  1584 ;;      Temps:          0       0       0       0
  1585 ;;      Totals:         0       0       0       0
  1586 ;;Total ram usage:        0 bytes
  1587 ;; Hardware stack levels used:    1
  1588 ;; Hardware stack levels required when called:    4
  1589 ;; This function calls:
  1590 ;;		_CANInitialize
  1591 ;;		_delay_ms
  1592 ;; This function is called by:
  1593 ;;		_main
  1594 ;; This function uses a non-reentrant model
  1595 ;;
  1596                           
  1597                           	psect	text2
  1598  002288                     __ptext2:
  1599                           	opt stack 0
  1600  002288                     _configurazione_iniziale:
  1601                           	opt stack 26
  1602                           
  1603                           ;motore.c: 276: CANInitialize(4, 6, 5, 1, 3, CAN_CONFIG_LINE_FILTER_OFF & CAN_CONFIG_SAM
      +                          PLE_ONCE & CAN_CONFIG_ALL_VALID_MSG & CAN_CONFIG_DBL_BUFFER_ON);
  1604                           
  1605                           ;incstack = 0
  1606  002288  0E06               	movlw	6
  1607  00228A  0100               	movlb	0	; () banked
  1608  00228C  6FAC               	movwf	CANInitialize@phaseSeg1& (0+255),b
  1609  00228E  0E05               	movlw	5
  1610  002290  0100               	movlb	0	; () banked
  1611  002292  6FAD               	movwf	CANInitialize@phaseSeg2& (0+255),b
  1612  002294  0E01               	movlw	1
  1613  002296  0100               	movlb	0	; () banked
  1614  002298  6FAE               	movwf	CANInitialize@SJW& (0+255),b
  1615  00229A  0E03               	movlw	3
  1616  00229C  0100               	movlb	0	; () banked
  1617  00229E  6FAF               	movwf	CANInitialize@BRP& (0+255),b
  1618  0022A0  0E9D               	movlw	157
  1619  0022A2  0100               	movlb	0	; () banked
  1620  0022A4  6FB0               	movwf	CANInitialize@flags& (0+255),b
  1621  0022A6  0E04               	movlw	4
  1622  0022A8  ECF1  F00F         	call	_CANInitialize
  1623                           
  1624                           ;motore.c: 277: RCONbits.IPEN = 1;
  1625  0022AC  8ED0               	bsf	4048,7,c	;volatile
  1626                           
  1627                           ;motore.c: 278: INTCONbits.INT0IF = 0;
  1628  0022AE  92F2               	bcf	intcon,1,c	;volatile
  1629                           
  1630                           ;motore.c: 279: PIR3bits.RXB1IF = 0;
  1631  0022B0  92A4               	bcf	4004,1,c	;volatile
  1632                           
  1633                           ;motore.c: 280: PIR3bits.RXB0IF = 0;
  1634  0022B2  90A4               	bcf	4004,0,c	;volatile
  1635                           
  1636                           ;motore.c: 282: IPR3bits.RXB1IP = 0;
  1637  0022B4  92A5               	bcf	4005,1,c	;volatile
  1638                           
  1639                           ;motore.c: 283: IPR3bits.RXB0IP = 0;
  1640  0022B6  90A5               	bcf	4005,0,c	;volatile
  1641                           
  1642                           ;motore.c: 284: INTCONbits.GIEH = 0;
  1643  0022B8  9EF2               	bcf	intcon,7,c	;volatile
  1644                           
  1645                           ;motore.c: 285: INTCONbits.GIEL = 1;
  1646  0022BA  8CF2               	bsf	intcon,6,c	;volatile
  1647                           
  1648                           ;motore.c: 286: INTCON2bits.INTEDG0 = 1;
  1649  0022BC  8CF1               	bsf	intcon2,6,c	;volatile
  1650                           
  1651                           ;motore.c: 289: T3CON = 0x01;
  1652  0022BE  0E01               	movlw	1
  1653  0022C0  6EB1               	movwf	4017,c	;volatile
  1654                           
  1655                           ;motore.c: 290: PIR2bits.TMR3IF = 0;
  1656  0022C2  92A1               	bcf	4001,1,c	;volatile
  1657                           
  1658                           ;motore.c: 291: IPR2bits.TMR3IP = 0;
  1659  0022C4  92A2               	bcf	4002,1,c	;volatile
  1660                           
  1661                           ;motore.c: 292: TMR3H = 0x63;
  1662  0022C6  0E63               	movlw	99
  1663  0022C8  6EB3               	movwf	4019,c	;volatile
  1664                           
  1665                           ;motore.c: 293: TMR3L = 0xC0;
  1666  0022CA  0EC0               	movlw	192
  1667  0022CC  6EB2               	movwf	4018,c	;volatile
  1668                           
  1669                           ;motore.c: 298: ADCON0bits.ADON = 1;
  1670  0022CE  80C2               	bsf	4034,0,c	;volatile
  1671                           
  1672                           ;motore.c: 299: ADCON0bits.CHS0 = 0;
  1673  0022D0  94C2               	bcf	4034,2,c	;volatile
  1674                           
  1675                           ;motore.c: 300: ADCON0bits.CHS1 = 0;
  1676  0022D2  96C2               	bcf	4034,3,c	;volatile
  1677                           
  1678                           ;motore.c: 301: ADCON0bits.CHS2 = 0;
  1679  0022D4  98C2               	bcf	4034,4,c	;volatile
  1680                           
  1681                           ;motore.c: 302: ADCON0bits.CHS3 = 0;
  1682  0022D6  9AC2               	bcf	4034,5,c	;volatile
  1683                           
  1684                           ;motore.c: 303: ADCON1bits.PCFG0 = 0;
  1685  0022D8  90C1               	bcf	4033,0,c	;volatile
  1686                           
  1687                           ;motore.c: 304: ADCON1bits.PCFG1 = 1;
  1688  0022DA  82C1               	bsf	4033,1,c	;volatile
  1689                           
  1690                           ;motore.c: 305: ADCON1bits.PCFG2 = 1;
  1691  0022DC  84C1               	bsf	4033,2,c	;volatile
  1692                           
  1693                           ;motore.c: 306: ADCON1bits.PCFG3 = 1;
  1694  0022DE  86C1               	bsf	4033,3,c	;volatile
  1695                           
  1696                           ;motore.c: 307: ADCON1bits.VCFG0 = 0;
  1697  0022E0  98C1               	bcf	4033,4,c	;volatile
  1698                           
  1699                           ;motore.c: 308: ADCON1bits.VCFG1 = 0;
  1700  0022E2  9AC1               	bcf	4033,5,c	;volatile
  1701                           
  1702                           ;motore.c: 309: ADCON2bits.ADCS0 = 1;
  1703  0022E4  80C0               	bsf	4032,0,c	;volatile
  1704                           
  1705                           ;motore.c: 310: ADCON2bits.ADCS1 = 0;
  1706  0022E6  92C0               	bcf	4032,1,c	;volatile
  1707                           
  1708                           ;motore.c: 311: ADCON2bits.ADCS2 = 1;
  1709  0022E8  84C0               	bsf	4032,2,c	;volatile
  1710                           
  1711                           ;motore.c: 312: ADCON2bits.ACQT0 = 0;
  1712  0022EA  96C0               	bcf	4032,3,c	;volatile
  1713                           
  1714                           ;motore.c: 313: ADCON2bits.ACQT1 = 1;
  1715  0022EC  88C0               	bsf	4032,4,c	;volatile
  1716                           
  1717                           ;motore.c: 314: ADCON2bits.ACQT2 = 1;
  1718  0022EE  8AC0               	bsf	4032,5,c	;volatile
  1719                           
  1720                           ;motore.c: 315: ADCON2bits.ADFM = 0;
  1721  0022F0  9EC0               	bcf	4032,7,c	;volatile
  1722                           
  1723                           ;motore.c: 318: INTCONbits.INT0IE = 1;
  1724  0022F2  88F2               	bsf	intcon,4,c	;volatile
  1725                           
  1726                           ;motore.c: 319: PIE3bits.RXB1IE = 1;
  1727  0022F4  82A3               	bsf	4003,1,c	;volatile
  1728                           
  1729                           ;motore.c: 320: PIE3bits.RXB0IE = 1;
  1730  0022F6  80A3               	bsf	4003,0,c	;volatile
  1731                           
  1732                           ;motore.c: 321: PIE2bits.TMR3IE = 1;
  1733  0022F8  82A0               	bsf	4000,1,c	;volatile
  1734                           
  1735                           ;motore.c: 323: LATA = 0x00;
  1736  0022FA  0E00               	movlw	0
  1737  0022FC  6E89               	movwf	3977,c	;volatile
  1738                           
  1739                           ;motore.c: 324: TRISA = 0b01111101;
  1740  0022FE  0E7D               	movlw	125
  1741  002300  6E92               	movwf	3986,c	;volatile
  1742                           
  1743                           ;motore.c: 326: LATB = 0x00;
  1744  002302  0E00               	movlw	0
  1745  002304  6E8A               	movwf	3978,c	;volatile
  1746                           
  1747                           ;motore.c: 327: TRISB = 0b11111011;
  1748  002306  0EFB               	movlw	251
  1749  002308  6E93               	movwf	3987,c	;volatile
  1750                           
  1751                           ;motore.c: 329: LATC = 0x00;
  1752  00230A  0E00               	movlw	0
  1753  00230C  6E8B               	movwf	3979,c	;volatile
  1754                           
  1755                           ;motore.c: 330: TRISC = 0x00;
  1756  00230E  0E00               	movlw	0
  1757  002310  6E94               	movwf	3988,c	;volatile
  1758                           
  1759                           ;motore.c: 332: LATD = 0x00;
  1760  002312  0E00               	movlw	0
  1761  002314  6E8C               	movwf	3980,c	;volatile
  1762                           
  1763                           ;motore.c: 333: TRISD = 0x00;
  1764  002316  0E00               	movlw	0
  1765  002318  6E95               	movwf	3989,c	;volatile
  1766                           
  1767                           ;motore.c: 335: LATE = 0x00;
  1768  00231A  0E00               	movlw	0
  1769  00231C  6E8D               	movwf	3981,c	;volatile
  1770                           
  1771                           ;motore.c: 336: TRISE = 0xFF;
  1772  00231E  6896               	setf	3990,c	;volatile
  1773                           
  1774                           ;motore.c: 337: delay_ms(2);
  1775  002320  0E00               	movlw	0
  1776  002322  0100               	movlb	0	; () banked
  1777  002324  6FAC               	movwf	(delay_ms@value_ms+1)& (0+255),b
  1778  002326  0E02               	movlw	2
  1779  002328  6FAB               	movwf	delay_ms@value_ms& (0+255),b
  1780  00232A  EC8B  F012         	call	_delay_ms	;wreg free
  1781  00232E  0012               	return		;funcret
  1782  002330                     __end_of_configurazione_iniziale:
  1783                           	opt stack 0
  1784                           tblptru	equ	0xFF8
  1785                           tblptrh	equ	0xFF7
  1786                           tblptrl	equ	0xFF6
  1787                           tablat	equ	0xFF5
  1788                           prodh	equ	0xFF4
  1789                           prodl	equ	0xFF3
  1790                           intcon	equ	0xFF2
  1791                           intcon2	equ	0xFF1
  1792                           postinc0	equ	0xFEE
  1793                           wreg	equ	0xFE8
  1794                           indf1	equ	0xFE7
  1795                           fsr1h	equ	0xFE2
  1796                           fsr1l	equ	0xFE1
  1797                           indf2	equ	0xFDF
  1798                           fsr2h	equ	0xFDA
  1799                           fsr2l	equ	0xFD9
  1800                           status	equ	0xFD8
  1801                           
  1802 ;; *************** function _delay_ms *****************
  1803 ;; Defined at:
  1804 ;;		line 61 in file "delay.c"
  1805 ;; Parameters:    Size  Location     Type
  1806 ;;  value_ms        2    8[BANK0 ] unsigned int 
  1807 ;; Auto vars:     Size  Location     Type
  1808 ;;		None
  1809 ;; Return value:  Size  Location     Type
  1810 ;;		None               void
  1811 ;; Registers used:
  1812 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  1813 ;; Tracked objects:
  1814 ;;		On entry : 0/0
  1815 ;;		On exit  : 0/0
  1816 ;;		Unchanged: 0/0
  1817 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1818 ;;      Params:         0       2       0       0
  1819 ;;      Locals:         0       0       0       0
  1820 ;;      Temps:          0       0       0       0
  1821 ;;      Totals:         0       2       0       0
  1822 ;;Total ram usage:        2 bytes
  1823 ;; Hardware stack levels used:    1
  1824 ;; Hardware stack levels required when called:    3
  1825 ;; This function calls:
  1826 ;;		___wmul
  1827 ;; This function is called by:
  1828 ;;		_main
  1829 ;;		_configurazione_iniziale
  1830 ;;		_delay_s
  1831 ;; This function uses a non-reentrant model
  1832 ;;
  1833                           
  1834                           	psect	text3
  1835  002516                     __ptext3:
  1836                           	opt stack 0
  1837  002516                     _delay_ms:
  1838                           	opt stack 27
  1839                           
  1840                           ;delay.c: 73: clock_counter_reference = value_ms * delay_quartz_frequency_value;
  1841                           
  1842                           ;incstack = 0
  1843  002516  C041  F0A7         	movff	_delay_quartz_frequency_value,___wmul@multiplier	;volatile
  1844  00251A  0100               	movlb	0	; () banked
  1845  00251C  6BA8               	clrf	(___wmul@multiplier+1)& (0+255),b
  1846  00251E  C0AB  F0A9         	movff	delay_ms@value_ms,___wmul@multiplicand
  1847  002522  C0AC  F0AA         	movff	delay_ms@value_ms+1,___wmul@multiplicand+1
  1848  002526  ECA5  F012         	call	___wmul	;wreg free
  1849  00252A  C0A7  F02D         	movff	?___wmul,_clock_counter_reference	;volatile
  1850  00252E  C0A8  F02E         	movff	?___wmul+1,_clock_counter_reference+1	;volatile
  1851                           
  1852                           ;delay.c: 75: while (clock_counter_reference) {
  1853  002532  D006               	goto	l571
  1854  002534                     l4672:
  1855                           
  1856                           ;delay.c: 85: _delay(240);
  1857  002534  0E50               	movlw	80
  1858  002536                     u6577:
  1859  002536  2EE8               	decfsz	wreg,f,c
  1860  002538  D7FE               	goto	u6577
  1861                           
  1862                           ;delay.c: 88: clock_counter_reference--;
  1863  00253A  062D               	decf	_clock_counter_reference,f,c	;volatile
  1864  00253C  A0D8               	btfss	status,0,c
  1865  00253E  062E               	decf	_clock_counter_reference+1,f,c	;volatile
  1866  002540                     l571:
  1867  002540  502D               	movf	_clock_counter_reference,w,c	;volatile
  1868  002542  102E               	iorwf	_clock_counter_reference+1,w,c	;volatile
  1869  002544  B4D8               	btfsc	status,2,c
  1870  002546  0012               	return	
  1871  002548  D7F5               	goto	l4672
  1872  00254A                     __end_of_delay_ms:
  1873                           	opt stack 0
  1874                           tblptru	equ	0xFF8
  1875                           tblptrh	equ	0xFF7
  1876                           tblptrl	equ	0xFF6
  1877                           tablat	equ	0xFF5
  1878                           prodh	equ	0xFF4
  1879                           prodl	equ	0xFF3
  1880                           intcon	equ	0xFF2
  1881                           intcon2	equ	0xFF1
  1882                           postinc0	equ	0xFEE
  1883                           wreg	equ	0xFE8
  1884                           indf1	equ	0xFE7
  1885                           fsr1h	equ	0xFE2
  1886                           fsr1l	equ	0xFE1
  1887                           indf2	equ	0xFDF
  1888                           fsr2h	equ	0xFDA
  1889                           fsr2l	equ	0xFD9
  1890                           status	equ	0xFD8
  1891                           
  1892 ;; *************** function _CANInitialize *****************
  1893 ;; Defined at:
  1894 ;;		line 218 in file "CANlib.h"
  1895 ;; Parameters:    Size  Location     Type
  1896 ;;  propSeg         1    wreg     unsigned char 
  1897 ;;  phaseSeg1       1    9[BANK0 ] unsigned char 
  1898 ;;  phaseSeg2       1   10[BANK0 ] unsigned char 
  1899 ;;  SJW             1   11[BANK0 ] unsigned char 
  1900 ;;  BRP             1   12[BANK0 ] unsigned char 
  1901 ;;  flags           1   13[BANK0 ] enum E16844
  1902 ;; Auto vars:     Size  Location     Type
  1903 ;;  propSeg         1   18[BANK0 ] unsigned char 
  1904 ;;  FilterConfig    1   20[BANK0 ] unsigned char 
  1905 ;;  FilterConfig    1   19[BANK0 ] unsigned char 
  1906 ;; Return value:  Size  Location     Type
  1907 ;;		None               void
  1908 ;; Registers used:
  1909 ;;		wreg, status,2, status,0, cstack
  1910 ;; Tracked objects:
  1911 ;;		On entry : 0/0
  1912 ;;		On exit  : 0/0
  1913 ;;		Unchanged: 0/0
  1914 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1915 ;;      Params:         0       5       0       0
  1916 ;;      Locals:         0       3       0       0
  1917 ;;      Temps:          0       4       0       0
  1918 ;;      Totals:         0      12       0       0
  1919 ;;Total ram usage:       12 bytes
  1920 ;; Hardware stack levels used:    1
  1921 ;; Hardware stack levels required when called:    3
  1922 ;; This function calls:
  1923 ;;		_CANOperationMode
  1924 ;;		_CANSetFilter
  1925 ;;		_CANSetMask
  1926 ;; This function is called by:
  1927 ;;		_configurazione_iniziale
  1928 ;; This function uses a non-reentrant model
  1929 ;;
  1930                           
  1931                           	psect	text4
  1932  001FE2                     __ptext4:
  1933                           	opt stack 0
  1934  001FE2                     _CANInitialize:
  1935                           	opt stack 26
  1936                           
  1937                           ;incstack = 0
  1938                           ;CANInitialize@propSeg stored from wreg
  1939  001FE2  0100               	movlb	0	; () banked
  1940  001FE4  6FB5               	movwf	CANInitialize@propSeg& (0+255),b
  1941                           
  1942                           ;CANlib.h: 220: BYTE FilterConfig1;
  1943                           ;CANlib.h: 221: BYTE FilterConfig2;
  1944                           ;CANlib.h: 223: CANOperationMode(CAN_OP_MODE_CONFIG);
  1945  001FE6  0E80               	movlw	128
  1946  001FE8  ECFA  F012         	call	_CANOperationMode
  1947                           
  1948                           ;CANlib.h: 225: BRGCON1 = 0x00;
  1949  001FEC  0E00               	movlw	0
  1950  001FEE  6E70               	movwf	3952,c	;volatile
  1951                           
  1952                           ;CANlib.h: 226: BRGCON2 = 0x00;
  1953  001FF0  0E00               	movlw	0
  1954  001FF2  6E71               	movwf	3953,c	;volatile
  1955                           
  1956                           ;CANlib.h: 227: BRGCON3 = 0x00;
  1957  001FF4  0E00               	movlw	0
  1958  001FF6  6E72               	movwf	3954,c	;volatile
  1959                           
  1960                           ;CANlib.h: 229: SJW= SJW << 6;
  1961  001FF8  0100               	movlb	0	; () banked
  1962  001FFA  41AE               	rrncf	CANInitialize@SJW& (0+255),w,b
  1963  001FFC  42E8               	rrncf	wreg,f,c
  1964  001FFE  0BC0               	andlw	192
  1965  002000  0100               	movlb	0	; () banked
  1966  002002  6FAE               	movwf	CANInitialize@SJW& (0+255),b
  1967                           
  1968                           ; BSR set to: 0
  1969                           ;CANlib.h: 230: BRGCON1 |= SJW;
  1970  002004  0100               	movlb	0	; () banked
  1971  002006  51AE               	movf	CANInitialize@SJW& (0+255),w,b
  1972  002008  1270               	iorwf	3952,f,c	;volatile
  1973                           
  1974                           ; BSR set to: 0
  1975                           ;CANlib.h: 231: BRGCON1 |= BRP;
  1976  00200A  0100               	movlb	0	; () banked
  1977  00200C  51AF               	movf	CANInitialize@BRP& (0+255),w,b
  1978  00200E  1270               	iorwf	3952,f,c	;volatile
  1979                           
  1980                           ; BSR set to: 0
  1981                           ;CANlib.h: 233: BRGCON2 |= propSeg;
  1982  002010  0100               	movlb	0	; () banked
  1983  002012  51B5               	movf	CANInitialize@propSeg& (0+255),w,b
  1984  002014  1271               	iorwf	3953,f,c	;volatile
  1985                           
  1986                           ; BSR set to: 0
  1987                           ;CANlib.h: 234: phaseSeg1 = phaseSeg1 <<3;
  1988  002016  0100               	movlb	0	; () banked
  1989  002018  39AC               	swapf	CANInitialize@phaseSeg1& (0+255),w,b
  1990  00201A  42E8               	rrncf	wreg,f,c
  1991  00201C  0BF8               	andlw	248
  1992  00201E  0100               	movlb	0	; () banked
  1993  002020  6FAC               	movwf	CANInitialize@phaseSeg1& (0+255),b
  1994                           
  1995                           ; BSR set to: 0
  1996                           ;CANlib.h: 235: BRGCON2 |= phaseSeg1;
  1997  002022  0100               	movlb	0	; () banked
  1998  002024  51AC               	movf	CANInitialize@phaseSeg1& (0+255),w,b
  1999  002026  1271               	iorwf	3953,f,c	;volatile
  2000                           
  2001                           ; BSR set to: 0
  2002                           ;CANlib.h: 237: if ( !(flags & CAN_CONFIG_SAMPLE_BIT) )
  2003  002028  0100               	movlb	0	; () banked
  2004  00202A  A5B0               	btfss	CANInitialize@flags& (0+255),2,b
  2005                           
  2006                           ; BSR set to: 0
  2007                           ;CANlib.h: 238: BRGCON2bits.SAM= 1;
  2008  00202C  8C71               	bsf	3953,6,c	;volatile
  2009                           
  2010                           ; BSR set to: 0
  2011                           ;CANlib.h: 240: if ( flags & CAN_CONFIG_PHSEG2_PRG_BIT )
  2012  00202E  0100               	movlb	0	; () banked
  2013  002030  B1B0               	btfsc	CANInitialize@flags& (0+255),0,b
  2014                           
  2015                           ; BSR set to: 0
  2016                           ;CANlib.h: 241: BRGCON2bits.SEG2PHTS = 1;
  2017  002032  8E71               	bsf	3953,7,c	;volatile
  2018                           
  2019                           ; BSR set to: 0
  2020                           ;CANlib.h: 243: BRGCON3 |= phaseSeg2;
  2021                           
  2022                           ; BSR set to: 0
  2023  002034  0100               	movlb	0	; () banked
  2024  002036  51AD               	movf	CANInitialize@phaseSeg2& (0+255),w,b
  2025  002038  1272               	iorwf	3954,f,c	;volatile
  2026                           
  2027                           ; BSR set to: 0
  2028                           ;CANlib.h: 245: if ( flags & CAN_CONFIG_LINE_FILTER_BIT )
  2029  00203A  0100               	movlb	0	; () banked
  2030  00203C  B3B0               	btfsc	CANInitialize@flags& (0+255),1,b
  2031                           
  2032                           ; BSR set to: 0
  2033                           ;CANlib.h: 246: BRGCON3bits.WAKFIL = 1;
  2034  00203E  8C72               	bsf	3954,6,c	;volatile
  2035                           
  2036                           ; BSR set to: 0
  2037                           ;CANlib.h: 251: RXB0CON = flags & CAN_CONFIG_MSG_BITS;
  2038                           
  2039                           ; BSR set to: 0
  2040  002040  0100               	movlb	0	; () banked
  2041  002042  51B0               	movf	CANInitialize@flags& (0+255),w,b
  2042  002044  0B60               	andlw	96
  2043  002046  6E60               	movwf	3936,c	;volatile
  2044                           
  2045                           ;CANlib.h: 252: if ( (flags & CAN_CONFIG_DBL_BUFFER_BIT)== CAN_CONFIG_DBL_BUFFER_ON )
  2046  002048  0100               	movlb	0	; () banked
  2047  00204A  51B0               	movf	CANInitialize@flags& (0+255),w,b
  2048  00204C  0B10               	andlw	16
  2049  00204E  0AFF               	xorlw	255
  2050  002050  B4D8               	btfsc	status,2,c
  2051                           
  2052                           ; BSR set to: 0
  2053                           ;CANlib.h: 253: RXB0CONbits.RXB0DBEN = 1;
  2054  002052  8460               	bsf	3936,2,c	;volatile
  2055                           
  2056                           ; BSR set to: 0
  2057                           ;CANlib.h: 255: RXB1CON = RXB0CON;
  2058  002054  CF60 FF50          	movff	3936,3920	;volatile
  2059                           
  2060                           ; BSR set to: 0
  2061                           ;CANlib.h: 259: CANSetMask (CAN_MASK_B1, 0x00000000, CAN_CONFIG_XTD_MSG);
  2062  002058  0E00               	movlw	0
  2063  00205A  6E1E               	movwf	CANSetMask@mask,c
  2064  00205C  0E00               	movlw	0
  2065  00205E  6E1F               	movwf	CANSetMask@mask+1,c
  2066  002060  0E00               	movlw	0
  2067  002062  6E20               	movwf	CANSetMask@mask+2,c
  2068  002064  0E00               	movlw	0
  2069  002066  6E21               	movwf	CANSetMask@mask+3,c
  2070  002068  0EF7               	movlw	247
  2071  00206A  6E22               	movwf	CANSetMask@type,c
  2072  00206C  0E01               	movlw	1
  2073  00206E  EC42  F00E         	call	_CANSetMask
  2074                           
  2075                           ;CANlib.h: 260: CANSetMask (CAN_MASK_B2, 0x00000000, CAN_CONFIG_XTD_MSG);
  2076  002072  0E00               	movlw	0
  2077  002074  6E1E               	movwf	CANSetMask@mask,c
  2078  002076  0E00               	movlw	0
  2079  002078  6E1F               	movwf	CANSetMask@mask+1,c
  2080  00207A  0E00               	movlw	0
  2081  00207C  6E20               	movwf	CANSetMask@mask+2,c
  2082  00207E  0E00               	movlw	0
  2083  002080  6E21               	movwf	CANSetMask@mask+3,c
  2084  002082  0EF7               	movlw	247
  2085  002084  6E22               	movwf	CANSetMask@type,c
  2086  002086  0E02               	movlw	2
  2087  002088  EC42  F00E         	call	_CANSetMask
  2088                           
  2089                           ;CANlib.h: 263: switch( (flags & CAN_CONFIG_MSG_BITS) | ~CAN_CONFIG_MSG_BITS )
  2090  00208C  D00F               	goto	l4432
  2091  00208E                     l4426:
  2092                           
  2093                           ;CANlib.h: 266: FilterConfig1 = CAN_CONFIG_XTD_MSG;
  2094  00208E  0EF7               	movlw	247
  2095  002090  0100               	movlb	0	; () banked
  2096  002092  6FB6               	movwf	CANInitialize@FilterConfig1& (0+255),b
  2097  002094  D007               	goto	l4428
  2098  002096                     l360:
  2099                           
  2100                           ; BSR set to: 0
  2101                           ;CANlib.h: 271: FilterConfig1 = CAN_CONFIG_STD_MSG;
  2102  002096  0100               	movlb	0	; () banked
  2103  002098  69B6               	setf	CANInitialize@FilterConfig1& (0+255),b
  2104                           
  2105                           ;CANlib.h: 272: FilterConfig2 = CAN_CONFIG_STD_MSG;
  2106  00209A  0100               	movlb	0	; () banked
  2107  00209C  69B7               	setf	CANInitialize@FilterConfig2& (0+255),b
  2108                           
  2109                           ;CANlib.h: 273: break;
  2110  00209E  D028               	goto	l4434
  2111  0020A0                     l361:
  2112                           
  2113                           ; BSR set to: 0
  2114                           ;CANlib.h: 275: FilterConfig1 = CAN_CONFIG_STD_MSG;
  2115  0020A0  0100               	movlb	0	; () banked
  2116  0020A2  69B6               	setf	CANInitialize@FilterConfig1& (0+255),b
  2117  0020A4                     l4428:
  2118                           
  2119                           ; BSR set to: 0
  2120                           ;CANlib.h: 276: FilterConfig2 = CAN_CONFIG_XTD_MSG;
  2121  0020A4  0EF7               	movlw	247
  2122  0020A6  0100               	movlb	0	; () banked
  2123  0020A8  6FB7               	movwf	CANInitialize@FilterConfig2& (0+255),b
  2124                           
  2125                           ; BSR set to: 0
  2126                           ;CANlib.h: 278: }
  2127                           
  2128                           ;CANlib.h: 277: break;
  2129  0020AA  D022               	goto	l4434
  2130  0020AC                     l4432:
  2131  0020AC  0E9F               	movlw	159
  2132  0020AE  0100               	movlb	0	; () banked
  2133  0020B0  6FB1               	movwf	??_CANInitialize& (0+255),b
  2134  0020B2  0EFF               	movlw	255
  2135  0020B4  0100               	movlb	0	; () banked
  2136  0020B6  6FB2               	movwf	(??_CANInitialize+1)& (0+255),b
  2137  0020B8  0100               	movlb	0	; () banked
  2138  0020BA  51B0               	movf	CANInitialize@flags& (0+255),w,b
  2139  0020BC  0B60               	andlw	96
  2140  0020BE  0100               	movlb	0	; () banked
  2141  0020C0  6FB3               	movwf	(??_CANInitialize+2)& (0+255),b
  2142  0020C2  6BB4               	clrf	(??_CANInitialize+3)& (0+255),b
  2143  0020C4  0100               	movlb	0	; () banked
  2144  0020C6  51B1               	movf	??_CANInitialize& (0+255),w,b
  2145  0020C8  0100               	movlb	0	; () banked
  2146  0020CA  13B3               	iorwf	(??_CANInitialize+2)& (0+255),f,b
  2147  0020CC  0100               	movlb	0	; () banked
  2148  0020CE  51B2               	movf	(??_CANInitialize+1)& (0+255),w,b
  2149  0020D0  0100               	movlb	0	; () banked
  2150  0020D2  13B4               	iorwf	(??_CANInitialize+3)& (0+255),f,b
  2151                           
  2152                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2153                           ; Switch size 1, requested type "space"
  2154                           ; Number of cases is 1, Range of values is 0 to 0
  2155                           ; switch strategies available:
  2156                           ; Name         Instructions Cycles
  2157                           ; simple_byte            4     3 (average)
  2158                           ;	Chosen strategy is simple_byte
  2159  0020D4  0100               	movlb	0	; () banked
  2160  0020D6  51B4               	movf	(??_CANInitialize+3)& (0+255),w,b
  2161  0020D8  0A00               	xorlw	0	; case 0
  2162  0020DA  A4D8               	btfss	status,2,c
  2163  0020DC  D7E1               	goto	l361
  2164                           
  2165                           ; BSR set to: 0
  2166                           ; Switch size 1, requested type "space"
  2167                           ; Number of cases is 2, Range of values is 191 to 223
  2168                           ; switch strategies available:
  2169                           ; Name         Instructions Cycles
  2170                           ; simple_byte            7     4 (average)
  2171                           ;	Chosen strategy is simple_byte
  2172  0020DE  0100               	movlb	0	; () banked
  2173  0020E0  51B3               	movf	(??_CANInitialize+2)& (0+255),w,b
  2174  0020E2  0ABF               	xorlw	191	; case 191
  2175  0020E4  B4D8               	btfsc	status,2,c
  2176  0020E6  D7D7               	goto	l360
  2177  0020E8  0A60               	xorlw	96	; case 223
  2178  0020EA  B4D8               	btfsc	status,2,c
  2179  0020EC  D7D0               	goto	l4426
  2180  0020EE  D7D8               	goto	l361
  2181  0020F0                     l4434:
  2182                           
  2183                           ; BSR set to: 0
  2184                           ;CANlib.h: 280: CANSetFilter(CAN_FILTER_B1_F1, 0, FilterConfig1);
  2185  0020F0  0E00               	movlw	0
  2186  0020F2  6E1E               	movwf	CANSetFilter@filter,c
  2187  0020F4  0E00               	movlw	0
  2188  0020F6  6E1F               	movwf	CANSetFilter@filter+1,c
  2189  0020F8  0E00               	movlw	0
  2190  0020FA  6E20               	movwf	CANSetFilter@filter+2,c
  2191  0020FC  0E00               	movlw	0
  2192  0020FE  6E21               	movwf	CANSetFilter@filter+3,c
  2193  002100  C0B6  F022         	movff	CANInitialize@FilterConfig1,CANSetFilter@type
  2194  002104  0E00               	movlw	0
  2195  002106  ECD7  F000         	call	_CANSetFilter
  2196                           
  2197                           ;CANlib.h: 281: CANSetFilter(CAN_FILTER_B1_F2, 0, FilterConfig1);
  2198  00210A  0E00               	movlw	0
  2199  00210C  6E1E               	movwf	CANSetFilter@filter,c
  2200  00210E  0E00               	movlw	0
  2201  002110  6E1F               	movwf	CANSetFilter@filter+1,c
  2202  002112  0E00               	movlw	0
  2203  002114  6E20               	movwf	CANSetFilter@filter+2,c
  2204  002116  0E00               	movlw	0
  2205  002118  6E21               	movwf	CANSetFilter@filter+3,c
  2206  00211A  C0B6  F022         	movff	CANInitialize@FilterConfig1,CANSetFilter@type
  2207  00211E  0E01               	movlw	1
  2208  002120  ECD7  F000         	call	_CANSetFilter
  2209                           
  2210                           ;CANlib.h: 282: CANSetFilter(CAN_FILTER_B2_F1, 0, FilterConfig2);
  2211  002124  0E00               	movlw	0
  2212  002126  6E1E               	movwf	CANSetFilter@filter,c
  2213  002128  0E00               	movlw	0
  2214  00212A  6E1F               	movwf	CANSetFilter@filter+1,c
  2215  00212C  0E00               	movlw	0
  2216  00212E  6E20               	movwf	CANSetFilter@filter+2,c
  2217  002130  0E00               	movlw	0
  2218  002132  6E21               	movwf	CANSetFilter@filter+3,c
  2219  002134  C0B7  F022         	movff	CANInitialize@FilterConfig2,CANSetFilter@type
  2220  002138  0E02               	movlw	2
  2221  00213A  ECD7  F000         	call	_CANSetFilter
  2222                           
  2223                           ;CANlib.h: 283: CANSetFilter(CAN_FILTER_B2_F2, 0, FilterConfig2);
  2224  00213E  0E00               	movlw	0
  2225  002140  6E1E               	movwf	CANSetFilter@filter,c
  2226  002142  0E00               	movlw	0
  2227  002144  6E1F               	movwf	CANSetFilter@filter+1,c
  2228  002146  0E00               	movlw	0
  2229  002148  6E20               	movwf	CANSetFilter@filter+2,c
  2230  00214A  0E00               	movlw	0
  2231  00214C  6E21               	movwf	CANSetFilter@filter+3,c
  2232  00214E  C0B7  F022         	movff	CANInitialize@FilterConfig2,CANSetFilter@type
  2233  002152  0E03               	movlw	3
  2234  002154  ECD7  F000         	call	_CANSetFilter
  2235                           
  2236                           ;CANlib.h: 284: CANSetFilter(CAN_FILTER_B2_F3, 0, FilterConfig2);
  2237  002158  0E00               	movlw	0
  2238  00215A  6E1E               	movwf	CANSetFilter@filter,c
  2239  00215C  0E00               	movlw	0
  2240  00215E  6E1F               	movwf	CANSetFilter@filter+1,c
  2241  002160  0E00               	movlw	0
  2242  002162  6E20               	movwf	CANSetFilter@filter+2,c
  2243  002164  0E00               	movlw	0
  2244  002166  6E21               	movwf	CANSetFilter@filter+3,c
  2245  002168  C0B7  F022         	movff	CANInitialize@FilterConfig2,CANSetFilter@type
  2246  00216C  0E04               	movlw	4
  2247  00216E  ECD7  F000         	call	_CANSetFilter
  2248                           
  2249                           ;CANlib.h: 285: CANSetFilter(CAN_FILTER_B2_F4, 0, FilterConfig2);
  2250  002172  0E00               	movlw	0
  2251  002174  6E1E               	movwf	CANSetFilter@filter,c
  2252  002176  0E00               	movlw	0
  2253  002178  6E1F               	movwf	CANSetFilter@filter+1,c
  2254  00217A  0E00               	movlw	0
  2255  00217C  6E20               	movwf	CANSetFilter@filter+2,c
  2256  00217E  0E00               	movlw	0
  2257  002180  6E21               	movwf	CANSetFilter@filter+3,c
  2258  002182  C0B7  F022         	movff	CANInitialize@FilterConfig2,CANSetFilter@type
  2259  002186  0E05               	movlw	5
  2260  002188  ECD7  F000         	call	_CANSetFilter
  2261                           
  2262                           ;CANlib.h: 287: CANOperationMode(CAN_OP_MODE_NORMAL);
  2263  00218C  0E00               	movlw	0
  2264  00218E  ECFA  F012         	call	_CANOperationMode
  2265  002192  0012               	return		;funcret
  2266  002194                     __end_of_CANInitialize:
  2267                           	opt stack 0
  2268                           tblptru	equ	0xFF8
  2269                           tblptrh	equ	0xFF7
  2270                           tblptrl	equ	0xFF6
  2271                           tablat	equ	0xFF5
  2272                           prodh	equ	0xFF4
  2273                           prodl	equ	0xFF3
  2274                           intcon	equ	0xFF2
  2275                           intcon2	equ	0xFF1
  2276                           postinc0	equ	0xFEE
  2277                           wreg	equ	0xFE8
  2278                           indf1	equ	0xFE7
  2279                           fsr1h	equ	0xFE2
  2280                           fsr1l	equ	0xFE1
  2281                           indf2	equ	0xFDF
  2282                           fsr2h	equ	0xFDA
  2283                           fsr2l	equ	0xFD9
  2284                           status	equ	0xFD8
  2285                           
  2286 ;; *************** function _CANSetMask *****************
  2287 ;; Defined at:
  2288 ;;		line 640 in file "CANlib.h"
  2289 ;; Parameters:    Size  Location     Type
  2290 ;;  numBuffer       1    wreg     enum E16878
  2291 ;;  mask            4   29[COMRAM] unsigned long 
  2292 ;;  type            1   33[COMRAM] enum E16844
  2293 ;; Auto vars:     Size  Location     Type
  2294 ;;  numBuffer       1    4[BANK0 ] enum E16878
  2295 ;;  tamp            4    5[BANK0 ] unsigned long 
  2296 ;; Return value:  Size  Location     Type
  2297 ;;		None               void
  2298 ;; Registers used:
  2299 ;;		wreg, status,2, status,0
  2300 ;; Tracked objects:
  2301 ;;		On entry : 0/0
  2302 ;;		On exit  : 0/0
  2303 ;;		Unchanged: 0/0
  2304 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2305 ;;      Params:         5       0       0       0
  2306 ;;      Locals:         0       5       0       0
  2307 ;;      Temps:          0       4       0       0
  2308 ;;      Totals:         5       9       0       0
  2309 ;;Total ram usage:       14 bytes
  2310 ;; Hardware stack levels used:    1
  2311 ;; Hardware stack levels required when called:    2
  2312 ;; This function calls:
  2313 ;;		Nothing
  2314 ;; This function is called by:
  2315 ;;		_CANInitialize
  2316 ;; This function uses a non-reentrant model
  2317 ;;
  2318                           
  2319                           	psect	text5
  2320  001C84                     __ptext5:
  2321                           	opt stack 0
  2322  001C84                     _CANSetMask:
  2323                           	opt stack 26
  2324                           
  2325                           ;incstack = 0
  2326                           ;CANSetMask@numBuffer stored from wreg
  2327  001C84  0100               	movlb	0	; () banked
  2328  001C86  6FA7               	movwf	CANSetMask@numBuffer& (0+255),b
  2329                           
  2330                           ;CANlib.h: 643: if ((numBuffer ==CAN_MASK_B1) && (type == CAN_CONFIG_STD_MSG))
  2331  001C88  0100               	movlb	0	; () banked
  2332  001C8A  05A7               	decf	CANSetMask@numBuffer& (0+255),w,b
  2333  001C8C  A4D8               	btfss	status,2,c
  2334  001C8E  D051               	goto	l3990
  2335                           
  2336                           ; BSR set to: 0
  2337  001C90  2822               	incf	CANSetMask@type,w,c
  2338  001C92  A4D8               	btfss	status,2,c
  2339  001C94  D04E               	goto	l3990
  2340                           
  2341                           ; BSR set to: 0
  2342                           ;CANlib.h: 644: {
  2343                           ;CANlib.h: 645: tamp = (mask >> 3);
  2344  001C96  C01E  F0A3         	movff	CANSetMask@mask,??_CANSetMask
  2345  001C9A  C01F  F0A4         	movff	CANSetMask@mask+1,??_CANSetMask+1
  2346  001C9E  C020  F0A5         	movff	CANSetMask@mask+2,??_CANSetMask+2
  2347  001CA2  C021  F0A6         	movff	CANSetMask@mask+3,??_CANSetMask+3
  2348  001CA6  0E04               	movlw	4
  2349  001CA8  D006               	goto	u4740
  2350  001CAA                     u4745:
  2351  001CAA  0100               	movlb	0	; () banked
  2352  001CAC  90D8               	bcf	status,0,c
  2353  001CAE  33A6               	rrcf	(??_CANSetMask+3)& (0+255),f,b
  2354  001CB0  33A5               	rrcf	(??_CANSetMask+2)& (0+255),f,b
  2355  001CB2  33A4               	rrcf	(??_CANSetMask+1)& (0+255),f,b
  2356  001CB4  33A3               	rrcf	??_CANSetMask& (0+255),f,b
  2357  001CB6                     u4740:
  2358  001CB6  2EE8               	decfsz	wreg,f,c
  2359  001CB8  D7F8               	goto	u4745
  2360  001CBA  C0A3  F0A8         	movff	??_CANSetMask,CANSetMask@tamp
  2361  001CBE  C0A4  F0A9         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  2362  001CC2  C0A5  F0AA         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  2363  001CC6  C0A6  F0AB         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  2364                           
  2365                           ; BSR set to: 0
  2366                           ;CANlib.h: 646: tamp = tamp & 0x000000FF;
  2367  001CCA  0100               	movlb	0	; () banked
  2368  001CCC  51A8               	movf	CANSetMask@tamp& (0+255),w,b
  2369  001CCE  0100               	movlb	0	; () banked
  2370  001CD0  6FA8               	movwf	CANSetMask@tamp& (0+255),b
  2371  001CD2  6BA9               	clrf	(CANSetMask@tamp+1)& (0+255),b
  2372  001CD4  6BAA               	clrf	(CANSetMask@tamp+2)& (0+255),b
  2373  001CD6  6BAB               	clrf	(CANSetMask@tamp+3)& (0+255),b
  2374                           
  2375                           ; BSR set to: 0
  2376                           ;CANlib.h: 647: RXM0SIDH = (unsigned char) tamp;
  2377  001CD8  C0A8  FF18         	movff	CANSetMask@tamp,3864	;volatile
  2378                           
  2379                           ; BSR set to: 0
  2380                           ;CANlib.h: 649: tamp = mask & 0x00000007;
  2381  001CDC  0E07               	movlw	7
  2382  001CDE  141E               	andwf	CANSetMask@mask,w,c
  2383  001CE0  0100               	movlb	0	; () banked
  2384  001CE2  6FA8               	movwf	CANSetMask@tamp& (0+255),b
  2385  001CE4  0E00               	movlw	0
  2386  001CE6  141F               	andwf	CANSetMask@mask+1,w,c
  2387  001CE8  0100               	movlb	0	; () banked
  2388  001CEA  6FA9               	movwf	(CANSetMask@tamp+1)& (0+255),b
  2389  001CEC  0E00               	movlw	0
  2390  001CEE  1420               	andwf	CANSetMask@mask+2,w,c
  2391  001CF0  0100               	movlb	0	; () banked
  2392  001CF2  6FAA               	movwf	(CANSetMask@tamp+2)& (0+255),b
  2393  001CF4  0E00               	movlw	0
  2394  001CF6  1421               	andwf	CANSetMask@mask+3,w,c
  2395  001CF8  0100               	movlb	0	; () banked
  2396  001CFA  6FAB               	movwf	(CANSetMask@tamp+3)& (0+255),b
  2397                           
  2398                           ; BSR set to: 0
  2399                           ;CANlib.h: 650: tamp = tamp << 5;
  2400  001CFC  C0A8  F0A3         	movff	CANSetMask@tamp,??_CANSetMask
  2401  001D00  C0A9  F0A4         	movff	CANSetMask@tamp+1,??_CANSetMask+1
  2402  001D04  C0AA  F0A5         	movff	CANSetMask@tamp+2,??_CANSetMask+2
  2403  001D08  C0AB  F0A6         	movff	CANSetMask@tamp+3,??_CANSetMask+3
  2404  001D0C  0E05               	movlw	5
  2405  001D0E                     u4755:
  2406  001D0E  90D8               	bcf	status,0,c
  2407  001D10  0100               	movlb	0	; () banked
  2408  001D12  37A3               	rlcf	??_CANSetMask& (0+255),f,b
  2409  001D14  37A4               	rlcf	(??_CANSetMask+1)& (0+255),f,b
  2410  001D16  37A5               	rlcf	(??_CANSetMask+2)& (0+255),f,b
  2411  001D18  37A6               	rlcf	(??_CANSetMask+3)& (0+255),f,b
  2412  001D1A  2EE8               	decfsz	wreg,f,c
  2413  001D1C  D7F8               	goto	u4755
  2414  001D1E  C0A3  F0A8         	movff	??_CANSetMask,CANSetMask@tamp
  2415  001D22  C0A4  F0A9         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  2416  001D26  C0A5  F0AA         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  2417  001D2A  C0A6  F0AB         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  2418                           
  2419                           ; BSR set to: 0
  2420                           ;CANlib.h: 651: RXM0SIDL = (unsigned char) tamp;
  2421  001D2E  C0A8  FF19         	movff	CANSetMask@tamp,3865	;volatile
  2422  001D32                     l3990:
  2423                           
  2424                           ; BSR set to: 0
  2425                           ;CANlib.h: 652: }
  2426                           ;CANlib.h: 654: if ((numBuffer ==CAN_MASK_B2) && (type == CAN_CONFIG_STD_MSG))
  2427  001D32  0E02               	movlw	2
  2428  001D34  0100               	movlb	0	; () banked
  2429  001D36  19A7               	xorwf	CANSetMask@numBuffer& (0+255),w,b
  2430  001D38  A4D8               	btfss	status,2,c
  2431  001D3A  D051               	goto	l4006
  2432                           
  2433                           ; BSR set to: 0
  2434  001D3C  2822               	incf	CANSetMask@type,w,c
  2435  001D3E  A4D8               	btfss	status,2,c
  2436  001D40  D04E               	goto	l4006
  2437                           
  2438                           ; BSR set to: 0
  2439                           ;CANlib.h: 655: {
  2440                           ;CANlib.h: 656: tamp = (mask >> 3);
  2441  001D42  C01E  F0A3         	movff	CANSetMask@mask,??_CANSetMask
  2442  001D46  C01F  F0A4         	movff	CANSetMask@mask+1,??_CANSetMask+1
  2443  001D4A  C020  F0A5         	movff	CANSetMask@mask+2,??_CANSetMask+2
  2444  001D4E  C021  F0A6         	movff	CANSetMask@mask+3,??_CANSetMask+3
  2445  001D52  0E04               	movlw	4
  2446  001D54  D006               	goto	u4780
  2447  001D56                     u4785:
  2448  001D56  0100               	movlb	0	; () banked
  2449  001D58  90D8               	bcf	status,0,c
  2450  001D5A  33A6               	rrcf	(??_CANSetMask+3)& (0+255),f,b
  2451  001D5C  33A5               	rrcf	(??_CANSetMask+2)& (0+255),f,b
  2452  001D5E  33A4               	rrcf	(??_CANSetMask+1)& (0+255),f,b
  2453  001D60  33A3               	rrcf	??_CANSetMask& (0+255),f,b
  2454  001D62                     u4780:
  2455  001D62  2EE8               	decfsz	wreg,f,c
  2456  001D64  D7F8               	goto	u4785
  2457  001D66  C0A3  F0A8         	movff	??_CANSetMask,CANSetMask@tamp
  2458  001D6A  C0A4  F0A9         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  2459  001D6E  C0A5  F0AA         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  2460  001D72  C0A6  F0AB         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  2461                           
  2462                           ; BSR set to: 0
  2463                           ;CANlib.h: 657: tamp = tamp & 0x000000FF;
  2464  001D76  0100               	movlb	0	; () banked
  2465  001D78  51A8               	movf	CANSetMask@tamp& (0+255),w,b
  2466  001D7A  0100               	movlb	0	; () banked
  2467  001D7C  6FA8               	movwf	CANSetMask@tamp& (0+255),b
  2468  001D7E  6BA9               	clrf	(CANSetMask@tamp+1)& (0+255),b
  2469  001D80  6BAA               	clrf	(CANSetMask@tamp+2)& (0+255),b
  2470  001D82  6BAB               	clrf	(CANSetMask@tamp+3)& (0+255),b
  2471                           
  2472                           ; BSR set to: 0
  2473                           ;CANlib.h: 658: RXM1SIDH = (unsigned char) tamp;
  2474  001D84  C0A8  FF1C         	movff	CANSetMask@tamp,3868	;volatile
  2475                           
  2476                           ; BSR set to: 0
  2477                           ;CANlib.h: 660: tamp = mask & 0x00000007;
  2478  001D88  0E07               	movlw	7
  2479  001D8A  141E               	andwf	CANSetMask@mask,w,c
  2480  001D8C  0100               	movlb	0	; () banked
  2481  001D8E  6FA8               	movwf	CANSetMask@tamp& (0+255),b
  2482  001D90  0E00               	movlw	0
  2483  001D92  141F               	andwf	CANSetMask@mask+1,w,c
  2484  001D94  0100               	movlb	0	; () banked
  2485  001D96  6FA9               	movwf	(CANSetMask@tamp+1)& (0+255),b
  2486  001D98  0E00               	movlw	0
  2487  001D9A  1420               	andwf	CANSetMask@mask+2,w,c
  2488  001D9C  0100               	movlb	0	; () banked
  2489  001D9E  6FAA               	movwf	(CANSetMask@tamp+2)& (0+255),b
  2490  001DA0  0E00               	movlw	0
  2491  001DA2  1421               	andwf	CANSetMask@mask+3,w,c
  2492  001DA4  0100               	movlb	0	; () banked
  2493  001DA6  6FAB               	movwf	(CANSetMask@tamp+3)& (0+255),b
  2494                           
  2495                           ; BSR set to: 0
  2496                           ;CANlib.h: 661: tamp = tamp << 5;
  2497  001DA8  C0A8  F0A3         	movff	CANSetMask@tamp,??_CANSetMask
  2498  001DAC  C0A9  F0A4         	movff	CANSetMask@tamp+1,??_CANSetMask+1
  2499  001DB0  C0AA  F0A5         	movff	CANSetMask@tamp+2,??_CANSetMask+2
  2500  001DB4  C0AB  F0A6         	movff	CANSetMask@tamp+3,??_CANSetMask+3
  2501  001DB8  0E05               	movlw	5
  2502  001DBA                     u4795:
  2503  001DBA  90D8               	bcf	status,0,c
  2504  001DBC  0100               	movlb	0	; () banked
  2505  001DBE  37A3               	rlcf	??_CANSetMask& (0+255),f,b
  2506  001DC0  37A4               	rlcf	(??_CANSetMask+1)& (0+255),f,b
  2507  001DC2  37A5               	rlcf	(??_CANSetMask+2)& (0+255),f,b
  2508  001DC4  37A6               	rlcf	(??_CANSetMask+3)& (0+255),f,b
  2509  001DC6  2EE8               	decfsz	wreg,f,c
  2510  001DC8  D7F8               	goto	u4795
  2511  001DCA  C0A3  F0A8         	movff	??_CANSetMask,CANSetMask@tamp
  2512  001DCE  C0A4  F0A9         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  2513  001DD2  C0A5  F0AA         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  2514  001DD6  C0A6  F0AB         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  2515                           
  2516                           ; BSR set to: 0
  2517                           ;CANlib.h: 662: RXM1SIDL = (unsigned char) tamp;
  2518  001DDA  C0A8  FF1D         	movff	CANSetMask@tamp,3869	;volatile
  2519  001DDE                     l4006:
  2520                           
  2521                           ; BSR set to: 0
  2522                           ;CANlib.h: 663: }
  2523                           ;CANlib.h: 665: if ((numBuffer ==CAN_MASK_B1) && (type == CAN_CONFIG_XTD_MSG))
  2524  001DDE  0100               	movlb	0	; () banked
  2525  001DE0  05A7               	decf	CANSetMask@numBuffer& (0+255),w,b
  2526  001DE2  A4D8               	btfss	status,2,c
  2527  001DE4  D07C               	goto	l4038
  2528                           
  2529                           ; BSR set to: 0
  2530  001DE6  0EF7               	movlw	247
  2531  001DE8  1822               	xorwf	CANSetMask@type,w,c
  2532  001DEA  A4D8               	btfss	status,2,c
  2533  001DEC  D078               	goto	l4038
  2534                           
  2535                           ; BSR set to: 0
  2536                           ;CANlib.h: 666: {
  2537                           ;CANlib.h: 667: tamp = mask & 0x000000FF;
  2538  001DEE  501E               	movf	CANSetMask@mask,w,c
  2539  001DF0  0100               	movlb	0	; () banked
  2540  001DF2  6FA8               	movwf	CANSetMask@tamp& (0+255),b
  2541  001DF4  6BA9               	clrf	(CANSetMask@tamp+1)& (0+255),b
  2542  001DF6  6BAA               	clrf	(CANSetMask@tamp+2)& (0+255),b
  2543  001DF8  6BAB               	clrf	(CANSetMask@tamp+3)& (0+255),b
  2544                           
  2545                           ; BSR set to: 0
  2546                           ;CANlib.h: 668: RXM0EIDL = (unsigned char) tamp;
  2547  001DFA  C0A8  FF1B         	movff	CANSetMask@tamp,3867	;volatile
  2548                           
  2549                           ; BSR set to: 0
  2550                           ;CANlib.h: 670: tamp = mask & 0x0000FF00;
  2551  001DFE  0E00               	movlw	0
  2552  001E00  141E               	andwf	CANSetMask@mask,w,c
  2553  001E02  0100               	movlb	0	; () banked
  2554  001E04  6FA8               	movwf	CANSetMask@tamp& (0+255),b
  2555  001E06  0EFF               	movlw	255
  2556  001E08  141F               	andwf	CANSetMask@mask+1,w,c
  2557  001E0A  0100               	movlb	0	; () banked
  2558  001E0C  6FA9               	movwf	(CANSetMask@tamp+1)& (0+255),b
  2559  001E0E  0E00               	movlw	0
  2560  001E10  1420               	andwf	CANSetMask@mask+2,w,c
  2561  001E12  0100               	movlb	0	; () banked
  2562  001E14  6FAA               	movwf	(CANSetMask@tamp+2)& (0+255),b
  2563  001E16  0E00               	movlw	0
  2564  001E18  1421               	andwf	CANSetMask@mask+3,w,c
  2565  001E1A  0100               	movlb	0	; () banked
  2566  001E1C  6FAB               	movwf	(CANSetMask@tamp+3)& (0+255),b
  2567                           
  2568                           ; BSR set to: 0
  2569                           ;CANlib.h: 671: tamp = tamp >> 8;
  2570  001E1E  C0A8  F0A3         	movff	CANSetMask@tamp,??_CANSetMask
  2571  001E22  C0A9  F0A4         	movff	CANSetMask@tamp+1,??_CANSetMask+1
  2572  001E26  C0AA  F0A5         	movff	CANSetMask@tamp+2,??_CANSetMask+2
  2573  001E2A  C0AB  F0A6         	movff	CANSetMask@tamp+3,??_CANSetMask+3
  2574  001E2E  C0A4  F0A3         	movff	??_CANSetMask+1,??_CANSetMask
  2575  001E32  C0A5  F0A4         	movff	??_CANSetMask+2,??_CANSetMask+1
  2576  001E36  C0A6  F0A5         	movff	??_CANSetMask+3,??_CANSetMask+2
  2577  001E3A  0100               	movlb	0	; () banked
  2578  001E3C  6BA6               	clrf	(??_CANSetMask+3)& (0+255),b
  2579  001E3E  C0A3  F0A8         	movff	??_CANSetMask,CANSetMask@tamp
  2580  001E42  C0A4  F0A9         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  2581  001E46  C0A5  F0AA         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  2582  001E4A  C0A6  F0AB         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  2583                           
  2584                           ; BSR set to: 0
  2585                           ;CANlib.h: 672: RXM0EIDH = (unsigned char) tamp;
  2586  001E4E  C0A8  FF1A         	movff	CANSetMask@tamp,3866	;volatile
  2587                           
  2588                           ; BSR set to: 0
  2589                           ;CANlib.h: 674: if (mask & 0x00010000)
  2590  001E52  A020               	btfss	CANSetMask@mask+2,0,c
  2591  001E54  D003               	goto	l434
  2592                           
  2593                           ; BSR set to: 0
  2594                           ;CANlib.h: 675: RXM0SIDLbits.EID16 = 0x01;
  2595  001E56  010F               	movlb	15	; () banked
  2596  001E58  8119               	bsf	25,0,b	;volatile
  2597  001E5A  D002               	goto	l435
  2598  001E5C                     l434:
  2599                           
  2600                           ; BSR set to: 0
  2601                           ;CANlib.h: 676: else
  2602                           ;CANlib.h: 677: RXM0SIDLbits.EID16 = 0x00;
  2603  001E5C  010F               	movlb	15	; () banked
  2604  001E5E  9119               	bcf	25,0,b	;volatile
  2605  001E60                     l435:
  2606                           
  2607                           ; BSR set to: 15
  2608                           ;CANlib.h: 679: if (mask & 0x00020000)
  2609  001E60  A220               	btfss	CANSetMask@mask+2,1,c
  2610  001E62  D003               	goto	l436
  2611                           
  2612                           ; BSR set to: 15
  2613                           ;CANlib.h: 680: RXM0SIDLbits.EID17 = 0x01;
  2614  001E64  010F               	movlb	15	; () banked
  2615  001E66  8319               	bsf	25,1,b	;volatile
  2616  001E68  D002               	goto	l437
  2617  001E6A                     l436:
  2618                           
  2619                           ; BSR set to: 15
  2620                           ;CANlib.h: 681: else
  2621                           ;CANlib.h: 682: RXM0SIDLbits.EID17 = 0x00;
  2622  001E6A  010F               	movlb	15	; () banked
  2623  001E6C  9319               	bcf	25,1,b	;volatile
  2624  001E6E                     l437:
  2625                           
  2626                           ; BSR set to: 15
  2627                           ;CANlib.h: 684: if (mask & 0x00040000)
  2628  001E6E  A420               	btfss	CANSetMask@mask+2,2,c
  2629  001E70  D003               	goto	l438
  2630                           
  2631                           ; BSR set to: 15
  2632                           ;CANlib.h: 685: RXM0SIDLbits.SID0 = 0x01;
  2633  001E72  010F               	movlb	15	; () banked
  2634  001E74  8B19               	bsf	25,5,b	;volatile
  2635  001E76  D002               	goto	l439
  2636  001E78                     l438:
  2637                           
  2638                           ; BSR set to: 15
  2639                           ;CANlib.h: 686: else
  2640                           ;CANlib.h: 687: RXM0SIDLbits.SID0 = 0x00;
  2641  001E78  010F               	movlb	15	; () banked
  2642  001E7A  9B19               	bcf	25,5,b	;volatile
  2643  001E7C                     l439:
  2644                           
  2645                           ; BSR set to: 15
  2646                           ;CANlib.h: 689: if (mask & 0x00080000)
  2647  001E7C  A620               	btfss	CANSetMask@mask+2,3,c
  2648  001E7E  D003               	goto	l440
  2649                           
  2650                           ; BSR set to: 15
  2651                           ;CANlib.h: 690: RXM0SIDLbits.SID1 = 0x01;
  2652  001E80  010F               	movlb	15	; () banked
  2653  001E82  8D19               	bsf	25,6,b	;volatile
  2654  001E84  D002               	goto	l441
  2655  001E86                     l440:
  2656                           
  2657                           ; BSR set to: 15
  2658                           ;CANlib.h: 691: else
  2659                           ;CANlib.h: 692: RXM0SIDLbits.SID1 = 0x00;
  2660  001E86  010F               	movlb	15	; () banked
  2661  001E88  9D19               	bcf	25,6,b	;volatile
  2662  001E8A                     l441:
  2663                           
  2664                           ; BSR set to: 15
  2665                           ;CANlib.h: 694: if (mask & 0x00100000)
  2666  001E8A  A820               	btfss	CANSetMask@mask+2,4,c
  2667  001E8C  D003               	goto	l442
  2668                           
  2669                           ; BSR set to: 15
  2670                           ;CANlib.h: 695: RXM0SIDLbits.SID2 = 0x01 ;
  2671  001E8E  010F               	movlb	15	; () banked
  2672  001E90  8F19               	bsf	25,7,b	;volatile
  2673  001E92  D002               	goto	l4032
  2674  001E94                     l442:
  2675                           
  2676                           ; BSR set to: 15
  2677                           ;CANlib.h: 696: else
  2678                           ;CANlib.h: 697: RXM0SIDLbits.SID2 = 0x00 ;
  2679  001E94  010F               	movlb	15	; () banked
  2680  001E96  9F19               	bcf	25,7,b	;volatile
  2681  001E98                     l4032:
  2682                           
  2683                           ; BSR set to: 15
  2684                           ;CANlib.h: 699: tamp = (mask >> 21);
  2685  001E98  C01E  F0A3         	movff	CANSetMask@mask,??_CANSetMask
  2686  001E9C  C01F  F0A4         	movff	CANSetMask@mask+1,??_CANSetMask+1
  2687  001EA0  C020  F0A5         	movff	CANSetMask@mask+2,??_CANSetMask+2
  2688  001EA4  C021  F0A6         	movff	CANSetMask@mask+3,??_CANSetMask+3
  2689  001EA8  0E16               	movlw	22
  2690  001EAA  D006               	goto	u4870
  2691  001EAC                     u4875:
  2692  001EAC  0100               	movlb	0	; () banked
  2693  001EAE  90D8               	bcf	status,0,c
  2694  001EB0  33A6               	rrcf	(??_CANSetMask+3)& (0+255),f,b
  2695  001EB2  33A5               	rrcf	(??_CANSetMask+2)& (0+255),f,b
  2696  001EB4  33A4               	rrcf	(??_CANSetMask+1)& (0+255),f,b
  2697  001EB6  33A3               	rrcf	??_CANSetMask& (0+255),f,b
  2698  001EB8                     u4870:
  2699  001EB8  2EE8               	decfsz	wreg,f,c
  2700  001EBA  D7F8               	goto	u4875
  2701  001EBC  C0A3  F0A8         	movff	??_CANSetMask,CANSetMask@tamp
  2702  001EC0  C0A4  F0A9         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  2703  001EC4  C0A5  F0AA         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  2704  001EC8  C0A6  F0AB         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  2705                           
  2706                           ; BSR set to: 0
  2707                           ;CANlib.h: 700: tamp = tamp & 0x000000FF;
  2708  001ECC  0100               	movlb	0	; () banked
  2709  001ECE  51A8               	movf	CANSetMask@tamp& (0+255),w,b
  2710  001ED0  0100               	movlb	0	; () banked
  2711  001ED2  6FA8               	movwf	CANSetMask@tamp& (0+255),b
  2712  001ED4  6BA9               	clrf	(CANSetMask@tamp+1)& (0+255),b
  2713  001ED6  6BAA               	clrf	(CANSetMask@tamp+2)& (0+255),b
  2714  001ED8  6BAB               	clrf	(CANSetMask@tamp+3)& (0+255),b
  2715                           
  2716                           ; BSR set to: 0
  2717                           ;CANlib.h: 701: RXM0SIDH = (unsigned char) tamp;
  2718  001EDA  C0A8  FF18         	movff	CANSetMask@tamp,3864	;volatile
  2719  001EDE                     l4038:
  2720                           
  2721                           ; BSR set to: 0
  2722                           ;CANlib.h: 702: }
  2723                           ;CANlib.h: 704: if ((numBuffer ==CAN_MASK_B2) && (type == CAN_CONFIG_XTD_MSG))
  2724  001EDE  0E02               	movlw	2
  2725  001EE0  0100               	movlb	0	; () banked
  2726  001EE2  19A7               	xorwf	CANSetMask@numBuffer& (0+255),w,b
  2727  001EE4  A4D8               	btfss	status,2,c
  2728  001EE6  0012               	return	
  2729                           
  2730                           ; BSR set to: 0
  2731  001EE8  0EF7               	movlw	247
  2732  001EEA  1822               	xorwf	CANSetMask@type,w,c
  2733  001EEC  A4D8               	btfss	status,2,c
  2734  001EEE  0012               	return	
  2735                           
  2736                           ; BSR set to: 0
  2737                           ;CANlib.h: 705: {
  2738                           ;CANlib.h: 706: tamp = mask & 0x000000FF;
  2739  001EF0  501E               	movf	CANSetMask@mask,w,c
  2740  001EF2  0100               	movlb	0	; () banked
  2741  001EF4  6FA8               	movwf	CANSetMask@tamp& (0+255),b
  2742  001EF6  6BA9               	clrf	(CANSetMask@tamp+1)& (0+255),b
  2743  001EF8  6BAA               	clrf	(CANSetMask@tamp+2)& (0+255),b
  2744  001EFA  6BAB               	clrf	(CANSetMask@tamp+3)& (0+255),b
  2745                           
  2746                           ; BSR set to: 0
  2747                           ;CANlib.h: 707: RXM1EIDL = (unsigned char) tamp;
  2748  001EFC  C0A8  FF1F         	movff	CANSetMask@tamp,3871	;volatile
  2749                           
  2750                           ; BSR set to: 0
  2751                           ;CANlib.h: 709: tamp = mask & 0x0000FF00;
  2752  001F00  0E00               	movlw	0
  2753  001F02  141E               	andwf	CANSetMask@mask,w,c
  2754  001F04  0100               	movlb	0	; () banked
  2755  001F06  6FA8               	movwf	CANSetMask@tamp& (0+255),b
  2756  001F08  0EFF               	movlw	255
  2757  001F0A  141F               	andwf	CANSetMask@mask+1,w,c
  2758  001F0C  0100               	movlb	0	; () banked
  2759  001F0E  6FA9               	movwf	(CANSetMask@tamp+1)& (0+255),b
  2760  001F10  0E00               	movlw	0
  2761  001F12  1420               	andwf	CANSetMask@mask+2,w,c
  2762  001F14  0100               	movlb	0	; () banked
  2763  001F16  6FAA               	movwf	(CANSetMask@tamp+2)& (0+255),b
  2764  001F18  0E00               	movlw	0
  2765  001F1A  1421               	andwf	CANSetMask@mask+3,w,c
  2766  001F1C  0100               	movlb	0	; () banked
  2767  001F1E  6FAB               	movwf	(CANSetMask@tamp+3)& (0+255),b
  2768                           
  2769                           ; BSR set to: 0
  2770                           ;CANlib.h: 710: tamp = tamp >> 8;
  2771  001F20  C0A8  F0A3         	movff	CANSetMask@tamp,??_CANSetMask
  2772  001F24  C0A9  F0A4         	movff	CANSetMask@tamp+1,??_CANSetMask+1
  2773  001F28  C0AA  F0A5         	movff	CANSetMask@tamp+2,??_CANSetMask+2
  2774  001F2C  C0AB  F0A6         	movff	CANSetMask@tamp+3,??_CANSetMask+3
  2775  001F30  C0A4  F0A3         	movff	??_CANSetMask+1,??_CANSetMask
  2776  001F34  C0A5  F0A4         	movff	??_CANSetMask+2,??_CANSetMask+1
  2777  001F38  C0A6  F0A5         	movff	??_CANSetMask+3,??_CANSetMask+2
  2778  001F3C  0100               	movlb	0	; () banked
  2779  001F3E  6BA6               	clrf	(??_CANSetMask+3)& (0+255),b
  2780  001F40  C0A3  F0A8         	movff	??_CANSetMask,CANSetMask@tamp
  2781  001F44  C0A4  F0A9         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  2782  001F48  C0A5  F0AA         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  2783  001F4C  C0A6  F0AB         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  2784                           
  2785                           ; BSR set to: 0
  2786                           ;CANlib.h: 711: RXM1EIDH = (unsigned char) tamp;
  2787  001F50  C0A8  FF1E         	movff	CANSetMask@tamp,3870	;volatile
  2788                           
  2789                           ; BSR set to: 0
  2790                           ;CANlib.h: 713: if (mask & 0x00010000)
  2791  001F54  A020               	btfss	CANSetMask@mask+2,0,c
  2792  001F56  D003               	goto	l445
  2793                           
  2794                           ; BSR set to: 0
  2795                           ;CANlib.h: 714: RXM1SIDLbits.EID16 = 0x01;
  2796  001F58  010F               	movlb	15	; () banked
  2797  001F5A  811D               	bsf	29,0,b	;volatile
  2798  001F5C  D002               	goto	l446
  2799  001F5E                     l445:
  2800                           
  2801                           ; BSR set to: 0
  2802                           ;CANlib.h: 715: else
  2803                           ;CANlib.h: 716: RXM1SIDLbits.EID16 = 0x00;
  2804  001F5E  010F               	movlb	15	; () banked
  2805  001F60  911D               	bcf	29,0,b	;volatile
  2806  001F62                     l446:
  2807                           
  2808                           ; BSR set to: 15
  2809                           ;CANlib.h: 718: if (mask & 0x00020000)
  2810  001F62  A220               	btfss	CANSetMask@mask+2,1,c
  2811  001F64  D003               	goto	l447
  2812                           
  2813                           ; BSR set to: 15
  2814                           ;CANlib.h: 719: RXM1SIDLbits.EID17 = 0x01;
  2815  001F66  010F               	movlb	15	; () banked
  2816  001F68  831D               	bsf	29,1,b	;volatile
  2817  001F6A  D002               	goto	l448
  2818  001F6C                     l447:
  2819                           
  2820                           ; BSR set to: 15
  2821                           ;CANlib.h: 720: else
  2822                           ;CANlib.h: 721: RXM1SIDLbits.EID17 = 0x00;
  2823  001F6C  010F               	movlb	15	; () banked
  2824  001F6E  931D               	bcf	29,1,b	;volatile
  2825  001F70                     l448:
  2826                           
  2827                           ; BSR set to: 15
  2828                           ;CANlib.h: 723: if (mask & 0x00040000)
  2829  001F70  A420               	btfss	CANSetMask@mask+2,2,c
  2830  001F72  D003               	goto	l449
  2831                           
  2832                           ; BSR set to: 15
  2833                           ;CANlib.h: 724: RXM1SIDLbits.SID0 = 0x01;
  2834  001F74  010F               	movlb	15	; () banked
  2835  001F76  8B1D               	bsf	29,5,b	;volatile
  2836  001F78  D002               	goto	l450
  2837  001F7A                     l449:
  2838                           
  2839                           ; BSR set to: 15
  2840                           ;CANlib.h: 725: else
  2841                           ;CANlib.h: 726: RXM1SIDLbits.SID0 = 0x00;
  2842  001F7A  010F               	movlb	15	; () banked
  2843  001F7C  9B1D               	bcf	29,5,b	;volatile
  2844  001F7E                     l450:
  2845                           
  2846                           ; BSR set to: 15
  2847                           ;CANlib.h: 728: if (mask & 0x00080000)
  2848  001F7E  A620               	btfss	CANSetMask@mask+2,3,c
  2849  001F80  D003               	goto	l451
  2850                           
  2851                           ; BSR set to: 15
  2852                           ;CANlib.h: 729: RXM1SIDLbits.SID1 = 0x01;
  2853  001F82  010F               	movlb	15	; () banked
  2854  001F84  8D1D               	bsf	29,6,b	;volatile
  2855  001F86  D002               	goto	l452
  2856  001F88                     l451:
  2857                           
  2858                           ; BSR set to: 15
  2859                           ;CANlib.h: 730: else
  2860                           ;CANlib.h: 731: RXM1SIDLbits.SID1 = 0x00;
  2861  001F88  010F               	movlb	15	; () banked
  2862  001F8A  9D1D               	bcf	29,6,b	;volatile
  2863  001F8C                     l452:
  2864                           
  2865                           ; BSR set to: 15
  2866                           ;CANlib.h: 733: if (mask & 0x00100000)
  2867  001F8C  A820               	btfss	CANSetMask@mask+2,4,c
  2868  001F8E  D003               	goto	l453
  2869                           
  2870                           ; BSR set to: 15
  2871                           ;CANlib.h: 734: RXM1SIDLbits.SID2 = 0x01 ;
  2872  001F90  010F               	movlb	15	; () banked
  2873  001F92  8F1D               	bsf	29,7,b	;volatile
  2874  001F94  D002               	goto	l4064
  2875  001F96                     l453:
  2876                           
  2877                           ; BSR set to: 15
  2878                           ;CANlib.h: 735: else
  2879                           ;CANlib.h: 736: RXM1SIDLbits.SID2 = 0x00 ;
  2880  001F96  010F               	movlb	15	; () banked
  2881  001F98  9F1D               	bcf	29,7,b	;volatile
  2882  001F9A                     l4064:
  2883                           
  2884                           ; BSR set to: 15
  2885                           ;CANlib.h: 738: tamp = (mask >> 21);
  2886  001F9A  C01E  F0A3         	movff	CANSetMask@mask,??_CANSetMask
  2887  001F9E  C01F  F0A4         	movff	CANSetMask@mask+1,??_CANSetMask+1
  2888  001FA2  C020  F0A5         	movff	CANSetMask@mask+2,??_CANSetMask+2
  2889  001FA6  C021  F0A6         	movff	CANSetMask@mask+3,??_CANSetMask+3
  2890  001FAA  0E16               	movlw	22
  2891  001FAC  D006               	goto	u4950
  2892  001FAE                     u4955:
  2893  001FAE  0100               	movlb	0	; () banked
  2894  001FB0  90D8               	bcf	status,0,c
  2895  001FB2  33A6               	rrcf	(??_CANSetMask+3)& (0+255),f,b
  2896  001FB4  33A5               	rrcf	(??_CANSetMask+2)& (0+255),f,b
  2897  001FB6  33A4               	rrcf	(??_CANSetMask+1)& (0+255),f,b
  2898  001FB8  33A3               	rrcf	??_CANSetMask& (0+255),f,b
  2899  001FBA                     u4950:
  2900  001FBA  2EE8               	decfsz	wreg,f,c
  2901  001FBC  D7F8               	goto	u4955
  2902  001FBE  C0A3  F0A8         	movff	??_CANSetMask,CANSetMask@tamp
  2903  001FC2  C0A4  F0A9         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  2904  001FC6  C0A5  F0AA         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  2905  001FCA  C0A6  F0AB         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  2906                           
  2907                           ; BSR set to: 0
  2908                           ;CANlib.h: 739: tamp = tamp & 0x000000FF;
  2909  001FCE  0100               	movlb	0	; () banked
  2910  001FD0  51A8               	movf	CANSetMask@tamp& (0+255),w,b
  2911  001FD2  0100               	movlb	0	; () banked
  2912  001FD4  6FA8               	movwf	CANSetMask@tamp& (0+255),b
  2913  001FD6  6BA9               	clrf	(CANSetMask@tamp+1)& (0+255),b
  2914  001FD8  6BAA               	clrf	(CANSetMask@tamp+2)& (0+255),b
  2915  001FDA  6BAB               	clrf	(CANSetMask@tamp+3)& (0+255),b
  2916                           
  2917                           ; BSR set to: 0
  2918                           ;CANlib.h: 740: RXM1SIDH = (unsigned char) tamp;
  2919  001FDC  C0A8  FF1C         	movff	CANSetMask@tamp,3868	;volatile
  2920  001FE0  0012               	return	
  2921  001FE2                     __end_of_CANSetMask:
  2922                           	opt stack 0
  2923                           tblptru	equ	0xFF8
  2924                           tblptrh	equ	0xFF7
  2925                           tblptrl	equ	0xFF6
  2926                           tablat	equ	0xFF5
  2927                           prodh	equ	0xFF4
  2928                           prodl	equ	0xFF3
  2929                           intcon	equ	0xFF2
  2930                           intcon2	equ	0xFF1
  2931                           postinc0	equ	0xFEE
  2932                           wreg	equ	0xFE8
  2933                           indf1	equ	0xFE7
  2934                           fsr1h	equ	0xFE2
  2935                           fsr1l	equ	0xFE1
  2936                           indf2	equ	0xFDF
  2937                           fsr2h	equ	0xFDA
  2938                           fsr2l	equ	0xFD9
  2939                           status	equ	0xFD8
  2940                           
  2941 ;; *************** function _CANSetFilter *****************
  2942 ;; Defined at:
  2943 ;;		line 748 in file "CANlib.h"
  2944 ;; Parameters:    Size  Location     Type
  2945 ;;  numBuffer       1    wreg     enum E16881
  2946 ;;  filter          4   29[COMRAM] unsigned long 
  2947 ;;  type            1   33[COMRAM] enum E16844
  2948 ;; Auto vars:     Size  Location     Type
  2949 ;;  numBuffer       1    4[BANK0 ] enum E16881
  2950 ;;  tamp            4    5[BANK0 ] unsigned long 
  2951 ;; Return value:  Size  Location     Type
  2952 ;;		None               void
  2953 ;; Registers used:
  2954 ;;		wreg, status,2, status,0
  2955 ;; Tracked objects:
  2956 ;;		On entry : 0/0
  2957 ;;		On exit  : 0/0
  2958 ;;		Unchanged: 0/0
  2959 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2960 ;;      Params:         5       0       0       0
  2961 ;;      Locals:         0       5       0       0
  2962 ;;      Temps:          0       4       0       0
  2963 ;;      Totals:         5       9       0       0
  2964 ;;Total ram usage:       14 bytes
  2965 ;; Hardware stack levels used:    1
  2966 ;; Hardware stack levels required when called:    2
  2967 ;; This function calls:
  2968 ;;		Nothing
  2969 ;; This function is called by:
  2970 ;;		_CANInitialize
  2971 ;; This function uses a non-reentrant model
  2972 ;;
  2973                           
  2974                           	psect	text6
  2975  0001AE                     __ptext6:
  2976                           	opt stack 0
  2977  0001AE                     _CANSetFilter:
  2978                           	opt stack 26
  2979                           
  2980                           ; BSR set to: 0
  2981                           ;incstack = 0
  2982                           ;CANSetFilter@numBuffer stored from wreg
  2983  0001AE  0100               	movlb	0	; () banked
  2984  0001B0  6FA7               	movwf	CANSetFilter@numBuffer& (0+255),b
  2985                           
  2986                           ;CANlib.h: 750: unsigned long tamp;
  2987                           ;CANlib.h: 752: if ((numBuffer ==CAN_FILTER_B1_F1) && (type == CAN_CONFIG_STD_MSG))
  2988  0001B2  0100               	movlb	0	; () banked
  2989  0001B4  51A7               	movf	CANSetFilter@numBuffer& (0+255),w,b
  2990  0001B6  0100               	movlb	0	; () banked
  2991  0001B8  A4D8               	btfss	status,2,c
  2992  0001BA  D053               	goto	l4088
  2993                           
  2994                           ; BSR set to: 0
  2995  0001BC  2822               	incf	CANSetFilter@type,w,c
  2996  0001BE  A4D8               	btfss	status,2,c
  2997  0001C0  D050               	goto	l4088
  2998                           
  2999                           ; BSR set to: 0
  3000                           ;CANlib.h: 753: {
  3001                           ;CANlib.h: 754: RXF0SIDLbits.EXIDEN = 0x00;
  3002  0001C2  010F               	movlb	15	; () banked
  3003  0001C4  9701               	bcf	1,3,b	;volatile
  3004                           
  3005                           ; BSR set to: 15
  3006                           ;CANlib.h: 756: tamp = (filter >> 3);
  3007  0001C6  C01E  F0A3         	movff	CANSetFilter@filter,??_CANSetFilter
  3008  0001CA  C01F  F0A4         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  3009  0001CE  C020  F0A5         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  3010  0001D2  C021  F0A6         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  3011  0001D6  0E04               	movlw	4
  3012  0001D8  D006               	goto	u4980
  3013  0001DA                     u4985:
  3014  0001DA  0100               	movlb	0	; () banked
  3015  0001DC  90D8               	bcf	status,0,c
  3016  0001DE  33A6               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  3017  0001E0  33A5               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  3018  0001E2  33A4               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  3019  0001E4  33A3               	rrcf	??_CANSetFilter& (0+255),f,b
  3020  0001E6                     u4980:
  3021  0001E6  2EE8               	decfsz	wreg,f,c
  3022  0001E8  D7F8               	goto	u4985
  3023  0001EA  C0A3  F0A8         	movff	??_CANSetFilter,CANSetFilter@tamp
  3024  0001EE  C0A4  F0A9         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  3025  0001F2  C0A5  F0AA         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  3026  0001F6  C0A6  F0AB         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  3027                           
  3028                           ; BSR set to: 0
  3029                           ;CANlib.h: 757: tamp = tamp & 0x000000FF;
  3030  0001FA  0100               	movlb	0	; () banked
  3031  0001FC  51A8               	movf	CANSetFilter@tamp& (0+255),w,b
  3032  0001FE  0100               	movlb	0	; () banked
  3033  000200  6FA8               	movwf	CANSetFilter@tamp& (0+255),b
  3034  000202  6BA9               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  3035  000204  6BAA               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  3036  000206  6BAB               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  3037                           
  3038                           ; BSR set to: 0
  3039                           ;CANlib.h: 758: RXF0SIDH = (unsigned char) tamp;
  3040  000208  C0A8  FF00         	movff	CANSetFilter@tamp,3840	;volatile
  3041                           
  3042                           ; BSR set to: 0
  3043                           ;CANlib.h: 760: tamp = filter & 0x00000007;
  3044  00020C  0E07               	movlw	7
  3045  00020E  141E               	andwf	CANSetFilter@filter,w,c
  3046  000210  0100               	movlb	0	; () banked
  3047  000212  6FA8               	movwf	CANSetFilter@tamp& (0+255),b
  3048  000214  0E00               	movlw	0
  3049  000216  141F               	andwf	CANSetFilter@filter+1,w,c
  3050  000218  0100               	movlb	0	; () banked
  3051  00021A  6FA9               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  3052  00021C  0E00               	movlw	0
  3053  00021E  1420               	andwf	CANSetFilter@filter+2,w,c
  3054  000220  0100               	movlb	0	; () banked
  3055  000222  6FAA               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  3056  000224  0E00               	movlw	0
  3057  000226  1421               	andwf	CANSetFilter@filter+3,w,c
  3058  000228  0100               	movlb	0	; () banked
  3059  00022A  6FAB               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  3060                           
  3061                           ; BSR set to: 0
  3062                           ;CANlib.h: 761: tamp = tamp << 5;
  3063  00022C  C0A8  F0A3         	movff	CANSetFilter@tamp,??_CANSetFilter
  3064  000230  C0A9  F0A4         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  3065  000234  C0AA  F0A5         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  3066  000238  C0AB  F0A6         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  3067  00023C  0E05               	movlw	5
  3068  00023E                     u4995:
  3069  00023E  90D8               	bcf	status,0,c
  3070  000240  0100               	movlb	0	; () banked
  3071  000242  37A3               	rlcf	??_CANSetFilter& (0+255),f,b
  3072  000244  37A4               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  3073  000246  37A5               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  3074  000248  37A6               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  3075  00024A  2EE8               	decfsz	wreg,f,c
  3076  00024C  D7F8               	goto	u4995
  3077  00024E  C0A3  F0A8         	movff	??_CANSetFilter,CANSetFilter@tamp
  3078  000252  C0A4  F0A9         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  3079  000256  C0A5  F0AA         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  3080  00025A  C0A6  F0AB         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  3081                           
  3082                           ; BSR set to: 0
  3083                           ;CANlib.h: 762: RXF0SIDL = (unsigned char) tamp;
  3084  00025E  C0A8  FF01         	movff	CANSetFilter@tamp,3841	;volatile
  3085  000262                     l4088:
  3086                           
  3087                           ; BSR set to: 0
  3088                           ;CANlib.h: 763: }
  3089                           ;CANlib.h: 765: if ((numBuffer ==CAN_FILTER_B1_F2) && (type == CAN_CONFIG_STD_MSG))
  3090  000262  0100               	movlb	0	; () banked
  3091  000264  05A7               	decf	CANSetFilter@numBuffer& (0+255),w,b
  3092  000266  A4D8               	btfss	status,2,c
  3093  000268  D053               	goto	l4106
  3094                           
  3095                           ; BSR set to: 0
  3096  00026A  2822               	incf	CANSetFilter@type,w,c
  3097  00026C  A4D8               	btfss	status,2,c
  3098  00026E  D050               	goto	l4106
  3099                           
  3100                           ; BSR set to: 0
  3101                           ;CANlib.h: 766: {
  3102                           ;CANlib.h: 767: RXF1SIDLbits.EXIDEN = 0x00;
  3103  000270  010F               	movlb	15	; () banked
  3104  000272  9705               	bcf	5,3,b	;volatile
  3105                           
  3106                           ; BSR set to: 15
  3107                           ;CANlib.h: 769: tamp = (filter >> 3);
  3108  000274  C01E  F0A3         	movff	CANSetFilter@filter,??_CANSetFilter
  3109  000278  C01F  F0A4         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  3110  00027C  C020  F0A5         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  3111  000280  C021  F0A6         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  3112  000284  0E04               	movlw	4
  3113  000286  D006               	goto	u5020
  3114  000288                     u5025:
  3115  000288  0100               	movlb	0	; () banked
  3116  00028A  90D8               	bcf	status,0,c
  3117  00028C  33A6               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  3118  00028E  33A5               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  3119  000290  33A4               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  3120  000292  33A3               	rrcf	??_CANSetFilter& (0+255),f,b
  3121  000294                     u5020:
  3122  000294  2EE8               	decfsz	wreg,f,c
  3123  000296  D7F8               	goto	u5025
  3124  000298  C0A3  F0A8         	movff	??_CANSetFilter,CANSetFilter@tamp
  3125  00029C  C0A4  F0A9         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  3126  0002A0  C0A5  F0AA         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  3127  0002A4  C0A6  F0AB         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  3128                           
  3129                           ; BSR set to: 0
  3130                           ;CANlib.h: 770: tamp = tamp & 0x000000FF;
  3131  0002A8  0100               	movlb	0	; () banked
  3132  0002AA  51A8               	movf	CANSetFilter@tamp& (0+255),w,b
  3133  0002AC  0100               	movlb	0	; () banked
  3134  0002AE  6FA8               	movwf	CANSetFilter@tamp& (0+255),b
  3135  0002B0  6BA9               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  3136  0002B2  6BAA               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  3137  0002B4  6BAB               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  3138                           
  3139                           ; BSR set to: 0
  3140                           ;CANlib.h: 771: RXF1SIDH = (unsigned char) tamp;
  3141  0002B6  C0A8  FF04         	movff	CANSetFilter@tamp,3844	;volatile
  3142                           
  3143                           ; BSR set to: 0
  3144                           ;CANlib.h: 773: tamp = filter & 0x00000007;
  3145  0002BA  0E07               	movlw	7
  3146  0002BC  141E               	andwf	CANSetFilter@filter,w,c
  3147  0002BE  0100               	movlb	0	; () banked
  3148  0002C0  6FA8               	movwf	CANSetFilter@tamp& (0+255),b
  3149  0002C2  0E00               	movlw	0
  3150  0002C4  141F               	andwf	CANSetFilter@filter+1,w,c
  3151  0002C6  0100               	movlb	0	; () banked
  3152  0002C8  6FA9               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  3153  0002CA  0E00               	movlw	0
  3154  0002CC  1420               	andwf	CANSetFilter@filter+2,w,c
  3155  0002CE  0100               	movlb	0	; () banked
  3156  0002D0  6FAA               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  3157  0002D2  0E00               	movlw	0
  3158  0002D4  1421               	andwf	CANSetFilter@filter+3,w,c
  3159  0002D6  0100               	movlb	0	; () banked
  3160  0002D8  6FAB               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  3161                           
  3162                           ; BSR set to: 0
  3163                           ;CANlib.h: 774: tamp = tamp << 5;
  3164  0002DA  C0A8  F0A3         	movff	CANSetFilter@tamp,??_CANSetFilter
  3165  0002DE  C0A9  F0A4         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  3166  0002E2  C0AA  F0A5         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  3167  0002E6  C0AB  F0A6         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  3168  0002EA  0E05               	movlw	5
  3169  0002EC                     u5035:
  3170  0002EC  90D8               	bcf	status,0,c
  3171  0002EE  0100               	movlb	0	; () banked
  3172  0002F0  37A3               	rlcf	??_CANSetFilter& (0+255),f,b
  3173  0002F2  37A4               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  3174  0002F4  37A5               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  3175  0002F6  37A6               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  3176  0002F8  2EE8               	decfsz	wreg,f,c
  3177  0002FA  D7F8               	goto	u5035
  3178  0002FC  C0A3  F0A8         	movff	??_CANSetFilter,CANSetFilter@tamp
  3179  000300  C0A4  F0A9         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  3180  000304  C0A5  F0AA         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  3181  000308  C0A6  F0AB         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  3182                           
  3183                           ; BSR set to: 0
  3184                           ;CANlib.h: 775: RXF1SIDL = (unsigned char) tamp;
  3185  00030C  C0A8  FF05         	movff	CANSetFilter@tamp,3845	;volatile
  3186  000310                     l4106:
  3187                           
  3188                           ; BSR set to: 0
  3189                           ;CANlib.h: 776: }
  3190                           ;CANlib.h: 778: if ((numBuffer ==CAN_FILTER_B2_F1) && (type == CAN_CONFIG_STD_MSG))
  3191  000310  0E02               	movlw	2
  3192  000312  0100               	movlb	0	; () banked
  3193  000314  19A7               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  3194  000316  A4D8               	btfss	status,2,c
  3195  000318  D053               	goto	l4124
  3196                           
  3197                           ; BSR set to: 0
  3198  00031A  2822               	incf	CANSetFilter@type,w,c
  3199  00031C  A4D8               	btfss	status,2,c
  3200  00031E  D050               	goto	l4124
  3201                           
  3202                           ; BSR set to: 0
  3203                           ;CANlib.h: 779: {
  3204                           ;CANlib.h: 780: RXF2SIDLbits.EXIDEN = 0x00;
  3205  000320  010F               	movlb	15	; () banked
  3206  000322  9709               	bcf	9,3,b	;volatile
  3207                           
  3208                           ; BSR set to: 15
  3209                           ;CANlib.h: 782: tamp = (filter >> 3);
  3210  000324  C01E  F0A3         	movff	CANSetFilter@filter,??_CANSetFilter
  3211  000328  C01F  F0A4         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  3212  00032C  C020  F0A5         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  3213  000330  C021  F0A6         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  3214  000334  0E04               	movlw	4
  3215  000336  D006               	goto	u5060
  3216  000338                     u5065:
  3217  000338  0100               	movlb	0	; () banked
  3218  00033A  90D8               	bcf	status,0,c
  3219  00033C  33A6               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  3220  00033E  33A5               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  3221  000340  33A4               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  3222  000342  33A3               	rrcf	??_CANSetFilter& (0+255),f,b
  3223  000344                     u5060:
  3224  000344  2EE8               	decfsz	wreg,f,c
  3225  000346  D7F8               	goto	u5065
  3226  000348  C0A3  F0A8         	movff	??_CANSetFilter,CANSetFilter@tamp
  3227  00034C  C0A4  F0A9         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  3228  000350  C0A5  F0AA         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  3229  000354  C0A6  F0AB         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  3230                           
  3231                           ; BSR set to: 0
  3232                           ;CANlib.h: 783: tamp = tamp & 0x000000FF;
  3233  000358  0100               	movlb	0	; () banked
  3234  00035A  51A8               	movf	CANSetFilter@tamp& (0+255),w,b
  3235  00035C  0100               	movlb	0	; () banked
  3236  00035E  6FA8               	movwf	CANSetFilter@tamp& (0+255),b
  3237  000360  6BA9               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  3238  000362  6BAA               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  3239  000364  6BAB               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  3240                           
  3241                           ; BSR set to: 0
  3242                           ;CANlib.h: 784: RXF2SIDH = (unsigned char) tamp;
  3243  000366  C0A8  FF08         	movff	CANSetFilter@tamp,3848	;volatile
  3244                           
  3245                           ; BSR set to: 0
  3246                           ;CANlib.h: 786: tamp = filter & 0x00000007;
  3247  00036A  0E07               	movlw	7
  3248  00036C  141E               	andwf	CANSetFilter@filter,w,c
  3249  00036E  0100               	movlb	0	; () banked
  3250  000370  6FA8               	movwf	CANSetFilter@tamp& (0+255),b
  3251  000372  0E00               	movlw	0
  3252  000374  141F               	andwf	CANSetFilter@filter+1,w,c
  3253  000376  0100               	movlb	0	; () banked
  3254  000378  6FA9               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  3255  00037A  0E00               	movlw	0
  3256  00037C  1420               	andwf	CANSetFilter@filter+2,w,c
  3257  00037E  0100               	movlb	0	; () banked
  3258  000380  6FAA               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  3259  000382  0E00               	movlw	0
  3260  000384  1421               	andwf	CANSetFilter@filter+3,w,c
  3261  000386  0100               	movlb	0	; () banked
  3262  000388  6FAB               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  3263                           
  3264                           ; BSR set to: 0
  3265                           ;CANlib.h: 787: tamp = tamp << 5;
  3266  00038A  C0A8  F0A3         	movff	CANSetFilter@tamp,??_CANSetFilter
  3267  00038E  C0A9  F0A4         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  3268  000392  C0AA  F0A5         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  3269  000396  C0AB  F0A6         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  3270  00039A  0E05               	movlw	5
  3271  00039C                     u5075:
  3272  00039C  90D8               	bcf	status,0,c
  3273  00039E  0100               	movlb	0	; () banked
  3274  0003A0  37A3               	rlcf	??_CANSetFilter& (0+255),f,b
  3275  0003A2  37A4               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  3276  0003A4  37A5               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  3277  0003A6  37A6               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  3278  0003A8  2EE8               	decfsz	wreg,f,c
  3279  0003AA  D7F8               	goto	u5075
  3280  0003AC  C0A3  F0A8         	movff	??_CANSetFilter,CANSetFilter@tamp
  3281  0003B0  C0A4  F0A9         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  3282  0003B4  C0A5  F0AA         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  3283  0003B8  C0A6  F0AB         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  3284                           
  3285                           ; BSR set to: 0
  3286                           ;CANlib.h: 788: RXF2SIDL = (unsigned char) tamp;
  3287  0003BC  C0A8  FF09         	movff	CANSetFilter@tamp,3849	;volatile
  3288  0003C0                     l4124:
  3289                           
  3290                           ; BSR set to: 0
  3291                           ;CANlib.h: 789: }
  3292                           ;CANlib.h: 791: if ((numBuffer ==CAN_FILTER_B2_F2) && (type == CAN_CONFIG_STD_MSG))
  3293  0003C0  0E03               	movlw	3
  3294  0003C2  0100               	movlb	0	; () banked
  3295  0003C4  19A7               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  3296  0003C6  A4D8               	btfss	status,2,c
  3297  0003C8  D053               	goto	l4142
  3298                           
  3299                           ; BSR set to: 0
  3300  0003CA  2822               	incf	CANSetFilter@type,w,c
  3301  0003CC  A4D8               	btfss	status,2,c
  3302  0003CE  D050               	goto	l4142
  3303                           
  3304                           ; BSR set to: 0
  3305                           ;CANlib.h: 792: {
  3306                           ;CANlib.h: 793: RXF3SIDLbits.EXIDEN = 0x00;
  3307  0003D0  010F               	movlb	15	; () banked
  3308  0003D2  970D               	bcf	13,3,b	;volatile
  3309                           
  3310                           ; BSR set to: 15
  3311                           ;CANlib.h: 795: tamp = (filter >> 3);
  3312  0003D4  C01E  F0A3         	movff	CANSetFilter@filter,??_CANSetFilter
  3313  0003D8  C01F  F0A4         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  3314  0003DC  C020  F0A5         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  3315  0003E0  C021  F0A6         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  3316  0003E4  0E04               	movlw	4
  3317  0003E6  D006               	goto	u5100
  3318  0003E8                     u5105:
  3319  0003E8  0100               	movlb	0	; () banked
  3320  0003EA  90D8               	bcf	status,0,c
  3321  0003EC  33A6               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  3322  0003EE  33A5               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  3323  0003F0  33A4               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  3324  0003F2  33A3               	rrcf	??_CANSetFilter& (0+255),f,b
  3325  0003F4                     u5100:
  3326  0003F4  2EE8               	decfsz	wreg,f,c
  3327  0003F6  D7F8               	goto	u5105
  3328  0003F8  C0A3  F0A8         	movff	??_CANSetFilter,CANSetFilter@tamp
  3329  0003FC  C0A4  F0A9         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  3330  000400  C0A5  F0AA         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  3331  000404  C0A6  F0AB         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  3332                           
  3333                           ; BSR set to: 0
  3334                           ;CANlib.h: 796: tamp = tamp & 0x000000FF;
  3335  000408  0100               	movlb	0	; () banked
  3336  00040A  51A8               	movf	CANSetFilter@tamp& (0+255),w,b
  3337  00040C  0100               	movlb	0	; () banked
  3338  00040E  6FA8               	movwf	CANSetFilter@tamp& (0+255),b
  3339  000410  6BA9               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  3340  000412  6BAA               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  3341  000414  6BAB               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  3342                           
  3343                           ; BSR set to: 0
  3344                           ;CANlib.h: 797: RXF3SIDH = (unsigned char) tamp;
  3345  000416  C0A8  FF0C         	movff	CANSetFilter@tamp,3852	;volatile
  3346                           
  3347                           ; BSR set to: 0
  3348                           ;CANlib.h: 799: tamp = filter & 0x00000007;
  3349  00041A  0E07               	movlw	7
  3350  00041C  141E               	andwf	CANSetFilter@filter,w,c
  3351  00041E  0100               	movlb	0	; () banked
  3352  000420  6FA8               	movwf	CANSetFilter@tamp& (0+255),b
  3353  000422  0E00               	movlw	0
  3354  000424  141F               	andwf	CANSetFilter@filter+1,w,c
  3355  000426  0100               	movlb	0	; () banked
  3356  000428  6FA9               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  3357  00042A  0E00               	movlw	0
  3358  00042C  1420               	andwf	CANSetFilter@filter+2,w,c
  3359  00042E  0100               	movlb	0	; () banked
  3360  000430  6FAA               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  3361  000432  0E00               	movlw	0
  3362  000434  1421               	andwf	CANSetFilter@filter+3,w,c
  3363  000436  0100               	movlb	0	; () banked
  3364  000438  6FAB               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  3365                           
  3366                           ; BSR set to: 0
  3367                           ;CANlib.h: 800: tamp = tamp << 5;
  3368  00043A  C0A8  F0A3         	movff	CANSetFilter@tamp,??_CANSetFilter
  3369  00043E  C0A9  F0A4         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  3370  000442  C0AA  F0A5         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  3371  000446  C0AB  F0A6         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  3372  00044A  0E05               	movlw	5
  3373  00044C                     u5115:
  3374  00044C  90D8               	bcf	status,0,c
  3375  00044E  0100               	movlb	0	; () banked
  3376  000450  37A3               	rlcf	??_CANSetFilter& (0+255),f,b
  3377  000452  37A4               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  3378  000454  37A5               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  3379  000456  37A6               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  3380  000458  2EE8               	decfsz	wreg,f,c
  3381  00045A  D7F8               	goto	u5115
  3382  00045C  C0A3  F0A8         	movff	??_CANSetFilter,CANSetFilter@tamp
  3383  000460  C0A4  F0A9         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  3384  000464  C0A5  F0AA         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  3385  000468  C0A6  F0AB         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  3386                           
  3387                           ; BSR set to: 0
  3388                           ;CANlib.h: 801: RXF3SIDL = (unsigned char) tamp;
  3389  00046C  C0A8  FF0D         	movff	CANSetFilter@tamp,3853	;volatile
  3390  000470                     l4142:
  3391                           
  3392                           ; BSR set to: 0
  3393                           ;CANlib.h: 802: }
  3394                           ;CANlib.h: 804: if ((numBuffer ==CAN_FILTER_B2_F3) && (type == CAN_CONFIG_STD_MSG))
  3395  000470  0E04               	movlw	4
  3396  000472  0100               	movlb	0	; () banked
  3397  000474  19A7               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  3398  000476  A4D8               	btfss	status,2,c
  3399  000478  D053               	goto	l4160
  3400                           
  3401                           ; BSR set to: 0
  3402  00047A  2822               	incf	CANSetFilter@type,w,c
  3403  00047C  A4D8               	btfss	status,2,c
  3404  00047E  D050               	goto	l4160
  3405                           
  3406                           ; BSR set to: 0
  3407                           ;CANlib.h: 805: {
  3408                           ;CANlib.h: 806: RXF4SIDLbits.EXIDEN = 0x00;
  3409  000480  010F               	movlb	15	; () banked
  3410  000482  9711               	bcf	17,3,b	;volatile
  3411                           
  3412                           ; BSR set to: 15
  3413                           ;CANlib.h: 808: tamp = (filter >> 3);
  3414  000484  C01E  F0A3         	movff	CANSetFilter@filter,??_CANSetFilter
  3415  000488  C01F  F0A4         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  3416  00048C  C020  F0A5         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  3417  000490  C021  F0A6         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  3418  000494  0E04               	movlw	4
  3419  000496  D006               	goto	u5140
  3420  000498                     u5145:
  3421  000498  0100               	movlb	0	; () banked
  3422  00049A  90D8               	bcf	status,0,c
  3423  00049C  33A6               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  3424  00049E  33A5               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  3425  0004A0  33A4               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  3426  0004A2  33A3               	rrcf	??_CANSetFilter& (0+255),f,b
  3427  0004A4                     u5140:
  3428  0004A4  2EE8               	decfsz	wreg,f,c
  3429  0004A6  D7F8               	goto	u5145
  3430  0004A8  C0A3  F0A8         	movff	??_CANSetFilter,CANSetFilter@tamp
  3431  0004AC  C0A4  F0A9         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  3432  0004B0  C0A5  F0AA         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  3433  0004B4  C0A6  F0AB         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  3434                           
  3435                           ; BSR set to: 0
  3436                           ;CANlib.h: 809: tamp = tamp & 0x000000FF;
  3437  0004B8  0100               	movlb	0	; () banked
  3438  0004BA  51A8               	movf	CANSetFilter@tamp& (0+255),w,b
  3439  0004BC  0100               	movlb	0	; () banked
  3440  0004BE  6FA8               	movwf	CANSetFilter@tamp& (0+255),b
  3441  0004C0  6BA9               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  3442  0004C2  6BAA               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  3443  0004C4  6BAB               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  3444                           
  3445                           ; BSR set to: 0
  3446                           ;CANlib.h: 810: RXF4SIDH = (unsigned char) tamp;
  3447  0004C6  C0A8  FF10         	movff	CANSetFilter@tamp,3856	;volatile
  3448                           
  3449                           ; BSR set to: 0
  3450                           ;CANlib.h: 812: tamp = filter & 0x00000007;
  3451  0004CA  0E07               	movlw	7
  3452  0004CC  141E               	andwf	CANSetFilter@filter,w,c
  3453  0004CE  0100               	movlb	0	; () banked
  3454  0004D0  6FA8               	movwf	CANSetFilter@tamp& (0+255),b
  3455  0004D2  0E00               	movlw	0
  3456  0004D4  141F               	andwf	CANSetFilter@filter+1,w,c
  3457  0004D6  0100               	movlb	0	; () banked
  3458  0004D8  6FA9               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  3459  0004DA  0E00               	movlw	0
  3460  0004DC  1420               	andwf	CANSetFilter@filter+2,w,c
  3461  0004DE  0100               	movlb	0	; () banked
  3462  0004E0  6FAA               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  3463  0004E2  0E00               	movlw	0
  3464  0004E4  1421               	andwf	CANSetFilter@filter+3,w,c
  3465  0004E6  0100               	movlb	0	; () banked
  3466  0004E8  6FAB               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  3467                           
  3468                           ; BSR set to: 0
  3469                           ;CANlib.h: 813: tamp = tamp << 5;
  3470  0004EA  C0A8  F0A3         	movff	CANSetFilter@tamp,??_CANSetFilter
  3471  0004EE  C0A9  F0A4         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  3472  0004F2  C0AA  F0A5         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  3473  0004F6  C0AB  F0A6         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  3474  0004FA  0E05               	movlw	5
  3475  0004FC                     u5155:
  3476  0004FC  90D8               	bcf	status,0,c
  3477  0004FE  0100               	movlb	0	; () banked
  3478  000500  37A3               	rlcf	??_CANSetFilter& (0+255),f,b
  3479  000502  37A4               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  3480  000504  37A5               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  3481  000506  37A6               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  3482  000508  2EE8               	decfsz	wreg,f,c
  3483  00050A  D7F8               	goto	u5155
  3484  00050C  C0A3  F0A8         	movff	??_CANSetFilter,CANSetFilter@tamp
  3485  000510  C0A4  F0A9         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  3486  000514  C0A5  F0AA         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  3487  000518  C0A6  F0AB         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  3488                           
  3489                           ; BSR set to: 0
  3490                           ;CANlib.h: 814: RXF4SIDL = (unsigned char) tamp;
  3491  00051C  C0A8  FF11         	movff	CANSetFilter@tamp,3857	;volatile
  3492  000520                     l4160:
  3493                           
  3494                           ; BSR set to: 0
  3495                           ;CANlib.h: 815: }
  3496                           ;CANlib.h: 817: if ((numBuffer ==CAN_FILTER_B2_F4) && (type == CAN_CONFIG_STD_MSG))
  3497  000520  0E05               	movlw	5
  3498  000522  0100               	movlb	0	; () banked
  3499  000524  19A7               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  3500  000526  A4D8               	btfss	status,2,c
  3501  000528  D053               	goto	l4178
  3502                           
  3503                           ; BSR set to: 0
  3504  00052A  2822               	incf	CANSetFilter@type,w,c
  3505  00052C  A4D8               	btfss	status,2,c
  3506  00052E  D050               	goto	l4178
  3507                           
  3508                           ; BSR set to: 0
  3509                           ;CANlib.h: 818: {
  3510                           ;CANlib.h: 819: RXF5SIDLbits.EXIDEN = 0x00;
  3511  000530  010F               	movlb	15	; () banked
  3512  000532  9715               	bcf	21,3,b	;volatile
  3513                           
  3514                           ; BSR set to: 15
  3515                           ;CANlib.h: 821: tamp = (filter >> 3);
  3516  000534  C01E  F0A3         	movff	CANSetFilter@filter,??_CANSetFilter
  3517  000538  C01F  F0A4         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  3518  00053C  C020  F0A5         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  3519  000540  C021  F0A6         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  3520  000544  0E04               	movlw	4
  3521  000546  D006               	goto	u5180
  3522  000548                     u5185:
  3523  000548  0100               	movlb	0	; () banked
  3524  00054A  90D8               	bcf	status,0,c
  3525  00054C  33A6               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  3526  00054E  33A5               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  3527  000550  33A4               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  3528  000552  33A3               	rrcf	??_CANSetFilter& (0+255),f,b
  3529  000554                     u5180:
  3530  000554  2EE8               	decfsz	wreg,f,c
  3531  000556  D7F8               	goto	u5185
  3532  000558  C0A3  F0A8         	movff	??_CANSetFilter,CANSetFilter@tamp
  3533  00055C  C0A4  F0A9         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  3534  000560  C0A5  F0AA         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  3535  000564  C0A6  F0AB         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  3536                           
  3537                           ; BSR set to: 0
  3538                           ;CANlib.h: 822: tamp = tamp & 0x000000FF;
  3539  000568  0100               	movlb	0	; () banked
  3540  00056A  51A8               	movf	CANSetFilter@tamp& (0+255),w,b
  3541  00056C  0100               	movlb	0	; () banked
  3542  00056E  6FA8               	movwf	CANSetFilter@tamp& (0+255),b
  3543  000570  6BA9               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  3544  000572  6BAA               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  3545  000574  6BAB               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  3546                           
  3547                           ; BSR set to: 0
  3548                           ;CANlib.h: 823: RXF5SIDH = (unsigned char) tamp;
  3549  000576  C0A8  FF14         	movff	CANSetFilter@tamp,3860	;volatile
  3550                           
  3551                           ; BSR set to: 0
  3552                           ;CANlib.h: 825: tamp = filter & 0x00000007;
  3553  00057A  0E07               	movlw	7
  3554  00057C  141E               	andwf	CANSetFilter@filter,w,c
  3555  00057E  0100               	movlb	0	; () banked
  3556  000580  6FA8               	movwf	CANSetFilter@tamp& (0+255),b
  3557  000582  0E00               	movlw	0
  3558  000584  141F               	andwf	CANSetFilter@filter+1,w,c
  3559  000586  0100               	movlb	0	; () banked
  3560  000588  6FA9               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  3561  00058A  0E00               	movlw	0
  3562  00058C  1420               	andwf	CANSetFilter@filter+2,w,c
  3563  00058E  0100               	movlb	0	; () banked
  3564  000590  6FAA               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  3565  000592  0E00               	movlw	0
  3566  000594  1421               	andwf	CANSetFilter@filter+3,w,c
  3567  000596  0100               	movlb	0	; () banked
  3568  000598  6FAB               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  3569                           
  3570                           ; BSR set to: 0
  3571                           ;CANlib.h: 826: tamp = tamp << 5;
  3572  00059A  C0A8  F0A3         	movff	CANSetFilter@tamp,??_CANSetFilter
  3573  00059E  C0A9  F0A4         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  3574  0005A2  C0AA  F0A5         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  3575  0005A6  C0AB  F0A6         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  3576  0005AA  0E05               	movlw	5
  3577  0005AC                     u5195:
  3578  0005AC  90D8               	bcf	status,0,c
  3579  0005AE  0100               	movlb	0	; () banked
  3580  0005B0  37A3               	rlcf	??_CANSetFilter& (0+255),f,b
  3581  0005B2  37A4               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  3582  0005B4  37A5               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  3583  0005B6  37A6               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  3584  0005B8  2EE8               	decfsz	wreg,f,c
  3585  0005BA  D7F8               	goto	u5195
  3586  0005BC  C0A3  F0A8         	movff	??_CANSetFilter,CANSetFilter@tamp
  3587  0005C0  C0A4  F0A9         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  3588  0005C4  C0A5  F0AA         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  3589  0005C8  C0A6  F0AB         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  3590                           
  3591                           ; BSR set to: 0
  3592                           ;CANlib.h: 827: RXF5SIDL = (unsigned char) tamp;
  3593  0005CC  C0A8  FF15         	movff	CANSetFilter@tamp,3861	;volatile
  3594  0005D0                     l4178:
  3595                           
  3596                           ; BSR set to: 0
  3597                           ;CANlib.h: 828: }
  3598                           ;CANlib.h: 831: if ((numBuffer ==CAN_FILTER_B1_F1) && (type == CAN_CONFIG_XTD_MSG))
  3599  0005D0  0100               	movlb	0	; () banked
  3600  0005D2  51A7               	movf	CANSetFilter@numBuffer& (0+255),w,b
  3601  0005D4  0100               	movlb	0	; () banked
  3602  0005D6  A4D8               	btfss	status,2,c
  3603  0005D8  D07E               	goto	l4212
  3604                           
  3605                           ; BSR set to: 0
  3606  0005DA  0EF7               	movlw	247
  3607  0005DC  1822               	xorwf	CANSetFilter@type,w,c
  3608  0005DE  A4D8               	btfss	status,2,c
  3609  0005E0  D07A               	goto	l4212
  3610                           
  3611                           ; BSR set to: 0
  3612                           ;CANlib.h: 832: {
  3613                           ;CANlib.h: 833: RXF0SIDLbits.EXIDEN = 0x01;
  3614  0005E2  010F               	movlb	15	; () banked
  3615  0005E4  8701               	bsf	1,3,b	;volatile
  3616                           
  3617                           ; BSR set to: 15
  3618                           ;CANlib.h: 835: tamp = filter & 0x000000FF;
  3619  0005E6  501E               	movf	CANSetFilter@filter,w,c
  3620  0005E8  0100               	movlb	0	; () banked
  3621  0005EA  6FA8               	movwf	CANSetFilter@tamp& (0+255),b
  3622  0005EC  6BA9               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  3623  0005EE  6BAA               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  3624  0005F0  6BAB               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  3625                           
  3626                           ; BSR set to: 0
  3627                           ;CANlib.h: 836: RXF0EIDL = (unsigned char) tamp;
  3628  0005F2  C0A8  FF03         	movff	CANSetFilter@tamp,3843	;volatile
  3629                           
  3630                           ; BSR set to: 0
  3631                           ;CANlib.h: 838: tamp = filter & 0x0000FF00;
  3632  0005F6  0E00               	movlw	0
  3633  0005F8  141E               	andwf	CANSetFilter@filter,w,c
  3634  0005FA  0100               	movlb	0	; () banked
  3635  0005FC  6FA8               	movwf	CANSetFilter@tamp& (0+255),b
  3636  0005FE  0EFF               	movlw	255
  3637  000600  141F               	andwf	CANSetFilter@filter+1,w,c
  3638  000602  0100               	movlb	0	; () banked
  3639  000604  6FA9               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  3640  000606  0E00               	movlw	0
  3641  000608  1420               	andwf	CANSetFilter@filter+2,w,c
  3642  00060A  0100               	movlb	0	; () banked
  3643  00060C  6FAA               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  3644  00060E  0E00               	movlw	0
  3645  000610  1421               	andwf	CANSetFilter@filter+3,w,c
  3646  000612  0100               	movlb	0	; () banked
  3647  000614  6FAB               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  3648                           
  3649                           ; BSR set to: 0
  3650                           ;CANlib.h: 839: tamp = tamp >> 8;
  3651  000616  C0A8  F0A3         	movff	CANSetFilter@tamp,??_CANSetFilter
  3652  00061A  C0A9  F0A4         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  3653  00061E  C0AA  F0A5         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  3654  000622  C0AB  F0A6         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  3655  000626  C0A4  F0A3         	movff	??_CANSetFilter+1,??_CANSetFilter
  3656  00062A  C0A5  F0A4         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  3657  00062E  C0A6  F0A5         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  3658  000632  0100               	movlb	0	; () banked
  3659  000634  6BA6               	clrf	(??_CANSetFilter+3)& (0+255),b
  3660  000636  C0A3  F0A8         	movff	??_CANSetFilter,CANSetFilter@tamp
  3661  00063A  C0A4  F0A9         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  3662  00063E  C0A5  F0AA         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  3663  000642  C0A6  F0AB         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  3664                           
  3665                           ; BSR set to: 0
  3666                           ;CANlib.h: 840: RXF0EIDH = (unsigned char) tamp;
  3667  000646  C0A8  FF02         	movff	CANSetFilter@tamp,3842	;volatile
  3668                           
  3669                           ; BSR set to: 0
  3670                           ;CANlib.h: 842: if (filter & 0x00010000)
  3671  00064A  A020               	btfss	CANSetFilter@filter+2,0,c
  3672  00064C  D003               	goto	l465
  3673                           
  3674                           ; BSR set to: 0
  3675                           ;CANlib.h: 843: RXF0SIDLbits.EID16 = 0x01;
  3676  00064E  010F               	movlb	15	; () banked
  3677  000650  8101               	bsf	1,0,b	;volatile
  3678  000652  D002               	goto	l466
  3679  000654                     l465:
  3680                           
  3681                           ; BSR set to: 0
  3682                           ;CANlib.h: 844: else
  3683                           ;CANlib.h: 845: RXF0SIDLbits.EID16 = 0x00;
  3684  000654  010F               	movlb	15	; () banked
  3685  000656  9101               	bcf	1,0,b	;volatile
  3686  000658                     l466:
  3687                           
  3688                           ; BSR set to: 15
  3689                           ;CANlib.h: 847: if (filter & 0x00020000)
  3690  000658  A220               	btfss	CANSetFilter@filter+2,1,c
  3691  00065A  D003               	goto	l467
  3692                           
  3693                           ; BSR set to: 15
  3694                           ;CANlib.h: 848: RXF0SIDLbits.EID17 = 0x01;
  3695  00065C  010F               	movlb	15	; () banked
  3696  00065E  8301               	bsf	1,1,b	;volatile
  3697  000660  D002               	goto	l468
  3698  000662                     l467:
  3699                           
  3700                           ; BSR set to: 15
  3701                           ;CANlib.h: 849: else
  3702                           ;CANlib.h: 850: RXF0SIDLbits.EID17 = 0x00;
  3703  000662  010F               	movlb	15	; () banked
  3704  000664  9301               	bcf	1,1,b	;volatile
  3705  000666                     l468:
  3706                           
  3707                           ; BSR set to: 15
  3708                           ;CANlib.h: 852: if (filter & 0x00040000)
  3709  000666  A420               	btfss	CANSetFilter@filter+2,2,c
  3710  000668  D003               	goto	l469
  3711                           
  3712                           ; BSR set to: 15
  3713                           ;CANlib.h: 853: RXF0SIDLbits.SID0 = 0x01;
  3714  00066A  010F               	movlb	15	; () banked
  3715  00066C  8B01               	bsf	1,5,b	;volatile
  3716  00066E  D002               	goto	l470
  3717  000670                     l469:
  3718                           
  3719                           ; BSR set to: 15
  3720                           ;CANlib.h: 854: else
  3721                           ;CANlib.h: 855: RXF0SIDLbits.SID0 = 0x00;
  3722  000670  010F               	movlb	15	; () banked
  3723  000672  9B01               	bcf	1,5,b	;volatile
  3724  000674                     l470:
  3725                           
  3726                           ; BSR set to: 15
  3727                           ;CANlib.h: 857: if (filter & 0x00080000)
  3728  000674  A620               	btfss	CANSetFilter@filter+2,3,c
  3729  000676  D003               	goto	l471
  3730                           
  3731                           ; BSR set to: 15
  3732                           ;CANlib.h: 858: RXF0SIDLbits.SID1 = 0x01;
  3733  000678  010F               	movlb	15	; () banked
  3734  00067A  8D01               	bsf	1,6,b	;volatile
  3735  00067C  D002               	goto	l472
  3736  00067E                     l471:
  3737                           
  3738                           ; BSR set to: 15
  3739                           ;CANlib.h: 859: else
  3740                           ;CANlib.h: 860: RXF0SIDLbits.SID1 = 0x00;
  3741  00067E  010F               	movlb	15	; () banked
  3742  000680  9D01               	bcf	1,6,b	;volatile
  3743  000682                     l472:
  3744                           
  3745                           ; BSR set to: 15
  3746                           ;CANlib.h: 862: if (filter & 0x00100000)
  3747  000682  A820               	btfss	CANSetFilter@filter+2,4,c
  3748  000684  D003               	goto	l473
  3749                           
  3750                           ; BSR set to: 15
  3751                           ;CANlib.h: 863: RXF0SIDLbits.SID2 = 0x01 ;
  3752  000686  010F               	movlb	15	; () banked
  3753  000688  8F01               	bsf	1,7,b	;volatile
  3754  00068A  D002               	goto	l4206
  3755  00068C                     l473:
  3756                           
  3757                           ; BSR set to: 15
  3758                           ;CANlib.h: 864: else
  3759                           ;CANlib.h: 865: RXF0SIDLbits.SID2 = 0x00 ;
  3760  00068C  010F               	movlb	15	; () banked
  3761  00068E  9F01               	bcf	1,7,b	;volatile
  3762  000690                     l4206:
  3763                           
  3764                           ; BSR set to: 15
  3765                           ;CANlib.h: 867: tamp = (filter >> 21);
  3766  000690  C01E  F0A3         	movff	CANSetFilter@filter,??_CANSetFilter
  3767  000694  C01F  F0A4         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  3768  000698  C020  F0A5         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  3769  00069C  C021  F0A6         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  3770  0006A0  0E16               	movlw	22
  3771  0006A2  D006               	goto	u5270
  3772  0006A4                     u5275:
  3773  0006A4  0100               	movlb	0	; () banked
  3774  0006A6  90D8               	bcf	status,0,c
  3775  0006A8  33A6               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  3776  0006AA  33A5               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  3777  0006AC  33A4               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  3778  0006AE  33A3               	rrcf	??_CANSetFilter& (0+255),f,b
  3779  0006B0                     u5270:
  3780  0006B0  2EE8               	decfsz	wreg,f,c
  3781  0006B2  D7F8               	goto	u5275
  3782  0006B4  C0A3  F0A8         	movff	??_CANSetFilter,CANSetFilter@tamp
  3783  0006B8  C0A4  F0A9         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  3784  0006BC  C0A5  F0AA         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  3785  0006C0  C0A6  F0AB         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  3786                           
  3787                           ; BSR set to: 0
  3788                           ;CANlib.h: 868: tamp = tamp & 0x000000FF;
  3789  0006C4  0100               	movlb	0	; () banked
  3790  0006C6  51A8               	movf	CANSetFilter@tamp& (0+255),w,b
  3791  0006C8  0100               	movlb	0	; () banked
  3792  0006CA  6FA8               	movwf	CANSetFilter@tamp& (0+255),b
  3793  0006CC  6BA9               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  3794  0006CE  6BAA               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  3795  0006D0  6BAB               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  3796                           
  3797                           ; BSR set to: 0
  3798                           ;CANlib.h: 869: RXF0SIDH = (unsigned char) tamp;
  3799  0006D2  C0A8  FF00         	movff	CANSetFilter@tamp,3840	;volatile
  3800  0006D6                     l4212:
  3801                           
  3802                           ; BSR set to: 0
  3803                           ;CANlib.h: 870: }
  3804                           ;CANlib.h: 872: if ((numBuffer ==CAN_FILTER_B1_F2) && (type == CAN_CONFIG_XTD_MSG))
  3805  0006D6  0100               	movlb	0	; () banked
  3806  0006D8  05A7               	decf	CANSetFilter@numBuffer& (0+255),w,b
  3807  0006DA  A4D8               	btfss	status,2,c
  3808  0006DC  D07E               	goto	l4246
  3809                           
  3810                           ; BSR set to: 0
  3811  0006DE  0EF7               	movlw	247
  3812  0006E0  1822               	xorwf	CANSetFilter@type,w,c
  3813  0006E2  A4D8               	btfss	status,2,c
  3814  0006E4  D07A               	goto	l4246
  3815                           
  3816                           ; BSR set to: 0
  3817                           ;CANlib.h: 873: {
  3818                           ;CANlib.h: 874: RXF1SIDLbits.EXIDEN = 0x01;
  3819  0006E6  010F               	movlb	15	; () banked
  3820  0006E8  8705               	bsf	5,3,b	;volatile
  3821                           
  3822                           ; BSR set to: 15
  3823                           ;CANlib.h: 876: tamp = filter & 0x000000FF;
  3824  0006EA  501E               	movf	CANSetFilter@filter,w,c
  3825  0006EC  0100               	movlb	0	; () banked
  3826  0006EE  6FA8               	movwf	CANSetFilter@tamp& (0+255),b
  3827  0006F0  6BA9               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  3828  0006F2  6BAA               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  3829  0006F4  6BAB               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  3830                           
  3831                           ; BSR set to: 0
  3832                           ;CANlib.h: 877: RXF1EIDL = (unsigned char) tamp;
  3833  0006F6  C0A8  FF07         	movff	CANSetFilter@tamp,3847	;volatile
  3834                           
  3835                           ; BSR set to: 0
  3836                           ;CANlib.h: 879: tamp = filter & 0x0000FF00;
  3837  0006FA  0E00               	movlw	0
  3838  0006FC  141E               	andwf	CANSetFilter@filter,w,c
  3839  0006FE  0100               	movlb	0	; () banked
  3840  000700  6FA8               	movwf	CANSetFilter@tamp& (0+255),b
  3841  000702  0EFF               	movlw	255
  3842  000704  141F               	andwf	CANSetFilter@filter+1,w,c
  3843  000706  0100               	movlb	0	; () banked
  3844  000708  6FA9               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  3845  00070A  0E00               	movlw	0
  3846  00070C  1420               	andwf	CANSetFilter@filter+2,w,c
  3847  00070E  0100               	movlb	0	; () banked
  3848  000710  6FAA               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  3849  000712  0E00               	movlw	0
  3850  000714  1421               	andwf	CANSetFilter@filter+3,w,c
  3851  000716  0100               	movlb	0	; () banked
  3852  000718  6FAB               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  3853                           
  3854                           ; BSR set to: 0
  3855                           ;CANlib.h: 880: tamp = tamp >> 8;
  3856  00071A  C0A8  F0A3         	movff	CANSetFilter@tamp,??_CANSetFilter
  3857  00071E  C0A9  F0A4         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  3858  000722  C0AA  F0A5         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  3859  000726  C0AB  F0A6         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  3860  00072A  C0A4  F0A3         	movff	??_CANSetFilter+1,??_CANSetFilter
  3861  00072E  C0A5  F0A4         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  3862  000732  C0A6  F0A5         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  3863  000736  0100               	movlb	0	; () banked
  3864  000738  6BA6               	clrf	(??_CANSetFilter+3)& (0+255),b
  3865  00073A  C0A3  F0A8         	movff	??_CANSetFilter,CANSetFilter@tamp
  3866  00073E  C0A4  F0A9         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  3867  000742  C0A5  F0AA         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  3868  000746  C0A6  F0AB         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  3869                           
  3870                           ; BSR set to: 0
  3871                           ;CANlib.h: 881: RXF1EIDH = (unsigned char) tamp;
  3872  00074A  C0A8  FF06         	movff	CANSetFilter@tamp,3846	;volatile
  3873                           
  3874                           ; BSR set to: 0
  3875                           ;CANlib.h: 883: if (filter & 0x00010000)
  3876  00074E  A020               	btfss	CANSetFilter@filter+2,0,c
  3877  000750  D003               	goto	l476
  3878                           
  3879                           ; BSR set to: 0
  3880                           ;CANlib.h: 884: RXF1SIDLbits.EID16 = 0x01;
  3881  000752  010F               	movlb	15	; () banked
  3882  000754  8105               	bsf	5,0,b	;volatile
  3883  000756  D002               	goto	l477
  3884  000758                     l476:
  3885                           
  3886                           ; BSR set to: 0
  3887                           ;CANlib.h: 885: else
  3888                           ;CANlib.h: 886: RXF1SIDLbits.EID16 = 0x00;
  3889  000758  010F               	movlb	15	; () banked
  3890  00075A  9105               	bcf	5,0,b	;volatile
  3891  00075C                     l477:
  3892                           
  3893                           ; BSR set to: 15
  3894                           ;CANlib.h: 888: if (filter & 0x00020000)
  3895  00075C  A220               	btfss	CANSetFilter@filter+2,1,c
  3896  00075E  D003               	goto	l478
  3897                           
  3898                           ; BSR set to: 15
  3899                           ;CANlib.h: 889: RXF1SIDLbits.EID17 = 0x01;
  3900  000760  010F               	movlb	15	; () banked
  3901  000762  8305               	bsf	5,1,b	;volatile
  3902  000764  D002               	goto	l479
  3903  000766                     l478:
  3904                           
  3905                           ; BSR set to: 15
  3906                           ;CANlib.h: 890: else
  3907                           ;CANlib.h: 891: RXF1SIDLbits.EID17 = 0x00;
  3908  000766  010F               	movlb	15	; () banked
  3909  000768  9305               	bcf	5,1,b	;volatile
  3910  00076A                     l479:
  3911                           
  3912                           ; BSR set to: 15
  3913                           ;CANlib.h: 893: if (filter & 0x00040000)
  3914  00076A  A420               	btfss	CANSetFilter@filter+2,2,c
  3915  00076C  D003               	goto	l480
  3916                           
  3917                           ; BSR set to: 15
  3918                           ;CANlib.h: 894: RXF1SIDLbits.SID0 = 0x01;
  3919  00076E  010F               	movlb	15	; () banked
  3920  000770  8B05               	bsf	5,5,b	;volatile
  3921  000772  D002               	goto	l481
  3922  000774                     l480:
  3923                           
  3924                           ; BSR set to: 15
  3925                           ;CANlib.h: 895: else
  3926                           ;CANlib.h: 896: RXF1SIDLbits.SID0 = 0x00;
  3927  000774  010F               	movlb	15	; () banked
  3928  000776  9B05               	bcf	5,5,b	;volatile
  3929  000778                     l481:
  3930                           
  3931                           ; BSR set to: 15
  3932                           ;CANlib.h: 898: if (filter & 0x00080000)
  3933  000778  A620               	btfss	CANSetFilter@filter+2,3,c
  3934  00077A  D003               	goto	l482
  3935                           
  3936                           ; BSR set to: 15
  3937                           ;CANlib.h: 899: RXF1SIDLbits.SID1 = 0x01;
  3938  00077C  010F               	movlb	15	; () banked
  3939  00077E  8D05               	bsf	5,6,b	;volatile
  3940  000780  D002               	goto	l483
  3941  000782                     l482:
  3942                           
  3943                           ; BSR set to: 15
  3944                           ;CANlib.h: 900: else
  3945                           ;CANlib.h: 901: RXF1SIDLbits.SID1 = 0x00;
  3946  000782  010F               	movlb	15	; () banked
  3947  000784  9D05               	bcf	5,6,b	;volatile
  3948  000786                     l483:
  3949                           
  3950                           ; BSR set to: 15
  3951                           ;CANlib.h: 903: if (filter & 0x00100000)
  3952  000786  A820               	btfss	CANSetFilter@filter+2,4,c
  3953  000788  D003               	goto	l484
  3954                           
  3955                           ; BSR set to: 15
  3956                           ;CANlib.h: 904: RXF1SIDLbits.SID2 = 0x01 ;
  3957  00078A  010F               	movlb	15	; () banked
  3958  00078C  8F05               	bsf	5,7,b	;volatile
  3959  00078E  D002               	goto	l4240
  3960  000790                     l484:
  3961                           
  3962                           ; BSR set to: 15
  3963                           ;CANlib.h: 905: else
  3964                           ;CANlib.h: 906: RXF1SIDLbits.SID2 = 0x00 ;
  3965  000790  010F               	movlb	15	; () banked
  3966  000792  9F05               	bcf	5,7,b	;volatile
  3967  000794                     l4240:
  3968                           
  3969                           ; BSR set to: 15
  3970                           ;CANlib.h: 908: tamp = (filter >> 21);
  3971  000794  C01E  F0A3         	movff	CANSetFilter@filter,??_CANSetFilter
  3972  000798  C01F  F0A4         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  3973  00079C  C020  F0A5         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  3974  0007A0  C021  F0A6         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  3975  0007A4  0E16               	movlw	22
  3976  0007A6  D006               	goto	u5350
  3977  0007A8                     u5355:
  3978  0007A8  0100               	movlb	0	; () banked
  3979  0007AA  90D8               	bcf	status,0,c
  3980  0007AC  33A6               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  3981  0007AE  33A5               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  3982  0007B0  33A4               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  3983  0007B2  33A3               	rrcf	??_CANSetFilter& (0+255),f,b
  3984  0007B4                     u5350:
  3985  0007B4  2EE8               	decfsz	wreg,f,c
  3986  0007B6  D7F8               	goto	u5355
  3987  0007B8  C0A3  F0A8         	movff	??_CANSetFilter,CANSetFilter@tamp
  3988  0007BC  C0A4  F0A9         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  3989  0007C0  C0A5  F0AA         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  3990  0007C4  C0A6  F0AB         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  3991                           
  3992                           ; BSR set to: 0
  3993                           ;CANlib.h: 909: tamp = tamp & 0x000000FF;
  3994  0007C8  0100               	movlb	0	; () banked
  3995  0007CA  51A8               	movf	CANSetFilter@tamp& (0+255),w,b
  3996  0007CC  0100               	movlb	0	; () banked
  3997  0007CE  6FA8               	movwf	CANSetFilter@tamp& (0+255),b
  3998  0007D0  6BA9               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  3999  0007D2  6BAA               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4000  0007D4  6BAB               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4001                           
  4002                           ; BSR set to: 0
  4003                           ;CANlib.h: 910: RXF1SIDH = (unsigned char) tamp;
  4004  0007D6  C0A8  FF04         	movff	CANSetFilter@tamp,3844	;volatile
  4005  0007DA                     l4246:
  4006                           
  4007                           ; BSR set to: 0
  4008                           ;CANlib.h: 911: }
  4009                           ;CANlib.h: 914: if ((numBuffer ==CAN_FILTER_B2_F1) && (type == CAN_CONFIG_XTD_MSG))
  4010  0007DA  0E02               	movlw	2
  4011  0007DC  0100               	movlb	0	; () banked
  4012  0007DE  19A7               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  4013  0007E0  A4D8               	btfss	status,2,c
  4014  0007E2  D07E               	goto	l4280
  4015                           
  4016                           ; BSR set to: 0
  4017  0007E4  0EF7               	movlw	247
  4018  0007E6  1822               	xorwf	CANSetFilter@type,w,c
  4019  0007E8  A4D8               	btfss	status,2,c
  4020  0007EA  D07A               	goto	l4280
  4021                           
  4022                           ; BSR set to: 0
  4023                           ;CANlib.h: 915: {
  4024                           ;CANlib.h: 916: RXF2SIDLbits.EXIDEN = 0x01;
  4025  0007EC  010F               	movlb	15	; () banked
  4026  0007EE  8709               	bsf	9,3,b	;volatile
  4027                           
  4028                           ; BSR set to: 15
  4029                           ;CANlib.h: 918: tamp = filter & 0x000000FF;
  4030  0007F0  501E               	movf	CANSetFilter@filter,w,c
  4031  0007F2  0100               	movlb	0	; () banked
  4032  0007F4  6FA8               	movwf	CANSetFilter@tamp& (0+255),b
  4033  0007F6  6BA9               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4034  0007F8  6BAA               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4035  0007FA  6BAB               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4036                           
  4037                           ; BSR set to: 0
  4038                           ;CANlib.h: 919: RXF2EIDL = (unsigned char) tamp;
  4039  0007FC  C0A8  FF0B         	movff	CANSetFilter@tamp,3851	;volatile
  4040                           
  4041                           ; BSR set to: 0
  4042                           ;CANlib.h: 921: tamp = filter & 0x0000FF00;
  4043  000800  0E00               	movlw	0
  4044  000802  141E               	andwf	CANSetFilter@filter,w,c
  4045  000804  0100               	movlb	0	; () banked
  4046  000806  6FA8               	movwf	CANSetFilter@tamp& (0+255),b
  4047  000808  0EFF               	movlw	255
  4048  00080A  141F               	andwf	CANSetFilter@filter+1,w,c
  4049  00080C  0100               	movlb	0	; () banked
  4050  00080E  6FA9               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  4051  000810  0E00               	movlw	0
  4052  000812  1420               	andwf	CANSetFilter@filter+2,w,c
  4053  000814  0100               	movlb	0	; () banked
  4054  000816  6FAA               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  4055  000818  0E00               	movlw	0
  4056  00081A  1421               	andwf	CANSetFilter@filter+3,w,c
  4057  00081C  0100               	movlb	0	; () banked
  4058  00081E  6FAB               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  4059                           
  4060                           ; BSR set to: 0
  4061                           ;CANlib.h: 922: tamp = tamp >> 8;
  4062  000820  C0A8  F0A3         	movff	CANSetFilter@tamp,??_CANSetFilter
  4063  000824  C0A9  F0A4         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  4064  000828  C0AA  F0A5         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  4065  00082C  C0AB  F0A6         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  4066  000830  C0A4  F0A3         	movff	??_CANSetFilter+1,??_CANSetFilter
  4067  000834  C0A5  F0A4         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  4068  000838  C0A6  F0A5         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  4069  00083C  0100               	movlb	0	; () banked
  4070  00083E  6BA6               	clrf	(??_CANSetFilter+3)& (0+255),b
  4071  000840  C0A3  F0A8         	movff	??_CANSetFilter,CANSetFilter@tamp
  4072  000844  C0A4  F0A9         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4073  000848  C0A5  F0AA         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4074  00084C  C0A6  F0AB         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4075                           
  4076                           ; BSR set to: 0
  4077                           ;CANlib.h: 923: RXF2EIDH = (unsigned char) tamp;
  4078  000850  C0A8  FF0A         	movff	CANSetFilter@tamp,3850	;volatile
  4079                           
  4080                           ; BSR set to: 0
  4081                           ;CANlib.h: 925: if (filter & 0x00010000)
  4082  000854  A020               	btfss	CANSetFilter@filter+2,0,c
  4083  000856  D003               	goto	l487
  4084                           
  4085                           ; BSR set to: 0
  4086                           ;CANlib.h: 926: RXF2SIDLbits.EID16 = 0x01;
  4087  000858  010F               	movlb	15	; () banked
  4088  00085A  8109               	bsf	9,0,b	;volatile
  4089  00085C  D002               	goto	l488
  4090  00085E                     l487:
  4091                           
  4092                           ; BSR set to: 0
  4093                           ;CANlib.h: 927: else
  4094                           ;CANlib.h: 928: RXF2SIDLbits.EID16 = 0x00;
  4095  00085E  010F               	movlb	15	; () banked
  4096  000860  9109               	bcf	9,0,b	;volatile
  4097  000862                     l488:
  4098                           
  4099                           ; BSR set to: 15
  4100                           ;CANlib.h: 930: if (filter & 0x00020000)
  4101  000862  A220               	btfss	CANSetFilter@filter+2,1,c
  4102  000864  D003               	goto	l489
  4103                           
  4104                           ; BSR set to: 15
  4105                           ;CANlib.h: 931: RXF2SIDLbits.EID17 = 0x01;
  4106  000866  010F               	movlb	15	; () banked
  4107  000868  8309               	bsf	9,1,b	;volatile
  4108  00086A  D002               	goto	l490
  4109  00086C                     l489:
  4110                           
  4111                           ; BSR set to: 15
  4112                           ;CANlib.h: 932: else
  4113                           ;CANlib.h: 933: RXF2SIDLbits.EID17 = 0x00;
  4114  00086C  010F               	movlb	15	; () banked
  4115  00086E  9309               	bcf	9,1,b	;volatile
  4116  000870                     l490:
  4117                           
  4118                           ; BSR set to: 15
  4119                           ;CANlib.h: 935: if (filter & 0x00040000)
  4120  000870  A420               	btfss	CANSetFilter@filter+2,2,c
  4121  000872  D003               	goto	l491
  4122                           
  4123                           ; BSR set to: 15
  4124                           ;CANlib.h: 936: RXF2SIDLbits.SID0 = 0x01;
  4125  000874  010F               	movlb	15	; () banked
  4126  000876  8B09               	bsf	9,5,b	;volatile
  4127  000878  D002               	goto	l492
  4128  00087A                     l491:
  4129                           
  4130                           ; BSR set to: 15
  4131                           ;CANlib.h: 937: else
  4132                           ;CANlib.h: 938: RXF2SIDLbits.SID0 = 0x00;
  4133  00087A  010F               	movlb	15	; () banked
  4134  00087C  9B09               	bcf	9,5,b	;volatile
  4135  00087E                     l492:
  4136                           
  4137                           ; BSR set to: 15
  4138                           ;CANlib.h: 940: if (filter & 0x00080000)
  4139  00087E  A620               	btfss	CANSetFilter@filter+2,3,c
  4140  000880  D003               	goto	l493
  4141                           
  4142                           ; BSR set to: 15
  4143                           ;CANlib.h: 941: RXF2SIDLbits.SID1 = 0x01;
  4144  000882  010F               	movlb	15	; () banked
  4145  000884  8D09               	bsf	9,6,b	;volatile
  4146  000886  D002               	goto	l494
  4147  000888                     l493:
  4148                           
  4149                           ; BSR set to: 15
  4150                           ;CANlib.h: 942: else
  4151                           ;CANlib.h: 943: RXF2SIDLbits.SID1 = 0x00;
  4152  000888  010F               	movlb	15	; () banked
  4153  00088A  9D09               	bcf	9,6,b	;volatile
  4154  00088C                     l494:
  4155                           
  4156                           ; BSR set to: 15
  4157                           ;CANlib.h: 945: if (filter & 0x00100000)
  4158  00088C  A820               	btfss	CANSetFilter@filter+2,4,c
  4159  00088E  D003               	goto	l495
  4160                           
  4161                           ; BSR set to: 15
  4162                           ;CANlib.h: 946: RXF2SIDLbits.SID2 = 0x01 ;
  4163  000890  010F               	movlb	15	; () banked
  4164  000892  8F09               	bsf	9,7,b	;volatile
  4165  000894  D002               	goto	l4274
  4166  000896                     l495:
  4167                           
  4168                           ; BSR set to: 15
  4169                           ;CANlib.h: 947: else
  4170                           ;CANlib.h: 948: RXF2SIDLbits.SID2 = 0x00 ;
  4171  000896  010F               	movlb	15	; () banked
  4172  000898  9F09               	bcf	9,7,b	;volatile
  4173  00089A                     l4274:
  4174                           
  4175                           ; BSR set to: 15
  4176                           ;CANlib.h: 950: tamp = (filter >> 21);
  4177  00089A  C01E  F0A3         	movff	CANSetFilter@filter,??_CANSetFilter
  4178  00089E  C01F  F0A4         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  4179  0008A2  C020  F0A5         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  4180  0008A6  C021  F0A6         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  4181  0008AA  0E16               	movlw	22
  4182  0008AC  D006               	goto	u5430
  4183  0008AE                     u5435:
  4184  0008AE  0100               	movlb	0	; () banked
  4185  0008B0  90D8               	bcf	status,0,c
  4186  0008B2  33A6               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  4187  0008B4  33A5               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  4188  0008B6  33A4               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  4189  0008B8  33A3               	rrcf	??_CANSetFilter& (0+255),f,b
  4190  0008BA                     u5430:
  4191  0008BA  2EE8               	decfsz	wreg,f,c
  4192  0008BC  D7F8               	goto	u5435
  4193  0008BE  C0A3  F0A8         	movff	??_CANSetFilter,CANSetFilter@tamp
  4194  0008C2  C0A4  F0A9         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4195  0008C6  C0A5  F0AA         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4196  0008CA  C0A6  F0AB         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4197                           
  4198                           ; BSR set to: 0
  4199                           ;CANlib.h: 951: tamp = tamp & 0x000000FF;
  4200  0008CE  0100               	movlb	0	; () banked
  4201  0008D0  51A8               	movf	CANSetFilter@tamp& (0+255),w,b
  4202  0008D2  0100               	movlb	0	; () banked
  4203  0008D4  6FA8               	movwf	CANSetFilter@tamp& (0+255),b
  4204  0008D6  6BA9               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4205  0008D8  6BAA               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4206  0008DA  6BAB               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4207                           
  4208                           ; BSR set to: 0
  4209                           ;CANlib.h: 952: RXF2SIDH = (unsigned char) tamp;
  4210  0008DC  C0A8  FF08         	movff	CANSetFilter@tamp,3848	;volatile
  4211  0008E0                     l4280:
  4212                           
  4213                           ; BSR set to: 0
  4214                           ;CANlib.h: 953: }
  4215                           ;CANlib.h: 955: if ((numBuffer ==CAN_FILTER_B2_F2) && (type == CAN_CONFIG_XTD_MSG))
  4216  0008E0  0E03               	movlw	3
  4217  0008E2  0100               	movlb	0	; () banked
  4218  0008E4  19A7               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  4219  0008E6  A4D8               	btfss	status,2,c
  4220  0008E8  D07E               	goto	l4314
  4221                           
  4222                           ; BSR set to: 0
  4223  0008EA  0EF7               	movlw	247
  4224  0008EC  1822               	xorwf	CANSetFilter@type,w,c
  4225  0008EE  A4D8               	btfss	status,2,c
  4226  0008F0  D07A               	goto	l4314
  4227                           
  4228                           ; BSR set to: 0
  4229                           ;CANlib.h: 956: {
  4230                           ;CANlib.h: 957: RXF3SIDLbits.EXIDEN = 0x01;
  4231  0008F2  010F               	movlb	15	; () banked
  4232  0008F4  870D               	bsf	13,3,b	;volatile
  4233                           
  4234                           ; BSR set to: 15
  4235                           ;CANlib.h: 959: tamp = filter & 0x000000FF;
  4236  0008F6  501E               	movf	CANSetFilter@filter,w,c
  4237  0008F8  0100               	movlb	0	; () banked
  4238  0008FA  6FA8               	movwf	CANSetFilter@tamp& (0+255),b
  4239  0008FC  6BA9               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4240  0008FE  6BAA               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4241  000900  6BAB               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4242                           
  4243                           ; BSR set to: 0
  4244                           ;CANlib.h: 960: RXF3EIDL = (unsigned char) tamp;
  4245  000902  C0A8  FF0F         	movff	CANSetFilter@tamp,3855	;volatile
  4246                           
  4247                           ; BSR set to: 0
  4248                           ;CANlib.h: 962: tamp = filter & 0x0000FF00;
  4249  000906  0E00               	movlw	0
  4250  000908  141E               	andwf	CANSetFilter@filter,w,c
  4251  00090A  0100               	movlb	0	; () banked
  4252  00090C  6FA8               	movwf	CANSetFilter@tamp& (0+255),b
  4253  00090E  0EFF               	movlw	255
  4254  000910  141F               	andwf	CANSetFilter@filter+1,w,c
  4255  000912  0100               	movlb	0	; () banked
  4256  000914  6FA9               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  4257  000916  0E00               	movlw	0
  4258  000918  1420               	andwf	CANSetFilter@filter+2,w,c
  4259  00091A  0100               	movlb	0	; () banked
  4260  00091C  6FAA               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  4261  00091E  0E00               	movlw	0
  4262  000920  1421               	andwf	CANSetFilter@filter+3,w,c
  4263  000922  0100               	movlb	0	; () banked
  4264  000924  6FAB               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  4265                           
  4266                           ; BSR set to: 0
  4267                           ;CANlib.h: 963: tamp = tamp >> 8;
  4268  000926  C0A8  F0A3         	movff	CANSetFilter@tamp,??_CANSetFilter
  4269  00092A  C0A9  F0A4         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  4270  00092E  C0AA  F0A5         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  4271  000932  C0AB  F0A6         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  4272  000936  C0A4  F0A3         	movff	??_CANSetFilter+1,??_CANSetFilter
  4273  00093A  C0A5  F0A4         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  4274  00093E  C0A6  F0A5         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  4275  000942  0100               	movlb	0	; () banked
  4276  000944  6BA6               	clrf	(??_CANSetFilter+3)& (0+255),b
  4277  000946  C0A3  F0A8         	movff	??_CANSetFilter,CANSetFilter@tamp
  4278  00094A  C0A4  F0A9         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4279  00094E  C0A5  F0AA         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4280  000952  C0A6  F0AB         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4281                           
  4282                           ; BSR set to: 0
  4283                           ;CANlib.h: 964: RXF3EIDH = (unsigned char) tamp;
  4284  000956  C0A8  FF0E         	movff	CANSetFilter@tamp,3854	;volatile
  4285                           
  4286                           ; BSR set to: 0
  4287                           ;CANlib.h: 966: if (filter & 0x00010000)
  4288  00095A  A020               	btfss	CANSetFilter@filter+2,0,c
  4289  00095C  D003               	goto	l498
  4290                           
  4291                           ; BSR set to: 0
  4292                           ;CANlib.h: 967: RXF3SIDLbits.EID16 = 0x01;
  4293  00095E  010F               	movlb	15	; () banked
  4294  000960  810D               	bsf	13,0,b	;volatile
  4295  000962  D002               	goto	l499
  4296  000964                     l498:
  4297                           
  4298                           ; BSR set to: 0
  4299                           ;CANlib.h: 968: else
  4300                           ;CANlib.h: 969: RXF3SIDLbits.EID16 = 0x00;
  4301  000964  010F               	movlb	15	; () banked
  4302  000966  910D               	bcf	13,0,b	;volatile
  4303  000968                     l499:
  4304                           
  4305                           ; BSR set to: 15
  4306                           ;CANlib.h: 971: if (filter & 0x00020000)
  4307  000968  A220               	btfss	CANSetFilter@filter+2,1,c
  4308  00096A  D003               	goto	l500
  4309                           
  4310                           ; BSR set to: 15
  4311                           ;CANlib.h: 972: RXF3SIDLbits.EID17 = 0x01;
  4312  00096C  010F               	movlb	15	; () banked
  4313  00096E  830D               	bsf	13,1,b	;volatile
  4314  000970  D002               	goto	l501
  4315  000972                     l500:
  4316                           
  4317                           ; BSR set to: 15
  4318                           ;CANlib.h: 973: else
  4319                           ;CANlib.h: 974: RXF3SIDLbits.EID17 = 0x00;
  4320  000972  010F               	movlb	15	; () banked
  4321  000974  930D               	bcf	13,1,b	;volatile
  4322  000976                     l501:
  4323                           
  4324                           ; BSR set to: 15
  4325                           ;CANlib.h: 976: if (filter & 0x00040000)
  4326  000976  A420               	btfss	CANSetFilter@filter+2,2,c
  4327  000978  D003               	goto	l502
  4328                           
  4329                           ; BSR set to: 15
  4330                           ;CANlib.h: 977: RXF3SIDLbits.SID0 = 0x01;
  4331  00097A  010F               	movlb	15	; () banked
  4332  00097C  8B0D               	bsf	13,5,b	;volatile
  4333  00097E  D002               	goto	l503
  4334  000980                     l502:
  4335                           
  4336                           ; BSR set to: 15
  4337                           ;CANlib.h: 978: else
  4338                           ;CANlib.h: 979: RXF3SIDLbits.SID0 = 0x00;
  4339  000980  010F               	movlb	15	; () banked
  4340  000982  9B0D               	bcf	13,5,b	;volatile
  4341  000984                     l503:
  4342                           
  4343                           ; BSR set to: 15
  4344                           ;CANlib.h: 981: if (filter & 0x00080000)
  4345  000984  A620               	btfss	CANSetFilter@filter+2,3,c
  4346  000986  D003               	goto	l504
  4347                           
  4348                           ; BSR set to: 15
  4349                           ;CANlib.h: 982: RXF3SIDLbits.SID1 = 0x01;
  4350  000988  010F               	movlb	15	; () banked
  4351  00098A  8D0D               	bsf	13,6,b	;volatile
  4352  00098C  D002               	goto	l505
  4353  00098E                     l504:
  4354                           
  4355                           ; BSR set to: 15
  4356                           ;CANlib.h: 983: else
  4357                           ;CANlib.h: 984: RXF3SIDLbits.SID1 = 0x00;
  4358  00098E  010F               	movlb	15	; () banked
  4359  000990  9D0D               	bcf	13,6,b	;volatile
  4360  000992                     l505:
  4361                           
  4362                           ; BSR set to: 15
  4363                           ;CANlib.h: 986: if (filter & 0x00100000)
  4364  000992  A820               	btfss	CANSetFilter@filter+2,4,c
  4365  000994  D003               	goto	l506
  4366                           
  4367                           ; BSR set to: 15
  4368                           ;CANlib.h: 987: RXF3SIDLbits.SID2 = 0x01 ;
  4369  000996  010F               	movlb	15	; () banked
  4370  000998  8F0D               	bsf	13,7,b	;volatile
  4371  00099A  D002               	goto	l4308
  4372  00099C                     l506:
  4373                           
  4374                           ; BSR set to: 15
  4375                           ;CANlib.h: 988: else
  4376                           ;CANlib.h: 989: RXF3SIDLbits.SID2 = 0x00 ;
  4377  00099C  010F               	movlb	15	; () banked
  4378  00099E  9F0D               	bcf	13,7,b	;volatile
  4379  0009A0                     l4308:
  4380                           
  4381                           ; BSR set to: 15
  4382                           ;CANlib.h: 991: tamp = (filter >> 21);
  4383  0009A0  C01E  F0A3         	movff	CANSetFilter@filter,??_CANSetFilter
  4384  0009A4  C01F  F0A4         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  4385  0009A8  C020  F0A5         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  4386  0009AC  C021  F0A6         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  4387  0009B0  0E16               	movlw	22
  4388  0009B2  D006               	goto	u5510
  4389  0009B4                     u5515:
  4390  0009B4  0100               	movlb	0	; () banked
  4391  0009B6  90D8               	bcf	status,0,c
  4392  0009B8  33A6               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  4393  0009BA  33A5               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  4394  0009BC  33A4               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  4395  0009BE  33A3               	rrcf	??_CANSetFilter& (0+255),f,b
  4396  0009C0                     u5510:
  4397  0009C0  2EE8               	decfsz	wreg,f,c
  4398  0009C2  D7F8               	goto	u5515
  4399  0009C4  C0A3  F0A8         	movff	??_CANSetFilter,CANSetFilter@tamp
  4400  0009C8  C0A4  F0A9         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4401  0009CC  C0A5  F0AA         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4402  0009D0  C0A6  F0AB         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4403                           
  4404                           ; BSR set to: 0
  4405                           ;CANlib.h: 992: tamp = tamp & 0x000000FF;
  4406  0009D4  0100               	movlb	0	; () banked
  4407  0009D6  51A8               	movf	CANSetFilter@tamp& (0+255),w,b
  4408  0009D8  0100               	movlb	0	; () banked
  4409  0009DA  6FA8               	movwf	CANSetFilter@tamp& (0+255),b
  4410  0009DC  6BA9               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4411  0009DE  6BAA               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4412  0009E0  6BAB               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4413                           
  4414                           ; BSR set to: 0
  4415                           ;CANlib.h: 993: RXF3SIDH = (unsigned char) tamp;
  4416  0009E2  C0A8  FF0C         	movff	CANSetFilter@tamp,3852	;volatile
  4417  0009E6                     l4314:
  4418                           
  4419                           ; BSR set to: 0
  4420                           ;CANlib.h: 994: }
  4421                           ;CANlib.h: 996: if ((numBuffer ==CAN_FILTER_B2_F3) && (type == CAN_CONFIG_XTD_MSG))
  4422  0009E6  0E04               	movlw	4
  4423  0009E8  0100               	movlb	0	; () banked
  4424  0009EA  19A7               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  4425  0009EC  A4D8               	btfss	status,2,c
  4426  0009EE  D07E               	goto	l4348
  4427                           
  4428                           ; BSR set to: 0
  4429  0009F0  0EF7               	movlw	247
  4430  0009F2  1822               	xorwf	CANSetFilter@type,w,c
  4431  0009F4  A4D8               	btfss	status,2,c
  4432  0009F6  D07A               	goto	l4348
  4433                           
  4434                           ; BSR set to: 0
  4435                           ;CANlib.h: 997: {
  4436                           ;CANlib.h: 998: RXF4SIDLbits.EXIDEN = 0x01;
  4437  0009F8  010F               	movlb	15	; () banked
  4438  0009FA  8711               	bsf	17,3,b	;volatile
  4439                           
  4440                           ; BSR set to: 15
  4441                           ;CANlib.h: 1000: tamp = filter & 0x000000FF;
  4442  0009FC  501E               	movf	CANSetFilter@filter,w,c
  4443  0009FE  0100               	movlb	0	; () banked
  4444  000A00  6FA8               	movwf	CANSetFilter@tamp& (0+255),b
  4445  000A02  6BA9               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4446  000A04  6BAA               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4447  000A06  6BAB               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4448                           
  4449                           ; BSR set to: 0
  4450                           ;CANlib.h: 1001: RXF4EIDL = (unsigned char) tamp;
  4451  000A08  C0A8  FF13         	movff	CANSetFilter@tamp,3859	;volatile
  4452                           
  4453                           ; BSR set to: 0
  4454                           ;CANlib.h: 1003: tamp = filter & 0x0000FF00;
  4455  000A0C  0E00               	movlw	0
  4456  000A0E  141E               	andwf	CANSetFilter@filter,w,c
  4457  000A10  0100               	movlb	0	; () banked
  4458  000A12  6FA8               	movwf	CANSetFilter@tamp& (0+255),b
  4459  000A14  0EFF               	movlw	255
  4460  000A16  141F               	andwf	CANSetFilter@filter+1,w,c
  4461  000A18  0100               	movlb	0	; () banked
  4462  000A1A  6FA9               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  4463  000A1C  0E00               	movlw	0
  4464  000A1E  1420               	andwf	CANSetFilter@filter+2,w,c
  4465  000A20  0100               	movlb	0	; () banked
  4466  000A22  6FAA               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  4467  000A24  0E00               	movlw	0
  4468  000A26  1421               	andwf	CANSetFilter@filter+3,w,c
  4469  000A28  0100               	movlb	0	; () banked
  4470  000A2A  6FAB               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  4471                           
  4472                           ; BSR set to: 0
  4473                           ;CANlib.h: 1004: tamp = tamp >> 8;
  4474  000A2C  C0A8  F0A3         	movff	CANSetFilter@tamp,??_CANSetFilter
  4475  000A30  C0A9  F0A4         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  4476  000A34  C0AA  F0A5         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  4477  000A38  C0AB  F0A6         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  4478  000A3C  C0A4  F0A3         	movff	??_CANSetFilter+1,??_CANSetFilter
  4479  000A40  C0A5  F0A4         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  4480  000A44  C0A6  F0A5         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  4481  000A48  0100               	movlb	0	; () banked
  4482  000A4A  6BA6               	clrf	(??_CANSetFilter+3)& (0+255),b
  4483  000A4C  C0A3  F0A8         	movff	??_CANSetFilter,CANSetFilter@tamp
  4484  000A50  C0A4  F0A9         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4485  000A54  C0A5  F0AA         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4486  000A58  C0A6  F0AB         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4487                           
  4488                           ; BSR set to: 0
  4489                           ;CANlib.h: 1005: RXF4EIDH = (unsigned char) tamp;
  4490  000A5C  C0A8  FF12         	movff	CANSetFilter@tamp,3858	;volatile
  4491                           
  4492                           ; BSR set to: 0
  4493                           ;CANlib.h: 1007: if (filter & 0x00010000)
  4494  000A60  A020               	btfss	CANSetFilter@filter+2,0,c
  4495  000A62  D003               	goto	l509
  4496                           
  4497                           ; BSR set to: 0
  4498                           ;CANlib.h: 1008: RXF4SIDLbits.EID16 = 0x01;
  4499  000A64  010F               	movlb	15	; () banked
  4500  000A66  8111               	bsf	17,0,b	;volatile
  4501  000A68  D002               	goto	l510
  4502  000A6A                     l509:
  4503                           
  4504                           ; BSR set to: 0
  4505                           ;CANlib.h: 1009: else
  4506                           ;CANlib.h: 1010: RXF4SIDLbits.EID16 = 0x00;
  4507  000A6A  010F               	movlb	15	; () banked
  4508  000A6C  9111               	bcf	17,0,b	;volatile
  4509  000A6E                     l510:
  4510                           
  4511                           ; BSR set to: 15
  4512                           ;CANlib.h: 1012: if (filter & 0x00020000)
  4513  000A6E  A220               	btfss	CANSetFilter@filter+2,1,c
  4514  000A70  D003               	goto	l511
  4515                           
  4516                           ; BSR set to: 15
  4517                           ;CANlib.h: 1013: RXF4SIDLbits.EID17 = 0x01;
  4518  000A72  010F               	movlb	15	; () banked
  4519  000A74  8311               	bsf	17,1,b	;volatile
  4520  000A76  D002               	goto	l512
  4521  000A78                     l511:
  4522                           
  4523                           ; BSR set to: 15
  4524                           ;CANlib.h: 1014: else
  4525                           ;CANlib.h: 1015: RXF4SIDLbits.EID17 = 0x00;
  4526  000A78  010F               	movlb	15	; () banked
  4527  000A7A  9311               	bcf	17,1,b	;volatile
  4528  000A7C                     l512:
  4529                           
  4530                           ; BSR set to: 15
  4531                           ;CANlib.h: 1017: if (filter & 0x00040000)
  4532  000A7C  A420               	btfss	CANSetFilter@filter+2,2,c
  4533  000A7E  D003               	goto	l513
  4534                           
  4535                           ; BSR set to: 15
  4536                           ;CANlib.h: 1018: RXF4SIDLbits.SID0 = 0x01;
  4537  000A80  010F               	movlb	15	; () banked
  4538  000A82  8B11               	bsf	17,5,b	;volatile
  4539  000A84  D002               	goto	l514
  4540  000A86                     l513:
  4541                           
  4542                           ; BSR set to: 15
  4543                           ;CANlib.h: 1019: else
  4544                           ;CANlib.h: 1020: RXF4SIDLbits.SID0 = 0x00;
  4545  000A86  010F               	movlb	15	; () banked
  4546  000A88  9B11               	bcf	17,5,b	;volatile
  4547  000A8A                     l514:
  4548                           
  4549                           ; BSR set to: 15
  4550                           ;CANlib.h: 1022: if (filter & 0x00080000)
  4551  000A8A  A620               	btfss	CANSetFilter@filter+2,3,c
  4552  000A8C  D003               	goto	l515
  4553                           
  4554                           ; BSR set to: 15
  4555                           ;CANlib.h: 1023: RXF4SIDLbits.SID1 = 0x01;
  4556  000A8E  010F               	movlb	15	; () banked
  4557  000A90  8D11               	bsf	17,6,b	;volatile
  4558  000A92  D002               	goto	l516
  4559  000A94                     l515:
  4560                           
  4561                           ; BSR set to: 15
  4562                           ;CANlib.h: 1024: else
  4563                           ;CANlib.h: 1025: RXF4SIDLbits.SID1 = 0x00;
  4564  000A94  010F               	movlb	15	; () banked
  4565  000A96  9D11               	bcf	17,6,b	;volatile
  4566  000A98                     l516:
  4567                           
  4568                           ; BSR set to: 15
  4569                           ;CANlib.h: 1027: if (filter & 0x00100000)
  4570  000A98  A820               	btfss	CANSetFilter@filter+2,4,c
  4571  000A9A  D003               	goto	l517
  4572                           
  4573                           ; BSR set to: 15
  4574                           ;CANlib.h: 1028: RXF4SIDLbits.SID2 = 0x01 ;
  4575  000A9C  010F               	movlb	15	; () banked
  4576  000A9E  8F11               	bsf	17,7,b	;volatile
  4577  000AA0  D002               	goto	l4342
  4578  000AA2                     l517:
  4579                           
  4580                           ; BSR set to: 15
  4581                           ;CANlib.h: 1029: else
  4582                           ;CANlib.h: 1030: RXF4SIDLbits.SID2 = 0x00 ;
  4583  000AA2  010F               	movlb	15	; () banked
  4584  000AA4  9F11               	bcf	17,7,b	;volatile
  4585  000AA6                     l4342:
  4586                           
  4587                           ; BSR set to: 15
  4588                           ;CANlib.h: 1032: tamp = (filter >> 21);
  4589  000AA6  C01E  F0A3         	movff	CANSetFilter@filter,??_CANSetFilter
  4590  000AAA  C01F  F0A4         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  4591  000AAE  C020  F0A5         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  4592  000AB2  C021  F0A6         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  4593  000AB6  0E16               	movlw	22
  4594  000AB8  D006               	goto	u5590
  4595  000ABA                     u5595:
  4596  000ABA  0100               	movlb	0	; () banked
  4597  000ABC  90D8               	bcf	status,0,c
  4598  000ABE  33A6               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  4599  000AC0  33A5               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  4600  000AC2  33A4               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  4601  000AC4  33A3               	rrcf	??_CANSetFilter& (0+255),f,b
  4602  000AC6                     u5590:
  4603  000AC6  2EE8               	decfsz	wreg,f,c
  4604  000AC8  D7F8               	goto	u5595
  4605  000ACA  C0A3  F0A8         	movff	??_CANSetFilter,CANSetFilter@tamp
  4606  000ACE  C0A4  F0A9         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4607  000AD2  C0A5  F0AA         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4608  000AD6  C0A6  F0AB         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4609                           
  4610                           ; BSR set to: 0
  4611                           ;CANlib.h: 1033: tamp = tamp & 0x000000FF;
  4612  000ADA  0100               	movlb	0	; () banked
  4613  000ADC  51A8               	movf	CANSetFilter@tamp& (0+255),w,b
  4614  000ADE  0100               	movlb	0	; () banked
  4615  000AE0  6FA8               	movwf	CANSetFilter@tamp& (0+255),b
  4616  000AE2  6BA9               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4617  000AE4  6BAA               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4618  000AE6  6BAB               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4619                           
  4620                           ; BSR set to: 0
  4621                           ;CANlib.h: 1034: RXF4SIDH = (unsigned char) tamp;
  4622  000AE8  C0A8  FF10         	movff	CANSetFilter@tamp,3856	;volatile
  4623  000AEC                     l4348:
  4624                           
  4625                           ; BSR set to: 0
  4626                           ;CANlib.h: 1035: }
  4627                           ;CANlib.h: 1037: if ((numBuffer ==CAN_FILTER_B2_F4) && (type == CAN_CONFIG_XTD_MSG))
  4628  000AEC  0E05               	movlw	5
  4629  000AEE  0100               	movlb	0	; () banked
  4630  000AF0  19A7               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  4631  000AF2  A4D8               	btfss	status,2,c
  4632  000AF4  0012               	return	
  4633                           
  4634                           ; BSR set to: 0
  4635  000AF6  0EF7               	movlw	247
  4636  000AF8  1822               	xorwf	CANSetFilter@type,w,c
  4637  000AFA  A4D8               	btfss	status,2,c
  4638  000AFC  0012               	return	
  4639                           
  4640                           ; BSR set to: 0
  4641                           ;CANlib.h: 1038: {
  4642                           ;CANlib.h: 1039: RXF5SIDLbits.EXIDEN = 0x01;
  4643  000AFE  010F               	movlb	15	; () banked
  4644  000B00  8715               	bsf	21,3,b	;volatile
  4645                           
  4646                           ; BSR set to: 15
  4647                           ;CANlib.h: 1041: tamp = filter & 0x000000FF;
  4648  000B02  501E               	movf	CANSetFilter@filter,w,c
  4649  000B04  0100               	movlb	0	; () banked
  4650  000B06  6FA8               	movwf	CANSetFilter@tamp& (0+255),b
  4651  000B08  6BA9               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4652  000B0A  6BAA               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4653  000B0C  6BAB               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4654                           
  4655                           ; BSR set to: 0
  4656                           ;CANlib.h: 1042: RXF5EIDL = (unsigned char) tamp;
  4657  000B0E  C0A8  FF17         	movff	CANSetFilter@tamp,3863	;volatile
  4658                           
  4659                           ; BSR set to: 0
  4660                           ;CANlib.h: 1044: tamp = filter & 0x0000FF00;
  4661  000B12  0E00               	movlw	0
  4662  000B14  141E               	andwf	CANSetFilter@filter,w,c
  4663  000B16  0100               	movlb	0	; () banked
  4664  000B18  6FA8               	movwf	CANSetFilter@tamp& (0+255),b
  4665  000B1A  0EFF               	movlw	255
  4666  000B1C  141F               	andwf	CANSetFilter@filter+1,w,c
  4667  000B1E  0100               	movlb	0	; () banked
  4668  000B20  6FA9               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  4669  000B22  0E00               	movlw	0
  4670  000B24  1420               	andwf	CANSetFilter@filter+2,w,c
  4671  000B26  0100               	movlb	0	; () banked
  4672  000B28  6FAA               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  4673  000B2A  0E00               	movlw	0
  4674  000B2C  1421               	andwf	CANSetFilter@filter+3,w,c
  4675  000B2E  0100               	movlb	0	; () banked
  4676  000B30  6FAB               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  4677                           
  4678                           ; BSR set to: 0
  4679                           ;CANlib.h: 1045: tamp = tamp >> 8;
  4680  000B32  C0A8  F0A3         	movff	CANSetFilter@tamp,??_CANSetFilter
  4681  000B36  C0A9  F0A4         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  4682  000B3A  C0AA  F0A5         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  4683  000B3E  C0AB  F0A6         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  4684  000B42  C0A4  F0A3         	movff	??_CANSetFilter+1,??_CANSetFilter
  4685  000B46  C0A5  F0A4         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  4686  000B4A  C0A6  F0A5         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  4687  000B4E  0100               	movlb	0	; () banked
  4688  000B50  6BA6               	clrf	(??_CANSetFilter+3)& (0+255),b
  4689  000B52  C0A3  F0A8         	movff	??_CANSetFilter,CANSetFilter@tamp
  4690  000B56  C0A4  F0A9         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4691  000B5A  C0A5  F0AA         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4692  000B5E  C0A6  F0AB         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4693                           
  4694                           ; BSR set to: 0
  4695                           ;CANlib.h: 1046: RXF5EIDH = (unsigned char) tamp;
  4696  000B62  C0A8  FF16         	movff	CANSetFilter@tamp,3862	;volatile
  4697                           
  4698                           ; BSR set to: 0
  4699                           ;CANlib.h: 1048: if (filter & 0x00010000)
  4700  000B66  A020               	btfss	CANSetFilter@filter+2,0,c
  4701  000B68  D003               	goto	l520
  4702                           
  4703                           ; BSR set to: 0
  4704                           ;CANlib.h: 1049: RXF5SIDLbits.EID16 = 0x01;
  4705  000B6A  010F               	movlb	15	; () banked
  4706  000B6C  8115               	bsf	21,0,b	;volatile
  4707  000B6E  D002               	goto	l521
  4708  000B70                     l520:
  4709                           
  4710                           ; BSR set to: 0
  4711                           ;CANlib.h: 1050: else
  4712                           ;CANlib.h: 1051: RXF5SIDLbits.EID16 = 0x00;
  4713  000B70  010F               	movlb	15	; () banked
  4714  000B72  9115               	bcf	21,0,b	;volatile
  4715  000B74                     l521:
  4716                           
  4717                           ; BSR set to: 15
  4718                           ;CANlib.h: 1053: if (filter & 0x00020000)
  4719  000B74  A220               	btfss	CANSetFilter@filter+2,1,c
  4720  000B76  D003               	goto	l522
  4721                           
  4722                           ; BSR set to: 15
  4723                           ;CANlib.h: 1054: RXF5SIDLbits.EID17 = 0x01;
  4724  000B78  010F               	movlb	15	; () banked
  4725  000B7A  8315               	bsf	21,1,b	;volatile
  4726  000B7C  D002               	goto	l523
  4727  000B7E                     l522:
  4728                           
  4729                           ; BSR set to: 15
  4730                           ;CANlib.h: 1055: else
  4731                           ;CANlib.h: 1056: RXF5SIDLbits.EID17 = 0x00;
  4732  000B7E  010F               	movlb	15	; () banked
  4733  000B80  9315               	bcf	21,1,b	;volatile
  4734  000B82                     l523:
  4735                           
  4736                           ; BSR set to: 15
  4737                           ;CANlib.h: 1058: if (filter & 0x00040000)
  4738  000B82  A420               	btfss	CANSetFilter@filter+2,2,c
  4739  000B84  D003               	goto	l524
  4740                           
  4741                           ; BSR set to: 15
  4742                           ;CANlib.h: 1059: RXF5SIDLbits.SID0 = 0x01;
  4743  000B86  010F               	movlb	15	; () banked
  4744  000B88  8B15               	bsf	21,5,b	;volatile
  4745  000B8A  D002               	goto	l525
  4746  000B8C                     l524:
  4747                           
  4748                           ; BSR set to: 15
  4749                           ;CANlib.h: 1060: else
  4750                           ;CANlib.h: 1061: RXF5SIDLbits.SID0 = 0x00;
  4751  000B8C  010F               	movlb	15	; () banked
  4752  000B8E  9B15               	bcf	21,5,b	;volatile
  4753  000B90                     l525:
  4754                           
  4755                           ; BSR set to: 15
  4756                           ;CANlib.h: 1063: if (filter & 0x00080000)
  4757  000B90  A620               	btfss	CANSetFilter@filter+2,3,c
  4758  000B92  D003               	goto	l526
  4759                           
  4760                           ; BSR set to: 15
  4761                           ;CANlib.h: 1064: RXF5SIDLbits.SID1 = 0x01;
  4762  000B94  010F               	movlb	15	; () banked
  4763  000B96  8D15               	bsf	21,6,b	;volatile
  4764  000B98  D002               	goto	l527
  4765  000B9A                     l526:
  4766                           
  4767                           ; BSR set to: 15
  4768                           ;CANlib.h: 1065: else
  4769                           ;CANlib.h: 1066: RXF5SIDLbits.SID1 = 0x00;
  4770  000B9A  010F               	movlb	15	; () banked
  4771  000B9C  9D15               	bcf	21,6,b	;volatile
  4772  000B9E                     l527:
  4773                           
  4774                           ; BSR set to: 15
  4775                           ;CANlib.h: 1068: if (filter & 0x00100000)
  4776  000B9E  A820               	btfss	CANSetFilter@filter+2,4,c
  4777  000BA0  D003               	goto	l528
  4778                           
  4779                           ; BSR set to: 15
  4780                           ;CANlib.h: 1069: RXF5SIDLbits.SID2 = 0x01 ;
  4781  000BA2  010F               	movlb	15	; () banked
  4782  000BA4  8F15               	bsf	21,7,b	;volatile
  4783  000BA6  D002               	goto	l4376
  4784  000BA8                     l528:
  4785                           
  4786                           ; BSR set to: 15
  4787                           ;CANlib.h: 1070: else
  4788                           ;CANlib.h: 1071: RXF5SIDLbits.SID2 = 0x00 ;
  4789  000BA8  010F               	movlb	15	; () banked
  4790  000BAA  9F15               	bcf	21,7,b	;volatile
  4791  000BAC                     l4376:
  4792                           
  4793                           ; BSR set to: 15
  4794                           ;CANlib.h: 1073: tamp = (filter >> 21);
  4795  000BAC  C01E  F0A3         	movff	CANSetFilter@filter,??_CANSetFilter
  4796  000BB0  C01F  F0A4         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  4797  000BB4  C020  F0A5         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  4798  000BB8  C021  F0A6         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  4799  000BBC  0E16               	movlw	22
  4800  000BBE  D006               	goto	u5670
  4801  000BC0                     u5675:
  4802  000BC0  0100               	movlb	0	; () banked
  4803  000BC2  90D8               	bcf	status,0,c
  4804  000BC4  33A6               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  4805  000BC6  33A5               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  4806  000BC8  33A4               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  4807  000BCA  33A3               	rrcf	??_CANSetFilter& (0+255),f,b
  4808  000BCC                     u5670:
  4809  000BCC  2EE8               	decfsz	wreg,f,c
  4810  000BCE  D7F8               	goto	u5675
  4811  000BD0  C0A3  F0A8         	movff	??_CANSetFilter,CANSetFilter@tamp
  4812  000BD4  C0A4  F0A9         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4813  000BD8  C0A5  F0AA         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4814  000BDC  C0A6  F0AB         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4815                           
  4816                           ; BSR set to: 0
  4817                           ;CANlib.h: 1074: tamp = tamp & 0x000000FF;
  4818  000BE0  0100               	movlb	0	; () banked
  4819  000BE2  51A8               	movf	CANSetFilter@tamp& (0+255),w,b
  4820  000BE4  0100               	movlb	0	; () banked
  4821  000BE6  6FA8               	movwf	CANSetFilter@tamp& (0+255),b
  4822  000BE8  6BA9               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4823  000BEA  6BAA               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4824  000BEC  6BAB               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4825                           
  4826                           ; BSR set to: 0
  4827                           ;CANlib.h: 1075: RXF5SIDH = (unsigned char) tamp;
  4828  000BEE  C0A8  FF14         	movff	CANSetFilter@tamp,3860	;volatile
  4829  000BF2  0012               	return	
  4830  000BF4                     __end_of_CANSetFilter:
  4831                           	opt stack 0
  4832                           tblptru	equ	0xFF8
  4833                           tblptrh	equ	0xFF7
  4834                           tblptrl	equ	0xFF6
  4835                           tablat	equ	0xFF5
  4836                           prodh	equ	0xFF4
  4837                           prodl	equ	0xFF3
  4838                           intcon	equ	0xFF2
  4839                           intcon2	equ	0xFF1
  4840                           postinc0	equ	0xFEE
  4841                           wreg	equ	0xFE8
  4842                           indf1	equ	0xFE7
  4843                           fsr1h	equ	0xFE2
  4844                           fsr1l	equ	0xFE1
  4845                           indf2	equ	0xFDF
  4846                           fsr2h	equ	0xFDA
  4847                           fsr2l	equ	0xFD9
  4848                           status	equ	0xFD8
  4849                           
  4850 ;; *************** function _CANOperationMode *****************
  4851 ;; Defined at:
  4852 ;;		line 206 in file "CANlib.h"
  4853 ;; Parameters:    Size  Location     Type
  4854 ;;  mode            1    wreg     enum E16838
  4855 ;; Auto vars:     Size  Location     Type
  4856 ;;  mode            1   29[COMRAM] enum E16838
  4857 ;; Return value:  Size  Location     Type
  4858 ;;		None               void
  4859 ;; Registers used:
  4860 ;;		wreg, status,2, status,0
  4861 ;; Tracked objects:
  4862 ;;		On entry : 0/0
  4863 ;;		On exit  : 0/0
  4864 ;;		Unchanged: 0/0
  4865 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  4866 ;;      Params:         0       0       0       0
  4867 ;;      Locals:         1       0       0       0
  4868 ;;      Temps:          0       0       0       0
  4869 ;;      Totals:         1       0       0       0
  4870 ;;Total ram usage:        1 bytes
  4871 ;; Hardware stack levels used:    1
  4872 ;; Hardware stack levels required when called:    2
  4873 ;; This function calls:
  4874 ;;		Nothing
  4875 ;; This function is called by:
  4876 ;;		_CANInitialize
  4877 ;; This function uses a non-reentrant model
  4878 ;;
  4879                           
  4880                           	psect	text7
  4881  0025F4                     __ptext7:
  4882                           	opt stack 0
  4883  0025F4                     _CANOperationMode:
  4884                           	opt stack 26
  4885                           
  4886                           ; BSR set to: 0
  4887                           ;incstack = 0
  4888                           ;CANOperationMode@mode stored from wreg
  4889  0025F4  6E1E               	movwf	CANOperationMode@mode,c
  4890                           
  4891                           ;CANlib.h: 208: CANCON = mode;
  4892  0025F6  C01E  FF6F         	movff	CANOperationMode@mode,3951	;volatile
  4893  0025FA                     l3972:
  4894  0025FA  506E               	movf	3950,w,c	;volatile
  4895  0025FC  0BE0               	andlw	224
  4896  0025FE  181E               	xorwf	CANOperationMode@mode,w,c
  4897  002600  B4D8               	btfsc	status,2,c
  4898  002602  0012               	return	
  4899  002604  D7FA               	goto	l3972
  4900  002606                     __end_of_CANOperationMode:
  4901                           	opt stack 0
  4902                           tblptru	equ	0xFF8
  4903                           tblptrh	equ	0xFF7
  4904                           tblptrl	equ	0xFF6
  4905                           tablat	equ	0xFF5
  4906                           prodh	equ	0xFF4
  4907                           prodl	equ	0xFF3
  4908                           intcon	equ	0xFF2
  4909                           intcon2	equ	0xFF1
  4910                           postinc0	equ	0xFEE
  4911                           wreg	equ	0xFE8
  4912                           indf1	equ	0xFE7
  4913                           fsr1h	equ	0xFE2
  4914                           fsr1l	equ	0xFE1
  4915                           indf2	equ	0xFDF
  4916                           fsr2h	equ	0xFDA
  4917                           fsr2l	equ	0xFD9
  4918                           status	equ	0xFD8
  4919                           
  4920 ;; *************** function _battery_measure *****************
  4921 ;; Defined at:
  4922 ;;		line 261 in file "motore.c"
  4923 ;; Parameters:    Size  Location     Type
  4924 ;;		None
  4925 ;; Auto vars:     Size  Location     Type
  4926 ;;		None
  4927 ;; Return value:  Size  Location     Type
  4928 ;;		None               void
  4929 ;; Registers used:
  4930 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4931 ;; Tracked objects:
  4932 ;;		On entry : 0/0
  4933 ;;		On exit  : 0/0
  4934 ;;		Unchanged: 0/0
  4935 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  4936 ;;      Params:         0       0       0       0
  4937 ;;      Locals:         0       0       0       0
  4938 ;;      Temps:          0       0       0       0
  4939 ;;      Totals:         0       0       0       0
  4940 ;;Total ram usage:        0 bytes
  4941 ;; Hardware stack levels used:    1
  4942 ;; Hardware stack levels required when called:    3
  4943 ;; This function calls:
  4944 ;;		_CANisTxReady
  4945 ;;		_CANsendMessage
  4946 ;;		___awdiv
  4947 ;;		___wmul
  4948 ;; This function is called by:
  4949 ;;		_main
  4950 ;; This function uses a non-reentrant model
  4951 ;;
  4952                           
  4953                           	psect	text8
  4954  0023CC                     __ptext8:
  4955                           	opt stack 0
  4956  0023CC                     _battery_measure:
  4957                           	opt stack 27
  4958                           
  4959                           ;motore.c: 262: ADCON0bits.GO = 1;
  4960                           
  4961                           ;incstack = 0
  4962  0023CC  82C2               	bsf	4034,1,c	;volatile
  4963  0023CE                     l713:
  4964  0023CE  B2C2               	btfsc	4034,1,c	;volatile
  4965  0023D0  D7FE               	goto	l713
  4966                           
  4967                           ;motore.c: 264: vBatt = ADRESH;
  4968  0023D2  CFC4 F037          	movff	4036,_vBatt	;volatile
  4969  0023D6  6A38               	clrf	_vBatt+1,c
  4970                           
  4971                           ;motore.c: 265: vBatt = (vBatt * 14) / 235;
  4972  0023D8  C037  F0A7         	movff	_vBatt,___wmul@multiplier
  4973  0023DC  C038  F0A8         	movff	_vBatt+1,___wmul@multiplier+1
  4974  0023E0  0E00               	movlw	0
  4975  0023E2  0100               	movlb	0	; () banked
  4976  0023E4  6FAA               	movwf	(___wmul@multiplicand+1)& (0+255),b
  4977  0023E6  0E0E               	movlw	14
  4978  0023E8  6FA9               	movwf	___wmul@multiplicand& (0+255),b
  4979  0023EA  ECA5  F012         	call	___wmul	;wreg free
  4980  0023EE  C0A7  F01E         	movff	?___wmul,___awdiv@dividend
  4981  0023F2  C0A8  F01F         	movff	?___wmul+1,___awdiv@dividend+1
  4982  0023F6  0E00               	movlw	0
  4983  0023F8  6E21               	movwf	___awdiv@divisor+1,c
  4984  0023FA  0EEB               	movlw	235
  4985  0023FC  6E20               	movwf	___awdiv@divisor,c
  4986  0023FE  EC98  F011         	call	___awdiv	;wreg free
  4987  002402  C01E  F037         	movff	?___awdiv,_vBatt
  4988  002406  C01F  F038         	movff	?___awdiv+1,_vBatt+1
  4989                           
  4990                           ;motore.c: 266: if (vBatt < 10) {
  4991  00240A  BE38               	btfsc	_vBatt+1,7,c
  4992  00240C  D006               	goto	l4854
  4993  00240E  5038               	movf	_vBatt+1,w,c
  4994  002410  E121               	bnz	l720
  4995  002412  0E0A               	movlw	10
  4996  002414  5C37               	subwf	_vBatt,w,c
  4997  002416  B0D8               	btfsc	status,0,c
  4998  002418  0012               	return	
  4999  00241A                     l4854:
  5000  00241A  ECD2  F012         	call	_CANisTxReady	;wreg free
  5001  00241E  0900               	iorlw	0
  5002  002420  B4D8               	btfsc	status,2,c
  5003  002422  D7FB               	goto	l4854
  5004                           
  5005                           ;motore.c: 269: CANsendMessage(0b00000000000000000000000001001, data_array, 8, CAN_CONFI
      +                          G_STD_MSG & CAN_REMOTE_TX_FRAME & CAN_TX_PRIORITY_0);
  5006  002424  0E09               	movlw	9
  5007  002426  0100               	movlb	0	; () banked
  5008  002428  6FA3               	movwf	CANsendMessage@identifier& (0+255),b
  5009  00242A  0E00               	movlw	0
  5010  00242C  6FA4               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  5011  00242E  0E00               	movlw	0
  5012  002430  6FA5               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  5013  002432  0E00               	movlw	0
  5014  002434  6FA6               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  5015  002436  0E93               	movlw	low _data_array
  5016  002438  0100               	movlb	0	; () banked
  5017  00243A  6FA7               	movwf	CANsendMessage@data& (0+255),b
  5018  00243C  0E00               	movlw	high _data_array
  5019  00243E  0100               	movlb	0	; () banked
  5020  002440  6FA8               	movwf	(CANsendMessage@data+1)& (0+255),b
  5021  002442  0E08               	movlw	8
  5022  002444  0100               	movlb	0	; () banked
  5023  002446  6FA9               	movwf	CANsendMessage@dataLength& (0+255),b
  5024  002448  0EFC               	movlw	252
  5025  00244A  0100               	movlb	0	; () banked
  5026  00244C  6FAA               	movwf	CANsendMessage@flags& (0+255),b
  5027  00244E  ECFA  F005         	call	_CANsendMessage	;wreg free
  5028  002452  0012               	return	
  5029  002454                     l720:
  5030  002454  0012               	return		;funcret
  5031  002456                     __end_of_battery_measure:
  5032                           	opt stack 0
  5033                           tblptru	equ	0xFF8
  5034                           tblptrh	equ	0xFF7
  5035                           tblptrl	equ	0xFF6
  5036                           tablat	equ	0xFF5
  5037                           prodh	equ	0xFF4
  5038                           prodl	equ	0xFF3
  5039                           intcon	equ	0xFF2
  5040                           intcon2	equ	0xFF1
  5041                           postinc0	equ	0xFEE
  5042                           wreg	equ	0xFE8
  5043                           indf1	equ	0xFE7
  5044                           fsr1h	equ	0xFE2
  5045                           fsr1l	equ	0xFE1
  5046                           indf2	equ	0xFDF
  5047                           fsr2h	equ	0xFDA
  5048                           fsr2l	equ	0xFD9
  5049                           status	equ	0xFD8
  5050                           
  5051 ;; *************** function ___wmul *****************
  5052 ;; Defined at:
  5053 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\Umul16.c"
  5054 ;; Parameters:    Size  Location     Type
  5055 ;;  multiplier      2    4[BANK0 ] unsigned int 
  5056 ;;  multiplicand    2    6[BANK0 ] unsigned int 
  5057 ;; Auto vars:     Size  Location     Type
  5058 ;;  product         2   33[COMRAM] unsigned int 
  5059 ;; Return value:  Size  Location     Type
  5060 ;;                  2    4[BANK0 ] unsigned int 
  5061 ;; Registers used:
  5062 ;;		wreg, status,2, status,0, prodl, prodh
  5063 ;; Tracked objects:
  5064 ;;		On entry : 0/0
  5065 ;;		On exit  : 0/0
  5066 ;;		Unchanged: 0/0
  5067 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  5068 ;;      Params:         0       4       0       0
  5069 ;;      Locals:         2       0       0       0
  5070 ;;      Temps:          0       0       0       0
  5071 ;;      Totals:         2       4       0       0
  5072 ;;Total ram usage:        6 bytes
  5073 ;; Hardware stack levels used:    1
  5074 ;; Hardware stack levels required when called:    2
  5075 ;; This function calls:
  5076 ;;		Nothing
  5077 ;; This function is called by:
  5078 ;;		_delay_ms
  5079 ;;		_main
  5080 ;;		_battery_measure
  5081 ;; This function uses a non-reentrant model
  5082 ;;
  5083                           
  5084                           	psect	text9
  5085  00254A                     __ptext9:
  5086                           	opt stack 0
  5087  00254A                     ___wmul:
  5088                           	opt stack 27
  5089                           
  5090                           ;incstack = 0
  5091  00254A  0100               	movlb	0	; () banked
  5092  00254C  51A7               	movf	___wmul@multiplier& (0+255),w,b
  5093  00254E  0100               	movlb	0	; () banked
  5094  002550  03A9               	mulwf	___wmul@multiplicand& (0+255),b
  5095  002552  CFF3 F022          	movff	prodl,___wmul@product
  5096  002556  CFF4 F023          	movff	prodh,___wmul@product+1
  5097  00255A  0100               	movlb	0	; () banked
  5098  00255C  51A7               	movf	___wmul@multiplier& (0+255),w,b
  5099  00255E  0100               	movlb	0	; () banked
  5100  002560  03AA               	mulwf	(___wmul@multiplicand+1)& (0+255),b
  5101  002562  50F3               	movf	prodl,w,c
  5102  002564  2623               	addwf	___wmul@product+1,f,c
  5103  002566  0100               	movlb	0	; () banked
  5104  002568  51A8               	movf	(___wmul@multiplier+1)& (0+255),w,b
  5105  00256A  0100               	movlb	0	; () banked
  5106  00256C  03A9               	mulwf	___wmul@multiplicand& (0+255),b
  5107  00256E  50F3               	movf	prodl,w,c
  5108  002570  2623               	addwf	___wmul@product+1,f,c
  5109                           
  5110                           ; BSR set to: 0
  5111  002572  C022  F0A7         	movff	___wmul@product,?___wmul
  5112  002576  C023  F0A8         	movff	___wmul@product+1,?___wmul+1
  5113  00257A  0012               	return	
  5114  00257C                     __end_of___wmul:
  5115                           	opt stack 0
  5116                           tblptru	equ	0xFF8
  5117                           tblptrh	equ	0xFF7
  5118                           tblptrl	equ	0xFF6
  5119                           tablat	equ	0xFF5
  5120                           prodh	equ	0xFF4
  5121                           prodl	equ	0xFF3
  5122                           intcon	equ	0xFF2
  5123                           intcon2	equ	0xFF1
  5124                           postinc0	equ	0xFEE
  5125                           wreg	equ	0xFE8
  5126                           indf1	equ	0xFE7
  5127                           fsr1h	equ	0xFE2
  5128                           fsr1l	equ	0xFE1
  5129                           indf2	equ	0xFDF
  5130                           fsr2h	equ	0xFDA
  5131                           fsr2l	equ	0xFD9
  5132                           status	equ	0xFD8
  5133                           
  5134 ;; *************** function ___awdiv *****************
  5135 ;; Defined at:
  5136 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\awdiv.c"
  5137 ;; Parameters:    Size  Location     Type
  5138 ;;  dividend        2   29[COMRAM] int 
  5139 ;;  divisor         2   31[COMRAM] int 
  5140 ;; Auto vars:     Size  Location     Type
  5141 ;;  quotient        2    2[BANK0 ] int 
  5142 ;;  sign            1    1[BANK0 ] unsigned char 
  5143 ;;  counter         1    0[BANK0 ] unsigned char 
  5144 ;; Return value:  Size  Location     Type
  5145 ;;                  2   29[COMRAM] int 
  5146 ;; Registers used:
  5147 ;;		wreg, status,2, status,0
  5148 ;; Tracked objects:
  5149 ;;		On entry : 0/0
  5150 ;;		On exit  : 0/0
  5151 ;;		Unchanged: 0/0
  5152 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  5153 ;;      Params:         4       0       0       0
  5154 ;;      Locals:         0       4       0       0
  5155 ;;      Temps:          0       0       0       0
  5156 ;;      Totals:         4       4       0       0
  5157 ;;Total ram usage:        8 bytes
  5158 ;; Hardware stack levels used:    1
  5159 ;; Hardware stack levels required when called:    2
  5160 ;; This function calls:
  5161 ;;		Nothing
  5162 ;; This function is called by:
  5163 ;;		_main
  5164 ;;		_battery_measure
  5165 ;; This function uses a non-reentrant model
  5166 ;;
  5167                           
  5168                           	psect	text10
  5169  002330                     __ptext10:
  5170                           	opt stack 0
  5171  002330                     ___awdiv:
  5172                           	opt stack 27
  5173                           
  5174                           ; BSR set to: 0
  5175                           ;incstack = 0
  5176  002330  0E00               	movlw	0
  5177  002332  0100               	movlb	0	; () banked
  5178  002334  6FA4               	movwf	___awdiv@sign& (0+255),b
  5179                           
  5180                           ; BSR set to: 0
  5181  002336  AE21               	btfss	___awdiv@divisor+1,7,c
  5182  002338  D007               	goto	l4684
  5183                           
  5184                           ; BSR set to: 0
  5185  00233A  6C20               	negf	___awdiv@divisor,c
  5186  00233C  1E21               	comf	___awdiv@divisor+1,f,c
  5187  00233E  B0D8               	btfsc	status,0,c
  5188  002340  2A21               	incf	___awdiv@divisor+1,f,c
  5189                           
  5190                           ; BSR set to: 0
  5191  002342  0E01               	movlw	1
  5192  002344  0100               	movlb	0	; () banked
  5193  002346  6FA4               	movwf	___awdiv@sign& (0+255),b
  5194  002348                     l4684:
  5195                           
  5196                           ; BSR set to: 0
  5197  002348  AE1F               	btfss	___awdiv@dividend+1,7,c
  5198  00234A  D007               	goto	l4690
  5199                           
  5200                           ; BSR set to: 0
  5201  00234C  6C1E               	negf	___awdiv@dividend,c
  5202  00234E  1E1F               	comf	___awdiv@dividend+1,f,c
  5203  002350  B0D8               	btfsc	status,0,c
  5204  002352  2A1F               	incf	___awdiv@dividend+1,f,c
  5205                           
  5206                           ; BSR set to: 0
  5207  002354  0E01               	movlw	1
  5208  002356  0100               	movlb	0	; () banked
  5209  002358  1BA4               	xorwf	___awdiv@sign& (0+255),f,b
  5210  00235A                     l4690:
  5211                           
  5212                           ; BSR set to: 0
  5213  00235A  0E00               	movlw	0
  5214  00235C  0100               	movlb	0	; () banked
  5215  00235E  6FA6               	movwf	(___awdiv@quotient+1)& (0+255),b
  5216  002360  0E00               	movlw	0
  5217  002362  6FA5               	movwf	___awdiv@quotient& (0+255),b
  5218                           
  5219                           ; BSR set to: 0
  5220  002364  5020               	movf	___awdiv@divisor,w,c
  5221  002366  1021               	iorwf	___awdiv@divisor+1,w,c
  5222  002368  B4D8               	btfsc	status,2,c
  5223  00236A  D021               	goto	l4712
  5224                           
  5225                           ; BSR set to: 0
  5226  00236C  0E01               	movlw	1
  5227  00236E  0100               	movlb	0	; () banked
  5228  002370  6FA3               	movwf	___awdiv@counter& (0+255),b
  5229  002372  D005               	goto	l4698
  5230  002374                     l4696:
  5231                           
  5232                           ; BSR set to: 0
  5233  002374  90D8               	bcf	status,0,c
  5234  002376  3620               	rlcf	___awdiv@divisor,f,c
  5235  002378  3621               	rlcf	___awdiv@divisor+1,f,c
  5236  00237A  0100               	movlb	0	; () banked
  5237  00237C  2BA3               	incf	___awdiv@counter& (0+255),f,b
  5238  00237E                     l4698:
  5239                           
  5240                           ; BSR set to: 0
  5241  00237E  AE21               	btfss	___awdiv@divisor+1,7,c
  5242  002380  D7F9               	goto	l4696
  5243  002382                     l4700:
  5244                           
  5245                           ; BSR set to: 0
  5246  002382  0100               	movlb	0	; () banked
  5247  002384  90D8               	bcf	status,0,c
  5248  002386  37A5               	rlcf	___awdiv@quotient& (0+255),f,b
  5249  002388  37A6               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
  5250                           
  5251                           ; BSR set to: 0
  5252  00238A  5020               	movf	___awdiv@divisor,w,c
  5253  00238C  5C1E               	subwf	___awdiv@dividend,w,c
  5254  00238E  5021               	movf	___awdiv@divisor+1,w,c
  5255  002390  581F               	subwfb	___awdiv@dividend+1,w,c
  5256  002392  A0D8               	btfss	status,0,c
  5257  002394  D006               	goto	l4708
  5258                           
  5259                           ; BSR set to: 0
  5260  002396  5020               	movf	___awdiv@divisor,w,c
  5261  002398  5E1E               	subwf	___awdiv@dividend,f,c
  5262  00239A  5021               	movf	___awdiv@divisor+1,w,c
  5263  00239C  5A1F               	subwfb	___awdiv@dividend+1,f,c
  5264                           
  5265                           ; BSR set to: 0
  5266  00239E  0100               	movlb	0	; () banked
  5267  0023A0  81A5               	bsf	___awdiv@quotient& (0+255),0,b
  5268  0023A2                     l4708:
  5269                           
  5270                           ; BSR set to: 0
  5271  0023A2  90D8               	bcf	status,0,c
  5272  0023A4  3221               	rrcf	___awdiv@divisor+1,f,c
  5273  0023A6  3220               	rrcf	___awdiv@divisor,f,c
  5274                           
  5275                           ; BSR set to: 0
  5276  0023A8  0100               	movlb	0	; () banked
  5277  0023AA  2FA3               	decfsz	___awdiv@counter& (0+255),f,b
  5278  0023AC  D7EA               	goto	l4700
  5279  0023AE                     l4712:
  5280                           
  5281                           ; BSR set to: 0
  5282  0023AE  0100               	movlb	0	; () banked
  5283  0023B0  51A4               	movf	___awdiv@sign& (0+255),w,b
  5284  0023B2  0100               	movlb	0	; () banked
  5285  0023B4  B4D8               	btfsc	status,2,c
  5286  0023B6  D005               	goto	l4716
  5287                           
  5288                           ; BSR set to: 0
  5289  0023B8  0100               	movlb	0	; () banked
  5290  0023BA  6DA5               	negf	___awdiv@quotient& (0+255),b
  5291  0023BC  1FA6               	comf	(___awdiv@quotient+1)& (0+255),f,b
  5292  0023BE  B0D8               	btfsc	status,0,c
  5293  0023C0  2BA6               	incf	(___awdiv@quotient+1)& (0+255),f,b
  5294  0023C2                     l4716:
  5295                           
  5296                           ; BSR set to: 0
  5297  0023C2  C0A5  F01E         	movff	___awdiv@quotient,?___awdiv
  5298  0023C6  C0A6  F01F         	movff	___awdiv@quotient+1,?___awdiv+1
  5299  0023CA  0012               	return	
  5300  0023CC                     __end_of___awdiv:
  5301                           	opt stack 0
  5302                           tblptru	equ	0xFF8
  5303                           tblptrh	equ	0xFF7
  5304                           tblptrl	equ	0xFF6
  5305                           tablat	equ	0xFF5
  5306                           prodh	equ	0xFF4
  5307                           prodl	equ	0xFF3
  5308                           intcon	equ	0xFF2
  5309                           intcon2	equ	0xFF1
  5310                           postinc0	equ	0xFEE
  5311                           wreg	equ	0xFE8
  5312                           indf1	equ	0xFE7
  5313                           fsr1h	equ	0xFE2
  5314                           fsr1l	equ	0xFE1
  5315                           indf2	equ	0xFDF
  5316                           fsr2h	equ	0xFDA
  5317                           fsr2l	equ	0xFD9
  5318                           status	equ	0xFD8
  5319                           
  5320 ;; *************** function _CANsendMessage *****************
  5321 ;; Defined at:
  5322 ;;		line 294 in file "CANlib.h"
  5323 ;; Parameters:    Size  Location     Type
  5324 ;;  identifier      4    0[BANK0 ] unsigned long 
  5325 ;;  data            2    4[BANK0 ] PTR unsigned char 
  5326 ;;		 -> data_array1(8), data_array(8), NULL(0), 
  5327 ;;  dataLength      1    6[BANK0 ] unsigned char 
  5328 ;;  flags           1    7[BANK0 ] enum E16866
  5329 ;; Auto vars:     Size  Location     Type
  5330 ;;  tamp            4    8[BANK0 ] unsigned long 
  5331 ;; Return value:  Size  Location     Type
  5332 ;;		None               void
  5333 ;; Registers used:
  5334 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5335 ;; Tracked objects:
  5336 ;;		On entry : 0/0
  5337 ;;		On exit  : 0/0
  5338 ;;		Unchanged: 0/0
  5339 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  5340 ;;      Params:         0       8       0       0
  5341 ;;      Locals:         0       4       0       0
  5342 ;;      Temps:          4       0       0       0
  5343 ;;      Totals:         4      12       0       0
  5344 ;;Total ram usage:       16 bytes
  5345 ;; Hardware stack levels used:    1
  5346 ;; Hardware stack levels required when called:    2
  5347 ;; This function calls:
  5348 ;;		Nothing
  5349 ;; This function is called by:
  5350 ;;		_main
  5351 ;;		_send_data
  5352 ;;		_battery_measure
  5353 ;; This function uses a non-reentrant model
  5354 ;;
  5355                           
  5356                           	psect	text11
  5357  000BF4                     __ptext11:
  5358                           	opt stack 0
  5359  000BF4                     _CANsendMessage:
  5360                           	opt stack 27
  5361                           
  5362                           ;CANlib.h: 296: unsigned long tamp;
  5363                           ;CANlib.h: 298: if (TXB0CONbits.TXREQ == 0)
  5364                           
  5365                           ; BSR set to: 0
  5366                           ;incstack = 0
  5367  000BF4  010F               	movlb	15	; () banked
  5368  000BF6  B740               	btfsc	64,3,b	;volatile
  5369  000BF8  D13B               	goto	l365
  5370                           
  5371                           ; BSR set to: 15
  5372                           ;CANlib.h: 299: { TXB0DLC = dataLength;
  5373  000BFA  C0A9  FF45         	movff	CANsendMessage@dataLength,3909	;volatile
  5374                           
  5375                           ;CANlib.h: 300: if (0b01000000 & flags)
  5376  000BFE  0100               	movlb	0	; () banked
  5377  000C00  ADAA               	btfss	CANsendMessage@flags& (0+255),6,b
  5378  000C02  D003               	goto	l366
  5379                           
  5380                           ; BSR set to: 0
  5381                           ;CANlib.h: 301: TXB0DLCbits.TXRTR = 0x01;
  5382  000C04  010F               	movlb	15	; () banked
  5383  000C06  8D45               	bsf	69,6,b	;volatile
  5384  000C08  D002               	goto	l367
  5385  000C0A                     l366:
  5386                           
  5387                           ; BSR set to: 0
  5388                           ;CANlib.h: 302: else
  5389                           ;CANlib.h: 303: TXB0DLCbits.TXRTR = 0x00;
  5390  000C0A  010F               	movlb	15	; () banked
  5391  000C0C  9D45               	bcf	69,6,b	;volatile
  5392  000C0E                     l367:
  5393                           
  5394                           ; BSR set to: 15
  5395                           ;CANlib.h: 305: if (CAN_TX_FRAME_MASK & flags)
  5396  000C0E  0100               	movlb	0	; () banked
  5397  000C10  A7AA               	btfss	CANsendMessage@flags& (0+255),3,b
  5398  000C12  D077               	goto	l368
  5399                           
  5400                           ; BSR set to: 0
  5401                           ;CANlib.h: 306: {
  5402                           ;CANlib.h: 308: tamp = identifier & 0x000000FF;
  5403  000C14  0100               	movlb	0	; () banked
  5404  000C16  51A3               	movf	CANsendMessage@identifier& (0+255),w,b
  5405  000C18  0100               	movlb	0	; () banked
  5406  000C1A  6FAB               	movwf	CANsendMessage@tamp& (0+255),b
  5407  000C1C  6BAC               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  5408  000C1E  6BAD               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  5409  000C20  6BAE               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  5410                           
  5411                           ; BSR set to: 0
  5412                           ;CANlib.h: 309: TXB0EIDL = (unsigned char) tamp;
  5413  000C22  C0AB  FF44         	movff	CANsendMessage@tamp,3908	;volatile
  5414                           
  5415                           ; BSR set to: 0
  5416                           ;CANlib.h: 311: tamp = identifier & 0x0000FF00;
  5417  000C26  0E00               	movlw	0
  5418  000C28  0100               	movlb	0	; () banked
  5419  000C2A  15A3               	andwf	CANsendMessage@identifier& (0+255),w,b
  5420  000C2C  0100               	movlb	0	; () banked
  5421  000C2E  6FAB               	movwf	CANsendMessage@tamp& (0+255),b
  5422  000C30  0EFF               	movlw	255
  5423  000C32  0100               	movlb	0	; () banked
  5424  000C34  15A4               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
  5425  000C36  0100               	movlb	0	; () banked
  5426  000C38  6FAC               	movwf	(CANsendMessage@tamp+1)& (0+255),b
  5427  000C3A  0E00               	movlw	0
  5428  000C3C  0100               	movlb	0	; () banked
  5429  000C3E  15A5               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
  5430  000C40  0100               	movlb	0	; () banked
  5431  000C42  6FAD               	movwf	(CANsendMessage@tamp+2)& (0+255),b
  5432  000C44  0E00               	movlw	0
  5433  000C46  0100               	movlb	0	; () banked
  5434  000C48  15A6               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
  5435  000C4A  0100               	movlb	0	; () banked
  5436  000C4C  6FAE               	movwf	(CANsendMessage@tamp+3)& (0+255),b
  5437                           
  5438                           ; BSR set to: 0
  5439                           ;CANlib.h: 312: tamp = tamp >> 8;
  5440  000C4E  C0AB  F01E         	movff	CANsendMessage@tamp,??_CANsendMessage
  5441  000C52  C0AC  F01F         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
  5442  000C56  C0AD  F020         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
  5443  000C5A  C0AE  F021         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
  5444  000C5E  C01F  F01E         	movff	??_CANsendMessage+1,??_CANsendMessage
  5445  000C62  C020  F01F         	movff	??_CANsendMessage+2,??_CANsendMessage+1
  5446  000C66  C021  F020         	movff	??_CANsendMessage+3,??_CANsendMessage+2
  5447  000C6A  6A21               	clrf	??_CANsendMessage+3,c
  5448  000C6C  C01E  F0AB         	movff	??_CANsendMessage,CANsendMessage@tamp
  5449  000C70  C01F  F0AC         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  5450  000C74  C020  F0AD         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  5451  000C78  C021  F0AE         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  5452                           
  5453                           ; BSR set to: 0
  5454                           ;CANlib.h: 313: TXB0EIDH = (unsigned char) tamp;
  5455  000C7C  C0AB  FF43         	movff	CANsendMessage@tamp,3907	;volatile
  5456                           
  5457                           ; BSR set to: 0
  5458                           ;CANlib.h: 315: TXB0SIDL = 0x00;
  5459  000C80  0E00               	movlw	0
  5460  000C82  010F               	movlb	15	; () banked
  5461  000C84  6F42               	movwf	66,b	;volatile
  5462                           
  5463                           ; BSR set to: 15
  5464                           ;CANlib.h: 316: TXB0SIDLbits.EXIDE = 0x01;
  5465  000C86  010F               	movlb	15	; () banked
  5466  000C88  8742               	bsf	66,3,b	;volatile
  5467                           
  5468                           ; BSR set to: 15
  5469                           ;CANlib.h: 318: if (identifier & 0x00010000)
  5470  000C8A  0100               	movlb	0	; () banked
  5471  000C8C  A1A5               	btfss	(CANsendMessage@identifier+2)& (0+255),0,b
  5472  000C8E  D002               	goto	l369
  5473                           
  5474                           ; BSR set to: 0
  5475                           ;CANlib.h: 319: TXB0SIDLbits.EID16 = 0x01;
  5476  000C90  010F               	movlb	15	; () banked
  5477  000C92  8142               	bsf	66,0,b	;volatile
  5478  000C94                     l369:
  5479                           
  5480                           ;CANlib.h: 320: if (identifier & 0x00020000)
  5481  000C94  0100               	movlb	0	; () banked
  5482  000C96  A3A5               	btfss	(CANsendMessage@identifier+2)& (0+255),1,b
  5483  000C98  D002               	goto	l370
  5484                           
  5485                           ; BSR set to: 0
  5486                           ;CANlib.h: 321: TXB0SIDLbits.EID17 = 0x01;
  5487  000C9A  010F               	movlb	15	; () banked
  5488  000C9C  8342               	bsf	66,1,b	;volatile
  5489  000C9E                     l370:
  5490                           
  5491                           ;CANlib.h: 322: if (identifier & 0x00040000)
  5492  000C9E  0100               	movlb	0	; () banked
  5493  000CA0  A5A5               	btfss	(CANsendMessage@identifier+2)& (0+255),2,b
  5494  000CA2  D002               	goto	l371
  5495                           
  5496                           ; BSR set to: 0
  5497                           ;CANlib.h: 323: TXB0SIDLbits.SID0 = 0x01;
  5498  000CA4  010F               	movlb	15	; () banked
  5499  000CA6  8B42               	bsf	66,5,b	;volatile
  5500  000CA8                     l371:
  5501                           
  5502                           ;CANlib.h: 324: if (identifier & 0x00080000)
  5503  000CA8  0100               	movlb	0	; () banked
  5504  000CAA  A7A5               	btfss	(CANsendMessage@identifier+2)& (0+255),3,b
  5505  000CAC  D002               	goto	l372
  5506                           
  5507                           ; BSR set to: 0
  5508                           ;CANlib.h: 325: TXB0SIDLbits.SID1 = 0x01;
  5509  000CAE  010F               	movlb	15	; () banked
  5510  000CB0  8D42               	bsf	66,6,b	;volatile
  5511  000CB2                     l372:
  5512                           
  5513                           ;CANlib.h: 326: if (identifier & 0x00100000)
  5514  000CB2  0100               	movlb	0	; () banked
  5515  000CB4  A9A5               	btfss	(CANsendMessage@identifier+2)& (0+255),4,b
  5516  000CB6  D002               	goto	l4472
  5517                           
  5518                           ; BSR set to: 0
  5519                           ;CANlib.h: 327: TXB0SIDLbits.SID2 = 0x01;
  5520  000CB8  010F               	movlb	15	; () banked
  5521  000CBA  8F42               	bsf	66,7,b	;volatile
  5522  000CBC                     l4472:
  5523                           
  5524                           ;CANlib.h: 329: tamp = (identifier >> 21);
  5525  000CBC  C0A3  F01E         	movff	CANsendMessage@identifier,??_CANsendMessage
  5526  000CC0  C0A4  F01F         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
  5527  000CC4  C0A5  F020         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
  5528  000CC8  C0A6  F021         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
  5529  000CCC  0E16               	movlw	22
  5530  000CCE  D005               	goto	u5800
  5531  000CD0                     u5805:
  5532  000CD0  90D8               	bcf	status,0,c
  5533  000CD2  3221               	rrcf	??_CANsendMessage+3,f,c
  5534  000CD4  3220               	rrcf	??_CANsendMessage+2,f,c
  5535  000CD6  321F               	rrcf	??_CANsendMessage+1,f,c
  5536  000CD8  321E               	rrcf	??_CANsendMessage,f,c
  5537  000CDA                     u5800:
  5538  000CDA  2EE8               	decfsz	wreg,f,c
  5539  000CDC  D7F9               	goto	u5805
  5540  000CDE  C01E  F0AB         	movff	??_CANsendMessage,CANsendMessage@tamp
  5541  000CE2  C01F  F0AC         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  5542  000CE6  C020  F0AD         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  5543  000CEA  C021  F0AE         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  5544                           
  5545                           ;CANlib.h: 330: tamp = tamp & 0x000000FF;
  5546  000CEE  0100               	movlb	0	; () banked
  5547  000CF0  51AB               	movf	CANsendMessage@tamp& (0+255),w,b
  5548  000CF2  0100               	movlb	0	; () banked
  5549  000CF4  6FAB               	movwf	CANsendMessage@tamp& (0+255),b
  5550  000CF6  6BAC               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  5551  000CF8  6BAD               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  5552  000CFA  6BAE               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  5553                           
  5554                           ; BSR set to: 0
  5555                           ;CANlib.h: 331: TXB0SIDH = (unsigned char) tamp;
  5556  000CFC  C0AB  FF41         	movff	CANsendMessage@tamp,3905	;volatile
  5557                           
  5558                           ;CANlib.h: 332: }
  5559  000D00  D057               	goto	l4492
  5560  000D02                     l368:
  5561                           
  5562                           ; BSR set to: 0
  5563                           ;CANlib.h: 334: else
  5564                           ;CANlib.h: 336: {
  5565                           ;CANlib.h: 337: TXB0SIDLbits.EXIDE = 0x00;
  5566  000D02  010F               	movlb	15	; () banked
  5567  000D04  9742               	bcf	66,3,b	;volatile
  5568                           
  5569                           ; BSR set to: 15
  5570                           ;CANlib.h: 339: tamp = (identifier >> 3);
  5571  000D06  C0A3  F01E         	movff	CANsendMessage@identifier,??_CANsendMessage
  5572  000D0A  C0A4  F01F         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
  5573  000D0E  C0A5  F020         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
  5574  000D12  C0A6  F021         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
  5575  000D16  0E04               	movlw	4
  5576  000D18  D005               	goto	u5810
  5577  000D1A                     u5815:
  5578  000D1A  90D8               	bcf	status,0,c
  5579  000D1C  3221               	rrcf	??_CANsendMessage+3,f,c
  5580  000D1E  3220               	rrcf	??_CANsendMessage+2,f,c
  5581  000D20  321F               	rrcf	??_CANsendMessage+1,f,c
  5582  000D22  321E               	rrcf	??_CANsendMessage,f,c
  5583  000D24                     u5810:
  5584  000D24  2EE8               	decfsz	wreg,f,c
  5585  000D26  D7F9               	goto	u5815
  5586  000D28  C01E  F0AB         	movff	??_CANsendMessage,CANsendMessage@tamp
  5587  000D2C  C01F  F0AC         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  5588  000D30  C020  F0AD         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  5589  000D34  C021  F0AE         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  5590                           
  5591                           ; BSR set to: 15
  5592                           ;CANlib.h: 340: tamp = tamp & 0x000000FF;
  5593  000D38  0100               	movlb	0	; () banked
  5594  000D3A  51AB               	movf	CANsendMessage@tamp& (0+255),w,b
  5595  000D3C  0100               	movlb	0	; () banked
  5596  000D3E  6FAB               	movwf	CANsendMessage@tamp& (0+255),b
  5597  000D40  6BAC               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  5598  000D42  6BAD               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  5599  000D44  6BAE               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  5600                           
  5601                           ; BSR set to: 0
  5602                           ;CANlib.h: 341: TXB0SIDH = (unsigned char) tamp;
  5603  000D46  C0AB  FF41         	movff	CANsendMessage@tamp,3905	;volatile
  5604                           
  5605                           ; BSR set to: 0
  5606                           ;CANlib.h: 343: tamp = identifier & 0x00000007;
  5607  000D4A  0E07               	movlw	7
  5608  000D4C  0100               	movlb	0	; () banked
  5609  000D4E  15A3               	andwf	CANsendMessage@identifier& (0+255),w,b
  5610  000D50  0100               	movlb	0	; () banked
  5611  000D52  6FAB               	movwf	CANsendMessage@tamp& (0+255),b
  5612  000D54  0E00               	movlw	0
  5613  000D56  0100               	movlb	0	; () banked
  5614  000D58  15A4               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
  5615  000D5A  0100               	movlb	0	; () banked
  5616  000D5C  6FAC               	movwf	(CANsendMessage@tamp+1)& (0+255),b
  5617  000D5E  0E00               	movlw	0
  5618  000D60  0100               	movlb	0	; () banked
  5619  000D62  15A5               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
  5620  000D64  0100               	movlb	0	; () banked
  5621  000D66  6FAD               	movwf	(CANsendMessage@tamp+2)& (0+255),b
  5622  000D68  0E00               	movlw	0
  5623  000D6A  0100               	movlb	0	; () banked
  5624  000D6C  15A6               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
  5625  000D6E  0100               	movlb	0	; () banked
  5626  000D70  6FAE               	movwf	(CANsendMessage@tamp+3)& (0+255),b
  5627                           
  5628                           ; BSR set to: 0
  5629                           ;CANlib.h: 344: tamp = tamp << 5;
  5630  000D72  C0AB  F01E         	movff	CANsendMessage@tamp,??_CANsendMessage
  5631  000D76  C0AC  F01F         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
  5632  000D7A  C0AD  F020         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
  5633  000D7E  C0AE  F021         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
  5634  000D82  0E05               	movlw	5
  5635  000D84                     u5825:
  5636  000D84  90D8               	bcf	status,0,c
  5637  000D86  361E               	rlcf	??_CANsendMessage,f,c
  5638  000D88  361F               	rlcf	??_CANsendMessage+1,f,c
  5639  000D8A  3620               	rlcf	??_CANsendMessage+2,f,c
  5640  000D8C  3621               	rlcf	??_CANsendMessage+3,f,c
  5641  000D8E  2EE8               	decfsz	wreg,f,c
  5642  000D90  D7F9               	goto	u5825
  5643  000D92  C01E  F0AB         	movff	??_CANsendMessage,CANsendMessage@tamp
  5644  000D96  C01F  F0AC         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  5645  000D9A  C020  F0AD         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  5646  000D9E  C021  F0AE         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  5647                           
  5648                           ; BSR set to: 0
  5649                           ;CANlib.h: 345: TXB0SIDL = TXB0SIDL & 0b00011111;
  5650  000DA2  010F               	movlb	15	; () banked
  5651  000DA4  5142               	movf	66,w,b	;volatile
  5652  000DA6  0B1F               	andlw	31
  5653  000DA8  010F               	movlb	15	; () banked
  5654  000DAA  6F42               	movwf	66,b	;volatile
  5655                           
  5656                           ; BSR set to: 15
  5657                           ;CANlib.h: 346: TXB0SIDL = (unsigned char) tamp;
  5658  000DAC  C0AB  FF42         	movff	CANsendMessage@tamp,3906	;volatile
  5659  000DB0                     l4492:
  5660                           
  5661                           ;CANlib.h: 347: }
  5662                           ;CANlib.h: 349: if (0b00000001 & flags)
  5663  000DB0  0100               	movlb	0	; () banked
  5664  000DB2  A1AA               	btfss	CANsendMessage@flags& (0+255),0,b
  5665  000DB4  D003               	goto	l375
  5666                           
  5667                           ; BSR set to: 0
  5668                           ;CANlib.h: 350: TXB0CONbits.TXPRI0 = 0x01;
  5669  000DB6  010F               	movlb	15	; () banked
  5670  000DB8  8140               	bsf	64,0,b	;volatile
  5671  000DBA  D002               	goto	l376
  5672  000DBC                     l375:
  5673                           
  5674                           ; BSR set to: 0
  5675                           ;CANlib.h: 351: else
  5676                           ;CANlib.h: 352: TXB0CONbits.TXPRI0 = 0x00;
  5677  000DBC  010F               	movlb	15	; () banked
  5678  000DBE  9140               	bcf	64,0,b	;volatile
  5679  000DC0                     l376:
  5680                           
  5681                           ; BSR set to: 15
  5682                           ;CANlib.h: 353: if (0b00000010 & flags)
  5683  000DC0  0100               	movlb	0	; () banked
  5684  000DC2  A3AA               	btfss	CANsendMessage@flags& (0+255),1,b
  5685  000DC4  D003               	goto	l377
  5686                           
  5687                           ; BSR set to: 0
  5688                           ;CANlib.h: 354: TXB0CONbits.TXPRI1 = 0x01;
  5689  000DC6  010F               	movlb	15	; () banked
  5690  000DC8  8340               	bsf	64,1,b	;volatile
  5691  000DCA  D002               	goto	l4498
  5692  000DCC                     l377:
  5693                           
  5694                           ; BSR set to: 0
  5695                           ;CANlib.h: 355: else
  5696                           ;CANlib.h: 356: TXB0CONbits.TXPRI1 = 0x00;
  5697  000DCC  010F               	movlb	15	; () banked
  5698  000DCE  9340               	bcf	64,1,b	;volatile
  5699  000DD0                     l4498:
  5700                           
  5701                           ; BSR set to: 15
  5702                           ;CANlib.h: 358: TXB0D0 = data[0];
  5703  000DD0  C0A7  FFD9         	movff	CANsendMessage@data,fsr2l
  5704  000DD4  C0A8  FFDA         	movff	CANsendMessage@data+1,fsr2h
  5705  000DD8  50DF               	movf	indf2,w,c
  5706  000DDA  010F               	movlb	15	; () banked
  5707  000DDC  6F46               	movwf	70,b	;volatile
  5708                           
  5709                           ; BSR set to: 15
  5710                           ;CANlib.h: 359: TXB0D1 = data[1];
  5711  000DDE  0100               	movlb	0	; () banked
  5712  000DE0  EE20 F001          	lfsr	2,1
  5713  000DE4  51A7               	movf	CANsendMessage@data& (0+255),w,b
  5714  000DE6  26D9               	addwf	fsr2l,f,c
  5715  000DE8  51A8               	movf	(CANsendMessage@data+1)& (0+255),w,b
  5716  000DEA  22DA               	addwfc	fsr2h,f,c
  5717  000DEC  50DF               	movf	indf2,w,c
  5718  000DEE  010F               	movlb	15	; () banked
  5719  000DF0  6F47               	movwf	71,b	;volatile
  5720                           
  5721                           ; BSR set to: 15
  5722                           ;CANlib.h: 360: TXB0D2 = data[2];
  5723  000DF2  0100               	movlb	0	; () banked
  5724  000DF4  EE20 F002          	lfsr	2,2
  5725  000DF8  51A7               	movf	CANsendMessage@data& (0+255),w,b
  5726  000DFA  26D9               	addwf	fsr2l,f,c
  5727  000DFC  51A8               	movf	(CANsendMessage@data+1)& (0+255),w,b
  5728  000DFE  22DA               	addwfc	fsr2h,f,c
  5729  000E00  50DF               	movf	indf2,w,c
  5730  000E02  010F               	movlb	15	; () banked
  5731  000E04  6F48               	movwf	72,b	;volatile
  5732                           
  5733                           ; BSR set to: 15
  5734                           ;CANlib.h: 361: TXB0D3 = data[3];
  5735  000E06  0100               	movlb	0	; () banked
  5736  000E08  EE20 F003          	lfsr	2,3
  5737  000E0C  51A7               	movf	CANsendMessage@data& (0+255),w,b
  5738  000E0E  26D9               	addwf	fsr2l,f,c
  5739  000E10  51A8               	movf	(CANsendMessage@data+1)& (0+255),w,b
  5740  000E12  22DA               	addwfc	fsr2h,f,c
  5741  000E14  50DF               	movf	indf2,w,c
  5742  000E16  010F               	movlb	15	; () banked
  5743  000E18  6F49               	movwf	73,b	;volatile
  5744                           
  5745                           ; BSR set to: 15
  5746                           ;CANlib.h: 362: TXB0D4 = data[4];
  5747  000E1A  0100               	movlb	0	; () banked
  5748  000E1C  EE20 F004          	lfsr	2,4
  5749  000E20  51A7               	movf	CANsendMessage@data& (0+255),w,b
  5750  000E22  26D9               	addwf	fsr2l,f,c
  5751  000E24  51A8               	movf	(CANsendMessage@data+1)& (0+255),w,b
  5752  000E26  22DA               	addwfc	fsr2h,f,c
  5753  000E28  50DF               	movf	indf2,w,c
  5754  000E2A  010F               	movlb	15	; () banked
  5755  000E2C  6F4A               	movwf	74,b	;volatile
  5756                           
  5757                           ; BSR set to: 15
  5758                           ;CANlib.h: 363: TXB0D5 = data[5];
  5759  000E2E  0100               	movlb	0	; () banked
  5760  000E30  EE20 F005          	lfsr	2,5
  5761  000E34  51A7               	movf	CANsendMessage@data& (0+255),w,b
  5762  000E36  26D9               	addwf	fsr2l,f,c
  5763  000E38  51A8               	movf	(CANsendMessage@data+1)& (0+255),w,b
  5764  000E3A  22DA               	addwfc	fsr2h,f,c
  5765  000E3C  50DF               	movf	indf2,w,c
  5766  000E3E  010F               	movlb	15	; () banked
  5767  000E40  6F4B               	movwf	75,b	;volatile
  5768                           
  5769                           ; BSR set to: 15
  5770                           ;CANlib.h: 364: TXB0D6 = data[6];
  5771  000E42  0100               	movlb	0	; () banked
  5772  000E44  EE20 F006          	lfsr	2,6
  5773  000E48  51A7               	movf	CANsendMessage@data& (0+255),w,b
  5774  000E4A  26D9               	addwf	fsr2l,f,c
  5775  000E4C  51A8               	movf	(CANsendMessage@data+1)& (0+255),w,b
  5776  000E4E  22DA               	addwfc	fsr2h,f,c
  5777  000E50  50DF               	movf	indf2,w,c
  5778  000E52  010F               	movlb	15	; () banked
  5779  000E54  6F4C               	movwf	76,b	;volatile
  5780                           
  5781                           ; BSR set to: 15
  5782                           ;CANlib.h: 365: TXB0D7 = data[7];
  5783  000E56  0100               	movlb	0	; () banked
  5784  000E58  EE20 F007          	lfsr	2,7
  5785  000E5C  51A7               	movf	CANsendMessage@data& (0+255),w,b
  5786  000E5E  26D9               	addwf	fsr2l,f,c
  5787  000E60  51A8               	movf	(CANsendMessage@data+1)& (0+255),w,b
  5788  000E62  22DA               	addwfc	fsr2h,f,c
  5789  000E64  50DF               	movf	indf2,w,c
  5790  000E66  010F               	movlb	15	; () banked
  5791  000E68  6F4D               	movwf	77,b	;volatile
  5792                           
  5793                           ; BSR set to: 15
  5794                           ;CANlib.h: 367: TXB0CONbits.TXREQ = 0x01;
  5795  000E6A  010F               	movlb	15	; () banked
  5796  000E6C  8740               	bsf	64,3,b	;volatile
  5797                           
  5798                           ; BSR set to: 15
  5799                           ;CANlib.h: 368: return;
  5800  000E6E  0012               	return	
  5801  000E70                     l365:
  5802                           
  5803                           ; BSR set to: 15
  5804                           ;CANlib.h: 369: }
  5805                           ;CANlib.h: 373: if (TXB1CONbits.TXREQ == 0)
  5806  000E70  010F               	movlb	15	; () banked
  5807  000E72  B730               	btfsc	48,3,b	;volatile
  5808  000E74  D13B               	goto	l380
  5809                           
  5810                           ; BSR set to: 15
  5811                           ;CANlib.h: 374: { TXB1DLC = dataLength;
  5812  000E76  C0A9  FF35         	movff	CANsendMessage@dataLength,3893	;volatile
  5813                           
  5814                           ;CANlib.h: 376: if (0b01000000 & flags)
  5815  000E7A  0100               	movlb	0	; () banked
  5816  000E7C  ADAA               	btfss	CANsendMessage@flags& (0+255),6,b
  5817  000E7E  D003               	goto	l381
  5818                           
  5819                           ; BSR set to: 0
  5820                           ;CANlib.h: 377: TXB1DLCbits.TXRTR = 0x01;
  5821  000E80  010F               	movlb	15	; () banked
  5822  000E82  8D35               	bsf	53,6,b	;volatile
  5823  000E84  D002               	goto	l382
  5824  000E86                     l381:
  5825                           
  5826                           ; BSR set to: 0
  5827                           ;CANlib.h: 378: else
  5828                           ;CANlib.h: 379: TXB1DLCbits.TXRTR = 0x00;
  5829  000E86  010F               	movlb	15	; () banked
  5830  000E88  9D35               	bcf	53,6,b	;volatile
  5831  000E8A                     l382:
  5832                           
  5833                           ; BSR set to: 15
  5834                           ;CANlib.h: 381: if (CAN_TX_FRAME_MASK & flags)
  5835  000E8A  0100               	movlb	0	; () banked
  5836  000E8C  A7AA               	btfss	CANsendMessage@flags& (0+255),3,b
  5837  000E8E  D077               	goto	l383
  5838                           
  5839                           ; BSR set to: 0
  5840                           ;CANlib.h: 382: {
  5841                           ;CANlib.h: 383: tamp = identifier & 0x000000FF;
  5842  000E90  0100               	movlb	0	; () banked
  5843  000E92  51A3               	movf	CANsendMessage@identifier& (0+255),w,b
  5844  000E94  0100               	movlb	0	; () banked
  5845  000E96  6FAB               	movwf	CANsendMessage@tamp& (0+255),b
  5846  000E98  6BAC               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  5847  000E9A  6BAD               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  5848  000E9C  6BAE               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  5849                           
  5850                           ; BSR set to: 0
  5851                           ;CANlib.h: 384: TXB1EIDL = (unsigned char) tamp;
  5852  000E9E  C0AB  FF34         	movff	CANsendMessage@tamp,3892	;volatile
  5853                           
  5854                           ; BSR set to: 0
  5855                           ;CANlib.h: 386: tamp = identifier & 0x0000FF00;
  5856  000EA2  0E00               	movlw	0
  5857  000EA4  0100               	movlb	0	; () banked
  5858  000EA6  15A3               	andwf	CANsendMessage@identifier& (0+255),w,b
  5859  000EA8  0100               	movlb	0	; () banked
  5860  000EAA  6FAB               	movwf	CANsendMessage@tamp& (0+255),b
  5861  000EAC  0EFF               	movlw	255
  5862  000EAE  0100               	movlb	0	; () banked
  5863  000EB0  15A4               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
  5864  000EB2  0100               	movlb	0	; () banked
  5865  000EB4  6FAC               	movwf	(CANsendMessage@tamp+1)& (0+255),b
  5866  000EB6  0E00               	movlw	0
  5867  000EB8  0100               	movlb	0	; () banked
  5868  000EBA  15A5               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
  5869  000EBC  0100               	movlb	0	; () banked
  5870  000EBE  6FAD               	movwf	(CANsendMessage@tamp+2)& (0+255),b
  5871  000EC0  0E00               	movlw	0
  5872  000EC2  0100               	movlb	0	; () banked
  5873  000EC4  15A6               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
  5874  000EC6  0100               	movlb	0	; () banked
  5875  000EC8  6FAE               	movwf	(CANsendMessage@tamp+3)& (0+255),b
  5876                           
  5877                           ; BSR set to: 0
  5878                           ;CANlib.h: 387: tamp = tamp >> 8;
  5879  000ECA  C0AB  F01E         	movff	CANsendMessage@tamp,??_CANsendMessage
  5880  000ECE  C0AC  F01F         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
  5881  000ED2  C0AD  F020         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
  5882  000ED6  C0AE  F021         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
  5883  000EDA  C01F  F01E         	movff	??_CANsendMessage+1,??_CANsendMessage
  5884  000EDE  C020  F01F         	movff	??_CANsendMessage+2,??_CANsendMessage+1
  5885  000EE2  C021  F020         	movff	??_CANsendMessage+3,??_CANsendMessage+2
  5886  000EE6  6A21               	clrf	??_CANsendMessage+3,c
  5887  000EE8  C01E  F0AB         	movff	??_CANsendMessage,CANsendMessage@tamp
  5888  000EEC  C01F  F0AC         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  5889  000EF0  C020  F0AD         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  5890  000EF4  C021  F0AE         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  5891                           
  5892                           ; BSR set to: 0
  5893                           ;CANlib.h: 388: TXB1EIDH = (unsigned char) tamp;
  5894  000EF8  C0AB  FF33         	movff	CANsendMessage@tamp,3891	;volatile
  5895                           
  5896                           ; BSR set to: 0
  5897                           ;CANlib.h: 390: TXB1SIDL = 0x00;
  5898  000EFC  0E00               	movlw	0
  5899  000EFE  010F               	movlb	15	; () banked
  5900  000F00  6F32               	movwf	50,b	;volatile
  5901                           
  5902                           ; BSR set to: 15
  5903                           ;CANlib.h: 391: TXB1SIDLbits.EXIDE = 0x01;
  5904  000F02  010F               	movlb	15	; () banked
  5905  000F04  8732               	bsf	50,3,b	;volatile
  5906                           
  5907                           ; BSR set to: 15
  5908                           ;CANlib.h: 393: if (identifier & 0x00010000)
  5909  000F06  0100               	movlb	0	; () banked
  5910  000F08  A1A5               	btfss	(CANsendMessage@identifier+2)& (0+255),0,b
  5911  000F0A  D002               	goto	l384
  5912                           
  5913                           ; BSR set to: 0
  5914                           ;CANlib.h: 394: TXB1SIDLbits.EID16 = 0x01;
  5915  000F0C  010F               	movlb	15	; () banked
  5916  000F0E  8132               	bsf	50,0,b	;volatile
  5917  000F10                     l384:
  5918                           
  5919                           ;CANlib.h: 395: if (identifier & 0x00020000)
  5920  000F10  0100               	movlb	0	; () banked
  5921  000F12  A3A5               	btfss	(CANsendMessage@identifier+2)& (0+255),1,b
  5922  000F14  D002               	goto	l385
  5923                           
  5924                           ; BSR set to: 0
  5925                           ;CANlib.h: 396: TXB1SIDLbits.EID17 = 0x01;
  5926  000F16  010F               	movlb	15	; () banked
  5927  000F18  8332               	bsf	50,1,b	;volatile
  5928  000F1A                     l385:
  5929                           
  5930                           ;CANlib.h: 397: if (identifier & 0x00040000)
  5931  000F1A  0100               	movlb	0	; () banked
  5932  000F1C  A5A5               	btfss	(CANsendMessage@identifier+2)& (0+255),2,b
  5933  000F1E  D002               	goto	l386
  5934                           
  5935                           ; BSR set to: 0
  5936                           ;CANlib.h: 398: TXB1SIDLbits.SID0 = 0x01;
  5937  000F20  010F               	movlb	15	; () banked
  5938  000F22  8B32               	bsf	50,5,b	;volatile
  5939  000F24                     l386:
  5940                           
  5941                           ;CANlib.h: 399: if (identifier & 0x00080000)
  5942  000F24  0100               	movlb	0	; () banked
  5943  000F26  A7A5               	btfss	(CANsendMessage@identifier+2)& (0+255),3,b
  5944  000F28  D002               	goto	l387
  5945                           
  5946                           ; BSR set to: 0
  5947                           ;CANlib.h: 400: TXB1SIDLbits.SID1 = 0x01;
  5948  000F2A  010F               	movlb	15	; () banked
  5949  000F2C  8D32               	bsf	50,6,b	;volatile
  5950  000F2E                     l387:
  5951                           
  5952                           ;CANlib.h: 401: if (identifier & 0x00100000)
  5953  000F2E  0100               	movlb	0	; () banked
  5954  000F30  A9A5               	btfss	(CANsendMessage@identifier+2)& (0+255),4,b
  5955  000F32  D002               	goto	l4548
  5956                           
  5957                           ; BSR set to: 0
  5958                           ;CANlib.h: 402: TXB1SIDLbits.SID2 = 0x01;
  5959  000F34  010F               	movlb	15	; () banked
  5960  000F36  8F32               	bsf	50,7,b	;volatile
  5961  000F38                     l4548:
  5962                           
  5963                           ;CANlib.h: 404: tamp = (identifier >> 21);
  5964  000F38  C0A3  F01E         	movff	CANsendMessage@identifier,??_CANsendMessage
  5965  000F3C  C0A4  F01F         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
  5966  000F40  C0A5  F020         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
  5967  000F44  C0A6  F021         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
  5968  000F48  0E16               	movlw	22
  5969  000F4A  D005               	goto	u5930
  5970  000F4C                     u5935:
  5971  000F4C  90D8               	bcf	status,0,c
  5972  000F4E  3221               	rrcf	??_CANsendMessage+3,f,c
  5973  000F50  3220               	rrcf	??_CANsendMessage+2,f,c
  5974  000F52  321F               	rrcf	??_CANsendMessage+1,f,c
  5975  000F54  321E               	rrcf	??_CANsendMessage,f,c
  5976  000F56                     u5930:
  5977  000F56  2EE8               	decfsz	wreg,f,c
  5978  000F58  D7F9               	goto	u5935
  5979  000F5A  C01E  F0AB         	movff	??_CANsendMessage,CANsendMessage@tamp
  5980  000F5E  C01F  F0AC         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  5981  000F62  C020  F0AD         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  5982  000F66  C021  F0AE         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  5983                           
  5984                           ;CANlib.h: 405: tamp = tamp & 0x000000FF;
  5985  000F6A  0100               	movlb	0	; () banked
  5986  000F6C  51AB               	movf	CANsendMessage@tamp& (0+255),w,b
  5987  000F6E  0100               	movlb	0	; () banked
  5988  000F70  6FAB               	movwf	CANsendMessage@tamp& (0+255),b
  5989  000F72  6BAC               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  5990  000F74  6BAD               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  5991  000F76  6BAE               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  5992                           
  5993                           ; BSR set to: 0
  5994                           ;CANlib.h: 406: TXB1SIDH = (unsigned char) tamp;
  5995  000F78  C0AB  FF31         	movff	CANsendMessage@tamp,3889	;volatile
  5996                           
  5997                           ;CANlib.h: 407: }
  5998  000F7C  D057               	goto	l4568
  5999  000F7E                     l383:
  6000                           
  6001                           ; BSR set to: 0
  6002                           ;CANlib.h: 409: else
  6003                           ;CANlib.h: 411: {
  6004                           ;CANlib.h: 412: TXB1SIDLbits.EXIDE = 0x00;
  6005  000F7E  010F               	movlb	15	; () banked
  6006  000F80  9732               	bcf	50,3,b	;volatile
  6007                           
  6008                           ; BSR set to: 15
  6009                           ;CANlib.h: 414: tamp = (identifier >> 3);
  6010  000F82  C0A3  F01E         	movff	CANsendMessage@identifier,??_CANsendMessage
  6011  000F86  C0A4  F01F         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
  6012  000F8A  C0A5  F020         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
  6013  000F8E  C0A6  F021         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
  6014  000F92  0E04               	movlw	4
  6015  000F94  D005               	goto	u5940
  6016  000F96                     u5945:
  6017  000F96  90D8               	bcf	status,0,c
  6018  000F98  3221               	rrcf	??_CANsendMessage+3,f,c
  6019  000F9A  3220               	rrcf	??_CANsendMessage+2,f,c
  6020  000F9C  321F               	rrcf	??_CANsendMessage+1,f,c
  6021  000F9E  321E               	rrcf	??_CANsendMessage,f,c
  6022  000FA0                     u5940:
  6023  000FA0  2EE8               	decfsz	wreg,f,c
  6024  000FA2  D7F9               	goto	u5945
  6025  000FA4  C01E  F0AB         	movff	??_CANsendMessage,CANsendMessage@tamp
  6026  000FA8  C01F  F0AC         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  6027  000FAC  C020  F0AD         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  6028  000FB0  C021  F0AE         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  6029                           
  6030                           ; BSR set to: 15
  6031                           ;CANlib.h: 415: tamp = tamp & 0x000000FF;
  6032  000FB4  0100               	movlb	0	; () banked
  6033  000FB6  51AB               	movf	CANsendMessage@tamp& (0+255),w,b
  6034  000FB8  0100               	movlb	0	; () banked
  6035  000FBA  6FAB               	movwf	CANsendMessage@tamp& (0+255),b
  6036  000FBC  6BAC               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  6037  000FBE  6BAD               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  6038  000FC0  6BAE               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  6039                           
  6040                           ; BSR set to: 0
  6041                           ;CANlib.h: 416: TXB1SIDH = (unsigned char) tamp;
  6042  000FC2  C0AB  FF31         	movff	CANsendMessage@tamp,3889	;volatile
  6043                           
  6044                           ; BSR set to: 0
  6045                           ;CANlib.h: 418: tamp = identifier & 0x00000007;
  6046  000FC6  0E07               	movlw	7
  6047  000FC8  0100               	movlb	0	; () banked
  6048  000FCA  15A3               	andwf	CANsendMessage@identifier& (0+255),w,b
  6049  000FCC  0100               	movlb	0	; () banked
  6050  000FCE  6FAB               	movwf	CANsendMessage@tamp& (0+255),b
  6051  000FD0  0E00               	movlw	0
  6052  000FD2  0100               	movlb	0	; () banked
  6053  000FD4  15A4               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
  6054  000FD6  0100               	movlb	0	; () banked
  6055  000FD8  6FAC               	movwf	(CANsendMessage@tamp+1)& (0+255),b
  6056  000FDA  0E00               	movlw	0
  6057  000FDC  0100               	movlb	0	; () banked
  6058  000FDE  15A5               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
  6059  000FE0  0100               	movlb	0	; () banked
  6060  000FE2  6FAD               	movwf	(CANsendMessage@tamp+2)& (0+255),b
  6061  000FE4  0E00               	movlw	0
  6062  000FE6  0100               	movlb	0	; () banked
  6063  000FE8  15A6               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
  6064  000FEA  0100               	movlb	0	; () banked
  6065  000FEC  6FAE               	movwf	(CANsendMessage@tamp+3)& (0+255),b
  6066                           
  6067                           ; BSR set to: 0
  6068                           ;CANlib.h: 419: tamp = tamp << 5;
  6069  000FEE  C0AB  F01E         	movff	CANsendMessage@tamp,??_CANsendMessage
  6070  000FF2  C0AC  F01F         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
  6071  000FF6  C0AD  F020         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
  6072  000FFA  C0AE  F021         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
  6073  000FFE  0E05               	movlw	5
  6074  001000                     u5955:
  6075  001000  90D8               	bcf	status,0,c
  6076  001002  361E               	rlcf	??_CANsendMessage,f,c
  6077  001004  361F               	rlcf	??_CANsendMessage+1,f,c
  6078  001006  3620               	rlcf	??_CANsendMessage+2,f,c
  6079  001008  3621               	rlcf	??_CANsendMessage+3,f,c
  6080  00100A  2EE8               	decfsz	wreg,f,c
  6081  00100C  D7F9               	goto	u5955
  6082  00100E  C01E  F0AB         	movff	??_CANsendMessage,CANsendMessage@tamp
  6083  001012  C01F  F0AC         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  6084  001016  C020  F0AD         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  6085  00101A  C021  F0AE         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  6086                           
  6087                           ; BSR set to: 0
  6088                           ;CANlib.h: 420: TXB1SIDL = TXB1SIDL & 0b00011111;
  6089  00101E  010F               	movlb	15	; () banked
  6090  001020  5132               	movf	50,w,b	;volatile
  6091  001022  0B1F               	andlw	31
  6092  001024  010F               	movlb	15	; () banked
  6093  001026  6F32               	movwf	50,b	;volatile
  6094                           
  6095                           ; BSR set to: 15
  6096                           ;CANlib.h: 421: TXB1SIDL = (unsigned char) tamp;
  6097  001028  C0AB  FF32         	movff	CANsendMessage@tamp,3890	;volatile
  6098  00102C                     l4568:
  6099                           
  6100                           ;CANlib.h: 422: }
  6101                           ;CANlib.h: 424: if (0b00000001 & flags)
  6102  00102C  0100               	movlb	0	; () banked
  6103  00102E  A1AA               	btfss	CANsendMessage@flags& (0+255),0,b
  6104  001030  D003               	goto	l390
  6105                           
  6106                           ; BSR set to: 0
  6107                           ;CANlib.h: 425: TXB1CONbits.TXPRI0 = 0x01;
  6108  001032  010F               	movlb	15	; () banked
  6109  001034  8130               	bsf	48,0,b	;volatile
  6110  001036  D002               	goto	l391
  6111  001038                     l390:
  6112                           
  6113                           ; BSR set to: 0
  6114                           ;CANlib.h: 426: else
  6115                           ;CANlib.h: 427: TXB1CONbits.TXPRI0 = 0x00;
  6116  001038  010F               	movlb	15	; () banked
  6117  00103A  9130               	bcf	48,0,b	;volatile
  6118  00103C                     l391:
  6119                           
  6120                           ; BSR set to: 15
  6121                           ;CANlib.h: 428: if (0b00000010 & flags)
  6122  00103C  0100               	movlb	0	; () banked
  6123  00103E  A3AA               	btfss	CANsendMessage@flags& (0+255),1,b
  6124  001040  D003               	goto	l392
  6125                           
  6126                           ; BSR set to: 0
  6127                           ;CANlib.h: 429: TXB1CONbits.TXPRI1 = 0x01;
  6128  001042  010F               	movlb	15	; () banked
  6129  001044  8330               	bsf	48,1,b	;volatile
  6130  001046  D002               	goto	l4574
  6131  001048                     l392:
  6132                           
  6133                           ; BSR set to: 0
  6134                           ;CANlib.h: 430: else
  6135                           ;CANlib.h: 431: TXB1CONbits.TXPRI1 = 0x00;
  6136  001048  010F               	movlb	15	; () banked
  6137  00104A  9330               	bcf	48,1,b	;volatile
  6138  00104C                     l4574:
  6139                           
  6140                           ; BSR set to: 15
  6141                           ;CANlib.h: 433: TXB1D0 = data[0];
  6142  00104C  C0A7  FFD9         	movff	CANsendMessage@data,fsr2l
  6143  001050  C0A8  FFDA         	movff	CANsendMessage@data+1,fsr2h
  6144  001054  50DF               	movf	indf2,w,c
  6145  001056  010F               	movlb	15	; () banked
  6146  001058  6F36               	movwf	54,b	;volatile
  6147                           
  6148                           ; BSR set to: 15
  6149                           ;CANlib.h: 434: TXB1D1 = data[1];
  6150  00105A  0100               	movlb	0	; () banked
  6151  00105C  EE20 F001          	lfsr	2,1
  6152  001060  51A7               	movf	CANsendMessage@data& (0+255),w,b
  6153  001062  26D9               	addwf	fsr2l,f,c
  6154  001064  51A8               	movf	(CANsendMessage@data+1)& (0+255),w,b
  6155  001066  22DA               	addwfc	fsr2h,f,c
  6156  001068  50DF               	movf	indf2,w,c
  6157  00106A  010F               	movlb	15	; () banked
  6158  00106C  6F37               	movwf	55,b	;volatile
  6159                           
  6160                           ; BSR set to: 15
  6161                           ;CANlib.h: 435: TXB1D2 = data[2];
  6162  00106E  0100               	movlb	0	; () banked
  6163  001070  EE20 F002          	lfsr	2,2
  6164  001074  51A7               	movf	CANsendMessage@data& (0+255),w,b
  6165  001076  26D9               	addwf	fsr2l,f,c
  6166  001078  51A8               	movf	(CANsendMessage@data+1)& (0+255),w,b
  6167  00107A  22DA               	addwfc	fsr2h,f,c
  6168  00107C  50DF               	movf	indf2,w,c
  6169  00107E  010F               	movlb	15	; () banked
  6170  001080  6F38               	movwf	56,b	;volatile
  6171                           
  6172                           ; BSR set to: 15
  6173                           ;CANlib.h: 436: TXB1D3 = data[3];
  6174  001082  0100               	movlb	0	; () banked
  6175  001084  EE20 F003          	lfsr	2,3
  6176  001088  51A7               	movf	CANsendMessage@data& (0+255),w,b
  6177  00108A  26D9               	addwf	fsr2l,f,c
  6178  00108C  51A8               	movf	(CANsendMessage@data+1)& (0+255),w,b
  6179  00108E  22DA               	addwfc	fsr2h,f,c
  6180  001090  50DF               	movf	indf2,w,c
  6181  001092  010F               	movlb	15	; () banked
  6182  001094  6F39               	movwf	57,b	;volatile
  6183                           
  6184                           ; BSR set to: 15
  6185                           ;CANlib.h: 437: TXB1D4 = data[4];
  6186  001096  0100               	movlb	0	; () banked
  6187  001098  EE20 F004          	lfsr	2,4
  6188  00109C  51A7               	movf	CANsendMessage@data& (0+255),w,b
  6189  00109E  26D9               	addwf	fsr2l,f,c
  6190  0010A0  51A8               	movf	(CANsendMessage@data+1)& (0+255),w,b
  6191  0010A2  22DA               	addwfc	fsr2h,f,c
  6192  0010A4  50DF               	movf	indf2,w,c
  6193  0010A6  010F               	movlb	15	; () banked
  6194  0010A8  6F3A               	movwf	58,b	;volatile
  6195                           
  6196                           ; BSR set to: 15
  6197                           ;CANlib.h: 438: TXB1D5 = data[5];
  6198  0010AA  0100               	movlb	0	; () banked
  6199  0010AC  EE20 F005          	lfsr	2,5
  6200  0010B0  51A7               	movf	CANsendMessage@data& (0+255),w,b
  6201  0010B2  26D9               	addwf	fsr2l,f,c
  6202  0010B4  51A8               	movf	(CANsendMessage@data+1)& (0+255),w,b
  6203  0010B6  22DA               	addwfc	fsr2h,f,c
  6204  0010B8  50DF               	movf	indf2,w,c
  6205  0010BA  010F               	movlb	15	; () banked
  6206  0010BC  6F3B               	movwf	59,b	;volatile
  6207                           
  6208                           ; BSR set to: 15
  6209                           ;CANlib.h: 439: TXB1D6 = data[6];
  6210  0010BE  0100               	movlb	0	; () banked
  6211  0010C0  EE20 F006          	lfsr	2,6
  6212  0010C4  51A7               	movf	CANsendMessage@data& (0+255),w,b
  6213  0010C6  26D9               	addwf	fsr2l,f,c
  6214  0010C8  51A8               	movf	(CANsendMessage@data+1)& (0+255),w,b
  6215  0010CA  22DA               	addwfc	fsr2h,f,c
  6216  0010CC  50DF               	movf	indf2,w,c
  6217  0010CE  010F               	movlb	15	; () banked
  6218  0010D0  6F3C               	movwf	60,b	;volatile
  6219                           
  6220                           ; BSR set to: 15
  6221                           ;CANlib.h: 440: TXB1D7 = data[7];
  6222  0010D2  0100               	movlb	0	; () banked
  6223  0010D4  EE20 F007          	lfsr	2,7
  6224  0010D8  51A7               	movf	CANsendMessage@data& (0+255),w,b
  6225  0010DA  26D9               	addwf	fsr2l,f,c
  6226  0010DC  51A8               	movf	(CANsendMessage@data+1)& (0+255),w,b
  6227  0010DE  22DA               	addwfc	fsr2h,f,c
  6228  0010E0  50DF               	movf	indf2,w,c
  6229  0010E2  010F               	movlb	15	; () banked
  6230  0010E4  6F3D               	movwf	61,b	;volatile
  6231                           
  6232                           ; BSR set to: 15
  6233                           ;CANlib.h: 442: TXB1CONbits.TXREQ = 0x01;
  6234  0010E6  010F               	movlb	15	; () banked
  6235  0010E8  8730               	bsf	48,3,b	;volatile
  6236                           
  6237                           ; BSR set to: 15
  6238                           ;CANlib.h: 444: return;
  6239  0010EA  0012               	return	
  6240  0010EC                     l380:
  6241                           
  6242                           ; BSR set to: 15
  6243                           ;CANlib.h: 445: }
  6244                           ;CANlib.h: 449: if (TXB2CONbits.TXREQ == 0)
  6245  0010EC  010F               	movlb	15	; () banked
  6246  0010EE  B720               	btfsc	32,3,b	;volatile
  6247  0010F0  0012               	return	
  6248                           
  6249                           ; BSR set to: 15
  6250                           ;CANlib.h: 450: { TXB2DLC = dataLength;
  6251  0010F2  C0A9  FF25         	movff	CANsendMessage@dataLength,3877	;volatile
  6252                           
  6253                           ;CANlib.h: 452: if (0b01000000 & flags)
  6254  0010F6  0100               	movlb	0	; () banked
  6255  0010F8  ADAA               	btfss	CANsendMessage@flags& (0+255),6,b
  6256  0010FA  D003               	goto	l395
  6257                           
  6258                           ; BSR set to: 0
  6259                           ;CANlib.h: 453: TXB2DLCbits.TXRTR = 0x01;
  6260  0010FC  010F               	movlb	15	; () banked
  6261  0010FE  8D25               	bsf	37,6,b	;volatile
  6262  001100  D002               	goto	l396
  6263  001102                     l395:
  6264                           
  6265                           ; BSR set to: 0
  6266                           ;CANlib.h: 454: else
  6267                           ;CANlib.h: 455: TXB2DLCbits.TXRTR = 0x00;
  6268  001102  010F               	movlb	15	; () banked
  6269  001104  9D25               	bcf	37,6,b	;volatile
  6270  001106                     l396:
  6271                           
  6272                           ; BSR set to: 15
  6273                           ;CANlib.h: 457: if (CAN_TX_FRAME_MASK & flags)
  6274  001106  0100               	movlb	0	; () banked
  6275  001108  A7AA               	btfss	CANsendMessage@flags& (0+255),3,b
  6276  00110A  D077               	goto	l397
  6277                           
  6278                           ; BSR set to: 0
  6279                           ;CANlib.h: 458: {
  6280                           ;CANlib.h: 459: tamp = identifier & 0x000000FF;
  6281  00110C  0100               	movlb	0	; () banked
  6282  00110E  51A3               	movf	CANsendMessage@identifier& (0+255),w,b
  6283  001110  0100               	movlb	0	; () banked
  6284  001112  6FAB               	movwf	CANsendMessage@tamp& (0+255),b
  6285  001114  6BAC               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  6286  001116  6BAD               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  6287  001118  6BAE               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  6288                           
  6289                           ; BSR set to: 0
  6290                           ;CANlib.h: 460: TXB2EIDL = (unsigned char) tamp;
  6291  00111A  C0AB  FF24         	movff	CANsendMessage@tamp,3876	;volatile
  6292                           
  6293                           ; BSR set to: 0
  6294                           ;CANlib.h: 462: tamp = identifier & 0x0000FF00;
  6295  00111E  0E00               	movlw	0
  6296  001120  0100               	movlb	0	; () banked
  6297  001122  15A3               	andwf	CANsendMessage@identifier& (0+255),w,b
  6298  001124  0100               	movlb	0	; () banked
  6299  001126  6FAB               	movwf	CANsendMessage@tamp& (0+255),b
  6300  001128  0EFF               	movlw	255
  6301  00112A  0100               	movlb	0	; () banked
  6302  00112C  15A4               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
  6303  00112E  0100               	movlb	0	; () banked
  6304  001130  6FAC               	movwf	(CANsendMessage@tamp+1)& (0+255),b
  6305  001132  0E00               	movlw	0
  6306  001134  0100               	movlb	0	; () banked
  6307  001136  15A5               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
  6308  001138  0100               	movlb	0	; () banked
  6309  00113A  6FAD               	movwf	(CANsendMessage@tamp+2)& (0+255),b
  6310  00113C  0E00               	movlw	0
  6311  00113E  0100               	movlb	0	; () banked
  6312  001140  15A6               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
  6313  001142  0100               	movlb	0	; () banked
  6314  001144  6FAE               	movwf	(CANsendMessage@tamp+3)& (0+255),b
  6315                           
  6316                           ; BSR set to: 0
  6317                           ;CANlib.h: 463: tamp = tamp >> 8;
  6318  001146  C0AB  F01E         	movff	CANsendMessage@tamp,??_CANsendMessage
  6319  00114A  C0AC  F01F         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
  6320  00114E  C0AD  F020         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
  6321  001152  C0AE  F021         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
  6322  001156  C01F  F01E         	movff	??_CANsendMessage+1,??_CANsendMessage
  6323  00115A  C020  F01F         	movff	??_CANsendMessage+2,??_CANsendMessage+1
  6324  00115E  C021  F020         	movff	??_CANsendMessage+3,??_CANsendMessage+2
  6325  001162  6A21               	clrf	??_CANsendMessage+3,c
  6326  001164  C01E  F0AB         	movff	??_CANsendMessage,CANsendMessage@tamp
  6327  001168  C01F  F0AC         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  6328  00116C  C020  F0AD         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  6329  001170  C021  F0AE         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  6330                           
  6331                           ; BSR set to: 0
  6332                           ;CANlib.h: 464: TXB2EIDH = (unsigned char) tamp;
  6333  001174  C0AB  FF23         	movff	CANsendMessage@tamp,3875	;volatile
  6334                           
  6335                           ; BSR set to: 0
  6336                           ;CANlib.h: 466: TXB2SIDL = 0x00;
  6337  001178  0E00               	movlw	0
  6338  00117A  010F               	movlb	15	; () banked
  6339  00117C  6F22               	movwf	34,b	;volatile
  6340                           
  6341                           ; BSR set to: 15
  6342                           ;CANlib.h: 467: TXB2SIDLbits.EXIDE = 0x01;
  6343  00117E  010F               	movlb	15	; () banked
  6344  001180  8722               	bsf	34,3,b	;volatile
  6345                           
  6346                           ; BSR set to: 15
  6347                           ;CANlib.h: 469: if (identifier & 0x00010000)
  6348  001182  0100               	movlb	0	; () banked
  6349  001184  A1A5               	btfss	(CANsendMessage@identifier+2)& (0+255),0,b
  6350  001186  D002               	goto	l398
  6351                           
  6352                           ; BSR set to: 0
  6353                           ;CANlib.h: 470: TXB2SIDLbits.EID16 = 0x01;
  6354  001188  010F               	movlb	15	; () banked
  6355  00118A  8122               	bsf	34,0,b	;volatile
  6356  00118C                     l398:
  6357                           
  6358                           ;CANlib.h: 471: if (identifier & 0x00020000)
  6359  00118C  0100               	movlb	0	; () banked
  6360  00118E  A3A5               	btfss	(CANsendMessage@identifier+2)& (0+255),1,b
  6361  001190  D002               	goto	l399
  6362                           
  6363                           ; BSR set to: 0
  6364                           ;CANlib.h: 472: TXB2SIDLbits.EID17 = 0x01;
  6365  001192  010F               	movlb	15	; () banked
  6366  001194  8322               	bsf	34,1,b	;volatile
  6367  001196                     l399:
  6368                           
  6369                           ;CANlib.h: 473: if (identifier & 0x00040000)
  6370  001196  0100               	movlb	0	; () banked
  6371  001198  A5A5               	btfss	(CANsendMessage@identifier+2)& (0+255),2,b
  6372  00119A  D002               	goto	l400
  6373                           
  6374                           ; BSR set to: 0
  6375                           ;CANlib.h: 474: TXB2SIDLbits.SID0 = 0x01;
  6376  00119C  010F               	movlb	15	; () banked
  6377  00119E  8B22               	bsf	34,5,b	;volatile
  6378  0011A0                     l400:
  6379                           
  6380                           ;CANlib.h: 475: if (identifier & 0x00080000)
  6381  0011A0  0100               	movlb	0	; () banked
  6382  0011A2  A7A5               	btfss	(CANsendMessage@identifier+2)& (0+255),3,b
  6383  0011A4  D002               	goto	l401
  6384                           
  6385                           ; BSR set to: 0
  6386                           ;CANlib.h: 476: TXB2SIDLbits.SID1 = 0x01;
  6387  0011A6  010F               	movlb	15	; () banked
  6388  0011A8  8D22               	bsf	34,6,b	;volatile
  6389  0011AA                     l401:
  6390                           
  6391                           ;CANlib.h: 477: if (identifier & 0x00100000)
  6392  0011AA  0100               	movlb	0	; () banked
  6393  0011AC  A9A5               	btfss	(CANsendMessage@identifier+2)& (0+255),4,b
  6394  0011AE  D002               	goto	l4624
  6395                           
  6396                           ; BSR set to: 0
  6397                           ;CANlib.h: 478: TXB2SIDLbits.SID2 = 0x01;
  6398  0011B0  010F               	movlb	15	; () banked
  6399  0011B2  8F22               	bsf	34,7,b	;volatile
  6400  0011B4                     l4624:
  6401                           
  6402                           ;CANlib.h: 480: tamp = (identifier >> 21);
  6403  0011B4  C0A3  F01E         	movff	CANsendMessage@identifier,??_CANsendMessage
  6404  0011B8  C0A4  F01F         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
  6405  0011BC  C0A5  F020         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
  6406  0011C0  C0A6  F021         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
  6407  0011C4  0E16               	movlw	22
  6408  0011C6  D005               	goto	u6060
  6409  0011C8                     u6065:
  6410  0011C8  90D8               	bcf	status,0,c
  6411  0011CA  3221               	rrcf	??_CANsendMessage+3,f,c
  6412  0011CC  3220               	rrcf	??_CANsendMessage+2,f,c
  6413  0011CE  321F               	rrcf	??_CANsendMessage+1,f,c
  6414  0011D0  321E               	rrcf	??_CANsendMessage,f,c
  6415  0011D2                     u6060:
  6416  0011D2  2EE8               	decfsz	wreg,f,c
  6417  0011D4  D7F9               	goto	u6065
  6418  0011D6  C01E  F0AB         	movff	??_CANsendMessage,CANsendMessage@tamp
  6419  0011DA  C01F  F0AC         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  6420  0011DE  C020  F0AD         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  6421  0011E2  C021  F0AE         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  6422                           
  6423                           ;CANlib.h: 481: tamp = tamp & 0x000000FF;
  6424  0011E6  0100               	movlb	0	; () banked
  6425  0011E8  51AB               	movf	CANsendMessage@tamp& (0+255),w,b
  6426  0011EA  0100               	movlb	0	; () banked
  6427  0011EC  6FAB               	movwf	CANsendMessage@tamp& (0+255),b
  6428  0011EE  6BAC               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  6429  0011F0  6BAD               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  6430  0011F2  6BAE               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  6431                           
  6432                           ; BSR set to: 0
  6433                           ;CANlib.h: 482: TXB2SIDH = (unsigned char) tamp;
  6434  0011F4  C0AB  FF21         	movff	CANsendMessage@tamp,3873	;volatile
  6435                           
  6436                           ;CANlib.h: 483: }
  6437  0011F8  D057               	goto	l4644
  6438  0011FA                     l397:
  6439                           
  6440                           ; BSR set to: 0
  6441                           ;CANlib.h: 485: else
  6442                           ;CANlib.h: 487: {
  6443                           ;CANlib.h: 488: TXB2SIDLbits.EXIDE = 0x00;
  6444  0011FA  010F               	movlb	15	; () banked
  6445  0011FC  9722               	bcf	34,3,b	;volatile
  6446                           
  6447                           ; BSR set to: 15
  6448                           ;CANlib.h: 490: tamp = (identifier >> 3);
  6449  0011FE  C0A3  F01E         	movff	CANsendMessage@identifier,??_CANsendMessage
  6450  001202  C0A4  F01F         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
  6451  001206  C0A5  F020         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
  6452  00120A  C0A6  F021         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
  6453  00120E  0E04               	movlw	4
  6454  001210  D005               	goto	u6070
  6455  001212                     u6075:
  6456  001212  90D8               	bcf	status,0,c
  6457  001214  3221               	rrcf	??_CANsendMessage+3,f,c
  6458  001216  3220               	rrcf	??_CANsendMessage+2,f,c
  6459  001218  321F               	rrcf	??_CANsendMessage+1,f,c
  6460  00121A  321E               	rrcf	??_CANsendMessage,f,c
  6461  00121C                     u6070:
  6462  00121C  2EE8               	decfsz	wreg,f,c
  6463  00121E  D7F9               	goto	u6075
  6464  001220  C01E  F0AB         	movff	??_CANsendMessage,CANsendMessage@tamp
  6465  001224  C01F  F0AC         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  6466  001228  C020  F0AD         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  6467  00122C  C021  F0AE         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  6468                           
  6469                           ; BSR set to: 15
  6470                           ;CANlib.h: 491: tamp = tamp & 0x000000FF;
  6471  001230  0100               	movlb	0	; () banked
  6472  001232  51AB               	movf	CANsendMessage@tamp& (0+255),w,b
  6473  001234  0100               	movlb	0	; () banked
  6474  001236  6FAB               	movwf	CANsendMessage@tamp& (0+255),b
  6475  001238  6BAC               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  6476  00123A  6BAD               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  6477  00123C  6BAE               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  6478                           
  6479                           ; BSR set to: 0
  6480                           ;CANlib.h: 492: TXB2SIDH = (unsigned char) tamp;
  6481  00123E  C0AB  FF21         	movff	CANsendMessage@tamp,3873	;volatile
  6482                           
  6483                           ; BSR set to: 0
  6484                           ;CANlib.h: 494: tamp = identifier & 0x00000007;
  6485  001242  0E07               	movlw	7
  6486  001244  0100               	movlb	0	; () banked
  6487  001246  15A3               	andwf	CANsendMessage@identifier& (0+255),w,b
  6488  001248  0100               	movlb	0	; () banked
  6489  00124A  6FAB               	movwf	CANsendMessage@tamp& (0+255),b
  6490  00124C  0E00               	movlw	0
  6491  00124E  0100               	movlb	0	; () banked
  6492  001250  15A4               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
  6493  001252  0100               	movlb	0	; () banked
  6494  001254  6FAC               	movwf	(CANsendMessage@tamp+1)& (0+255),b
  6495  001256  0E00               	movlw	0
  6496  001258  0100               	movlb	0	; () banked
  6497  00125A  15A5               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
  6498  00125C  0100               	movlb	0	; () banked
  6499  00125E  6FAD               	movwf	(CANsendMessage@tamp+2)& (0+255),b
  6500  001260  0E00               	movlw	0
  6501  001262  0100               	movlb	0	; () banked
  6502  001264  15A6               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
  6503  001266  0100               	movlb	0	; () banked
  6504  001268  6FAE               	movwf	(CANsendMessage@tamp+3)& (0+255),b
  6505                           
  6506                           ; BSR set to: 0
  6507                           ;CANlib.h: 495: tamp = tamp << 5;
  6508  00126A  C0AB  F01E         	movff	CANsendMessage@tamp,??_CANsendMessage
  6509  00126E  C0AC  F01F         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
  6510  001272  C0AD  F020         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
  6511  001276  C0AE  F021         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
  6512  00127A  0E05               	movlw	5
  6513  00127C                     u6085:
  6514  00127C  90D8               	bcf	status,0,c
  6515  00127E  361E               	rlcf	??_CANsendMessage,f,c
  6516  001280  361F               	rlcf	??_CANsendMessage+1,f,c
  6517  001282  3620               	rlcf	??_CANsendMessage+2,f,c
  6518  001284  3621               	rlcf	??_CANsendMessage+3,f,c
  6519  001286  2EE8               	decfsz	wreg,f,c
  6520  001288  D7F9               	goto	u6085
  6521  00128A  C01E  F0AB         	movff	??_CANsendMessage,CANsendMessage@tamp
  6522  00128E  C01F  F0AC         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  6523  001292  C020  F0AD         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  6524  001296  C021  F0AE         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  6525                           
  6526                           ; BSR set to: 0
  6527                           ;CANlib.h: 496: TXB2SIDL = TXB2SIDL & 0b00011111;
  6528  00129A  010F               	movlb	15	; () banked
  6529  00129C  5122               	movf	34,w,b	;volatile
  6530  00129E  0B1F               	andlw	31
  6531  0012A0  010F               	movlb	15	; () banked
  6532  0012A2  6F22               	movwf	34,b	;volatile
  6533                           
  6534                           ; BSR set to: 15
  6535                           ;CANlib.h: 497: TXB2SIDL = (unsigned char) tamp;
  6536  0012A4  C0AB  FF22         	movff	CANsendMessage@tamp,3874	;volatile
  6537  0012A8                     l4644:
  6538                           
  6539                           ;CANlib.h: 498: }
  6540                           ;CANlib.h: 500: if (0b00000001 & flags)
  6541  0012A8  0100               	movlb	0	; () banked
  6542  0012AA  A1AA               	btfss	CANsendMessage@flags& (0+255),0,b
  6543  0012AC  D003               	goto	l404
  6544                           
  6545                           ; BSR set to: 0
  6546                           ;CANlib.h: 501: TXB2CONbits.TXPRI0 = 0x01;
  6547  0012AE  010F               	movlb	15	; () banked
  6548  0012B0  8120               	bsf	32,0,b	;volatile
  6549  0012B2  D002               	goto	l405
  6550  0012B4                     l404:
  6551                           
  6552                           ; BSR set to: 0
  6553                           ;CANlib.h: 502: else
  6554                           ;CANlib.h: 503: TXB2CONbits.TXPRI0 = 0x00;
  6555  0012B4  010F               	movlb	15	; () banked
  6556  0012B6  9120               	bcf	32,0,b	;volatile
  6557  0012B8                     l405:
  6558                           
  6559                           ; BSR set to: 15
  6560                           ;CANlib.h: 504: if (0b00000010 & flags)
  6561  0012B8  0100               	movlb	0	; () banked
  6562  0012BA  A3AA               	btfss	CANsendMessage@flags& (0+255),1,b
  6563  0012BC  D003               	goto	l406
  6564                           
  6565                           ; BSR set to: 0
  6566                           ;CANlib.h: 505: TXB2CONbits.TXPRI1 = 0x01;
  6567  0012BE  010F               	movlb	15	; () banked
  6568  0012C0  8320               	bsf	32,1,b	;volatile
  6569  0012C2  D002               	goto	l4650
  6570  0012C4                     l406:
  6571                           
  6572                           ; BSR set to: 0
  6573                           ;CANlib.h: 506: else
  6574                           ;CANlib.h: 507: TXB2CONbits.TXPRI1 = 0x00;
  6575  0012C4  010F               	movlb	15	; () banked
  6576  0012C6  9320               	bcf	32,1,b	;volatile
  6577  0012C8                     l4650:
  6578                           
  6579                           ; BSR set to: 15
  6580                           ;CANlib.h: 509: TXB2D0 = data[0];
  6581  0012C8  C0A7  FFD9         	movff	CANsendMessage@data,fsr2l
  6582  0012CC  C0A8  FFDA         	movff	CANsendMessage@data+1,fsr2h
  6583  0012D0  50DF               	movf	indf2,w,c
  6584  0012D2  010F               	movlb	15	; () banked
  6585  0012D4  6F26               	movwf	38,b	;volatile
  6586                           
  6587                           ; BSR set to: 15
  6588                           ;CANlib.h: 510: TXB2D1 = data[1];
  6589  0012D6  0100               	movlb	0	; () banked
  6590  0012D8  EE20 F001          	lfsr	2,1
  6591  0012DC  51A7               	movf	CANsendMessage@data& (0+255),w,b
  6592  0012DE  26D9               	addwf	fsr2l,f,c
  6593  0012E0  51A8               	movf	(CANsendMessage@data+1)& (0+255),w,b
  6594  0012E2  22DA               	addwfc	fsr2h,f,c
  6595  0012E4  50DF               	movf	indf2,w,c
  6596  0012E6  010F               	movlb	15	; () banked
  6597  0012E8  6F27               	movwf	39,b	;volatile
  6598                           
  6599                           ; BSR set to: 15
  6600                           ;CANlib.h: 511: TXB2D2 = data[2];
  6601  0012EA  0100               	movlb	0	; () banked
  6602  0012EC  EE20 F002          	lfsr	2,2
  6603  0012F0  51A7               	movf	CANsendMessage@data& (0+255),w,b
  6604  0012F2  26D9               	addwf	fsr2l,f,c
  6605  0012F4  51A8               	movf	(CANsendMessage@data+1)& (0+255),w,b
  6606  0012F6  22DA               	addwfc	fsr2h,f,c
  6607  0012F8  50DF               	movf	indf2,w,c
  6608  0012FA  010F               	movlb	15	; () banked
  6609  0012FC  6F28               	movwf	40,b	;volatile
  6610                           
  6611                           ; BSR set to: 15
  6612                           ;CANlib.h: 512: TXB2D3 = data[3];
  6613  0012FE  0100               	movlb	0	; () banked
  6614  001300  EE20 F003          	lfsr	2,3
  6615  001304  51A7               	movf	CANsendMessage@data& (0+255),w,b
  6616  001306  26D9               	addwf	fsr2l,f,c
  6617  001308  51A8               	movf	(CANsendMessage@data+1)& (0+255),w,b
  6618  00130A  22DA               	addwfc	fsr2h,f,c
  6619  00130C  50DF               	movf	indf2,w,c
  6620  00130E  010F               	movlb	15	; () banked
  6621  001310  6F29               	movwf	41,b	;volatile
  6622                           
  6623                           ; BSR set to: 15
  6624                           ;CANlib.h: 513: TXB2D4 = data[4];
  6625  001312  0100               	movlb	0	; () banked
  6626  001314  EE20 F004          	lfsr	2,4
  6627  001318  51A7               	movf	CANsendMessage@data& (0+255),w,b
  6628  00131A  26D9               	addwf	fsr2l,f,c
  6629  00131C  51A8               	movf	(CANsendMessage@data+1)& (0+255),w,b
  6630  00131E  22DA               	addwfc	fsr2h,f,c
  6631  001320  50DF               	movf	indf2,w,c
  6632  001322  010F               	movlb	15	; () banked
  6633  001324  6F2A               	movwf	42,b	;volatile
  6634                           
  6635                           ; BSR set to: 15
  6636                           ;CANlib.h: 514: TXB2D5 = data[5];
  6637  001326  0100               	movlb	0	; () banked
  6638  001328  EE20 F005          	lfsr	2,5
  6639  00132C  51A7               	movf	CANsendMessage@data& (0+255),w,b
  6640  00132E  26D9               	addwf	fsr2l,f,c
  6641  001330  51A8               	movf	(CANsendMessage@data+1)& (0+255),w,b
  6642  001332  22DA               	addwfc	fsr2h,f,c
  6643  001334  50DF               	movf	indf2,w,c
  6644  001336  010F               	movlb	15	; () banked
  6645  001338  6F2B               	movwf	43,b	;volatile
  6646                           
  6647                           ; BSR set to: 15
  6648                           ;CANlib.h: 515: TXB2D6 = data[6];
  6649  00133A  0100               	movlb	0	; () banked
  6650  00133C  EE20 F006          	lfsr	2,6
  6651  001340  51A7               	movf	CANsendMessage@data& (0+255),w,b
  6652  001342  26D9               	addwf	fsr2l,f,c
  6653  001344  51A8               	movf	(CANsendMessage@data+1)& (0+255),w,b
  6654  001346  22DA               	addwfc	fsr2h,f,c
  6655  001348  50DF               	movf	indf2,w,c
  6656  00134A  010F               	movlb	15	; () banked
  6657  00134C  6F2C               	movwf	44,b	;volatile
  6658                           
  6659                           ; BSR set to: 15
  6660                           ;CANlib.h: 516: TXB2D7 = data[7];
  6661  00134E  0100               	movlb	0	; () banked
  6662  001350  EE20 F007          	lfsr	2,7
  6663  001354  51A7               	movf	CANsendMessage@data& (0+255),w,b
  6664  001356  26D9               	addwf	fsr2l,f,c
  6665  001358  51A8               	movf	(CANsendMessage@data+1)& (0+255),w,b
  6666  00135A  22DA               	addwfc	fsr2h,f,c
  6667  00135C  50DF               	movf	indf2,w,c
  6668  00135E  010F               	movlb	15	; () banked
  6669  001360  6F2D               	movwf	45,b	;volatile
  6670                           
  6671                           ; BSR set to: 15
  6672                           ;CANlib.h: 518: TXB2CONbits.TXREQ = 0x01;
  6673  001362  010F               	movlb	15	; () banked
  6674  001364  8720               	bsf	32,3,b	;volatile
  6675                           
  6676                           ; BSR set to: 15
  6677                           ;CANlib.h: 520: return;
  6678  001366  0012               	return	
  6679  001368                     __end_of_CANsendMessage:
  6680                           	opt stack 0
  6681                           tblptru	equ	0xFF8
  6682                           tblptrh	equ	0xFF7
  6683                           tblptrl	equ	0xFF6
  6684                           tablat	equ	0xFF5
  6685                           prodh	equ	0xFF4
  6686                           prodl	equ	0xFF3
  6687                           intcon	equ	0xFF2
  6688                           intcon2	equ	0xFF1
  6689                           postinc0	equ	0xFEE
  6690                           wreg	equ	0xFE8
  6691                           indf1	equ	0xFE7
  6692                           fsr1h	equ	0xFE2
  6693                           fsr1l	equ	0xFE1
  6694                           indf2	equ	0xFDF
  6695                           fsr2h	equ	0xFDA
  6696                           fsr2l	equ	0xFD9
  6697                           status	equ	0xFD8
  6698                           
  6699 ;; *************** function _CANisTxReady *****************
  6700 ;; Defined at:
  6701 ;;		line 1154 in file "CANlib.h"
  6702 ;; Parameters:    Size  Location     Type
  6703 ;;		None
  6704 ;; Auto vars:     Size  Location     Type
  6705 ;;		None
  6706 ;; Return value:  Size  Location     Type
  6707 ;;                  1    wreg      unsigned char 
  6708 ;; Registers used:
  6709 ;;		wreg, status,2
  6710 ;; Tracked objects:
  6711 ;;		On entry : 0/0
  6712 ;;		On exit  : 0/0
  6713 ;;		Unchanged: 0/0
  6714 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  6715 ;;      Params:         0       0       0       0
  6716 ;;      Locals:         1       0       0       0
  6717 ;;      Temps:          0       0       0       0
  6718 ;;      Totals:         1       0       0       0
  6719 ;;Total ram usage:        1 bytes
  6720 ;; Hardware stack levels used:    1
  6721 ;; Hardware stack levels required when called:    2
  6722 ;; This function calls:
  6723 ;;		Nothing
  6724 ;; This function is called by:
  6725 ;;		_send_data
  6726 ;;		_battery_measure
  6727 ;; This function uses a non-reentrant model
  6728 ;;
  6729                           
  6730                           	psect	text12
  6731  0025A4                     __ptext12:
  6732                           	opt stack 0
  6733  0025A4                     _CANisTxReady:
  6734                           	opt stack 27
  6735                           
  6736                           ;CANlib.h: 1156: return (!TXB0CONbits.TXREQ || !TXB1CONbits.TXREQ || !TXB2CONbits.TXREQ)
      +                          ;
  6737                           
  6738                           ; BSR set to: 15
  6739                           ;incstack = 0
  6740  0025A4  0E01               	movlw	1
  6741  0025A6  6E1E               	movwf	_CANisTxReady$3032,c
  6742  0025A8  010F               	movlb	15	; () banked
  6743  0025AA  A740               	btfss	64,3,b	;volatile
  6744  0025AC  D008               	goto	l558
  6745                           
  6746                           ; BSR set to: 15
  6747  0025AE  010F               	movlb	15	; () banked
  6748  0025B0  A730               	btfss	48,3,b	;volatile
  6749  0025B2  D005               	goto	l558
  6750                           
  6751                           ; BSR set to: 15
  6752  0025B4  010F               	movlb	15	; () banked
  6753  0025B6  A720               	btfss	32,3,b	;volatile
  6754  0025B8  D002               	goto	l558
  6755                           
  6756                           ; BSR set to: 15
  6757  0025BA  0E00               	movlw	0
  6758  0025BC  6E1E               	movwf	_CANisTxReady$3032,c
  6759  0025BE                     l558:
  6760                           
  6761                           ; BSR set to: 15
  6762  0025BE  501E               	movf	_CANisTxReady$3032,w,c
  6763  0025C0  0012               	return	
  6764  0025C2                     __end_of_CANisTxReady:
  6765                           	opt stack 0
  6766                           tblptru	equ	0xFF8
  6767                           tblptrh	equ	0xFF7
  6768                           tblptrl	equ	0xFF6
  6769                           tablat	equ	0xFF5
  6770                           prodh	equ	0xFF4
  6771                           prodl	equ	0xFF3
  6772                           intcon	equ	0xFF2
  6773                           intcon2	equ	0xFF1
  6774                           postinc0	equ	0xFEE
  6775                           wreg	equ	0xFE8
  6776                           indf1	equ	0xFE7
  6777                           fsr1h	equ	0xFE2
  6778                           fsr1l	equ	0xFE1
  6779                           indf2	equ	0xFDF
  6780                           fsr2h	equ	0xFDA
  6781                           fsr2l	equ	0xFD9
  6782                           status	equ	0xFD8
  6783                           
  6784 ;; *************** function _abs *****************
  6785 ;; Defined at:
  6786 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\abs.c"
  6787 ;; Parameters:    Size  Location     Type
  6788 ;;  a               2   29[COMRAM] int 
  6789 ;; Auto vars:     Size  Location     Type
  6790 ;;		None
  6791 ;; Return value:  Size  Location     Type
  6792 ;;                  2   29[COMRAM] int 
  6793 ;; Registers used:
  6794 ;;		wreg, status,2, status,0
  6795 ;; Tracked objects:
  6796 ;;		On entry : 0/0
  6797 ;;		On exit  : 0/0
  6798 ;;		Unchanged: 0/0
  6799 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  6800 ;;      Params:         2       0       0       0
  6801 ;;      Locals:         0       0       0       0
  6802 ;;      Temps:          2       0       0       0
  6803 ;;      Totals:         4       0       0       0
  6804 ;;Total ram usage:        4 bytes
  6805 ;; Hardware stack levels used:    1
  6806 ;; Hardware stack levels required when called:    2
  6807 ;; This function calls:
  6808 ;;		Nothing
  6809 ;; This function is called by:
  6810 ;;		_main
  6811 ;; This function uses a non-reentrant model
  6812 ;;
  6813                           
  6814                           	psect	text13
  6815  00257C                     __ptext13:
  6816                           	opt stack 0
  6817  00257C                     _abs:
  6818                           	opt stack 28
  6819                           
  6820                           ; BSR set to: 15
  6821                           ;incstack = 0
  6822  00257C  AE1F               	btfss	abs@a+1,7,c
  6823  00257E  D00D               	goto	l818
  6824  002580  C01E  F020         	movff	abs@a,??_abs
  6825  002584  C01F  F021         	movff	abs@a+1,??_abs+1
  6826  002588  1E20               	comf	??_abs,f,c
  6827  00258A  1E21               	comf	??_abs+1,f,c
  6828  00258C  4A20               	infsnz	??_abs,f,c
  6829  00258E  2A21               	incf	??_abs+1,f,c
  6830  002590  C020  F01E         	movff	??_abs,?_abs
  6831  002594  C021  F01F         	movff	??_abs+1,?_abs+1
  6832  002598  0012               	return	
  6833  00259A                     l818:
  6834  00259A  C01E  F01E         	movff	abs@a,?_abs
  6835  00259E  C01F  F01F         	movff	abs@a+1,?_abs+1
  6836  0025A2  0012               	return		;funcret
  6837  0025A4                     __end_of_abs:
  6838                           	opt stack 0
  6839                           tblptru	equ	0xFF8
  6840                           tblptrh	equ	0xFF7
  6841                           tblptrl	equ	0xFF6
  6842                           tablat	equ	0xFF5
  6843                           prodh	equ	0xFF4
  6844                           prodl	equ	0xFF3
  6845                           intcon	equ	0xFF2
  6846                           intcon2	equ	0xFF1
  6847                           postinc0	equ	0xFEE
  6848                           wreg	equ	0xFE8
  6849                           indf1	equ	0xFE7
  6850                           fsr1h	equ	0xFE2
  6851                           fsr1l	equ	0xFE1
  6852                           indf2	equ	0xFDF
  6853                           fsr2h	equ	0xFDA
  6854                           fsr2l	equ	0xFD9
  6855                           status	equ	0xFD8
  6856                           
  6857 ;; *************** function _SetOutputEPWM1 *****************
  6858 ;; Defined at:
  6859 ;;		line 18 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\pic18\plib\PWM\ew1setoc.c"
  6860 ;; Parameters:    Size  Location     Type
  6861 ;;  outputconfig    1    wreg     unsigned char 
  6862 ;;  outputmode      1   29[COMRAM] unsigned char 
  6863 ;; Auto vars:     Size  Location     Type
  6864 ;;  outputconfig    1   30[COMRAM] unsigned char 
  6865 ;; Return value:  Size  Location     Type
  6866 ;;		None               void
  6867 ;; Registers used:
  6868 ;;		wreg, status,2, status,0
  6869 ;; Tracked objects:
  6870 ;;		On entry : 0/0
  6871 ;;		On exit  : 0/0
  6872 ;;		Unchanged: 0/0
  6873 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  6874 ;;      Params:         1       0       0       0
  6875 ;;      Locals:         1       0       0       0
  6876 ;;      Temps:          0       0       0       0
  6877 ;;      Totals:         2       0       0       0
  6878 ;;Total ram usage:        2 bytes
  6879 ;; Hardware stack levels used:    1
  6880 ;; Hardware stack levels required when called:    2
  6881 ;; This function calls:
  6882 ;;		Nothing
  6883 ;; This function is called by:
  6884 ;;		_main
  6885 ;; This function uses a non-reentrant model
  6886 ;;
  6887                           
  6888                           	psect	text14
  6889  002456                     __ptext14:
  6890                           	opt stack 0
  6891  002456                     _SetOutputEPWM1:
  6892                           	opt stack 28
  6893                           
  6894                           ;incstack = 0
  6895                           ;SetOutputEPWM1@outputconfig stored from wreg
  6896  002456  6E1F               	movwf	SetOutputEPWM1@outputconfig,c
  6897  002458  50BA               	movf	4026,w,c	;volatile
  6898  00245A  09C0               	iorlw	192
  6899  00245C  141F               	andwf	SetOutputEPWM1@outputconfig,w,c
  6900  00245E  6EBA               	movwf	4026,c	;volatile
  6901  002460  50BA               	movf	4026,w,c	;volatile
  6902  002462  090F               	iorlw	15
  6903  002464  141E               	andwf	SetOutputEPWM1@outputmode,w,c
  6904  002466  6EBA               	movwf	4026,c	;volatile
  6905  002468  0E3F               	movlw	63
  6906  00246A  181F               	xorwf	SetOutputEPWM1@outputconfig,w,c
  6907  00246C  A4D8               	btfss	status,2,c
  6908  00246E  D002               	goto	l3724
  6909  002470  9895               	bcf	3989,4,c	;volatile
  6910  002472  0012               	return	
  6911  002474                     l3724:
  6912  002474  0EBF               	movlw	191
  6913  002476  181F               	xorwf	SetOutputEPWM1@outputconfig,w,c
  6914  002478  A4D8               	btfss	status,2,c
  6915  00247A  D003               	goto	l3728
  6916  00247C  9895               	bcf	3989,4,c	;volatile
  6917  00247E  9A95               	bcf	3989,5,c	;volatile
  6918  002480  0012               	return	
  6919  002482                     l3728:
  6920  002482  0E7F               	movlw	127
  6921  002484  181F               	xorwf	SetOutputEPWM1@outputconfig,w,c
  6922  002486  B4D8               	btfsc	status,2,c
  6923  002488  D003               	goto	l752
  6924  00248A  281F               	incf	SetOutputEPWM1@outputconfig,w,c
  6925  00248C  A4D8               	btfss	status,2,c
  6926  00248E  0012               	return	
  6927  002490                     l752:
  6928  002490  9895               	bcf	3989,4,c	;volatile
  6929  002492  9A95               	bcf	3989,5,c	;volatile
  6930  002494  9C95               	bcf	3989,6,c	;volatile
  6931  002496  9E95               	bcf	3989,7,c	;volatile
  6932  002498  0012               	return	
  6933  00249A                     __end_of_SetOutputEPWM1:
  6934                           	opt stack 0
  6935                           tblptru	equ	0xFF8
  6936                           tblptrh	equ	0xFF7
  6937                           tblptrl	equ	0xFF6
  6938                           tablat	equ	0xFF5
  6939                           prodh	equ	0xFF4
  6940                           prodl	equ	0xFF3
  6941                           intcon	equ	0xFF2
  6942                           intcon2	equ	0xFF1
  6943                           postinc0	equ	0xFEE
  6944                           wreg	equ	0xFE8
  6945                           indf1	equ	0xFE7
  6946                           fsr1h	equ	0xFE2
  6947                           fsr1l	equ	0xFE1
  6948                           indf2	equ	0xFDF
  6949                           fsr2h	equ	0xFDA
  6950                           fsr2l	equ	0xFD9
  6951                           status	equ	0xFD8
  6952                           
  6953 ;; *************** function _SetDCEPWM1 *****************
  6954 ;; Defined at:
  6955 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\pic18\plib\PWM\ew1setdc.c"
  6956 ;; Parameters:    Size  Location     Type
  6957 ;;  dutycycle       2   29[COMRAM] unsigned int 
  6958 ;; Auto vars:     Size  Location     Type
  6959 ;;  DCycle          2   33[COMRAM] struct PWMDC
  6960 ;; Return value:  Size  Location     Type
  6961 ;;		None               void
  6962 ;; Registers used:
  6963 ;;		wreg, status,2, status,0
  6964 ;; Tracked objects:
  6965 ;;		On entry : 0/0
  6966 ;;		On exit  : 0/0
  6967 ;;		Unchanged: 0/0
  6968 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  6969 ;;      Params:         2       0       0       0
  6970 ;;      Locals:         2       0       0       0
  6971 ;;      Temps:          2       0       0       0
  6972 ;;      Totals:         6       0       0       0
  6973 ;;Total ram usage:        6 bytes
  6974 ;; Hardware stack levels used:    1
  6975 ;; Hardware stack levels required when called:    2
  6976 ;; This function calls:
  6977 ;;		Nothing
  6978 ;; This function is called by:
  6979 ;;		_main
  6980 ;; This function uses a non-reentrant model
  6981 ;;
  6982                           
  6983                           	psect	text15
  6984  0024DC                     __ptext15:
  6985                           	opt stack 0
  6986  0024DC                     _SetDCEPWM1:
  6987                           	opt stack 28
  6988                           
  6989                           ;incstack = 0
  6990  0024DC  C01E  F020         	movff	SetDCEPWM1@dutycycle,??_SetDCEPWM1
  6991  0024E0  C01F  F021         	movff	SetDCEPWM1@dutycycle+1,??_SetDCEPWM1+1
  6992  0024E4  0E06               	movlw	6
  6993  0024E6                     u4205:
  6994  0024E6  90D8               	bcf	status,0,c
  6995  0024E8  3620               	rlcf	??_SetDCEPWM1,f,c
  6996  0024EA  3621               	rlcf	??_SetDCEPWM1+1,f,c
  6997  0024EC  2EE8               	decfsz	wreg,f,c
  6998  0024EE  D7FB               	goto	u4205
  6999  0024F0  C020  F022         	movff	??_SetDCEPWM1,SetDCEPWM1@DCycle
  7000  0024F4  C021  F023         	movff	??_SetDCEPWM1+1,SetDCEPWM1@DCycle+1
  7001  0024F8  C023  FFBB         	movff	SetDCEPWM1@DCycle+1,4027	;volatile
  7002  0024FC  C022  F020         	movff	SetDCEPWM1@DCycle,??_SetDCEPWM1
  7003  002500  90D8               	bcf	status,0,c
  7004  002502  3220               	rrcf	??_SetDCEPWM1,f,c
  7005  002504  90D8               	bcf	status,0,c
  7006  002506  3220               	rrcf	??_SetDCEPWM1,f,c
  7007  002508  0E30               	movlw	48
  7008  00250A  1620               	andwf	??_SetDCEPWM1,f,c
  7009  00250C  50BA               	movf	4026,w,c	;volatile
  7010  00250E  0BCF               	andlw	207
  7011  002510  1020               	iorwf	??_SetDCEPWM1,w,c
  7012  002512  6EBA               	movwf	4026,c	;volatile
  7013  002514  0012               	return		;funcret
  7014  002516                     __end_of_SetDCEPWM1:
  7015                           	opt stack 0
  7016                           tblptru	equ	0xFF8
  7017                           tblptrh	equ	0xFF7
  7018                           tblptrl	equ	0xFF6
  7019                           tablat	equ	0xFF5
  7020                           prodh	equ	0xFF4
  7021                           prodl	equ	0xFF3
  7022                           intcon	equ	0xFF2
  7023                           intcon2	equ	0xFF1
  7024                           postinc0	equ	0xFEE
  7025                           wreg	equ	0xFE8
  7026                           indf1	equ	0xFE7
  7027                           fsr1h	equ	0xFE2
  7028                           fsr1l	equ	0xFE1
  7029                           indf2	equ	0xFDF
  7030                           fsr2h	equ	0xFDA
  7031                           fsr2l	equ	0xFD9
  7032                           status	equ	0xFD8
  7033                           
  7034 ;; *************** function _OpenTimer2 *****************
  7035 ;; Defined at:
  7036 ;;		line 17 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\pic18\plib\Timers\t2open.c"
  7037 ;; Parameters:    Size  Location     Type
  7038 ;;  config          1    wreg     unsigned char 
  7039 ;; Auto vars:     Size  Location     Type
  7040 ;;  config          1   29[COMRAM] unsigned char 
  7041 ;; Return value:  Size  Location     Type
  7042 ;;		None               void
  7043 ;; Registers used:
  7044 ;;		wreg, status,2, status,0
  7045 ;; Tracked objects:
  7046 ;;		On entry : 0/0
  7047 ;;		On exit  : 0/0
  7048 ;;		Unchanged: 0/0
  7049 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  7050 ;;      Params:         0       0       0       0
  7051 ;;      Locals:         1       0       0       0
  7052 ;;      Temps:          0       0       0       0
  7053 ;;      Totals:         1       0       0       0
  7054 ;;Total ram usage:        1 bytes
  7055 ;; Hardware stack levels used:    1
  7056 ;; Hardware stack levels required when called:    2
  7057 ;; This function calls:
  7058 ;;		Nothing
  7059 ;; This function is called by:
  7060 ;;		_main
  7061 ;; This function uses a non-reentrant model
  7062 ;;
  7063                           
  7064                           	psect	text16
  7065  0025C2                     __ptext16:
  7066                           	opt stack 0
  7067  0025C2                     _OpenTimer2:
  7068                           	opt stack 28
  7069                           
  7070                           ;incstack = 0
  7071                           ;OpenTimer2@config stored from wreg
  7072  0025C2  6E1E               	movwf	OpenTimer2@config,c
  7073  0025C4  501E               	movf	OpenTimer2@config,w,c
  7074  0025C6  0BFB               	andlw	251
  7075  0025C8  6ECA               	movwf	4042,c	;volatile
  7076  0025CA  0E00               	movlw	0
  7077  0025CC  6ECC               	movwf	4044,c	;volatile
  7078  0025CE  929E               	bcf	3998,1,c	;volatile
  7079  0025D0  AE1E               	btfss	OpenTimer2@config,7,c
  7080  0025D2  D002               	goto	l766
  7081  0025D4  829D               	bsf	3997,1,c	;volatile
  7082  0025D6  D001               	goto	l767
  7083  0025D8                     l766:
  7084  0025D8  929D               	bcf	3997,1,c	;volatile
  7085  0025DA                     l767:
  7086  0025DA  84CA               	bsf	4042,2,c	;volatile
  7087  0025DC  0012               	return		;funcret
  7088  0025DE                     __end_of_OpenTimer2:
  7089                           	opt stack 0
  7090                           tblptru	equ	0xFF8
  7091                           tblptrh	equ	0xFF7
  7092                           tblptrl	equ	0xFF6
  7093                           tablat	equ	0xFF5
  7094                           prodh	equ	0xFF4
  7095                           prodl	equ	0xFF3
  7096                           intcon	equ	0xFF2
  7097                           intcon2	equ	0xFF1
  7098                           postinc0	equ	0xFEE
  7099                           wreg	equ	0xFE8
  7100                           indf1	equ	0xFE7
  7101                           fsr1h	equ	0xFE2
  7102                           fsr1l	equ	0xFE1
  7103                           indf2	equ	0xFDF
  7104                           fsr2h	equ	0xFDA
  7105                           fsr2l	equ	0xFD9
  7106                           status	equ	0xFD8
  7107                           
  7108 ;; *************** function _OpenEPWM1 *****************
  7109 ;; Defined at:
  7110 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\pic18\plib\PWM\ew1open.c"
  7111 ;; Parameters:    Size  Location     Type
  7112 ;;  period          1    wreg     unsigned char 
  7113 ;; Auto vars:     Size  Location     Type
  7114 ;;  period          1   29[COMRAM] unsigned char 
  7115 ;; Return value:  Size  Location     Type
  7116 ;;		None               void
  7117 ;; Registers used:
  7118 ;;		wreg, status,2
  7119 ;; Tracked objects:
  7120 ;;		On entry : 0/0
  7121 ;;		On exit  : 0/0
  7122 ;;		Unchanged: 0/0
  7123 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  7124 ;;      Params:         0       0       0       0
  7125 ;;      Locals:         1       0       0       0
  7126 ;;      Temps:          0       0       0       0
  7127 ;;      Totals:         1       0       0       0
  7128 ;;Total ram usage:        1 bytes
  7129 ;; Hardware stack levels used:    1
  7130 ;; Hardware stack levels required when called:    2
  7131 ;; This function calls:
  7132 ;;		Nothing
  7133 ;; This function is called by:
  7134 ;;		_main
  7135 ;; This function uses a non-reentrant model
  7136 ;;
  7137                           
  7138                           	psect	text17
  7139  002606                     __ptext17:
  7140                           	opt stack 0
  7141  002606                     _OpenEPWM1:
  7142                           	opt stack 28
  7143                           
  7144                           ;incstack = 0
  7145                           ;OpenEPWM1@period stored from wreg
  7146  002606  6E1E               	movwf	OpenEPWM1@period,c
  7147  002608  0E0C               	movlw	12
  7148  00260A  6EBA               	movwf	4026,c	;volatile
  7149  00260C  94CA               	bcf	4042,2,c	;volatile
  7150  00260E  C01E  FFCB         	movff	OpenEPWM1@period,4043	;volatile
  7151  002612  84CA               	bsf	4042,2,c	;volatile
  7152  002614  0012               	return		;funcret
  7153  002616                     __end_of_OpenEPWM1:
  7154                           	opt stack 0
  7155                           tblptru	equ	0xFF8
  7156                           tblptrh	equ	0xFF7
  7157                           tblptrl	equ	0xFF6
  7158                           tablat	equ	0xFF5
  7159                           prodh	equ	0xFF4
  7160                           prodl	equ	0xFF3
  7161                           intcon	equ	0xFF2
  7162                           intcon2	equ	0xFF1
  7163                           postinc0	equ	0xFEE
  7164                           wreg	equ	0xFE8
  7165                           indf1	equ	0xFE7
  7166                           fsr1h	equ	0xFE2
  7167                           fsr1l	equ	0xFE1
  7168                           indf2	equ	0xFDF
  7169                           fsr2h	equ	0xFDA
  7170                           fsr2l	equ	0xFD9
  7171                           status	equ	0xFD8
  7172                           
  7173 ;; *************** function _CANisTXwarningON *****************
  7174 ;; Defined at:
  7175 ;;		line 1119 in file "CANlib.h"
  7176 ;; Parameters:    Size  Location     Type
  7177 ;;		None
  7178 ;; Auto vars:     Size  Location     Type
  7179 ;;		None
  7180 ;; Return value:  Size  Location     Type
  7181 ;;                  1    wreg      unsigned char 
  7182 ;; Registers used:
  7183 ;;		wreg
  7184 ;; Tracked objects:
  7185 ;;		On entry : 0/0
  7186 ;;		On exit  : 0/0
  7187 ;;		Unchanged: 0/0
  7188 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  7189 ;;      Params:         0       0       0       0
  7190 ;;      Locals:         0       0       0       0
  7191 ;;      Temps:          0       0       0       0
  7192 ;;      Totals:         0       0       0       0
  7193 ;;Total ram usage:        0 bytes
  7194 ;; Hardware stack levels used:    1
  7195 ;; Hardware stack levels required when called:    2
  7196 ;; This function calls:
  7197 ;;		Nothing
  7198 ;; This function is called by:
  7199 ;;		_main
  7200 ;; This function uses a non-reentrant model
  7201 ;;
  7202                           
  7203                           	psect	text18
  7204  002616                     __ptext18:
  7205                           	opt stack 0
  7206  002616                     _CANisTXwarningON:
  7207                           	opt stack 28
  7208                           
  7209                           ;CANlib.h: 1121: return (COMSTATbits.TXWARN);
  7210                           
  7211                           ;incstack = 0
  7212  002616  A474               	btfss	3956,2,c	;volatile
  7213  002618  D002               	goto	u4100
  7214  00261A  0E01               	movlw	1
  7215  00261C  0012               	return	
  7216  00261E                     u4100:
  7217  00261E  0E00               	movlw	0
  7218  002620  0012               	return	
  7219  002622                     __end_of_CANisTXwarningON:
  7220                           	opt stack 0
  7221                           tblptru	equ	0xFF8
  7222                           tblptrh	equ	0xFF7
  7223                           tblptrl	equ	0xFF6
  7224                           tablat	equ	0xFF5
  7225                           prodh	equ	0xFF4
  7226                           prodl	equ	0xFF3
  7227                           intcon	equ	0xFF2
  7228                           intcon2	equ	0xFF1
  7229                           postinc0	equ	0xFEE
  7230                           wreg	equ	0xFE8
  7231                           indf1	equ	0xFE7
  7232                           fsr1h	equ	0xFE2
  7233                           fsr1l	equ	0xFE1
  7234                           indf2	equ	0xFDF
  7235                           fsr2h	equ	0xFDA
  7236                           fsr2l	equ	0xFD9
  7237                           status	equ	0xFD8
  7238                           
  7239 ;; *************** function _CANisRXwarningON *****************
  7240 ;; Defined at:
  7241 ;;		line 1127 in file "CANlib.h"
  7242 ;; Parameters:    Size  Location     Type
  7243 ;;		None
  7244 ;; Auto vars:     Size  Location     Type
  7245 ;;		None
  7246 ;; Return value:  Size  Location     Type
  7247 ;;                  1    wreg      unsigned char 
  7248 ;; Registers used:
  7249 ;;		wreg
  7250 ;; Tracked objects:
  7251 ;;		On entry : 0/0
  7252 ;;		On exit  : 0/0
  7253 ;;		Unchanged: 0/0
  7254 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  7255 ;;      Params:         0       0       0       0
  7256 ;;      Locals:         0       0       0       0
  7257 ;;      Temps:          0       0       0       0
  7258 ;;      Totals:         0       0       0       0
  7259 ;;Total ram usage:        0 bytes
  7260 ;; Hardware stack levels used:    1
  7261 ;; Hardware stack levels required when called:    2
  7262 ;; This function calls:
  7263 ;;		Nothing
  7264 ;; This function is called by:
  7265 ;;		_main
  7266 ;; This function uses a non-reentrant model
  7267 ;;
  7268                           
  7269                           	psect	text19
  7270  002622                     __ptext19:
  7271                           	opt stack 0
  7272  002622                     _CANisRXwarningON:
  7273                           	opt stack 28
  7274                           
  7275                           ;CANlib.h: 1129: return (COMSTATbits.RXWARN);
  7276                           
  7277                           ;incstack = 0
  7278  002622  A274               	btfss	3956,1,c	;volatile
  7279  002624  D002               	goto	u4110
  7280  002626  0E01               	movlw	1
  7281  002628  0012               	return	
  7282  00262A                     u4110:
  7283  00262A  0E00               	movlw	0
  7284  00262C  0012               	return	
  7285  00262E                     __end_of_CANisRXwarningON:
  7286                           	opt stack 0
  7287                           tblptru	equ	0xFF8
  7288                           tblptrh	equ	0xFF7
  7289                           tblptrl	equ	0xFF6
  7290                           tablat	equ	0xFF5
  7291                           prodh	equ	0xFF4
  7292                           prodl	equ	0xFF3
  7293                           intcon	equ	0xFF2
  7294                           intcon2	equ	0xFF1
  7295                           postinc0	equ	0xFEE
  7296                           wreg	equ	0xFE8
  7297                           indf1	equ	0xFE7
  7298                           fsr1h	equ	0xFE2
  7299                           fsr1l	equ	0xFE1
  7300                           indf2	equ	0xFDF
  7301                           fsr2h	equ	0xFDA
  7302                           fsr2l	equ	0xFD9
  7303                           status	equ	0xFD8
  7304                           
  7305 ;; *************** function _ISR_bassa *****************
  7306 ;; Defined at:
  7307 ;;		line 89 in file "motore.c"
  7308 ;; Parameters:    Size  Location     Type
  7309 ;;		None
  7310 ;; Auto vars:     Size  Location     Type
  7311 ;;		None
  7312 ;; Return value:  Size  Location     Type
  7313 ;;		None               void
  7314 ;; Registers used:
  7315 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7316 ;; Tracked objects:
  7317 ;;		On entry : 0/0
  7318 ;;		On exit  : 0/0
  7319 ;;		Unchanged: 0/0
  7320 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  7321 ;;      Params:         0       0       0       0
  7322 ;;      Locals:         0       0       0       0
  7323 ;;      Temps:         17       0       0       0
  7324 ;;      Totals:        17       0       0       0
  7325 ;;Total ram usage:       17 bytes
  7326 ;; Hardware stack levels used:    1
  7327 ;; Hardware stack levels required when called:    1
  7328 ;; This function calls:
  7329 ;;		_CANisRxReady
  7330 ;;		_CANreceiveMessage
  7331 ;; This function is called by:
  7332 ;;		Interrupt level 1
  7333 ;; This function uses a non-reentrant model
  7334 ;;
  7335                           
  7336                           	psect	intcodelo
  7337  000018                     __pintcodelo:
  7338                           	opt stack 0
  7339  000018                     _ISR_bassa:
  7340                           	opt stack 26
  7341                           
  7342                           ;incstack = 0
  7343  000018  8042               	bsf	btemp,0,c	;set compiler interrupt flag (level 1)
  7344  00001A  CFD8 F00D          	movff	status,??_ISR_bassa
  7345  00001E  CFE8 F00E          	movff	wreg,??_ISR_bassa+1
  7346  000022  CFE0 F00F          	movff	bsr,??_ISR_bassa+2
  7347  000026  CFFA F010          	movff	pclath,??_ISR_bassa+3
  7348  00002A  CFFB F011          	movff	pclatu,??_ISR_bassa+4
  7349  00002E  CFE9 F012          	movff	fsr0l,??_ISR_bassa+5
  7350  000032  CFEA F013          	movff	fsr0h,??_ISR_bassa+6
  7351  000036  CFE1 F014          	movff	fsr1l,??_ISR_bassa+7
  7352  00003A  CFE2 F015          	movff	fsr1h,??_ISR_bassa+8
  7353  00003E  CFD9 F016          	movff	fsr2l,??_ISR_bassa+9
  7354  000042  CFDA F017          	movff	fsr2h,??_ISR_bassa+10
  7355  000046  CFF3 F018          	movff	prodl,??_ISR_bassa+11
  7356  00004A  CFF4 F019          	movff	prodh,??_ISR_bassa+12
  7357  00004E  CFF6 F01A          	movff	tblptrl,??_ISR_bassa+13
  7358  000052  CFF7 F01B          	movff	tblptrh,??_ISR_bassa+14
  7359  000056  CFF8 F01C          	movff	tblptru,??_ISR_bassa+15
  7360  00005A  CFF5 F01D          	movff	tablat,??_ISR_bassa+16
  7361                           
  7362                           ;motore.c: 90: if ((PIR3bits.RXB0IF == 1) || (PIR3bits.RXB1IF == 1)) {
  7363  00005E  A0A4               	btfss	4004,0,c	;volatile
  7364  000060  B2A4               	btfsc	4004,1,c	;volatile
  7365  000062  D001               	goto	i1l3794
  7366  000064  D07E               	goto	i1l665
  7367  000066                     i1l3794:
  7368                           
  7369                           ;motore.c: 91: if (CANisRxReady()) {
  7370  000066  ECEF  F012         	call	_CANisRxReady	;wreg free
  7371  00006A  0900               	iorlw	0
  7372  00006C  B4D8               	btfsc	status,2,c
  7373  00006E  D06C               	goto	i1l653
  7374                           
  7375                           ;motore.c: 92: CANreceiveMessage(&msg);
  7376  000070  0E84               	movlw	low _msg
  7377  000072  6E01               	movwf	CANreceiveMessage@msg,c
  7378  000074  0E00               	movlw	high _msg
  7379  000076  6E02               	movwf	CANreceiveMessage@msg+1,c
  7380  000078  ECB4  F009         	call	_CANreceiveMessage	;wreg free
  7381                           
  7382                           ;motore.c: 93: if (msg.RTR == 1) {
  7383  00007C  0100               	movlb	0	; () banked
  7384  00007E  0592               	decf	(_msg+14)& (0+255),w,b
  7385  000080  A4D8               	btfss	status,2,c
  7386  000082  D00E               	goto	i1l3802
  7387                           
  7388                           ; BSR set to: 0
  7389                           ;motore.c: 94: id = msg.identifier;
  7390  000084  C084  F025         	movff	_msg,_id
  7391  000088  C085  F026         	movff	_msg+1,_id+1
  7392  00008C  C086  F027         	movff	_msg+2,_id+2
  7393  000090  C087  F028         	movff	_msg+3,_id+3
  7394                           
  7395                           ;motore.c: 95: remote_frame = msg.RTR;
  7396  000094  0100               	movlb	0	; () banked
  7397  000096  A192               	btfss	(_msg+14)& (0+255),0,b
  7398  000098  D002               	goto	i1u441_20
  7399  00009A  8A3E               	bsf	_remote_frame/(0+8),_remote_frame& (0+7),c
  7400  00009C  D001               	goto	i1l3802
  7401  00009E                     i1u441_20:
  7402  00009E  9A3E               	bcf	_remote_frame/(0+8),_remote_frame& (0+7),c
  7403  0000A0                     i1l3802:
  7404                           
  7405                           ;motore.c: 96: }
  7406                           ;motore.c: 97: if (msg.identifier == 0b00000000000000000000000000011) {
  7407  0000A0  0E03               	movlw	3
  7408  0000A2  0100               	movlb	0	; () banked
  7409  0000A4  1984               	xorwf	_msg& (0+255),w,b
  7410  0000A6  0100               	movlb	0	; () banked
  7411  0000A8  1185               	iorwf	(_msg+1)& (0+255),w,b
  7412  0000AA  0100               	movlb	0	; () banked
  7413  0000AC  1186               	iorwf	(_msg+2)& (0+255),w,b
  7414  0000AE  0100               	movlb	0	; () banked
  7415  0000B0  1187               	iorwf	(_msg+3)& (0+255),w,b
  7416  0000B2  A4D8               	btfss	status,2,c
  7417  0000B4  D00D               	goto	i1l3806
  7418                           
  7419                           ; BSR set to: 0
  7420                           ;motore.c: 98: currentSpeed = msg.data[0];
  7421  0000B6  C088  F040         	movff	_msg+4,_currentSpeed
  7422                           
  7423                           ;motore.c: 99: dir = msg.data[1];
  7424  0000BA  C089  F031         	movff	_msg+5,_dir
  7425  0000BE  6A32               	clrf	_dir+1,c
  7426                           
  7427                           ;motore.c: 100: previousTimeCounter = timeCounter;
  7428  0000C0  C029  F078         	movff	_timeCounter,_previousTimeCounter
  7429  0000C4  C02A  F079         	movff	_timeCounter+1,_previousTimeCounter+1
  7430  0000C8  C02B  F07A         	movff	_timeCounter+2,_previousTimeCounter+2
  7431  0000CC  C02C  F07B         	movff	_timeCounter+3,_previousTimeCounter+3
  7432  0000D0                     i1l3806:
  7433                           
  7434                           ; BSR set to: 0
  7435                           ;motore.c: 101: }
  7436                           ;motore.c: 102: if (msg.identifier == 0b00000000000000000000000000001) {
  7437  0000D0  0100               	movlb	0	; () banked
  7438  0000D2  0584               	decf	_msg& (0+255),w,b
  7439  0000D4  0100               	movlb	0	; () banked
  7440  0000D6  1185               	iorwf	(_msg+1)& (0+255),w,b
  7441  0000D8  0100               	movlb	0	; () banked
  7442  0000DA  1186               	iorwf	(_msg+2)& (0+255),w,b
  7443  0000DC  0100               	movlb	0	; () banked
  7444  0000DE  1187               	iorwf	(_msg+3)& (0+255),w,b
  7445  0000E0  A4D8               	btfss	status,2,c
  7446  0000E2  D003               	goto	i1l3812
  7447                           
  7448                           ; BSR set to: 0
  7449                           ;motore.c: 103: currentSpeed = 0;
  7450  0000E4  0E00               	movlw	0
  7451  0000E6  6E40               	movwf	_currentSpeed,c
  7452                           
  7453                           ; BSR set to: 0
  7454                           ;motore.c: 104: PORTAbits.RA1 = 1;
  7455  0000E8  8280               	bsf	3968,1,c	;volatile
  7456  0000EA                     i1l3812:
  7457                           
  7458                           ; BSR set to: 0
  7459                           ;motore.c: 105: }
  7460                           ;motore.c: 106: if (msg.identifier == 0b00000000000000000000000000110) {
  7461  0000EA  0E06               	movlw	6
  7462  0000EC  0100               	movlb	0	; () banked
  7463  0000EE  1984               	xorwf	_msg& (0+255),w,b
  7464  0000F0  0100               	movlb	0	; () banked
  7465  0000F2  1185               	iorwf	(_msg+1)& (0+255),w,b
  7466  0000F4  0100               	movlb	0	; () banked
  7467  0000F6  1186               	iorwf	(_msg+2)& (0+255),w,b
  7468  0000F8  0100               	movlb	0	; () banked
  7469  0000FA  1187               	iorwf	(_msg+3)& (0+255),w,b
  7470  0000FC  A4D8               	btfss	status,2,c
  7471  0000FE  D005               	goto	i1l3816
  7472                           
  7473                           ; BSR set to: 0
  7474                           ;motore.c: 107: left_speed = msg.data[0];
  7475  000100  C088  F03A         	movff	_msg+4,_left_speed
  7476                           
  7477                           ;motore.c: 108: right_speed = msg.data[1];
  7478  000104  C089  F03D         	movff	_msg+5,_right_speed
  7479                           
  7480                           ;motore.c: 109: speed_fetched = 1;
  7481  000108  803F               	bsf	_speed_fetched/(0+8),_speed_fetched& (0+7),c
  7482  00010A                     i1l3816:
  7483                           
  7484                           ; BSR set to: 0
  7485                           ;motore.c: 110: }
  7486                           ;motore.c: 111: if (msg.identifier == 0b00000000000000000000000000010) {
  7487  00010A  0E02               	movlw	2
  7488  00010C  0100               	movlb	0	; () banked
  7489  00010E  1984               	xorwf	_msg& (0+255),w,b
  7490  000110  0100               	movlb	0	; () banked
  7491  000112  1185               	iorwf	(_msg+1)& (0+255),w,b
  7492  000114  0100               	movlb	0	; () banked
  7493  000116  1186               	iorwf	(_msg+2)& (0+255),w,b
  7494  000118  0100               	movlb	0	; () banked
  7495  00011A  1187               	iorwf	(_msg+3)& (0+255),w,b
  7496  00011C  B4D8               	btfsc	status,2,c
  7497  00011E  D007               	goto	i1l3822
  7498  000120  D013               	goto	i1l653
  7499  000122                     i1l660:
  7500                           
  7501                           ; BSR set to: 0
  7502  000122  823E               	bsf	_centralina_abs/(0+8),_centralina_abs& (0+7),c
  7503                           
  7504                           ;motore.c: 114: break;
  7505  000124  D00F               	goto	i1l661
  7506  000126                     i1l662:
  7507                           
  7508                           ; BSR set to: 0
  7509  000126  863E               	bsf	_centralina_sterzo/(0+8),_centralina_sterzo& (0+7),c
  7510                           
  7511                           ;motore.c: 116: break;
  7512  000128  D00D               	goto	i1l661
  7513  00012A                     i1l663:
  7514                           
  7515                           ; BSR set to: 0
  7516  00012A  843E               	bsf	_centralina_comando/(0+8),_centralina_comando& (0+7),c
  7517                           
  7518                           ; BSR set to: 0
  7519                           ;motore.c: 119: }
  7520                           
  7521                           ;motore.c: 118: break;
  7522  00012C  D00B               	goto	i1l661
  7523  00012E                     i1l3822:
  7524                           
  7525                           ; BSR set to: 0
  7526  00012E  0100               	movlb	0	; () banked
  7527  000130  5188               	movf	(_msg+4)& (0+255),w,b
  7528                           
  7529                           ; Switch size 1, requested type "space"
  7530                           ; Number of cases is 3, Range of values is 1 to 3
  7531                           ; switch strategies available:
  7532                           ; Name         Instructions Cycles
  7533                           ; simple_byte           10     6 (average)
  7534                           ;	Chosen strategy is simple_byte
  7535  000132  0A01               	xorlw	1	; case 1
  7536  000134  B4D8               	btfsc	status,2,c
  7537  000136  D7F5               	goto	i1l660
  7538  000138  0A03               	xorlw	3	; case 2
  7539  00013A  B4D8               	btfsc	status,2,c
  7540  00013C  D7F4               	goto	i1l662
  7541  00013E  0A01               	xorlw	1	; case 3
  7542  000140  B4D8               	btfsc	status,2,c
  7543  000142  D7F3               	goto	i1l663
  7544  000144                     i1l661:
  7545                           
  7546                           ; BSR set to: 0
  7547                           ;motore.c: 120: PIR3bits.RXB0IF = 0;
  7548  000144  90A4               	bcf	4004,0,c	;volatile
  7549                           
  7550                           ;motore.c: 121: PIR3bits.RXB1IF = 0;
  7551  000146  92A4               	bcf	4004,1,c	;volatile
  7552  000148                     i1l653:
  7553                           
  7554                           ;motore.c: 122: }
  7555                           ;motore.c: 123: }
  7556                           ;motore.c: 124: if (PIR2bits.TMR3IF) {
  7557  000148  A2A1               	btfss	4001,1,c	;volatile
  7558  00014A  D00B               	goto	i1l665
  7559                           
  7560                           ;motore.c: 125: timeCounter++;
  7561  00014C  0E01               	movlw	1
  7562  00014E  2629               	addwf	_timeCounter,f,c
  7563  000150  0E00               	movlw	0
  7564  000152  222A               	addwfc	_timeCounter+1,f,c
  7565  000154  222B               	addwfc	_timeCounter+2,f,c
  7566  000156  222C               	addwfc	_timeCounter+3,f,c
  7567                           
  7568                           ;motore.c: 126: TMR3H = 0x63;
  7569  000158  0E63               	movlw	99
  7570  00015A  6EB3               	movwf	4019,c	;volatile
  7571                           
  7572                           ;motore.c: 127: TMR3L = 0xC0;
  7573  00015C  0EC0               	movlw	192
  7574  00015E  6EB2               	movwf	4018,c	;volatile
  7575                           
  7576                           ;motore.c: 128: PIR2bits.TMR3IF = 0;
  7577  000160  92A1               	bcf	4001,1,c	;volatile
  7578  000162                     i1l665:
  7579  000162  C01D  FFF5         	movff	??_ISR_bassa+16,tablat
  7580  000166  C01C  FFF8         	movff	??_ISR_bassa+15,tblptru
  7581  00016A  C01B  FFF7         	movff	??_ISR_bassa+14,tblptrh
  7582  00016E  C01A  FFF6         	movff	??_ISR_bassa+13,tblptrl
  7583  000172  C019  FFF4         	movff	??_ISR_bassa+12,prodh
  7584  000176  C018  FFF3         	movff	??_ISR_bassa+11,prodl
  7585  00017A  C017  FFDA         	movff	??_ISR_bassa+10,fsr2h
  7586  00017E  C016  FFD9         	movff	??_ISR_bassa+9,fsr2l
  7587  000182  C015  FFE2         	movff	??_ISR_bassa+8,fsr1h
  7588  000186  C014  FFE1         	movff	??_ISR_bassa+7,fsr1l
  7589  00018A  C013  FFEA         	movff	??_ISR_bassa+6,fsr0h
  7590  00018E  C012  FFE9         	movff	??_ISR_bassa+5,fsr0l
  7591  000192  C011  FFFB         	movff	??_ISR_bassa+4,pclatu
  7592  000196  C010  FFFA         	movff	??_ISR_bassa+3,pclath
  7593  00019A  C00F  FFE0         	movff	??_ISR_bassa+2,bsr
  7594  00019E  C00E  FFE8         	movff	??_ISR_bassa+1,wreg
  7595  0001A2  C00D  FFD8         	movff	??_ISR_bassa,status
  7596  0001A6  9042               	bcf	btemp,0,c	;clear compiler interrupt flag (level 1)
  7597  0001A8  0010               	retfie	
  7598  0001AA                     __end_of_ISR_bassa:
  7599                           	opt stack 0
  7600                           pclatu	equ	0xFFB
  7601                           pclath	equ	0xFFA
  7602                           tblptru	equ	0xFF8
  7603                           tblptrh	equ	0xFF7
  7604                           tblptrl	equ	0xFF6
  7605                           tablat	equ	0xFF5
  7606                           prodh	equ	0xFF4
  7607                           prodl	equ	0xFF3
  7608                           intcon	equ	0xFF2
  7609                           intcon2	equ	0xFF1
  7610                           postinc0	equ	0xFEE
  7611                           fsr0h	equ	0xFEA
  7612                           fsr0l	equ	0xFE9
  7613                           wreg	equ	0xFE8
  7614                           indf1	equ	0xFE7
  7615                           fsr1h	equ	0xFE2
  7616                           fsr1l	equ	0xFE1
  7617                           bsr	equ	0xFE0
  7618                           indf2	equ	0xFDF
  7619                           fsr2h	equ	0xFDA
  7620                           fsr2l	equ	0xFD9
  7621                           status	equ	0xFD8
  7622                           
  7623 ;; *************** function _CANreceiveMessage *****************
  7624 ;; Defined at:
  7625 ;;		line 528 in file "CANlib.h"
  7626 ;; Parameters:    Size  Location     Type
  7627 ;;  msg             2    0[COMRAM] PTR struct .
  7628 ;;		 -> msg(15), 
  7629 ;; Auto vars:     Size  Location     Type
  7630 ;;  tamp            1   11[COMRAM] unsigned char 
  7631 ;;  error           1   10[COMRAM] unsigned char 
  7632 ;; Return value:  Size  Location     Type
  7633 ;;                  1    wreg      unsigned char 
  7634 ;; Registers used:
  7635 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7636 ;; Tracked objects:
  7637 ;;		On entry : 0/0
  7638 ;;		On exit  : 0/0
  7639 ;;		Unchanged: 0/0
  7640 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  7641 ;;      Params:         2       0       0       0
  7642 ;;      Locals:         2       0       0       0
  7643 ;;      Temps:          8       0       0       0
  7644 ;;      Totals:        12       0       0       0
  7645 ;;Total ram usage:       12 bytes
  7646 ;; Hardware stack levels used:    1
  7647 ;; This function calls:
  7648 ;;		Nothing
  7649 ;; This function is called by:
  7650 ;;		_ISR_bassa
  7651 ;; This function uses a non-reentrant model
  7652 ;;
  7653                           
  7654                           	psect	text21
  7655  001368                     __ptext21:
  7656                           	opt stack 0
  7657  001368                     _CANreceiveMessage:
  7658                           	opt stack 26
  7659                           
  7660                           ;CANlib.h: 530: BYTE tamp;
  7661                           ;CANlib.h: 531: BYTE error = 0;
  7662                           
  7663                           ;incstack = 0
  7664  001368  0E00               	movlw	0
  7665  00136A  6E0B               	movwf	CANreceiveMessage@error,c
  7666                           
  7667                           ;CANlib.h: 533: if (COMSTATbits.RXB0OVFL == 0x01)
  7668  00136C  BE74               	btfsc	3956,7,c	;volatile
  7669                           
  7670                           ;CANlib.h: 534: error |= CAN_RX_BUFFER_1_OVFL;
  7671  00136E  800B               	bsf	CANreceiveMessage@error,0,c
  7672                           
  7673                           ;CANlib.h: 536: if (COMSTATbits.RXB1OVFL == 0x01)
  7674  001370  BC74               	btfsc	3956,6,c	;volatile
  7675                           
  7676                           ;CANlib.h: 537: error |= CAN_RX_BUFFER_2_OVFL;
  7677  001372  820B               	bsf	CANreceiveMessage@error,1,c
  7678                           
  7679                           ;CANlib.h: 540: if (RXB1CONbits.RXFUL ==0x01)
  7680  001374  010F               	movlb	15	; () banked
  7681  001376  AF50               	btfss	80,7,b	;volatile
  7682  001378  D143               	goto	i1l412
  7683                           
  7684                           ; BSR set to: 15
  7685                           ;CANlib.h: 541: {
  7686                           ;CANlib.h: 542: msg->identifier = 0;
  7687  00137A  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7688  00137E  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7689  001382  6ADE               	clrf	postinc2,c
  7690  001384  6ADE               	clrf	postinc2,c
  7691  001386  6ADE               	clrf	postinc2,c
  7692  001388  6ADD               	clrf	postdec2,c
  7693                           
  7694                           ; BSR set to: 15
  7695                           ;CANlib.h: 543: msg->data[0] =RXB1D0;
  7696  00138A  EE20 F004          	lfsr	2,4
  7697  00138E  5001               	movf	CANreceiveMessage@msg,w,c
  7698  001390  26D9               	addwf	fsr2l,f,c
  7699  001392  5002               	movf	CANreceiveMessage@msg+1,w,c
  7700  001394  22DA               	addwfc	fsr2h,f,c
  7701  001396  CF56 FFDF          	movff	3926,indf2	;volatile
  7702                           
  7703                           ; BSR set to: 15
  7704                           ;CANlib.h: 544: msg->data[1] =RXB1D1;
  7705  00139A  EE20 F005          	lfsr	2,5
  7706  00139E  5001               	movf	CANreceiveMessage@msg,w,c
  7707  0013A0  26D9               	addwf	fsr2l,f,c
  7708  0013A2  5002               	movf	CANreceiveMessage@msg+1,w,c
  7709  0013A4  22DA               	addwfc	fsr2h,f,c
  7710  0013A6  CF57 FFDF          	movff	3927,indf2	;volatile
  7711                           
  7712                           ; BSR set to: 15
  7713                           ;CANlib.h: 545: msg->data[2] =RXB1D2;
  7714  0013AA  EE20 F006          	lfsr	2,6
  7715  0013AE  5001               	movf	CANreceiveMessage@msg,w,c
  7716  0013B0  26D9               	addwf	fsr2l,f,c
  7717  0013B2  5002               	movf	CANreceiveMessage@msg+1,w,c
  7718  0013B4  22DA               	addwfc	fsr2h,f,c
  7719  0013B6  CF58 FFDF          	movff	3928,indf2	;volatile
  7720                           
  7721                           ; BSR set to: 15
  7722                           ;CANlib.h: 546: msg->data[3] =RXB1D3;
  7723  0013BA  EE20 F007          	lfsr	2,7
  7724  0013BE  5001               	movf	CANreceiveMessage@msg,w,c
  7725  0013C0  26D9               	addwf	fsr2l,f,c
  7726  0013C2  5002               	movf	CANreceiveMessage@msg+1,w,c
  7727  0013C4  22DA               	addwfc	fsr2h,f,c
  7728  0013C6  CF59 FFDF          	movff	3929,indf2	;volatile
  7729                           
  7730                           ; BSR set to: 15
  7731                           ;CANlib.h: 547: msg->data[4] =RXB1D4;
  7732  0013CA  EE20 F008          	lfsr	2,8
  7733  0013CE  5001               	movf	CANreceiveMessage@msg,w,c
  7734  0013D0  26D9               	addwf	fsr2l,f,c
  7735  0013D2  5002               	movf	CANreceiveMessage@msg+1,w,c
  7736  0013D4  22DA               	addwfc	fsr2h,f,c
  7737  0013D6  CF5A FFDF          	movff	3930,indf2	;volatile
  7738                           
  7739                           ; BSR set to: 15
  7740                           ;CANlib.h: 548: msg->data[5] =RXB1D5;
  7741  0013DA  EE20 F009          	lfsr	2,9
  7742  0013DE  5001               	movf	CANreceiveMessage@msg,w,c
  7743  0013E0  26D9               	addwf	fsr2l,f,c
  7744  0013E2  5002               	movf	CANreceiveMessage@msg+1,w,c
  7745  0013E4  22DA               	addwfc	fsr2h,f,c
  7746  0013E6  CF5B FFDF          	movff	3931,indf2	;volatile
  7747                           
  7748                           ; BSR set to: 15
  7749                           ;CANlib.h: 549: msg->data[6] =RXB1D6;
  7750  0013EA  EE20 F00A          	lfsr	2,10
  7751  0013EE  5001               	movf	CANreceiveMessage@msg,w,c
  7752  0013F0  26D9               	addwf	fsr2l,f,c
  7753  0013F2  5002               	movf	CANreceiveMessage@msg+1,w,c
  7754  0013F4  22DA               	addwfc	fsr2h,f,c
  7755  0013F6  CF5C FFDF          	movff	3932,indf2	;volatile
  7756                           
  7757                           ; BSR set to: 15
  7758                           ;CANlib.h: 550: msg->data[7] =RXB1D7;
  7759  0013FA  EE20 F00B          	lfsr	2,11
  7760  0013FE  5001               	movf	CANreceiveMessage@msg,w,c
  7761  001400  26D9               	addwf	fsr2l,f,c
  7762  001402  5002               	movf	CANreceiveMessage@msg+1,w,c
  7763  001404  22DA               	addwfc	fsr2h,f,c
  7764  001406  CF5D FFDF          	movff	3933,indf2	;volatile
  7765                           
  7766                           ; BSR set to: 15
  7767                           ;CANlib.h: 552: msg->RTR = RXB1DLCbits.RXRTR;
  7768  00140A  EE20 F00E          	lfsr	2,14
  7769  00140E  5001               	movf	CANreceiveMessage@msg,w,c
  7770  001410  26D9               	addwf	fsr2l,f,c
  7771  001412  5002               	movf	CANreceiveMessage@msg+1,w,c
  7772  001414  22DA               	addwfc	fsr2h,f,c
  7773  001416  010F               	movlb	15	; () banked
  7774  001418  AD55               	btfss	85,6,b	;volatile
  7775  00141A  D002               	goto	i1u389_20
  7776  00141C  0E01               	movlw	1
  7777  00141E  D001               	goto	i1u389_26
  7778  001420                     i1u389_20:
  7779  001420  0E00               	movlw	0
  7780  001422                     i1u389_26:
  7781  001422  6EDF               	movwf	indf2,c
  7782                           
  7783                           ; BSR set to: 15
  7784                           ;CANlib.h: 554: msg->length = RXB1DLC & 0x0F;
  7785  001424  EE20 F00D          	lfsr	2,13
  7786  001428  5001               	movf	CANreceiveMessage@msg,w,c
  7787  00142A  26D9               	addwf	fsr2l,f,c
  7788  00142C  5002               	movf	CANreceiveMessage@msg+1,w,c
  7789  00142E  22DA               	addwfc	fsr2h,f,c
  7790  001430  010F               	movlb	15	; () banked
  7791  001432  5155               	movf	85,w,b	;volatile
  7792  001434  0B0F               	andlw	15
  7793  001436  6EDF               	movwf	indf2,c
  7794                           
  7795                           ; BSR set to: 15
  7796                           ;CANlib.h: 556: msg->type = RXB1SIDLbits.EXID;
  7797  001438  EE20 F00C          	lfsr	2,12
  7798  00143C  5001               	movf	CANreceiveMessage@msg,w,c
  7799  00143E  26D9               	addwf	fsr2l,f,c
  7800  001440  5002               	movf	CANreceiveMessage@msg+1,w,c
  7801  001442  22DA               	addwfc	fsr2h,f,c
  7802  001444  010F               	movlb	15	; () banked
  7803  001446  A752               	btfss	82,3,b	;volatile
  7804  001448  D002               	goto	i1u390_20
  7805  00144A  0E01               	movlw	1
  7806  00144C  D001               	goto	i1u390_26
  7807  00144E                     i1u390_20:
  7808  00144E  0E00               	movlw	0
  7809  001450                     i1u390_26:
  7810  001450  6EDF               	movwf	indf2,c
  7811                           
  7812                           ; BSR set to: 15
  7813                           ;CANlib.h: 558: if (RXB1SIDLbits.EXID == 0)
  7814  001452  010F               	movlb	15	; () banked
  7815  001454  B752               	btfsc	82,3,b	;volatile
  7816  001456  D044               	goto	i1l3496
  7817                           
  7818                           ; BSR set to: 15
  7819                           ;CANlib.h: 559: {
  7820                           ;CANlib.h: 560: msg->identifier = ((unsigned long)RXB1SIDH)<< 3;
  7821  001458  CF51 F003          	movff	3921,??_CANreceiveMessage	;volatile
  7822  00145C  6A04               	clrf	(??_CANreceiveMessage+1)& (0+255),c
  7823  00145E  6A05               	clrf	(??_CANreceiveMessage+2)& (0+255),c
  7824  001460  6A06               	clrf	(??_CANreceiveMessage+3)& (0+255),c
  7825  001462  0E03               	movlw	3
  7826  001464                     i1u392_25:
  7827  001464  90D8               	bcf	status,0,c
  7828  001466  3603               	rlcf	??_CANreceiveMessage,f,c
  7829  001468  3604               	rlcf	??_CANreceiveMessage+1,f,c
  7830  00146A  3605               	rlcf	??_CANreceiveMessage+2,f,c
  7831  00146C  3606               	rlcf	??_CANreceiveMessage+3,f,c
  7832  00146E  2EE8               	decfsz	wreg,f,c
  7833  001470  D7F9               	goto	i1u392_25
  7834  001472  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7835  001476  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7836  00147A  C003  FFDE         	movff	??_CANreceiveMessage,postinc2
  7837  00147E  C004  FFDE         	movff	??_CANreceiveMessage+1,postinc2
  7838  001482  C005  FFDE         	movff	??_CANreceiveMessage+2,postinc2
  7839  001486  C006  FFDE         	movff	??_CANreceiveMessage+3,postinc2
  7840                           
  7841                           ; BSR set to: 15
  7842                           ;CANlib.h: 561: tamp = (RXB1SIDL >> 5 ) & 0x07;
  7843  00148A  010F               	movlb	15	; () banked
  7844  00148C  3952               	swapf	82,w,b	;volatile
  7845  00148E  42E8               	rrncf	wreg,f,c
  7846  001490  0B07               	andlw	7
  7847  001492  0B07               	andlw	7
  7848  001494  6E0C               	movwf	CANreceiveMessage@tamp,c
  7849                           
  7850                           ; BSR set to: 15
  7851                           ;CANlib.h: 562: msg->identifier = msg->identifier + tamp;
  7852  001496  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7853  00149A  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7854  00149E  CFDE F003          	movff	postinc2,??_CANreceiveMessage
  7855  0014A2  CFDE F004          	movff	postinc2,??_CANreceiveMessage+1
  7856  0014A6  CFDE F005          	movff	postinc2,??_CANreceiveMessage+2
  7857  0014AA  CFDE F006          	movff	postinc2,??_CANreceiveMessage+3
  7858  0014AE  500C               	movf	CANreceiveMessage@tamp,w,c
  7859  0014B0  2403               	addwf	??_CANreceiveMessage,w,c
  7860  0014B2  6E07               	movwf	(??_CANreceiveMessage+4)& (0+255),c
  7861  0014B4  0E00               	movlw	0
  7862  0014B6  2004               	addwfc	??_CANreceiveMessage+1,w,c
  7863  0014B8  6E08               	movwf	(??_CANreceiveMessage+5)& (0+255),c
  7864  0014BA  0E00               	movlw	0
  7865  0014BC  2005               	addwfc	??_CANreceiveMessage+2,w,c
  7866  0014BE  6E09               	movwf	(??_CANreceiveMessage+6)& (0+255),c
  7867  0014C0  0E00               	movlw	0
  7868  0014C2  2006               	addwfc	??_CANreceiveMessage+3,w,c
  7869  0014C4  6E0A               	movwf	(??_CANreceiveMessage+7)& (0+255),c
  7870  0014C6  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7871  0014CA  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7872  0014CE  C007  FFDE         	movff	??_CANreceiveMessage+4,postinc2
  7873  0014D2  C008  FFDE         	movff	??_CANreceiveMessage+5,postinc2
  7874  0014D6  C009  FFDE         	movff	??_CANreceiveMessage+6,postinc2
  7875  0014DA  C00A  FFDE         	movff	??_CANreceiveMessage+7,postinc2
  7876                           
  7877                           ;CANlib.h: 563: }
  7878  0014DE  D08D               	goto	i1l3522
  7879  0014E0                     i1l3496:
  7880                           
  7881                           ; BSR set to: 15
  7882                           ;CANlib.h: 564: else
  7883                           ;CANlib.h: 565: {
  7884                           ;CANlib.h: 566: msg->identifier = (unsigned long) RXB1EIDL;
  7885  0014E0  CF54 F003          	movff	3924,??_CANreceiveMessage	;volatile
  7886  0014E4  6A04               	clrf	(??_CANreceiveMessage+1)& (0+255),c
  7887  0014E6  6A05               	clrf	(??_CANreceiveMessage+2)& (0+255),c
  7888  0014E8  6A06               	clrf	(??_CANreceiveMessage+3)& (0+255),c
  7889  0014EA  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7890  0014EE  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7891  0014F2  C003  FFDE         	movff	??_CANreceiveMessage,postinc2
  7892  0014F6  C004  FFDE         	movff	??_CANreceiveMessage+1,postinc2
  7893  0014FA  C005  FFDE         	movff	??_CANreceiveMessage+2,postinc2
  7894  0014FE  C006  FFDE         	movff	??_CANreceiveMessage+3,postinc2
  7895                           
  7896                           ; BSR set to: 15
  7897                           ;CANlib.h: 567: msg->identifier += ((unsigned long) RXB1EIDH) << 8;
  7898  001502  CF53 F003          	movff	3923,??_CANreceiveMessage	;volatile
  7899  001506  6A04               	clrf	(??_CANreceiveMessage+1)& (0+255),c
  7900  001508  6A05               	clrf	(??_CANreceiveMessage+2)& (0+255),c
  7901  00150A  6A06               	clrf	(??_CANreceiveMessage+3)& (0+255),c
  7902  00150C  C005  F006         	movff	??_CANreceiveMessage+2,??_CANreceiveMessage+3
  7903  001510  C004  F005         	movff	??_CANreceiveMessage+1,??_CANreceiveMessage+2
  7904  001514  C003  F004         	movff	??_CANreceiveMessage,??_CANreceiveMessage+1
  7905  001518  6A03               	clrf	??_CANreceiveMessage,c
  7906  00151A  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7907  00151E  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7908  001522  5003               	movf	??_CANreceiveMessage,w,c
  7909  001524  26DE               	addwf	postinc2,f,c
  7910  001526  5004               	movf	??_CANreceiveMessage+1,w,c
  7911  001528  22DE               	addwfc	postinc2,f,c
  7912  00152A  5005               	movf	??_CANreceiveMessage+2,w,c
  7913  00152C  22DE               	addwfc	postinc2,f,c
  7914  00152E  5006               	movf	??_CANreceiveMessage+3,w,c
  7915  001530  22DE               	addwfc	postinc2,f,c
  7916                           
  7917                           ; BSR set to: 15
  7918                           ;CANlib.h: 569: if (RXB1SIDLbits.EID16)
  7919  001532  010F               	movlb	15	; () banked
  7920  001534  A152               	btfss	82,0,b	;volatile
  7921  001536  D00C               	goto	i1l3504
  7922                           
  7923                           ; BSR set to: 15
  7924                           ;CANlib.h: 570: msg->identifier |= 0x00010000;
  7925  001538  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7926  00153C  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7927  001540  0E00               	movlw	0
  7928  001542  12DE               	iorwf	postinc2,f,c
  7929  001544  0E00               	movlw	0
  7930  001546  12DE               	iorwf	postinc2,f,c
  7931  001548  0E01               	movlw	1
  7932  00154A  12DE               	iorwf	postinc2,f,c
  7933  00154C  0E00               	movlw	0
  7934  00154E  12DE               	iorwf	postinc2,f,c
  7935  001550                     i1l3504:
  7936                           
  7937                           ; BSR set to: 15
  7938                           ;CANlib.h: 571: if (RXB1SIDLbits.EID17)
  7939  001550  010F               	movlb	15	; () banked
  7940  001552  A352               	btfss	82,1,b	;volatile
  7941  001554  D00C               	goto	i1l3508
  7942                           
  7943                           ; BSR set to: 15
  7944                           ;CANlib.h: 572: msg->identifier |= 0x00020000;
  7945  001556  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7946  00155A  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7947  00155E  0E00               	movlw	0
  7948  001560  12DE               	iorwf	postinc2,f,c
  7949  001562  0E00               	movlw	0
  7950  001564  12DE               	iorwf	postinc2,f,c
  7951  001566  0E02               	movlw	2
  7952  001568  12DE               	iorwf	postinc2,f,c
  7953  00156A  0E00               	movlw	0
  7954  00156C  12DE               	iorwf	postinc2,f,c
  7955  00156E                     i1l3508:
  7956                           
  7957                           ; BSR set to: 15
  7958                           ;CANlib.h: 573: if (RXB1SIDLbits.SID0)
  7959  00156E  010F               	movlb	15	; () banked
  7960  001570  AB52               	btfss	82,5,b	;volatile
  7961  001572  D00C               	goto	i1l3512
  7962                           
  7963                           ; BSR set to: 15
  7964                           ;CANlib.h: 574: msg->identifier |= 0x00040000;
  7965  001574  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7966  001578  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7967  00157C  0E00               	movlw	0
  7968  00157E  12DE               	iorwf	postinc2,f,c
  7969  001580  0E00               	movlw	0
  7970  001582  12DE               	iorwf	postinc2,f,c
  7971  001584  0E04               	movlw	4
  7972  001586  12DE               	iorwf	postinc2,f,c
  7973  001588  0E00               	movlw	0
  7974  00158A  12DE               	iorwf	postinc2,f,c
  7975  00158C                     i1l3512:
  7976                           
  7977                           ; BSR set to: 15
  7978                           ;CANlib.h: 575: if (RXB1SIDLbits.SID1)
  7979  00158C  010F               	movlb	15	; () banked
  7980  00158E  AD52               	btfss	82,6,b	;volatile
  7981  001590  D00C               	goto	i1l3516
  7982                           
  7983                           ; BSR set to: 15
  7984                           ;CANlib.h: 576: msg->identifier |= 0x00080000;
  7985  001592  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7986  001596  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7987  00159A  0E00               	movlw	0
  7988  00159C  12DE               	iorwf	postinc2,f,c
  7989  00159E  0E00               	movlw	0
  7990  0015A0  12DE               	iorwf	postinc2,f,c
  7991  0015A2  0E08               	movlw	8
  7992  0015A4  12DE               	iorwf	postinc2,f,c
  7993  0015A6  0E00               	movlw	0
  7994  0015A8  12DE               	iorwf	postinc2,f,c
  7995  0015AA                     i1l3516:
  7996                           
  7997                           ; BSR set to: 15
  7998                           ;CANlib.h: 577: if (RXB1SIDLbits.SID2)
  7999  0015AA  010F               	movlb	15	; () banked
  8000  0015AC  AF52               	btfss	82,7,b	;volatile
  8001  0015AE  D00C               	goto	i1l3520
  8002                           
  8003                           ; BSR set to: 15
  8004                           ;CANlib.h: 578: msg->identifier |= 0x00100000;
  8005  0015B0  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8006  0015B4  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8007  0015B8  0E00               	movlw	0
  8008  0015BA  12DE               	iorwf	postinc2,f,c
  8009  0015BC  0E00               	movlw	0
  8010  0015BE  12DE               	iorwf	postinc2,f,c
  8011  0015C0  0E10               	movlw	16
  8012  0015C2  12DE               	iorwf	postinc2,f,c
  8013  0015C4  0E00               	movlw	0
  8014  0015C6  12DE               	iorwf	postinc2,f,c
  8015  0015C8                     i1l3520:
  8016                           
  8017                           ; BSR set to: 15
  8018                           ;CANlib.h: 580: msg->identifier |= ((unsigned long) RXB1SIDH) << 21;
  8019  0015C8  CF51 F003          	movff	3921,??_CANreceiveMessage	;volatile
  8020  0015CC  6A04               	clrf	(??_CANreceiveMessage+1)& (0+255),c
  8021  0015CE  6A05               	clrf	(??_CANreceiveMessage+2)& (0+255),c
  8022  0015D0  6A06               	clrf	(??_CANreceiveMessage+3)& (0+255),c
  8023  0015D2  0E15               	movlw	21
  8024  0015D4                     i1u398_25:
  8025  0015D4  90D8               	bcf	status,0,c
  8026  0015D6  3603               	rlcf	??_CANreceiveMessage,f,c
  8027  0015D8  3604               	rlcf	??_CANreceiveMessage+1,f,c
  8028  0015DA  3605               	rlcf	??_CANreceiveMessage+2,f,c
  8029  0015DC  3606               	rlcf	??_CANreceiveMessage+3,f,c
  8030  0015DE  2EE8               	decfsz	wreg,f,c
  8031  0015E0  D7F9               	goto	i1u398_25
  8032  0015E2  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8033  0015E6  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8034  0015EA  5003               	movf	??_CANreceiveMessage,w,c
  8035  0015EC  12DE               	iorwf	postinc2,f,c
  8036  0015EE  5004               	movf	??_CANreceiveMessage+1,w,c
  8037  0015F0  12DE               	iorwf	postinc2,f,c
  8038  0015F2  5005               	movf	??_CANreceiveMessage+2,w,c
  8039  0015F4  12DE               	iorwf	postinc2,f,c
  8040  0015F6  5006               	movf	??_CANreceiveMessage+3,w,c
  8041  0015F8  12DE               	iorwf	postinc2,f,c
  8042  0015FA                     i1l3522:
  8043                           
  8044                           ; BSR set to: 15
  8045                           ;CANlib.h: 581: }
  8046                           ;CANlib.h: 583: RXB1CONbits.RXFUL = 0x00;
  8047  0015FA  010F               	movlb	15	; () banked
  8048  0015FC  9F50               	bcf	80,7,b	;volatile
  8049                           
  8050                           ; BSR set to: 15
  8051                           ;CANlib.h: 584: return (error);
  8052                           ;	Return value of _CANreceiveMessage is never used
  8053  0015FE  0012               	return	
  8054  001600                     i1l412:
  8055                           
  8056                           ; BSR set to: 15
  8057                           ;CANlib.h: 585: }
  8058                           ;CANlib.h: 587: if (RXB0CONbits.RXFUL ==0x01)
  8059  001600  AE60               	btfss	3936,7,c	;volatile
  8060  001602  0012               	return	
  8061                           
  8062                           ; BSR set to: 15
  8063                           ;CANlib.h: 588: {
  8064                           ;CANlib.h: 589: msg->identifier = 0;
  8065  001604  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8066  001608  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8067  00160C  6ADE               	clrf	postinc2,c
  8068  00160E  6ADE               	clrf	postinc2,c
  8069  001610  6ADE               	clrf	postinc2,c
  8070  001612  6ADD               	clrf	postdec2,c
  8071                           
  8072                           ; BSR set to: 15
  8073                           ;CANlib.h: 590: msg->data[0] =RXB0D0;
  8074  001614  EE20 F004          	lfsr	2,4
  8075  001618  5001               	movf	CANreceiveMessage@msg,w,c
  8076  00161A  26D9               	addwf	fsr2l,f,c
  8077  00161C  5002               	movf	CANreceiveMessage@msg+1,w,c
  8078  00161E  22DA               	addwfc	fsr2h,f,c
  8079  001620  CF66 FFDF          	movff	3942,indf2	;volatile
  8080                           
  8081                           ; BSR set to: 15
  8082                           ;CANlib.h: 591: msg->data[1] =RXB0D1;
  8083  001624  EE20 F005          	lfsr	2,5
  8084  001628  5001               	movf	CANreceiveMessage@msg,w,c
  8085  00162A  26D9               	addwf	fsr2l,f,c
  8086  00162C  5002               	movf	CANreceiveMessage@msg+1,w,c
  8087  00162E  22DA               	addwfc	fsr2h,f,c
  8088  001630  CF67 FFDF          	movff	3943,indf2	;volatile
  8089                           
  8090                           ; BSR set to: 15
  8091                           ;CANlib.h: 592: msg->data[2] =RXB0D2;
  8092  001634  EE20 F006          	lfsr	2,6
  8093  001638  5001               	movf	CANreceiveMessage@msg,w,c
  8094  00163A  26D9               	addwf	fsr2l,f,c
  8095  00163C  5002               	movf	CANreceiveMessage@msg+1,w,c
  8096  00163E  22DA               	addwfc	fsr2h,f,c
  8097  001640  CF68 FFDF          	movff	3944,indf2	;volatile
  8098                           
  8099                           ; BSR set to: 15
  8100                           ;CANlib.h: 593: msg->data[3] =RXB0D3;
  8101  001644  EE20 F007          	lfsr	2,7
  8102  001648  5001               	movf	CANreceiveMessage@msg,w,c
  8103  00164A  26D9               	addwf	fsr2l,f,c
  8104  00164C  5002               	movf	CANreceiveMessage@msg+1,w,c
  8105  00164E  22DA               	addwfc	fsr2h,f,c
  8106  001650  CF69 FFDF          	movff	3945,indf2	;volatile
  8107                           
  8108                           ; BSR set to: 15
  8109                           ;CANlib.h: 594: msg->data[4] =RXB0D4;
  8110  001654  EE20 F008          	lfsr	2,8
  8111  001658  5001               	movf	CANreceiveMessage@msg,w,c
  8112  00165A  26D9               	addwf	fsr2l,f,c
  8113  00165C  5002               	movf	CANreceiveMessage@msg+1,w,c
  8114  00165E  22DA               	addwfc	fsr2h,f,c
  8115  001660  CF6A FFDF          	movff	3946,indf2	;volatile
  8116                           
  8117                           ; BSR set to: 15
  8118                           ;CANlib.h: 595: msg->data[5] =RXB0D5;
  8119  001664  EE20 F009          	lfsr	2,9
  8120  001668  5001               	movf	CANreceiveMessage@msg,w,c
  8121  00166A  26D9               	addwf	fsr2l,f,c
  8122  00166C  5002               	movf	CANreceiveMessage@msg+1,w,c
  8123  00166E  22DA               	addwfc	fsr2h,f,c
  8124  001670  CF6B FFDF          	movff	3947,indf2	;volatile
  8125                           
  8126                           ; BSR set to: 15
  8127                           ;CANlib.h: 596: msg->data[6] =RXB0D6;
  8128  001674  EE20 F00A          	lfsr	2,10
  8129  001678  5001               	movf	CANreceiveMessage@msg,w,c
  8130  00167A  26D9               	addwf	fsr2l,f,c
  8131  00167C  5002               	movf	CANreceiveMessage@msg+1,w,c
  8132  00167E  22DA               	addwfc	fsr2h,f,c
  8133  001680  CF6C FFDF          	movff	3948,indf2	;volatile
  8134                           
  8135                           ; BSR set to: 15
  8136                           ;CANlib.h: 597: msg->data[7] =RXB0D7;
  8137  001684  EE20 F00B          	lfsr	2,11
  8138  001688  5001               	movf	CANreceiveMessage@msg,w,c
  8139  00168A  26D9               	addwf	fsr2l,f,c
  8140  00168C  5002               	movf	CANreceiveMessage@msg+1,w,c
  8141  00168E  22DA               	addwfc	fsr2h,f,c
  8142  001690  CF6D FFDF          	movff	3949,indf2	;volatile
  8143                           
  8144                           ; BSR set to: 15
  8145                           ;CANlib.h: 599: msg->RTR = RXB0DLCbits.RXRTR;
  8146  001694  EE20 F00E          	lfsr	2,14
  8147  001698  5001               	movf	CANreceiveMessage@msg,w,c
  8148  00169A  26D9               	addwf	fsr2l,f,c
  8149  00169C  5002               	movf	CANreceiveMessage@msg+1,w,c
  8150  00169E  22DA               	addwfc	fsr2h,f,c
  8151  0016A0  AC65               	btfss	3941,6,c	;volatile
  8152  0016A2  D002               	goto	i1u400_20
  8153  0016A4  0E01               	movlw	1
  8154  0016A6  D001               	goto	i1u400_26
  8155  0016A8                     i1u400_20:
  8156  0016A8  0E00               	movlw	0
  8157  0016AA                     i1u400_26:
  8158  0016AA  6EDF               	movwf	indf2,c
  8159                           
  8160                           ; BSR set to: 15
  8161                           ;CANlib.h: 601: msg->length = RXB0DLC & 0x0F;
  8162  0016AC  EE20 F00D          	lfsr	2,13
  8163  0016B0  5001               	movf	CANreceiveMessage@msg,w,c
  8164  0016B2  26D9               	addwf	fsr2l,f,c
  8165  0016B4  5002               	movf	CANreceiveMessage@msg+1,w,c
  8166  0016B6  22DA               	addwfc	fsr2h,f,c
  8167  0016B8  5065               	movf	3941,w,c	;volatile
  8168  0016BA  0B0F               	andlw	15
  8169  0016BC  6EDF               	movwf	indf2,c
  8170                           
  8171                           ; BSR set to: 15
  8172                           ;CANlib.h: 603: msg->type = RXB0SIDLbits.EXID;
  8173  0016BE  EE20 F00C          	lfsr	2,12
  8174  0016C2  5001               	movf	CANreceiveMessage@msg,w,c
  8175  0016C4  26D9               	addwf	fsr2l,f,c
  8176  0016C6  5002               	movf	CANreceiveMessage@msg+1,w,c
  8177  0016C8  22DA               	addwfc	fsr2h,f,c
  8178  0016CA  A662               	btfss	3938,3,c	;volatile
  8179  0016CC  D002               	goto	i1u401_20
  8180  0016CE  0E01               	movlw	1
  8181  0016D0  D001               	goto	i1u401_26
  8182  0016D2                     i1u401_20:
  8183  0016D2  0E00               	movlw	0
  8184  0016D4                     i1u401_26:
  8185  0016D4  6EDF               	movwf	indf2,c
  8186                           
  8187                           ; BSR set to: 15
  8188                           ;CANlib.h: 605: if (RXB0SIDLbits.EXID == 0)
  8189  0016D6  B662               	btfsc	3938,3,c	;volatile
  8190  0016D8  D043               	goto	i1l3558
  8191                           
  8192                           ; BSR set to: 15
  8193                           ;CANlib.h: 606: {
  8194                           ;CANlib.h: 607: msg->identifier = ((unsigned long)RXB0SIDH)<< 3;
  8195  0016DA  CF61 F003          	movff	3937,??_CANreceiveMessage	;volatile
  8196  0016DE  6A04               	clrf	(??_CANreceiveMessage+1)& (0+255),c
  8197  0016E0  6A05               	clrf	(??_CANreceiveMessage+2)& (0+255),c
  8198  0016E2  6A06               	clrf	(??_CANreceiveMessage+3)& (0+255),c
  8199  0016E4  0E03               	movlw	3
  8200  0016E6                     i1u403_25:
  8201  0016E6  90D8               	bcf	status,0,c
  8202  0016E8  3603               	rlcf	??_CANreceiveMessage,f,c
  8203  0016EA  3604               	rlcf	??_CANreceiveMessage+1,f,c
  8204  0016EC  3605               	rlcf	??_CANreceiveMessage+2,f,c
  8205  0016EE  3606               	rlcf	??_CANreceiveMessage+3,f,c
  8206  0016F0  2EE8               	decfsz	wreg,f,c
  8207  0016F2  D7F9               	goto	i1u403_25
  8208  0016F4  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8209  0016F8  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8210  0016FC  C003  FFDE         	movff	??_CANreceiveMessage,postinc2
  8211  001700  C004  FFDE         	movff	??_CANreceiveMessage+1,postinc2
  8212  001704  C005  FFDE         	movff	??_CANreceiveMessage+2,postinc2
  8213  001708  C006  FFDE         	movff	??_CANreceiveMessage+3,postinc2
  8214                           
  8215                           ; BSR set to: 15
  8216                           ;CANlib.h: 608: tamp = (RXB0SIDL >> 5 ) & 0x07;
  8217  00170C  3862               	swapf	3938,w,c	;volatile
  8218  00170E  42E8               	rrncf	wreg,f,c
  8219  001710  0B07               	andlw	7
  8220  001712  0B07               	andlw	7
  8221  001714  6E0C               	movwf	CANreceiveMessage@tamp,c
  8222                           
  8223                           ; BSR set to: 15
  8224                           ;CANlib.h: 609: msg->identifier = msg->identifier + tamp;
  8225  001716  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8226  00171A  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8227  00171E  CFDE F003          	movff	postinc2,??_CANreceiveMessage
  8228  001722  CFDE F004          	movff	postinc2,??_CANreceiveMessage+1
  8229  001726  CFDE F005          	movff	postinc2,??_CANreceiveMessage+2
  8230  00172A  CFDE F006          	movff	postinc2,??_CANreceiveMessage+3
  8231  00172E  500C               	movf	CANreceiveMessage@tamp,w,c
  8232  001730  2403               	addwf	??_CANreceiveMessage,w,c
  8233  001732  6E07               	movwf	(??_CANreceiveMessage+4)& (0+255),c
  8234  001734  0E00               	movlw	0
  8235  001736  2004               	addwfc	??_CANreceiveMessage+1,w,c
  8236  001738  6E08               	movwf	(??_CANreceiveMessage+5)& (0+255),c
  8237  00173A  0E00               	movlw	0
  8238  00173C  2005               	addwfc	??_CANreceiveMessage+2,w,c
  8239  00173E  6E09               	movwf	(??_CANreceiveMessage+6)& (0+255),c
  8240  001740  0E00               	movlw	0
  8241  001742  2006               	addwfc	??_CANreceiveMessage+3,w,c
  8242  001744  6E0A               	movwf	(??_CANreceiveMessage+7)& (0+255),c
  8243  001746  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8244  00174A  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8245  00174E  C007  FFDE         	movff	??_CANreceiveMessage+4,postinc2
  8246  001752  C008  FFDE         	movff	??_CANreceiveMessage+5,postinc2
  8247  001756  C009  FFDE         	movff	??_CANreceiveMessage+6,postinc2
  8248  00175A  C00A  FFDE         	movff	??_CANreceiveMessage+7,postinc2
  8249                           
  8250                           ;CANlib.h: 610: }
  8251  00175E  D088               	goto	i1l3584
  8252  001760                     i1l3558:
  8253                           
  8254                           ; BSR set to: 15
  8255                           ;CANlib.h: 611: else
  8256                           ;CANlib.h: 612: {
  8257                           ;CANlib.h: 613: msg->identifier = (unsigned long) RXB0EIDL;
  8258  001760  CF64 F003          	movff	3940,??_CANreceiveMessage	;volatile
  8259  001764  6A04               	clrf	(??_CANreceiveMessage+1)& (0+255),c
  8260  001766  6A05               	clrf	(??_CANreceiveMessage+2)& (0+255),c
  8261  001768  6A06               	clrf	(??_CANreceiveMessage+3)& (0+255),c
  8262  00176A  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8263  00176E  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8264  001772  C003  FFDE         	movff	??_CANreceiveMessage,postinc2
  8265  001776  C004  FFDE         	movff	??_CANreceiveMessage+1,postinc2
  8266  00177A  C005  FFDE         	movff	??_CANreceiveMessage+2,postinc2
  8267  00177E  C006  FFDE         	movff	??_CANreceiveMessage+3,postinc2
  8268                           
  8269                           ; BSR set to: 15
  8270                           ;CANlib.h: 614: msg->identifier += ((unsigned long) RXB0EIDH) << 8;
  8271  001782  CF63 F003          	movff	3939,??_CANreceiveMessage	;volatile
  8272  001786  6A04               	clrf	(??_CANreceiveMessage+1)& (0+255),c
  8273  001788  6A05               	clrf	(??_CANreceiveMessage+2)& (0+255),c
  8274  00178A  6A06               	clrf	(??_CANreceiveMessage+3)& (0+255),c
  8275  00178C  C005  F006         	movff	??_CANreceiveMessage+2,??_CANreceiveMessage+3
  8276  001790  C004  F005         	movff	??_CANreceiveMessage+1,??_CANreceiveMessage+2
  8277  001794  C003  F004         	movff	??_CANreceiveMessage,??_CANreceiveMessage+1
  8278  001798  6A03               	clrf	??_CANreceiveMessage,c
  8279  00179A  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8280  00179E  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8281  0017A2  5003               	movf	??_CANreceiveMessage,w,c
  8282  0017A4  26DE               	addwf	postinc2,f,c
  8283  0017A6  5004               	movf	??_CANreceiveMessage+1,w,c
  8284  0017A8  22DE               	addwfc	postinc2,f,c
  8285  0017AA  5005               	movf	??_CANreceiveMessage+2,w,c
  8286  0017AC  22DE               	addwfc	postinc2,f,c
  8287  0017AE  5006               	movf	??_CANreceiveMessage+3,w,c
  8288  0017B0  22DE               	addwfc	postinc2,f,c
  8289                           
  8290                           ; BSR set to: 15
  8291                           ;CANlib.h: 616: if (RXB0SIDLbits.EID16)
  8292  0017B2  A062               	btfss	3938,0,c	;volatile
  8293  0017B4  D00C               	goto	i1l3566
  8294                           
  8295                           ; BSR set to: 15
  8296                           ;CANlib.h: 617: msg->identifier |= 0x00010000;
  8297  0017B6  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8298  0017BA  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8299  0017BE  0E00               	movlw	0
  8300  0017C0  12DE               	iorwf	postinc2,f,c
  8301  0017C2  0E00               	movlw	0
  8302  0017C4  12DE               	iorwf	postinc2,f,c
  8303  0017C6  0E01               	movlw	1
  8304  0017C8  12DE               	iorwf	postinc2,f,c
  8305  0017CA  0E00               	movlw	0
  8306  0017CC  12DE               	iorwf	postinc2,f,c
  8307  0017CE                     i1l3566:
  8308                           
  8309                           ; BSR set to: 15
  8310                           ;CANlib.h: 618: if (RXB0SIDLbits.EID17)
  8311  0017CE  A262               	btfss	3938,1,c	;volatile
  8312  0017D0  D00C               	goto	i1l3570
  8313                           
  8314                           ; BSR set to: 15
  8315                           ;CANlib.h: 619: msg->identifier |= 0x00020000;
  8316  0017D2  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8317  0017D6  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8318  0017DA  0E00               	movlw	0
  8319  0017DC  12DE               	iorwf	postinc2,f,c
  8320  0017DE  0E00               	movlw	0
  8321  0017E0  12DE               	iorwf	postinc2,f,c
  8322  0017E2  0E02               	movlw	2
  8323  0017E4  12DE               	iorwf	postinc2,f,c
  8324  0017E6  0E00               	movlw	0
  8325  0017E8  12DE               	iorwf	postinc2,f,c
  8326  0017EA                     i1l3570:
  8327                           
  8328                           ; BSR set to: 15
  8329                           ;CANlib.h: 620: if (RXB0SIDLbits.SID0)
  8330  0017EA  AA62               	btfss	3938,5,c	;volatile
  8331  0017EC  D00C               	goto	i1l3574
  8332                           
  8333                           ; BSR set to: 15
  8334                           ;CANlib.h: 621: msg->identifier |= 0x00040000;
  8335  0017EE  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8336  0017F2  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8337  0017F6  0E00               	movlw	0
  8338  0017F8  12DE               	iorwf	postinc2,f,c
  8339  0017FA  0E00               	movlw	0
  8340  0017FC  12DE               	iorwf	postinc2,f,c
  8341  0017FE  0E04               	movlw	4
  8342  001800  12DE               	iorwf	postinc2,f,c
  8343  001802  0E00               	movlw	0
  8344  001804  12DE               	iorwf	postinc2,f,c
  8345  001806                     i1l3574:
  8346                           
  8347                           ; BSR set to: 15
  8348                           ;CANlib.h: 622: if (RXB0SIDLbits.SID1)
  8349  001806  AC62               	btfss	3938,6,c	;volatile
  8350  001808  D00C               	goto	i1l3578
  8351                           
  8352                           ; BSR set to: 15
  8353                           ;CANlib.h: 623: msg->identifier |= 0x00080000;
  8354  00180A  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8355  00180E  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8356  001812  0E00               	movlw	0
  8357  001814  12DE               	iorwf	postinc2,f,c
  8358  001816  0E00               	movlw	0
  8359  001818  12DE               	iorwf	postinc2,f,c
  8360  00181A  0E08               	movlw	8
  8361  00181C  12DE               	iorwf	postinc2,f,c
  8362  00181E  0E00               	movlw	0
  8363  001820  12DE               	iorwf	postinc2,f,c
  8364  001822                     i1l3578:
  8365                           
  8366                           ; BSR set to: 15
  8367                           ;CANlib.h: 624: if (RXB0SIDLbits.SID2)
  8368  001822  AE62               	btfss	3938,7,c	;volatile
  8369  001824  D00C               	goto	i1l3582
  8370                           
  8371                           ; BSR set to: 15
  8372                           ;CANlib.h: 625: msg->identifier |= 0x00100000;
  8373  001826  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8374  00182A  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8375  00182E  0E00               	movlw	0
  8376  001830  12DE               	iorwf	postinc2,f,c
  8377  001832  0E00               	movlw	0
  8378  001834  12DE               	iorwf	postinc2,f,c
  8379  001836  0E10               	movlw	16
  8380  001838  12DE               	iorwf	postinc2,f,c
  8381  00183A  0E00               	movlw	0
  8382  00183C  12DE               	iorwf	postinc2,f,c
  8383  00183E                     i1l3582:
  8384                           
  8385                           ; BSR set to: 15
  8386                           ;CANlib.h: 627: msg->identifier |= ((unsigned long) RXB0SIDH) << 21;
  8387  00183E  CF61 F003          	movff	3937,??_CANreceiveMessage	;volatile
  8388  001842  6A04               	clrf	(??_CANreceiveMessage+1)& (0+255),c
  8389  001844  6A05               	clrf	(??_CANreceiveMessage+2)& (0+255),c
  8390  001846  6A06               	clrf	(??_CANreceiveMessage+3)& (0+255),c
  8391  001848  0E15               	movlw	21
  8392  00184A                     i1u409_25:
  8393  00184A  90D8               	bcf	status,0,c
  8394  00184C  3603               	rlcf	??_CANreceiveMessage,f,c
  8395  00184E  3604               	rlcf	??_CANreceiveMessage+1,f,c
  8396  001850  3605               	rlcf	??_CANreceiveMessage+2,f,c
  8397  001852  3606               	rlcf	??_CANreceiveMessage+3,f,c
  8398  001854  2EE8               	decfsz	wreg,f,c
  8399  001856  D7F9               	goto	i1u409_25
  8400  001858  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8401  00185C  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8402  001860  5003               	movf	??_CANreceiveMessage,w,c
  8403  001862  12DE               	iorwf	postinc2,f,c
  8404  001864  5004               	movf	??_CANreceiveMessage+1,w,c
  8405  001866  12DE               	iorwf	postinc2,f,c
  8406  001868  5005               	movf	??_CANreceiveMessage+2,w,c
  8407  00186A  12DE               	iorwf	postinc2,f,c
  8408  00186C  5006               	movf	??_CANreceiveMessage+3,w,c
  8409  00186E  12DE               	iorwf	postinc2,f,c
  8410  001870                     i1l3584:
  8411                           
  8412                           ; BSR set to: 15
  8413                           ;CANlib.h: 629: }
  8414                           ;CANlib.h: 630: RXB0CONbits.RXFUL = 0x00;
  8415  001870  9E60               	bcf	3936,7,c	;volatile
  8416                           
  8417                           ; BSR set to: 15
  8418                           ;CANlib.h: 632: return (error);
  8419                           ;	Return value of _CANreceiveMessage is never used
  8420  001872  0012               	return	
  8421  001874                     __end_of_CANreceiveMessage:
  8422                           	opt stack 0
  8423                           pclatu	equ	0xFFB
  8424                           pclath	equ	0xFFA
  8425                           tblptru	equ	0xFF8
  8426                           tblptrh	equ	0xFF7
  8427                           tblptrl	equ	0xFF6
  8428                           tablat	equ	0xFF5
  8429                           prodh	equ	0xFF4
  8430                           prodl	equ	0xFF3
  8431                           intcon	equ	0xFF2
  8432                           intcon2	equ	0xFF1
  8433                           postinc0	equ	0xFEE
  8434                           fsr0h	equ	0xFEA
  8435                           fsr0l	equ	0xFE9
  8436                           wreg	equ	0xFE8
  8437                           indf1	equ	0xFE7
  8438                           fsr1h	equ	0xFE2
  8439                           fsr1l	equ	0xFE1
  8440                           bsr	equ	0xFE0
  8441                           indf2	equ	0xFDF
  8442                           postinc2	equ	0xFDE
  8443                           postdec2	equ	0xFDD
  8444                           fsr2h	equ	0xFDA
  8445                           fsr2l	equ	0xFD9
  8446                           status	equ	0xFD8
  8447                           
  8448 ;; *************** function _CANisRxReady *****************
  8449 ;; Defined at:
  8450 ;;		line 1163 in file "CANlib.h"
  8451 ;; Parameters:    Size  Location     Type
  8452 ;;		None
  8453 ;; Auto vars:     Size  Location     Type
  8454 ;;		None
  8455 ;; Return value:  Size  Location     Type
  8456 ;;                  1    wreg      unsigned char 
  8457 ;; Registers used:
  8458 ;;		wreg, status,2
  8459 ;; Tracked objects:
  8460 ;;		On entry : 0/0
  8461 ;;		On exit  : 0/0
  8462 ;;		Unchanged: 0/0
  8463 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  8464 ;;      Params:         0       0       0       0
  8465 ;;      Locals:         1       0       0       0
  8466 ;;      Temps:          0       0       0       0
  8467 ;;      Totals:         1       0       0       0
  8468 ;;Total ram usage:        1 bytes
  8469 ;; Hardware stack levels used:    1
  8470 ;; This function calls:
  8471 ;;		Nothing
  8472 ;; This function is called by:
  8473 ;;		_ISR_bassa
  8474 ;; This function uses a non-reentrant model
  8475 ;;
  8476                           
  8477                           	psect	text22
  8478  0025DE                     __ptext22:
  8479                           	opt stack 0
  8480  0025DE                     _CANisRxReady:
  8481                           	opt stack 26
  8482                           
  8483                           ;CANlib.h: 1165: return (RXB0CONbits.RXFUL || RXB1CONbits.RXFUL);
  8484                           
  8485                           ; BSR set to: 15
  8486                           ;incstack = 0
  8487  0025DE  0E01               	movlw	1
  8488  0025E0  6E01               	movwf	_CANisRxReady$3034,c
  8489  0025E2  BE60               	btfsc	3936,7,c	;volatile
  8490  0025E4  D005               	goto	i1l563
  8491  0025E6  010F               	movlb	15	; () banked
  8492  0025E8  BF50               	btfsc	80,7,b	;volatile
  8493  0025EA  D002               	goto	i1l563
  8494                           
  8495                           ; BSR set to: 15
  8496  0025EC  0E00               	movlw	0
  8497  0025EE  6E01               	movwf	_CANisRxReady$3034,c
  8498  0025F0                     i1l563:
  8499  0025F0  5001               	movf	_CANisRxReady$3034,w,c
  8500  0025F2  0012               	return	
  8501  0025F4                     __end_of_CANisRxReady:
  8502                           	opt stack 0
  8503  0000                     pclatu	equ	0xFFB
  8504                           pclath	equ	0xFFA
  8505                           tblptru	equ	0xFF8
  8506                           tblptrh	equ	0xFF7
  8507                           tblptrl	equ	0xFF6
  8508                           tablat	equ	0xFF5
  8509                           prodh	equ	0xFF4
  8510                           prodl	equ	0xFF3
  8511                           intcon	equ	0xFF2
  8512                           intcon2	equ	0xFF1
  8513                           postinc0	equ	0xFEE
  8514                           fsr0h	equ	0xFEA
  8515                           fsr0l	equ	0xFE9
  8516                           wreg	equ	0xFE8
  8517                           indf1	equ	0xFE7
  8518                           fsr1h	equ	0xFE2
  8519                           fsr1l	equ	0xFE1
  8520                           bsr	equ	0xFE0
  8521                           indf2	equ	0xFDF
  8522                           postinc2	equ	0xFDE
  8523                           postdec2	equ	0xFDD
  8524                           fsr2h	equ	0xFDA
  8525                           fsr2l	equ	0xFD9
  8526                           status	equ	0xFD8
  8527                           pclatu	equ	0xFFB
  8528                           pclath	equ	0xFFA
  8529                           tblptru	equ	0xFF8
  8530                           tblptrh	equ	0xFF7
  8531                           tblptrl	equ	0xFF6
  8532                           tablat	equ	0xFF5
  8533                           prodh	equ	0xFF4
  8534                           prodl	equ	0xFF3
  8535                           intcon	equ	0xFF2
  8536                           intcon2	equ	0xFF1
  8537                           postinc0	equ	0xFEE
  8538                           fsr0h	equ	0xFEA
  8539                           fsr0l	equ	0xFE9
  8540                           wreg	equ	0xFE8
  8541                           indf1	equ	0xFE7
  8542                           fsr1h	equ	0xFE2
  8543                           fsr1l	equ	0xFE1
  8544                           bsr	equ	0xFE0
  8545                           indf2	equ	0xFDF
  8546                           postinc2	equ	0xFDE
  8547                           postdec2	equ	0xFDD
  8548                           fsr2h	equ	0xFDA
  8549                           fsr2l	equ	0xFD9
  8550                           status	equ	0xFD8
  8551                           
  8552                           	psect	rparam
  8553  0000                     pclatu	equ	0xFFB
  8554                           pclath	equ	0xFFA
  8555                           tblptru	equ	0xFF8
  8556                           tblptrh	equ	0xFF7
  8557                           tblptrl	equ	0xFF6
  8558                           tablat	equ	0xFF5
  8559                           prodh	equ	0xFF4
  8560                           prodl	equ	0xFF3
  8561                           intcon	equ	0xFF2
  8562                           intcon2	equ	0xFF1
  8563                           postinc0	equ	0xFEE
  8564                           fsr0h	equ	0xFEA
  8565                           fsr0l	equ	0xFE9
  8566                           wreg	equ	0xFE8
  8567                           indf1	equ	0xFE7
  8568                           fsr1h	equ	0xFE2
  8569                           fsr1l	equ	0xFE1
  8570                           bsr	equ	0xFE0
  8571                           indf2	equ	0xFDF
  8572                           postinc2	equ	0xFDE
  8573                           postdec2	equ	0xFDD
  8574                           fsr2h	equ	0xFDA
  8575                           fsr2l	equ	0xFD9
  8576                           status	equ	0xFD8
  8577                           
  8578                           	psect	temp
  8579  000042                     btemp:
  8580                           	opt stack 0
  8581  000042                     	ds	1
  8582  0000                     int$flags	set	btemp
  8583                           pclatu	equ	0xFFB
  8584                           pclath	equ	0xFFA
  8585                           tblptru	equ	0xFF8
  8586                           tblptrh	equ	0xFF7
  8587                           tblptrl	equ	0xFF6
  8588                           tablat	equ	0xFF5
  8589                           prodh	equ	0xFF4
  8590                           prodl	equ	0xFF3
  8591                           intcon	equ	0xFF2
  8592                           intcon2	equ	0xFF1
  8593                           postinc0	equ	0xFEE
  8594                           fsr0h	equ	0xFEA
  8595                           fsr0l	equ	0xFE9
  8596                           wreg	equ	0xFE8
  8597                           indf1	equ	0xFE7
  8598                           fsr1h	equ	0xFE2
  8599                           fsr1l	equ	0xFE1
  8600                           bsr	equ	0xFE0
  8601                           indf2	equ	0xFDF
  8602                           postinc2	equ	0xFDE
  8603                           postdec2	equ	0xFDD
  8604                           fsr2h	equ	0xFDA
  8605                           fsr2l	equ	0xFD9
  8606                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        2
    BSS         92
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     36      65
    BANK0           160     29      96
    BANK1           256      0       0
    BANK2           256      0       0

Pointer List with Targets:

    CANreceiveMessage@msg	PTR struct . size(2) Largest target is 15
		 -> msg(BANK0[15]), 

    CANsendMessage@data	PTR unsigned char  size(2) Largest target is 8
		 -> data_array1(BANK0[8]), data_array(BANK0[8]), NULL(NULL[0]), 


Critical Paths under _main in COMRAM

    _main->_SetDCEPWM1
    _main->___wmul
    _send_data->_CANsendMessage
    _delay_ms->___wmul
    _CANInitialize->_CANSetFilter
    _CANInitialize->_CANSetMask
    _battery_measure->___wmul
    ___wmul->___awdiv

Critical Paths under _ISR_bassa in COMRAM

    _ISR_bassa->_CANreceiveMessage

Critical Paths under _main in BANK0

    _send_data->_CANsendMessage
    _configurazione_iniziale->_CANInitialize
    _delay_ms->___wmul
    _CANInitialize->_CANSetFilter
    _CANInitialize->_CANSetMask
    _battery_measure->_CANsendMessage
    ___wmul->___awdiv

Critical Paths under _ISR_bassa in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR_bassa in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR_bassa in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 9     9      0   28353
                                             35 COMRAM     1     1      0
                                             21 BANK0      8     8      0
                   _CANisRXwarningON
                   _CANisTXwarningON
                     _CANsendMessage
                          _OpenEPWM1
                         _OpenTimer2
                         _SetDCEPWM1
                     _SetOutputEPWM1
                            ___awdiv
                             ___wmul
                                _abs
                    _battery_measure
            _configurazione_iniziale
                           _delay_ms
                          _send_data
 ---------------------------------------------------------------------------------
 (1) _send_data                                            1     1      0    4751
                                             33 COMRAM     1     1      0
                       _CANisTxReady
                     _CANsendMessage
 ---------------------------------------------------------------------------------
 (1) _configurazione_iniziale                              0     0      0    9168
                      _CANInitialize
                           _delay_ms
 ---------------------------------------------------------------------------------
 (1) _delay_ms                                             2     0      2     956
                                              8 BANK0      2     0      2
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) _CANInitialize                                       12     7      5    8212
                                              9 BANK0     12     7      5
                   _CANOperationMode
                       _CANSetFilter
                         _CANSetMask
 ---------------------------------------------------------------------------------
 (3) _CANSetMask                                          14     9      5    1788
                                             29 COMRAM     5     0      5
                                              0 BANK0      9     9      0
 ---------------------------------------------------------------------------------
 (3) _CANSetFilter                                        14     9      5    5364
                                             29 COMRAM     5     0      5
                                              0 BANK0      9     9      0
 ---------------------------------------------------------------------------------
 (3) _CANOperationMode                                     1     1      0      62
                                             29 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _battery_measure                                      0     0      0    6376
                       _CANisTxReady
                     _CANsendMessage
                            ___awdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     694
                                             33 COMRAM     2     2      0
                                              4 BANK0      4     0      4
                            ___awdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              8     4      4    1061
                                             29 COMRAM     4     0      4
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (2) _CANsendMessage                                      16     8      8    4597
                                             29 COMRAM     4     4      0
                                              0 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (2) _CANisTxReady                                         1     1      0      24
                                             29 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _abs                                                  4     2      2     130
                                             29 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (1) _SetOutputEPWM1                                       2     1      1     260
                                             29 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (1) _SetDCEPWM1                                           6     4      2     260
                                             29 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (1) _OpenTimer2                                           1     1      0      44
                                             29 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _OpenEPWM1                                            1     1      0      22
                                             29 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _CANisTXwarningON                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _CANisRXwarningON                                     0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _ISR_bassa                                           17    17      0    1161
                                             12 COMRAM    17    17      0
                       _CANisRxReady
                  _CANreceiveMessage
 ---------------------------------------------------------------------------------
 (5) _CANreceiveMessage                                   12    10      2    1137
                                              0 COMRAM    12    10      2
 ---------------------------------------------------------------------------------
 (5) _CANisRxReady                                         1     1      0      24
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _CANisRXwarningON
   _CANisTXwarningON
   _CANsendMessage
   _OpenEPWM1
   _OpenTimer2
   _SetDCEPWM1
   _SetOutputEPWM1
   ___awdiv
   ___wmul
     ___awdiv (ARG)
   _abs
   _battery_measure
     _CANisTxReady
     _CANsendMessage
     ___awdiv
     ___wmul
       ___awdiv (ARG)
   _configurazione_iniziale
     _CANInitialize
       _CANOperationMode
       _CANSetFilter
       _CANSetMask
     _delay_ms
       ___wmul
         ___awdiv (ARG)
   _delay_ms
     ___wmul
       ___awdiv (ARG)
   _send_data
     _CANisTxReady
     _CANsendMessage

 _ISR_bassa (ROOT)
   _CANisRxReady
   _CANreceiveMessage

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             2FF      0       0      10        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0       0       8        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100      0       0       6        0.0%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0     1D      60       4       60.0%
BITCOMRAM           5E      0       2       0        2.1%
COMRAM              5E     24      41       1       69.1%
BITSFR_3             0      0       0      40        0.0%
SFR_3                0      0       0      40        0.0%
BITSFR_2             0      0       0      40        0.0%
SFR_2                0      0       0      40        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      A1       9        0.0%
DATA                 0      0      A1      11        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.35 build -356382666 
Symbol Table                                                                                   Thu Jan 28 18:06:32 2016

              ??_CANisTXwarningON 001E              __end_of_CANSetFilter 0BF4  
                    ___awdiv@sign 00A4                                _id 0025  
                              bsr 000FE0               ___wmul@multiplicand 00A9  
                     __CFG_BORV$3 000000                    _SetOutputEPWM1 2456  
                    __CFG_CP0$OFF 000000                      __CFG_CP1$OFF 000000  
                     __CFG_OSC$HS 000000                       __CFG_LVP$ON 000000  
            _previousTimeCounter1 007C              _previousTimeCounter2 0080  
                             l400 11A0                               l401 11AA  
                             l404 12B4                               l500 0972  
                             l405 12B8                               l501 0976  
                             l406 12C4                               l510 0A6E  
                             l502 0980                               l511 0A78  
                             l503 0984                               l520 0B70  
                             l512 0A7C                               l504 098E  
                             l440 1E86                               l360 2096  
                             l521 0B74                               l513 0A86  
                             l505 0992                               l441 1E8A  
                             l361 20A0                               l370 0C9E  
                             l522 0B7E                               l514 0A8A  
                             l506 099C                               l450 1F7E  
                             l442 1E94                               l434 1E5C  
                             l371 0CA8                               l523 0B82  
                             l515 0A94                               l451 1F88  
                             l435 1E60                               l380 10EC  
                             l372 0CB2                               l524 0B8C  
                             l516 0A98                               l452 1F8C  
                             l436 1E6A                               l381 0E86  
                             l365 0E70                               l525 0B90  
                             l517 0AA2                               l509 0A6A  
                             l453 1F96                               l445 1F5E  
                             l437 1E6E                               l390 1038  
                             l382 0E8A                               l366 0C0A  
                             l526 0B9A                               l470 0674  
                             l446 1F62                               l438 1E78  
                             l702 225C                               l391 103C  
                             l383 0F7E                               l375 0DBC  
                             l367 0C0E                               l527 0B9E  
                             l471 067E                               l447 1F6C  
                             l439 1E7C                               l392 1048  
                             l384 0F10                               l376 0DC0  
                             l368 0D02                               l720 2454  
                             l528 0BA8                               l480 0774  
                             l472 0682                               l448 1F70  
                             l704 220C                               l385 0F1A  
                             l377 0DCC                               l369 0C94  
                             l713 23CE                               l481 0778  
                             l473 068C                               l465 0654  
                             l449 1F7A                               l386 0F24  
                             l490 0870                               l482 0782  
                             l466 0658                               l395 1102  
                             l387 0F2E                               l491 087A  
                             l483 0786                               l467 0662  
                             l571 2540                               l707 2284  
                             l396 1106                               l492 087E  
                             l484 0790                               l476 0758  
                             l468 0666                               l708 2282  
                             l397 11FA                               l493 0888  
                             l477 075C                               l469 0670  
                             l558 25BE                               l398 118C  
                             l494 088C                               l478 0766  
                             l399 1196                               l495 0896  
                             l487 085E                               l479 076A  
                             l752 2490                               l488 0862  
                             l489 086C                               l818 259A  
                             l498 0964                               l499 0968  
                             l684 1B3A                               l676 1AEC  
                             l677 1AE2                               l766 25D8  
                             l678 1AAC                               l767 25DA  
                    __CFG_CPB$OFF 000000                               _PR2 000FCB  
                    __CFG_CPD$OFF 000000                               _id1 0074  
                             _abs 257C                               _dir 0031  
                             _msg 0084                               prod 000FF3  
                             wreg 000FE8                      __CFG_WDT$OFF 000000  
                            ?_abs 001E                              l4006 1DDE  
                            l4032 1E98                              l4106 0310  
                            l4212 06D6                              l4124 03C0  
                            l4206 0690                              l4142 0470  
                            l4038 1EDE                              l4240 0794  
                            l4160 0520                              l4064 1F9A  
                            l4314 09E6                              l4308 09A0  
                            l4342 0AA6                              l4246 07DA  
                            l4280 08E0                              l4088 0262  
                            l4432 20AC                              l4274 089A  
                            l4178 05D0                              l4434 20F0  
                            l4426 208E                              l3724 2474  
                            l4700 2382                              l4348 0AEC  
                            l4428 20A4                              l3728 2482  
                            l4624 11B4                              l4472 0CBC  
                            l4712 23AE                              l4376 0BAC  
                            l4650 12C8                              l4644 12A8  
                            l4548 0F38                              l4492 0DB0  
                            l4716 23C2                              l4708 23A2  
                            l4574 104C                              l4568 102C  
                            l4672 2534                              l4832 2228  
                            l4824 21D0                              l4904 18D2  
                            l4498 0DD0                              l4690 235A  
                            l4834 222C                              l4684 2348  
                            l3972 25FA                              l4828 2200  
                            l4908 18DC                              l4940 1B0A  
                            l4854 241A                              l3990 1D32  
                            l4838 2234                              l4950 1B2A  
                            l4696 2374                              l4944 1B12  
                            l4698 237E                              l4962 1BD4  
                            l4954 1B3C                              l4946 1B16  
                            l4938 1AFA                              l4972 1BEC  
                            l4886 18A2                              l4976 1BFA  
                            l4896 18BC                              l4978 1C0A  
                            _LATA 000F89                              _LATB 000F8A  
                            _LATC 000F8B                              _LATD 000F8C  
                            _LATE 000F8D                              u4100 261E  
                            u4110 262A                              u5100 03F4  
                            u5020 0294                              u4205 24E6  
                            u5105 03E8                              u5025 0288  
                            u5115 044C                              u5035 02EC  
                            u5140 04A4                              u5060 0344  
                            u5145 0498                              u5065 0338  
                            u5155 04FC                              u5075 039C  
                            u6060 11D2                              u5180 0554  
                            u6070 121C                              u5510 09C0  
                            u5430 08BA                              u5350 07B4  
                            u5270 06B0                              u6230 2226  
                            u6400 19CC                              u6065 11C8  
                            u5185 0548                              u6410 1A5A  
                            u6075 1212                              u5515 09B4  
                            u5435 08AE                              u5355 07A8  
                            u5275 06A4                              u5195 05AC  
                            u4740 1CB6                              u6500 1BA0  
                            u6420 1A98                              u6085 127C  
                            u5800 0CDA                              u6280 226A  
                            u4745 1CAA                              u5810 0D24  
                            u4755 1D0E                              u4780 1D62  
                            u6380 1940                              u5805 0CD0  
                            u5670 0BCC                              u5590 0AC6  
                            u4950 1FBA                              u4870 1EB8  
                            u5815 0D1A                              u6295 226C  
                            u6560 1C6E                              u5825 0D84  
                            u4785 1D56                              u5930 0F56  
                            u5675 0BC0                              u5595 0ABA  
                            u4955 1FAE                              u4875 1EAC  
                            u4795 1DBA                              u5940 0FA0  
                            u4980 01E6                              u5935 0F4C  
                            u5945 0F96                              u4985 01DA  
                            u6577 2536                              u5955 1000  
                            u4995 023E                              _TMR2 000FCC  
             __size_of_CANSetMask 035E                              abs@a 001E  
                            _main 1874                              fsr0h 000FEA  
                            fsr1h 000FE2                              fsr0l 000FE9  
                            fsr2h 000FDA                              indf1 000FE7  
                            fsr1l 000FE1                              indf2 000FDF  
                            fsr2l 000FD9                              btemp 0042  
                            pclat 000FFA                              prodh 000FF4  
                            prodl 000FF3                              start 01AA  
                   __CFG_IESO$OFF 000000                     __CFG_MCLRE$ON 000000  
                    ___param_bank 000010                  _CANOperationMode 25F4  
          __end_of_SetOutputEPWM1 249A                             ??_abs 0020  
      __size_of_CANreceiveMessage 050C                             ?_main 0001  
                 __end_of___awdiv 23CC                   ___awdiv@divisor 0020  
                           _T2CON 000FCA                             _T3CON 000FB1  
                           i1l412 1600                             i1l563 25F0  
                           i1l660 0122                             i1l661 0144  
                           i1l653 0148                             i1l662 0126  
                           i1l663 012A                             i1l665 0162  
                 ___awdiv@counter 00A3                             _TMR3H 000FB3  
                           _TMR3L 000FB2                 _CANisRxReady$3034 0001  
                           _TRISA 000F92                             _TRISB 000F93  
                           _TRISC 000F94                             _TRISD 000F95  
                           _TRISE 000F96                     __CFG_PWRT$OFF 000000  
                   __CFG_WRT0$OFF 000000                     __CFG_WRT1$OFF 000000  
              __size_of_ISR_bassa 0192                    __CFG_EBTR0$OFF 000000  
                  __CFG_FCMEN$OFF 000000                    __CFG_EBTR1$OFF 000000  
              CANInitialize@flags 00B0                     __CFG_WRTB$OFF 000000  
                   __CFG_WRTC$OFF 000000                     __CFG_WRTD$OFF 000000  
                  __CFG_EBTRB$OFF 000000                             _vBatt 0037  
                  __pbitbssCOMRAM 01F0              __end_of_CANisRxReady 25F4  
                           tablat 000FF5              __end_of_CANisTxReady 25C2  
                           status 000FD8                    __CFG_PBADEN$ON 000000  
                      _SetDCEPWM1 24DC                   __initialization 249A  
        __size_of_battery_measure 008A                      __end_of_main 1C84  
                 ?_SetOutputEPWM1 001E                            ??_main 00B8  
                   __activetblptr 000002                 _CANisTxReady$3032 001E  
                   _counter_array 0060                            _CANCON 000F6F  
                          _ADRESH 000FC4                  ___awdiv@dividend 001E  
                 __CFG_BBSIZ$1024 000000                            i1l3520 15C8  
                          i1l3512 158C                            i1l3504 1550  
                          i1l3522 15FA                            i1l3516 15AA  
                          i1l3508 156E                            i1l3570 17EA  
                          i1l3802 00A0                            i1l3812 00EA  
                          i1l3582 183E                            i1l3574 1806  
                          i1l3566 17CE                            i1l3558 1760  
                          i1l3822 012E                            i1l3806 00D0  
                          i1l3584 1870                            i1l3496 14E0  
                          i1l3816 010A                            i1l3578 1822  
                          i1l3794 0066                        _OpenTimer2 25C2  
                          _RXB0D0 000F66                            _RXB0D1 000F67  
                          _RXB0D2 000F68                            _RXB0D3 000F69  
                          _RXB0D4 000F6A                            _RXB1D0 000F56  
                          _RXB0D5 000F6B                            _RXB1D1 000F57  
                          _RXB0D6 000F6C                            _RXB1D2 000F58  
                          _RXB0D7 000F6D                            _RXB1D3 000F59  
                          _RXB1D4 000F5A                            _RXB1D5 000F5B  
                          _RXB1D6 000F5C                            _RXB1D7 000F5D  
                          _TXB0D0 000F46                            _TXB0D1 000F47  
                          _TXB0D2 000F48                            _TXB0D3 000F49  
                          _TXB1D0 000F36                            _TXB0D4 000F4A  
                          _TXB1D1 000F37                            _TXB0D5 000F4B  
                          _TXB1D2 000F38                            _TXB0D6 000F4C  
                          _TXB1D3 000F39                            _TXB0D7 000F4D  
                          _TXB2D0 000F26                            _TXB1D4 000F3A  
                          _TXB2D1 000F27                            _TXB1D5 000F3B  
                          _TXB2D2 000F28                            _TXB1D6 000F3C  
                          _TXB2D3 000F29                            _TXB1D7 000F3D  
                          _TXB2D4 000F2A                            _TXB2D5 000F2B  
                          _TXB2D6 000F2C                            _TXB2D7 000F2D  
              CANsendMessage@data 00A7                CANsendMessage@tamp 00AB  
                __end_of_delay_ms 254A             __size_of_CANSetFilter 0A46  
                  __CFG_XINST$OFF 000000                __size_of_OpenEPWM1 0010  
               __end_of_ISR_bassa 01AA                            ___wmul 254A  
                       ??___awdiv 0022                    __CFG_STVREN$ON 000000  
                    ??_CANSetMask 00A3                            _errore 0035  
                OpenTimer2@config 001E                            clear_0 24A0  
                          clear_1 24B0                  ___awdiv@quotient 00A5  
        ?_configurazione_iniziale 0001                   __CFG_BOREN$BOHW 000000  
                    __pdataCOMRAM 0040                            tblptrh 000FF7  
                          tblptrl 000FF6                            tblptru 000FF8  
                    _CANSetFilter 01AE                        __accesstop 0060  
         __end_of__initialization 24CE                __end_of_CANSetMask 1FE2  
                   ___rparam_used 000001         __size_of_CANisRXwarningON 000C  
                     ?_SetDCEPWM1 001E                    __pcstackCOMRAM 0001  
               ??_battery_measure 0024             CANSetFilter@numBuffer 00A7  
                 OpenEPWM1@period 001E         __size_of_CANisTXwarningON 000C  
           __size_of_CANisRxReady 0016             __size_of_CANisTxReady 001E  
               __end_of_OpenEPWM1 2616          __end_of_CANOperationMode 2606  
                      __pbssBANK0 0060                       ?_OpenTimer2 0001  
                      _data_array 0093           __size_of_CANsendMessage 0774  
                         ?___wmul 00A7                __size_of_send_data 00F4  
                    _CANisRxReady 25DE                           _ECCPR1L 000FBB  
                         _CANSTAT 000F6E                      _CANisTxReady 25A4  
                         _BRGCON1 000F70                           _BRGCON2 000F71  
                         _BRGCON3 000F72            __size_of_CANInitialize 01B2  
                       ?_delay_ms 00AB                           _RXB0DLC 000F65  
                         _RXB1DLC 000F55                           _RXB0CON 000F60  
             __size_of_SetDCEPWM1 003A                           _RXB1CON 000F50  
                         _TXB0DLC 000F45                           _TXB1DLC 000F35  
                         _TXB2DLC 000F25               CANsendMessage@flags 00AA  
        SetOutputEPWM1@outputmode 001E                        _correzione 002F  
                ??_SetOutputEPWM1 001F                           __Hparam 0000  
                      _left_speed 003A                           __Lparam 0000  
                delay_ms@value_ms 00AB                           ___awdiv 2330  
                 __size_of___wmul 0032              CANInitialize@propSeg 00B5  
                         __pcinit 249A                           __ramtop 0300  
             __size_of_OpenTimer2 001C                           __ptext0 1874  
                         __ptext1 2194                           __ptext2 2288  
                         __ptext3 2516                           __ptext4 1FE2  
                         __ptext5 1C84                           __ptext6 01AE  
                         __ptext7 25F4                           __ptext8 23CC  
                         __ptext9 254A                           _counter 0070  
                       _T2CONbits 000FCA                      __size_of_abs 0028  
                      _duty_cycle 0033                        ??_delay_ms 0024  
          CANreceiveMessage@error 000B              end_of_initialization 24CE  
               __end_of_send_data 2288                     __Lmediumconst 0000  
                _CANisRXwarningON 2622                     _CANInitialize 1FE2  
                         postdec2 000FDD                           postinc0 000FEE  
                         postinc2 000FDE                         _ISR_bassa 0018  
                       _PORTAbits 000F80                    CANSetMask@mask 001E  
                       _PORTCbits 000F82                    CANSetMask@tamp 00A8  
                  _centralina_abs 01F1                    CANSetMask@type 0022  
                _CANisTXwarningON 2616                         _TRISDbits 000F95  
__size_of_configurazione_iniziale 00A8               _previousTimeCounter 0078  
         _clock_counter_reference 002D                    _CANsendMessage 0BF4  
                CANInitialize@BRP 00AF                  CANInitialize@SJW 00AE  
                  ?_CANInitialize 00AC                        main@period 0024  
                    ??_SetDCEPWM1 0020                   _battery_measure 23CC  
                      ?_ISR_bassa 0001                    __end_of___wmul 257C  
                   __pidataCOMRAM 262E               start_initialization 249A  
                     __end_of_abs 25A4                __end_of_SetDCEPWM1 2516  
             CANSetMask@numBuffer 00A7            __end_of_CANsendMessage 1368  
               ?_CANOperationMode 0001                      ??_OpenTimer2 001E  
                       _OpenEPWM1 2606                ??_CANOperationMode 001E  
      CANInitialize@FilterConfig1 00B6        CANInitialize@FilterConfig2 00B7  
                        ??___wmul 0022                  __CFG_LPT1OSC$OFF 000000  
              __end_of_OpenTimer2 25DE            CANInitialize@phaseSeg1 00AC  
          CANInitialize@phaseSeg2 00AD                       __pbssCOMRAM 0025  
                   __pcstackBANK0 00A3                       _BRGCON2bits 000F71  
                     _BRGCON3bits 000F72                       _data_array1 009B  
             SetDCEPWM1@dutycycle 001E                 __size_of_delay_ms 0034  
                 ?_CANsendMessage 00A3                        ?_OpenEPWM1 0001  
         __end_of_battery_measure 2456                   ??_CANInitialize 00B1  
                       _can_retry 01F0                      _currentSpeed 0040  
              CANSetFilter@filter 001E                          ?___awdiv 001E  
                     ??_ISR_bassa 000D                       __pintcodelo 0018  
                      send_data@i 0022                          _ECCP1CON 000FBA  
        __end_of_CANisRXwarningON 262E                       _COMSTATbits 000F74  
      SetOutputEPWM1@outputconfig 001F                     _remote_frame1 01F6  
         _configurazione_iniziale 2288                      _message_sent 01F4  
           CANreceiveMessage@tamp 000C                    ___wmul@product 0022  
                        _IPR2bits 000FA2      _delay_quartz_frequency_value 0041  
                        _PIE1bits 000F9D                          _IPR3bits 000FA5  
                        _PIE2bits 000FA0                         _send_data 2194  
                        _PIE3bits 000FA3          __end_of_CANisTXwarningON 2622  
                        i1u400_20 16A8                          i1u400_26 16AA  
                        i1u401_20 16D2                          i1u401_26 16D4  
                        i1u403_25 16E6                          i1u441_20 009E  
                        i1u409_25 184A                          i1u390_20 144E  
                        i1u390_26 1450                          i1u392_25 1464  
                        i1u389_20 1420                          i1u389_26 1422  
                        i1u398_25 15D4                          _PIR1bits 000F9E  
                        _PIR2bits 000FA1                          _PIR3bits 000FA4  
                        _RXB0EIDH 000F63                          _RXB0EIDL 000F64  
                        _RXB1EIDH 000F53                          _RXB1EIDL 000F54  
                        _RCONbits 000FD0                  __CFG_WDTPS$32768 000000  
                        _RXB0SIDH 000F61                          _RXB0SIDL 000F62  
                        _RXF0EIDH 000F02                          _RXB1SIDH 000F51  
                        _RXF0EIDL 000F03                          _RXB1SIDL 000F52  
                        _RXF1EIDH 000F06                          _RXF1EIDL 000F07  
                        _RXF2EIDH 000F0A                          _RXF2EIDL 000F0B  
                        _RXF3EIDH 000F0E                          _RXF3EIDL 000F0F  
                        _RXF4EIDH 000F12                          _RXF4EIDL 000F13  
                        _RXF5EIDH 000F16                          _RXF5EIDL 000F17  
                        _RXF0SIDH 000F00                          _RXF0SIDL 000F01  
                        _TXB0EIDH 000F43                          _RXF1SIDH 000F04  
                        _TXB0EIDL 000F44                          _RXF1SIDL 000F05  
                        _TXB1EIDH 000F33                          _RXF2SIDH 000F08  
                        _TXB1EIDL 000F34                          _RXF2SIDL 000F09  
                        _TXB2EIDH 000F23                          _RXF3SIDH 000F0C  
                        _TXB2EIDL 000F24                          _RXF3SIDL 000F0D  
                        _RXF4SIDH 000F10                          _RXF4SIDL 000F11  
                        _RXF5SIDH 000F14                          _RXF5SIDL 000F15  
                        _RXM0EIDH 000F1A                          _RXM0EIDL 000F1B  
                        _TXB0SIDH 000F41                          _RXM1EIDH 000F1E  
                        _TXB0SIDL 000F42                          _RXM1EIDL 000F1F  
                        _TXB1SIDH 000F31                          _TXB1SIDL 000F32  
                        _TXB2SIDH 000F21                          _TXB2SIDL 000F22  
                        _RXM0SIDH 000F18                          _RXM0SIDL 000F19  
                        _RXM1SIDH 000F1C                          _RXM1SIDL 000F1D  
                        _RXERRCNT 000F75                          _TXERRCNT 000F76  
                      _ADCON0bits 000FC2                        _ADCON1bits 000FC1  
                      _ADCON2bits 000FC0                 ___wmul@multiplier 00A7  
                   ?_CANSetFilter 001E                       _INTCON2bits 000FF1  
                      _CANCONbits 000F6F                       ??_OpenEPWM1 001E  
                ?_battery_measure 0001                        ?_send_data 0001  
                        __Hrparam 0000                      _RXB0SIDLbits 000F62  
                SetDCEPWM1@DCycle 0022                          __Lrparam 0000  
                    _RXB1SIDLbits 000F52                _centralina_comando 01F2  
                      _CANSetMask 1C84                  __size_of___awdiv 009C  
         __size_of_SetOutputEPWM1 0044                _currentSpeed_array 0068  
       ??_configurazione_iniziale 0024                      _RXF0SIDLbits 000F01  
                        _delay_ms 2516                      _RXF1SIDLbits 000F05  
                  ??_CANSetFilter 00A3                          __ptext10 2330  
                        __ptext11 0BF4                          __ptext12 25A4  
                        __ptext21 1368                          __ptext13 257C  
                        __ptext22 25DE                          __ptext14 2456  
                        __ptext15 24DC                          __ptext16 25C2  
                        __ptext17 2606                          __ptext18 2616  
                        __ptext19 2622                      _RXF2SIDLbits 000F09  
                    _RXF3SIDLbits 000F0D                      _RXF4SIDLbits 000F11  
                   _speed_fetched 01F8                      _RXF5SIDLbits 000F15  
        CANsendMessage@dataLength 00A9                      _remote_frame 01F5  
                   __size_of_main 0410                          _duty_set 0039  
            CANreceiveMessage@msg 0001                      _TXB0SIDLbits 000F42  
                    _TXB1SIDLbits 000F32                      _TXB2SIDLbits 000F22  
                        int$flags 0042         __size_of_CANOperationMode 0012  
                   ?_CANisRxReady 0001                     ?_CANisTxReady 0001  
                     _RXB0DLCbits 000F65                       _RXB1DLCbits 000F55  
                    _RXM0SIDLbits 000F19                       _RXB0CONbits 000F60  
                     _RXB1CONbits 000F50                 _CANreceiveMessage 1368  
                    _RXM1SIDLbits 000F1D                        _INTCONbits 000FF2  
                ??_CANsendMessage 001E                      _requestSpeed 003C  
              ?_CANreceiveMessage 0001                      _request_sent 01F7  
        CANsendMessage@identifier 00A3                          intlevel1 0000  
               _centralina_sterzo 01F3                  CANSetFilter@tamp 00A8  
                CANSetFilter@type 0022               ??_CANreceiveMessage 0003  
                     _TXB0DLCbits 000F45                       _right_speed 003D  
                     _TXB1DLCbits 000F35                       _TXB0CONbits 000F40  
                     ??_send_data 0022                       _TXB2DLCbits 000F25  
 __end_of_configurazione_iniziale 2330                       _TXB1CONbits 000F30  
                     _TXB2CONbits 000F20                       _timeCounter 0029  
            CANOperationMode@mode 001E                    ??_CANisRxReady 0001  
                     ?_CANSetMask 001E                    ??_CANisTxReady 001E  
       __end_of_CANreceiveMessage 1874                 ?_CANisRXwarningON 0001  
              ??_CANisRXwarningON 001E                       _previousPwm 003B  
           __end_of_CANInitialize 2194                 ?_CANisTXwarningON 0001  
